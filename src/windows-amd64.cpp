// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 2/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1ad0d9888_Importer{};
struct _1ad184ceb_Kind{};
struct _1ad1a5bb8_Lookup{};
struct _1bae0a877_CommonFlag{};
struct _1dbac6137_acceptRange;
struct _1a91cd233_Range16;
struct _1a91cd6a6_Range32;
struct _1a91cdb29_RangeTable;
struct _1a91d3ac9_lazyBuff;
struct _1d9e50172_DirEntry;
struct _1d9e51daa_Directory;
struct _1dba012b5_File;
struct _1dba014a2_Status;
struct _1a92b103b_Cmd;
struct _1a92722b6_Log;
struct _1a959a127_Token;
struct _1a95a04b2_File;
struct _1a95a2519_kindPair;
struct _1a95a8113_lex;
struct _1ac4107d6_Ast;
struct _1ac411562_Node;
struct _1ac41195d_Directive;
struct _1ac449eb3_TypeDecl;
struct _1ac44a579_IdentTypeDecl;
struct _1ac44abc8_SubIdentTypeDecl;
struct _1ac44b080_NamespaceTypeDecl;
struct _1ac44b36b_SptrTypeDecl;
struct _1ac44b767_SlcTypeDecl;
struct _1ac44ba53_TupleTypeDecl;
struct _1ac44bd3e_PtrTypeDecl;
struct _1ac44c4c1_ArrTypeDecl;
struct _1ac44cc1e_MapTypeDecl;
struct _1ac44d0c6_RetTypeDecl;
struct _1ac44e4d4_Expr;
struct _1ac44e7c0_RangeExpr;
struct _1ac44ed75_UseExpr;
struct _1ac450161_TupleExpr;
struct _1ac450518_LitExpr;
struct _1ac450c22_UnsafeExpr;
struct _1ac4510c9_CoExpr;
struct _1ac45154c_IdentExpr;
struct _1ac451c56_UnaryExpr;
struct _1ac45210d_VariadicExpr;
struct _1ac4524b5_CastExpr;
struct _1ac45286c_NsSelectionExpr;
struct _1ac452ce0_SubIdentExpr;
struct _1ac453263_BinopExpr;
struct _1ac4537a2_FnCallExpr;
struct _1ac454231_FieldExprPair;
struct _1ac45497e_StructLit;
struct _1ac454e02_BraceLit;
struct _1ac455919_KeyValPair;
struct _1ac455d8c_SliceExpr;
struct _1ac45672d_IndexingExpr;
struct _1ac456d38_SlicingExpr;
struct _1ac457124_Constraint;
struct _1ac457597_GenericDecl;
struct _1ac45794e_LabelSt;
struct _1ac457d06_GotoSt;
struct _1ac4580e2_FallSt;
struct _1ac4586ec_AssignLeft;
struct _1ac458c3b_AssignSt;
struct _1ac459bc6_Stmt;
struct _1ac45a2d1_ScopeTree;
struct _1ac45a9a7_ParamDecl;
struct _1ac45bcc7_FnDecl;
struct _1ac45cca6_VarDecl;
struct _1ac45d15d_RetSt;
struct _1ac45d7bd_Iter;
struct _1ac45e093_WhileKind;
struct _1ac45e934_RangeKind;
struct _1ac45ecdb_BreakSt;
struct _1ac460193_ContSt;
struct _1ac460616_If;
struct _1ac4609bd_Else;
struct _1ac460e41_Conditional;
struct _1ac461617_TypeAliasDecl;
struct _1ac461a8a_Case;
struct _1ac462261_MatchCase;
struct _1ac462a03_UseDecl;
struct _1ac462e76_EnumItemDecl;
struct _1ac46399e_EnumDecl;
struct _1ac4644a5_TypeEnumItemDecl;
struct _1ac4646a3_TypeEnumDecl;
struct _1ac464c03_FieldDecl;
struct _1ac465561_StructDecl;
struct _1ac465b6b_TraitDecl;
struct _1ac466276_Impl;
struct _1ac49c202_Const;
struct _1acbbc9cc_floatInfo;
struct _1acabe7d0_decimalSlice;
struct _1ad0c0671_leftCheat;
struct _1ad0c09d4_decimal;
struct _1ac427d4d_Field;
struct _1ac43c11a_Operators;
struct _1ac43a6e0_Struct;
struct _1ac442d57_FieldIns;
struct _1ac50a716_OperandExprModel;
struct _1ac50a903_BinopExprModel;
struct _1ac50aae0_UnaryExprModel;
struct _1ac50accc_StructArgExprModel;
struct _1ac50aeb9_StructLitExprModel;
struct _1ac50b1a6_AllocStructLitExprModel;
struct _1ac50b393_CastingExprModel;
struct _1ac50b580_FnCallExprModel;
struct _1ac50b76c_SliceExprModel;
struct _1ac50b959_IndexingExprModel;
struct _1ac50bb46_AnonFnExprModel;
struct _1ac50bd33_KeyValPairExprModel;
struct _1ac50c020_MapExprModel;
struct _1ac50c20c_SlicingExprModel;
struct _1ac50c3e9_TraitSubIdentExprModel;
struct _1ac50c817_StructSubIdentExprModel;
struct _1ac50ca04_StructStaticIdentExprModel;
struct _1ac50cbe1_ArrayExprModel;
struct _1ac50cdcd_CommonIdentExprModel;
struct _1ac50d0ba_CommonSubIdentExprModel;
struct _1ac50d2a7_TupleExprModel;
struct _1ac50d494_BuiltinOutCallExprModel;
struct _1ac50d681_BuiltinOutlnCallExprModel;
struct _1ac50d86d_BuiltinCloneCallExprModel;
struct _1ac50da5a_BuiltinNewCallExprModel;
struct _1ac50dc47_BuiltinPanicCallExprModel;
struct _1ac50de34_BuiltinAssertCallExprModel;
struct _1ac50e121_BuiltinMakeCallExprModel;
struct _1ac50e30d_BuiltinAppendCallExprModel;
struct _1ac50e4ea_BuiltinCopyCallExprModel;
struct _1ac50e6d7_BuiltinErrorCallExprModel;
struct _1ac50c5d6_SizeofExprModel;
struct _1ac50ed47_AlignofExprModel;
struct _1ac510034_RuneExprModel;
struct _1ac510221_IntegratedToStrExprModel;
struct _1ac51040d_BackendEmitExprModel;
struct _1ac5105ea_FreeExprModel;
struct _1ac510b7d_RetType;
struct _1ac511343_Param;
struct _1ac512b80_Fn;
struct _1ac514962_ParamIns;
struct _1ac515831_FnIns;
struct _1ac518702_ReferenceStack;
struct _1ac519abb_Pass;
struct _1ac51e065_symbolBuilder;
struct _1ac524a3d_Trait;
struct _1ac52618d_EnumItem;
struct _1ac526b83_Enum;
struct _1ac527bb7_TypeEnumItem;
struct _1ac52827d_TypeEnum;
struct _1ac540d78_constraintChecker;
struct _1ac5ae0b1_Impl;
struct _1ad0c4994_Scope;
struct _1ad0c4b81_If;
struct _1ad0c4d6d_Else;
struct _1ad0c505a_Conditional;
struct _1ad0c5247_InfIter;
struct _1ad0c5434_WhileIter;
struct _1ad0c5621_RangeIter;
struct _1ad0c580d_ContSt;
struct _1ad0c59ea_BreakSt;
struct _1ad0c5bd7_Label;
struct _1ad0c5dc4_GotoSt;
struct _1ad0c60b1_Postfix;
struct _1ad0c629d_Assign;
struct _1ad0c648a_MultiAssign;
struct _1ad0c6677_Match;
struct _1ad0c6bc7_Case;
struct _1ad0c6ee6_FallSt;
struct _1ad0c71d3_RetSt;
struct _1ad0c73c0_scopeLabel;
struct _1ad0c75ac_scopeGoto;
struct _1ad0c7799_scopeChecker;
struct _1ad0d6478_directiveChecker;
struct _1ad0dc11b_ImportInfo;
struct _1ad0e0075_Package;
struct _1ad0e5267_Sema;
struct _1ad10e46d_missingRetChecker;
struct _1ad11112e_IterRelation;
struct _1ad112097_Var;
struct _1ad112ac0_FuncPattern;
struct _1ad1430ea_typeCompatibilityChecker;
struct _1ad144c23_assignTypeChecker;
struct _1ad14663c_dynamicTypeAnnotation;
struct _1ad14ae38_fnCallArgChecker;
struct _1ad14d842_structLitChecker;
struct _1ad150426_rangeChecker;
struct _1ad15257c_retTypeChecker;
struct _1ad15442a_SymbolTable;
struct _1ad159188_Data;
struct _1ad15a211_Value;
struct _1ad15ac06_Eval;
struct _1ad176e42_unaryEval;
struct _1ad178bd0_binaryEval;
struct _1ad1839ed_InsGeneric;
struct _1ad184537_TypeAlias;
struct _1ad18522a_TypeKind;
struct _1ad189383_TypeSymbol;
struct _1ad189c02_Prim;
struct _1ad18d486_Sptr;
struct _1ad18dde3_Slc;
struct _1ad18e971_Tuple;
struct _1ad190499_Map;
struct _1ad19108d_Arr;
struct _1ad1919ea_Ptr;
struct _1ad192941_referencer;
struct _1ad193755_typeChecker;
struct _1ad1a0cc3_identTypeLookup;
struct _1a9652036_FileInfo;
struct _1ad8c1625_stmt;
struct _1ad8c1e50_scopeParser;
struct _1ad8cd368_exprBuilder;
struct _1ad8d9bc1_assignInfo;
struct _1ad8dd4ee_parser;
struct _1ad8ee5cb_typeBuilder;
struct _1ac263590_CompileInfo;
struct _1ac2648e3_directiveEval;
struct _1a964cb25_JuleImporter;
struct _1ad902d4e_OrderedDefines;
struct _1ad90303b_defineOrderer;
struct _1ad9e3967_liveTable;
struct _1ada25625_scopeDeadCode;
struct _1ada29580_exprDeadCode;
struct _1dbcb83c3_UnsafeBinopExprModel;
struct _1ac0eb626_UnsafeIndexingExprModel;
struct _1c16a67e3_PushToSliceExprModel;
struct _1ac0c0144_MutSlicingExprModel;
struct _1ac190610_StrInsertBeginExprModel;
struct _1ac0e3a4c_scopeOptimizer;
struct _1aa427811_exprOptimizer;
struct _1ad9eddd4_Optimizer;
struct _1ada33622_AnsiEscape;
struct _1ada34c0b_Logger;
struct _1badb437a_AbsTime;
struct _1badb4a1d_Time;
struct _1bad395a8_scopeCoder;
struct _1bad420e9_exprCoder;
struct _1bad4eee7_deriveCoder;
struct _1bad51427_TestCoder;
struct _1bad53a78_identCoder;
struct _1badb9d42_SerializationInfo;
struct _1badba02e_traitHash;
struct _1badc0c5a_customType;
struct _1badc1552_typeCoder;
struct _1bd6c9929_Flag;
struct _1bd6cd5dc_Flag;
struct _1bd6d20c4_Flag;
struct _1bd6d5b00_Flag;
struct _1bd6d95d7_Flag;
struct _1bae0c2e6_FlagSet;
struct _1ad8ad38c_IR;
struct _1ac466a3a_StructIns;
struct _1ad9e3c97_ObjectDeadCode;
struct _1badba21b_ObjectCoder;
struct _1bae0e9be_argParser;
struct _1dbac6137_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1dbac6137_acceptRange(void) = default;

	inline bool operator==(_1dbac6137_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1dbac6137_acceptRange _other) { return !this->operator==(_other); }


};
struct _1a91cd233_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_1a91cd233_Range16(void) = default;

	inline bool operator==(_1a91cd233_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a91cd233_Range16 _other) { return !this->operator==(_other); }


};
struct _1a91cd6a6_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_1a91cd6a6_Range32(void) = default;

	inline bool operator==(_1a91cd6a6_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a91cd6a6_Range32 _other) { return !this->operator==(_other); }


};
struct _1a91cdb29_RangeTable {
	jule::Slice<_1a91cd233_Range16> _field_R16 = jule::Slice<_1a91cd233_Range16>();
	jule::Slice<_1a91cd6a6_Range32> _field_R32 = jule::Slice<_1a91cd6a6_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_1a91cdb29_RangeTable(void) = default;

	inline bool operator==(_1a91cdb29_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_1a91cdb29_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a91d3cb6_index(_1a91d3ac9_lazyBuff*, jule::I64);
inline void _1a91d3de8_append(_1a91d3ac9_lazyBuff*, jule::U8);
inline jule::Str _1a91d402a_string(_1a91d3ac9_lazyBuff*);
struct _1a91d3ac9_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_1a91d3ac9_lazyBuff(void) = default;

	inline bool operator==(_1a91d3ac9_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_1a91d3ac9_lazyBuff _other) { return !this->operator==(_other); }


};
struct _1d9e50172_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_1dba014a2_Status> _field_Stat = jule::Ptr<_1dba014a2_Status>();
	

	_1d9e50172_DirEntry(void) = default;

	inline bool operator==(_1d9e50172_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d9e50172_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>> static__1a91d4c40_Read(jule::Str);
inline jule::VoidExceptional static__1a91d4d72_Create(jule::Str);
inline jule::VoidExceptional static__1a91d4ea4_Remove(jule::Str);
struct _1d9e51daa_Directory {
	

	_1d9e51daa_Directory(void) = default;

	inline bool operator==(_1d9e51daa_Directory _other) { return true; }

	inline bool operator!=(_1d9e51daa_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dba012b5_File> static__1d9e38017_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1dba012b5_File>> static__1d9e387ba_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d9e39348_Read(jule::Str);
inline jule::VoidExceptional static__1d9e39d2c_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1d9e3b38e_Seek(_1dba012b5_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1d9e3bdd9_Close(_1dba012b5_File*);
inline jule::Exceptional<jule::Ptr<_1dba012b5_File>> static__1dbb2770a_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1dbb27919_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1dbb27d26_Write(_1dba012b5_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1dbb28134_Read(_1dba012b5_File*, jule::Slice<jule::U8>);
struct _1dba012b5_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1dba012b5_File(void) = default;

	inline bool operator==(_1dba012b5_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1dba012b5_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d9e3de63_IsDir(_1dba014a2_Status*);
inline jule::Bool _1d9e4022d_IsReg(_1dba014a2_Status*);
inline jule::Exceptional<jule::Ptr<_1dba014a2_Status>> static__1a91d52b2_Of(jule::Str);
struct _1dba014a2_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_1dba014a2_Status(void) = default;

	inline bool operator==(_1dba014a2_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1dba014a2_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a92b103b_Cmd> static__1a92b146a_New(jule::Str);
inline jule::Exceptional<jule::I64> _1a92b16ce_Spawn(_1a92b103b_Cmd*);
inline jule::Exceptional<jule::I64> _1a92c1205_spawn(_1a92b103b_Cmd*);
struct _1a92b103b_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_1a92b103b_Cmd(void) = default;

	inline bool operator==(_1a92b103b_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_1a92b103b_Cmd _other) { return !this->operator==(_other); }


};
struct _1a92722b6_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_1a92722b6_Log(void) = default;

	inline bool operator==(_1a92722b6_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1a92722b6_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a959a4ce_Prec(_1a959a127_Token*);
struct _1a959a127_Token {
	jule::Ptr<_1a95a04b2_File> _field_File = jule::Ptr<_1a95a04b2_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1a959a127_Token(void) = default;

	inline bool operator==(_1a959a127_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a959a127_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a95a08be_IsOk(_1a95a04b2_File*);
inline void _1a95a0b44_Fill(_1a95a04b2_File*, jule::Slice<jule::U8>);
inline jule::Str _1a95a0da8_Dir(_1a95a04b2_File*);
inline jule::Str _1a95a111c_Name(_1a95a04b2_File*);
inline jule::Uintptr _1a95a1381_Addr(_1a95a04b2_File*);
inline jule::Str _1a95a168e_GetRow(_1a95a04b2_File*, jule::I64);
struct _1a95a04b2_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	

	_1a95a04b2_File(void) = default;

	inline bool operator==(_1a95a04b2_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1a95a04b2_File _other) { return !this->operator==(_other); }


};
struct _1a95a2519_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1a95a2519_kindPair(void) = default;

	inline bool operator==(_1a95a2519_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a95a2519_kindPair _other) { return !this->operator==(_other); }


};
inline void _1a95a86a7_pushErr(_1a95a8113_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1a95a89c6_pushErrTok(_1a95a8113_lex*, jule::Ptr<_1a959a127_Token>&, jule::Str);
inline void _1a95a8ba2_lex(_1a95a8113_lex*);
inline jule::Str _1a95a8eb0_id(_1a95a8113_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a95a9224_resume(_1a95a8113_lex*);
inline void _1a95a9499_lexLineComment(_1a95a8113_lex*, jule::Ptr<_1a959a127_Token>&);
inline void _1a95a971e_lexRangeComment(_1a95a8113_lex*, jule::Ptr<_1a959a127_Token>&);
inline jule::Str _1a95a9a2c_num(_1a95a8113_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a95a9d3a_escapeSeq(_1a95a8113_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a95aa1e2_getRune(_1a95a8113_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1a95aa500_lexRune(_1a95a8113_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1a95aa764_lexStr(_1a95a8113_lex*);
inline jule::Bool _1a95aa9c8_isFirstTokenOfLine(_1a95a8113_lex*);
inline void _1a95aaba4_newLine(_1a95a8113_lex*);
inline jule::Bool _1a95ab19e_isOp(_1a95a8113_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1a95ab556_lexBasicOps(_1a95a8113_lex*, jule::Slice<jule::U8>, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1a95ab90d_lexId(_1a95a8113_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1a95abcb5_lexNum(_1a95a8113_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1a959a127_Token> _1a95ac029_token(_1a95a8113_lex*);
struct _1a95a8113_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Ptr<_1a95a04b2_File> _field_file = jule::Ptr<_1a95a04b2_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1a92722b6_Log> _field_errors = jule::Slice<_1a92722b6_Log>();
	

	_1a95a8113_lex(void) = default;

	inline bool operator==(_1a95a8113_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a95a8113_lex _other) { return !this->operator==(_other); }


};
struct _1ac4107d6_Ast {
	jule::Ptr<_1a95a04b2_File> _field_File = jule::Ptr<_1a95a04b2_File>();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Slice<jule::Ptr<_1ac462a03_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1ac462a03_UseDecl>>();
	jule::Slice<_1ac411562_Node> _field_Nodes = jule::Slice<_1ac411562_Node>();
	

	_1ac4107d6_Ast(void) = default;

	inline bool operator==(_1ac4107d6_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1ac4107d6_Ast _other) { return !this->operator==(_other); }


};
struct _1ac411562_Node {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1ac411562_Node(void) = default;

	inline bool operator==(_1ac411562_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac411562_Node _other) { return !this->operator==(_other); }


};
struct _1ac41195d_Directive {
	jule::Ptr<_1a959a127_Token> _field_Tag = jule::Ptr<_1a959a127_Token>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Args = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	

	_1ac41195d_Directive(void) = default;

	inline bool operator==(_1ac41195d_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1ac41195d_Directive _other) { return !this->operator==(_other); }


};
struct _1ac449eb3_TypeDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1ac449eb3_TypeDecl(void) = default;

	inline bool operator==(_1ac449eb3_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac449eb3_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac44a8dc_IsPrim(_1ac44a579_IdentTypeDecl*);
struct _1ac44a579_IdentTypeDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>();
	

	_1ac44a579_IdentTypeDecl(void) = default;

	inline bool operator==(_1ac44a579_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1ac44a579_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44abc8_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ac44a579_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1ac44a579_IdentTypeDecl>>();
	

	_1ac44abc8_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1ac44abc8_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1ac44abc8_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44b080_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Idents = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac44b080_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1ac44b080_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac44b080_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44b36b_SptrTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Elem = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac44b36b_SptrTypeDecl(void) = default;

	inline bool operator==(_1ac44b36b_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac44b36b_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44b767_SlcTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Elem = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac44b767_SlcTypeDecl(void) = default;

	inline bool operator==(_1ac44b767_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac44b767_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44ba53_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>();
	

	_1ac44ba53_TupleTypeDecl(void) = default;

	inline bool operator==(_1ac44ba53_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1ac44ba53_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac44c191_IsUnsafe(_1ac44bd3e_PtrTypeDecl*);
struct _1ac44bd3e_PtrTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Elem = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac44bd3e_PtrTypeDecl(void) = default;

	inline bool operator==(_1ac44bd3e_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ac44bd3e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac44c89a_AutoSized(_1ac44c4c1_ArrTypeDecl*);
struct _1ac44c4c1_ArrTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Elem = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Size = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac44c4c1_ArrTypeDecl(void) = default;

	inline bool operator==(_1ac44c4c1_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ac44c4c1_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44cc1e_MapTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Key = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Val = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac44cc1e_MapTypeDecl(void) = default;

	inline bool operator==(_1ac44cc1e_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ac44cc1e_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44d0c6_RetTypeDecl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Idents = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	

	_1ac44d0c6_RetTypeDecl(void) = default;

	inline bool operator==(_1ac44d0c6_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1ac44d0c6_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ac44e4d4_Expr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1ac44e4d4_Expr(void) = default;

	inline bool operator==(_1ac44e4d4_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac44e4d4_Expr _other) { return !this->operator==(_other); }


};
struct _1ac44e7c0_RangeExpr {
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac44e7c0_RangeExpr(void) = default;

	inline bool operator==(_1ac44e7c0_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac44e7c0_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ac44ed75_UseExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac44ed75_UseExpr(void) = default;

	inline bool operator==(_1ac44ed75_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac44ed75_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ac450161_TupleExpr {
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	

	_1ac450161_TupleExpr(void) = default;

	inline bool operator==(_1ac450161_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac450161_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45086a_IsNil(_1ac450518_LitExpr*);
struct _1ac450518_LitExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1ac450518_LitExpr(void) = default;

	inline bool operator==(_1ac450518_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ac450518_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ac450c22_UnsafeExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac450c22_UnsafeExpr(void) = default;

	inline bool operator==(_1ac450c22_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac450c22_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1ac4510c9_CoExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac4510c9_CoExpr(void) = default;

	inline bool operator==(_1ac4510c9_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac4510c9_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45189e_IsSelf(_1ac45154c_IdentExpr*);
struct _1ac45154c_IdentExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1ac45154c_IdentExpr(void) = default;

	inline bool operator==(_1ac45154c_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1ac45154c_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ac451c56_UnaryExpr {
	jule::Ptr<_1a959a127_Token> _field_Op = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac451c56_UnaryExpr(void) = default;

	inline bool operator==(_1ac451c56_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac451c56_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ac45210d_VariadicExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac45210d_VariadicExpr(void) = default;

	inline bool operator==(_1ac45210d_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac45210d_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ac4524b5_CastExpr {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac4524b5_CastExpr(void) = default;

	inline bool operator==(_1ac4524b5_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac4524b5_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ac45286c_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Ns = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Ptr<_1a959a127_Token> _field_Ident = jule::Ptr<_1a959a127_Token>();
	

	_1ac45286c_NsSelectionExpr(void) = default;

	inline bool operator==(_1ac45286c_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac45286c_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1ac452ce0_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1a959a127_Token> _field_Ident = jule::Ptr<_1a959a127_Token>();
	

	_1ac452ce0_SubIdentExpr(void) = default;

	inline bool operator==(_1ac452ce0_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac452ce0_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ac453263_BinopExpr {
	jule::Ptr<_1ac44e4d4_Expr> _field_Left = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Right = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1a959a127_Token> _field_Op = jule::Ptr<_1a959a127_Token>();
	

	_1ac453263_BinopExpr(void) = default;

	inline bool operator==(_1ac453263_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac453263_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac453b15_Unhandled(_1ac4537a2_FnCallExpr*);
inline jule::Bool _1ac453d79_Ignored(_1ac4537a2_FnCallExpr*);
struct _1ac4537a2_FnCallExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Args = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Exception = jule::Ptr<_1ac45a2d1_ScopeTree>();
	

	_1ac4537a2_FnCallExpr(void) = default;

	inline bool operator==(_1ac4537a2_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1ac4537a2_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac454583_IsTargeted(_1ac454231_FieldExprPair*);
struct _1ac454231_FieldExprPair {
	jule::Ptr<_1a959a127_Token> _field_Field = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac454231_FieldExprPair(void) = default;

	inline bool operator==(_1ac454231_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac454231_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ac45497e_StructLit {
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	

	_1ac45497e_StructLit(void) = default;

	inline bool operator==(_1ac45497e_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1ac45497e_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac455573_IsEmpty(_1ac454e02_BraceLit*);
struct _1ac454e02_BraceLit {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	

	_1ac454e02_BraceLit(void) = default;

	inline bool operator==(_1ac454e02_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1ac454e02_BraceLit _other) { return !this->operator==(_other); }


};
struct _1ac455919_KeyValPair {
	jule::Ptr<_1ac44e4d4_Expr> _field_Key = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Val = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1a959a127_Token> _field_Colon = jule::Ptr<_1a959a127_Token>();
	

	_1ac455919_KeyValPair(void) = default;

	inline bool operator==(_1ac455919_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ac455919_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac4561de_IsEmpty(_1ac455d8c_SliceExpr*);
struct _1ac455d8c_SliceExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	

	_1ac455d8c_SliceExpr(void) = default;

	inline bool operator==(_1ac455d8c_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1ac455d8c_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1ac45672d_IndexingExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Index = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac45672d_IndexingExpr(void) = default;

	inline bool operator==(_1ac45672d_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ac45672d_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ac456d38_SlicingExpr {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Start = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac44e4d4_Expr> _field_To = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac456d38_SlicingExpr(void) = default;

	inline bool operator==(_1ac456d38_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ac456d38_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ac457124_Constraint {
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>();
	

	_1ac457124_Constraint(void) = default;

	inline bool operator==(_1ac457124_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1ac457124_Constraint _other) { return !this->operator==(_other); }


};
struct _1ac457597_GenericDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac457124_Constraint> _field_Constraint = jule::Ptr<_1ac457124_Constraint>();
	

	_1ac457597_GenericDecl(void) = default;

	inline bool operator==(_1ac457597_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ac457597_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ac45794e_LabelSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1ac45794e_LabelSt(void) = default;

	inline bool operator==(_1ac45794e_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac45794e_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ac457d06_GotoSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_Label = jule::Ptr<_1a959a127_Token>();
	

	_1ac457d06_GotoSt(void) = default;

	inline bool operator==(_1ac457d06_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac457d06_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ac4580e2_FallSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	

	_1ac4580e2_FallSt(void) = default;

	inline bool operator==(_1ac4580e2_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ac4580e2_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac4586ec_AssignLeft {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac4586ec_AssignLeft(void) = default;

	inline bool operator==(_1ac4586ec_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac4586ec_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ac458c3b_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1a959a127_Token> _field_Setter = jule::Ptr<_1a959a127_Token>();
	jule::Slice<jule::Ptr<_1ac4586ec_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1ac4586ec_AssignLeft>>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Right = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac458c3b_AssignSt(void) = default;

	inline bool operator==(_1ac458c3b_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac458c3b_AssignSt _other) { return !this->operator==(_other); }


};
struct _1ac459bc6_Stmt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1ac459bc6_Stmt(void) = default;

	inline bool operator==(_1ac459bc6_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ac459bc6_Stmt _other) { return !this->operator==(_other); }


};
struct _1ac45a2d1_ScopeTree {
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Parent = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1ac459bc6_Stmt> _field_Stmts = jule::Slice<_1ac459bc6_Stmt>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	

	_1ac45a2d1_ScopeTree(void) = default;

	inline bool operator==(_1ac45a2d1_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1ac45a2d1_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45ad1a_IsSelf(_1ac45a9a7_ParamDecl*);
inline jule::Bool _1ac45b07e_IsRef(_1ac45a9a7_ParamDecl*);
struct _1ac45a9a7_ParamDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1ac45a9a7_ParamDecl(void) = default;

	inline bool operator==(_1ac45a9a7_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac45a9a7_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45c129_IsAnon(_1ac45bcc7_FnDecl*);
struct _1ac45bcc7_FnDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	jule::Ptr<_1ac44d0c6_RetTypeDecl> _field_Result = jule::Ptr<_1ac44d0c6_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>>();
	

	_1ac45bcc7_FnDecl(void) = default;

	inline bool operator==(_1ac45bcc7_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1ac45bcc7_FnDecl _other) { return !this->operator==(_other); }


};
struct _1ac45cca6_VarDecl {
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac45cca6_VarDecl(void) = default;

	inline bool operator==(_1ac45cca6_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac45cca6_VarDecl _other) { return !this->operator==(_other); }


};
struct _1ac45d15d_RetSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac45d15d_RetSt(void) = default;

	inline bool operator==(_1ac45d15d_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac45d15d_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45db20_IsInf(_1ac45d7bd_Iter*);
struct _1ac45d7bd_Iter {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	

	_1ac45d7bd_Iter(void) = default;

	inline bool operator==(_1ac45d7bd_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac45d7bd_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac45e3e5_IsWhileNext(_1ac45e093_WhileKind*);
struct _1ac45e093_WhileKind {
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1a959a127_Token> _field_NextToken = jule::Ptr<_1a959a127_Token>();
	

	_1ac45e093_WhileKind(void) = default;

	inline bool operator==(_1ac45e093_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ac45e093_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ac45e934_RangeKind {
	jule::Ptr<_1a959a127_Token> _field_InToken = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac45cca6_VarDecl> _field_KeyA = jule::Ptr<_1ac45cca6_VarDecl>();
	jule::Ptr<_1ac45cca6_VarDecl> _field_KeyB = jule::Ptr<_1ac45cca6_VarDecl>();
	

	_1ac45e934_RangeKind(void) = default;

	inline bool operator==(_1ac45e934_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ac45e934_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ac45ecdb_BreakSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_Label = jule::Ptr<_1a959a127_Token>();
	

	_1ac45ecdb_BreakSt(void) = default;

	inline bool operator==(_1ac45ecdb_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac45ecdb_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ac460193_ContSt {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_Label = jule::Ptr<_1a959a127_Token>();
	

	_1ac460193_ContSt(void) = default;

	inline bool operator==(_1ac460193_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ac460193_ContSt _other) { return !this->operator==(_other); }


};
struct _1ac460616_If {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	

	_1ac460616_If(void) = default;

	inline bool operator==(_1ac460616_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac460616_If _other) { return !this->operator==(_other); }


};
struct _1ac4609bd_Else {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	

	_1ac4609bd_Else(void) = default;

	inline bool operator==(_1ac4609bd_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ac4609bd_Else _other) { return !this->operator==(_other); }


};
struct _1ac460e41_Conditional {
	jule::Ptr<_1ac460616_If> _field_Head = jule::Ptr<_1ac460616_If>();
	jule::Slice<jule::Ptr<_1ac460616_If>> _field_Tail = jule::Slice<jule::Ptr<_1ac460616_If>>();
	jule::Ptr<_1ac4609bd_Else> _field_Default = jule::Ptr<_1ac4609bd_Else>();
	

	_1ac460e41_Conditional(void) = default;

	inline bool operator==(_1ac460e41_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac460e41_Conditional _other) { return !this->operator==(_other); }


};
struct _1ac461617_TypeAliasDecl {
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac461617_TypeAliasDecl(void) = default;

	inline bool operator==(_1ac461617_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac461617_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ac461a8a_Case {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	

	_1ac461a8a_Case(void) = default;

	inline bool operator==(_1ac461a8a_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1ac461a8a_Case _other) { return !this->operator==(_other); }


};
struct _1ac462261_MatchCase {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Slice<jule::Ptr<_1ac461a8a_Case>> _field_Cases = jule::Slice<jule::Ptr<_1ac461a8a_Case>>();
	jule::Ptr<_1ac4609bd_Else> _field_Default = jule::Ptr<_1ac4609bd_Else>();
	

	_1ac462261_MatchCase(void) = default;

	inline bool operator==(_1ac462261_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac462261_MatchCase _other) { return !this->operator==(_other); }


};
struct _1ac462a03_UseDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Selected = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1ac462a03_UseDecl(void) = default;

	inline bool operator==(_1ac462a03_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1ac462a03_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac4632c8_AutoExpr(_1ac462e76_EnumItemDecl*);
struct _1ac462e76_EnumItemDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac462e76_EnumItemDecl(void) = default;

	inline bool operator==(_1ac462e76_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac462e76_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac464032_DefaultTyped(_1ac46399e_EnumDecl*);
struct _1ac46399e_EnumDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	

	_1ac46399e_EnumDecl(void) = default;

	inline bool operator==(_1ac46399e_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1ac46399e_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1ac4644a5_TypeEnumItemDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ac4644a5_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1ac4644a5_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac4644a5_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ac4646a3_TypeEnumDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	

	_1ac4646a3_TypeEnumDecl(void) = default;

	inline bool operator==(_1ac4646a3_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1ac4646a3_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1ac464c03_FieldDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Kind = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Default = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac464c03_FieldDecl(void) = default;

	inline bool operator==(_1ac464c03_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac464c03_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ac465561_StructDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	

	_1ac465561_StructDecl(void) = default;

	inline bool operator==(_1ac465561_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1ac465561_StructDecl _other) { return !this->operator==(_other); }


};
struct _1ac465b6b_TraitDecl {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>>();
	

	_1ac465b6b_TraitDecl(void) = default;

	inline bool operator==(_1ac465b6b_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1ac465b6b_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac4665d9_IsTraitImpl(_1ac466276_Impl*);
inline jule::Bool _1ac46684d_IsStructImpl(_1ac466276_Impl*);
struct _1ac466276_Impl {
	jule::Ptr<_1a959a127_Token> _field_End = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Base = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Dest = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>>();
	jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>>();
	

	_1ac466276_Impl(void) = default;

	inline bool operator==(_1ac466276_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1ac466276_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac49c202_Const> static__1ac502279_NewI64(jule::I64);
inline jule::Ptr<_1ac49c202_Const> static__1ac5023ab_NewU64(jule::U64);
inline jule::Ptr<_1ac49c202_Const> static__1ac502543_NewBool(jule::Bool);
inline jule::Ptr<_1ac49c202_Const> static__1ac5027da_NewStr(jule::Str);
inline jule::Ptr<_1ac49c202_Const> static__1ac502a82_NewF64(jule::F64);
inline jule::Ptr<_1ac49c202_Const> static__1ac502c80_NewNil(void);
inline jule::I64 _1ac503379_ReadI64(_1ac49c202_Const*);
inline jule::U64 _1ac5035dd_ReadU64(_1ac49c202_Const*);
inline jule::Bool _1ac503852_ReadBool(_1ac49c202_Const*);
inline jule::Str _1ac503ab6_ReadStr(_1ac49c202_Const*);
inline jule::F64 _1ac503d2a_ReadF64(_1ac49c202_Const*);
inline jule::I64 _1ac50408e_AsI64(_1ac49c202_Const*);
inline jule::U64 _1ac504303_AsU64(_1ac49c202_Const*);
inline jule::F64 _1ac504567_AsF64(_1ac49c202_Const*);
inline void _1ac5047dc_SetI64(_1ac49c202_Const*, jule::I64);
inline void _1ac504a62_SetU64(_1ac49c202_Const*, jule::U64);
inline void _1ac504cd7_SetBool(_1ac49c202_Const*, jule::Bool);
inline void _1ac50505c_SetStr(_1ac49c202_Const*, jule::Str);
inline void _1ac5052d2_SetF64(_1ac49c202_Const*, jule::F64);
inline void _1ac5054ad_SetNil(_1ac49c202_Const*);
inline jule::Bool _1ac505722_IsI64(_1ac49c202_Const*);
inline jule::Bool _1ac505986_IsU64(_1ac49c202_Const*);
inline jule::Bool _1ac505bea_IsBool(_1ac49c202_Const*);
inline jule::Bool _1ac505e5e_IsStr(_1ac49c202_Const*);
inline jule::Bool _1ac5061c3_IsF64(_1ac49c202_Const*);
inline jule::Bool _1ac506437_IsNil(_1ac49c202_Const*);
inline jule::Bool _1ac506745_AreSameTypes(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac506a53_And(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac506d61_Or(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac50716e_Eq(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac50747c_Lt(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac50778a_LtEq(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac507a98_Gt(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac507da6_GtEq(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac5081b4_Add(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac5084c2_Sub(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac5087d0_Mul(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac508add_Div(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac508deb_Mod(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac509209_BitwiseAnd(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac509517_BitwiseOr(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac509825_Xor(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac509b33_Lshift(_1ac49c202_Const*, _1ac49c202_Const);
inline jule::Bool _1ac509e41_Rshift(_1ac49c202_Const*, _1ac49c202_Const);
struct _1ac49c202_Const {
	jule::Any _field_data = jule::Any();
	

	_1ac49c202_Const(void) = default;

	inline jule::Bool operator==(_1ac49c202_Const _other) { return _1ac50716e_Eq(this, _other); }

	inline bool operator!=(_1ac49c202_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ac49c202_Const _other) { return _1ac507a98_Gt(this, _other); }

	inline jule::Bool operator>=(_1ac49c202_Const _other) { return _1ac507da6_GtEq(this, _other); }

	inline jule::Bool operator<(_1ac49c202_Const _other) { return _1ac50747c_Lt(this, _other); }

	inline jule::Bool operator<=(_1ac49c202_Const _other) { return _1ac50778a_LtEq(this, _other); }


};
struct _1acbbc9cc_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1acbbc9cc_floatInfo(void) = default;

	inline bool operator==(_1acbbc9cc_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1acbbc9cc_floatInfo _other) { return !this->operator==(_other); }


};
struct _1acabe7d0_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1acabe7d0_decimalSlice(void) = default;

	inline bool operator==(_1acabe7d0_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1acabe7d0_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1ad0c0671_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1ad0c0671_leftCheat(void) = default;

	inline bool operator==(_1ad0c0671_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ad0c0671_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acb05283_set(_1ad0c09d4_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1acc088e7_floatBits(_1ad0c09d4_decimal*, _1acbbc9cc_floatInfo&);
inline void _1ad0c0bc1_assign(_1ad0c09d4_decimal*, jule::U64);
inline void _1ad0c0d03_shift(_1ad0c09d4_decimal*, jule::I64);
inline void _1ad0c0e35_roundDown(_1ad0c09d4_decimal*, jule::I64);
inline void _1ad0c1067_roundUp(_1ad0c09d4_decimal*, jule::I64);
inline void _1ad0c1199_round(_1ad0c09d4_decimal*, jule::I64);
inline jule::U64 _1ad0c12cb_roundedInteger(_1ad0c09d4_decimal*);
struct _1ad0c09d4_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1ad0c09d4_decimal(void) = default;

	inline bool operator==(_1ad0c09d4_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ad0c09d4_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac442d57_FieldIns> _1ac416b94_instance(jule::Ptr<_1ac427d4d_Field>);
struct _1ac427d4d_Field {
	jule::Ptr<_1ac43a6e0_Struct> _field_Owner = jule::Ptr<_1ac43a6e0_Struct>();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Ptr<_1ac44e4d4_Expr> _field_Default = jule::Ptr<_1ac44e4d4_Expr>();
	

	_1ac427d4d_Field(void) = default;

	inline bool operator==(_1ac427d4d_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac427d4d_Field _other) { return !this->operator==(_other); }


};
struct _1ac43c11a_Operators {
	jule::Ptr<_1ac515831_FnIns> _field_Eq = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Gt = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_GtEq = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Lt = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_LtEq = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Shl = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Shr = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Add = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Sub = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Div = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Mul = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Mod = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitAnd = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitOr = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitXor = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Neg = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_Pos = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitNot = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_AddAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_SubAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_DivAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_MulAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_ModAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_ShlAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_ShrAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitOrAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitAndAssign = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac515831_FnIns> _field_BitXorAssign = jule::Ptr<_1ac515831_FnIns>();
	

	_1ac43c11a_Operators(void) = default;

	inline bool operator==(_1ac43c11a_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ac43c11a_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac466a3a_StructIns> _1ac41cc88_instance(jule::Ptr<_1ac43a6e0_Struct>);
inline jule::Ptr<_1ac466a3a_StructIns> _1ac422001_appendInstance(_1ac43a6e0_Struct*, jule::Ptr<_1ac466a3a_StructIns>&);
inline jule::Ptr<_1ac512b80_Fn> _1ac424ca1_FindMethod(_1ac43a6e0_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad112097_Var> _1ac425cb3_FindStatic(_1ac43a6e0_Struct*, jule::Str);
inline jule::Ptr<_1ac427d4d_Field> _1ac425202_FindField(_1ac43a6e0_Struct*, jule::Str);
inline jule::Bool _1ac4274ce_IsImplements(_1ac43a6e0_Struct*, jule::Ptr<_1ac524a3d_Trait>);
inline jule::Bool _1ac4268da_IsDerives(_1ac43a6e0_Struct*, jule::Str);
inline jule::Bool _1ac42a68b_IsUses(_1ac43a6e0_Struct*, jule::Ptr<_1ac43a6e0_Struct>);
inline jule::Bool _1ac42ad51_HasRefAccessible(_1ac43a6e0_Struct*);
struct _1ac43a6e0_Struct {
	jule::Ptr<_1ad0e5267_Sema> _field_sema = jule::Ptr<_1ad0e5267_Sema>();
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>();
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac427d4d_Field>> _field_Fields = jule::Slice<jule::Ptr<_1ac427d4d_Field>>();
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1ac512b80_Fn>>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Statics = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ac524a3d_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1ac524a3d_Trait>>();
	jule::Slice<jule::Ptr<_1ac466a3a_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1ac466a3a_StructIns>>();
	

	_1ac43a6e0_Struct(void) = default;

	inline bool operator==(_1ac43a6e0_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1ac43a6e0_Struct _other) { return !this->operator==(_other); }


};
struct _1ac442d57_FieldIns {
	jule::Ptr<_1ac427d4d_Field> _field_Decl = jule::Ptr<_1ac427d4d_Field>();
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad159188_Data> _field_Default = jule::Ptr<_1ad159188_Data>();
	

	_1ac442d57_FieldIns(void) = default;

	inline bool operator==(_1ac442d57_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ac442d57_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ac50a716_OperandExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1ac50a716_OperandExprModel(void) = default;

	inline bool operator==(_1ac50a716_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1ac50a716_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50a903_BinopExprModel {
	jule::Ptr<_1ac50a716_OperandExprModel> _field_Left = jule::Ptr<_1ac50a716_OperandExprModel>();
	jule::Ptr<_1ac50a716_OperandExprModel> _field_Right = jule::Ptr<_1ac50a716_OperandExprModel>();
	jule::Ptr<_1a959a127_Token> _field_Op = jule::Ptr<_1a959a127_Token>();
	

	_1ac50a903_BinopExprModel(void) = default;

	inline bool operator==(_1ac50a903_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac50a903_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50aae0_UnaryExprModel {
	jule::Ptr<_1ad159188_Data> _field_Expr = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1a959a127_Token> _field_Op = jule::Ptr<_1a959a127_Token>();
	

	_1ac50aae0_UnaryExprModel(void) = default;

	inline bool operator==(_1ac50aae0_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ac50aae0_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50accc_StructArgExprModel {
	jule::Ptr<_1ac442d57_FieldIns> _field_Field = jule::Ptr<_1ac442d57_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1ac50accc_StructArgExprModel(void) = default;

	inline bool operator==(_1ac50accc_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac50accc_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50aeb9_StructLitExprModel {
	jule::Ptr<_1ac466a3a_StructIns> _field_Strct = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Slice<jule::Ptr<_1ac50accc_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1ac50accc_StructArgExprModel>>();
	

	_1ac50aeb9_StructLitExprModel(void) = default;

	inline bool operator==(_1ac50aeb9_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1ac50aeb9_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50b1a6_AllocStructLitExprModel {
	jule::Ptr<_1ac50aeb9_StructLitExprModel> _field_Lit = jule::Ptr<_1ac50aeb9_StructLitExprModel>();
	

	_1ac50b1a6_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1ac50b1a6_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1ac50b1a6_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50b393_CastingExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad18522a_TypeKind> _field_ExprKind = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ac50b393_CastingExprModel(void) = default;

	inline bool operator==(_1ac50b393_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1ac50b393_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50b580_FnCallExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac515831_FnIns> _field_Func = jule::Ptr<_1ac515831_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1ad0c4994_Scope> _field_Except = jule::Ptr<_1ad0c4994_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1ac50b580_FnCallExprModel(void) = default;

	inline bool operator==(_1ac50b580_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1ac50b580_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50b76c_SliceExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_ElemKind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1ac50b76c_SliceExprModel(void) = default;

	inline bool operator==(_1ac50b76c_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ac50b76c_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50b959_IndexingExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ad159188_Data> _field_Expr = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ad159188_Data> _field_Index = jule::Ptr<_1ad159188_Data>();
	

	_1ac50b959_IndexingExprModel(void) = default;

	inline bool operator==(_1ac50b959_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ac50b959_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50bb46_AnonFnExprModel {
	jule::Ptr<_1ac515831_FnIns> _field_Func = jule::Ptr<_1ac515831_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1ac50bb46_AnonFnExprModel(void) = default;

	inline bool operator==(_1ac50bb46_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1ac50bb46_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50bd33_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1ac50bd33_KeyValPairExprModel(void) = default;

	inline bool operator==(_1ac50bd33_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ac50bd33_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50c020_MapExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_KeyKind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad18522a_TypeKind> _field_ValKind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Slice<jule::Ptr<_1ac50bd33_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1ac50bd33_KeyValPairExprModel>>();
	

	_1ac50c020_MapExprModel(void) = default;

	inline bool operator==(_1ac50c020_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1ac50c020_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50c20c_SlicingExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1ac50c20c_SlicingExprModel(void) = default;

	inline bool operator==(_1ac50c20c_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac50c20c_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50c3e9_TraitSubIdentExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ac512b80_Fn> _field_Method = jule::Ptr<_1ac512b80_Fn>();
	jule::Ptr<_1ac524a3d_Trait> _field_Trt = jule::Ptr<_1ac524a3d_Trait>();
	

	_1ac50c3e9_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1ac50c3e9_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1ac50c3e9_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50c817_StructSubIdentExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ad159188_Data> _field_Expr = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ad18522a_TypeKind> _field_ExprKind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ac515831_FnIns> _field_Method = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac442d57_FieldIns> _field_Field = jule::Ptr<_1ac442d57_FieldIns>();
	

	_1ac50c817_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1ac50c817_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field;
	}

	inline bool operator!=(_1ac50c817_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50ca04_StructStaticIdentExprModel {
	jule::Ptr<_1ac466a3a_StructIns> _field_Structure = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ac515831_FnIns> _field_Method = jule::Ptr<_1ac515831_FnIns>();
	

	_1ac50ca04_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1ac50ca04_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1ac50ca04_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50cbe1_ArrayExprModel {
	jule::Ptr<_1ad19108d_Arr> _field_Kind = jule::Ptr<_1ad19108d_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1ac50cbe1_ArrayExprModel(void) = default;

	inline bool operator==(_1ac50cbe1_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ac50cbe1_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50cdcd_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1ac50cdcd_CommonIdentExprModel(void) = default;

	inline bool operator==(_1ac50cdcd_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac50cdcd_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50d0ba_CommonSubIdentExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_ExprKind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1ac50d0ba_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1ac50d0ba_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac50d0ba_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50d2a7_TupleExprModel {
	jule::Slice<jule::Ptr<_1ad159188_Data>> _field_Datas = jule::Slice<jule::Ptr<_1ad159188_Data>>();
	

	_1ac50d2a7_TupleExprModel(void) = default;

	inline bool operator==(_1ac50d2a7_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1ac50d2a7_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50d494_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1ac50d494_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1ac50d494_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ac50d494_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50d681_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1ac50d681_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1ac50d681_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ac50d681_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50d86d_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1ac50d86d_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1ac50d86d_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac50d86d_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50da5a_BuiltinNewCallExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1ac50da5a_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1ac50da5a_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ac50da5a_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50dc47_BuiltinPanicCallExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1ac50dc47_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1ac50dc47_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac50dc47_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50de34_BuiltinAssertCallExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1ac50de34_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1ac50de34_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ac50de34_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50e121_BuiltinMakeCallExprModel {
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1ac50e121_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1ac50e121_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ac50e121_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50e30d_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1ac50e30d_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1ac50e30d_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ac50e30d_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50e4ea_BuiltinCopyCallExprModel {
	jule::Ptr<_1ad159188_Data> _field_Dest = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ad159188_Data> _field_Src = jule::Ptr<_1ad159188_Data>();
	

	_1ac50e4ea_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1ac50e4ea_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ac50e4ea_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50e6d7_BuiltinErrorCallExprModel {
	jule::Ptr<_1ac515831_FnIns> _field_Func = jule::Ptr<_1ac515831_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1ac50e6d7_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1ac50e6d7_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ac50e6d7_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50c5d6_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1ac50c5d6_SizeofExprModel(void) = default;

	inline bool operator==(_1ac50c5d6_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac50c5d6_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac50ed47_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1ac50ed47_AlignofExprModel(void) = default;

	inline bool operator==(_1ac50ed47_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac50ed47_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac510034_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1ac510034_RuneExprModel(void) = default;

	inline bool operator==(_1ac510034_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ac510034_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ac510221_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1ac510221_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1ac510221_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac510221_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ac51040d_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1ac51040d_BackendEmitExprModel(void) = default;

	inline bool operator==(_1ac51040d_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1ac51040d_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac5105ea_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1ac5105ea_FreeExprModel(void) = default;

	inline bool operator==(_1ac5105ea_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac5105ea_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ac510b7d_RetType {
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Idents = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	

	_1ac510b7d_RetType(void) = default;

	inline bool operator==(_1ac510b7d_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1ac510b7d_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac514962_ParamIns> _1ac51170b_instance(jule::Ptr<_1ac511343_Param>);
inline jule::Bool _1ac511970_IsSelf(_1ac511343_Param*);
inline jule::Bool _1ac511bd4_IsRef(_1ac511343_Param*);
struct _1ac511343_Param {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1ac511343_Param(void) = default;

	inline bool operator==(_1ac511343_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ac511343_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac5130e2_IsVoid(_1ac512b80_Fn*);
inline jule::Bool _1ac513356_IsMethod(_1ac512b80_Fn*);
inline jule::Bool _1ac5135ba_IsEntryPoint(_1ac512b80_Fn*);
inline jule::Bool _1ac51382e_IsInit(_1ac512b80_Fn*);
inline jule::Bool _1ac513a93_IsAnon(_1ac512b80_Fn*);
inline jule::Bool _1ac513d07_AnyVar(_1ac512b80_Fn*);
inline jule::Ptr<_1ac515831_FnIns> _1ac51406b_instanceForce(jule::Ptr<_1ac512b80_Fn>);
inline jule::Ptr<_1ac515831_FnIns> _1ac5142d0_instance(jule::Ptr<_1ac512b80_Fn>);
inline jule::Ptr<_1ac515831_FnIns> _1ac5145aa_appendInstance(_1ac512b80_Fn*, jule::Ptr<_1ac515831_FnIns>&);
struct _1ac512b80_Fn {
	jule::Ptr<_1ad0e5267_Sema> _field_sema = jule::Ptr<_1ad0e5267_Sema>();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	jule::Ptr<_1ac510b7d_RetType> _field_Result = jule::Ptr<_1ac510b7d_RetType>();
	jule::Slice<jule::Ptr<_1ac511343_Param>> _field_Params = jule::Slice<jule::Ptr<_1ac511343_Param>>();
	jule::Ptr<_1ac43a6e0_Struct> _field_Owner = jule::Ptr<_1ac43a6e0_Struct>();
	jule::Slice<jule::Ptr<_1ac515831_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1ac515831_FnIns>>();
	

	_1ac512b80_Fn(void) = default;

	inline bool operator==(_1ac512b80_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1ac512b80_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac514d3b_Str(_1ac514962_ParamIns*);
struct _1ac514962_ParamIns {
	jule::Ptr<_1ac511343_Param> _field_Decl = jule::Ptr<_1ac511343_Param>();
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ac514962_ParamIns(void) = default;

	inline bool operator==(_1ac514962_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac514962_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac515b61_Str(_1ac515831_FnIns*);
inline jule::Bool _1ac515e6e_Equals(jule::Ptr<_1ac515831_FnIns>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ac5163d1_EqualsFn(jule::Ptr<_1ac515831_FnIns>, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Bool _1ac5166de_equalsTrait(jule::Ptr<_1ac515831_FnIns>, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _1ac516953_Types(_1ac515831_FnIns*);
inline jule::Bool _1ac516bb7_IsBuiltin(_1ac515831_FnIns*);
inline jule::Bool _1ac516e2b_IsAnon(_1ac515831_FnIns*);
inline jule::Bool _1ac517239_Same(_1ac515831_FnIns*, jule::Ptr<_1ac515831_FnIns>);
inline jule::Str _1ac517547_GetKindStr(_1ac515831_FnIns*, jule::Bool);
struct _1ac515831_FnIns {
	jule::Ptr<_1ac466a3a_StructIns> _field_Owner = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Ptr<_1ac512b80_Fn> _field_Decl = jule::Ptr<_1ac512b80_Fn>();
	jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>();
	jule::Slice<jule::Ptr<_1ac514962_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1ac514962_ParamIns>>();
	jule::Ptr<_1ad18522a_TypeKind> _field_Result = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	jule::Ptr<_1ac518702_ReferenceStack> _field_Refers = jule::Ptr<_1ac518702_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1ac515831_FnIns(void) = default;

	inline bool operator==(_1ac515831_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1ac515831_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac518702_ReferenceStack> static__1ac5189dd_new(void);
inline jule::I64 _1ac518d73_Len(_1ac518702_ReferenceStack*);
inline jule::Any _1ac519181_At(_1ac518702_ReferenceStack*, jule::I64);
inline void _1ac519406_Push(_1ac518702_ReferenceStack*, jule::Any);
inline jule::Bool _1bc563352_Exist(_1ac518702_ReferenceStack*, jule::Ptr<_1ac515831_FnIns>);
inline jule::Bool _1bc577b4c_Exist(_1ac518702_ReferenceStack*, jule::Ptr<_1ad112097_Var>);
inline jule::Bool _1bb8d3e32_Exist(_1ac518702_ReferenceStack*, jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Bool _1bc2a3009_Exist(_1ac518702_ReferenceStack*, jule::Ptr<_1ac524a3d_Trait>);
struct _1ac518702_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1ac518702_ReferenceStack(void) = default;

	inline bool operator==(_1ac518702_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1ac518702_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1ac519abb_Pass {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1ac519abb_Pass(void) = default;

	inline bool operator==(_1ac519abb_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ac519abb_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac51e065_symbolBuilder> _1ac51e51b_getRoot(jule::Ptr<_1ac51e065_symbolBuilder>);
inline void _1ac51e8d4_pushErr(_1ac51e065_symbolBuilder*, jule::Ptr<_1a959a127_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1ac51ec9c_pushErrText(_1ac51e065_symbolBuilder*, jule::Ptr<_1a959a127_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1ac5200bb_pushSuggestion(_1ac51e065_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac520473_checkCppUseDeclPath(_1ac51e065_symbolBuilder*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac52074d_buildCppHeaderImport(_1ac51e065_symbolBuilder*, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac520a5b_buildStdImport(_1ac51e065_symbolBuilder*, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac520d69_buildIdentImport(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac521177_buildImport(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Bool _1ac521485_checkDuplicateUseDecl(_1ac51e065_symbolBuilder*, jule::Ptr<_1ad0dc11b_ImportInfo>&);
inline void _1ac5217a4_implImportSelections(_1ac51e065_symbolBuilder*, jule::Ptr<_1ad0dc11b_ImportInfo>&, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Str _1ac521ab2_getAsLinkPath(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Str);
inline void _1ac521e7a_pushCycleError(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ac51e065_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1ac522343_pushCrossCycleError(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ac51e065_symbolBuilder>&, jule::Ptr<_1ad0dc11b_ImportInfo>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1ac5226ea_checkImportCycles(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ad0dc11b_ImportInfo>, jule::Ptr<_1ac462a03_UseDecl>&);
inline void _1ac522ad5_checkPackageAccessibility(_1ac51e065_symbolBuilder*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1ac522e9d_importPackage(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ad0dc11b_ImportInfo>&, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac5232ab_importUseDecl(jule::Ptr<_1ac51e065_symbolBuilder>, jule::Ptr<_1ac462a03_UseDecl>&);
inline void _1ac523487_importUseDecls(jule::Ptr<_1ac51e065_symbolBuilder>);
inline void _1ac52370c_appendNode(_1ac51e065_symbolBuilder*, _1ac411562_Node&);
inline void _1ac5238d8_appendNodes(_1ac51e065_symbolBuilder*);
inline void _1ac523b5d_pushDirectivePass(_1ac51e065_symbolBuilder*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ac523d39_appendTopDirectives(_1ac51e065_symbolBuilder*);
inline void _1ac524015_build(jule::Ptr<_1ac51e065_symbolBuilder>);
struct _1ac51e065_symbolBuilder {
	jule::Ptr<_1ac51e065_symbolBuilder> _field_owner = jule::Ptr<_1ac51e065_symbolBuilder>();
	jule::Trait<_1ad0d9888_Importer> _field_importer = jule::Trait<_1ad0d9888_Importer>();
	jule::Slice<_1a92722b6_Log> _field_errors = jule::Slice<_1a92722b6_Log>();
	jule::Ptr<_1ac4107d6_Ast> _field_ast = jule::Ptr<_1ac4107d6_Ast>();
	jule::Ptr<_1ad15442a_SymbolTable> _field_table = jule::Ptr<_1ad15442a_SymbolTable>();
	

	_1ac51e065_symbolBuilder(void) = default;

	inline bool operator==(_1ac51e065_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1ac51e065_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac524e39_Str(_1ac524a3d_Trait*);
inline jule::Bool _1ac525247_Equals(jule::Ptr<_1ac524a3d_Trait>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ac5255aa_IsBuiltin(_1ac524a3d_Trait*);
inline jule::Ptr<_1ac512b80_Fn> _1ac5258b8_FindMethod(_1ac524a3d_Trait*, jule::Str);
struct _1ac524a3d_Trait {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1ac512b80_Fn>>();
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>();
	

	_1ac524a3d_Trait(void) = default;

	inline bool operator==(_1ac524a3d_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1ac524a3d_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac526578_AutoExpr(_1ac52618d_EnumItem*);
struct _1ac52618d_EnumItem {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ad15a211_Value> _field_Value = jule::Ptr<_1ad15a211_Value>();
	

	_1ac52618d_EnumItem(void) = default;

	inline bool operator==(_1ac52618d_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ac52618d_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac526ee6_Str(_1ac526b83_Enum*);
inline jule::Bool _1ac527304_Equals(jule::Ptr<_1ac526b83_Enum>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Ptr<_1ac52618d_EnumItem> _1ac527744_FindItem(_1ac526b83_Enum*, jule::Str);
struct _1ac526b83_Enum {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Slice<jule::Ptr<_1ac52618d_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1ac52618d_EnumItem>>();
	

	_1ac526b83_Enum(void) = default;

	inline bool operator==(_1ac526b83_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1ac526b83_Enum _other) { return !this->operator==(_other); }


};
struct _1ac527bb7_TypeEnumItem {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	

	_1ac527bb7_TypeEnumItem(void) = default;

	inline bool operator==(_1ac527bb7_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ac527bb7_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac5285ad_Str(_1ac52827d_TypeEnum*);
inline jule::Bool _1ac5288bb_Equals(jule::Ptr<_1ac52827d_TypeEnum>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Ptr<_1ac527bb7_TypeEnumItem> _1ac528cb7_FindItem(_1ac52827d_TypeEnum*, jule::Str);
struct _1ac52827d_TypeEnum {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>>();
	

	_1ac52827d_TypeEnum(void) = default;

	inline bool operator==(_1ac52827d_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1ac52827d_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)> _1ac551295_readyFn(jule::Ptr<_1ac540d78_constraintChecker>);
inline jule::Bool _1ac5682ce_readyFi(jule::Ptr<_1ac540d78_constraintChecker>);
inline jule::Bool _1ac582b78_readySi(jule::Ptr<_1ac540d78_constraintChecker>);
inline jule::Bool _1ac5849c1_ready(jule::Ptr<_1ac540d78_constraintChecker>);
inline jule::Bool _1ac585bae_check(jule::Ptr<_1ac540d78_constraintChecker>);
struct _1ac540d78_constraintChecker {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>();
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>();
	jule::Ptr<_1ac515831_FnIns> _field_fi = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac466a3a_StructIns> _field_si = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Ptr<_1a959a127_Token> _field_et = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1ac540d78_constraintChecker(void) = default;

	inline bool operator==(_1ac540d78_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1ac540d78_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac5891e0_IsTraitImpl(_1ac5ae0b1_Impl*);
inline jule::Bool _1ac58993d_IsStructImpl(_1ac5ae0b1_Impl*);
struct _1ac5ae0b1_Impl {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Base = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Dest = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1ac512b80_Fn>>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Statics = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	

	_1ac5ae0b1_Impl(void) = default;

	inline bool operator==(_1ac5ae0b1_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1ac5ae0b1_Impl _other) { return !this->operator==(_other); }


};
struct _1ad0c4994_Scope {
	jule::Ptr<_1ad0c4994_Scope> _field_Parent = jule::Ptr<_1ad0c4994_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1ad0c4994_Scope(void) = default;

	inline bool operator==(_1ad0c4994_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1ad0c4994_Scope _other) { return !this->operator==(_other); }


};
struct _1ad0c4b81_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	

	_1ad0c4b81_If(void) = default;

	inline bool operator==(_1ad0c4b81_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ad0c4b81_If _other) { return !this->operator==(_other); }


};
struct _1ad0c4d6d_Else {
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	

	_1ad0c4d6d_Else(void) = default;

	inline bool operator==(_1ad0c4d6d_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ad0c4d6d_Else _other) { return !this->operator==(_other); }


};
struct _1ad0c505a_Conditional {
	jule::Slice<jule::Ptr<_1ad0c4b81_If>> _field_Elifs = jule::Slice<jule::Ptr<_1ad0c4b81_If>>();
	jule::Ptr<_1ad0c4d6d_Else> _field_Default = jule::Ptr<_1ad0c4d6d_Else>();
	

	_1ad0c505a_Conditional(void) = default;

	inline bool operator==(_1ad0c505a_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ad0c505a_Conditional _other) { return !this->operator==(_other); }


};
struct _1ad0c5247_InfIter {
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	

	_1ad0c5247_InfIter(void) = default;

	inline bool operator==(_1ad0c5247_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ad0c5247_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac5ae29d_IsWhileNext(_1ad0c5434_WhileIter*);
struct _1ad0c5434_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	

	_1ad0c5434_WhileIter(void) = default;

	inline bool operator==(_1ad0c5434_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ad0c5434_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ad0c5621_RangeIter {
	jule::Ptr<_1ad159188_Data> _field_Expr = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	jule::Ptr<_1ad112097_Var> _field_KeyA = jule::Ptr<_1ad112097_Var>();
	jule::Ptr<_1ad112097_Var> _field_KeyB = jule::Ptr<_1ad112097_Var>();
	

	_1ad0c5621_RangeIter(void) = default;

	inline bool operator==(_1ad0c5621_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ad0c5621_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ad0c580d_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1ad0c580d_ContSt(void) = default;

	inline bool operator==(_1ad0c580d_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ad0c580d_ContSt _other) { return !this->operator==(_other); }


};
struct _1ad0c59ea_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1ad0c59ea_BreakSt(void) = default;

	inline bool operator==(_1ad0c59ea_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ad0c59ea_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ad0c5bd7_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1ad0c5bd7_Label(void) = default;

	inline bool operator==(_1ad0c5bd7_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ad0c5bd7_Label _other) { return !this->operator==(_other); }


};
struct _1ad0c5dc4_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1ad0c5dc4_GotoSt(void) = default;

	inline bool operator==(_1ad0c5dc4_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ad0c5dc4_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ad0c60b1_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1ad0c60b1_Postfix(void) = default;

	inline bool operator==(_1ad0c60b1_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ad0c60b1_Postfix _other) { return !this->operator==(_other); }


};
struct _1ad0c629d_Assign {
	jule::Ptr<_1ac50a716_OperandExprModel> _field_L = jule::Ptr<_1ac50a716_OperandExprModel>();
	jule::Ptr<_1ac50a716_OperandExprModel> _field_R = jule::Ptr<_1ac50a716_OperandExprModel>();
	jule::Ptr<_1a959a127_Token> _field_Op = jule::Ptr<_1a959a127_Token>();
	

	_1ad0c629d_Assign(void) = default;

	inline bool operator==(_1ad0c629d_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ad0c629d_Assign _other) { return !this->operator==(_other); }


};
struct _1ad0c648a_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1ad0c648a_MultiAssign(void) = default;

	inline bool operator==(_1ad0c648a_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1ad0c648a_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad0c6a95_IsGenericTypeMatch(_1ad0c6677_Match*);
struct _1ad0c6677_Match {
	jule::Ptr<_1ad159188_Data> _field_Expr = jule::Ptr<_1ad159188_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1ad0c6bc7_Case>> _field_Cases = jule::Slice<jule::Ptr<_1ad0c6bc7_Case>>();
	jule::Ptr<_1ad0c6bc7_Case> _field_Default = jule::Ptr<_1ad0c6bc7_Case>();
	

	_1ad0c6677_Match(void) = default;

	inline bool operator==(_1ad0c6677_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ad0c6677_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad0c6db4_isDefault(_1ad0c6bc7_Case*);
struct _1ad0c6bc7_Case {
	jule::Ptr<_1ad0c6677_Match> _field_Owner = jule::Ptr<_1ad0c6677_Match>();
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	jule::Slice<jule::Ptr<_1ad159188_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1ad159188_Data>>();
	jule::Ptr<_1ad0c6bc7_Case> _field_Next = jule::Ptr<_1ad0c6bc7_Case>();
	

	_1ad0c6bc7_Case(void) = default;

	inline bool operator==(_1ad0c6bc7_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1ad0c6bc7_Case _other) { return !this->operator==(_other); }


};
struct _1ad0c6ee6_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1ad0c6ee6_FallSt(void) = default;

	inline bool operator==(_1ad0c6ee6_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ad0c6ee6_FallSt _other) { return !this->operator==(_other); }


};
struct _1ad0c71d3_RetSt {
	jule::Ptr<_1ac515831_FnIns> _field_Func = jule::Ptr<_1ac515831_FnIns>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Vars = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1ad0c71d3_RetSt(void) = default;

	inline bool operator==(_1ad0c71d3_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ad0c71d3_RetSt _other) { return !this->operator==(_other); }


};
struct _1ad0c73c0_scopeLabel {
	jule::Ptr<_1a959a127_Token> _field_token = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ad0c5bd7_Label> _field_label = jule::Ptr<_1ad0c5bd7_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1ad0c7799_scopeChecker> _field_scope = jule::Ptr<_1ad0c7799_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1ad0c73c0_scopeLabel(void) = default;

	inline bool operator==(_1ad0c73c0_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ad0c73c0_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ad0c75ac_scopeGoto {
	jule::Ptr<_1ac457d06_GotoSt> _field_gt = jule::Ptr<_1ac457d06_GotoSt>();
	jule::Ptr<_1ad0c7799_scopeChecker> _field_scope = jule::Ptr<_1ad0c7799_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1ad0c75ac_scopeGoto(void) = default;

	inline bool operator==(_1ad0c75ac_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ad0c75ac_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0c7986_FindPackage(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0c7ab8_SelectPackage(_1ad0c7799_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
inline jule::Ptr<_1ad112097_Var> _1ad0c7bea_FindVar(_1ad0c7799_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad0c7d2c_FindTypeAlias(_1ad0c7799_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad0c7e5e_FindStruct(_1ad0c7799_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad0c8091_FindFn(_1ad0c7799_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad0c81c3_FindTrait(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad0c8305_FindEnum(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0c8437_FindTypeEnum(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Bool _1ad0c8569_isUnsafe(jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Bool _1ad0c869b_isRoot(_1ad0c7799_scopeChecker*);
inline void _1ad0c87cd_stop(_1ad0c7799_scopeChecker*);
inline jule::Bool _1ad0c8910_stopped(_1ad0c7799_scopeChecker*);
inline jule::Bool _1ad0c8a42_isDeferred(jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0c8b74_getRoot(jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0c8ca6_getHardRoot(jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Ptr<_1ad0c5bd7_Label> _1ad0c8dd8_findLabel(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ad0c901a_findLabelScope(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Str);
inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ad0c914c_findLabelAll(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Bool _1ad0c9504_isDuplicatedIdent(_1ad0c7799_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1ad0c9779_checkVarDecl(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45cca6_VarDecl>);
inline void _1ad0c99ee_checkTypeAliasDecl(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac461617_TypeAliasDecl>);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0c9c63_getChild(_1ad0c7799_scopeChecker*);
inline void _1ad0ca12b_checkChildSsc(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45a2d1_ScopeTree>&, jule::Ptr<_1ad0c4994_Scope>&, jule::Ptr<_1ad0c7799_scopeChecker>&);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0ca4d3_checkChildSc(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45a2d1_ScopeTree>&, jule::Ptr<_1ad0c7799_scopeChecker>&);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0ca7e1_checkChild(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45a2d1_ScopeTree>&);
inline void _1ad0caa66_checkAnonScope(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45a2d1_ScopeTree>);
inline void _1ad0cad85_processErrorCall(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>&, jule::Ptr<_1a959a127_Token>);
inline void _1ad0cb10a_checkExpr(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac44e4d4_Expr>);
inline void _1ad0cb380_checkCoExpr(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac4510c9_CoExpr>);
inline jule::Ptr<_1ad0c4b81_If> _1ad0cb68d_checkIf(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac460616_If>);
inline jule::Ptr<_1ad0c4d6d_Else> _1ad0cb99b_checkElse(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac4609bd_Else>);
inline void _1ad0cbc21_checkConditional(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac460e41_Conditional>);
inline void _1ad0cc183_checkIterScopeSsc(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac45a2d1_ScopeTree>, jule::Ptr<_1ad0c4994_Scope>&, jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0cc5d4_checkIterScopeSc(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac45a2d1_ScopeTree>, jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0cc98b_checkIterScope(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Uintptr, jule::Ptr<_1ac45a2d1_ScopeTree>&);
inline void _1ad0ccc11_checkInfIter(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45d7bd_Iter>&);
inline void _1ad0cce86_checkWhileIter(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45d7bd_Iter>&);
inline void _1ad0cd20b_checkRangeIter(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45d7bd_Iter>&);
inline void _1ad0cd481_checkIter(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45d7bd_Iter>);
inline jule::Bool _1ad0cd78e_checkValidContLabel(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ad0cda9c_checkValidBreakLabel(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ad0c580d_ContSt> _1ad0cddaa_checkContValidScope(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac460193_ContSt>);
inline void _1ad0ce130_checkCont(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac460193_ContSt>);
inline void _1ad0ce3a5_checkLabel(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45794e_LabelSt>);
inline void _1ad0ce62a_pushGoto(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac457d06_GotoSt>);
inline void _1ad0ce8a0_checkPostfix(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac458c3b_AssignSt>);
inline jule::Bool _1ad0cebad_isNewAssignIdent(_1ad0c7799_scopeChecker*, jule::Str);
inline jule::Bool _1ad0d010e_checkStructureAssignOp(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1ac458c3b_AssignSt>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad0d0384_checkSingleAssign(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac458c3b_AssignSt>&);
inline void _1ad0d08b2_processEndPartOfMultiAssign(_1ad0c7799_scopeChecker*, jule::Ptr<_1ad0c648a_MultiAssign>, jule::Ptr<_1ac458c3b_AssignSt>, jule::Ptr<_1ac4586ec_AssignLeft>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1ad159188_Data>);
inline void _1ad0d0b48_checkRetMultiAssign(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac458c3b_AssignSt>&);
inline void _1ad0d0dbd_checkMultiAssign(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac458c3b_AssignSt>&);
inline void _1ad0d1143_checkAssignSt(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac458c3b_AssignSt>);
inline jule::Ptr<_1ad0c4994_Scope> _1ad0d14ea_checkCaseScope(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ad0c6bc7_Case>&, jule::Ptr<_1ac45a2d1_ScopeTree>&);
inline jule::Ptr<_1ad0c6bc7_Case> _1ad0d19e5_checkCase(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ad0c6677_Match>, jule::I64, jule::Ptr<_1ac461a8a_Case>, jule::Ptr<_1ad159188_Data>);
inline void _1ad0d1dad_checkCases(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac462261_MatchCase>&, jule::Ptr<_1ad0c6677_Match>, jule::Ptr<_1ad159188_Data>);
inline jule::Ptr<_1ad0c6bc7_Case> _1ad0d2265_checkDefault(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ad0c6677_Match>, jule::Ptr<_1ac4609bd_Else>);
inline void _1ad0d24da_checkComptimePanic(_1ad0c7799_scopeChecker*, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1ad0d2809_pushTypeMatch(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ad0c6677_Match>, jule::Ptr<_1ac462261_MatchCase>&);
inline void _1ad0d2a7e_checkTypeMatch(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac462261_MatchCase>&);
inline void _1ad0d2d04_checkCommonMatch(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac462261_MatchCase>&);
inline void _1ad0d3079_checkMatch(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac462261_MatchCase>);
inline void _1ad0d32ee_checkFall(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac4580e2_FallSt>);
inline jule::Ptr<_1ad0c59ea_BreakSt> _1ad0d360c_checkBreakWithLabel(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45ecdb_BreakSt>);
inline jule::Ptr<_1ad0c59ea_BreakSt> _1ad0d391a_checkPlainBreak(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45ecdb_BreakSt>);
inline void _1ad0d3b90_checkBreak(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45ecdb_BreakSt>);
inline void _1ad0d3e15_checkRet(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45d15d_RetSt>);
inline void _1ad0d418a_checkUseExpr(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac44ed75_UseExpr>);
inline void _1ad0d4410_checkNode(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Any&);
inline void _1ad0d45db_checkResult(jule::Ptr<_1ad0c7799_scopeChecker>);
inline void _1ad0d47b7_checkTree(jule::Ptr<_1ad0c7799_scopeChecker>);
inline void _1ad0d4ad6_checkGoto(_1ad0c7799_scopeChecker*, jule::Ptr<_1ad0c75ac_scopeGoto>&, jule::Ptr<_1ad0c73c0_scopeLabel>&);
inline void _1ad0d4cb2_checkGotos(_1ad0c7799_scopeChecker*);
inline void _1ad0d4e8d_checkLabels(_1ad0c7799_scopeChecker*);
inline void _1ad0d5169_checkVars(_1ad0c7799_scopeChecker*);
inline void _1ad0d5345_checkAliases(_1ad0c7799_scopeChecker*);
inline void _1ad0d5664_check(jule::Ptr<_1ad0c7799_scopeChecker>, jule::Ptr<_1ac45a2d1_ScopeTree>&, jule::Ptr<_1ad0c4994_Scope>&);
inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0d58c8_newChildChecker(jule::Ptr<_1ad0c7799_scopeChecker>);
struct _1ad0c7799_scopeChecker {
	jule::Ptr<_1a959a127_Token> _field_calledFrom = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Ptr<_1ac515831_FnIns> _field_owner = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ad0c7799_scopeChecker> _field_parent = jule::Ptr<_1ad0c7799_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1ad15442a_SymbolTable> _field_table = jule::Ptr<_1ad15442a_SymbolTable>();
	jule::Ptr<_1ad0c4994_Scope> _field_scope = jule::Ptr<_1ad0c4994_Scope>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_tree = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Ptr<_1ac515831_FnIns> _field_result = jule::Ptr<_1ac515831_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad0c73c0_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ad0c73c0_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad0c75ac_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ad0c75ac_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1ad0c7799_scopeChecker(void) = default;

	inline bool operator==(_1ad0c7799_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ad0c7799_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1ad0d68b8_checkCdef(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d6b3d_checkTypedef(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d6db3_checkDerive(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d7138_checkNamespace(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d73ad_checkDeprecated(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d7633_checkTest(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d78a8_checkDirective(_1ad0d6478_directiveChecker*, jule::Ptr<_1ac41195d_Directive>&);
inline void _1ad0d7a84_check(_1ad0d6478_directiveChecker*);
struct _1ad0d6478_directiveChecker {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac41195d_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1ac41195d_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1ad0d6478_directiveChecker(void) = default;

	inline bool operator==(_1ad0d6478_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ad0d6478_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0dc638_FindPackage(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0dc946_SelectPackage(_1ad0dc11b_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
inline jule::Ptr<_1ad112097_Var> _1ad0dcced_FindVar(_1ad0dc11b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad0dd1a5_FindTypeAlias(_1ad0dc11b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad0dd55c_FindStruct(_1ad0dc11b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad0dd914_FindFn(_1ad0dc11b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad0ddc22_FindTrait(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad0de030_FindEnum(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0de33d_FindTypeEnum(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Bool _1ad0de6d4_isLookupable(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Bool _1ad0de9e2_existIdent(_1ad0dc11b_ImportInfo*, jule::Str);
inline jule::Bool _1ad0dec78_isAccessibleViaSelection(_1ad0dc11b_ImportInfo*);
struct _1ad0dc11b_ImportInfo {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_Selected = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Ptr<_1ad0e0075_Package> _field_Package = jule::Ptr<_1ad0e0075_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1ad0dc11b_ImportInfo(void) = default;

	inline bool operator==(_1ad0dc11b_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1ad0dc11b_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e054d_FindPackage(_1ad0e0075_Package*, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e085b_SelectPackage(_1ad0e0075_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
inline jule::Ptr<_1ad112097_Var> _1ad0e0c13_FindVar(_1ad0e0075_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad0e10ba_FindTypeAlias(_1ad0e0075_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad0e1472_FindStruct(_1ad0e0075_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad0e1829_FindFn(_1ad0e0075_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad0e1b37_FindTrait(_1ad0e0075_Package*, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad0e1e45_FindEnum(_1ad0e0075_Package*, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0e2253_FindTypeEnum(_1ad0e0075_Package*, jule::Str);
struct _1ad0e0075_Package {
	jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>();
	

	_1ad0e0075_Package(void) = default;

	inline bool operator==(_1ad0e0075_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1ad0e0075_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e5784_FindPackage(_1ad0e5267_Sema*, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e5a92_SelectPackage(_1ad0e5267_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
inline jule::Ptr<_1ad112097_Var> _1ad0e5e49_FindVar(_1ad0e5267_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad0e6301_FindTypeAlias(_1ad0e5267_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad0e66a8_FindStruct(_1ad0e5267_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad0e6a60_FindFn(_1ad0e5267_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad0e6d6d_FindTrait(_1ad0e5267_Sema*, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad0e717b_FindEnum(_1ad0e5267_Sema*, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0e7489_FindTypeEnum(_1ad0e5267_Sema*, jule::Str);
inline jule::Bool _1ad0e77db_isFlag(_1ad0e5267_Sema*, jule::I64);
inline void _1ad0e7a61_setCurrentFile(_1ad0e5267_Sema*, jule::Ptr<_1ad15442a_SymbolTable>);
inline void _1ad0e7e29_pushErr(_1ad0e5267_Sema*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad0e8248_pushSugggestion(_1ad0e5267_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ad0e8600_isAccessibleDefine(_1ad0e5267_Sema*, jule::Bool, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad0e8a51_isDuplicatedIdent(_1ad0e5267_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1ad0e8d70_checkDirectives(jule::Ptr<_1ad0e5267_Sema>, jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Any);
inline jule::Bool _1ad0e92c1_checkGenericQuantity(_1ad0e5267_Sema*, jule::I64, jule::I64, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad0e969a_isDuplicatedImportSelection(_1ad0e5267_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1ad0e9a63_getImportDef(_1ad0e5267_Sema*, jule::Str, jule::Ptr<_1ad0dc11b_ImportInfo>&);
inline jule::Bool _1ad0e9d71_checkImportSelections(_1ad0e5267_Sema*, jule::Ptr<_1ad0dc11b_ImportInfo>&);
inline jule::Bool _1ad0ea17e_isUseAliasDuplication(_1ad0e5267_Sema*, jule::Ptr<_1ad0dc11b_ImportInfo>&);
inline jule::Bool _1ad0ea48c_checkImport(_1ad0e5267_Sema*, jule::Ptr<_1ad0dc11b_ImportInfo>&);
inline void _1ad0ea668_checkImports(_1ad0e5267_Sema*);
inline void _1ad0ea844_implFileImpls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad0eaa20_implImpls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad0eabeb_checkEnums(jule::Ptr<_1ad0e5267_Sema>);
inline _1ad193755_typeChecker _1ad0eb14c_typeChecker(jule::Ptr<_1ad0e5267_Sema>, jule::Trait<_1ad1a5bb8_Lookup>, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>, jule::Ptr<_1ad192941_referencer>);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad0eb647_buildTypeWithRefers(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac449eb3_TypeDecl>&, jule::Trait<_1ad1a5bb8_Lookup>, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>, jule::Ptr<_1ad192941_referencer>);
inline jule::Bool _1ad0ebb42_checkTypeWithRefers(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad189383_TypeSymbol>&, jule::Trait<_1ad1a5bb8_Lookup>, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>, jule::Ptr<_1ad192941_referencer>);
inline jule::Ptr<_1ac540d78_constraintChecker> _1ad0ebda6_constraintChecker(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad0ec25d_checkType(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad189383_TypeSymbol>&, jule::Trait<_1ad1a5bb8_Lookup>);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ec6ae_buildTypeWithGenerics(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac449eb3_TypeDecl>&, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>, jule::Ptr<_1ac518702_ReferenceStack>);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ec9bc_buildType(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac449eb3_TypeDecl>&);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad0eccca_selectType(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac449eb3_TypeDecl>&);
inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed22b_evalpd(jule::Ptr<_1ad0e5267_Sema>, jule::Trait<_1ad1a5bb8_Lookup>, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad112097_Var>);
inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed5d3_evalp(jule::Ptr<_1ad0e5267_Sema>, jule::Trait<_1ad1a5bb8_Lookup>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed8e1_eval(jule::Ptr<_1ad0e5267_Sema>, jule::Trait<_1ad1a5bb8_Lookup>);
inline jule::Bool _1ad0edddb_checkAssignType(jule::Ptr<_1ad0e5267_Sema>, jule::Bool, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad0ee33c_checkTypeCompatibility(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ee716_buildNonGenericTypeKind(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac449eb3_TypeDecl>&, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>&);
inline void _1ad0ee9be_buildFnNonGenericTypeKinds(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Ptr<_1ac515831_FnIns> _1ad0eecdd_getTraitCheckFnKind(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline jule::Bool _1ad10023e_checkConstraintsFn(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1a959a127_Token>&, jule::Ptr<_1ac515831_FnIns>);
inline jule::Bool _1ad100690_checkConstraintsStruct(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1a959a127_Token>&, jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Bool _1ad100a47_fnEnvironment(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)>);
inline void _1ad100cbc_checkFnParamKind(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac514962_ParamIns>&);
inline jule::Bool _1ad1010ca_reloadFnInsTypes(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>);
inline jule::Bool _1ad10154d_checkRefValidityForInitExpr(jule::Ptr<_1ad0e5267_Sema>, jule::Bool, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1ad101b25_checkValidityForInitExpr(jule::Ptr<_1ad0e5267_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1ad101edd_checkTypeAliasDeclKind(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad184537_TypeAlias>&, jule::Trait<_1ad1a5bb8_Lookup>);
inline void _1ad10230c_checkTypeAliasDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad184537_TypeAlias>&, jule::Trait<_1ad1a5bb8_Lookup>);
inline void _1ad102582_checkTypeAliasDeclDup(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad184537_TypeAlias>&);
inline jule::Bool _1ad1027e6_checkTypeAliasDecls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1bc268574_checkEnumItemsDup(_1ad0e5267_Sema*, jule::Slice<jule::Ptr<_1ac52618d_EnumItem>>);
inline void _1bc274074_checkEnumItemsDup(_1ad0e5267_Sema*, jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>>);
inline void _1ad102ce1_checkEnumItemsStr(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac526b83_Enum>&);
inline void _1ad103066_checkEnumItemsInt(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac526b83_Enum>&);
inline void _1ad1032db_checkEnumDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac526b83_Enum>&);
inline void _1ad103561_checkTypeEnumDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac52827d_TypeEnum>&);
inline jule::Bool _1ad1037c5_checkEnumDecls(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad103a39_checkTypeEnumDecls(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad103d47_checkDeclGenerics(_1ad0e5267_Sema*, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>&);
inline jule::Bool _1ad104155_checkFnDeclParamsDup(_1ad0e5267_Sema*, jule::Ptr<_1ac512b80_Fn>&);
inline jule::Bool _1ad104463_checkFnDeclResultDup(_1ad0e5267_Sema*, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad1046d8_checkFnDeclPrototype(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad10495d_checkTraitDeclMethod(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad104bd3_checkTraitDeclMethods(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac524a3d_Trait>&);
inline void _1ad104e58_checkTraitDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac524a3d_Trait>&);
inline jule::Bool _1ad1051bc_checkTraitDecls(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad105574_checkTraitImplMethods(_1ad0e5267_Sema*, jule::Ptr<_1ac524a3d_Trait>&, jule::Ptr<_1ac5ae0b1_Impl>&);
inline jule::Bool _1ad10592b_implToStruct(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&, jule::Ptr<_1ac5ae0b1_Impl>&);
inline void _1ad105ba1_implTrait(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac5ae0b1_Impl>&);
inline void _1ad105e26_implStruct(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac5ae0b1_Impl>&);
inline void _1ad10619b_implImpl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac5ae0b1_Impl>&);
inline void _1ad1064ba_checkVarDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad112097_Var>&, jule::Trait<_1ad1a5bb8_Lookup>);
inline void _1ad106740_checkGlobalVarDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad112097_Var>&);
inline jule::Bool _1ad1069a4_checkGlobalDecls(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad106d5b_checkStructTraitImpl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&, jule::Ptr<_1ac524a3d_Trait>&);
inline jule::Bool _1ad107169_checkStructImpls(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Bool _1ad107477_checkStructFields(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1ad1076ec_checkStructDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Bool _1ad107961_checkStructDecls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad107bd6_checkFnDecl(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline jule::Bool _1ad107e4a_checkFnDecls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad108313_pushCycleError(_1ad0e5267_Sema*, jule::Ptr<_1ac43a6e0_Struct>&, jule::Ptr<_1ac43a6e0_Struct>&, jule::Str&);
inline jule::Bool _1ad108764_checkCrossCycle(_1ad0e5267_Sema*, jule::Ptr<_1ac43a6e0_Struct>&, jule::Ptr<_1ac43a6e0_Struct>&, jule::Str&);
inline jule::Bool _1ad108bd7_checkStructDeriveIllegalCycles(_1ad0e5267_Sema*, jule::Str, jule::Ptr<_1ac43a6e0_Struct>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad109028_checkStructInsDeriveClone(_1ad0e5267_Sema*, jule::Ptr<_1ac466a3a_StructIns>);
inline void _1ad109215_checkPackageDecls(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad109556_checkDataForTypeInference(_1ad0e5267_Sema*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline void _1ad1097dc_checkVar(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad112097_Var>&);
inline void _1ad109b0b_checkTypeVar(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ad112097_Var>&, jule::Trait<_1ad1a5bb8_Lookup>);
inline void _1ad109cd7_checkGlobalTypes(jule::Ptr<_1ad0e5267_Sema>);
inline jule::Ptr<_1ac515831_FnIns> _1ad10a18e_readyToCheckFn(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad10a4ad_checkTypeMethod(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1ac512b80_Fn>&);
inline jule::Ptr<_1ac515831_FnIns> _1ad10a90e_checkStructInsOp(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1ac512b80_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>);
inline jule::Bool _1ad10acb6_checkStructEnv(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad10b16d_precheckStructIns(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1a959a127_Token>);
inline void _1ad10b3e3_checkStructIns(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1ad10b668_checkTypeStruct(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1ad10b844_checkStructTypes(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10badb_checkStructInsOperators(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac466a3a_StructIns>);
inline void _1ad10bd72_precheckStructType(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1ad10c04d_precheckStructTypes(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10c2c3_checkRets(_1ad0e5267_Sema*, jule::Ptr<_1ac515831_FnIns>&);
inline void _1ad10c5e2_checkFnInsSc(_1ad0e5267_Sema*, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1ad0c7799_scopeChecker>&);
inline void _1ad10c911_checkFnInsCaller(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1a959a127_Token>);
inline void _1ad10cb86_checkFnIns(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac515831_FnIns>&);
inline void _1ad10ce0b_checkTypeFn(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad10d181_checkTestFn(_1ad0e5267_Sema*, jule::Ptr<_1ac515831_FnIns>&);
inline void _1ad10d406_precheckTypeFn(jule::Ptr<_1ad0e5267_Sema>, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad10d5d2_precheckFnTypes(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10d7ad_checkFnTypes(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10d989_checkPackageTypes(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10db65_setFileSemaFields(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10dd41_setSemaFields(jule::Ptr<_1ad0e5267_Sema>);
inline void _1ad10e0b6_check(jule::Ptr<_1ad0e5267_Sema>, jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&);
struct _1ad0e5267_Sema {
	jule::Slice<_1a92722b6_Log> _field_errors = jule::Slice<_1a92722b6_Log>();
	jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>();
	jule::Ptr<_1ad15442a_SymbolTable> _field_file = jule::Ptr<_1ad15442a_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1ad0e5267_Sema(void) = default;

	inline bool operator==(_1ad0e5267_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1ad0e5267_Sema _other) { return !this->operator==(_other); }


};
inline _1ad10e46d_missingRetChecker static__1ad10e836_new(void);
inline jule::Bool _1ad10eb11_checkConditional(_1ad10e46d_missingRetChecker*, jule::Ptr<_1ad0c505a_Conditional>);
inline jule::Bool _1ad10ee1e_checkMatch(_1ad10e46d_missingRetChecker*, jule::Ptr<_1ad0c6677_Match>);
inline jule::Bool _1ad11022c_checkInfIter(_1ad10e46d_missingRetChecker*, jule::Ptr<_1ad0c5247_InfIter>);
inline jule::Bool _1ad11053a_checkScope(_1ad10e46d_missingRetChecker*, jule::Ptr<_1ad0c4994_Scope>);
inline jule::Bool _1ad110848_check(_1ad10e46d_missingRetChecker*, jule::Ptr<_1ad0c4994_Scope>);
struct _1ad10e46d_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1ad10e46d_missingRetChecker(void) = default;

	inline bool operator==(_1ad10e46d_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1ad10e46d_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1ad11112e_IterRelation {
	jule::Ptr<_1ad112097_Var> _field_Range = jule::Ptr<_1ad112097_Var>();
	

	_1ad11112e_IterRelation(void) = default;

	inline bool operator==(_1ad11112e_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1ad11112e_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad11244e_IsInitialized(_1ad112097_Var*);
inline jule::Bool _1ad1126b3_IsTypeInferred(_1ad112097_Var*);
struct _1ad112097_Var {
	jule::Ptr<_1ad0c4994_Scope> _field_Scope = jule::Ptr<_1ad0c4994_Scope>();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Ptr<_1ad15a211_Value> _field_Value = jule::Ptr<_1ad15a211_Value>();
	jule::Ptr<_1ac518702_ReferenceStack> _field_Refers = jule::Ptr<_1ac518702_ReferenceStack>();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Ptr<_1ad11112e_IterRelation> _field_IterRelation = jule::Ptr<_1ad11112e_IterRelation>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Depends = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	

	_1ad112097_Var(void) = default;

	inline bool operator==(_1ad112097_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1ad112097_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1ad113241_Dispose(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1134d8_Str(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad113829_logical(jule::Ptr<_1ac512b80_Fn>&, jule::Str);
inline jule::Bool static__1ad113ac1_Eq(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad113d68_Gt(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad114110_GtEq(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1143a7_Lt(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad11464e_LtEq(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad114990_result(jule::Ptr<_1ac512b80_Fn>&, jule::Str);
inline jule::Bool static__1ad114c37_Shl(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad114ece_Shr(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad115276_Add(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad11551d_Sub(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1157b5_Div(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad115a5c_Mul(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad115d04_Mod(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad11609b_BitAnd(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad116343_BitOr(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1165da_BitXor(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad11692b_unary(jule::Ptr<_1ac512b80_Fn>&, jule::Str);
inline jule::Bool static__1ad116bc3_Neg(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad116e6a_Pos(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad117212_BitNot(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad117553_assign(jule::Ptr<_1ac512b80_Fn>&, jule::Str);
inline jule::Bool static__1ad1177ea_AddAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad117a92_SubAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad117d39_DivAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1180d1_MulAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad118378_ModAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad118620_ShlAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad1188b7_ShrAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad118b5e_BitOrAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad118e06_BitAndAssign(jule::Ptr<_1ac512b80_Fn>);
inline jule::Bool static__1ad11919d_BitXorAssign(jule::Ptr<_1ac512b80_Fn>);
struct _1ad112ac0_FuncPattern {
	

	_1ad112ac0_FuncPattern(void) = default;

	inline bool operator==(_1ad112ac0_FuncPattern _other) { return true; }

	inline bool operator!=(_1ad112ac0_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1ad143617_pushErr(_1ad1430ea_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ad14387b_checkTrait(_1ad1430ea_typeCompatibilityChecker*);
inline jule::Bool _1ad143ae0_checkPtr(_1ad1430ea_typeCompatibilityChecker*);
inline jule::Bool _1ad143d54_checkPrim(_1ad1430ea_typeCompatibilityChecker*);
inline jule::Bool _1ad14420b_typeEnum(_1ad1430ea_typeCompatibilityChecker*, jule::Ptr<_1ac52827d_TypeEnum>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad144470_checkTypeEnum(_1ad1430ea_typeCompatibilityChecker*);
inline jule::Bool _1ad1446d4_check(_1ad1430ea_typeCompatibilityChecker*);
struct _1ad1430ea_typeCompatibilityChecker {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Ptr<_1ad18522a_TypeKind> _field_dest = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad18522a_TypeKind> _field_src = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	

	_1ad1430ea_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1ad1430ea_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ad1430ea_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1ad145185_pushErr(_1ad144c23_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ad1453e9_checkValidity(_1ad144c23_assignTypeChecker*);
inline jule::Bool _1ad14565d_checkConst(_1ad144c23_assignTypeChecker*);
inline jule::Bool _1ad1458c2_isPrim(_1ad144c23_assignTypeChecker*);
inline jule::Bool _1ad145b36_checkCompatibility(_1ad144c23_assignTypeChecker*);
inline jule::Bool _1ad145d9a_check(_1ad144c23_assignTypeChecker*);
struct _1ad144c23_assignTypeChecker {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Ptr<_1ad18522a_TypeKind> _field_dest = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad159188_Data> _field_d = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	

	_1ad144c23_assignTypeChecker(void) = default;

	inline bool operator==(_1ad144c23_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ad144c23_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bc720872_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1bc71eeae_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1bc72227a_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1bc725954_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad147022_annotateConstraintMap(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad147330_annotateConstraintTup(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14763d_annotateConstraintFn(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14796d_annotateConstraintIdent(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad147c8c_annotateConstraint(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline void _1ad1480ab_pushGeneric(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&, jule::I64);
inline jule::Bool _1ad1483b9_annotatePrim(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1486c7_annotateArr(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1489d5_annotateSlc(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad148d8c_checkMapKey(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14919a_annotateMap(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1494a8_annotateFn(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1497b6_annotatePtr(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad149ac4_annotateSptr(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad149dd2_annotateStruct(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14a1e0_annotateAny(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14a4ed_annotateKind(_1ad14663c_dynamicTypeAnnotation*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad14a762_annotate(_1ad14663c_dynamicTypeAnnotation*);
struct _1ad14663c_dynamicTypeAnnotation {
	jule::Ptr<_1ad15ac06_Eval> _field_e = jule::Ptr<_1ad15ac06_Eval>();
	jule::Ptr<_1ac515831_FnIns> _field_f = jule::Ptr<_1ac515831_FnIns>();
	jule::Ptr<_1ac514962_ParamIns> _field_p = jule::Ptr<_1ac514962_ParamIns>();
	jule::Ptr<_1ad159188_Data> _field_a = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ad18522a_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ac449eb3_TypeDecl> _field_c = jule::Ptr<_1ac449eb3_TypeDecl>();
	

	_1ad14663c_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1ad14663c_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1ad14663c_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1ad14b488_pushErrToken(_1ad14ae38_fnCallArgChecker*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad14b7a7_pushErr(_1ad14ae38_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ac514962_ParamIns>> _1ad14ba1b_getParams(_1ad14ae38_fnCallArgChecker*);
inline jule::Bool _1ad14bd29_checkCounts(_1ad14ae38_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>&);
inline jule::Bool _1ad14c27a_checkArg(_1ad14ae38_fnCallArgChecker*, jule::Ptr<_1ac514962_ParamIns>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Bool _1ad14c632_push(_1ad14ae38_fnCallArgChecker*, jule::Ptr<_1ac514962_ParamIns>&, jule::Ptr<_1ac44e4d4_Expr>);
inline jule::Bool _1ad14c9d9_pushVariadic(_1ad14ae38_fnCallArgChecker*, jule::Ptr<_1ac514962_ParamIns>&, jule::I64);
inline jule::Bool _1ad14cce7_checkArgs(_1ad14ae38_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>&);
inline jule::Bool _1ad14d07d_checkDynamicTypeAnnotation(_1ad14ae38_fnCallArgChecker*);
inline jule::Bool _1ad14d303_check(_1ad14ae38_fnCallArgChecker*);
struct _1ad14ae38_fnCallArgChecker {
	jule::Ptr<_1ad15ac06_Eval> _field_e = jule::Ptr<_1ad15ac06_Eval>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_args = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac515831_FnIns> _field_f = jule::Ptr<_1ac515831_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1ad14ae38_fnCallArgChecker(void) = default;

	inline bool operator==(_1ad14ae38_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1ad14ae38_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1ad14dd4d_pushErr(_1ad14d842_structLitChecker*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad14e16c_pushSugggestion(_1ad14d842_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ad14e535_pushMatch(_1ad14d842_structLitChecker*, jule::Ptr<_1ac442d57_FieldIns>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline void _1ad14e854_checkPair(_1ad14d842_structLitChecker*, jule::Ptr<_1ac454231_FieldExprPair>&, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>&);
inline jule::Bool _1ad14eb62_readyExprs(_1ad14d842_structLitChecker*, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>&);
inline void _1ad14edd7_check(_1ad14d842_structLitChecker*, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>&);
struct _1ad14d842_structLitChecker {
	jule::Ptr<_1ad15ac06_Eval> _field_e = jule::Ptr<_1ad15ac06_Eval>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	jule::Ptr<_1ac466a3a_StructIns> _field_s = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Slice<jule::Ptr<_1ac50accc_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ac50accc_StructArgExprModel>>();
	

	_1ad14d842_structLitChecker(void) = default;

	inline bool operator==(_1ad14d842_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ad14d842_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad112097_Var> _1ad1508bb_buildVar(_1ad150426_rangeChecker*, jule::Ptr<_1ac45cca6_VarDecl>&);
inline void _1ad150a97_setSizeKey(_1ad150426_rangeChecker*);
inline void _1ad150e60_checkRangeExprValidity(_1ad150426_rangeChecker*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad112097_Var>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline void _1ad15113b_checkSlice(_1ad150426_rangeChecker*);
inline void _1ad151317_checkArray(_1ad150426_rangeChecker*);
inline void _1ad1514e3_checkMapKeyA(_1ad150426_rangeChecker*);
inline void _1ad1516be_checkMapKeyB(_1ad150426_rangeChecker*);
inline void _1ad15189a_checkMap(_1ad150426_rangeChecker*);
inline void _1ad151a76_checkStr(_1ad150426_rangeChecker*);
inline jule::Bool _1ad151cda_check(_1ad150426_rangeChecker*);
struct _1ad150426_rangeChecker {
	jule::Ptr<_1ad0c7799_scopeChecker> _field_sc = jule::Ptr<_1ad0c7799_scopeChecker>();
	jule::Ptr<_1ac45e934_RangeKind> _field_rang = jule::Ptr<_1ac45e934_RangeKind>();
	jule::Ptr<_1ad0c5621_RangeIter> _field_Kind = jule::Ptr<_1ad0c5621_RangeIter>();
	jule::Ptr<_1ad159188_Data> _field_d = jule::Ptr<_1ad159188_Data>();
	

	_1ad150426_rangeChecker(void) = default;

	inline bool operator==(_1ad150426_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ad150426_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1ad152a33_prepareTypes(_1ad15257c_retTypeChecker*);
inline void _1ad152ca8_prepareExprs(_1ad15257c_retTypeChecker*, jule::Ptr<_1ac44e4d4_Expr>&);
inline void _1ad152e84_retVars(_1ad15257c_retTypeChecker*);
inline void _1ad153160_checkExprs(_1ad15257c_retTypeChecker*);
inline jule::Bool _1ad15346d_check(_1ad15257c_retTypeChecker*, jule::Ptr<_1ac44e4d4_Expr>&);
struct _1ad15257c_retTypeChecker {
	jule::Ptr<_1ad0c7799_scopeChecker> _field_sc = jule::Ptr<_1ad0c7799_scopeChecker>();
	jule::Ptr<_1ac515831_FnIns> _field_f = jule::Ptr<_1ac515831_FnIns>();
	jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>();
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_vars = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_model = jule::Any();
	

	_1ad15257c_retTypeChecker(void) = default;

	inline bool operator==(_1ad15257c_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ad15257c_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad154947_FindPackage(_1ad15442a_SymbolTable*, jule::Str);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad154c55_SelectPackage(_1ad15442a_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
inline jule::Ptr<_1ad112097_Var> _1ad15510c_FindVar(_1ad15442a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1554b4_FindTypeAlias(_1ad15442a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad15586b_FindStruct(_1ad15442a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad155c23_FindFn(_1ad15442a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad156031_FindTrait(_1ad15442a_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad15633e_FindEnum(_1ad15442a_SymbolTable*, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad15664c_FindTypeEnum(_1ad15442a_SymbolTable*, jule::Str);
inline jule::Ptr<_1ad112097_Var> _1ad156bbe_findVar(_1ad15442a_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad157120_findTypeAlias(_1ad15442a_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1ad1574c7_defByIdent(_1ad15442a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1ad157928_isDuplicatedIdent(_1ad15442a_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1ad15442a_SymbolTable {
	jule::Ptr<_1a95a04b2_File> _field_File = jule::Ptr<_1a95a04b2_File>();
	jule::Slice<_1ac519abb_Pass> _field_Passes = jule::Slice<_1ac519abb_Pass>();
	jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Vars = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>();
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>();
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1ac512b80_Fn>>();
	jule::Slice<jule::Ptr<_1ac524a3d_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1ac524a3d_Trait>>();
	jule::Slice<jule::Ptr<_1ac526b83_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1ac526b83_Enum>>();
	jule::Slice<jule::Ptr<_1ac52827d_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1ac52827d_TypeEnum>>();
	jule::Slice<jule::Ptr<_1ac5ae0b1_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1ac5ae0b1_Impl>>();
	

	_1ad15442a_SymbolTable(void) = default;

	inline bool operator==(_1ad15442a_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1ad15442a_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad159573_IsNil(_1ad159188_Data*);
inline jule::Bool _1ad1597d7_IsVoid(_1ad159188_Data*);
inline jule::Bool _1ad159a4b_IsConst(_1ad159188_Data*);
inline jule::Bool _1ad159d59_GoodOperand(_1ad159188_Data*, jule::Ptr<_1ad159188_Data>&);
struct _1ad159188_Data {
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1ac49c202_Const> _field_Constant = jule::Ptr<_1ac49c202_Const>();
	

	_1ad159188_Data(void) = default;

	inline bool operator==(_1ad159188_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ad159188_Data _other) { return !this->operator==(_other); }


};
struct _1ad15a211_Value {
	jule::Ptr<_1ac44e4d4_Expr> _field_Expr = jule::Ptr<_1ac44e4d4_Expr>();
	jule::Ptr<_1ad159188_Data> _field_Data = jule::Ptr<_1ad159188_Data>();
	

	_1ad15a211_Value(void) = default;

	inline bool operator==(_1ad15a211_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ad15a211_Value _other) { return !this->operator==(_other); }


};
inline void _1ad15b212_pushErr(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad15b531_pushSugggestion(_1ad15ac06_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ad15b70c_allowBuiltin(_1ad15ac06_Eval*);
inline void _1ad15b8d8_disallowBuiltin(_1ad15ac06_Eval*);
inline jule::Bool _1ad15bb4c_isUnsafe(_1ad15ac06_Eval*);
inline jule::Bool _1ad15bdb1_isGlobal(_1ad15ac06_Eval*);
inline jule::Bool _1ad15c18b_applyNumericPrefix(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad15c400_litNil(_1ad15ac06_Eval*);
inline jule::Ptr<_1ad159188_Data> _1ad15c70d_litStr(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15ca1b_litBool(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15cd29_litRune(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15d137_litFloat(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15d445_litInt(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15d753_litNum(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad15da61_evalLit(_1ad15ac06_Eval*, jule::Ptr<_1ac450518_LitExpr>);
inline jule::Any _1ad15dd6e_findBuiltins(_1ad15ac06_Eval*, jule::Str);
inline jule::Any _1ad15e226_getDef(_1ad15ac06_Eval*, jule::Str, jule::Bool);
inline void _1bc560a25_pushReference(_1ad15ac06_Eval*, jule::Ptr<_1ac515831_FnIns>&);
inline void _1bc575595_pushReference(_1ad15ac06_Eval*, jule::Ptr<_1ad112097_Var>&);
inline void _1bb8d15e4_pushReference(_1ad15ac06_Eval*, jule::Ptr<_1ac466a3a_StructIns>&);
inline jule::Ptr<_1ad159188_Data> _1ad15e7a9__evalEnum(_1ad15ac06_Eval*, jule::Ptr<_1ac526b83_Enum>);
inline jule::Ptr<_1ad159188_Data> _1ad15eb61_evalEnum(_1ad15ac06_Eval*, jule::Ptr<_1ac526b83_Enum>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad15ee6e__evalTypeEnum(_1ad15ac06_Eval*, jule::Ptr<_1ac52827d_TypeEnum>);
inline jule::Ptr<_1ad159188_Data> _1ad160326_evalTypeEnum(_1ad15ac06_Eval*, jule::Ptr<_1ac52827d_TypeEnum>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad160634__evalStruct(_1ad15ac06_Eval*, jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Ptr<_1ad159188_Data> _1ad1609db_evalStruct(_1ad15ac06_Eval*, jule::Ptr<_1ac466a3a_StructIns>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad160ce9_evalFnIns(_1ad15ac06_Eval*, jule::Ptr<_1ac515831_FnIns>);
inline void _1ad161118_checkDeprecated(_1ad15ac06_Eval*, jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad1614c0_evalFn(_1ad15ac06_Eval*, jule::Ptr<_1ac512b80_Fn>, jule::Ptr<_1a959a127_Token>);
inline void _1ad161888_pushIllegalCycleError(_1ad15ac06_Eval*, jule::Ptr<_1ad112097_Var>&, jule::Ptr<_1ad112097_Var>&, jule::Str&);
inline jule::Bool _1ad161c40_checkCrossCycle(_1ad15ac06_Eval*, jule::Ptr<_1ad112097_Var>&, jule::Str&);
inline jule::Bool _1ad1620e7_checkIllegalCycles(_1ad15ac06_Eval*, jule::Ptr<_1ad112097_Var>&, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16249e_evalVar(_1ad15ac06_Eval*, jule::Ptr<_1ad112097_Var>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad162856_evalTypeAlias(_1ad15ac06_Eval*, jule::Ptr<_1ad184537_TypeAlias>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad162c0d_evalDef(_1ad15ac06_Eval*, jule::Any, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16301b_evalIdent(_1ad15ac06_Eval*, jule::Ptr<_1ac45154c_IdentExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad163329_evalUnary(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac451c56_UnaryExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad163637_evalVariadic(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac45210d_VariadicExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad163945_evalUnsafe(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac450c22_UnsafeExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad163c53_evalArr(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac455d8c_SliceExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad1641a4_evalExpSlc(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac455d8c_SliceExpr>, jule::Ptr<_1ad18522a_TypeKind>, jule::Any);
inline jule::Ptr<_1ad159188_Data> _1ad1644b2_evalSliceExpr(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac455d8c_SliceExpr>);
inline void _1ad164803_checkIntegerIndexingByData(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>);
inline void _1ad164bcc_indexingPtr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline void _1ad165095_indexingArr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline void _1ad16545d_indexingSlc(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline void _1ad165826_indexingMap(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline void _1ad165bde_indexingStr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline void _1ad1660a7_toIndexing(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline jule::Bool _1ad16652a_pushGenericsFromExprSubIdent(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac452ce0_SubIdentExpr>&, jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>&, jule::Ptr<_1ac44e4d4_Expr>&);
inline jule::Bool _1ad1668e3_pushGenericsFromData(jule::Ptr<_1ad15ac06_Eval>, jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>&, jule::Ptr<_1ac44e4d4_Expr>&);
inline void _1ad166c34_evalIdentDeclFromIndexing(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline jule::Bool _1ad167196_checkGenericFn(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1a959a127_Token>&, jule::Any&);
inline void _1ad1674d7_evalFnGenericFromIndexing(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac45672d_IndexingExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad167806_evalIndexing(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac45672d_IndexingExpr>);
inline std::tuple<jule::Ptr<_1ad159188_Data>,jule::Ptr<_1ad159188_Data>> _1ad167b14_evalSlicingExprs(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac456d38_SlicingExpr>&);
inline void _1ad167d89_slicingArr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&);
inline void _1ad168252_slicingStr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad1686b4_checkSlicing(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac456d38_SlicingExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad1689c2_evalSlicing(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac456d38_SlicingExpr>);
inline void _1ad168d8a_castPtr(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad169253_castStruct(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad16961b_castRef(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad1699d4_castSlc(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad169d03_castStr(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad16a1bb_castInt(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad16a584_castNum(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad16a94c_castPrim(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline void _1ad16ac6b_castConstant(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad16b134_castTypeEnum(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1ad159188_Data> _1ad16b585_evalCastByTypeNData(_1ad15ac06_Eval*, jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16b9d6_evalCastT(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ac44e4d4_Expr>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1ad159188_Data> _1ad16bce4_evalCast(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac4524b5_CastExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad16c102_evalNsSelection(_1ad15ac06_Eval*, jule::Ptr<_1ac45286c_NsSelectionExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad16c553_evalStructLitExplicit(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac466a3a_StructIns>, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16c861_evalStructLit(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac45497e_StructLit>);
inline _1ad193755_typeChecker _1ad16cac5_typeChecker(_1ad15ac06_Eval*);
inline jule::Ptr<_1ad159188_Data> _1ad16cdd3_evalType(_1ad15ac06_Eval*, jule::Ptr<_1ac449eb3_TypeDecl>);
inline void _1ad16d202_callTypeFn(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad16d521_callBuiltinFn(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad16d862_checkFnOfConcurrentCall(_1ad15ac06_Eval*, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1a959a127_Token>);
inline void _1ad16dc5d_processExceptionalHandler(_1ad15ac06_Eval*, jule::Ptr<_1ac515831_FnIns>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad16e08d_callFn(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad16e39b_evalFnCall(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac4537a2_FnCallExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad16e753_evalEnumStatic(_1ad15ac06_Eval*, jule::Ptr<_1ac526b83_Enum>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16eb0a_evalTypeEnumStatic(_1ad15ac06_Eval*, jule::Ptr<_1ac52827d_TypeEnum>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad16eeb2_evalStructStatic(_1ad15ac06_Eval*, jule::Ptr<_1ac466a3a_StructIns>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad170413_evalTraitSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1ac524a3d_Trait>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad17090d_evalStructSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1ac466a3a_StructIns>, jule::Ptr<_1ac452ce0_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ad159188_Data> _1ad170cb5_evalSliceSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad17116c_evalArraySubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad171524_evalMapSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad1718cb_evalStrSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad171bd9_evalIntTypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad171ee7_evalUintTypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad172305_evalI8TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad172613_evalI16TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad172921_evalI32TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad172c2e_evalI64TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad17303c_evalU8TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad17334a_evalU16TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad173658_evalU32TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad173966_evalU64TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad173c74_evalF32TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad174082_evalF64TypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad174439_evalPrimStatic(_1ad15ac06_Eval*, jule::Str, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ad159188_Data> _1ad1747e1_evalTypeStatic(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1ac452ce0_SubIdentExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad174b98_evalObjSubIdent(_1ad15ac06_Eval*, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1ac452ce0_SubIdentExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad174ea6_evalSubIdent(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac452ce0_SubIdentExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad1752b4_evalTuple(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac450161_TupleExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad17566b_evalMap(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ad190499_Map>, jule::Ptr<_1ac454e02_BraceLit>);
inline jule::Ptr<_1ad159188_Data> _1ad175979_evalBraceLit(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac454e02_BraceLit>);
inline jule::Ptr<_1ad159188_Data> _1ad175c87_evalAnonFn(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac45bcc7_FnDecl>);
inline jule::Ptr<_1ad159188_Data> _1ad176095_evalBinop(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac453263_BinopExpr>);
inline jule::Ptr<_1ad159188_Data> _1ad1763a3_evalExprKind(jule::Ptr<_1ad15ac06_Eval>, jule::Any);
inline jule::Ptr<_1ad159188_Data> _1ad1766b1_eval(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac44e4d4_Expr>);
inline jule::Ptr<_1ad159188_Data> _1ad1769be_evalExpr(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1ac44e4d4_Expr>);
struct _1ad15ac06_Eval {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Trait<_1ad1a5bb8_Lookup> _field_lookup = jule::Trait<_1ad1a5bb8_Lookup>();
	jule::Ptr<_1ad18522a_TypeKind> _field_prefix = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1ad112097_Var> _field_owner = jule::Ptr<_1ad112097_Var>();
	jule::Ptr<_1ac442d57_FieldIns> _field_field = jule::Ptr<_1ac442d57_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1ad15ac06_Eval(void) = default;

	inline bool operator==(_1ad15ac06_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ad15ac06_Eval _other) { return !this->operator==(_other); }


};
inline _1ad176e42_unaryEval static__1ad1773e8_new(jule::Ptr<_1ad15ac06_Eval>);
inline void _1ad1775c4_minus(_1ad176e42_unaryEval*);
inline void _1ad1777a0_plus(_1ad176e42_unaryEval*);
inline void _1ad17797b_caret(_1ad176e42_unaryEval*);
inline void _1ad177b57_excl(_1ad176e42_unaryEval*);
inline void _1ad177d33_star(_1ad176e42_unaryEval*);
inline void _1ad17800e_amper(_1ad176e42_unaryEval*);
inline void _1ad1781da_typeDecl(_1ad176e42_unaryEval*);
inline void _1ad1783b6_evalData(_1ad176e42_unaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad178691_eval(_1ad176e42_unaryEval*, jule::Ptr<_1ac451c56_UnaryExpr>);
struct _1ad176e42_unaryEval {
	jule::Ptr<_1ad15ac06_Eval> _field_e = jule::Ptr<_1ad15ac06_Eval>();
	jule::Ptr<_1ad159188_Data> _field_d = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ac451c56_UnaryExpr> _field_u = jule::Ptr<_1ac451c56_UnaryExpr>();
	

	_1ad176e42_unaryEval(void) = default;

	inline bool operator==(_1ad176e42_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ad176e42_unaryEval _other) { return !this->operator==(_other); }


};
inline _1ad178bd0_binaryEval static__1ad179296_newPlain(jule::Ptr<_1ad15ac06_Eval>);
inline _1ad178bd0_binaryEval static__1ad1795d7_new(jule::Ptr<_1ad15ac06_Eval>, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad17984b_checkTypeCompatibility(_1ad178bd0_binaryEval*);
inline jule::Bool _1ad179ae3_checkStructCommonOperatorCompatibility(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad179d8a_evalNil(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17a0ee_evalEnum(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17a363_evalTypeEnum(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17a5c7_evalSptr(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17a83b_evalPtr(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17aaa0_evalArr(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17ad14_evalSlc(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17b078_evalFn(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17b2dc_evalStruct(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17b551_evalTrait(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17b7b5_evalAny(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17ba29_evalBool(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17bc8d_evalStr(_1ad178bd0_binaryEval*);
inline void _1ad17be69_setTypeToGreater(_1ad178bd0_binaryEval*);
inline void _1ad17c1ab_checkModData(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&);
inline void _1ad17c387_mod(_1ad178bd0_binaryEval*);
inline jule::Bool _1ad17c73e_numbersAreCompatibile(_1ad178bd0_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1ad159188_Data> _1ad17c9a3_evalFloat(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17cc17_evalInt(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17ce7b_evalPrim(_1ad178bd0_binaryEval*);
inline jule::Ptr<_1ad159188_Data> _1ad17d1e0_evalOp(_1ad178bd0_binaryEval*);
inline void _1ad17d465_evalConst(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&);
inline void _1ad17d6da_checkData(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&);
inline void _1ad17d8b6_checkDatas(_1ad178bd0_binaryEval*);
inline void _1ad17db3b_setModel(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&);
inline void _1ad17ddb1_postEval(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad17e268_solveExplicit(_1ad178bd0_binaryEval*, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad17e576_eval(_1ad178bd0_binaryEval*, jule::Ptr<_1ac453263_BinopExpr>&);
struct _1ad178bd0_binaryEval {
	jule::Ptr<_1ad15ac06_Eval> _field_e = jule::Ptr<_1ad15ac06_Eval>();
	jule::Ptr<_1ad159188_Data> _field_l = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1ad159188_Data> _field_r = jule::Ptr<_1ad159188_Data>();
	jule::Ptr<_1a959a127_Token> _field_op = jule::Ptr<_1a959a127_Token>();
	

	_1ad178bd0_binaryEval(void) = default;

	inline bool operator==(_1ad178bd0_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ad178bd0_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ad1839ed_InsGeneric {
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>();
	

	_1ad1839ed_InsGeneric(void) = default;

	inline bool operator==(_1ad1839ed_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ad1839ed_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1ad184537_TypeAlias {
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_Scope = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1ad189383_TypeSymbol> _field_Kind = jule::Ptr<_1ad189383_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>();
	

	_1ad184537_TypeAlias(void) = default;

	inline bool operator==(_1ad184537_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1ad184537_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad185626_Str(_1ad18522a_TypeKind*);
inline jule::Bool _1ad185934_Equals(jule::Ptr<_1ad18522a_TypeKind>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ad185dda_CppLinked(_1ad18522a_TypeKind*);
inline jule::Bool _1ad18614e_IsNil(_1ad18522a_TypeKind*);
inline jule::Bool _1ad1863b3_Void(_1ad18522a_TypeKind*);
inline jule::Bool _1ad186627_Mutable(_1ad18522a_TypeKind*);
inline jule::Bool _1ad18688b_NilCompatible(_1ad18522a_TypeKind*);
inline jule::Bool _1ad186b00_PerformsRC(_1ad18522a_TypeKind*);
inline jule::Bool _1ad186d64_SupportsCloning(_1ad18522a_TypeKind*);
inline jule::Bool _1ad1870c8_Variadicable(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad189c02_Prim> _1ad18733c_Prim(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad18d486_Sptr> _1ad1875a1_Sptr(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad1919ea_Ptr> _1ad187815_Ptr(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ac526b83_Enum> _1ad187a79_Enum(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad187cdd_TypeEnum(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad19108d_Arr> _1ad188052_Arr(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad18dde3_Slc> _1ad1882b6_Slc(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ac515831_FnIns> _1ad18852a_Fn(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ac466a3a_StructIns> _1ad18878e_Struct(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ac524a3d_Trait> _1ad188a03_Trait(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad190499_Map> _1ad188c67_Map(_1ad18522a_TypeKind*);
inline jule::Ptr<_1ad18e971_Tuple> _1ad188ecb_Tup(_1ad18522a_TypeKind*);
struct _1ad18522a_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1ad184ceb_Kind> _field_Kind = jule::Trait<_1ad184ceb_Kind>();
	

	_1ad18522a_TypeKind(void) = default;

	inline bool operator==(_1ad18522a_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ad18522a_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad18973a_checked(_1ad189383_TypeSymbol*);
inline void _1ad189916_removeKind(_1ad189383_TypeSymbol*);
struct _1ad189383_TypeSymbol {
	jule::Ptr<_1ac449eb3_TypeDecl> _field_Decl = jule::Ptr<_1ac449eb3_TypeDecl>();
	jule::Ptr<_1ad18522a_TypeKind> _field_Kind = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad189383_TypeSymbol(void) = default;

	inline bool operator==(_1ad189383_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ad189383_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad18a065_Str(_1ad189c02_Prim*);
inline jule::Bool _1ad18a373_Equals(jule::Ptr<_1ad189c02_Prim>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ad18a7e6_IsConstraint(_1ad189c02_Prim*);
inline jule::Bool _1ad18aa5a_IsI8(_1ad189c02_Prim*);
inline jule::Bool _1ad18acbe_IsI16(_1ad189c02_Prim*);
inline jule::Bool _1ad18b033_IsI32(_1ad189c02_Prim*);
inline jule::Bool _1ad18b297_IsI64(_1ad189c02_Prim*);
inline jule::Bool _1ad18b50b_IsU8(_1ad189c02_Prim*);
inline jule::Bool _1ad18b770_IsU16(_1ad189c02_Prim*);
inline jule::Bool _1ad18b9d4_IsU32(_1ad189c02_Prim*);
inline jule::Bool _1ad18bc48_IsU64(_1ad189c02_Prim*);
inline jule::Bool _1ad18beac_IsF32(_1ad189c02_Prim*);
inline jule::Bool _1ad18c221_IsF64(_1ad189c02_Prim*);
inline jule::Bool _1ad18c485_IsInt(_1ad189c02_Prim*);
inline jule::Bool _1ad18c6e9_IsUint(_1ad189c02_Prim*);
inline jule::Bool _1ad18c95d_IsUintptr(_1ad189c02_Prim*);
inline jule::Bool _1ad18cbc2_IsBool(_1ad189c02_Prim*);
inline jule::Bool _1ad18ce36_IsStr(_1ad189c02_Prim*);
inline jule::Bool _1ad18d19a_IsAny(_1ad189c02_Prim*);
struct _1ad189c02_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1ad189c02_Prim(void) = default;

	inline bool operator==(_1ad189c02_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ad189c02_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad18d7e9_Str(_1ad18d486_Sptr*);
inline jule::Bool _1ad18db07_Equals(jule::Ptr<_1ad18d486_Sptr>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1ad18d486_Sptr {
	jule::Ptr<_1ad18522a_TypeKind> _field_Elem = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad18d486_Sptr(void) = default;

	inline bool operator==(_1ad18d486_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ad18d486_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad18e3ee_Str(_1ad18dde3_Slc*);
inline jule::Bool _1ad18e70c_Equals(jule::Ptr<_1ad18dde3_Slc>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1ad18dde3_Slc {
	jule::Ptr<_1ad18522a_TypeKind> _field_Elem = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad18dde3_Slc(void) = default;

	inline bool operator==(_1ad18dde3_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ad18dde3_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad18ecd4_Str(_1ad18e971_Tuple*);
inline jule::Bool _1ad1900e2_Equals(jule::Ptr<_1ad18e971_Tuple>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1ad18e971_Tuple {
	jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>();
	

	_1ad18e971_Tuple(void) = default;

	inline bool operator==(_1ad18e971_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1ad18e971_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad19080c_Str(_1ad190499_Map*);
inline jule::Bool _1ad190b1a_Equals(jule::Ptr<_1ad190499_Map>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1ad190499_Map {
	jule::Ptr<_1ad18522a_TypeKind> _field_Key = jule::Ptr<_1ad18522a_TypeKind>();
	jule::Ptr<_1ad18522a_TypeKind> _field_Val = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad190499_Map(void) = default;

	inline bool operator==(_1ad190499_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ad190499_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad191401_Str(_1ad19108d_Arr*);
inline jule::Bool _1ad19170e_Equals(jule::Ptr<_1ad19108d_Arr>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1ad19108d_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1ad18522a_TypeKind> _field_Elem = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad19108d_Arr(void) = default;

	inline bool operator==(_1ad19108d_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ad19108d_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad191d5d_Str(_1ad1919ea_Ptr*);
inline jule::Bool _1ad19216b_Equals(jule::Ptr<_1ad1919ea_Ptr>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ad1924bd_IsUnsafe(_1ad1919ea_Ptr*);
struct _1ad1919ea_Ptr {
	jule::Ptr<_1ad18522a_TypeKind> _field_Elem = jule::Ptr<_1ad18522a_TypeKind>();
	

	_1ad1919ea_Ptr(void) = default;

	inline bool operator==(_1ad1919ea_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ad1919ea_Ptr _other) { return !this->operator==(_other); }


};
struct _1ad192941_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1ad192941_referencer(void) = default;

	inline bool operator==(_1ad192941_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ad192941_referencer _other) { return !this->operator==(_other); }


};
inline void _1ad193e5e_pushErr(_1ad193755_typeChecker*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad19413a_allowBuiltin(_1ad193755_typeChecker*);
inline void _1ad194316_disallowBuiltin(_1ad193755_typeChecker*);
inline jule::Ptr<_1ad189c02_Prim> _1ad194624_buildPrim(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&);
inline void _1bc29d345_pushReference(_1ad193755_typeChecker*, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1bc2a13d1_pushReference(_1ad193755_typeChecker*, jule::Ptr<_1ac524a3d_Trait>&);
inline void _1ad194b1e_pushReferenceByKind(_1ad193755_typeChecker*, jule::Ptr<_1ad18522a_TypeKind>&);
inline void _1ad194ed7_pushCycleError(_1ad193755_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1ad19538e_checkCrossCycle(_1ad193755_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1ad195746_checkIllegalCycles(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1ad184ceb_Kind> _1ad19a95a_fromTypeAlias(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ad184537_TypeAlias>&);
inline jule::Ptr<_1ac526b83_Enum> _1ad19ad12_fromEnum(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ac526b83_Enum>&);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad19b1b9_fromTypeEnum(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ac52827d_TypeEnum>&);
inline jule::Ptr<_1ac524a3d_Trait> _1ad19b571_fromTrait(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ac524a3d_Trait>&);
inline jule::Bool _1ad19b928_checkStructIns(_1ad193755_typeChecker*, jule::Ptr<_1ac466a3a_StructIns>&, jule::Ptr<_1a959a127_Token>&);
inline void _1ad19bbc0_appendUsedStructReference(_1ad193755_typeChecker*, jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Ptr<_1ac466a3a_StructIns> _1ad19c088_buildStructInstance(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Ptr<_1ac466a3a_StructIns> _1ad19c440_fromStruct(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&, jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Trait<_1ad184ceb_Kind> _1ad19c74d_getDef(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>&);
inline jule::Trait<_1ad184ceb_Kind> _1ad19ca5b_buildIdent(_1ad193755_typeChecker*, jule::Ptr<_1ac44a579_IdentTypeDecl>);
inline jule::Trait<_1ad184ceb_Kind> _1ad19cd69_buildSubIdent(_1ad193755_typeChecker*, jule::Ptr<_1ac44abc8_SubIdentTypeDecl>);
inline jule::Ptr<_1ad18d486_Sptr> _1ad19d177_buildSptrFromType(_1ad193755_typeChecker*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Ptr<_1ad18d486_Sptr> _1ad19d485_buildSptr(_1ad193755_typeChecker*, jule::Ptr<_1ac44b36b_SptrTypeDecl>);
inline jule::Ptr<_1ad1919ea_Ptr> _1ad19d793_buildPtrFromType(_1ad193755_typeChecker*, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Ptr<_1ad1919ea_Ptr> _1ad19daa1_buildPtr(_1ad193755_typeChecker*, jule::Ptr<_1ac44bd3e_PtrTypeDecl>);
inline jule::Ptr<_1ad18dde3_Slc> _1ad19ddae_buildSlc(_1ad193755_typeChecker*, jule::Ptr<_1ac44b767_SlcTypeDecl>);
inline jule::Ptr<_1ad19108d_Arr> _1ad19e1bc_buildArr(_1ad193755_typeChecker*, jule::Ptr<_1ac44c4c1_ArrTypeDecl>);
inline jule::Ptr<_1ad190499_Map> _1ad19e4ca_buildMap(_1ad193755_typeChecker*, jule::Ptr<_1ac44cc1e_MapTypeDecl>);
inline jule::Ptr<_1ad18e971_Tuple> _1ad19e7d8_buildTuple(_1ad193755_typeChecker*, jule::Ptr<_1ac44ba53_TupleTypeDecl>);
inline jule::Bool _1ad19eae6_checkFnTypes(_1ad193755_typeChecker*, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Ptr<_1ac515831_FnIns> _1ad19ee04_buildFn(_1ad193755_typeChecker*, jule::Ptr<_1ac45bcc7_FnDecl>);
inline jule::Trait<_1ad184ceb_Kind> _1ad1a0212_buildByNamespace(_1ad193755_typeChecker*, jule::Ptr<_1ac44b080_NamespaceTypeDecl>);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad1a0520_build(_1ad193755_typeChecker*, jule::Any&);
inline jule::Ptr<_1ad18522a_TypeKind> _1ad1a082d_checkDecl(_1ad193755_typeChecker*, jule::Ptr<_1ac449eb3_TypeDecl>&);
inline void _1ad1a0aa3_check(_1ad193755_typeChecker*, jule::Ptr<_1ad189383_TypeSymbol>&);
struct _1ad193755_typeChecker {
	jule::Ptr<_1ad0e5267_Sema> _field_s = jule::Ptr<_1ad0e5267_Sema>();
	jule::Trait<_1ad1a5bb8_Lookup> _field_rootLookup = jule::Trait<_1ad1a5bb8_Lookup>();
	jule::Trait<_1ad1a5bb8_Lookup> _field_lookup = jule::Trait<_1ad1a5bb8_Lookup>();
	jule::Ptr<_1ad192941_referencer> _field_referencer = jule::Ptr<_1ad192941_referencer>();
	jule::Ptr<_1ac518702_ReferenceStack> _field_refers = jule::Ptr<_1ac518702_ReferenceStack>();
	jule::Ptr<_1a959a127_Token> _field_errorToken = jule::Ptr<_1a959a127_Token>();
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1ad184537_TypeAlias> _field_ownerAlias = jule::Ptr<_1ad184537_TypeAlias>();
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1ad193755_typeChecker(void) = default;

	inline bool operator==(_1ad193755_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1ad193755_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1ad1a1213_identTypeDecl(jule::Str&, jule::Ptr<_1ac44a579_IdentTypeDecl>);
inline jule::Bool static__1ad1a1554_exist(jule::Str&, jule::Any&);
struct _1ad1a0cc3_identTypeLookup {
	

	_1ad1a0cc3_identTypeLookup(void) = default;

	inline bool operator==(_1ad1a0cc3_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ad1a0cc3_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a9652036_FileInfo {
	jule::Ptr<_1ac4107d6_Ast> _field_Ast = jule::Ptr<_1ac4107d6_Ast>();
	jule::Slice<_1a92722b6_Log> _field_Errors = jule::Slice<_1a92722b6_Log>();
	

	_1a9652036_FileInfo(void) = default;

	inline bool operator==(_1a9652036_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1a9652036_FileInfo _other) { return !this->operator==(_other); }


};
struct _1ad8c1625_stmt {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1ad8c1625_stmt(void) = default;

	inline bool operator==(_1ad8c1625_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1ad8c1625_stmt _other) { return !this->operator==(_other); }


};
inline void _1ad8c25d2_stop(_1ad8c1e50_scopeParser*);
inline jule::Bool _1ad8c2846_stopped(_1ad8c1e50_scopeParser*);
inline jule::Bool _1ad8c2aaa_finished(_1ad8c1e50_scopeParser*);
inline jule::Bool _1ad8c2d1e_isLastSt(_1ad8c1e50_scopeParser*);
inline void _1ad8c313d_pushErr(_1ad8c1e50_scopeParser*, jule::Ptr<_1a959a127_Token>, jule::Str);
inline void _1ad8c345c_pushSuggestion(_1ad8c1e50_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ad8c36d2_insertAsNext(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ad8c1625_stmt> _1ad8c3946_next(_1ad8c1e50_scopeParser*);
inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c3ced_buildScope(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8c410b_buildVarSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45d15d_RetSt> _1ad8c4419_buildRetSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c4727_buildWhileNextIter(_1ad8c1e50_scopeParser*, jule::Ptr<_1ad8c1625_stmt>&);
inline jule::Ptr<_1ac45e093_WhileKind> _1ad8c4a35_buildWhileIterKind(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8c4d43_getRangeKindKeysTokens(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8c5151_buildRangeKindKey(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _1ad8c545e_buildRangeKindKeys(_1ad8c1e50_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>&);
inline void _1ad8c57a0_setupRangeKindKeysPlain(_1ad8c1e50_scopeParser*, jule::Ptr<_1ac45e934_RangeKind>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8c5b02_setupRangeKindKeysExplicit(_1ad8c1e50_scopeParser*, jule::Ptr<_1ac45e934_RangeKind>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8c5e32_setupRangeKindKeys(_1ad8c1e50_scopeParser*, jule::Ptr<_1ac45e934_RangeKind>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45e934_RangeKind> _1ad8c6383_buildRangeIterKind(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Any _1ad8c673a_buildCommonIterKind(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c6a48_buildCommonIter(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c6d56_buildIterSt(_1ad8c1e50_scopeParser*, jule::Ptr<_1ad8c1625_stmt>&);
inline jule::Ptr<_1ac45ecdb_BreakSt> _1ad8c7164_buildBreakSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac460193_ContSt> _1ad8c7472_buildContSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac460616_If> _1ad8c7780_buildIf(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac4609bd_Else> _1ad8c7a8d_buildElse(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac460e41_Conditional> _1ad8c7d9b_buildIfElseChain(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac4510c9_CoExpr> _1ad8c81a9_buildCoCallSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac457d06_GotoSt> _1ad8c84b7_buildGotoSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac4580e2_FallSt> _1ad8c87c5_buildFallSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8c8ad3_buildTypeAliasSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8c9045_pushCaseExpr(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Ptr<_1a959a127_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>&);
inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8c93ec_buildCaseExprs(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Bool);
inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c970a_buildCaseScope(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Ptr<_1ac461a8a_Case>,jule::Bool> _1ad8c9ab2_buildCase(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1ac461a8a_Case>>,jule::Ptr<_1ac4609bd_Else>> _1ad8c9e69_buildCases(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Bool);
inline jule::Ptr<_1ac462261_MatchCase> _1ad8ca277_buildMatchCase(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8ca585_buildScopeSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45794e_LabelSt> _1ad8ca893_buildLabelSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1ad8caba1_buildIdSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ad8d9bc1_assignInfo> _1ad8caeae_buildAssignInfo(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac4586ec_AssignLeft> _1ad8cb2bc_buildAssignL(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac4586ec_AssignLeft>> _1ad8cb5ca_buildAssignLs(_1ad8c1e50_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>&);
inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cb8d8_buildPlainAssign(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cbbe6_buildDeclAssign(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cc004_buildAssignSt(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac44ed75_UseExpr> _1ad8cc312_buildUseExpr(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8cc620_buildSt(_1ad8c1e50_scopeParser*, jule::Ptr<_1ad8c1625_stmt>&);
inline void _1ad8cc93e_build(_1ad8c1e50_scopeParser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1ac45a2d1_ScopeTree>&);
struct _1ad8c1e50_scopeParser {
	jule::Ptr<_1ad8dd4ee_parser> _field_p = jule::Ptr<_1ad8dd4ee_parser>();
	jule::Ptr<_1ac45a2d1_ScopeTree> _field_s = jule::Ptr<_1ac45a2d1_ScopeTree>();
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1ad8c1625_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1ad8c1e50_scopeParser(void) = default;

	inline bool operator==(_1ad8c1e50_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ad8c1e50_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1ad8cdb60_pushErr(_1ad8cd368_exprBuilder*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad8cde7e_pushSuggestion(_1ad8cd368_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac450161_TupleExpr> _1ad8ce28c_buildTuple(_1ad8cd368_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>&);
inline jule::Ptr<_1ac450518_LitExpr> _1ad8ce59a_buildLit(_1ad8cd368_exprBuilder*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8ce8a8_buildPrimitiveType(_1ad8cd368_exprBuilder*, jule::Ptr<_1a959a127_Token>&);
inline jule::Any _1ad8cebb6_buildSingle(_1ad8cd368_exprBuilder*, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ac45154c_IdentExpr> _1ad8ceec4_buildCppLinkedIdent(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac451c56_UnaryExpr> _1ad8d02d2_buildUnary(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac452ce0_SubIdentExpr> _1ad8d05e0_buildObjSubIdent(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45286c_NsSelectionExpr> _1ad8d08ed_buildNsSubIdent(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8d0c0b_buildType(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d1019_buildSubIdent(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45210d_VariadicExpr> _1ad8d1327_buildVariadic(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Any _1ad8d1635_buildOpRight(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac44e7c0_RangeExpr> _1ad8d1965_buildBetweenParentheses(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac4524b5_CastExpr> _1ad8d1c84_tryBuildCast(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8d214c_pushArg(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>&, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Ptr<_1a959a127_Token>);
inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8d245a_buildArgs(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _1ad8d2768_buildCallGenerics(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac4537a2_FnCallExpr> _1ad8d2bb9_buildFnCall(_1ad8cd368_exprBuilder*, jule::Ptr<_1a959a127_Token>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d2ec7_buildParenthesesRange(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac450c22_UnsafeExpr> _1ad8d32d5_buildUnsafeExpr(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8d35e3_buildAnonFn(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d3901_buildUnsafe(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8d3cb9_pushRangeLitPart(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Ptr<_1a959a127_Token>, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d40e9_getBraceRangeLitExprParts(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac454231_FieldExprPair> _1ad8d4418_buildFieldExprPair(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d4726_buildStructLitExpr(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8d4a34_buildStructLitExprs(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45497e_StructLit> _1ad8d4d64_buildTypedStructLiteral(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d5183_buildBraceLitPart(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac454e02_BraceLit> _1ad8d5491_buildBraceLit(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d579e_buildBraceRange(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d5aac_getEnumerableParts(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac455d8c_SliceExpr> _1ad8d5dba_buildSlice(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45672d_IndexingExpr> _1ad8d631b_buildIndexing(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Ptr<_1a959a127_Token>);
inline jule::Ptr<_1ac456d38_SlicingExpr> _1ad8d68b0_buildSlicing(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>&, jule::Ptr<_1a959a127_Token>);
inline jule::Any _1ad8d6bbd_buildBracketRange(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Any _1ad8d6ecb_buildData(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d7383_buildBinop(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64);
inline jule::Any _1ad8d7691_build(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8d799e_buildKind(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d7cac_buildFromTokens(_1ad8cd368_exprBuilder*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
struct _1ad8cd368_exprBuilder {
	jule::Ptr<_1ad8dd4ee_parser> _field_p = jule::Ptr<_1ad8dd4ee_parser>();
	

	_1ad8cd368_exprBuilder(void) = default;

	inline bool operator==(_1ad8cd368_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ad8cd368_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ad8d9bc1_assignInfo {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_l = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_r = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Ptr<_1a959a127_Token> _field_setter = jule::Ptr<_1a959a127_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1ad8d9bc1_assignInfo(void) = default;

	inline bool operator==(_1ad8d9bc1_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1ad8d9bc1_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1ad8dd82e_stop(_1ad8dd4ee_parser*);
inline jule::Bool _1ad8dda93_stopped(_1ad8dd4ee_parser*);
inline void _1ad8dde5b_pushErr(_1ad8dd4ee_parser*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ad8de27a_pushSuggestion(_1ad8dd4ee_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac44e4d4_Expr> _1ad8de588_buildExpr(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac41195d_Directive> _1ad8de896_buildDirective(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8deb1b_pushDirective(_1ad8dd4ee_parser*, jule::Ptr<_1ac41195d_Directive>);
inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8deec3_buildScope(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>);
inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad8e0424__buildType(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad8e0875_buildType(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8e0b83_buildTypeAliasDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e0ea2_buildVarTypeAndExpr(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac45cca6_VarDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e12c1_buildVarCommon(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac45cca6_VarDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e1689_buildVarBegin(_1ad8dd4ee_parser*, jule::Ptr<_1ac45cca6_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8e1997_buildVar(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac457597_GenericDecl> _1ad8e1ca5_buildGeneric(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _1ad8e215c_buildGenerics(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Ptr<_1a959a127_Token>&);
inline jule::Ptr<_1ac45a9a7_ParamDecl> _1ad8e246a_buildSelfParam(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e2833_paramTypeBegin(_1ad8dd4ee_parser*, jule::Ptr<_1ac45a9a7_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e2b52_buildParamType(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac45a9a7_ParamDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e2e71_buildParamBody(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac45a9a7_ParamDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45a9a7_ParamDecl> _1ad8e327e_buildParam(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e3504_checkParams(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>> _1ad8e38ab_buildParams(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1ac44d0c6_RetTypeDecl>,jule::Bool> _1ad8e3c63_buildMultiRetType(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1ac44d0c6_RetTypeDecl>,jule::Bool> _1ad8e411a_buildRetType(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64&);
inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e456b_buildFnPrototype(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e49bc_buildFn(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8e4cca_getUseDeclSelectors(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e50e9_buildCppUseDecl(_1ad8dd4ee_parser*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e5418_buildStdUseDecl(_1ad8dd4ee_parser*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e5737_buildIdentUseDecl(_1ad8dd4ee_parser*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline void _1ad8e5a56_parseUseDecl(_1ad8dd4ee_parser*, jule::Ptr<_1ac462a03_UseDecl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac462a03_UseDecl> _1ad8e5e0d_buildUseDecl(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1a959a127_Token>>, jule::Bool);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8e62b5_buildTypeEnumItemKind(jule::Ptr<_1ad8dd4ee_parser>, jule::I64&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>> _1ad8e65c3_buildTypeEnumItems(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac4646a3_TypeEnumDecl> _1ad8e68d1_buildTypeEnumDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac44e4d4_Expr> _1ad8e6c88_buildEnumItemExpr(jule::Ptr<_1ad8dd4ee_parser>, jule::I64&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>> _1ad8e7096_buildEnumItems(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac46399e_EnumDecl> _1ad8e73a4_buildEnumDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Any _1ad8e76b2_buildNodeEnumDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac464c03_FieldDecl> _1ad8e79c0_buildField(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>> _1ad8e7ccd_buildStructDeclFields(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac465561_StructDecl> _1ad8e80db_buildStructDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8e8361_checkMethodReceiver(_1ad8dd4ee_parser*, jule::Ptr<_1ac45bcc7_FnDecl>&);
inline jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>> _1ad8e866e_buildTraitMethods(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac465b6b_TraitDecl> _1ad8e897c_buildTraitDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e8c8a_buildCppLinkFn(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8e9098_buildCppLinkVar(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac465561_StructDecl> _1ad8e93a6_buildCppLinkStruct(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8e96b4_buildCppLinkTypeAlias(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac462a03_UseDecl> _1ad8e99c2_buildCppLinkUse(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Any _1ad8e9cd0_buildCppLink(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8ea0dd_getMethod(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8ea40c_parseImplBody(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac466276_Impl>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac466276_Impl> _1ad8ea71a_buildImpl(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Any _1ad8eaa28_buildNodeData(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8eac9d_applyFnMeta(_1ad8dd4ee_parser*, jule::Ptr<_1ac45bcc7_FnDecl>&);
inline void _1ad8eb023_applyMeta(_1ad8dd4ee_parser*, _1ac411562_Node&);
inline void _1ad8eb298_pushUseDecl(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1ac462a03_UseDecl>&);
inline jule::Bool _1ad8eb5a6_pushMetaNodes(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline _1ac411562_Node _1ad8eb8b4_parseNode(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8ebb39_appendNode(jule::Ptr<_1ad8dd4ee_parser>, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8ec09b_removeRange(_1ad8dd4ee_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::I64>&);
inline void _1ad8ec464_pushWrongOrderCloseErr(_1ad8dd4ee_parser*, jule::Ptr<_1a959a127_Token>&, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::I64>&);
inline void _1ad8ec8c6_pushRangeClose(_1ad8dd4ee_parser*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Slice<jule::I64>&);
inline void _1ad8ecb4b_checkRanges(_1ad8dd4ee_parser*, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline void _1ad8ecdc1_parse(jule::Ptr<_1ad8dd4ee_parser>, jule::Ptr<_1a95a04b2_File>&);
struct _1ad8dd4ee_parser {
	jule::Ptr<_1ac4107d6_Ast> _field_ast = jule::Ptr<_1ac4107d6_Ast>();
	jule::Slice<jule::Ptr<_1ac41195d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1ac41195d_Directive>>();
	jule::Slice<_1a92722b6_Log> _field_errors = jule::Slice<_1a92722b6_Log>();
	

	_1ad8dd4ee_parser(void) = default;

	inline bool operator==(_1ad8dd4ee_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ad8dd4ee_parser _other) { return !this->operator==(_other); }


};
inline void _1ad8eeb70_pushErr(_1ad8ee5cb_typeBuilder*, jule::Ptr<_1a959a127_Token>, jule::Str);
inline void _1ad8eee8e_pushSuggestion(_1ad8ee5cb_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900203_buildPrim(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900467_buildNamespace(_1ad8ee5cb_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _1ad9006cb_buildGenerics(_1ad8ee5cb_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad900940_identGenerics(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900ba4_buildIdent(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900e18_buildCppLink(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad90117c_buildFn(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9013e1_buildPtr(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901655_buildSptr(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9018b9_buildOp(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901b2d_buildSlc(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901d92_buildArr(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad902249_buildMap(_1ad8ee5cb_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9024ad_buildEnumerable(_1ad8ee5cb_typeBuilder*);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad902722_step(_1ad8ee5cb_typeBuilder*);
inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad902986_build(_1ad8ee5cb_typeBuilder*);
struct _1ad8ee5cb_typeBuilder {
	jule::Ptr<_1ad8dd4ee_parser> _field_p = jule::Ptr<_1ad8dd4ee_parser>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _field_tokens = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1ad8ee5cb_typeBuilder(void) = default;

	inline bool operator==(_1ad8ee5cb_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ad8ee5cb_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1ac263590_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1ac263590_CompileInfo(void) = default;

	inline bool operator==(_1ac263590_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ac263590_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ac264e43_pushErr(_1ac2648e3_directiveEval*, jule::Ptr<_1a959a127_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ac2652ea_splitOperans(_1ac2648e3_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Bool _1ac265608_evalDirectiveIdent(_1ac2648e3_directiveEval*, jule::Str);
inline jule::Bool _1ac265916_evalDirectivePart(_1ac2648e3_directiveEval*, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Bool _1ac265b7a_eval(_1ac2648e3_directiveEval*);
struct _1ac2648e3_directiveEval {
	jule::Slice<_1a92722b6_Log> _field_logs = jule::Slice<_1a92722b6_Log>();
	jule::Ptr<_1ac41195d_Directive> _field_d = jule::Ptr<_1ac41195d_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1ac2648e3_directiveEval(void) = default;

	inline bool operator==(_1ac2648e3_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1ac2648e3_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a964cb25_JuleImporter> static__1a95b59a0_New(_1ac263590_CompileInfo);
inline jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _1a95c1c64_AllPackages(_1a964cb25_JuleImporter*);
inline void _1a95da9e7_SetModPath(_1a964cb25_JuleImporter*, jule::Str);
inline jule::Str _1a95e466b_GetModPath(_1a964cb25_JuleImporter*);
inline jule::Str _1a95e99a1_ModById(_1a964cb25_JuleImporter*, jule::I64);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1a964b8d2_GetImport(_1a964cb25_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1ac4107d6_Ast>>,jule::Slice<_1a92722b6_Log>> _1a965309d_ImportPackage(_1a964cb25_JuleImporter*, jule::Str, jule::Bool);
inline void _1a9653dc3_Imported(_1a964cb25_JuleImporter*, jule::Ptr<_1ad0dc11b_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1a92722b6_Log>> _1a96556ee_isPassBuildDirectives(_1a964cb25_JuleImporter*, jule::Ptr<_1ac4107d6_Ast>&);
struct _1a964cb25_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1a964cb25_JuleImporter(void) = default;

	inline bool operator==(_1a964cb25_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a964cb25_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1ad902d4e_OrderedDefines {
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>();
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_Globals = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	

	_1ad902d4e_OrderedDefines(void) = default;

	inline bool operator==(_1ad902d4e_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1ad902d4e_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bd345ab2_isCommonOrdered(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>&, jule::Ptr<_1ac43a6e0_Struct>);
inline jule::Bool _1bd34de72_isCommonOrdered(jule::Slice<jule::Ptr<_1ad112097_Var>>&, jule::Ptr<_1ad112097_Var>);
inline void _1bd341b02_orderCommon(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>&);
inline void _1bd341d22_orderCommon(jule::Slice<jule::Ptr<_1ad112097_Var>>&);
inline void static__1ad8a57c4_orderStructures(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>&);
inline void static__1a964b041_orderVars(jule::Slice<jule::Ptr<_1ad112097_Var>>&);
struct _1ad90303b_defineOrderer {
	

	_1ad90303b_defineOrderer(void) = default;

	inline bool operator==(_1ad90303b_defineOrderer _other) { return true; }

	inline bool operator!=(_1ad90303b_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ad9e3967_liveTable {
	jule::Slice<jule::Ptr<_1ad112097_Var>> _field_vars = jule::Slice<jule::Ptr<_1ad112097_Var>>();
	jule::Slice<jule::Ptr<_1ac515831_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1ac515831_FnIns>>();
	jule::Slice<jule::Ptr<_1ac466a3a_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1ac466a3a_StructIns>>();
	jule::Slice<jule::Ptr<_1ac524a3d_Trait>> _field_traits = jule::Slice<jule::Ptr<_1ac524a3d_Trait>>();
	

	_1ad9e3967_liveTable(void) = default;

	inline bool operator==(_1ad9e3967_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1ad9e3967_liveTable _other) { return !this->operator==(_other); }


};
inline void _1ada25aed_optimizeChild(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1ada25d95_optimizeBodyChildExceptional(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1ada2612b_optimizeBodyChild(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1ada263a1_optimizeExprModel(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Any&);
inline void _1ada2657c_eliminateFollowed(_1ada25625_scopeDeadCode*);
inline void _1ada26802_pushGoto(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c5dc4_GotoSt>);
inline void _1ada26a77_pushLabel(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c5bd7_Label>);
inline void _1ada26cec_optimizeRangeIter(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c5621_RangeIter>);
inline void _1ada27072_optimizeWhileIter(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c5434_WhileIter>);
inline void _1ada272e7_optimizeInfIter(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c5247_InfIter>);
inline void _1ada2756c_optimizeConditional(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c505a_Conditional>);
inline void _1ada277e2_optimizeMatch(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c6677_Match>);
inline void _1ada27a67_optimizeAssign(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c629d_Assign>);
inline void _1ada27cdc_optimizeMultiAssign(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Ptr<_1ad0c648a_MultiAssign>);
inline void _1ada28062_optimizeStmt(jule::Ptr<_1ada25625_scopeDeadCode>, jule::Any);
inline void _1ada2823d_optimizeStmts(jule::Ptr<_1ada25625_scopeDeadCode>);
struct _1ada25625_scopeDeadCode {
	jule::Ptr<_1ada25625_scopeDeadCode> _field_parent = jule::Ptr<_1ada25625_scopeDeadCode>();
	jule::Ptr<_1ad0c4994_Scope> _field_s = jule::Ptr<_1ad0c4994_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5bd7_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5bd7_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1ada25625_scopeDeadCode(void) = default;

	inline bool operator==(_1ada25625_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1ada25625_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1ada29580_exprDeadCode static__1ada29b79_new(jule::Ptr<_1ada25625_scopeDeadCode>&);
inline void _1ada29dee_binary(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50a903_BinopExprModel>);
inline void _1ada2a174_unary(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50aae0_UnaryExprModel>);
inline void _1ada2a3e9_structureLit(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50aeb9_StructLitExprModel>);
inline void _1ada2a66e_allocStructure(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>);
inline void _1ada2a8e4_casting(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50b393_CastingExprModel>);
inline void _1ada2ab69_args(_1ada29580_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1ada2adde_funcCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50b580_FnCallExprModel>);
inline void _1ada2b164_slice(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50b76c_SliceExprModel>);
inline void _1ada2b3d9_array(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50cbe1_ArrayExprModel>);
inline void _1ada2b65e_indexing(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50b959_IndexingExprModel>);
inline void _1ada2b8d4_anonFunc(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50bb46_AnonFnExprModel>);
inline void _1ada2bb59_map(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50c020_MapExprModel>);
inline void _1ada2bdce_slicing(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50c20c_SlicingExprModel>);
inline void _1ada2c154_traitSub(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>);
inline void _1ada2c3c9_structureSub(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50c817_StructSubIdentExprModel>);
inline void _1ada2c64e_commonSub(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>);
inline void _1ada2c8c4_tuple(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50d2a7_TupleExprModel>);
inline void _1ada2cb49_newCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>);
inline void _1ada2cdbe_outCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>);
inline void _1ada2d144_outlnCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>);
inline void _1ada2d3b9_panicCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>);
inline void _1ada2d63e_assertCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>);
inline void _1ada2d8b4_errorCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>);
inline void _1ada2db39_makeCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>);
inline void _1ada2ddae_appendCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>);
inline void _1ada2e134_cloneCall(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>);
inline void _1ada2e3a9_sizeof(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50c5d6_SizeofExprModel>);
inline void _1ada2e62e_alignof(_1ada29580_exprDeadCode*, jule::Ptr<_1ac50ed47_AlignofExprModel>);
inline void _1ada2e8a4_integratedToStr(_1ada29580_exprDeadCode*, jule::Ptr<_1ac510221_IntegratedToStrExprModel>);
inline void _1ada2eb29_free(_1ada29580_exprDeadCode*, jule::Ptr<_1ac5105ea_FreeExprModel>);
inline void _1ada2ed9e_backendEmit(_1ada29580_exprDeadCode*, jule::Ptr<_1ac51040d_BackendEmitExprModel>);
inline void _1ada30124_optimize(_1ada29580_exprDeadCode*, jule::Any&);
struct _1ada29580_exprDeadCode {
	jule::Ptr<_1ada25625_scopeDeadCode> _field_s = jule::Ptr<_1ada25625_scopeDeadCode>();
	

	_1ada29580_exprDeadCode(void) = default;

	inline bool operator==(_1ada29580_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ada29580_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1dbcb83c3_UnsafeBinopExprModel {
	jule::Ptr<_1ac50a903_BinopExprModel> _field_Node = jule::Ptr<_1ac50a903_BinopExprModel>();
	

	_1dbcb83c3_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1dbcb83c3_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1dbcb83c3_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ac0eb626_UnsafeIndexingExprModel {
	jule::Ptr<_1ac50b959_IndexingExprModel> _field_Node = jule::Ptr<_1ac50b959_IndexingExprModel>();
	

	_1ac0eb626_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1ac0eb626_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ac0eb626_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c16a67e3_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1ac50b76c_SliceExprModel> _field_Elems = jule::Ptr<_1ac50b76c_SliceExprModel>();
	

	_1c16a67e3_PushToSliceExprModel(void) = default;

	inline bool operator==(_1c16a67e3_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c16a67e3_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac0c0144_MutSlicingExprModel {
	jule::Ptr<_1a959a127_Token> _field_Token = jule::Ptr<_1a959a127_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1ac0c0144_MutSlicingExprModel(void) = default;

	inline bool operator==(_1ac0c0144_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac0c0144_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac190610_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1ac190610_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1ac190610_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac190610_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac0e3a4c_scopeOptimizer> static__1da02a77a_new(jule::Ptr<_1ad0c4994_Scope>);
inline void _1dbcd2299_setCurrentStmt(_1ac0e3a4c_scopeOptimizer*, jule::Any);
inline void _1c169e1ae_optimizeData(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad159188_Data>);
inline void _1c16a8042_optimizeVar(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad112097_Var>);
inline void _1aa3ec60a_optimizeConditional(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c505a_Conditional>);
inline void _1aa41c99e_buildDefaultConstatTrueCase(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c6bc7_Case>, jule::I64&, jule::Ptr<_1ad0c6677_Match>&);
inline void _1aa42d163_optimizeMatch(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c6677_Match>);
inline void _1aa491dca_optimizeRangeIter(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c5621_RangeIter>);
inline void _1aa495c14_optimizeWhileIter(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c5434_WhileIter>);
inline jule::Bool _1aa4b4ae0_substr(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c629d_Assign>);
inline jule::Bool _1aa4b741c_strInsert(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c629d_Assign>);
inline jule::Bool _1aa4b9d04_strAssign(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c629d_Assign>);
inline void _1aa4bc6db_optimizeAssign(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c629d_Assign>);
inline void _1abdb3333_optimizeMultiAssign(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c648a_MultiAssign>);
inline void _1abdcc814_optimizeRet(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c71d3_RetSt>);
inline void _1abdceb8a_optimizeStmt(_1ac0e3a4c_scopeOptimizer*, jule::Any);
inline void _1abde75dc_optimizeChild(_1ac0e3a4c_scopeOptimizer*, jule::Ptr<_1ad0c4994_Scope>);
inline void _1abe00b34_optimize(_1ac0e3a4c_scopeOptimizer*);
struct _1ac0e3a4c_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1ad0c4994_Scope> _field_scope = jule::Ptr<_1ad0c4994_Scope>();
	

	_1ac0e3a4c_scopeOptimizer(void) = default;

	inline bool operator==(_1ac0e3a4c_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac0e3a4c_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1abe97813_optimize(jule::Any&);
inline jule::Bool _1abe9cbc0_strCond(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50a903_BinopExprModel>);
inline void _1abea2774_binary(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50a903_BinopExprModel>);
inline void _1abea4006_unary(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50aae0_UnaryExprModel>);
inline void _1abeb1497_structureLit(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50aeb9_StructLitExprModel>);
inline void _1ac09cc6a_allocStructure(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>);
inline void _1ac0e4e7c_casting(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50b393_CastingExprModel>);
inline void _1ac0ea68b_args(_1aa427811_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1ac1014c7_scope(_1aa427811_exprOptimizer*, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1ac12c404_funcCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50b580_FnCallExprModel>);
inline void _1ac12c1c3_slice(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50b76c_SliceExprModel>);
inline void _1ac174d31_array(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50cbe1_ArrayExprModel>);
inline void _1ac19ec07_indexing(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50b959_IndexingExprModel>);
inline void _1ac1a4b1e_anonFunc(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50bb46_AnonFnExprModel>);
inline void _1ac1a5515_map(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50c020_MapExprModel>);
inline void _1ac1a7c21_slicing(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50c20c_SlicingExprModel>);
inline void _1aa3ebdac_traitSub(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>);
inline void _1aa41acaa_structureSub(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50c817_StructSubIdentExprModel>);
inline void _1abe7b72b_commonSub(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>);
inline void _1ac0a0069_tuple(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50d2a7_TupleExprModel>);
inline void _1ac0e0cd0_newCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>);
inline void _1ac134e67_outCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>);
inline void _1ac154b24_outlnCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>);
inline void _1ac0e8d3d_panicCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>);
inline void _1abe86181_assertCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>);
inline void _1ac0a1367_errorCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>);
inline void _1ac0c858c_makeCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>);
inline void _1ac0d725a_appendCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>);
inline void _1ac153480_cloneCall(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>);
inline void _1aa528ea6_sizeof(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50c5d6_SizeofExprModel>);
inline void _1abdcdb9a_alignof(_1aa427811_exprOptimizer*, jule::Ptr<_1ac50ed47_AlignofExprModel>);
inline void _1ac0c637b_integratedToStr(_1aa427811_exprOptimizer*, jule::Ptr<_1ac510221_IntegratedToStrExprModel>);
inline void _1ac0e05c6_free(_1aa427811_exprOptimizer*, jule::Ptr<_1ac5105ea_FreeExprModel>);
inline void _1ac0e64cd_backendEmit(_1aa427811_exprOptimizer*, jule::Ptr<_1ac51040d_BackendEmitExprModel>);
inline void _1ac1a3700_do(_1aa427811_exprOptimizer*);
struct _1aa427811_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1aa427811_exprOptimizer(void) = default;

	inline bool operator==(_1aa427811_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1aa427811_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad9eddd4_Optimizer> static__1ad95c86a_New(jule::Ptr<_1ad8ad38c_IR>&);
inline void _1ad9315a8_optimizeGlobal(_1ad9eddd4_Optimizer*, jule::Ptr<_1ad112097_Var>&);
inline void _1ad98b404_optimizeFunction(_1ad9eddd4_Optimizer*, jule::Ptr<_1ac512b80_Fn>&);
inline void _1ad98b7ab_optimizeStruct(_1ad9eddd4_Optimizer*, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1ad98d23b_optimizeGlobals(_1ad9eddd4_Optimizer*, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ad994396_optimizeFunctions(_1ad9eddd4_Optimizer*, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ad99a6ee_optimizeStructs(_1ad9eddd4_Optimizer*, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ad9a385b_optimizePackage(_1ad9eddd4_Optimizer*, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ad9ade60_Optimize(_1ad9eddd4_Optimizer*);
struct _1ad9eddd4_Optimizer {
	jule::Ptr<_1ad8ad38c_IR> _field_ir = jule::Ptr<_1ad8ad38c_IR>();
	

	_1ad9eddd4_Optimizer(void) = default;

	inline bool operator==(_1ad9eddd4_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ad9eddd4_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1ada32544_Reset(void);
inline void static__1ada3380e_Print(jule::Str, jule::Str);
struct _1ada33622_AnsiEscape {
	

	_1ada33622_AnsiEscape(void) = default;

	inline bool operator==(_1ada33622_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ada33622_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ada34eb4_LogFlat(_1a92722b6_Log&);
inline void static__1ada351c3_LogError(_1a92722b6_Log&);
inline void static__1ada353d2_Log(_1a92722b6_Log&);
inline void static__1ada355e1_PrintLogs(jule::Slice<_1a92722b6_Log>&);
struct _1ada34c0b_Logger {
	

	_1ada34c0b_Logger(void) = default;

	inline bool operator==(_1ada34c0b_Logger _other) { return true; }

	inline bool operator!=(_1ada34c0b_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1badb4732_Unix(_1badb437a_AbsTime*);
struct _1badb437a_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1badb437a_AbsTime(void) = default;

	inline bool operator==(_1badb437a_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1badb437a_AbsTime _other) { return !this->operator==(_other); }


};
inline _1badb4a1d_Time static__1badb4db4_Unix(jule::U64);
inline _1badb4a1d_Time static__1badb50b2_Now(void);
inline jule::U64 _1badb5513_Unix(_1badb4a1d_Time*);
inline jule::U64 _1badb5777_Day(_1badb4a1d_Time*);
inline jule::U64 _1badb59db_Month(_1badb4a1d_Time*);
inline jule::U64 _1badb5c50_Year(_1badb4a1d_Time*);
inline jule::U64 _1badb5eb4_Second(_1badb4a1d_Time*);
inline jule::U64 _1badb6228_Minute(_1badb4a1d_Time*);
inline jule::U64 _1badb648c_Hour(_1badb4a1d_Time*);
inline _1badb437a_AbsTime _1badb6701_Abs(_1badb4a1d_Time*);
struct _1badb4a1d_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1badb4a1d_Time(void) = default;

	inline bool operator==(_1badb4a1d_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1badb4a1d_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bad395a8_scopeCoder> static__1bad39bc4_new(jule::Ptr<_1badba21b_ObjectCoder>&);
inline void _1bad39e49_rangeIndexIter(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5621_RangeIter>&);
inline void _1bad3a1be_rangeHashmapIter(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5621_RangeIter>&);
inline void _1bad3a444_ifCase(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c4b81_If>);
inline void _1bad3a6b9_conditional(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c505a_Conditional>);
inline void _1bad3a93e_infIter(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5247_InfIter>);
inline void _1bad3abb4_whileIter(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5434_WhileIter>);
inline void _1bad3ae39_rangeIter(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5621_RangeIter>);
inline void _1bad3b1ae_cont(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c580d_ContSt>);
inline void _1bad3b434_label(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5bd7_Label>);
inline void _1bad3b6a9_gotoSt(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c5dc4_GotoSt>);
inline void _1bad3b92e_postfix(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c60b1_Postfix>);
inline void _1bad3bba4_assign(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c629d_Assign>);
inline void _1bad3be29_multiAssign(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c648a_MultiAssign>);
inline jule::Fn<void(void)> _1bad3c237_matchExpr(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c6677_Match>);
inline void _1bad3c556_case(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c6677_Match>, jule::Ptr<_1ad0c6bc7_Case>);
inline void _1bad3c7cb_matchSt(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c6677_Match>);
inline void _1bad3ca51_fallSt(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c6ee6_FallSt>);
inline void _1bad3ccc6_breakSt(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c59ea_BreakSt>);
inline void _1bad3d04b_retWithVars(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c71d3_RetSt>);
inline void _1bad3d2c1_retTuple(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c71d3_RetSt>);
inline void _1bad3d546_retWithExprs(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c71d3_RetSt>);
inline void _1bad3d7bb_retSt(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c71d3_RetSt>);
inline void _1bad3dcb6_var(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad112097_Var>);
inline void _1bad3e03b_st(jule::Ptr<_1bad395a8_scopeCoder>, jule::Any);
inline void _1bad3e2b1_scopeStmts(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c4994_Scope>&);
inline void _1bad3e536_scope(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ad0c4994_Scope>);
inline void _1bad3e7ab_funcScope(jule::Ptr<_1bad395a8_scopeCoder>, jule::Ptr<_1ac515831_FnIns>);
struct _1bad395a8_scopeCoder {
	jule::Ptr<_1badba21b_ObjectCoder> _field_oc = jule::Ptr<_1badba21b_ObjectCoder>();
	

	_1bad395a8_scopeCoder(void) = default;

	inline bool operator==(_1bad395a8_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bad395a8_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bad420e9_exprCoder> static__1bad424e5_new(jule::Ptr<_1badba21b_ObjectCoder>&);
inline void _1bad4276a_string(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac49c202_Const>&);
inline void _1bad429e0_boolean(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac49c202_Const>&);
inline void _1bad42bbb_nilLit(jule::Ptr<_1bad420e9_exprCoder>);
inline jule::Bool _1bad42ec9_ftoaSpecialCases(jule::Ptr<_1bad420e9_exprCoder>, jule::F64&);
inline void _1bad4324e_float32(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac49c202_Const>&);
inline void _1bad434c4_float64(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac49c202_Const>&);
inline void _1bad437e3_constant(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac49c202_Const>, jule::Bool);
inline void _1bad43bab_divByZeroBinary(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1a959a127_Token>&, jule::Ptr<_1ac50a716_OperandExprModel>&, jule::Ptr<_1ac50a716_OperandExprModel>&);
inline void _1bad43e31_unsafeBinary(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50a903_BinopExprModel>);
inline void _1bad441a6_binary(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50a903_BinopExprModel>);
inline void _1bad4442b_var(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ad112097_Var>);
inline void _1bad446a1_structureIns(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac466a3a_StructIns>);
inline void _1bad44926_unary(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50aae0_UnaryExprModel>);
inline void _1bad44b9b_structureLit(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50aeb9_StructLitExprModel>);
inline void _1bad44e21_allocStructure(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>);
inline void _1bad45196_casting(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b393_CastingExprModel>);
inline void _1bad4541b_args(jule::Ptr<_1bad420e9_exprCoder>, jule::Slice<jule::Any>);
inline void _1bad45691_modelForCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Any);
inline void _1bad45916_pushCallInf(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b580_FnCallExprModel>&);
inline jule::Bool _1bad45c24_isWrapped(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b580_FnCallExprModel>&);
inline void _1bad45e99_pureFuncCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b580_FnCallExprModel>&);
inline void _1bad4621e_funcCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b580_FnCallExprModel>);
inline void _1bad46494_slice(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b76c_SliceExprModel>);
inline void _1bad46719_indexing(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50b959_IndexingExprModel>);
inline void _1bad4698e_unsafeIndexing(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac0eb626_UnsafeIndexingExprModel>);
inline void _1bad46c14_anonFunc(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50bb46_AnonFnExprModel>);
inline void _1bad46e89_map(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50c020_MapExprModel>);
inline void _1bad4720e_slicing(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50c20c_SlicingExprModel>);
inline void _1bad47484_traitSub(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>);
inline void _1bad47709_structureSub(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50c817_StructSubIdentExprModel>);
inline void _1bad4797e_commonIdent(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50cdcd_CommonIdentExprModel>);
inline void _1bad47c04_commonSub(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>);
inline void _1bad47e79_array(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50cbe1_ArrayExprModel>);
inline void _1bad481ee_funcInsCommon(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac515831_FnIns>);
inline void _1bad48474_funcIns(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac515831_FnIns>);
inline void _1bad486e9_tuple(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50d2a7_TupleExprModel>);
inline void _1bad4896e_newCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>);
inline void _1bad48be4_outCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>);
inline void _1bad48e69_outlnCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>);
inline void _1bad491de_panicCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>);
inline void _1bad49464_assertCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>);
inline void _1bad496d9_errorCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>);
inline void _1bad4995e_copyCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e4ea_BuiltinCopyCallExprModel>);
inline void _1bad49bd4_makeCallSlice(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>&);
inline void _1bad49e59_makeCallStr(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>&);
inline void _1bad4a1ce_makeCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>);
inline void _1bad4a454_pushToSlice(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1c16a67e3_PushToSliceExprModel>);
inline void _1bad4a6c9_appendCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>);
inline void _1bad4a94e_cloneCall(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>);
inline void _1bad4abc4_sizeof(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50c5d6_SizeofExprModel>);
inline void _1bad4ae49_alignof(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50ed47_AlignofExprModel>);
inline jule::Str _1bad4b257_runeLit(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac510034_RuneExprModel>);
inline void _1bad4b4cc_structureStatic(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac50ca04_StructStaticIdentExprModel>);
inline void _1bad4b752_integratedToStr(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac510221_IntegratedToStrExprModel>);
inline void _1bad4b9c7_backendEmit(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac51040d_BackendEmitExprModel>);
inline void _1bad4bc4c_free(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac5105ea_FreeExprModel>);
inline void _1bad4bec2_mutSlicing(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac0c0144_MutSlicingExprModel>);
inline void _1bad4c247_strInsertBegin(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ac190610_StrInsertBeginExprModel>);
inline void _1bad4c4bc_model(jule::Ptr<_1bad420e9_exprCoder>, jule::Any);
inline void _1bad4c742_expr(jule::Ptr<_1bad420e9_exprCoder>, jule::Any);
inline void _1bad4c9b7_val(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ad15a211_Value>);
inline void _1bad4cc3c_initExpr(jule::Ptr<_1bad420e9_exprCoder>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1bad420e9_exprCoder {
	jule::Ptr<_1badba21b_ObjectCoder> _field_oc = jule::Ptr<_1badba21b_ObjectCoder>();
	

	_1bad420e9_exprCoder(void) = default;

	inline bool operator==(_1bad420e9_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bad420e9_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1bad502a0_cloneFuncDecl(jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Str static__1bad50547_cloneFuncDef(jule::Ptr<_1ac43a6e0_Struct>&);
struct _1bad4eee7_deriveCoder {
	

	_1bad4eee7_deriveCoder(void) = default;

	inline bool operator==(_1bad4eee7_deriveCoder _other) { return true; }

	inline bool operator!=(_1bad4eee7_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bad51427_TestCoder> static__1bad5189a_New(jule::Ptr<_1badba21b_ObjectCoder>&);
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1bad51b0e_findTestingPackage(jule::Ptr<_1bad51427_TestCoder>);
inline void _1bad51d84_appendTest(jule::Ptr<_1bad51427_TestCoder>, jule::Ptr<_1ac515831_FnIns>);
inline void _1bad52109_appendPackageTests(jule::Ptr<_1bad51427_TestCoder>, jule::Ptr<_1ad0e0075_Package>&);
inline jule::Bool _1bad5236d_readyTestingPackage(jule::Ptr<_1bad51427_TestCoder>);
inline void _1bad52549_callTmReset(jule::Ptr<_1bad51427_TestCoder>);
inline void _1bad52725_callTmFailed(jule::Ptr<_1bad51427_TestCoder>);
inline void _1bad52901_callTmSkipped(jule::Ptr<_1bad51427_TestCoder>);
inline void _1bad52acc_Serialize(jule::Ptr<_1bad51427_TestCoder>);
struct _1bad51427_TestCoder {
	jule::Ptr<_1ac466a3a_StructIns> _field_t = jule::Ptr<_1ac466a3a_StructIns>();
	jule::Ptr<_1ac512b80_Fn> _field_tmReset = jule::Ptr<_1ac512b80_Fn>();
	jule::Ptr<_1ac512b80_Fn> _field_tmFailed = jule::Ptr<_1ac512b80_Fn>();
	jule::Ptr<_1ac512b80_Fn> _field_tmSkipped = jule::Ptr<_1ac512b80_Fn>();
	jule::Ptr<_1badba21b_ObjectCoder> _field_oc = jule::Ptr<_1badba21b_ObjectCoder>();
	

	_1bad51427_TestCoder(void) = default;

	inline bool operator==(_1bad51427_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1bad51427_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1bad54084_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1bad5446e_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1bad54716_func(jule::Ptr<_1ac512b80_Fn>&);
inline jule::Str static__1bad549ad_funcIns(jule::Ptr<_1ac515831_FnIns>&);
inline jule::Str static__1bad54c55_traitDecl(jule::Ptr<_1ac524a3d_Trait>);
inline jule::Str static__1bad54eec_param(jule::Ptr<_1ac511343_Param>&);
inline jule::Str static__1bad55294_structure(jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Str static__1bad5553b_structureIns(jule::Ptr<_1ac466a3a_StructIns>&);
inline jule::Str static__1bad557d3_field(jule::Ptr<_1ac427d4d_Field>&);
inline jule::Str static__1bad55a7a_var(jule::Ptr<_1ad112097_Var>);
inline jule::Str static__1bad55d22_iterBegin(jule::Uintptr);
inline jule::Str static__1bad560b9_iterEnd(jule::Uintptr);
inline jule::Str static__1bad56361_iterNext(jule::Uintptr);
inline jule::Str static__1bad56608_label(jule::Str&);
inline jule::Str static__1bad568a0_matchEnd(jule::Uintptr);
inline jule::Str static__1bad56b47_caseBegin(jule::Uintptr);
struct _1bad53a78_identCoder {
	

	_1bad53a78_identCoder(void) = default;

	inline bool operator==(_1bad53a78_identCoder _other) { return true; }

	inline bool operator!=(_1bad53a78_identCoder _other) { return !this->operator==(_other); }


};
struct _1badb9d42_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1badb9d42_SerializationInfo(void) = default;

	inline bool operator==(_1badb9d42_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1badb9d42_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1badba02e_traitHash {
	jule::Ptr<_1ac524a3d_Trait> _field_t = jule::Ptr<_1ac524a3d_Trait>();
	jule::Ptr<_1ac466a3a_StructIns> _field_s = jule::Ptr<_1ac466a3a_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1badba02e_traitHash(void) = default;

	inline bool operator==(_1badba02e_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1badba02e_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1badc1024_Str(_1badc0c5a_customType*);
inline jule::Bool _1badc1332_Equals(jule::Ptr<_1badc0c5a_customType>, jule::Ptr<_1ad18522a_TypeKind>);
struct _1badc0c5a_customType {
	jule::Str _field_kind = jule::Str();
	

	_1badc0c5a_customType(void) = default;

	inline bool operator==(_1badc0c5a_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1badc0c5a_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1badc1a80_toType(jule::Str);
inline jule::Str static__1badc1d27_prim(jule::Ptr<_1ad189c02_Prim>);
inline jule::Str static__1badc20be_tuple(jule::Ptr<_1ad18e971_Tuple>);
inline jule::Str static__1badc2366_asSptr(jule::Str);
inline jule::Str static__1badc260d_asPtr(jule::Str);
inline jule::Str static__1badc28a5_sptr(jule::Ptr<_1ad18d486_Sptr>);
inline jule::Str static__1badc2b4c_ptr(jule::Ptr<_1ad1919ea_Ptr>);
inline jule::Str static__1badc2de4_enumDecl(jule::Ptr<_1ac526b83_Enum>);
inline jule::Str static__1badc318b_typeEnumDecl(jule::Ptr<_1ac52827d_TypeEnum>);
inline jule::Str static__1badc3433_asSlice(jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Str static__1badc36ca_slice(jule::Ptr<_1ad18dde3_Slc>);
inline jule::Str static__1badc3972_map(jule::Ptr<_1ad190499_Map>);
inline jule::Str static__1badc3c19_traitIdent(jule::Str);
inline jule::Str static__1badc3eb1_traitDecl(jule::Ptr<_1ac524a3d_Trait>);
inline jule::Str static__1badc4258_structure(jule::Ptr<_1ac43a6e0_Struct>);
inline jule::Str static__1badc4500_structureIns(jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Str static__1badc4797_array(jule::Ptr<_1ad19108d_Arr>);
inline jule::Str static__1badc4cd6_paramIns(jule::Ptr<_1ac514962_ParamIns>&);
inline jule::Str static__1badc5325_funcInsResult(jule::Ptr<_1ac515831_FnIns>&);
inline jule::Str static__1badc55bc_anonFunc(jule::Ptr<_1ac515831_FnIns>);
inline jule::Str static__1badc5864_func(jule::Ptr<_1ac515831_FnIns>);
inline jule::Str static__1badc5b0b_kind(jule::Ptr<_1ad18522a_TypeKind>);
struct _1badc1552_typeCoder {
	

	_1badc1552_typeCoder(void) = default;

	inline bool operator==(_1badc1552_typeCoder _other) { return true; }

	inline bool operator!=(_1badc1552_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1bd6c92ca_Name(_1bd6c9929_Flag*);
inline jule::Str _1bd6c9d14_What(_1bd6c9929_Flag*);
inline void _1bd6c9e46_Reset(_1bd6c9929_Flag*);
inline jule::I32 _1bd6ca078_Short(_1bd6c9929_Flag*);
struct _1bd6c9929_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_1bd6c9929_Flag(void) = default;

	inline bool operator==(_1bd6c9929_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6c9929_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bd6cd136_Name(_1bd6cd5dc_Flag*);
inline jule::Str _1bd6cd8a6_What(_1bd6cd5dc_Flag*);
inline void _1bd6cd9d8_Reset(_1bd6cd5dc_Flag*);
inline jule::I32 _1bd6cdb1a_Short(_1bd6cd5dc_Flag*);
struct _1bd6cd5dc_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_1bd6cd5dc_Flag(void) = default;

	inline bool operator==(_1bd6cd5dc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6cd5dc_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bd6d1b1d_Name(_1bd6d20c4_Flag*);
inline jule::Str _1bd6d238d_What(_1bd6d20c4_Flag*);
inline void _1bd6d24c0_Reset(_1bd6d20c4_Flag*);
inline jule::I32 _1bd6d2602_Short(_1bd6d20c4_Flag*);
struct _1bd6d20c4_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_1bd6d20c4_Flag(void) = default;

	inline bool operator==(_1bd6d20c4_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6d20c4_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bd6d5649_Name(_1bd6d5b00_Flag*);
inline jule::Str _1bd6d5db9_What(_1bd6d5b00_Flag*);
inline void _1bd6d5eeb_Reset(_1bd6d5b00_Flag*);
inline jule::I32 _1bd6d612d_Short(_1bd6d5b00_Flag*);
struct _1bd6d5b00_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_1bd6d5b00_Flag(void) = default;

	inline bool operator==(_1bd6d5b00_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6d5b00_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bd6d9131_Name(_1bd6d95d7_Flag*);
inline jule::Str _1bd6d98a1_What(_1bd6d95d7_Flag*);
inline void _1bd6d99d3_Reset(_1bd6d95d7_Flag*);
inline jule::I32 _1bd6d9b15_Short(_1bd6d95d7_Flag*);
struct _1bd6d95d7_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_1bd6d95d7_Flag(void) = default;

	inline bool operator==(_1bd6d95d7_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1bd6d95d7_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bae0c2e6_FlagSet> static__1bae0c5d2_New(void);
inline jule::Trait<_1bae0a877_CommonFlag> _1bae0ca66_FindFlag(_1bae0c2e6_FlagSet*, jule::Str);
inline jule::Trait<_1bae0a877_CommonFlag> _1bae0cd74_FindFlagShort(_1bae0c2e6_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1bae0a877_CommonFlag>> _1bae0d0d8_Flags(_1bae0c2e6_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1bae0d3e6_Parse(_1bae0c2e6_FlagSet*, jule::Slice<jule::Str>);
inline void _1bae0d5c2_Reset(_1bae0c2e6_FlagSet*);
inline jule::Ptr<_1bd6d95d7_Flag> _1bd8c1989_addFlagCommon(_1bae0c2e6_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bd6d5b00_Flag> _1bd8ca5a8_addFlagCommon(_1bae0c2e6_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bd8be8dd_AddVar(_1bae0c2e6_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bd8c851d_AddVar(_1bae0c2e6_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1bae0c2e6_FlagSet {
	jule::Slice<jule::Trait<_1bae0a877_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_1bae0a877_CommonFlag>>();
	

	_1bae0c2e6_FlagSet(void) = default;

	inline bool operator==(_1bae0c2e6_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1bae0c2e6_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1ad8ad38c_IR>,jule::Slice<_1a92722b6_Log>> static__1ad88c547_Build(jule::Str, jule::I64);
inline void _1ad899301_appendStructs(_1ad8ad38c_IR*, jule::Ptr<_1ad0e0075_Package>&, jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>&);
inline jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _1ad8a0add_GetAllStructures(_1ad8ad38c_IR*);
inline void _1ad8a7b5b_appendGlobals(_1ad8ad38c_IR*, jule::Ptr<_1ad0e0075_Package>&, jule::Slice<jule::Ptr<_1ad112097_Var>>&);
inline jule::Slice<jule::Ptr<_1ad112097_Var>> _1ad8ad227_GetAllGlobals(_1ad8ad38c_IR*);
inline void _1a96559c9_Order(_1ad8ad38c_IR*);
struct _1ad8ad38c_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1ad0e0075_Package> _field_Main = jule::Ptr<_1ad0e0075_Package>();
	jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>>();
	_1ad902d4e_OrderedDefines _field_Ordered = _1ad902d4e_OrderedDefines();
	

	_1ad8ad38c_IR(void) = default;

	inline bool operator==(_1ad8ad38c_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1ad8ad38c_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac43c3c3_Str(_1ac466a3a_StructIns*);
inline jule::Bool _1ac43d539_Equals(jule::Ptr<_1ac466a3a_StructIns>, jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ac44088d_Same(_1ac466a3a_StructIns*, jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Ptr<_1ac512b80_Fn> _1ac441bad_FindMethod(_1ac466a3a_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ac442d57_FieldIns> _1ac4446c7_FindField(_1ac466a3a_StructIns*, jule::Str);
struct _1ac466a3a_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1ac43a6e0_Struct> _field_Decl = jule::Ptr<_1ac43a6e0_Struct>();
	jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>();
	jule::Slice<jule::Ptr<_1ac442d57_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1ac442d57_FieldIns>>();
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1ac512b80_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1ac518702_ReferenceStack> _field_Refers = jule::Ptr<_1ac518702_ReferenceStack>();
	_1ac43c11a_Operators _field_Operators = _1ac43c11a_Operators();
	

	_1ac466a3a_StructIns(void) = default;

	inline bool operator==(_1ac466a3a_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1ac466a3a_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad9e3c97_ObjectDeadCode> static__1ad9e4270_new(jule::Ptr<_1ad8ad38c_IR>&);
inline jule::Bool _1bd379277_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac524a3d_Trait>&);
inline jule::Bool _1bd38004c_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Bool _1bd38620c_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac466a3a_StructIns>&);
inline jule::Bool _1bd38d0e3_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad112097_Var>&);
inline void _1bd37981b_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac524a3d_Trait>);
inline void _1bd38367c_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac515831_FnIns>);
inline void _1bd38674b_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac466a3a_StructIns>);
inline void _1bd3919cb_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad112097_Var>);
inline void _1ada223be_setReferencesAsLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ac518702_ReferenceStack>&);
inline void _1ada22644_inits(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ada228b9_collectLivePackage(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ada22a95_collectLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode>);
inline void _1ada22d1a_removeDeadGlobals(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ad112097_Var>>&);
inline void _1ada23090_removeDeadFns(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac512b80_Fn>>&);
inline void _1ada23315_removeDeadStructs(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>&);
inline void _1ada2358a_removeDeadTraits(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ac524a3d_Trait>>&);
inline void _1ada23810_removeDeadsFile(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad15442a_SymbolTable>&);
inline void _1ada23a85_removeDeadsPackage(jule::Ptr<_1ad9e3c97_ObjectDeadCode>, jule::Ptr<_1ad0e0075_Package>&);
inline void _1ada23c61_removeDeads(jule::Ptr<_1ad9e3c97_ObjectDeadCode>);
inline void _1ada23e3c_elimanate(jule::Ptr<_1ad9e3c97_ObjectDeadCode>);
struct _1ad9e3c97_ObjectDeadCode {
	_1ad9e3967_liveTable _field_live = _1ad9e3967_liveTable();
	jule::Ptr<_1ad8ad38c_IR> _field_ir = jule::Ptr<_1ad8ad38c_IR>();
	

	_1ad9e3c97_ObjectDeadCode(void) = default;

	inline bool operator==(_1ad9e3c97_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ad9e3c97_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1badba21b_ObjectCoder> static__1bad9d243_New(jule::Ptr<_1ad8ad38c_IR>&, _1badb9d42_SerializationInfo);
inline void _1bad9d573_write(jule::Ptr<_1badba21b_ObjectCoder>, jule::Str);
inline void _1bad9dd15_addIndent(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad9ed05_doneIndent(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bada0553_indent(jule::Ptr<_1badba21b_ObjectCoder>);
inline jule::I64 _1bad8e8c7_findTypeOffset(_1badba21b_ObjectCoder*, jule::Ptr<_1ac524a3d_Trait>, jule::Ptr<_1ad18522a_TypeKind>);
inline void _1bada193e_locInfo(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1a959a127_Token>&);
inline void _1bad7b210_head(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad9e563_links(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad7ea3d_prepareStructures(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad8b6d7_iterPackages(jule::Ptr<_1badba21b_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>);
inline void _1bad8bc6a_buildTraitMap(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad8cb39_traitDecls(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad8d2ee_structurePlainDecl(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1bad8d9b4_structurePlainDecls(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1bad8e179_fieldDecl(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac442d57_FieldIns>&);
inline void _1bad8b462_structureDestructor(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1bad80e07_structureDeriveDefsDecls(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badba7b0_structureOperatorEq(jule::Ptr<_1badba21b_ObjectCoder>, jule::Str&, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badba8e2_structureOperatorNotEq(jule::Ptr<_1badba21b_ObjectCoder>, jule::Str&, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbaa24_structureOperator(jule::Ptr<_1badba21b_ObjectCoder>, jule::Str&, jule::Ptr<_1ac515831_FnIns>&, jule::Str);
inline void _1badbab56_structureOperators(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbac88_structureInsDecl(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbadba_structureDecl(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1badbaeec_structureDecls(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbb12e_paramsDecls(jule::Ptr<_1badba21b_ObjectCoder>, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>&);
inline void _1badbb261_funcHead(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac515831_FnIns>&, jule::Bool);
inline void _1badbb393_funcDecl(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac512b80_Fn>&, jule::Bool);
inline void _1badbb4c5_funcDecls(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbb607_traitDataTypes(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbb7d3_paramIns(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac514962_ParamIns>&);
inline void _1badbba58_paramsIns(jule::Ptr<_1badba21b_ObjectCoder>, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>&);
inline void _1badbbd77_varInitExpr(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ad112097_Var>&, jule::Fn<void(void)>);
inline void _1badbc0ec_var(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ad112097_Var>);
inline void _1badbc372_func(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac512b80_Fn>&);
inline void _1badbc54d_traitWrappers(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbc729_traitDatas(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbc905_globals(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbcad1_decls(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbcd56_structureMethods(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbd0cb_structureDeriveDefs(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbd351_structureOstream(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbd5c6_structureIns(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac466a3a_StructIns>&);
inline void _1badbd84b_structure(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ac43a6e0_Struct>&);
inline void _1badbda27_structures(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbdc03_funcs(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbde78_pushInit(jule::Ptr<_1badba21b_ObjectCoder>, jule::Ptr<_1ad0e0075_Package>&);
inline void _1badbe154_initCaller(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbe330_end(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbe50b_serializeHead(jule::Ptr<_1badba21b_ObjectCoder>);
inline void _1badbe6d7_Serialize(jule::Ptr<_1badba21b_ObjectCoder>);
struct _1badba21b_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1ad8ad38c_IR> _field_ir = jule::Ptr<_1ad8ad38c_IR>();
	_1badb9d42_SerializationInfo _field_info = _1badb9d42_SerializationInfo();
	jule::Slice<jule::Ptr<_1badba02e_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1badba02e_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1bad420e9_exprCoder> _field_ec = jule::Ptr<_1bad420e9_exprCoder>();
	jule::Ptr<_1bad395a8_scopeCoder> _field_sc = jule::Ptr<_1bad395a8_scopeCoder>();
	

	_1badba21b_ObjectCoder(void) = default;

	inline bool operator==(_1badba21b_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1badba21b_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1bd6ed5c9_parseInteger(_1bae0e9be_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1bd70668c_parseInteger(_1bae0e9be_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1bae102b6_getData(_1bae0e9be_argParser*);
inline jule::VoidExceptional _1bae10508_processFlag(_1bae0e9be_argParser*, jule::Trait<_1bae0a877_CommonFlag>&);
inline jule::VoidExceptional _1bae1077d_singleDash(_1bae0e9be_argParser*, jule::Str&);
inline jule::VoidExceptional _1bae10a03_doubleDash(_1bae0e9be_argParser*, jule::Str&);
inline jule::VoidExceptional _1bae10bce_tryArg(_1bae0e9be_argParser*);
inline jule::VoidExceptional _1bae10daa_parse(_1bae0e9be_argParser*);
struct _1bae0e9be_argParser {
	_1bae0c2e6_FlagSet _field_set = _1bae0c2e6_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1bae0e9be_argParser(void) = default;

	inline bool operator==(_1bae0e9be_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1bae0e9be_argParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _1db9dac61_DecodeRune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _1db9db008_EncodeRune(jule::I32);
inline jule::Slice<jule::I32> _1db9db5be_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1db9db8cc_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _1db9c64dd_Utf16FromStr(jule::Str);
inline jule::Str _1db9c7126_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _1db9c7258_U16PtrToStr(jule::U16*);
inline jule::I64 _1d9e96350_GetLastErrno(void);
inline jule::Uintptr _1db9dcee9_GetStdHandle(jule::Uintptr);
inline jule::I64 _1db9dd48e_Wstat(jule::U16*, struct stat*);
inline jule::I64 _1db9dd879_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _1db9dda77_GetLastError(void);
inline jule::U32 _1db9dddb8_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _1db9de407_DeleteFile(jule::U16*);
inline jule::Bool _1db9de69e_CreateDirectory(jule::U16*);
inline jule::Bool _1db9de946_RemoveDirectory(jule::U16*);
inline _WDIR* _1db9debdd_Wopendir(jule::U16*);
inline struct _wdirent* _1db9dee85_Wreaddir(_WDIR*);
inline jule::I64 _1db9e022c_Wclosedir(_WDIR*);
inline jule::U32 _1db9e0903_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _1db9e0c44_GetConsoleMode(jule::Uintptr, jule::I64&);
inline jule::Bool _1db9e1085_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _1db9e15b3_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _1db9e1ae1_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _1db9e3e78_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1db9e4363_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1db9e46d7_Close(jule::I64);
inline jule::I64 _1db9e4ac2_Write(jule::I64, void*, jule::U64);
inline void _1db9e4cd1_Exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _1dbac6c1a_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1dbac7039_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _1dbac72d1_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _1dbac7820_RuneLen(jule::I32);
inline jule::I64 _1dbac7c3d_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1dbac807e_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1dbac83c0_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1dbac890e_RuneCountStr(jule::Str);
inline jule::Bool _1dbac8ba6_RuneStart(jule::U8);
inline jule::I64 _1da13dc23_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1da142870_Args(void);
inline jule::Exceptional<jule::Str> _1da142ce3_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1da143be5_getwd(void);
inline jule::Slice<jule::U8> _1dbd194ce_Stobs(jule::Str&);
inline jule::Bool _1a915c932_IsLetter(jule::I32);
inline jule::Bool _1a91cece5_is16(jule::Slice<_1a91cd233_Range16>, jule::U16);
inline jule::Bool _1a91d0136_is32(jule::Slice<_1a91cd6a6_Range32>, jule::U32);
inline jule::Bool _1a91d08c8_isExcludingLatin(jule::Ptr<_1a91cdb29_RangeTable>, jule::I32);
inline jule::Bool _1a91d0b70_IsUpper(jule::I32);
inline jule::Str _1a9138028_Repeat(jule::Str, jule::I64);
inline jule::Bool _1a91413c7_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a9142ae3_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1a9154253_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1a91579c6_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1a91379a6_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a9138a62_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a91d1049_FindLast(jule::Str, jule::Str);
inline jule::I64 _1a91d1654_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1a91d1ae9_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1a91d20c2_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a91d2336_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a91d2468_Contains(jule::Str, jule::Str);
inline jule::Bool _1a91d280e_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1a91d2941_Count(jule::Str, jule::Str);
inline jule::Str _1a91d2a73_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1a91d18b8_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a91d34be_TrimLeft(jule::Str, jule::Str);
inline void _1a91d3601_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1a91d3865_Trim(jule::Str, jule::Str);
inline jule::Bool _1da11ad21_IsPathSep(jule::U8);
inline jule::Bool _1da11b10c_isSlash(jule::U8);
inline jule::U8 _1da11b3a4_toUpper(jule::U8);
inline jule::I64 _1da11b96a_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1da11bc12_cutPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1da11bea9_fullPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1da11c32d_abs(jule::Str);
inline jule::Str _1da11c5c5_join(jule::Slice<jule::Str>);
inline jule::Str _1a91d415c_Clean(jule::Str);
inline jule::Str _1a91d43c1_FromSlash(jule::Str);
inline jule::Str _1a91d4503_Join(jule::Slice<jule::Str>);
inline jule::Str _1a91d4635_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a91d4767_Abs(jule::Str);
inline jule::Str _1a91d4899_Base(jule::Str);
inline jule::Str _1a91d49cb_Dir(jule::Str);
inline jule::Str _1a91d4b0d_VolumeName(jule::Str);
inline jule::I64 _1d9e3591b_getLastFsError(void);
inline jule::Bool _1dbb28486_isConsoleHandle(jule::Uintptr);
inline jule::I64 _1a92b07aa_getLastProcessError(void);
inline jule::Slice<wchar_t*> _1a92c0369_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1a92c0611_strSliceToUstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _1a92c091e_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1a92c0d09_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1a92c1a30_Exit(jule::I64);
inline jule::Str _1a92c1c2d_Executable(void);
inline jule::Bool _1a9265595_IsStdHeaderPath(jule::Str);
inline jule::Bool _1a926584d_IsValidHeaderExt(jule::Str);
inline jule::Bool _1a9265ae5_IsValidCppExt(jule::Str);
inline jule::Str _1a9272706_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a92729e2_argToStr(jule::Any);
inline jule::I64 _1a9272c89_findNextFmt(jule::Str);
inline jule::Str _1a927311e_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a92741db_IsTopDirective(jule::Str);
inline jule::Bool _1a927561b_IsWindows(jule::Str);
inline jule::Bool _1a92758c4_IsDarwin(jule::Str);
inline jule::Bool _1a9275b6b_IsLinux(jule::Str);
inline jule::Bool _1a9275e8a_IsI386(jule::Str);
inline jule::Bool _1a9276232_IsAmd64(jule::Str);
inline jule::Bool _1a92764c9_IsArm64(jule::Str);
inline jule::Bool _1a9276771_IsUnix(jule::Str);
inline jule::Bool _1a9276ae5_Is32Bit(jule::Str);
inline jule::Bool _1a9276d8c_Is64Bit(jule::Str);
inline void _1a9283ea9_init(void);
inline jule::Bool _1a959a831_IsUnaryOp(jule::Str);
inline jule::Bool _1a959ab1c_IsBinOp(jule::Str);
inline jule::Bool _1a959b1d3_IsStr(jule::Str);
inline jule::Bool _1a959b47a_IsRawStr(jule::Str);
inline jule::Bool _1a959b722_IsRune(jule::Str);
inline jule::Bool _1a959bd3d_IsBool(jule::Str);
inline jule::Bool _1a959c0d5_IsFloat(jule::Str);
inline jule::Bool _1a959c37c_IsNum(jule::Str);
inline jule::Bool _1a959c8bb_IsIgnoreIdent(jule::Str);
inline jule::Bool _1a959cb63_IsAnonIdent(jule::Str);
inline jule::Bool _1a959d1a2_IsSpace(jule::I32);
inline jule::Bool _1a959d603_IsLetter(jule::I32);
inline jule::Bool _1a959db42_IsDecimal(jule::U8);
inline jule::Bool _1a959ddd9_IsBinary(jule::U8);
inline jule::Bool _1a959e181_IsOctal(jule::U8);
inline jule::Bool _1a959e428_IsHex(jule::U8);
inline jule::Bool _1a959e6c0_IsAssign(jule::U64);
inline jule::Bool _1a959e967_IsPostfixOp(jule::Str);
inline jule::Bool _1a959ec0e_IsAssignOp(jule::Str);
inline jule::Ptr<_1a95a04b2_File> _1a95a19e1_NewFileSet(jule::Str);
inline _1a92722b6_Log _1a95a331c_makeErr(jule::I64, jule::I64, jule::Ptr<_1a95a04b2_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a95a36a2_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1a95a39e3_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a3d78_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a41b9_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a450a_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a484b_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a4c9c_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a5044_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1a95a52db_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1a95a562c_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1a95a596d_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1a95a5cae_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a95a6100_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1a95a6441_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a6892_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1a95a6b39_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1a95a6e7a_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1a95a7222_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a95a74db_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a95a7695_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1a95a792b_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1a92722b6_Log> _1a95ac425_Lex(jule::Ptr<_1a95a04b2_File>, jule::I64);
inline void _1ac50a2a4_lshiftUnsig(_1ac49c202_Const&, _1ac49c202_Const&);
inline void _1ac50a5a1_rshiftUnsig(_1ac49c202_Const&, _1ac49c202_Const&);
inline jule::I64 _1ad07e047_LeadingZeros64(jule::U64);
inline jule::I64 _1ad08009d_TrailingZeros(jule::U64);
inline jule::I64 _1ad080994_TrailingZeros32(jule::U32);
inline jule::I64 _1ad080c3b_TrailingZeros64(jule::U64);
inline jule::I64 _1ad0864b1_Len32(jule::U32);
inline jule::I64 _1ad086758_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ad087418_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ad088a9b_Mul64(jule::U64, jule::U64);
inline jule::U32 _1acea5424_F32Bits(jule::F32);
inline jule::F32 _1acea5710_F32FromBits(jule::U32);
inline jule::U64 _1acea59a7_F64Bits(jule::F64);
inline jule::F64 _1acea5cc6_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1acea83d3_Frexp(jule::F64);
inline jule::F64 _1ad015c15_NaN(void);
inline jule::Bool _1ad016b4a_IsNaN(jule::F64);
inline jule::F64 _1ad0185db_Inf(jule::I64);
inline jule::Bool _1ad01de4e_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1ad02055a_normalize(jule::F64);
inline jule::F64 _1ad030724_Log(jule::F64);
inline jule::F64 _1ad037198_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1ad092445_Modf(jule::F64);
inline jule::F64 _1ad092c09_Log2(jule::F64);
inline jule::Str _1aca2a252_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1aca3e909_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1aca97588_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline jule::Slice<jule::U8> _1acabde83_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1acabe7d0_decimalSlice, jule::I64, jule::U8);
inline void _1acac1150_roundShortest(_1ad0c09d4_decimal&, jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline jule::Slice<jule::U8> _1acad024c_fmtE(jule::Slice<jule::U8>, jule::Bool, _1acabe7d0_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1acad0901_fmtF(jule::Slice<jule::U8>, jule::Bool, _1acabe7d0_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1acad188b_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline jule::Slice<jule::U8> _1acb9a2a1_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline jule::I64 _1acbbda33_min(jule::I64, jule::I64);
inline jule::I64 _1acbc3e12_max(jule::I64, jule::I64);
inline jule::U8 _1acc090ce_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1acc39d35_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1acdd8b82_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1ace374e9_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1aca1b2a9_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1aca40498_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1acbcdc41_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1aca61b4b_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1acaa573e_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1ace9094d_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1ace97290_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1aca85620_atofHex(jule::Str, _1acbbc9cc_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1acb6d74c_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ad0bd6c4_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ad0bd806_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1ad0bd938_ParseFloat(jule::Str, jule::I64);
inline void _1ad0bdd56_ryuFtoaFixed32(_1acabe7d0_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1ad0bde88_ryuFtoaFixed64(_1acabe7d0_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1ad0be241_formatDecimal(_1acabe7d0_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1ad0be373_ryuFtoaShortest(_1acabe7d0_decimalSlice&, jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline jule::I64 _1ad0be4a5_mulByLog2Log10(jule::I64);
inline jule::I64 _1ad0be5d7_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ad0be719_computeBounds(jule::U64, jule::I64, _1acbbc9cc_floatInfo&);
inline void _1ad0be95b_ryuDigits(_1acabe7d0_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1ad0bea8d_ryuDigits32(_1acabe7d0_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ad0bebc0_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ad0bed02_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1ad0bee34_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1ad0c0066_divmod1e9(jule::U64);
inline void _1ad0c1540_trim(_1ad0c09d4_decimal&);
inline void _1ad0c1672_rightShift(_1ad0c09d4_decimal&, jule::U64);
inline jule::Bool _1ad0c17a4_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1ad0c18d6_leftShift(_1ad0c09d4_decimal&, jule::U64);
inline jule::Bool _1ad0c1a18_shouldRoundUp(_1ad0c09d4_decimal&, jule::I64);
inline jule::Str _1ad0c2596_FmtUint(jule::U64, jule::I64);
inline jule::Str _1ad0c26c8_FmtInt(jule::I64, jule::I64);
inline jule::Str _1ad0c280a_Itoa(jule::I64);
inline jule::Str _1ad0c293c_small(jule::I64);
inline jule::Bool _1ad0c2a6e_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ad0c2ba1_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1ac62d4b5_RealKindOf(jule::Str);
inline jule::I64 _1ac634be7_BitsizeOf(jule::Str);
inline jule::Str _1ac658e80_IntFromBits(jule::I64);
inline jule::Str _1ac66ad93_UintFromBits(jule::I64);
inline jule::Str _1ac694dab_FloatFromBits(jule::I64);
inline jule::Bool _1ac830de3_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1ac84ee78_BitsizeOfFloat(jule::F64);
inline jule::I64 _1ac905726_BitsizeOfInt(jule::I64);
inline jule::I64 _1ac91d4b9_BitsizeOfUint(jule::U64);
inline void _1ac91dbe5_UpdateTarget(void);
inline void _1ac92b2a7_init(void);
inline jule::F64 _1ac9a560b_Min(jule::Str);
inline jule::F64 _1ac9b3295_Max(jule::Str);
inline jule::Bool _1ac9beca7_IsI8Compatible(jule::Str);
inline jule::Bool _1ac9cb29c_IsI16Compatible(jule::Str);
inline jule::Bool _1ac9eb366_IsI32Compatible(jule::Str);
inline jule::Bool _1aca02933_IsI64Compatible(jule::Str);
inline jule::Bool _1ac60a74a_IsU8Compatible(jule::Str);
inline jule::Bool _1ac5b1855_IsU16Compatible(jule::Str);
inline jule::Bool _1ac682ad0_IsU32Compatible(jule::Str);
inline jule::Bool _1ac68364c_IsU64Compatible(jule::Str);
inline jule::Bool _1ac875b5d_IsF32Compatible(jule::Str);
inline jule::Bool _1ac876c91_IsF64Compatible(jule::Str);
inline jule::Bool _1ac87bdea_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ac882054_IsI16Greater(jule::Str);
inline jule::Bool _1ac9eb7c8_IsI32Greater(jule::Str);
inline jule::Bool _1ac60c7e6_IsI64Greater(jule::Str);
inline jule::Bool _1ac830750_IsU16Greater(jule::Str);
inline jule::Bool _1ad0c3663_IsU32Greater(jule::Str);
inline jule::Bool _1ad0c3795_IsU64Greater(jule::Str);
inline jule::Bool _1ad0c38c7_IsF32Greater(jule::Str);
inline jule::Bool _1ad0c3a09_IsF64Greater(jule::Str);
inline jule::Bool _1ad0c3b3b_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ad0c407b_IsSigInt(jule::Str);
inline jule::Bool _1ad0c41ad_IsUnsigInt(jule::Str);
inline jule::Bool _1ad0c42e0_IsInt(jule::Str);
inline jule::Bool _1ad0c4422_IsFloat(jule::Str);
inline jule::Bool _1ad0c4554_IsNum(jule::Str);
inline jule::Bool _1ad0c4686_IsSigNum(jule::Str);
inline jule::Bool _1ad12a148_IsAscii(jule::I32);
inline jule::I32 _1ad12a27a_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1ad142094_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1ad14234c_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1ad1425e4_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1ad142902_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1ad142c43_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1ad21c2b2_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1ad21ca76_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ad203c16_fmtByDefault(jule::Any&);
inline jule::Slice<jule::U8> _1ad2034eb_applyFmtByDefault(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ad206cc4_applyFmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ad214463_formatBytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ad23ae07_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ac517943_parameterUsesGenerics(jule::Ptr<_1ac511343_Param>&, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>&);
inline jule::Ptr<_1ad189383_TypeSymbol> _1ac519e1d_buildType(jule::Ptr<_1ac449eb3_TypeDecl>);
inline jule::Ptr<_1ad15a211_Value> _1ac51a209_buildExpr(jule::Ptr<_1ac44e4d4_Expr>);
inline jule::Ptr<_1ad184537_TypeAlias> _1ac51a4a1_buildTypeAlias(jule::Ptr<_1ac461617_TypeAliasDecl>);
inline jule::Ptr<_1ac427d4d_Field> _1ac51a7c0_buildField(jule::Ptr<_1ac464c03_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ac427d4d_Field>> _1ac51aa67_buildFields(jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>>&);
inline jule::Ptr<_1ac43a6e0_Struct> _1ac51ad0e_buildStruct(jule::Ptr<_1ac465561_StructDecl>);
inline jule::Ptr<_1ac511343_Param> _1ac51b0a6_buildParam(jule::Ptr<_1ac45a9a7_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ac511343_Param>> _1ac51b42a_buildParams(jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>>&);
inline jule::Ptr<_1ac510b7d_RetType> _1ac51b6c2_buildRetType(jule::Ptr<_1ac44d0c6_RetTypeDecl>);
inline jule::Ptr<_1ac512b80_Fn> _1ac51b969_buildFn(jule::Ptr<_1ac45bcc7_FnDecl>);
inline jule::Slice<jule::Ptr<_1ac512b80_Fn>> _1ac51bc11_buildMethods(jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>>&);
inline jule::Ptr<_1ac524a3d_Trait> _1ac51bea8_buildTrait(jule::Ptr<_1ac465b6b_TraitDecl>);
inline jule::Ptr<_1ac52618d_EnumItem> _1ac51c250_buildEnumItem(jule::Ptr<_1ac462e76_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac52618d_EnumItem>> _1ac51c4e7_buildEnumItems(jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>>&);
inline jule::Ptr<_1ac526b83_Enum> _1ac51c78e_buildEnum(jule::Ptr<_1ac46399e_EnumDecl>);
inline jule::Ptr<_1ac527bb7_TypeEnumItem> _1ac51cbe0_buildTypeEnumItem(jule::Ptr<_1ac4644a5_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>> _1ac51ce87_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>>&);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ac51d22e_buildTypeEnum(jule::Ptr<_1ac4646a3_TypeEnumDecl>);
inline jule::Ptr<_1ad112097_Var> _1ac51d4c6_buildVar(jule::Ptr<_1ac45cca6_VarDecl>);
inline jule::Slice<jule::Ptr<_1ad112097_Var>> _1ac51d76d_buildVars(jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>>);
inline jule::Ptr<_1ac5ae0b1_Impl> _1ac51da15_buildImpl(jule::Ptr<_1ac466276_Impl>);
inline jule::Bool _1ac58640c_matchConstraint(jule::Str&, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ac588002_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1ad0c7799_scopeChecker> _1ac587d59_newScopeCheckerBase(jule::Ptr<_1ad0e5267_Sema>&, jule::Ptr<_1ac515831_FnIns>);
inline jule::Ptr<_1ad0c7799_scopeChecker> _1ac597132_newScopeChecker(jule::Ptr<_1ad0e5267_Sema>&, jule::Ptr<_1ac515831_FnIns>);
inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ac597bb0_findLabelParent(jule::Str, jule::Ptr<_1ad0c7799_scopeChecker>);
inline jule::Bool _1ac598a6d_modelIsGotoScope(jule::Any, jule::Ptr<_1ad0c4994_Scope>&);
inline jule::Bool _1ac599a3b_stmtIsGotoScope(jule::Any&, jule::Ptr<_1ad0c4994_Scope>&);
inline jule::I64 _1ac59a8e9_countMatchType(jule::Ptr<_1ad0c6677_Match>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Slice<jule::Ptr<_1ad159188_Data>> _1ac5a86a4_getDatasFromTupleData(jule::Ptr<_1ad159188_Data>&);
inline jule::Slice<jule::Any> _1ac5ab5ec_getExprModels(jule::Any&);
inline jule::Bool _1ac5ac136_checkMut(jule::Ptr<_1ad0e5267_Sema>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ac5acbb4_checkAssign(jule::Ptr<_1ad0e5267_Sema>&, jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad159188_Data>, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ac5a8330_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1ac5552cc_isValidStForNextSt(jule::Any&);
inline jule::Bool _1ac5968e5_stmtIsDef(jule::Any&);
inline jule::Ptr<_1ad112097_Var> _1ad0d9c1d_findVarInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad0da14c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad0da537_findStructInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ac512b80_Fn> _1ad0da999_findFnInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ac524a3d_Trait> _1ad0daca7_findTraitInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1ac526b83_Enum> _1ad0db0e8_findEnumInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0db439_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Str);
inline jule::Bool _1ad0e264e_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1ad0e33a8_isValidModelForRef(jule::Any&);
inline _1a92722b6_Log _1ad0e384d_compilerErr(jule::Ptr<_1a959a127_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ad0e3b8e_impIsLookupable(jule::Ptr<_1ad0dc11b_ImportInfo>&, jule::Str);
inline void _1ad0e3e8b_appendRetVars(jule::Slice<jule::Ptr<_1ad112097_Var>>&, jule::Ptr<_1ac515831_FnIns>&);
inline void _1ad0e4244_appendParamVars(jule::Slice<jule::Ptr<_1ad112097_Var>>&, jule::Ptr<_1ac515831_FnIns>&);
inline void _1ad0e451e_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Ptr<_1ad15442a_SymbolTable> _1ad0e4871_findFile(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>&, jule::Ptr<_1a95a04b2_File>&);
inline void _1ad0e4cd3_pushSugggestion(_1a92722b6_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ad13353b_traitHasReferenceReceiver(jule::Ptr<_1ac524a3d_Trait>&);
inline jule::Bool _1ad12a566_floatAssignable(jule::Str, jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ad12a698_sigAssignable(jule::Str, jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ad141c86_unsigAssignable(jule::Str, jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ad141db8_intAssignable(jule::Str, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ac41195d_Directive> _1ad17e972_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline jule::Any _1ad17ed07_findBuiltinsImport(jule::Str, jule::Ptr<_1ad0dc11b_ImportInfo>);
inline void _1ad180016_fitBitsize(jule::Ptr<_1ad159188_Data>&);
inline void _1ad180313_makeStructLitAlloc(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac50aeb9_StructLitExprModel>&);
inline jule::Ptr<_1ad112097_Var> _1ad180654_buildErrorVar(jule::Ptr<_1ad0c4994_Scope>&, jule::Ptr<_1ac4537a2_FnCallExpr>&);
inline jule::Any _1ad180995_findBuiltinsSema(jule::Str, jule::Ptr<_1ad0e5267_Sema>);
inline jule::Bool _1ad180c3c_isOkForShifting(jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ad1810e4_isInstancedStruct(jule::Ptr<_1ac466a3a_StructIns>);
inline jule::Bool _1ad1813ad_isPtrArithmeticCompatibleInt(jule::Ptr<_1ad159188_Data>&);
inline void _1ad181600_applyCastKindModel(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline void _1ad1818a8_applyCastKind(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Ptr<_1ad159188_Data> _1ad181aa6_buildVoidData(void);
inline jule::Str _1ad181d70_checkDataForIntegerIndexing(jule::Ptr<_1ad159188_Data>&);
inline void _1ad182139_applyCastModelByEnum(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ac526b83_Enum>);
inline void _1ad1823e2_castConstByType(jule::Str&, jule::Ptr<_1ad159188_Data>&);
inline void _1ad1828ed_updateModelToGenericIns(jule::Any&, jule::Ptr<_1ac515831_FnIns>&);
inline jule::Bool _1ad182b40_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ac44abc8_SubIdentTypeDecl>&);
inline jule::Bool _1ad1a1950_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>&);
inline jule::Bool _1ad1a1cd5_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline jule::Bool _1ad1a207c_canGetPtr(jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ad1a239b_isValidForSptrType(jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1a2643_isValidForRef(jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Bool _1ad1a290c_isBuiltinStrConvertable(jule::Ptr<_1ad18522a_TypeKind>&);
inline jule::Str _1ad1a2b82_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ad189c02_Prim> _1ad1a3039_buildPrimType(jule::Str);
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a32d1_getStructFromKind(jule::Ptr<_1ad18522a_TypeKind>);
inline jule::Bool _1ad1a3578_isPrim(jule::Str);
inline void _1ad1a3831_applyImplicitCast(jule::Ptr<_1ad18522a_TypeKind>&, jule::Ptr<_1ad159188_Data>&);
inline std::tuple<jule::Ptr<_1ad15442a_SymbolTable>,jule::Slice<_1a92722b6_Log>> _1ad1a6724_buildSymbols(jule::Ptr<_1ac4107d6_Ast>&, jule::Trait<_1ad0d9888_Importer>&, jule::Ptr<_1ac51e065_symbolBuilder>);
inline std::tuple<jule::Ptr<_1ad0e0075_Package>,jule::Slice<_1a92722b6_Log>> _1ad1a6b53_analyzePackage(jule::Slice<jule::Ptr<_1ac4107d6_Ast>>&, jule::Trait<_1ad0d9888_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1ad0e0075_Package>,jule::Slice<_1a92722b6_Log>> _1ad1a703d_AnalyzePackage(jule::Slice<jule::Ptr<_1ac4107d6_Ast>>, jule::Trait<_1ad0d9888_Importer>, jule::I64);
inline jule::Ptr<_1ac515831_FnIns> _1ad1b0d5a_findBuiltinFn(jule::Str);
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1b2c5d_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ad1b3841_findBuiltinDef(jule::Str);
inline jule::Any _1ad1b4358_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1ad1dd0eb_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1ad239c19_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1ad238cb2_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1ad159188_Data> _1ad213d69_builtinCallerCommonPlain(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad21d527_builtinCallerCommon(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad2396ca_builtinCallerCommonMut(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad214a18_builtinCallerError(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&);
inline jule::Ptr<_1ad159188_Data> _1ad2361aa_builtinCallerOut(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad238aa3_builtinCallerOutln(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad1b1b80_builtinCallerNew(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad203023_builtinCallerPanic(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad21b8ee_builtinCallerMake(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad214d37_builtinCallerAppend(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad23585d_callerCopySlice(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad1ae496_callerCopyStr(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad2289d8_builtinCallerCopy(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad2137c5_builtinCallerClone(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad1caa45_builtinCallerAssert(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad1e6bd7_builtinCallerStdMemSizeOf(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad248365_builtinCallerStdMemAlignOf(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad2486ea_builtinCallerStdMemFree(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad248b29_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad249047_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad249487_builtinCallerStdDebugOut(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Ptr<_1ad159188_Data> _1ad249872_builtinCallerStdDebugOutln(jule::Ptr<_1ad15ac06_Eval>&, jule::Ptr<_1ac4537a2_FnCallExpr>&, jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1ac2745c3_FindModuleFile(jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>&);
inline jule::Str _1ac274705_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1a92722b6_Log> _1ac27498b_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a9652036_FileInfo> _1ad8be5bd_ParseFile(jule::Ptr<_1a95a04b2_File>);
inline std::tuple<jule::Ptr<_1ac4107d6_Ast>,jule::Slice<_1a92722b6_Log>> _1ad8beaeb_parseFileset(jule::Ptr<_1a95a04b2_File>);
inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c0503_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1ad8c0811_isSt(jule::Ptr<_1a959a127_Token>, jule::Ptr<_1a959a127_Token>);
inline jule::Bool _1ad8c0b52_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1ad8c0ed7_nextStPos(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Bool> _1ad8c1328_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _1ad8c19bb_splitStmts(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Bool _1ad8d810e_isTypeOp(jule::Str&);
inline jule::Bool _1ad8d83ea_isTypeRange(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8d8692_getBlockExpr(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d8a27_splitDelim(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::U64);
inline jule::I64 _1ad8d8cbe_findLowestPrecOp(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Ptr<_1ac45154c_IdentExpr> _1ad8d9066_buildIdentExpr(jule::Ptr<_1a959a127_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::I64> _1ad8d930d_getRangeExprTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Bool _1ad8da067_checkAssignTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline _1a92722b6_Log _1ad8db288_makeErr(jule::I64, jule::I64, jule::Ptr<_1a95a04b2_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8db761_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8dba08_rangeLast(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>,jule::Slice<_1a92722b6_Log>> _1ad8dbde3_partsKind(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>,jule::Slice<_1a92722b6_Log>> _1ad8dc2cd_parts(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1ad8dc575_getCloseKindOfBrace(jule::Str);
inline _1a92722b6_Log _1ad8dc960_compilerErr(jule::Ptr<_1a959a127_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1ad8dcd8e_pushSuggestion(_1a92722b6_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ad8dd136_tokstoa(jule::Slice<jule::Ptr<_1a959a127_Token>>&);
inline jule::Bool _1ad8ed19b_isPub(jule::Str&);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8eda1a_buildVoidType(void);
inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8edc7e_buildPrimType(jule::Ptr<_1a959a127_Token>);
inline jule::I64 _1ad8ee0c0_mapColon(jule::Slice<jule::Ptr<_1a959a127_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1ac24e13b_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1ac249136_checkArch(jule::Str);
inline jule::Bool _1ac249268_isPassFileAnnotation(jule::Str);
inline void _1ac26389d_setOsVars(jule::Slice<jule::Str>&);
inline void _1ac263b01_setArchVars(jule::Slice<jule::Str>&);
inline void _1ac263da9_initVars(jule::Slice<jule::Str>&, _1ac263590_CompileInfo&);
inline jule::Slice<jule::U8> _1a944e20c_readBuff(jule::Str);
inline _1a92722b6_Log _1a95b1bcc_flatCompilerErr(jule::Str);
inline void _1a95aedb7_pushPasses(jule::Ptr<_1ad0e0075_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a95bb4cd_getAllUniquePasses(jule::Ptr<_1ad0e0075_Package>&, jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>>);
inline _1ac263590_CompileInfo _1a965b0ea_buildCompileInfo(void);
inline void _1ada24206_EliminateDefines(jule::Ptr<_1ad8ad38c_IR>&);
inline jule::Ptr<_1ac41195d_Directive> _1ada2458b_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline jule::Bool _1ada248cc_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline void _1ada28529_eliminateDeadCodeOfScope(jule::Ptr<_1ad0c4994_Scope>);
inline void _1ada287b0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac512b80_Fn>>&);
inline void _1ada28a02_eliminateFunctionsScopePackage(jule::Ptr<_1ad0e0075_Package>&);
inline void _1ada28c99_eliminateScopePackage(jule::Ptr<_1ad0e0075_Package>&);
inline void _1ada28ea8_EliminateScopes(jule::Ptr<_1ad8ad38c_IR>&);
inline jule::Bool _1abe24a7b_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1abe3069c_isConstantValidConditionalCase(jule::Ptr<_1ad0c4b81_If>&);
inline jule::Bool _1abe76d64_isUnreachableExpr(jule::Any&);
inline jule::Bool _1abe854c1_isConstantValidMatchCase(jule::Ptr<_1ad0c6bc7_Case>&);
inline jule::Bool _1abdcbe40_isUnreachableConditionalCase(jule::Ptr<_1ad0c4b81_If>&);
inline jule::Bool _1abe8dc16_isUnreachableMatchCase(jule::Ptr<_1ad0c6bc7_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1da02a538_checkForBitShiftOpt(jule::Ptr<_1ac50a716_OperandExprModel>&, jule::Ptr<_1ac50a716_OperandExprModel>&);
inline void _1abe8ba6b_PushOptLevel(jule::I64);
inline void _1ad9b41eb_detectEnabled(void);
inline void _1ada3605e_Throw(jule::Str);
inline jule::U64 _1badb9506_unix(void);
inline jule::U64 _1badb9847_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1badb9bcc_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1bad3eb0d_isCopyOptimizable(jule::Ptr<_1ad159188_Data>&);
inline jule::Bool _1bad3ee93_isIterCopyOptimizable(jule::Ptr<_1ad159188_Data>&, jule::Ptr<_1ad112097_Var>&);
inline jule::Str _1bad4d08e_decomposeCommonEsq(jule::U8);
inline jule::Str _1bad4d37a_sbtoa(jule::U8);
inline jule::Str _1bad4d622_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1bad4d941_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1bad4dc4e_ftoa(jule::F64, jule::I64);
inline jule::Str _1bad4dee6_itoa(jule::I64);
inline jule::Str _1bad4e28d_utoa(jule::U64);
inline jule::Bool _1bad4e645_isForwarded(jule::Ptr<_1ad0c4994_Scope>&);
inline jule::Bool _1bad4e90e_isBuiltinCallHasDebuginf(jule::Ptr<_1ac50b580_FnCallExprModel>&);
inline void _1badbea4a_iterFiles(jule::Ptr<_1ad0e0075_Package>&, jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>);
inline void _1badbec9d_prepareStructure(jule::Ptr<_1ac43a6e0_Struct>&);
inline jule::Str _1badc0045_concatAllParts(jule::Slice<jule::Ptr<_1a959a127_Token>>);
inline jule::Ptr<_1ac41195d_Directive> _1badc846b_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline jule::Bool _1badc8801_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>&, jule::Str);
inline void _1a92546a5_printErrorMessage(jule::Str);
inline void _1a9254e03_help(jule::Slice<jule::Str>&);
inline void _1a92567a6_version(jule::Slice<jule::Str>&);
inline void _1a9257004_toolDistos(void);
inline void _1a9257752_toolDistarch(void);
inline void _1a924197d_tool(jule::Slice<jule::Str>&);
inline void _1a9264110_julenv(jule::Slice<jule::Str>&);
inline void _1a925ca98_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1a925828b_processCommand(jule::Slice<jule::Str>&);
inline void _1a9247a61_showInfo(void);
void entry_point(void);
inline void _1a9261d88_enableVtp(void);
inline void _1a9264bc1_init(void);
inline void _1badd28d7_init(void);
inline jule::Ptr<_1dba012b5_File> _1badd4488_openOutput(jule::Str&);
inline void _1bade0670_clearObjects(void);
inline void _1badcbabd_compileIr(jule::Str, jule::Str);
inline jule::Bool _1badcb53a_isCppSourceFile(jule::Str);
inline void _1badd0c48_pushCompCmdClang(jule::Str&);
inline void _1badcde22_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1bae04354_genCompileCmd(jule::Str, jule::Ptr<_1ad8ad38c_IR>&);
inline jule::Str _1badcd3a5_getCompilePath(void);
inline void _1badcd938_applyTargetIndependentOptimizations(jule::Ptr<_1ad8ad38c_IR>&);
inline void _1baddb429_checkCompilerFlag(void);
inline void _1badcb13e_checkTargetArch(jule::Str);
inline void _1badcee9a_checkTargetOs(jule::Str);
inline void _1badd00cc_checkTargetFlag(jule::Str&);
inline void _1bae110ca_checkOptFlag(jule::Str&);
inline void _1bae1143d_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1bae11570_checkFlags(jule::Slice<jule::Str>&);
inline void _1bae116a2_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1ad8ad38c_IR> _1bae117d4_buildIr(jule::Slice<jule::Str>&);
inline void _1bae11916_compileCommand(jule::Slice<jule::Str>&);


struct _1ad0d9888_ImporterMptrData {
	void(*_1ad0d87aa_SetModPath)(jule::Trait<_1ad0d9888_Importer>, jule::Str);
	jule::Str(*_1ad0d89ec_GetModPath)(jule::Trait<_1ad0d9888_Importer>);
	jule::Str(*_1ad0d8d0a_ModById)(jule::Trait<_1ad0d9888_Importer>, jule::I64);
	jule::Ptr<_1ad0dc11b_ImportInfo>(*_1ad0d9118_GetImport)(jule::Trait<_1ad0d9888_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1ac4107d6_Ast>>,jule::Slice<_1a92722b6_Log>>(*_1ad0d94c0_ImportPackage)(jule::Trait<_1ad0d9888_Importer>, jule::Str, jule::Bool);
	void(*_1ad0d9745_Imported)(jule::Trait<_1ad0d9888_Importer>, jule::Ptr<_1ad0dc11b_ImportInfo>);
};

struct _1ad184ceb_KindMptrData {
	jule::Str(*_1ad18489a_Str)(jule::Trait<_1ad184ceb_Kind>);
	jule::Bool(*_1ad184ba8_Equals)(jule::Trait<_1ad184ceb_Kind>, jule::Ptr<_1ad18522a_TypeKind>);
};

struct _1ad1a5bb8_LookupMptrData {
	jule::Ptr<_1ad0dc11b_ImportInfo>(*_1ad1a3d70_FindPackage)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str);
	jule::Ptr<_1ad0dc11b_ImportInfo>(*_1ad1a417d_SelectPackage)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>);
	jule::Ptr<_1ad112097_Var>(*_1ad1a4535_FindVar)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ad184537_TypeAlias>(*_1ad1a48dc_FindTypeAlias)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac43a6e0_Struct>(*_1ad1a4c94_FindStruct)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac512b80_Fn>(*_1ad1a514b_FindFn)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ac524a3d_Trait>(*_1ad1a5459_FindTrait)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str);
	jule::Ptr<_1ac526b83_Enum>(*_1ad1a5767_FindEnum)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str);
	jule::Ptr<_1ac52827d_TypeEnum>(*_1ad1a5a75_FindTypeEnum)(jule::Trait<_1ad1a5bb8_Lookup>, jule::Str);
};

struct _1bae0a877_CommonFlagMptrData {
	jule::Str(*_1badcab11_Name)(jule::Trait<_1bae0a877_CommonFlag>);
	jule::I32(*_1badcac43_Short)(jule::Trait<_1bae0a877_CommonFlag>);
	jule::Str(*_1badcad75_What)(jule::Trait<_1bae0a877_CommonFlag>);
	void(*_1badcb00c_Reset)(jule::Trait<_1bae0a877_CommonFlag>);
};



inline void _1ad0d87aa_SetModPath_0(jule::Trait<_1ad0d9888_Importer> _self_, jule::Str _1729_path) {
	_1a95da9e7_SetModPath(_self_.safe_ptr<_1a964cb25_JuleImporter>(), _1729_path);
}
inline jule::Str _1ad0d89ec_GetModPath_0(jule::Trait<_1ad0d9888_Importer> _self_) {
	return _1a95e466b_GetModPath(_self_.safe_ptr<_1a964cb25_JuleImporter>());
}
inline jule::Str _1ad0d8d0a_ModById_0(jule::Trait<_1ad0d9888_Importer> _self_, jule::I64 _2522_id) {
	return _1a95e99a1_ModById(_self_.safe_ptr<_1a964cb25_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0d9118_GetImport_0(jule::Trait<_1ad0d9888_Importer> _self_, jule::Str _3128_path) {
	return _1a964b8d2_GetImport(_self_.safe_ptr<_1a964cb25_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1ac4107d6_Ast>>,jule::Slice<_1a92722b6_Log>> _1ad0d94c0_ImportPackage_0(jule::Trait<_1ad0d9888_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a965309d_ImportPackage(_self_.safe_ptr<_1a964cb25_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1ad0d9745_Imported_0(jule::Trait<_1ad0d9888_Importer> _self_, jule::Ptr<_1ad0dc11b_ImportInfo> _4131__0) {
	_1a9653dc3_Imported(_self_.safe_ptr<_1a964cb25_JuleImporter>(), _4131__0);
}
inline jule::Str _1ad18489a_Str_0(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ac43c3c3_Str(_self_.safe_ptr<_1ac466a3a_StructIns>());
}
inline jule::Bool _1ad184ba8_Equals_0(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ac43d539_Equals(_self_.data.as<_1ac466a3a_StructIns>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_1(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ac515b61_Str(_self_.safe_ptr<_1ac515831_FnIns>());
}
inline jule::Bool _1ad184ba8_Equals_1(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ac515e6e_Equals(_self_.data.as<_1ac515831_FnIns>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_2(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ac524e39_Str(_self_.safe_ptr<_1ac524a3d_Trait>());
}
inline jule::Bool _1ad184ba8_Equals_2(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ac525247_Equals(_self_.data.as<_1ac524a3d_Trait>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_3(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ac526ee6_Str(_self_.safe_ptr<_1ac526b83_Enum>());
}
inline jule::Bool _1ad184ba8_Equals_3(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ac527304_Equals(_self_.data.as<_1ac526b83_Enum>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_4(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ac5285ad_Str(_self_.safe_ptr<_1ac52827d_TypeEnum>());
}
inline jule::Bool _1ad184ba8_Equals_4(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ac5288bb_Equals(_self_.data.as<_1ac52827d_TypeEnum>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_5(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad185626_Str(_self_.safe_ptr<_1ad18522a_TypeKind>());
}
inline jule::Bool _1ad184ba8_Equals_5(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad185934_Equals(_self_.data.as<_1ad18522a_TypeKind>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_6(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad18a065_Str(_self_.safe_ptr<_1ad189c02_Prim>());
}
inline jule::Bool _1ad184ba8_Equals_6(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad18a373_Equals(_self_.data.as<_1ad189c02_Prim>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_7(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad18d7e9_Str(_self_.safe_ptr<_1ad18d486_Sptr>());
}
inline jule::Bool _1ad184ba8_Equals_7(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad18db07_Equals(_self_.data.as<_1ad18d486_Sptr>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_8(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad18e3ee_Str(_self_.safe_ptr<_1ad18dde3_Slc>());
}
inline jule::Bool _1ad184ba8_Equals_8(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad18e70c_Equals(_self_.data.as<_1ad18dde3_Slc>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_9(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad18ecd4_Str(_self_.safe_ptr<_1ad18e971_Tuple>());
}
inline jule::Bool _1ad184ba8_Equals_9(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad1900e2_Equals(_self_.data.as<_1ad18e971_Tuple>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_10(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad19080c_Str(_self_.safe_ptr<_1ad190499_Map>());
}
inline jule::Bool _1ad184ba8_Equals_10(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad190b1a_Equals(_self_.data.as<_1ad190499_Map>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_11(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad191401_Str(_self_.safe_ptr<_1ad19108d_Arr>());
}
inline jule::Bool _1ad184ba8_Equals_11(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad19170e_Equals(_self_.data.as<_1ad19108d_Arr>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_12(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1ad191d5d_Str(_self_.safe_ptr<_1ad1919ea_Ptr>());
}
inline jule::Bool _1ad184ba8_Equals_12(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1ad19216b_Equals(_self_.data.as<_1ad1919ea_Ptr>(), _5622_other);
}
inline jule::Str _1ad18489a_Str_13(jule::Trait<_1ad184ceb_Kind> _self_) {
	return _1badc1024_Str(_self_.safe_ptr<_1badc0c5a_customType>());
}
inline jule::Bool _1ad184ba8_Equals_13(jule::Trait<_1ad184ceb_Kind> _self_, jule::Ptr<_1ad18522a_TypeKind> _5622_other) {
	return _1badc1332_Equals(_self_.data.as<_1badc0c5a_customType>(), _5622_other);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a3d70_FindPackage_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _930_ident) {
	return _1ad0c7986_FindPackage(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a417d_SelectPackage_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _1332_selector) {
	return _1ad0c7ab8_SelectPackage(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1ad112097_Var> _1ad1a4535_FindVar_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1ad0c7bea_FindVar(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1a48dc_FindTypeAlias_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1ad0c7d2c_FindTypeAlias(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a4c94_FindStruct_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1ad0c7e5e_FindStruct(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1ac512b80_Fn> _1ad1a514b_FindFn_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1ad0c8091_FindFn(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1ac524a3d_Trait> _1ad1a5459_FindTrait_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3328_ident) {
	return _1ad0c81c3_FindTrait(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1ac526b83_Enum> _1ad1a5767_FindEnum_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3727_ident) {
	return _1ad0c8305_FindEnum(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad1a5a75_FindTypeEnum_0(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _4131_ident) {
	return _1ad0c8437_FindTypeEnum(_self_.safe_ptr<_1ad0c7799_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a3d70_FindPackage_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _930_ident) {
	return _1ad0dc638_FindPackage(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a417d_SelectPackage_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _1332_selector) {
	return _1ad0dc946_SelectPackage(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1ad112097_Var> _1ad1a4535_FindVar_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1ad0dcced_FindVar(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1a48dc_FindTypeAlias_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1ad0dd1a5_FindTypeAlias(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a4c94_FindStruct_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1ad0dd55c_FindStruct(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1ac512b80_Fn> _1ad1a514b_FindFn_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1ad0dd914_FindFn(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1ac524a3d_Trait> _1ad1a5459_FindTrait_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3328_ident) {
	return _1ad0ddc22_FindTrait(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1ac526b83_Enum> _1ad1a5767_FindEnum_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3727_ident) {
	return _1ad0de030_FindEnum(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad1a5a75_FindTypeEnum_1(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _4131_ident) {
	return _1ad0de33d_FindTypeEnum(_self_.safe_ptr<_1ad0dc11b_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a3d70_FindPackage_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _930_ident) {
	return _1ad0e054d_FindPackage(_self_.safe_ptr<_1ad0e0075_Package>(), _930_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a417d_SelectPackage_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _1332_selector) {
	return _1ad0e085b_SelectPackage(_self_.safe_ptr<_1ad0e0075_Package>(), _1332_selector);
}
inline jule::Ptr<_1ad112097_Var> _1ad1a4535_FindVar_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1ad0e0c13_FindVar(_self_.safe_ptr<_1ad0e0075_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1a48dc_FindTypeAlias_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1ad0e10ba_FindTypeAlias(_self_.safe_ptr<_1ad0e0075_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a4c94_FindStruct_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1ad0e1472_FindStruct(_self_.safe_ptr<_1ad0e0075_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1ac512b80_Fn> _1ad1a514b_FindFn_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1ad0e1829_FindFn(_self_.safe_ptr<_1ad0e0075_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1ac524a3d_Trait> _1ad1a5459_FindTrait_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3328_ident) {
	return _1ad0e1b37_FindTrait(_self_.safe_ptr<_1ad0e0075_Package>(), _3328_ident);
}
inline jule::Ptr<_1ac526b83_Enum> _1ad1a5767_FindEnum_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3727_ident) {
	return _1ad0e1e45_FindEnum(_self_.safe_ptr<_1ad0e0075_Package>(), _3727_ident);
}
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad1a5a75_FindTypeEnum_2(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _4131_ident) {
	return _1ad0e2253_FindTypeEnum(_self_.safe_ptr<_1ad0e0075_Package>(), _4131_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a3d70_FindPackage_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _930_ident) {
	return _1ad0e5784_FindPackage(_self_.safe_ptr<_1ad0e5267_Sema>(), _930_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a417d_SelectPackage_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _1332_selector) {
	return _1ad0e5a92_SelectPackage(_self_.safe_ptr<_1ad0e5267_Sema>(), _1332_selector);
}
inline jule::Ptr<_1ad112097_Var> _1ad1a4535_FindVar_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1ad0e5e49_FindVar(_self_.safe_ptr<_1ad0e5267_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1a48dc_FindTypeAlias_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1ad0e6301_FindTypeAlias(_self_.safe_ptr<_1ad0e5267_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a4c94_FindStruct_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1ad0e66a8_FindStruct(_self_.safe_ptr<_1ad0e5267_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1ac512b80_Fn> _1ad1a514b_FindFn_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1ad0e6a60_FindFn(_self_.safe_ptr<_1ad0e5267_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1ac524a3d_Trait> _1ad1a5459_FindTrait_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3328_ident) {
	return _1ad0e6d6d_FindTrait(_self_.safe_ptr<_1ad0e5267_Sema>(), _3328_ident);
}
inline jule::Ptr<_1ac526b83_Enum> _1ad1a5767_FindEnum_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3727_ident) {
	return _1ad0e717b_FindEnum(_self_.safe_ptr<_1ad0e5267_Sema>(), _3727_ident);
}
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad1a5a75_FindTypeEnum_3(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _4131_ident) {
	return _1ad0e7489_FindTypeEnum(_self_.safe_ptr<_1ad0e5267_Sema>(), _4131_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a3d70_FindPackage_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _930_ident) {
	return _1ad154947_FindPackage(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad1a417d_SelectPackage_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _1332_selector) {
	return _1ad154c55_SelectPackage(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1ad112097_Var> _1ad1a4535_FindVar_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1ad15510c_FindVar(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ad184537_TypeAlias> _1ad1a48dc_FindTypeAlias_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1ad1554b4_FindTypeAlias(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a4c94_FindStruct_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1ad15586b_FindStruct(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1ac512b80_Fn> _1ad1a514b_FindFn_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1ad155c23_FindFn(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1ac524a3d_Trait> _1ad1a5459_FindTrait_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3328_ident) {
	return _1ad156031_FindTrait(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1ac526b83_Enum> _1ad1a5767_FindEnum_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _3727_ident) {
	return _1ad15633e_FindEnum(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1ac52827d_TypeEnum> _1ad1a5a75_FindTypeEnum_4(jule::Trait<_1ad1a5bb8_Lookup> _self_, jule::Str _4131_ident) {
	return _1ad15664c_FindTypeEnum(_self_.safe_ptr<_1ad15442a_SymbolTable>(), _4131_ident);
}
inline jule::Str _1badcab11_Name_0(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6c92ca_Name(_self_.safe_ptr<_1bd6c9929_Flag>());
}
inline jule::I32 _1badcac43_Short_0(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6ca078_Short(_self_.safe_ptr<_1bd6c9929_Flag>());
}
inline jule::Str _1badcad75_What_0(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6c9d14_What(_self_.safe_ptr<_1bd6c9929_Flag>());
}
inline void _1badcb00c_Reset_0(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	_1bd6c9e46_Reset(_self_.safe_ptr<_1bd6c9929_Flag>());
}
inline jule::Str _1badcab11_Name_1(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6cd136_Name(_self_.safe_ptr<_1bd6cd5dc_Flag>());
}
inline jule::I32 _1badcac43_Short_1(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6cdb1a_Short(_self_.safe_ptr<_1bd6cd5dc_Flag>());
}
inline jule::Str _1badcad75_What_1(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6cd8a6_What(_self_.safe_ptr<_1bd6cd5dc_Flag>());
}
inline void _1badcb00c_Reset_1(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	_1bd6cd9d8_Reset(_self_.safe_ptr<_1bd6cd5dc_Flag>());
}
inline jule::Str _1badcab11_Name_2(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d1b1d_Name(_self_.safe_ptr<_1bd6d20c4_Flag>());
}
inline jule::I32 _1badcac43_Short_2(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d2602_Short(_self_.safe_ptr<_1bd6d20c4_Flag>());
}
inline jule::Str _1badcad75_What_2(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d238d_What(_self_.safe_ptr<_1bd6d20c4_Flag>());
}
inline void _1badcb00c_Reset_2(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	_1bd6d24c0_Reset(_self_.safe_ptr<_1bd6d20c4_Flag>());
}
inline jule::Str _1badcab11_Name_3(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d5649_Name(_self_.safe_ptr<_1bd6d5b00_Flag>());
}
inline jule::I32 _1badcac43_Short_3(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d612d_Short(_self_.safe_ptr<_1bd6d5b00_Flag>());
}
inline jule::Str _1badcad75_What_3(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d5db9_What(_self_.safe_ptr<_1bd6d5b00_Flag>());
}
inline void _1badcb00c_Reset_3(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	_1bd6d5eeb_Reset(_self_.safe_ptr<_1bd6d5b00_Flag>());
}
inline jule::Str _1badcab11_Name_4(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d9131_Name(_self_.safe_ptr<_1bd6d95d7_Flag>());
}
inline jule::I32 _1badcac43_Short_4(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d9b15_Short(_self_.safe_ptr<_1bd6d95d7_Flag>());
}
inline jule::Str _1badcad75_What_4(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	return _1bd6d98a1_What(_self_.safe_ptr<_1bd6d95d7_Flag>());
}
inline void _1badcb00c_Reset_4(jule::Trait<_1bae0a877_CommonFlag> _self_) {
	_1bd6d99d3_Reset(_self_.safe_ptr<_1bd6d95d7_Flag>());
}


static _1ad0d9888_ImporterMptrData _1ad0d9888_Importer_mptr_data[] = {
	{
		._1ad0d87aa_SetModPath=_1ad0d87aa_SetModPath_0,
		._1ad0d89ec_GetModPath=_1ad0d89ec_GetModPath_0,
		._1ad0d8d0a_ModById=_1ad0d8d0a_ModById_0,
		._1ad0d9118_GetImport=_1ad0d9118_GetImport_0,
		._1ad0d94c0_ImportPackage=_1ad0d94c0_ImportPackage_0,
		._1ad0d9745_Imported=_1ad0d9745_Imported_0,
	},
};
static _1ad184ceb_KindMptrData _1ad184ceb_Kind_mptr_data[] = {
	{
		._1ad18489a_Str=_1ad18489a_Str_0,
		._1ad184ba8_Equals=_1ad184ba8_Equals_0,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_1,
		._1ad184ba8_Equals=_1ad184ba8_Equals_1,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_2,
		._1ad184ba8_Equals=_1ad184ba8_Equals_2,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_3,
		._1ad184ba8_Equals=_1ad184ba8_Equals_3,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_4,
		._1ad184ba8_Equals=_1ad184ba8_Equals_4,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_5,
		._1ad184ba8_Equals=_1ad184ba8_Equals_5,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_6,
		._1ad184ba8_Equals=_1ad184ba8_Equals_6,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_7,
		._1ad184ba8_Equals=_1ad184ba8_Equals_7,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_8,
		._1ad184ba8_Equals=_1ad184ba8_Equals_8,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_9,
		._1ad184ba8_Equals=_1ad184ba8_Equals_9,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_10,
		._1ad184ba8_Equals=_1ad184ba8_Equals_10,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_11,
		._1ad184ba8_Equals=_1ad184ba8_Equals_11,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_12,
		._1ad184ba8_Equals=_1ad184ba8_Equals_12,
	},
	{
		._1ad18489a_Str=_1ad18489a_Str_13,
		._1ad184ba8_Equals=_1ad184ba8_Equals_13,
	},
};
static _1ad1a5bb8_LookupMptrData _1ad1a5bb8_Lookup_mptr_data[] = {
	{
		._1ad1a3d70_FindPackage=_1ad1a3d70_FindPackage_0,
		._1ad1a417d_SelectPackage=_1ad1a417d_SelectPackage_0,
		._1ad1a4535_FindVar=_1ad1a4535_FindVar_0,
		._1ad1a48dc_FindTypeAlias=_1ad1a48dc_FindTypeAlias_0,
		._1ad1a4c94_FindStruct=_1ad1a4c94_FindStruct_0,
		._1ad1a514b_FindFn=_1ad1a514b_FindFn_0,
		._1ad1a5459_FindTrait=_1ad1a5459_FindTrait_0,
		._1ad1a5767_FindEnum=_1ad1a5767_FindEnum_0,
		._1ad1a5a75_FindTypeEnum=_1ad1a5a75_FindTypeEnum_0,
	},
	{
		._1ad1a3d70_FindPackage=_1ad1a3d70_FindPackage_1,
		._1ad1a417d_SelectPackage=_1ad1a417d_SelectPackage_1,
		._1ad1a4535_FindVar=_1ad1a4535_FindVar_1,
		._1ad1a48dc_FindTypeAlias=_1ad1a48dc_FindTypeAlias_1,
		._1ad1a4c94_FindStruct=_1ad1a4c94_FindStruct_1,
		._1ad1a514b_FindFn=_1ad1a514b_FindFn_1,
		._1ad1a5459_FindTrait=_1ad1a5459_FindTrait_1,
		._1ad1a5767_FindEnum=_1ad1a5767_FindEnum_1,
		._1ad1a5a75_FindTypeEnum=_1ad1a5a75_FindTypeEnum_1,
	},
	{
		._1ad1a3d70_FindPackage=_1ad1a3d70_FindPackage_2,
		._1ad1a417d_SelectPackage=_1ad1a417d_SelectPackage_2,
		._1ad1a4535_FindVar=_1ad1a4535_FindVar_2,
		._1ad1a48dc_FindTypeAlias=_1ad1a48dc_FindTypeAlias_2,
		._1ad1a4c94_FindStruct=_1ad1a4c94_FindStruct_2,
		._1ad1a514b_FindFn=_1ad1a514b_FindFn_2,
		._1ad1a5459_FindTrait=_1ad1a5459_FindTrait_2,
		._1ad1a5767_FindEnum=_1ad1a5767_FindEnum_2,
		._1ad1a5a75_FindTypeEnum=_1ad1a5a75_FindTypeEnum_2,
	},
	{
		._1ad1a3d70_FindPackage=_1ad1a3d70_FindPackage_3,
		._1ad1a417d_SelectPackage=_1ad1a417d_SelectPackage_3,
		._1ad1a4535_FindVar=_1ad1a4535_FindVar_3,
		._1ad1a48dc_FindTypeAlias=_1ad1a48dc_FindTypeAlias_3,
		._1ad1a4c94_FindStruct=_1ad1a4c94_FindStruct_3,
		._1ad1a514b_FindFn=_1ad1a514b_FindFn_3,
		._1ad1a5459_FindTrait=_1ad1a5459_FindTrait_3,
		._1ad1a5767_FindEnum=_1ad1a5767_FindEnum_3,
		._1ad1a5a75_FindTypeEnum=_1ad1a5a75_FindTypeEnum_3,
	},
	{
		._1ad1a3d70_FindPackage=_1ad1a3d70_FindPackage_4,
		._1ad1a417d_SelectPackage=_1ad1a417d_SelectPackage_4,
		._1ad1a4535_FindVar=_1ad1a4535_FindVar_4,
		._1ad1a48dc_FindTypeAlias=_1ad1a48dc_FindTypeAlias_4,
		._1ad1a4c94_FindStruct=_1ad1a4c94_FindStruct_4,
		._1ad1a514b_FindFn=_1ad1a514b_FindFn_4,
		._1ad1a5459_FindTrait=_1ad1a5459_FindTrait_4,
		._1ad1a5767_FindEnum=_1ad1a5767_FindEnum_4,
		._1ad1a5a75_FindTypeEnum=_1ad1a5a75_FindTypeEnum_4,
	},
};
static _1bae0a877_CommonFlagMptrData _1bae0a877_CommonFlag_mptr_data[] = {
	{
		._1badcab11_Name=_1badcab11_Name_0,
		._1badcac43_Short=_1badcac43_Short_0,
		._1badcad75_What=_1badcad75_What_0,
		._1badcb00c_Reset=_1badcb00c_Reset_0,
	},
	{
		._1badcab11_Name=_1badcab11_Name_1,
		._1badcac43_Short=_1badcac43_Short_1,
		._1badcad75_What=_1badcad75_What_1,
		._1badcb00c_Reset=_1badcb00c_Reset_1,
	},
	{
		._1badcab11_Name=_1badcab11_Name_2,
		._1badcac43_Short=_1badcac43_Short_2,
		._1badcad75_What=_1badcad75_What_2,
		._1badcb00c_Reset=_1badcb00c_Reset_2,
	},
	{
		._1badcab11_Name=_1badcab11_Name_3,
		._1badcac43_Short=_1badcac43_Short_3,
		._1badcad75_What=_1badcad75_What_3,
		._1badcb00c_Reset=_1badcb00c_Reset_3,
	},
	{
		._1badcab11_Name=_1badcab11_Name_4,
		._1badcac43_Short=_1badcac43_Short_4,
		._1badcad75_What=_1badcad75_What_4,
		._1badcb00c_Reset=_1badcb00c_Reset_4,
	},
};


jule::Str _1badd4b4d_OutDir = jule::Str("dist", 4);
jule::Str _1badd6644_OutName = jule::Str("ir.cpp", 6);
jule::Str _1badd729e_Out = jule::Str();
jule::Str _1da014b3d_Compiler = jule::Str();
jule::Str _1da01e780_CompilerPath = jule::Str();
jule::Str _1da01e9e4_CppStd = jule::Str("cpp17", 5);
jule::Bool _1da01ec58_Shadowing = false;
jule::Bool _1da020033_Transpilation = false;
jule::Bool _1da020341_Test = false;
jule::Bool _1da02064e_RC = true;
jule::Bool _1da020a6c_Safety = true;
jule::Bool _1da020d7a_Production = false;
jule::Ptr<_1a91cdb29_RangeTable> _1a915eb87__L = jule::new_ptr<_1a91cdb29_RangeTable>(_1a91cdb29_RangeTable{._field_R16=jule::Slice<_1a91cd233_Range16>::make({_1a91cd233_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1a91cd233_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1a91cd233_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1a91cd233_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1a91cd233_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1a91cd233_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1a91cd233_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1a91cd233_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1a91cd233_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1a91cd233_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1a91cd233_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1a91cd233_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1a91cd233_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1a91cd233_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1a91cd233_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1a91cd233_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1a91cd233_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1a91cd233_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1a91cd233_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1a91cd233_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1a91cd233_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1a91cd233_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1a91cd233_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1a91cd233_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1a91cd233_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1a91cd233_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1a91cd233_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1a91cd233_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1a91cd233_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1a91cd233_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a91cd233_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1a91cd233_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1a91cd233_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1a91cd233_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1a91cd233_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1a91cd233_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1a91cd233_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a91cd6a6_Range32>::make({_1a91cd6a6_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1a91cd6a6_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1a91cd6a6_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1a91cd6a6_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1a91cd6a6_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1a91cd6a6_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1a91cd6a6_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1a91cd6a6_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1a91cd6a6_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1a91cd6a6_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1a91cd6a6_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1a91cd6a6_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1a91cd6a6_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1a91cd6a6_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1a91cd6a6_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1a91cd6a6_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1a91cd6a6_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1a91cd6a6_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1a91cd6a6_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1a91cd6a6_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a91cd6a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1a91cd6a6_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1a91cd6a6_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1a91cd6a6_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1a91cdb29_RangeTable> _1a9160cdc__LU = jule::new_ptr<_1a91cdb29_RangeTable>(_1a91cdb29_RangeTable{._field_R16=jule::Slice<_1a91cd233_Range16>::make({_1a91cd233_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1a91cd233_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a91cd233_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a91cd233_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a91cd233_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1a91cd233_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1a91cd233_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1a91cd233_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1a91cd233_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1a91cd233_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1a91cd233_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1a91cd233_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a91cd6a6_Range32>::make({_1a91cd6a6_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1a91cd6a6_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a91cd6a6_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a91cd6a6_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a91cd6a6_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1a91cd6a6_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1a9263b26_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1a9264ece_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1a92652ba_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1a9293eec_PathStdlib = jule::Str();
jule::Str _1a9294b57_PathExec = jule::Str();
jule::Str _1a9295a59_PathWd = jule::Str();
jule::Str _1a92ae38b_PathApi = jule::Str();
jule::Array<jule::I32,5> _1a94eb089_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1a94eb2ed_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1a94eb63e_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1a95946e8_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1a9594a39_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1a95a2519_kindPair,46> _1a95a299d_keywords = jule::Array<_1a95a2519_kindPair,46>({_1a95a2519_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_1a95a2519_kindPair,39> _1a95a2d33_basicOps = jule::Array<_1a95a2519_kindPair,39>({_1a95a2519_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1a95a2519_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1ad07e6eb__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1ad07ed4a__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1acbbc9cc_floatInfo _1aca1a1cb_f32info = _1acbbc9cc_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1acbbc9cc_floatInfo _1aca20665_f64info = _1acbbc9cc_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1acaaa568_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1acb02390_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1acb0d81e_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1acb2a3eb_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1acbbceb6_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ad0c0671_leftCheat> _1acbbea01_leftCheats = jule::Slice<_1ad0c0671_leftCheat>::make({_1ad0c0671_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ad0c0671_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1ad0c0671_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1ad0c0671_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1ad0c0671_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1ad0c0671_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1ad0c0671_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1ad0c0671_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1ad0c0671_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1ad0c0671_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1ad0c0671_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1ad0c0671_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1ad0c0671_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1ad0c0671_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1ad0c0671_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1ad0c0671_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1ad0c0671_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1ad0c0671_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1ad0c0671_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1ad0c0671_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1ad0c0671_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1ad0c0671_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1ad0c0671_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1ad0c0671_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1ad0c0671_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1ad0c0671_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1ad0c0671_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1ad0c0671_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1ad0c0671_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1ad0c0671_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1ad0c0671_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1ad0c0671_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1ad0c0671_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1ad0c0671_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1ad0c0671_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1ad0c0671_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1ad0c0671_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1ad0c0671_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1ad0c0671_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1ad0c0671_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1ad0c0671_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1ad0c0671_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1ad0c0671_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1ad0c0671_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1ad0c0671_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1ad0c0671_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1ad0c0671_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1ad0c0671_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1ad0c0671_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1ad0c0671_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1ad0c0671_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1ad0c0671_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1ad0c0671_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1ad0c0671_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1ad0c0671_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1ad0c0671_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1ad0c0671_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1ad0c0671_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1ad0c0671_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1ad0c0671_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1ad0c0671_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1ac60b570_BitSize = 0LL;
jule::Str _1ac60ba9d_SysInt = jule::Str();
jule::Str _1ac651175_SysUint = jule::Str();
jule::Slice<jule::Str> _1ac541719_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1da02a901_Copy = false;
jule::Bool _1c16a8dab_Deadcode = false;
jule::Bool _1c16ba692_Append = false;
jule::Bool _1c16baa6b_Math = false;
jule::Bool _1aa405e1b_Access = false;
jule::Bool _1aa408506_Inline = false;
jule::Bool _1aa41859e_Ptr = false;
jule::Bool _1aa436138_Cond = false;
jule::Bool _1ad930db0_exprEnabled = false;
jule::Bool _1ad932015_scopeEnabled = false;
jule::Array<jule::U64,12> _1badb391d_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a9293408_Arch = jule::Str("amd64", 5);
jule::Ptr<_1a91cdb29_RangeTable> _1a916e944_Upper = _1a9160cdc__LU;
jule::Uintptr _1db9cb0a3_STDOUT = _1db9dcee9_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _1db9c59c6_STDERR = _1db9dcee9_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<_1dbac6137_acceptRange,16> _1dbac649a_acceptRanges = jule::Array<_1dbac6137_acceptRange,16>({_1dbac6137_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1dbac6137_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1dbac6137_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1dbac6137_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1dbac6137_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1a925d4d3_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Uintptr _1db9c7566_STDIN = _1db9dcee9_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Ptr<_1a91cdb29_RangeTable> _1a91678a4_Letter = _1a915eb87__L;
jule::Str _1a92aeb72_Os = jule::Str("windows", 7);
jule::Array<jule::U8,256> _1dbac5ab5_first = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1a91c6e1e__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _1dbac6137_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a91cd233_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a91cd6a6_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a91cdb29_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a91d3cb6_index(_1a91d3ac9_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1a91d3de8_append(_1a91d3ac9_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1a91d402a_string(_1a91d3ac9_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a91d3ac9_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d9e50172_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>> static__1a91d4c40_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d9e50172_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16Path = _1db9c64dd_Utf16FromStr(_1520_path);;
	_WDIR* _1717_dir = _1db9debdd_Wopendir((&(_1613_utf16Path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>>(_1d9e3591b_getLastFsError());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1db9dee85_Wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1bb23d1d7;
			};
			jule::Str _2617_name = _1db9c7258_U16PtrToStr(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_1dba014a2_Status> _2721_stat = ({
				auto except = static__1a91d52b2_Of(_1a91d4503_Join(jule::Slice<jule::Str>::make({_1520_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>>(except.error);
				} jule::Ptr<_1dba014a2_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_1d9e50172_DirEntry>(_1d9e50172_DirEntry{._field_Name=_2617_name, ._field_Stat=_2721_stat}));;
		}
	_iter_next_1bb23d1d7:;
	}
	_iter_end_1bb23d1d7:;;
	_1db9e022c_Wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__1a91d4d72_Create(jule::Str _4022_path) {
	jule::Slice<jule::U16> _4513_utf16Path = _1db9c64dd_Utf16FromStr(_4022_path);;
	if ((!(_1db9de69e_CreateDirectory((&(_4513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1d9e3591b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a91d4ea4_Remove(jule::Str _5422_path) {
	jule::Slice<jule::U16> _5513_utf16Path = _1db9c64dd_Utf16FromStr(_5422_path);;
	if ((!(_1db9de946_RemoveDirectory((&(_5513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1d9e3591b_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d9e51daa_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dba012b5_File> static__1d9e38017_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_1dba012b5_File>(_1dba012b5_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_1dba012b5_File>> static__1d9e387ba_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_1dba012b5_File>>(jule::Any(),({
		auto except = static__1dbb2770a_Open(_5522_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1dba012b5_File>>(except.error);
		} jule::Ptr<_1dba012b5_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d9e39348_Read(jule::Str _6720_path) {
	jule::Ptr<_1dba014a2_Status> _6813_s = ({
		auto except = static__1a91d52b2_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dba014a2_Status>();});
	});;
	if ((!(_1d9e4022d_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1dba012b5_File> _7817_f = ({
		auto except = static__1dbb2770a_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dba012b5_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1d9e3bdd9_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _1dbb28134_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1d9e39d2c_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_1dba012b5_File> _9217_f = ({
		auto except = static__1dbb2770a_Open(_9121_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1dba012b5_File>();});
	});;
	({
		auto except = _1dbb27d26_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d9e3bdd9_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d9e3b38e_Seek(_1dba012b5_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _1db9e3e78_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d9e3591b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1d9e3bdd9_Close(_1dba012b5_File* _self_) {
	if ((_1db9e46d7_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1d9e3591b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_1dba012b5_File>> static__1dbb2770a_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _1db9c64dd_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _1db9dd879_Wopen((&(_2213_utf16Path[0LL])),static_cast<jule::I64>(_2131_flag),_2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dba012b5_File>>(_1d9e3591b_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_1dba012b5_File>>(jule::Any(),static__1d9e38017_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__1dbb27919_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _1db9c64dd_Utf16FromStr(_3422_path);;
	if ((!(_1db9de407_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_1d9e3591b_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1dbb27d26_Write(_1dba012b5_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 _4941_n = jule::I64();
	if ((_4924_buff.len() == 0LL)) {
		_4941_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
	};
	if (_1dbb28486_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _1db9c64dd_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _1db9e15b3_WriteConsole((*_self_)._field_handle,(&(_5517_utf16Buff[0LL])),static_cast<jule::I64>(_5517_utf16Buff.len()),_4941_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_1d9e3591b_getLastFsError());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
	};
	_4941_n=static_cast<jule::I64>(_1db9e4ac2_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4924_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((_4941_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d9e3591b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4941_n);
}



inline jule::Exceptional<jule::I64> _1dbb28134_Read(_1dba012b5_File* _self_, jule::Slice<jule::U8> _8127_buff) {
	jule::I64 _8144_n = jule::I64();
	if ((_8127_buff.len() == 0LL)) {
		_8144_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
	};
	if (_1dbb28486_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8721_codepage = jule::Slice<jule::U16>::alloc(_8127_buff.len());;
		jule::Bool _8817_ok = _1db9e1ae1_ReadConsole((*_self_)._field_handle,(&(_8721_codepage[0LL])),static_cast<jule::I64>(_8127_buff.len()),_8144_n,nullptr);;
		if ((!(_8817_ok))) {
			return jule::Exceptional<jule::I64>(_1d9e3591b_getLastFsError());
		};
		jule::Slice<jule::I32> _9317_runes = _1db9db5be_Decode(_8721_codepage.slice(0LL,_8144_n));;
		_8144_n=0LL;
		{
			auto &expr = _9317_runes;
			auto it = expr.begin();
			_iter_begin_1bb2573ee:;
			if (it != expr.end()) {
				jule::I32 &_9520_r = *it;
				{
					jule::I64 _9621_size = _1dbac7820_RuneLen(_9520_r);;
					if (((_8144_n + _9621_size) > _8127_buff.len())) {
						goto _iter_end_1bb2573ee;
					};
					_1dbac7c3d_EncodeRune(_8127_buff.slice(_8144_n),_9520_r);
					_8144_n+=_9621_size;
				}
				_iter_next_1bb2573ee:;
				++it;
				goto _iter_begin_1bb2573ee;
			}
			_iter_end_1bb2573ee:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
	};
	_8144_n=static_cast<jule::I64>(_1db9e4363_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8127_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8127_buff.len()))));
	if ((_8144_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1d9e3591b_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8144_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1dba012b5_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d9e3de63_IsDir(_1dba014a2_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1d9e4022d_IsReg(_1dba014a2_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_1dba014a2_Status>> static__1a91d52b2_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1dba014a2_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _1db9c64dd_Utf16FromStr(_1218_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _1db9dd48e_Wstat((&(_1613_utf16Path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dba014a2_Status>>(jule::Any(),jule::new_ptr<_1dba014a2_Status>(_1dba014a2_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1dba014a2_Status>>(_1d9e3591b_getLastFsError());
}







std::ostream &operator<<(std::ostream &_Stream, _1dba014a2_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a92b103b_Cmd> static__1a92b146a_New(jule::Str _2019_path) {
	return jule::new_ptr<_1a92b103b_Cmd>(_1a92b103b_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _1a92b16ce_Spawn(_1a92b103b_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1a92c1205_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1a92c1205_spawn(_1a92b103b_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_Env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_1a92c091e_execvp((*_self_)._field_path,(*_self_)._field_Args));
	} else {
		_5217_pid=static_cast<jule::I64>(_1a92c0d09_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_1a92b07aa_getLastProcessError());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1a92b07aa_getLastProcessError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1a92b103b_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a92722b6_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a959a4ce_Prec(_1a959a127_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1bb7433bd:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1bb743434:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1bb742cc4:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1bb742d3a:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1bb742da1:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1bb742a82:;
			{
				return 0LLU;
			}
		}
		_match_end_1bb742a2c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a959a127_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a95a08be_IsOk(_1a95a04b2_File* _self_) {
	({
		auto except = static__1a91d52b2_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1dba014a2_Status>();});
	});
	return true;
}



inline void _1a95a0b44_Fill(_1a95a04b2_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _1a95a0da8_Dir(_1a95a04b2_File* _self_) {
	return _1a91d49cb_Dir((*_self_)._field_Path);
}



inline jule::Str _1a95a111c_Name(_1a95a04b2_File* _self_) {
	return _1a91d4899_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1a95a1381_Addr(_1a95a04b2_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1a95a168e_GetRow(_1a95a04b2_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1bb74804e;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1bb74804e:;
	}
	_iter_end_1bb74804e:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1a95a04b2_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a95a2519_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a95a86a7_pushErr(_1a95a8113_lex* _self_, jule::Str _45726_fmt, jule::Slice<jule::Any> _45739_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a95a331c_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45726_fmt,jule::Any(_45739_args)));;
}



inline void _1a95a89c6_pushErrTok(_1a95a8113_lex* _self_, jule::Ptr<_1a959a127_Token>& _46230_token, jule::Str _46245_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a95a331c_makeErr(_46230_token.get()._field_Row,_46230_token.get()._field_Column,(*_self_)._field_file,_46245_fmt,jule::Slice<jule::Any>()));;
}



inline void _1a95a8ba2_lex(_1a95a8113_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1a95aaba4_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1a959a127_Token> _47221_token = _1a95ac029_token(&(*_self_));;
			if ((_47221_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47221_token);;
			};
		}
	_iter_next_1bb77ec9a:;
	}
	_iter_end_1bb77ec9a:;;
}



inline jule::Str _1a95a8eb0_id(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _48122_ln) {
	if ((_48122_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48514_r;;
	jule::I64 _48521_i;;
	std::tie(_48514_r,_48521_i) = _1dbac6c1a_DecodeRune(_48122_ln);
	if (((_48514_r != '_') && (!(_1a959d603_IsLetter(_48514_r))))) {
		return jule::Str();
	};
	while ((_48521_i < _48122_ln.len())) {
		{
			jule::I32 _49118_pr;;
			jule::I64 _49122_n;;
			std::tie(_49118_pr,_49122_n) = _1dbac6c1a_DecodeRune(_48122_ln.slice(_48521_i));
			if ((((_49118_pr != '_') && (!(_1a959db42_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49118_pr)))))) && (!(_1a959d603_IsLetter(_49118_pr))))) {
				(*_self_)._field_pos+=_48521_i;
				return static_cast<jule::Str>(_48122_ln.slice(0LL,_48521_i));
			};
			_48521_i+=_49122_n;
		}
	_iter_next_1bb782ebd:;
	}
	_iter_end_1bb782ebd:;;
	(*_self_)._field_pos+=_48122_ln.len();
	return static_cast<jule::Str>(_48122_ln);
}



inline jule::Slice<jule::U8> _1a95a9224_resume(_1a95a8113_lex* _self_) {
	jule::I64 _50617_i = (*_self_)._field_pos;;
	for (; (_50617_i < (*_self_)._field_file.get()._field_Data.len()); (_50617_i)++) {
		{
			jule::I32 _50817_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50617_i]);;
			if (_1a959d1a2_IsSpace(_50817_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bb787b82:;
						{
							_1a95aaba4_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1bb787be8:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1bb785aa3:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1bb7876dc:;
				};
				goto _iter_next_1bb785d5b;
			};
			jule::I64 _52321_j = _50617_i;;
			for (; (_52321_j < (*_self_)._field_file.get()._field_Data.len()); (_52321_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52321_j] == '\n')) {
						goto _iter_end_1bb786aa4;
					};
				}
			_iter_next_1bb786aa4:;
			}
			_iter_end_1bb786aa4:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50617_i,_52321_j);
		}
	_iter_next_1bb785d5b:;
	}
	_iter_end_1bb785d5b:;;
	return nullptr;
}



inline void _1a95a9499_lexLineComment(_1a95a8113_lex* _self_, jule::Ptr<_1a959a127_Token>& _53438_token) {
	jule::I64 _53513_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53817_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53817_r == '\n') || (_53817_r == '\r'))) {
				goto _iter_end_1bb78a5d0;
			};
		}
	_iter_next_1bb78a5d0:;
	}
	_iter_end_1bb78a5d0:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53438_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53438_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53513_start,(*_self_)._field_pos));
	};
}



inline void _1a95a971e_lexRangeComment(_1a95a8113_lex* _self_, jule::Ptr<_1a959a127_Token>& _54939_token) {
	jule::I64 _55013_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55317_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55317_r == '\r')) {
				goto _iter_next_1bb78d98a;
			};
			if ((_55317_r == '\n')) {
				_1a95aaba4_newLine(&(*_self_));
				goto _iter_next_1bb78d98a;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55317_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_54939_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_54939_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55013_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bb78d98a:;
	}
	_iter_end_1bb78d98a:;;
	_1a95a86a7_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1a95a9a2c_num(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _57723_txt) {
	jule::Str _57738_lit = jule::Str();
	if ((_57723_txt[0LL] == '_')) {
		_57738_lit = jule::Str();
		return _57738_lit;
	};
	_57738_lit=_1a95a6b39_hexNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1a95a6892_octalNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1a95a52db_binaryNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1a95a5044_commonNum(_57723_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57738_lit.len();
	return _57738_lit;
}



inline jule::Str _1a95a9d3a_escapeSeq(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _59929_txt) {
	jule::Str _60017_seq = jule::Str();;
	if ((_59929_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _59929_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bb798a61:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_59929_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bb798764:;
			{
				_60017_seq=_1a95a7222_bigUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bb7987ca:;
			{
				_60017_seq=_1a95a74db_littleUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bb798841:;
			{
				_60017_seq=_1a95a7695_hexByteEscape(_59929_txt);
			}
		}
		else {
			_case_begin_1bb797ee4:;
			{
				_60017_seq=_1a95a792b_byteEscape(_59929_txt);
			}
		}
		_match_end_1bb798621:;
	};
	_julec_label_end:;
	if (_60017_seq.empty()) {
		((*_self_)._field_pos)++;
		_1a95a86a7_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60017_seq.len();
	return _60017_seq;
}



inline jule::Str _1a95aa1e2_getRune(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _62927_txt, jule::Bool _62940_raw) {
	if (((!(_62940_raw)) && (_62927_txt[0LL] == '\\'))) {
		return _1a95a9d3a_escapeSeq(&(*_self_), _62927_txt);
	};
	jule::I32 _63314_r;;
	jule::I64 _63317_n;;
	std::tie(_63314_r,_63317_n) = _1dbac6c1a_DecodeRune(_62927_txt);
	(*_self_)._field_pos+=_63317_n;
	return static_cast<jule::Str>(_63314_r);
}



inline jule::Str _1a95aa500_lexRune(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _63827_txt) {
	jule::Str _63917_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64117_n = 0LL;;
	jule::I64 _64217_i = 1LL;;
	for (; (_64217_i < _63827_txt.len()); (_64217_i)++) {
		{
			if ((_63827_txt[_64217_i] == '\r')) {
				goto _iter_next_1bb7a098b;
			};
			if ((_63827_txt[_64217_i] == '\n')) {
				_1a95a86a7_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1a95aaba4_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65417_part = _63827_txt.slice(_64217_i);;
			jule::Str _65517_r = _1a95aa1e2_getRune(&(*_self_), _65417_part,false);;
			_63917_run+=_65517_r;
			(*_self_)._field_column+=_1dbac890e_RuneCountStr(_65517_r);
			if ((_65517_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1bb7a098b;
			};
			if ((_65517_r.len() > 1LL)) {
				_64217_i+=(_65517_r.len() - 1LL);
			};
			(_64117_n)++;
		}
	_iter_next_1bb7a098b:;
	}
	_iter_end_1bb7a098b:;;
	if ((_64117_n == 0LL)) {
		_1a95a86a7_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64117_n > 1LL)) {
		_1a95a86a7_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _63917_run;
}



inline jule::Str _1a95aa764_lexStr(_1a95a8113_lex* _self_) {
	jule::Str _67817_s = jule::Str();;
	jule::U8 _67913_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68113_raw = (_67913_mark == '`');;
	_67817_s+=static_cast<jule::Str>(_67913_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68617_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68617_ch == '\r')) {
				goto _iter_next_1bb7a69c5;
			};
			if ((_68617_ch == '\n')) {
				_1a95aaba4_newLine(&(*_self_));
				if ((!(_68113_raw))) {
					_1a95a86a7_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69821_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _69917_r = _1a95aa1e2_getRune(&(*_self_), _69821_part,_68113_raw);;
			_67817_s+=_69917_r;
			(*_self_)._field_column+=_1dbac890e_RuneCountStr(_69917_r);
			if ((_68617_ch == _67913_mark)) {
				goto _iter_end_1bb7a69c5;
			};
		}
	_iter_next_1bb7a69c5:;
	}
	_iter_end_1bb7a69c5:;;
	return _67817_s;
}



inline jule::Bool _1a95aa9c8_isFirstTokenOfLine(_1a95a8113_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1a95aaba4_newLine(_1a95a8113_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1a95ab19e_isOp(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _71924_txt, jule::Str _71937_kind, jule::U64 _71948_id, jule::Ptr<_1a959a127_Token>& _71966_t) {
	if ((!(_1a95a36a2_bytesHasPrefix(_71924_txt,_71937_kind)))) {
		return false;
	};
	_71966_t.get()._field_Kind=_71937_kind;
	_71966_t.get()._field_Id=_71948_id;
	(*_self_)._field_pos+=_71937_kind.len();
	return true;
}



inline jule::Bool _1a95ab556_lexBasicOps(_1a95a8113_lex* _self_, jule::Slice<jule::U8> _72930_txt, jule::Ptr<_1a959a127_Token>& _72948_tok) {
	{
		auto &expr = _1a95a2d33_basicOps;
		auto it = expr.begin();
		_iter_begin_1bb7ad0b4:;
		if (it != expr.end()) {
			_1a95a2519_kindPair &_73016_pair = *it;
			{
				if (_1a95ab19e_isOp(&(*_self_), _72930_txt,_73016_pair._field_kind,_73016_pair._field_id,_72948_tok)) {
					return true;
				};
			}
			_iter_next_1bb7ad0b4:;
			++it;
			goto _iter_begin_1bb7ad0b4;
		}
		_iter_end_1bb7ad0b4:;
	};
	return false;
}



inline jule::Bool _1a95ab90d_lexId(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _73925_txt, jule::Ptr<_1a959a127_Token>& _73943_t) {
	jule::Str _74013_lex = _1a95a8eb0_id(&(*_self_), _73925_txt);;
	if (_74013_lex.empty()) {
		return false;
	};
	_73943_t.get()._field_Kind=_74013_lex;
	_73943_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1a95abcb5_lexNum(_1a95a8113_lex* _self_, jule::Slice<jule::U8>& _74926_txt, jule::Ptr<_1a959a127_Token>& _74944_t) {
	jule::Str _75013_lex = _1a95a9a2c_num(&(*_self_), _74926_txt);;
	if (_75013_lex.empty()) {
		return false;
	};
	_74944_t.get()._field_Kind=_75013_lex;
	_74944_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1a959a127_Token> _1a95ac029_token(_1a95a8113_lex* _self_) {
	jule::Ptr<_1a959a127_Token> _76117_t = jule::new_ptr<_1a959a127_Token>(_1a959a127_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76613_txt = _1a95a9224_resume(&(*_self_));;
	if ((_76613_txt == nullptr)) {
		return _76117_t;
	};
	_76117_t.get()._field_Column=(*_self_)._field_column;
	_76117_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1a95abcb5_lexNum(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1bb7b441c:;
			{
				goto _match_end_1bb7b2e76;
			}
		}
		else if ((_76613_txt[0LL] == '\'')) {
			_case_begin_1bb7b4483:;
			{
				_76117_t.get()._field_Kind=_1a95aa500_lexRune(&(*_self_), _76613_txt);
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (((_76613_txt[0LL] == '\"') || (_76613_txt[0LL] == '`'))) {
			_case_begin_1bb7b5088:;
			{
				_76117_t.get()._field_Kind=_1a95aa764_lexStr(&(*_self_));
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (_1a95a36a2_bytesHasPrefix(_76613_txt,jule::Str("//", 2))) {
			_case_begin_1bb7b50ee:;
			{
				_1a95a9499_lexLineComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1a95a36a2_bytesHasPrefix(_76613_txt,jule::Str("/*", 2))) {
			_case_begin_1bb7b5165:;
			{
				_1a95a971e_lexRangeComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab19e_isOp(&(*_self_), _76613_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1a95ab556_lexBasicOps(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1bb7b388e:;
			{
				goto _match_end_1bb7b2e76;
			}
		}
		else if (_1a95ab90d_lexId(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1bb7b3905:;
			{
				{
					auto &expr = _1a95a299d_keywords;
					auto it = expr.begin();
					_iter_begin_1bb7baa83:;
					if (it != expr.end()) {
						_1a95a2519_kindPair &_80420_pair = *it;
						{
							if ((_80420_pair._field_kind == _76117_t.get()._field_Kind)) {
								_76117_t.get()._field_Id=_80420_pair._field_id;
								goto _iter_end_1bb7baa83;
							};
						}
						_iter_next_1bb7baa83:;
						++it;
						goto _iter_begin_1bb7baa83;
					}
					_iter_end_1bb7baa83:;
				};
			}
		}
		else {
			_case_begin_1bb7b3828:;
			{
				jule::I32 _81118_r;;
				jule::I64 _81121_sz;;
				std::tie(_81118_r,_81121_sz) = _1dbac6c1a_DecodeRune(_76613_txt);
				_1a95a86a7_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81118_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81121_sz;
				return _76117_t;
			}
		}
		_match_end_1bb7b2e76:;
	};
	(*_self_)._field_column+=_1dbac890e_RuneCountStr(_76117_t.get()._field_Kind);
	return _76117_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a95a8113_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4107d6_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac411562_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac41195d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac449eb3_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac44a8dc_IsPrim(_1ac44a579_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44a579_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44abc8_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44b080_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44b36b_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44b767_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44ba53_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac44c191_IsUnsafe(_1ac44bd3e_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44bd3e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac44c89a_AutoSized(_1ac44c4c1_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44c4c1_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44cc1e_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44d0c6_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44e4d4_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44e7c0_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44ed75_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac450161_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45086a_IsNil(_1ac450518_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac450518_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac450c22_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4510c9_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45189e_IsSelf(_1ac45154c_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45154c_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac451c56_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45210d_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4524b5_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45286c_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac452ce0_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac453263_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac453b15_Unhandled(_1ac4537a2_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1ac453d79_Ignored(_1ac4537a2_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4537a2_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac454583_IsTargeted(_1ac454231_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac454231_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45497e_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac455573_IsEmpty(_1ac454e02_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac454e02_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac455919_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac4561de_IsEmpty(_1ac455d8c_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac455d8c_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45672d_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac456d38_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac457124_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac457597_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45794e_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac457d06_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4580e2_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4586ec_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac458c3b_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac459bc6_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45a2d1_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45ad1a_IsSelf(_1ac45a9a7_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1ac45b07e_IsRef(_1ac45a9a7_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45a9a7_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45c129_IsAnon(_1ac45bcc7_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45bcc7_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45cca6_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45d15d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45db20_IsInf(_1ac45d7bd_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45d7bd_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac45e3e5_IsWhileNext(_1ac45e093_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45e093_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45e934_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac45ecdb_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac460193_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac460616_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4609bd_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac460e41_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac461617_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac461a8a_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac462261_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac462a03_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac4632c8_AutoExpr(_1ac462e76_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac462e76_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac464032_DefaultTyped(_1ac46399e_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac46399e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4644a5_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4646a3_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac464c03_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac465561_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac465b6b_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac4665d9_IsTraitImpl(_1ac466276_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1ac46684d_IsStructImpl(_1ac466276_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac466276_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac49c202_Const> static__1ac502279_NewI64(jule::I64 _1322_x) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=jule::Any(_1322_x)});
}



inline jule::Ptr<_1ac49c202_Const> static__1ac5023ab_NewU64(jule::U64 _1622_x) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_1ac49c202_Const> static__1ac502543_NewBool(jule::Bool _1923_x) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=jule::Any(_1923_x)});
}



inline jule::Ptr<_1ac49c202_Const> static__1ac5027da_NewStr(jule::Str _2222_x) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=jule::Any(_2222_x)});
}



inline jule::Ptr<_1ac49c202_Const> static__1ac502a82_NewF64(jule::F64 _2522_x) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_1ac49c202_Const> static__1ac502c80_NewNil(void) {
	return jule::new_ptr<_1ac49c202_Const>(_1ac49c202_Const{._field_data=nullptr});
}



inline jule::I64 _1ac503379_ReadI64(_1ac49c202_Const* _self_) {
	if ((!(_1ac505722_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1ac5035dd_ReadU64(_1ac49c202_Const* _self_) {
	if ((!(_1ac505986_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1ac503852_ReadBool(_1ac49c202_Const* _self_) {
	if ((!(_1ac505bea_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1ac503ab6_ReadStr(_1ac49c202_Const* _self_) {
	if ((!(_1ac505e5e_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1ac503d2a_ReadF64(_1ac49c202_Const* _self_) {
	if ((!(_1ac5061c3_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1ac50408e_AsI64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1bb82c089:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1bb82c100:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1bb82b95c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1bb82b880:;
			{
				return 0LL;
			}
		}
		_match_end_1bb82b176:;
	};
}



inline jule::U64 _1ac504303_AsU64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1bb82d035:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1bb82dac4:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1bb82db3a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1bb82c1cc:;
			{
				return 0LLU;
			}
		}
		_match_end_1bb82c177:;
	};
}



inline jule::F64 _1ac504567_AsF64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1bb82ea70:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1bb83060e:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1bb830675:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1bb82d673:;
			{
				return 0LL;
			}
		}
		_match_end_1bb82d61d:;
	};
}



inline void _1ac5047dc_SetI64(_1ac49c202_Const* _self_, jule::I64 _13525_x) {
	(*_self_)._field_data=jule::Any(_13525_x);
}



inline void _1ac504a62_SetU64(_1ac49c202_Const* _self_, jule::U64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _1ac504cd7_SetBool(_1ac49c202_Const* _self_, jule::Bool _14126_x) {
	(*_self_)._field_data=jule::Any(_14126_x);
}



inline void _1ac50505c_SetStr(_1ac49c202_Const* _self_, jule::Str _14425_x) {
	(*_self_)._field_data=jule::Any(_14425_x);
}



inline void _1ac5052d2_SetF64(_1ac49c202_Const* _self_, jule::F64 _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _1ac5054ad_SetNil(_1ac49c202_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1ac505722_IsI64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1bb8343b0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb8342d3:;
			{
				return false;
			}
		}
		_match_end_1bb83427d:;
	};
}



inline jule::Bool _1ac505986_IsU64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1bb834e82:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb834b63:;
			{
				return false;
			}
		}
		_match_end_1bb834877:;
	};
}



inline jule::Bool _1ac505bea_IsBool(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1bb8359aa:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb83568b:;
			{
				return false;
			}
		}
		_match_end_1bb83537d:;
	};
}



inline jule::Bool _1ac505e5e_IsStr(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1bb83b30c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb835d73:;
			{
				return false;
			}
		}
		_match_end_1bb83b1b9:;
	};
}



inline jule::Bool _1ac5061c3_IsF64(_1ac49c202_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1bb83bd68:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb83ba49:;
			{
				return false;
			}
		}
		_match_end_1bb83b72a:;
	};
}



inline jule::Bool _1ac506437_IsNil(_1ac49c202_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1ac506745_AreSameTypes(_1ac49c202_Const* _self_, _1ac49c202_Const _21027_x) {
	{
		
		if ((_1ac505722_IsI64(&(*_self_)) == _1ac505722_IsI64(&_21027_x))) {
			_case_begin_1bb83d70a:;
			{
				return true;
			}
		}
		else if ((_1ac505986_IsU64(&(*_self_)) == _1ac505986_IsU64(&_21027_x))) {
			_case_begin_1bb83ce9b:;
			{
				return true;
			}
		}
		else if ((_1ac5061c3_IsF64(&(*_self_)) == _1ac5061c3_IsF64(&_21027_x))) {
			_case_begin_1bb83d023:;
			{
				return true;
			}
		}
		else if ((_1ac505bea_IsBool(&(*_self_)) == _1ac505bea_IsBool(&_21027_x))) {
			_case_begin_1bb83d09a:;
			{
				return true;
			}
		}
		else if ((_1ac505e5e_IsStr(&(*_self_)) == _1ac505e5e_IsStr(&_21027_x))) {
			_case_begin_1bb83d122:;
			{
				return true;
			}
		}
		else if ((_1ac506437_IsNil(&(*_self_)) == _1ac506437_IsNil(&_21027_x))) {
			_case_begin_1bb83d3b9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb83ce24:;
			{
				return false;
			}
		}
		_match_end_1bb83cd47:;
	};
}



inline jule::Bool _1ac506a53_And(_1ac49c202_Const* _self_, _1ac49c202_Const _23518_x) {
	{
		
		if ((_1ac505bea_IsBool(&(*_self_)) && _1ac505bea_IsBool(&_23518_x))) {
			_case_begin_1bb841b4d:;
			{
				return (_1ac503852_ReadBool(&(*_self_)) && _1ac503852_ReadBool(&_23518_x));
			}
		}
		else {
			_case_begin_1bb841257:;
			{
				return false;
			}
		}
		_match_end_1bb84117a:;
	};
}



inline jule::Bool _1ac506d61_Or(_1ac49c202_Const* _self_, _1ac49c202_Const _24617_x) {
	{
		
		if ((_1ac505bea_IsBool(&(*_self_)) && _1ac505bea_IsBool(&_24617_x))) {
			_case_begin_1bb84304a:;
			{
				return (_1ac503852_ReadBool(&(*_self_)) || _1ac503852_ReadBool(&_24617_x));
			}
		}
		else {
			_case_begin_1bb841eb1:;
			{
				return false;
			}
		}
		_match_end_1bb841dd4:;
	};
}



inline jule::Bool _1ac50716e_Eq(_1ac49c202_Const* _self_, _1ac49c202_Const _25717_x) {
	{
		
		if (_1ac506437_IsNil(&(*_self_))) {
			_case_begin_1bb8444be:;
			{
				return _1ac506437_IsNil(&_25717_x);
			}
		}
		else if (_1ac505bea_IsBool(&(*_self_))) {
			_case_begin_1bb843c93:;
			{
				return (_1ac505bea_IsBool(&_25717_x) && (_1ac503852_ReadBool(&(*_self_)) == _1ac503852_ReadBool(&_25717_x)));
			}
		}
		else if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb843d09:;
			{
				return (_1ac505e5e_IsStr(&_25717_x) && (_1ac503ab6_ReadStr(&(*_self_)) == _1ac503ab6_ReadStr(&_25717_x)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb843d81:;
			{
				return (_1ac503379_ReadI64(&(*_self_)) == _1ac50408e_AsI64(&_25717_x));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb843e08:;
			{
				return (_1ac5035dd_ReadU64(&(*_self_)) == _1ac504303_AsU64(&_25717_x));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb8441a0:;
			{
				return (_1ac503d2a_ReadF64(&(*_self_)) == _1ac504567_AsF64(&_25717_x));
			}
		}
		else {
			_case_begin_1bb8433d0:;
			{
				return false;
			}
		}
		_match_end_1bb843303:;
	};
}



inline jule::Bool _1ac50747c_Lt(_1ac49c202_Const* _self_, _1ac49c202_Const _28417_x) {
	{
		
		if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb848649:;
			{
				return (_1ac505e5e_IsStr(&_28417_x) && (_1ac503ab6_ReadStr(&(*_self_)) < _1ac503ab6_ReadStr(&_28417_x)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb847eea:;
			{
				return (_1ac503379_ReadI64(&(*_self_)) < _1ac50408e_AsI64(&_28417_x));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb848061:;
			{
				return (_1ac5035dd_ReadU64(&(*_self_)) < _1ac504303_AsU64(&_28417_x));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb8480c7:;
			{
				return (_1ac503d2a_ReadF64(&(*_self_)) < _1ac504567_AsF64(&_28417_x));
			}
		}
		else {
			_case_begin_1bb8447ee:;
			{
				return false;
			}
		}
		_match_end_1bb84799a:;
	};
}



inline jule::Bool _1ac50778a_LtEq(_1ac49c202_Const* _self_, _1ac49c202_Const _30719_x) {
	{
		
		if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb84b6d5:;
			{
				return (_1ac505e5e_IsStr(&_30719_x) && (_1ac503ab6_ReadStr(&(*_self_)) <= _1ac503ab6_ReadStr(&_30719_x)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb84b086:;
			{
				return (_1ac503379_ReadI64(&(*_self_)) <= _1ac50408e_AsI64(&_30719_x));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb84b0ec:;
			{
				return (_1ac5035dd_ReadU64(&(*_self_)) <= _1ac504303_AsU64(&_30719_x));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb84b163:;
			{
				return (_1ac503d2a_ReadF64(&(*_self_)) <= _1ac504567_AsF64(&_30719_x));
			}
		}
		else {
			_case_begin_1bb848858:;
			{
				return false;
			}
		}
		_match_end_1bb84a7a0:;
	};
}



inline jule::Bool _1ac507a98_Gt(_1ac49c202_Const* _self_, _1ac49c202_Const _33017_x) {
	{
		
		if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb84e771:;
			{
				return (_1ac505e5e_IsStr(&_33017_x) && (_1ac503ab6_ReadStr(&(*_self_)) > _1ac503ab6_ReadStr(&_33017_x)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb84e122:;
			{
				return (_1ac503379_ReadI64(&(*_self_)) > _1ac50408e_AsI64(&_33017_x));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb84e188:;
			{
				return (_1ac5035dd_ReadU64(&(*_self_)) > _1ac504303_AsU64(&_33017_x));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb84e1ee:;
			{
				return (_1ac503d2a_ReadF64(&(*_self_)) > _1ac504567_AsF64(&_33017_x));
			}
		}
		else {
			_case_begin_1bb84b8e4:;
			{
				return false;
			}
		}
		_match_end_1bb84d83b:;
	};
}



inline jule::Bool _1ac507da6_GtEq(_1ac49c202_Const* _self_, _1ac49c202_Const _35319_x) {
	{
		
		if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb85280c:;
			{
				return (_1ac505e5e_IsStr(&_35319_x) && (_1ac503ab6_ReadStr(&(*_self_)) >= _1ac503ab6_ReadStr(&_35319_x)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb8521ad:;
			{
				return (_1ac503379_ReadI64(&(*_self_)) >= _1ac50408e_AsI64(&_35319_x));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb852224:;
			{
				return (_1ac5035dd_ReadU64(&(*_self_)) >= _1ac504303_AsU64(&_35319_x));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb85228a:;
			{
				return (_1ac503d2a_ReadF64(&(*_self_)) >= _1ac504567_AsF64(&_35319_x));
			}
		}
		else {
			_case_begin_1bb84e980:;
			{
				return false;
			}
		}
		_match_end_1bb8518c7:;
	};
}



inline jule::Bool _1ac5081b4_Add(_1ac49c202_Const* _self_, _1ac49c202_Const _37422_x) {
	{
		
		if (_1ac505e5e_IsStr(&(*_self_))) {
			_case_begin_1bb855898:;
			{
				if ((!(_1ac505e5e_IsStr(&_37422_x)))) {
					return false;
				};
				_1ac50505c_SetStr(&(*_self_), (_1ac503ab6_ReadStr(&(*_self_)) + _1ac503ab6_ReadStr(&_37422_x)));
			}
		}
		else if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb855249:;
			{
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac503d2a_ReadF64(&(*_self_)) + _1ac504567_AsF64(&_37422_x))));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb8552b0:;
			{
				if (_1ac5061c3_IsF64(&_37422_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) + _1ac503d2a_ReadF64(&_37422_x))));
				} else {
					_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) + _1ac50408e_AsI64(&_37422_x))));
				};
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb855326:;
			{
				if (_1ac5061c3_IsF64(&_37422_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) + _1ac503d2a_ReadF64(&_37422_x))));
				} else {
					_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) + _1ac504303_AsU64(&_37422_x))));
				};
			}
		}
		else {
			_case_begin_1bb852a1b:;
			{
				return false;
			}
		}
		_match_end_1bb854963:;
	};
	return true;
}



inline jule::Bool _1ac5084c2_Sub(_1ac49c202_Const* _self_, _1ac49c202_Const _40322_x) {
	{
		
		if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb85b173:;
			{
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac503d2a_ReadF64(&(*_self_)) - _1ac504567_AsF64(&_40322_x))));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb85a936:;
			{
				if (_1ac5061c3_IsF64(&_40322_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) - _1ac503d2a_ReadF64(&_40322_x))));
				} else {
					_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) - _1ac50408e_AsI64(&_40322_x))));
				};
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb85a99c:;
			{
				if (_1ac5061c3_IsF64(&_40322_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) - _1ac503d2a_ReadF64(&_40322_x))));
				} else {
					_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) - _1ac504303_AsU64(&_40322_x))));
				};
			}
		}
		else {
			_case_begin_1bb85a8c0:;
			{
				return false;
			}
		}
		_match_end_1bb85a084:;
	};
	return true;
}



inline jule::Bool _1ac5087d0_Mul(_1ac49c202_Const* _self_, _1ac49c202_Const _42722_x) {
	{
		
		if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb8608e7:;
			{
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac503d2a_ReadF64(&(*_self_)) * _1ac504567_AsF64(&_42722_x))));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb8601aa:;
			{
				if (_1ac5061c3_IsF64(&_42722_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) * _1ac503d2a_ReadF64(&_42722_x))));
				} else {
					_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) * _1ac50408e_AsI64(&_42722_x))));
				};
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb860221:;
			{
				if (_1ac5061c3_IsF64(&_42722_x)) {
					_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>((_1ac504567_AsF64(&(*_self_)) * _1ac503d2a_ReadF64(&_42722_x))));
				} else {
					_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) * _1ac504303_AsU64(&_42722_x))));
				};
			}
		}
		else {
			_case_begin_1bb860144:;
			{
				return false;
			}
		}
		_match_end_1bb85e671:;
	};
	return true;
}



inline jule::Bool _1ac508add_Div(_1ac49c202_Const* _self_, _1ac49c202_Const _45522_x) {
	{
		
		if (_1ac5061c3_IsF64(&(*_self_))) {
			_case_begin_1bb86516b:;
			{
				jule::F64 _45817_l = _1ac504567_AsF64(&_45522_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1ac503d2a_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb86492e:;
			{
				jule::F64 _46417_l = _1ac504567_AsF64(&_45522_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1ac504567_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb864995:;
			{
				jule::F64 _47017_l = _1ac504567_AsF64(&_45522_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1ac5052d2_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1ac504567_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1bb8648b8:;
			{
				return false;
			}
		}
		_match_end_1bb863de5:;
	};
	return true;
}



inline jule::Bool _1ac508deb_Mod(_1ac49c202_Const* _self_, _1ac49c202_Const _48422_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb869923:;
			{
				jule::I64 _48717_l = _1ac50408e_AsI64(&_48422_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1ac503379_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb8691e7:;
			{
				jule::U64 _49317_l = _1ac504303_AsU64(&_48422_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1ac5035dd_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1bb869181:;
			{
				return false;
			}
		}
		_match_end_1bb8690a4:;
	};
	return true;
}



inline jule::Bool _1ac509209_BitwiseAnd(_1ac49c202_Const* _self_, _1ac49c202_Const _50629_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb86cc78:;
			{
				_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) & _1ac50408e_AsI64(&_50629_x))));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb86c54c:;
			{
				_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) & _1ac504303_AsU64(&_50629_x))));
			}
		}
		else {
			_case_begin_1bb86c4d6:;
			{
				return false;
			}
		}
		_match_end_1bb86c409:;
	};
	return true;
}



inline jule::Bool _1ac509517_BitwiseOr(_1ac49c202_Const* _self_, _1ac49c202_Const _52028_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb86ee12:;
			{
				_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) | _1ac50408e_AsI64(&_52028_x))));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb86e6d6:;
			{
				_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) | _1ac504303_AsU64(&_52028_x))));
			}
		}
		else {
			_case_begin_1bb86e670:;
			{
				return false;
			}
		}
		_match_end_1bb86e593:;
	};
	return true;
}



inline jule::Bool _1ac509825_Xor(_1ac49c202_Const* _self_, _1ac49c202_Const _53422_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb87209b:;
			{
				_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_1ac503379_ReadI64(&(*_self_)) ^ _1ac50408e_AsI64(&_53422_x))));
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb871870:;
			{
				_1ac504a62_SetU64(&(*_self_), static_cast<jule::U64>((_1ac5035dd_ReadU64(&(*_self_)) ^ _1ac504303_AsU64(&_53422_x))));
			}
		}
		else {
			_case_begin_1bb871809:;
			{
				return false;
			}
		}
		_match_end_1bb87172c:;
	};
	return true;
}



inline jule::Bool _1ac509b33_Lshift(_1ac49c202_Const* _self_, _1ac49c202_Const _54825_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1bb874235:;
			{
				jule::I64 _55117_l = _1ac50408e_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1ac504303_AsU64(&_54825_x);;
					_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1ac50a2a4_lshiftUnsig((*_self_),_54825_x);
				};
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1bb873a09:;
			{
				_1ac50a2a4_lshiftUnsig((*_self_),_54825_x);
			}
		}
		else {
			_case_begin_1bb873993:;
			{
				return false;
			}
		}
		_match_end_1bb8738b6:;
	};
	return true;
}



inline jule::Bool _1ac509e41_Rshift(_1ac49c202_Const* _self_, _1ac49c202_Const _56825_x) {
	{
		
		if (_1ac505722_IsI64(&(*_self_))) {
			_case_begin_1ad5326e8:;
			{
				jule::I64 _57117_l = _1ac50408e_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1ac504303_AsU64(&_56825_x);;
					_1ac5047dc_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1ac50a5a1_rshiftUnsig((*_self_),_56825_x);
				};
			}
		}
		else if (_1ac505986_IsU64(&(*_self_))) {
			_case_begin_1ad53e7e3:;
			{
				_1ac50a5a1_rshiftUnsig((*_self_),_56825_x);
			}
		}
		else {
			_case_begin_1ad4eaa24:;
			{
				return false;
			}
		}
		_match_end_1ad6b875d:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac49c202_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acbbc9cc_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acabe7d0_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c0671_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acb05283_set(_1ad0c09d4_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1bbcde21b:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1bbcde282:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1bbcde073:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1bbce151a:;
					{
						goto _iter_next_1bbce0c56;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1bbce1592:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1bbce0c56;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1bbce1619:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1bbce0c56;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1bbce0c56;
					}
				}
				_match_end_1bbce13d8:;
			};
			goto _iter_end_1bbce0c56;
		}
	_iter_next_1bbce0c56:;
	}
	_iter_end_1bbce0c56:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1acc090ce_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1bbbbe140;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1bbbbe140:;
		}
		_iter_end_1bbbbe140:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1acc088e7_floatBits(_1ad0c09d4_decimal* _self_, _1acbbc9cc_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1acb02390_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1acb02390_powtab[(*_self_)._field_dp];
			};
			_1ad0c0d03_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1bbbc6466:;
	}
	_iter_end_1bbbc6466:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1acb02390_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1acb02390_powtab[(-((*_self_)._field_dp))];
			};
			_1ad0c0d03_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1bbbc6b70:;
	}
	_iter_end_1bbbc6b70:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1ad0c0d03_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1ad0c0d03_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1ad0c12cb_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1ad0c0bc1_assign(_1ad0c09d4_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1bbbd4cb0:;
	}
	_iter_end_1bbbd4cb0:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1bbbd629a:;
	}
	_iter_end_1bbbd629a:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1ad0c1540_trim((*_self_));
}



inline void _1ad0c0d03_shift(_1ad0c09d4_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1bbbd791c:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1bbbd7994:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1ad0c18d6_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1bbbd80c1:;
				}
				_iter_end_1bbbd80c1:;;
				_1ad0c18d6_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1bbbd7a1b:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1ad0c1672_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1bbbd919e:;
				}
				_iter_end_1bbbd919e:;;
				_1ad0c1672_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1bbbd77da:;
	};
}



inline void _1ad0c0e35_roundDown(_1ad0c09d4_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1ad0c1540_trim((*_self_));
}



inline void _1ad0c1067_roundUp(_1ad0c09d4_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1bbbdc449:;
	}
	_iter_end_1bbbdc449:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1ad0c1199_round(_1ad0c09d4_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1ad0c1a18_shouldRoundUp((*_self_),_41124_nd)) {
		_1ad0c1067_roundUp(&(*_self_), _41124_nd);
	} else {
		_1ad0c0e35_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1ad0c12cb_roundedInteger(_1ad0c09d4_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1bbbe0282:;
	}
	_iter_end_1bbbe0282:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1bbbe2d23:;
	}
	_iter_end_1bbbe2d23:;;
	if (_1ad0c1a18_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c09d4_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac442d57_FieldIns> _1ac416b94_instance(jule::Ptr<_1ac427d4d_Field> _self_) {
	return jule::new_ptr<_1ac442d57_FieldIns>(_1ac442d57_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1ac427d4d_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac43c11a_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac466a3a_StructIns> _1ac41cc88_instance(jule::Ptr<_1ac43a6e0_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1ac466a3a_StructIns> _9917_ins = jule::new_ptr<_1ac466a3a_StructIns>(_1ac466a3a_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ac442d57_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Refers=static__1ac5189dd_new(), });;
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc22b48d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac427d4d_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1ac416b94_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_Mutable)) && (_10521_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1ad186627_Mutable(_10521_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1bc22b48d:;
			++it;
			goto _iter_begin_1bc22b48d;
		}
		_iter_end_1bc22b48d:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1ac512b80_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1bc22e6e4:;
			if (it != expr.end()) {
				jule::Ptr<_1ac512b80_Fn> _11625_f = *it;
				{
					jule::Ptr<_1ac512b80_Fn> _11725_fins = jule::new_ptr<_1ac512b80_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_11725_fins);;
				}
				_iter_next_1bc22e6e4:;
				++it;
				goto _iter_begin_1bc22e6e4;
			}
			_iter_end_1bc22e6e4:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1ac466a3a_StructIns> _1ac422001_appendInstance(_1ac43a6e0_Struct* _self_, jule::Ptr<_1ac466a3a_StructIns>& _12838_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bc231b8b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _13421_ains = *it;
			{
				if (_1ac44088d_Same(_13421_ains.ptr(), _12838_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1bc231b8b:;
			++it;
			goto _iter_begin_1bc231b8b;
		}
		_iter_end_1bc231b8b:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}



inline jule::Ptr<_1ac512b80_Fn> _1ac424ca1_FindMethod(_1ac43a6e0_Struct* _self_, jule::Str _14629_ident, jule::Bool _14641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc2331dc:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_Statically == _14641_statically) && (_14721_f.get()._field_Ident == _14629_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1bc2331dc:;
			++it;
			goto _iter_begin_1bc2331dc;
		}
		_iter_end_1bc2331dc:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad112097_Var> _1ac425cb3_FindStatic(_1ac43a6e0_Struct* _self_, jule::Str _15729_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bc23441e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_Ident == _15729_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1bc23441e:;
			++it;
			goto _iter_begin_1bc23441e;
		}
		_iter_end_1bc23441e:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac427d4d_Field> _1ac425202_FindField(_1ac43a6e0_Struct* _self_, jule::Str _16828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc2353a9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac427d4d_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_Ident == _16828_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1bc2353a9:;
			++it;
			goto _iter_begin_1bc2353a9;
		}
		_iter_end_1bc2353a9:;
	};
	return nullptr;
}



inline jule::Bool _1ac4274ce_IsImplements(_1ac43a6e0_Struct* _self_, jule::Ptr<_1ac524a3d_Trait> _17827_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1bc235882:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> &_17916_it = *it;
			{
				if ((_17827_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1bc235882:;
			++it;
			goto _iter_begin_1bc235882;
		}
		_iter_end_1bc235882:;
	};
	return false;
}



inline jule::Bool _1ac4268da_IsDerives(_1ac43a6e0_Struct* _self_, jule::Str _18824_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1bc236894:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_Args.len() == 1LL) && (_18916_d.get()._field_Args[0LL].get()._field_Kind == _18824_ident))) {
						return true;
					};
				};
			}
			_iter_next_1bc236894:;
			++it;
			goto _iter_begin_1bc236894;
		}
		_iter_end_1bc236894:;
	};
	return false;
}



inline jule::Bool _1ac42a68b_IsUses(_1ac43a6e0_Struct* _self_, jule::Ptr<_1ac43a6e0_Struct> _20021_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1bc239149:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> &_20116_u = *it;
			{
				while ((_20021_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1bc2398ec:;
				}
				_iter_end_1bc2398ec:;;
			}
			_iter_next_1bc239149:;
			++it;
			goto _iter_begin_1bc239149;
		}
		_iter_end_1bc239149:;
	};
	return false;
}



inline jule::Bool _1ac42ad51_HasRefAccessible(_1ac43a6e0_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc239aea:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_Params.len() > 0LL) && _1ac511bd4_IsRef(_21116_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1bc239aea:;
			++it;
			goto _iter_begin_1bc239aea;
		}
		_iter_end_1bc239aea:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac43a6e0_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac442d57_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50a716_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50a903_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50aae0_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50accc_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50aeb9_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50b1a6_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50b393_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50b580_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50b76c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50b959_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50bb46_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50bd33_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50c020_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50c20c_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50c3e9_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50c817_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50ca04_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50cbe1_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50cdcd_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50d0ba_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50d2a7_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50d494_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50d681_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50d86d_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50da5a_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50dc47_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50de34_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50e121_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50e30d_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50e4ea_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50e6d7_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50c5d6_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac50ed47_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac510034_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac510221_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac51040d_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5105ea_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac510b7d_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac514962_ParamIns> _1ac51170b_instance(jule::Ptr<_1ac511343_Param> _self_) {
	return jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1ac511970_IsSelf(_1ac511343_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1ac511bd4_IsRef(_1ac511343_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac511343_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac5130e2_IsVoid(_1ac512b80_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1ac513356_IsMethod(_1ac512b80_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1ac5135ba_IsEntryPoint(_1ac512b80_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1ac51382e_IsInit(_1ac512b80_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1ac513a93_IsAnon(_1ac512b80_Fn* _self_) {
	return _1a959cb63_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1ac513d07_AnyVar(_1ac512b80_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1ac515831_FnIns> _1ac51406b_instanceForce(jule::Ptr<_1ac512b80_Fn> _self_) {
	jule::Ptr<_1ac515831_FnIns> _10017_ins = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ad0c4994_Scope>(), ._field_Refers=static__1ac5189dd_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc24d47c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac511343_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1ac51170b_instance(_10721_p));;
			}
			_iter_next_1bc24d47c:;
			++it;
			goto _iter_begin_1bc24d47c;
		}
		_iter_end_1bc24d47c:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1ac515831_FnIns> _1ac5142d0_instance(jule::Ptr<_1ac512b80_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1ac51406b_instanceForce(_self_);
}



inline jule::Ptr<_1ac515831_FnIns> _1ac5145aa_appendInstance(_1ac512b80_Fn* _self_, jule::Ptr<_1ac515831_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bc25252a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac515831_FnIns> _14421_ains = *it;
			{
				if (_1ac517239_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1bc25252a:;
			++it;
			goto _iter_begin_1bc25252a;
		}
		_iter_end_1bc25252a:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac512b80_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac514d3b_Str(_1ac514962_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1ac511970_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1ac511bd4_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1ad185626_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac514962_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac515b61_Str(_1ac515831_FnIns* _self_) {
	;
	return _1ac517547_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1ac515e6e_Equals(jule::Ptr<_1ac515831_FnIns> _self_, jule::Ptr<_1ad18522a_TypeKind> _21722_other) {
	jule::Ptr<_1ac515831_FnIns> _21813_f = _1ad18852a_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1ac5163d1_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1ac5163d1_EqualsFn(jule::Ptr<_1ac515831_FnIns> _self_, jule::Ptr<_1ac515831_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1ac5130e2_IsVoid(_self_.get()._field_Decl.ptr()) != _1ac5130e2_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ac514962_ParamIns>,jule::Ptr<_1ac514962_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ac514962_ParamIns>,jule::Ptr<_1ac514962_ParamIns>)>([=](jule::Ptr<_1ac514962_ParamIns> _23830_p1, jule::Ptr<_1ac514962_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1ac511970_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1ac511970_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1ac511bd4_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1ac511bd4_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1ad185934_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1bc08434b:;
	}
	_iter_end_1bc08434b:;;
	if ((!(_1ac5130e2_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1ad185934_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1ac5166de_equalsTrait(jule::Ptr<_1ac515831_FnIns> _self_, jule::Ptr<_1ac515831_FnIns>& _28728_other) {
	if ((!(_1ac5163d1_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _1ac516953_Types(_1ac515831_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1bc08798c:;
			{
				return nullptr;
			}
		}
		else if ((_1ad188ecb_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1bc087a03:;
			{
				return jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1bc087926:;
			{
				return _1ad188ecb_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1bc087849:;
	};
}



inline jule::Bool _1ac516bb7_IsBuiltin(_1ac515831_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1ac516e2b_IsAnon(_1ac515831_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1ac513a93_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1ac517239_Same(_1ac515831_FnIns* _self_, jule::Ptr<_1ac515831_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc08b364:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1ad1839ed_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1ad185934_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1bc08b364:;
			++it;
			_32913_i++;
			goto _iter_begin_1bc08b364;
		}
		_iter_end_1bc08b364:;
	};
	return true;
}



inline jule::Str _1ac517547_GetKindStr(_1ac515831_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1bc090302:;
			if (it != expr.end()) {
				jule::Ptr<_1ac514962_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1ac514d3b_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1bc090302:;
				++it;
				goto _iter_begin_1bc090302;
			}
			_iter_end_1bc090302:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1ac5130e2_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1ad185626_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac515831_FnIns _Src) {
	_Stream << "FnIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Anon:" << _Src._field_Anon << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac518702_ReferenceStack> static__1ac5189dd_new(void) {
	return jule::new_ptr<_1ac518702_ReferenceStack>(_1ac518702_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1ac518d73_Len(_1ac518702_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1ac519181_At(_1ac518702_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _1ac519406_Push(_1ac518702_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _1bc563352_Exist(_1ac518702_ReferenceStack* _self_, jule::Ptr<_1ac515831_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc56463e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1bc56463e:;
			++it;
			goto _iter_begin_1bc56463e;
		}
		_iter_end_1bc56463e:;
	};
	return false;
}

inline jule::Bool _1bc577b4c_Exist(_1ac518702_ReferenceStack* _self_, jule::Ptr<_1ad112097_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc578de5:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1bc578de5:;
			++it;
			goto _iter_begin_1bc578de5;
		}
		_iter_end_1bc578de5:;
	};
	return false;
}

inline jule::Bool _1bb8d3e32_Exist(_1ac518702_ReferenceStack* _self_, jule::Ptr<_1ac466a3a_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bb8d5263:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1bb8d5263:;
			++it;
			goto _iter_begin_1bb8d5263;
		}
		_iter_end_1bb8d5263:;
	};
	return false;
}

inline jule::Bool _1bc2a3009_Exist(_1ac518702_ReferenceStack* _self_, jule::Ptr<_1ac524a3d_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1bc2a42a2:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1bc2a42a2:;
			++it;
			goto _iter_begin_1bc2a42a2;
		}
		_iter_end_1bc2a42a2:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac518702_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac519abb_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac51e065_symbolBuilder> _1ac51e51b_getRoot(jule::Ptr<_1ac51e065_symbolBuilder> _self_) {
	jule::Ptr<_1ac51e065_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1bc0a89d0:;
	}
	_iter_end_1bc0a89d0:;;
	return _31617_root;
}



inline void _1ac51e8d4_pushErr(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1a959a127_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad0e384d_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1ac51ec9c_pushErrText(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1a959a127_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad0e384d_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1ac5200bb_pushSuggestion(_1ac51e065_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1ad0e4cd3_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1ac520473_checkCppUseDeclPath(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ac462a03_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _1a91d4635_Ext(_33655_path);;
	if (((!(_1a926584d_IsValidHeaderExt(_33713_ext))) && (!(_1a9265ae5_IsValidCppExt(_33713_ext))))) {
		_1ac51e8d4_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_1dba014a2_Status> _34413_info = ({
		auto except = static__1a91d52b2_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1ac51e8d4_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_1dba014a2_Status>();});
	});;
	if (_1d9e3de63_IsDir(_34413_info.ptr())) {
		_1ac51e8d4_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac52074d_buildCppHeaderImport(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ac462a03_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1a9265595_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a95a0da8_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1ac520473_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1a91d4767_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1ac51e8d4_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1ad0dc11b_ImportInfo>(_1ad0dc11b_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac520a5b_buildStdImport(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ac462a03_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1a91d2a73_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a9293eec_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1a91d4767_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1ac51e8d4_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1dba014a2_Status> _39513_info = ({
		auto except = static__1a91d52b2_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1ac51e8d4_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1dba014a2_Status>();});
	});;
	if ((!(_1d9e3de63_IsDir(_39513_info.ptr())))) {
		_1ac51e8d4_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1a91d1049_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1ad0dc11b_ImportInfo>(_1ad0dc11b_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1ad0e0075_Package>(_1ad0e0075_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac520d69_buildIdentImport(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ac462a03_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d89ec_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1ac51e8d4_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1ac5200bb_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1a91d2a73_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_1a91d4503_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1a91d4767_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1ac51e8d4_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_1dba014a2_Status> _44213_info = ({
		auto except = static__1a91d52b2_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1ac51e8d4_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_1dba014a2_Status>();});
	});;
	if ((!(_1d9e3de63_IsDir(_44213_info.ptr())))) {
		_1ac51e8d4_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1a91d1049_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1ad0dc11b_ImportInfo>(_1ad0dc11b_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1ad0e0075_Package>(_1ad0e0075_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac521177_buildImport(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ac462a03_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1bc0c2774:;
			{
				return _1ac52074d_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1bc0c29d8:;
			{
				return _1ac520a5b_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1bc0c2004:;
			{
				return _1ac520d69_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1bc0c1e27:;
	};
}



inline jule::Bool _1ac521485_checkDuplicateUseDecl(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1ad0dc11b_ImportInfo> _48313_lpkg = _1ad154c55_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>([=](jule::Ptr<_1ad0dc11b_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1ac51e8d4_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1ac5200bb_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1ac5217a4_implImportSelections(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _49544_imp, jule::Ptr<_1ac462a03_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bc0c64e2:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1bc0c7070:;
					if (it != expr.end()) {
						jule::Ptr<_1a959a127_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1bc0c7070;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1ac51e8d4_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1ac5200bb_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1bc0c7070;
							};
						}
						_iter_next_1bc0c7070:;
						++it;
						goto _iter_begin_1bc0c7070;
					}
					_iter_end_1bc0c7070:;
				};
			}
			_iter_next_1bc0c64e2:;
			++it;
			goto _iter_begin_1bc0c64e2;
		}
		_iter_end_1bc0c64e2:;
	};
}



inline jule::Str _1ac521ab2_getAsLinkPath(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1a9142ae3_HasPrefix(_51037_path,_1a9293eec_PathStdlib)) {
		(_51037_path).mut_slice(_1a9293eec_PathStdlib.len());;
		return (jule::Str("std", 3) + _1a91d2a73_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1a91d4767_Abs(_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d89ec_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 92LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1a91d2a73_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1ac521e7a_pushCycleError(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ac51e065_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1a9272706_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1ac521ab2_getAsLinkPath(_self_, _1a95a0da8_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1ac521ab2_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_1a9138028_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1ac522343_pushCrossCycleError(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ac51e065_symbolBuilder>& _53340_target, jule::Ptr<_1ad0dc11b_ImportInfo>& _53365_imp, jule::Ptr<_1a959a127_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1ac521e7a_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1ac51e065_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1ac51e065_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1ac521e7a_pushCycleError(_self_, _53917_old.get()._field_owner,_1a95a0da8_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1ac521e7a_pushCycleError(_self_, _53340_target,_1a95a0da8_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1bc0cdac1;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1bc0cdac1:;
	}
	_iter_end_1bc0cdac1:;;
	_1ac51e8d4_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1ac5226ea_checkImportCycles(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ad0dc11b_ImportInfo> _55637_imp, jule::Ptr<_1ac462a03_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1a95a0da8_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1ac51e8d4_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1ac521ab2_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1a95a0da8_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1ac522343_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1ac51e065_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1a95a0da8_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1ac522343_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1ac522ad5_checkPackageAccessibility(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ac462a03_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1ad0d9888_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1ad0d89ec_GetModPath((*_self_)._field_importer) != _59262_mod) && _1a91d2468_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1ac51e8d4_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac522e9d_importPackage(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _59838_imp, jule::Ptr<_1ac462a03_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1ad0dc11b_ImportInfo> _60317_port = _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d9118_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d89ec_GetModPath(_self_.get()._field_importer);;
		_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d87aa_SetModPath(_self_.get()._field_importer, _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d8d0a_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1ac522ad5_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d87aa_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1ac5226ea_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d89ec_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d87aa_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d87aa_SetModPath(_self_.get()._field_importer, _1a9293eec_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ac4107d6_Ast>> _62222_asts;;
		jule::Slice<_1a92722b6_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d94c0_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1ac522ad5_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1bc0de483:;
			if (it != expr.end()) {
				jule::Ptr<_1ac4107d6_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1ad15442a_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1ad1a6724_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1ac51ec9c_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1bc0de483:;
				++it;
				goto _iter_begin_1bc0de483;
			}
			_iter_end_1bc0de483:;
		};
	};
	_1ac5217a4_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ac5232ab_importUseDecl(jule::Ptr<_1ac51e065_symbolBuilder> _self_, jule::Ptr<_1ac462a03_UseDecl>& _65038_decl) {
	jule::Ptr<_1ad0dc11b_ImportInfo> _65117_imp = _1ac521177_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1ac521485_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1ac522e9d_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1ad0d9888_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad0d9745_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1ac523487_importUseDecls(jule::Ptr<_1ac51e065_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1bc0e4e6c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac462a03_UseDecl> _67221_decl = *it;
			{
				_1ac5232ab_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1bc0e4e6c;
				};
			}
			_iter_next_1bc0e4e6c:;
			++it;
			goto _iter_begin_1bc0e4e6c;
		}
		_iter_end_1bc0e4e6c:;
	};
}



inline void _1ac52370c_appendNode(_1ac51e065_symbolBuilder* _self_, _1ac411562_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1ac466276_Impl>>()) {
			_case_begin_1bc0e69eb:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1ac51da15_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1ac466276_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac461617_TypeAliasDecl>>()) {
			_case_begin_1bc0e5731:;
			{
				jule::Ptr<_1ad184537_TypeAlias> _68621_ta = _1ac51a4a1_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1ac461617_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac465561_StructDecl>>()) {
			_case_begin_1bc0e6600:;
			{
				jule::Ptr<_1ac43a6e0_Struct> _68921_srct = _1ac51ad0e_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1ac465561_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bc0e6666:;
			{
				jule::Ptr<_1ac512b80_Fn> _69221_f = _1ac51b969_buildFn(_68134_node._field_Data.operator jule::Ptr<_1ac45bcc7_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac465b6b_TraitDecl>>()) {
			_case_begin_1bc0e6e5d:;
			{
				jule::Ptr<_1ac524a3d_Trait> _69521_t = _1ac51bea8_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1ac465b6b_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45cca6_VarDecl>>()) {
			_case_begin_1bc0e6ec4:;
			{
				jule::Ptr<_1ad112097_Var> _69821_v = _1ac51d4c6_buildVar(_68134_node._field_Data.operator jule::Ptr<_1ac45cca6_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac46399e_EnumDecl>>()) {
			_case_begin_1bc0e703a:;
			{
				jule::Ptr<_1ac526b83_Enum> _70121_e = _1ac51c78e_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1ac46399e_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4646a3_TypeEnumDecl>>()) {
			_case_begin_1bc0e70a1:;
			{
				jule::Ptr<_1ac52827d_TypeEnum> _70421_e = _1ac51d22e_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1ac4646a3_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1bc0e6468:;
			{
				_1ac51e8d4_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc0e5863:;
	};
}



inline void _1ac5238d8_appendNodes(_1ac51e065_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1bc1009b1:;
		if (it != expr.end()) {
			_1ac411562_Node _71221_node = *it;
			{
				_1ac52370c_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1bc1009b1:;
			++it;
			goto _iter_begin_1bc1009b1;
		}
		_iter_end_1bc1009b1:;
	};
}



inline void _1ac523b5d_pushDirectivePass(_1ac51e065_symbolBuilder* _self_, jule::Ptr<_1ac41195d_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1ac51e8d4_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1a959a127_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1ac51e8d4_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a959a127_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1ac51e8d4_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1ac51e8d4_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1ac519abb_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1ac523d39_appendTopDirectives(_1ac51e065_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1bc103a91:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1bc106a50:;
						{
							_1ac523b5d_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1bc106995:;
				};
			}
			_iter_next_1bc103a91:;
			++it;
			goto _iter_begin_1bc103a91;
		}
		_iter_end_1bc103a91:;
	};
}



inline void _1ac524015_build(jule::Ptr<_1ac51e065_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1ad15442a_SymbolTable>(_1ad15442a_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1ac523d39_appendTopDirectives(_self_.ptr());
	_1ac523487_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1ac5238d8_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac51e065_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac524e39_Str(_1ac524a3d_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1ac525247_Equals(jule::Ptr<_1ac524a3d_Trait> _self_, jule::Ptr<_1ad18522a_TypeKind> _2522_other) {
	jule::Ptr<_1ac524a3d_Trait> _2613_trt = _1ad188a03_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1ac5255aa_IsBuiltin(_1ac524a3d_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1ac512b80_Fn> _1ac5258b8_FindMethod(_1ac524a3d_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc10a911:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1bc10a911:;
			++it;
			goto _iter_begin_1bc10a911;
		}
		_iter_end_1bc10a911:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac524a3d_Trait _Src) {
	_Stream << "Trait{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Implemented:" << _Src._field_Implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac526578_AutoExpr(_1ac52618d_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac52618d_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac526ee6_Str(_1ac526b83_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1ac527304_Equals(jule::Ptr<_1ac526b83_Enum> _self_, jule::Ptr<_1ad18522a_TypeKind> _3822_other) {
	jule::Ptr<_1ac526b83_Enum> _3913_enm = _1ad187a79_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1ac52618d_EnumItem> _1ac527744_FindItem(_1ac526b83_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc10d1a5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52618d_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1bc10d1a5:;
			++it;
			goto _iter_begin_1bc10d1a5;
		}
		_iter_end_1bc10d1a5:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac526b83_Enum _Src) {
	_Stream << "Enum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac527bb7_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac5285ad_Str(_1ac52827d_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1ac5288bb_Equals(jule::Ptr<_1ac52827d_TypeEnum> _self_, jule::Ptr<_1ad18522a_TypeKind> _8022_other) {
	jule::Ptr<_1ac52827d_TypeEnum> _8113_tenm = _1ad187cdd_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1ac527bb7_TypeEnumItem> _1ac528cb7_FindItem(_1ac52827d_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc1103d8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac527bb7_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1bc1103d8:;
			++it;
			goto _iter_begin_1bc1103d8;
		}
		_iter_end_1bc1103d8:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac52827d_TypeEnum _Src) {
	_Stream << "TypeEnum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)> _1ac551295_readyFn(jule::Ptr<_1ac540d78_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)>([=](jule::Ptr<_1ad0e5267_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1bc11d32a:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1ac457597_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1ad1839ed_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1bc11d32a;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1bc12089e:;
						if (it != expr.end()) {
							jule::Ptr<_1ac449eb3_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1ad18522a_TypeKind> _7229_kind = _1ad0eb647_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1ad1a5bb8_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1ac44a579_IdentTypeDecl>>()) {
											_case_begin_1bc12273b:;
											{
												jule::Ptr<_1ac44a579_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1ac44a579_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1ac588002_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1bc1226d6:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1bc12089e:;
							++it;
							goto _iter_begin_1bc12089e;
						}
						_iter_end_1bc12089e:;
					};
				}
				_iter_next_1bc11d32a:;
				++it;
				_6418_i++;
				goto _iter_begin_1bc11d32a;
			}
			_iter_end_1bc11d32a:;
		};
		return true;
	});
}



inline jule::Bool _1ac5682ce_readyFi(jule::Ptr<_1ac540d78_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1ad100a47_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1ac551295_readyFn(_self_)));
}



inline jule::Bool _1ac582b78_readySi(jule::Ptr<_1ac540d78_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1ac551295_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1ac5849c1_ready(jule::Ptr<_1ac540d78_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1ac5682ce_readyFi(_self_);
	};
	return _1ac582b78_readySi(_self_);
}



inline jule::Bool _1ac585bae_check(jule::Ptr<_1ac540d78_constraintChecker> _self_) {
	if ((!(_1ac5849c1_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1bc129754:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1ad1839ed_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1bc129754;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1bc12a425:;
					if (it != expr.end()) {
						jule::Ptr<_1ad18522a_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1ad189c02_Prim> _12425_prim = _1ad18733c_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1ad18a7e6_IsConstraint(_12425_prim.ptr()))) {
								if (_1ac58640c_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1bc129754;
								};
								goto _iter_next_1bc12a425;
							};
							if (_1ad185934_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1bc129754;
							};
						}
						_iter_next_1bc12a425:;
						++it;
						goto _iter_begin_1bc12a425;
					}
					_iter_end_1bc12a425:;
				};
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1bc129754:;
			++it;
			_11914_i++;
			goto _iter_begin_1bc129754;
		}
		_iter_end_1bc129754:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac540d78_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac5891e0_IsTraitImpl(_1ac5ae0b1_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1ac58993d_IsStructImpl(_1ac5ae0b1_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5ae0b1_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c4994_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c4b81_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c4d6d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c505a_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c5247_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac5ae29d_IsWhileNext(_1ad0c5434_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c5434_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c5621_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c580d_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c59ea_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c5bd7_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c5dc4_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c60b1_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c629d_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c648a_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad0c6a95_IsGenericTypeMatch(_1ad0c6677_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c6677_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad0c6db4_isDefault(_1ad0c6bc7_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c6bc7_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c6ee6_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c71d3_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c73c0_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c75ac_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0c7986_FindPackage(_1ad0c7799_scopeChecker* _self_, jule::Str _45630_ident) {
	return _1ad0e5784_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0c7ab8_SelectPackage(_1ad0c7799_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _46632_selector) {
	return _1ad0e5a92_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_1ad112097_Var> _1ad0c7bea_FindVar(_1ad0c7799_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_1ad112097_Var> _48017_v = _1ad156bbe_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1ad156bbe_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1bc156891:;
	}
	_iter_end_1bc156891:;;
	return _1ad0e5e49_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad0c7d2c_FindTypeAlias(_1ad0c7799_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_1ad184537_TypeAlias> _50717_ta = _1ad157120_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1ad157120_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1bc15972e:;
	}
	_iter_end_1bc15972e:;;
	return _1ad0e6301_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad0c7e5e_FindStruct(_1ad0c7799_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _1ad0e66a8_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_1ac512b80_Fn> _1ad0c8091_FindFn(_1ad0c7799_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _1ad0e6a60_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad0c81c3_FindTrait(_1ad0c7799_scopeChecker* _self_, jule::Str _54728_ident) {
	return _1ad0e6d6d_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_1ac526b83_Enum> _1ad0c8305_FindEnum(_1ad0c7799_scopeChecker* _self_, jule::Str _55627_ident) {
	return _1ad0e717b_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0c8437_FindTypeEnum(_1ad0c7799_scopeChecker* _self_, jule::Str _56531_ident) {
	return _1ad0e7489_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _1ad0c8569_isUnsafe(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	jule::Ptr<_1ad0c7799_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1ad0c869b_isRoot(_1ad0c7799_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1ad0c87cd_stop(_1ad0c7799_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1ad0c8910_stopped(_1ad0c7799_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1ad0c8a42_isDeferred(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	jule::Ptr<_1ad0c7799_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0c8b74_getRoot(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	jule::Ptr<_1ad0c7799_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1bc163c00:;
	}
	_iter_end_1bc163c00:;;
	return _62417_root;
}



inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0c8ca6_getHardRoot(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	jule::Ptr<_1ad0c7799_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1bc164eba:;
	}
	_iter_end_1bc164eba:;;
	return _63417_root;
}



inline jule::Ptr<_1ad0c5bd7_Label> _1ad0c8dd8_findLabel(_1ad0c7799_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bc165c79:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ad0c5bd7_Label>>()) {
						_case_begin_1bc166582:;
						{
							jule::Ptr<_1ad0c5bd7_Label> _64825_label = _64521_st.operator jule::Ptr<_1ad0c5bd7_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1bc166483:;
				};
			}
			_iter_next_1bc165c79:;
			++it;
			goto _iter_begin_1bc165c79;
		}
		_iter_end_1bc165c79:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ad0c901a_findLabelScope(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1ad0c73c0_scopeLabel> _66117_label = _1ad0c914c_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ad0c914c_findLabelAll(_1ad0c7799_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1bc16896e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c73c0_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1bc16896e:;
			++it;
			goto _iter_begin_1bc16896e;
		}
		_iter_end_1bc16896e:;
	};
	return nullptr;
}



inline jule::Bool _1ad0c9504_isDuplicatedIdent(_1ad0c7799_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1ad112097_Var> _68513_v = _1ad0c7bea_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1ad0e77db_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1ad184537_TypeAlias> _69313_ta = _1ad0c7d2c_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1ad0e77db_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1ad0c9779_checkVarDecl(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45cca6_VarDecl> _70436_decl) {
	jule::Ptr<_1ad112097_Var> _70517_v = _1ac51d4c6_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1ad0c9504_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ad0c87cd_stop(_self_.ptr());
		return;;
	};
	_1ad1064ba_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));
	if (((!(_1ad1126b3_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1ad109b0b_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));
}



inline void _1ad0c99ee_checkTypeAliasDecl(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac461617_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1ad184537_TypeAlias> _72917_ta = _1ac51a4a1_buildTypeAlias(_72842_decl);;
	if (_1ad0c9504_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ad0c87cd_stop(_self_.ptr());
		return;;
	};
	_1ad10230c_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1ad0c87cd_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0c9c63_getChild(_1ad0c7799_scopeChecker* _self_) {
	return jule::new_ptr<_1ad0c4994_Scope>(_1ad0c4994_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1ad0ca12b_checkChildSsc(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45a2d1_ScopeTree>& _75238_tree, jule::Ptr<_1ad0c4994_Scope>& _75261_s, jule::Ptr<_1ad0c7799_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1ad0d5664_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0ca4d3_checkChildSc(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45a2d1_ScopeTree>& _75737_tree, jule::Ptr<_1ad0c7799_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1ad0c4994_Scope> _75817_s = _1ad0c9c63_getChild(_self_.ptr());;
	_1ad0ca12b_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0ca7e1_checkChild(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45a2d1_ScopeTree>& _76335_tree) {
	jule::Ptr<_1ad0c7799_scopeChecker> _76417_ssc = _1ad0d58c8_newChildChecker(_self_);;
	return _1ad0ca4d3_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1ad0caa66_checkAnonScope(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45a2d1_ScopeTree> _76838_tree) {
	jule::Ptr<_1ad0c4994_Scope> _76917_s = _1ad0ca7e1_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1ad0cad85_processErrorCall(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1a959a127_Token> _77372_err) {
	if (_1ad0c8a42_isDeferred(_self_)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _77817_root = _1ad0c8b74_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1ad0cb10a_checkExpr(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac44e4d4_Expr> _78633_expr) {
	jule::Ptr<_1ad15ac06_Eval> _78717_eval = _1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1ad159188_Data> _78917_d = _1ad1769be_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bc2e09a3:;
			{
				jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>();;
				_1ad0cad85_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac51040d_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50e4ea_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac5105ea_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bc2e0ba1:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1bc2e0860:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc2e080a:;
	};
}



inline void _1ad0cb380_checkCoExpr(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac4510c9_CoExpr> _81535_expr) {
	jule::Ptr<_1ad15ac06_Eval> _81617_eval = _1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1ad159188_Data> _81817_d = _1ad1769be_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bc2e5ce9:;
			{
				jule::Ptr<_1ac50b580_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1ac50b580_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1ad16d862_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1bc2e5b95:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc2e5b40:;
	};
}



inline jule::Ptr<_1ad0c4b81_If> _1ad0cb68d_checkIf(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac460616_If> _83931_i) {
	jule::Ptr<_1ad0c4994_Scope> _84017_s = _1ad0ca7e1_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1ad159188_Data> _84217_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ad189c02_Prim> _84717_prim = _1ad18733c_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1ad18cbc2_IsBool(_84717_prim.ptr()))))) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ad0c4b81_If>(_1ad0c4b81_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1ad0c4d6d_Else> _1ad0cb99b_checkElse(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac4609bd_Else> _85933_e) {
	return jule::new_ptr<_1ad0c4d6d_Else>(_1ad0c4d6d_Else{._field_Scope=_1ad0ca7e1_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1ad0cbc21_checkConditional(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac460e41_Conditional> _86540_conditional) {
	jule::Ptr<_1ad0c505a_Conditional> _86617_c = jule::new_ptr<_1ad0c505a_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1ad0c4b81_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1ad0cb68d_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1bc2ee033:;
		if (it != expr.end()) {
			jule::Ptr<_1ac460616_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1ad0cb68d_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1bc2ee033:;
			++it;
			goto _iter_begin_1bc2ee033;
		}
		_iter_end_1bc2ee033:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1ad0cb99b_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1ad0cc183_checkIterScopeSsc(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1ac45a2d1_ScopeTree> _88154_tree, jule::Ptr<_1ad0c4994_Scope>& _88177_s, jule::Ptr<_1ad0c7799_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1ad0ca12b_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0cc5d4_checkIterScopeSc(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1ac45a2d1_ScopeTree> _88653_tree, jule::Ptr<_1ad0c7799_scopeChecker> _88675_ssc) {
	jule::Ptr<_1ad0c4994_Scope> _88717_scope = _1ad0c9c63_getChild(_self_.ptr());;
	_1ad0cc183_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0cc98b_checkIterScope(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1ac45a2d1_ScopeTree>& _89252_tree) {
	jule::Ptr<_1ad0c7799_scopeChecker> _89317_ssc = _1ad0d58c8_newChildChecker(_self_);;
	return _1ad0cc5d4_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1ad0ccc11_checkInfIter(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45d7bd_Iter>& _89737_it) {
	jule::Ptr<_1ad0c5247_InfIter> _89817_kind = jule::new_ptr<_1ad0c5247_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1ad0cc98b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1ad0cce86_checkWhileIter(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45d7bd_Iter>& _90339_it) {
	jule::Ptr<_1ac45e093_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1ac45e093_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1ad0ccc11_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1ad0c5434_WhileIter> _91017_kind = jule::new_ptr<_1ad0c5434_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1ad0cc98b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1ad159188_Data> _91521_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ad189c02_Prim> _92017_prim = _1ad18733c_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ad18cbc2_IsBool(_92017_prim.ptr())))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1ac45e3e5_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1ac5a8330_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1ad0d4410_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1ac5552cc_isValidStForNextSt(_94325_st)))) {
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1ad0cd20b_checkRangeIter(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45d7bd_Iter>& _95339_it) {
	jule::Ptr<_1ac45e934_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1ac45e934_RangeKind>();;
	jule::Ptr<_1ad159188_Data> _95617_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad0c5621_RangeIter> _96117_kind = jule::new_ptr<_1ad0c5621_RangeIter>(_1ad0c5621_RangeIter{._field_Expr=_95617_d, });;
	_1ad150426_rangeChecker _96517_rc = _1ad150426_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1ad151cda_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1ad0c7799_scopeChecker> _97817_ssc = _1ad0d58c8_newChildChecker(_self_);;
	jule::Ptr<_1ad0c4994_Scope> _97917_scope = _1ad0c9c63_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1ad0e77db_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ad0c9504_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1ad0e77db_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ad0c9504_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1ad0cc183_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1ad0cd481_checkIter(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45d7bd_Iter> _100333_it) {
	if (_1ac45db20_IsInf(_100333_it.ptr())) {
		_1ad0ccc11_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45e093_WhileKind>>()) {
			_case_begin_1bc31bcdc:;
			{
				_1ad0cce86_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45e934_RangeKind>>()) {
			_case_begin_1bc31b24d:;
			{
				_1ad0cd20b_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1bc31b11b:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bc31b77b:;
	};
}



inline jule::Bool _1ad0cd78e_checkValidContLabel(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1ad0c7799_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1ad0cda9c_checkValidBreakLabel(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1ad0c7799_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1ad0c6bc7_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1ad0c580d_ContSt> _1ad0cddaa_checkContValidScope(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac460193_ContSt> _105839_c) {
	if (_1ad0c8a42_isDeferred(_self_)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1ad0c580d_ContSt>();
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1bc3243bb:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1bc324443:;
			{
				return jule::new_ptr<_1ad0c580d_ContSt>(_1ad0c580d_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1bc324344:;
	};
	_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ad0ce130_checkCont(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac460193_ContSt> _108229_c) {
	jule::Ptr<_1ad0c580d_ContSt> _108317_cont = _1ad0cddaa_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1ad0c73c0_scopeLabel> _108921_label = _1ac597bb0_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
					_case_begin_1bc329cd9:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ad0c5247_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
					_case_begin_1bc32cd75:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ad0c5621_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
					_case_begin_1bc32cddb:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1ad0c5434_WhileIter>()));
					}
				}
				else {
					_case_begin_1bc32cc21:;
					{
						_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1bc32cb44:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1ad0cd78e_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1ad0ce3a5_checkLabel(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45794e_LabelSt> _112934_l) {
	if ((_1ad0c8dd8_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1ad0c5bd7_Label> _113517_label = jule::new_ptr<_1ad0c5bd7_Label>(_1ad0c5bd7_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ad0c73c0_scopeLabel>>::make({jule::new_ptr<_1ad0c73c0_scopeLabel>(_1ad0c73c0_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1ad0ce62a_pushGoto(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac457d06_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ad0c5dc4_GotoSt>(_1ad0c5dc4_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ad0c75ac_scopeGoto>>::make({jule::new_ptr<_1ad0c75ac_scopeGoto>(_1ad0c75ac_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1ad0ce8a0_checkPostfix(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac458c3b_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac44e4d4_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1ad159188_Data> _116717_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1ac5acbb4_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1ad187815_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad1919ea_Ptr> _117521_ptr = _1ad187815_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1ad1924bd_IsUnsafe(_117521_ptr.ptr())) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1ad185626_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1ad18733c_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ad0c4554_IsNum(_1ad18733c_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1ad185626_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ad0c60b1_Postfix>(_1ad0c60b1_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1ad0cebad_isNewAssignIdent(_1ad0c7799_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1a959c8bb_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1ad1574c7_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1ad0d010e_checkStructureAssignOp(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac466a3a_StructIns>& _120047_s, jule::Ptr<_1ac458c3b_AssignSt>& _120067_a, jule::Ptr<_1ad159188_Data>& _120086_r) {
	jule::Ptr<_1ac515831_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1bc340816:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1bc34087c:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1bc341790:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1bc341806:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1bc34186c:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1bc3418d3:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1bc341949:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1bc341a15:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1bc341a7b:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1bc341ae2:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bc3406d4:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1ac43c3c3_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1bc340629:;
	};
	if ((_120317_overload == nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1ac43c3c3_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1ac514962_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1ad0edddb_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1ad0d0384_checkSingleAssign(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac458c3b_AssignSt>& _123942_a) {
	jule::Ptr<_1ad159188_Data> _124017_l = nullptr;;
	if ((!(_1a959c8bb_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1ac44e4d4_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ad15ac06_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1ad0ed5d3_evalp(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1ad0c8569_isUnsafe(_self_);
	jule::Ptr<_1ad159188_Data> _125717_r = _1ad1769be_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1ad1863b3_Void(_125717_r.get()._field_Kind.ptr())) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1ac5acbb4_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1ad188ecb_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac50a716_OperandExprModel> _127917_lm = jule::new_ptr<_1ac50a716_OperandExprModel>(_1ac50a716_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1ac50a716_OperandExprModel> _128317_rm = jule::new_ptr<_1ac50a716_OperandExprModel>(_1ac50a716_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ad0c629d_Assign>(_1ad0c629d_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1ac466a3a_StructIns> _129021_strct = _1ad18878e_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1ad0d010e_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1ad178bd0_binaryEval _129721_solver = static__1ad1795d7_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1ad17e268_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1ad144c23_assignTypeChecker _130617_checker = _1ad144c23_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1ad145d9a_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1ad0d08b2_processEndPartOfMultiAssign(_1ad0c7799_scopeChecker* _self_, jule::Ptr<_1ad0c648a_MultiAssign> _131850_st, jule::Ptr<_1ac458c3b_AssignSt> _131913_a, jule::Ptr<_1ac4586ec_AssignLeft> _131931_lexpr, jule::Ptr<_1ad159188_Data> _131955_l, jule::Ptr<_1ad159188_Data> _131969_r) {
	if (_1a959c8bb_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_1ad1863b3_Void(_131969_r.get()._field_Kind.ptr())) {
			_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _1ad0cebad_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_1ad0c9504_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_1ad0e8248_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1ad0c87cd_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1ad112097_Var> _133721_v = jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_1ad1097dc_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1ac5acbb4_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1ad101b25_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_1ad144c23_assignTypeChecker _137217_checker = _1ad144c23_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_1ad145d9a_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _1ad0d0b48_checkRetMultiAssign(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac458c3b_AssignSt>& _138344_a) {
	jule::Ptr<_1ad159188_Data> _138417_rd = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad159188_Data>> _138917_r = _1ac5a86a4_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_1bc361738:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_1bc3617b0:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc360e0d:;
	};
	jule::Ptr<_1ad0c648a_MultiAssign> _140017_st = jule::new_ptr<_1ad0c648a_MultiAssign>(_1ad0c648a_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_1ad188ecb_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_1ac50d2a7_TupleExprModel>(_1ac50d2a7_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1bc364483:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_1ac4586ec_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_1ad159188_Data> _141021_l = nullptr;;
				if (((!(_1a959c8bb_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_1ad0cebad_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_1bc364483;
					};
				};
				_1ad0d08b2_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_1bc364483:;
			++it;
			_140813_i++;
			goto _iter_begin_1bc364483;
		}
		_iter_end_1bc364483:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _1ad0d0dbd_checkMultiAssign(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac458c3b_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4537a2_FnCallExpr>>()) {
			_case_begin_1bc368498:;
			{
				_1ad0d0b48_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac450c22_UnsafeExpr>>()) {
			_case_begin_1bc368520:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_1ac450c22_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ac4537a2_FnCallExpr>>()) {
						_case_begin_1bc36981d:;
						{
							_1ad0d0b48_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_1bc369796:;
				};
			}
		}
		_match_end_1bc367c8e:;
	};
	jule::Slice<jule::Any> _143917_right = _1ac5ab5ec_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1bc36a643:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1bc36a6ba:;
			{
				_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc36a500:;
	};
	jule::Ptr<_1ac50d2a7_TupleExprModel> _145017_rightTuple = jule::new_ptr<_1ac50d2a7_TupleExprModel>();;
	jule::Ptr<_1ad0c648a_MultiAssign> _145217_st = jule::new_ptr<_1ad0c648a_MultiAssign>(_1ad0c648a_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1bc36ce92:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_1ac4586ec_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_1ad159188_Data> _145821_l = nullptr;;
				if (((!(_1a959c8bb_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_1ad0cebad_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_1bc36ce92;
					};
				};
				jule::Ptr<_1ac44e4d4_Expr> _146821_expr = jule::new_ptr<_1ac44e4d4_Expr>(_1ac44e4d4_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_1ad15ac06_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_1ad0ed5d3_evalp(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));
				};
				jule::Ptr<_1ad159188_Data> _147821_r = _1ad1769be_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_1bc36ce92;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_1ad0d08b2_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_1bc36ce92:;
			++it;
			_145613_i++;
			goto _iter_begin_1bc36ce92;
		}
		_iter_end_1bc36ce92:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _1ad0d1143_checkAssignSt(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac458c3b_AssignSt> _149137_a) {
	{
		
		if (_1a959e967_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1bc374a9d:;
			{
				_1ad0ce8a0_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_1bc37476d:;
			{
				_1ad0d0384_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_1bc374707:;
			{
				_1ad0d0dbd_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_1bc374196:;
	};
}



inline jule::Ptr<_1ad0c4994_Scope> _1ad0d14ea_checkCaseScope(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ad0c6bc7_Case>& _150235_c, jule::Ptr<_1ac45a2d1_ScopeTree>& _150250_tree) {
	jule::Ptr<_1ad0c7799_scopeChecker> _150317_ssc = _1ad0d58c8_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _1ad0ca4d3_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_1ad0c6bc7_Case> _1ad0d19e5_checkCase(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ad0c6677_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_1ac461a8a_Case> _150856_c, jule::Ptr<_1ad159188_Data> _150875_expr) {
	jule::Ptr<_1ad0c6bc7_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1ad159188_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_1ad15ac06_Eval> _151217_eval = _1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bc379a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _151321_e = *it;
			{
				jule::Ptr<_1ad159188_Data> _151421_d = _1ad1763a3_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_1bc379a4d;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_1ac59a8e9_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _1ad185934_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_1ad187cdd_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1ad0ee33c_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_1ac524a3d_Trait> _152929_trt = _1ad188a03_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_1ad0ee33c_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1bc379a4d;
				};
				if (_151421_d.get()._field_Decl) {
					_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1bc379a4d;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_1ad144c23_assignTypeChecker _154721_checker = _1ad144c23_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_1ad145d9a_check(&_154721_checker);
			}
			_iter_next_1bc379a4d:;
			++it;
			goto _iter_begin_1bc379a4d;
		}
		_iter_end_1bc379a4d:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_1ad0d14ea_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _1ad0d1dad_checkCases(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac462261_MatchCase>& _156135_m, jule::Ptr<_1ad0c6677_Match> _156154_rm, jule::Ptr<_1ad159188_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1ad0c6bc7_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bc3831e9:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_1ad0c6bc7_Case> _156421_case = jule::new_ptr<_1ad0c6bc7_Case>(_1ad0c6bc7_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_1bc3831e9:;
			++it;
			_156313_i++;
			goto _iter_begin_1bc3831e9;
		}
		_iter_end_1bc3831e9:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bc38676e:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_1ac461a8a_Case> _157721_c = *it;
			{
				_1ad0d19e5_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_1bc38676e:;
			++it;
			_157714_i++;
			goto _iter_begin_1bc38676e;
		}
		_iter_end_1bc38676e:;
	};
}



inline jule::Ptr<_1ad0c6bc7_Case> _1ad0d2265_checkDefault(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ad0c6677_Match> _158236_m, jule::Ptr<_1ac4609bd_Else> _158251_d) {
	jule::Ptr<_1ad0c6bc7_Case> _158317_def = jule::new_ptr<_1ad0c6bc7_Case>(_1ad0c6bc7_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_1ad0d14ea_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _1ad0d24da_checkComptimePanic(_1ad0c7799_scopeChecker* _self_, jule::Ptr<_1ad0c4994_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bc389a80:;
			{
				jule::Ptr<_1ad159188_Data> _159817_d = _159513_stmt.operator jule::Ptr<_1ad159188_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>()) {
						_case_begin_1bc38a8b6:;
						{
							jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
									_case_begin_1bc38b8a6:;
									{
										jule::Ptr<_1ac49c202_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_1ac49c202_Const>();;
										if (_1ac505e5e_IsStr(_160425_c.ptr())) {
											_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1ac503ab6_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_1bc38b80c:;
							};
						}
					}
					_match_end_1bc38a773:;
				};
			}
		}
		_match_end_1bc389a2a:;
	};
}



inline void _1ad0d2809_pushTypeMatch(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ad0c6677_Match> _161337_tm, jule::Ptr<_1ac462261_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1bc38ad6c:;
			if (it != expr.end()) {
				jule::Ptr<_1ad0c6bc7_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_1ad0d24da_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1bc38ad6c:;
				++it;
				goto _iter_begin_1bc38ad6c;
			}
			_iter_end_1bc38ad6c:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_1ad0d2265_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_1ad0d24da_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _1ad0d2a7e_checkTypeMatch(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac462261_MatchCase>& _163739_m) {
	jule::Ptr<_1ad159188_Data> _163817_d = _1ad1766b1_eval(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1ad18733c_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_1ad188a03_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_1ad187cdd_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad0c6677_Match> _164917_tm = jule::new_ptr<_1ad0c6677_Match>(_1ad0c6677_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_1ad0d2265_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_1ad0d1dad_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_1ad0d2809_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _1ad0d2d04_checkCommonMatch(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac462261_MatchCase>& _166241_m) {
	jule::Ptr<_1ad159188_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1ac502543_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ad0c6677_Match> _167717_mc = jule::new_ptr<_1ad0c6677_Match>(_1ad0c6677_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_1ad0d2265_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_1ad0d1dad_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _1ad0d3079_checkMatch(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac462261_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_1ad0d2a7e_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_1ad0d2d04_checkCommonMatch(_self_, _168934_m);
}



inline void _1ad0d32ee_checkFall(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac4580e2_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1ad0c8a42_isDeferred(_self_))) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1ad0c6bc7_Case* _170517_case = ((_1ad0c6bc7_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1ad0c6ee6_FallSt>(_1ad0c6ee6_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_1ad0c59ea_BreakSt> _1ad0d360c_checkBreakWithLabel(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45ecdb_BreakSt> _171739_b) {
	jule::Ptr<_1ad0c59ea_BreakSt> _171817_brk = _1ad0d391a_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1ad0c73c0_scopeLabel> _172817_label = _1ac597bb0_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
				_case_begin_1bc3a49e0:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ad0c5247_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
				_case_begin_1bc3a8043:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ad0c5621_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
				_case_begin_1bc3a80a9:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ad0c5434_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
				_case_begin_1bc3a8120:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1ad0c6677_Match>()));
				}
			}
			else {
				_case_begin_1bc3a7dde:;
				{
					_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1bc3a7d12:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_1ad0cda9c_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1ad0cda9c_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_1ad0c59ea_BreakSt> _1ad0d391a_checkPlainBreak(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45ecdb_BreakSt> _177535_b) {
	if (_1ad0c8a42_isDeferred(_self_)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_1bc3ae3bd:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_1bc3ae445:;
			{
				return jule::new_ptr<_1ad0c59ea_BreakSt>(_1ad0c59ea_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1bc3ae4bc:;
			{
				return jule::new_ptr<_1ad0c59ea_BreakSt>(_1ad0c59ea_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1ad0c6bc7_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1bc3ae302:;
	};
	_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ad0d3b90_checkBreak(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45ecdb_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1ad0c59ea_BreakSt> _179921_brk = _1ad0d360c_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_1ad0c59ea_BreakSt> _180417_brk = _1ad0d391a_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _1ad0d3e15_checkRet(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45d15d_RetSt> _180832_r) {
	if (_1ad0c8a42_isDeferred(_self_)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad0c71d3_RetSt> _181317_rt = jule::new_ptr<_1ad0c71d3_RetSt>(_1ad0c71d3_RetSt{._field_Func=_1ad0c8b74_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_1ad15257c_retTypeChecker> _181817_rtc = jule::new_ptr<_1ad15257c_retTypeChecker>(_1ad15257c_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _1ad15346d_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _1ad0d418a_checkUseExpr(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac44ed75_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1ad0c8a42_isDeferred(_self_)) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1ad0d4410_checkNode(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45a2d1_ScopeTree>>()) {
			_case_begin_1bc3bc992:;
			{
				_1ad0caa66_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_1ac45a2d1_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45cca6_VarDecl>>()) {
			_case_begin_1bc3bc486:;
			{
				_1ad0c9779_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_1ac45cca6_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac461617_TypeAliasDecl>>()) {
			_case_begin_1bc3bc893:;
			{
				_1ad0c99ee_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_1ac461617_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44e4d4_Expr>>()) {
			_case_begin_1bc3bcbd4:;
			{
				_1ad0cb10a_checkExpr(_self_, _185534_node.operator jule::Ptr<_1ac44e4d4_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4510c9_CoExpr>>()) {
			_case_begin_1bc3bcd8d:;
			{
				_1ad0cb380_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_1ac4510c9_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac460e41_Conditional>>()) {
			_case_begin_1bc3bce04:;
			{
				_1ad0cbc21_checkConditional(_self_, _185534_node.operator jule::Ptr<_1ac460e41_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45d7bd_Iter>>()) {
			_case_begin_1bc3bce6a:;
			{
				_1ad0cd481_checkIter(_self_, _185534_node.operator jule::Ptr<_1ac45d7bd_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac460193_ContSt>>()) {
			_case_begin_1bc3bced1:;
			{
				_1ad0ce130_checkCont(_self_, _185534_node.operator jule::Ptr<_1ac460193_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45794e_LabelSt>>()) {
			_case_begin_1bc3bd047:;
			{
				_1ad0ce3a5_checkLabel(_self_, _185534_node.operator jule::Ptr<_1ac45794e_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac457d06_GotoSt>>()) {
			_case_begin_1bc3bd0ad:;
			{
				_1ad0ce62a_pushGoto(_self_, _185534_node.operator jule::Ptr<_1ac457d06_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac458c3b_AssignSt>>()) {
			_case_begin_1bc3bd124:;
			{
				_1ad0d1143_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_1ac458c3b_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac462261_MatchCase>>()) {
			_case_begin_1bc3bd18a:;
			{
				_1ad0d3079_checkMatch(_self_, _185534_node.operator jule::Ptr<_1ac462261_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4580e2_FallSt>>()) {
			_case_begin_1bc3bd201:;
			{
				_1ad0d32ee_checkFall(_self_, _185534_node.operator jule::Ptr<_1ac4580e2_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45ecdb_BreakSt>>()) {
			_case_begin_1bc3bd267:;
			{
				_1ad0d3b90_checkBreak(_self_, _185534_node.operator jule::Ptr<_1ac45ecdb_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45d15d_RetSt>>()) {
			_case_begin_1bc3bd2cd:;
			{
				_1ad0d3e15_checkRet(_self_, _185534_node.operator jule::Ptr<_1ac45d15d_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44ed75_UseExpr>>()) {
			_case_begin_1bc3bd344:;
			{
				_1ad0d418a_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_1ac44ed75_UseExpr>());
			}
		}
		else {
			_case_begin_1bc3bc60c:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bc3bc530:;
	};
}



inline void _1ad0d45db_checkResult(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	_1ac459bc6_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44ed75_UseExpr>>()) {
			_case_begin_1bc3c7271:;
			{
				jule::Ptr<_1ac44ed75_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_1ac44ed75_UseExpr>();;
				jule::Ptr<_1ad159188_Data> _189921_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_1ad15257c_retTypeChecker> _190421_rtc = jule::new_ptr<_1ad15257c_retTypeChecker>(_1ad15257c_retTypeChecker{._field_sc=_self_, ._field_types=_1ac516953_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_1ad15346d_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44e4d4_Expr>>()) {
			_case_begin_1bc3c72d7:;
			{
				jule::Ptr<_1ac44e4d4_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_1ac44e4d4_Expr>();;
				jule::Ptr<_1ad159188_Data> _191221_d = _1ad1769be_evalExpr(_1ad0ed8e1_eval(_self_.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1bc3cb9c3:;
						{
							jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>();;
							_1ad0cad85_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_1bc3cb880:;
						{
							return;;
						}
					}
					_match_end_1bc3cb82a:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac457d06_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1ac45ecdb_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1ac460193_ContSt>>() || _match_expr.type_is<jule::Ptr<_1ac45d15d_RetSt>>()) {
			_case_begin_1bc3c6935:;
			{
				_1ad0d4410_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_1bc3c68be:;
			{
				_1ad0d4410_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_1bc3c6748:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1ad0d47b7_checkTree(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_1ac459bc6_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1ad0d4410_checkNode(_self_, _194821_stmt._field_Data);
			if (_1ad0c8910_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1bc3cee16:;
	}
	_iter_end_1bc3cee16:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1ad0d45db_checkResult(_self_);
	};
}



inline void _1ad0d4ad6_checkGoto(_1ad0c7799_scopeChecker* _self_, jule::Ptr<_1ad0c75ac_scopeGoto>& _195933_gt, jule::Ptr<_1ad0c73c0_scopeLabel>& _195954_label) {
	jule::Ptr<_1ad0c7799_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_1bc3d3007:;
	}
	_iter_end_1bc3d3007:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1bc3d5603:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_1ac599a3b_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_1bc3d5603;
					};
				}
				_iter_next_1bc3d5603:;
				++it;
				_198117_j++;
				goto _iter_begin_1bc3d5603;
			}
			_iter_end_1bc3d5603:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_1ac5968e5_stmtIsDef(_199121_stmt)) {
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1bc3d516e:;
	}
	_iter_end_1bc3d516e:;;
}



inline void _1ad0d4cb2_checkGotos(_1ad0c7799_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1bc3d755b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c75ac_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_1ad0c73c0_scopeLabel> _200121_label = _1ad0c914c_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1bc3d755b;
				};
				_200121_label.get()._field_used=true;
				_1ad0d4ad6_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_1bc3d755b:;
			++it;
			goto _iter_begin_1bc3d755b;
		}
		_iter_end_1bc3d755b:;
	};
}



inline void _1ad0d4e8d_checkLabels(_1ad0c7799_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1bc3daa04:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c73c0_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1bc3daa04:;
			++it;
			goto _iter_begin_1bc3daa04;
		}
		_iter_end_1bc3daa04:;
	};
}



inline void _1ad0d5169_checkVars(_1ad0c7799_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc3dadde:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_1a959c8bb_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_1a959cb63_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_1bc3dadde:;
			++it;
			goto _iter_begin_1bc3dadde;
		}
		_iter_end_1bc3dadde:;
	};
}



inline void _1ad0d5345_checkAliases(_1ad0c7799_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc3dcb6b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad184537_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_1a959c8bb_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_1a959cb63_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_1bc3dcb6b:;
			++it;
			goto _iter_begin_1bc3dcb6b;
		}
		_iter_end_1bc3dcb6b:;
	};
}



inline void _1ad0d5664_check(jule::Ptr<_1ad0c7799_scopeChecker> _self_, jule::Ptr<_1ac45a2d1_ScopeTree>& _203730_tree, jule::Ptr<_1ad0c4994_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_1ad0d47b7_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1ad0d5169_checkVars(_self_.ptr());
		_1ad0d5345_checkAliases(_self_.ptr());
		if (_1ad0c869b_isRoot(_self_.ptr())) {
			_1ad0d4cb2_checkGotos(_self_.ptr());
			_1ad0d4e8d_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1ad0c7799_scopeChecker> _1ad0d58c8_newChildChecker(jule::Ptr<_1ad0c7799_scopeChecker> _self_) {
	jule::Ptr<_1ad0c7799_scopeChecker> _206117_base = _1ac587d59_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0c7799_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ad0d68b8_checkCdef(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
			_case_begin_1bc3e5459:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac512b80_Fn>().get()._field_CppLinked) {
					goto _match_end_1bc3e569b;
				};
				goto _case_begin_1bc3e5701;
			}
		}
		else {
			_case_begin_1bc3e5701:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc3e569b:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ad0d6b3d_checkTypedef(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc3e8539:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_CppLinked) {
					goto _match_end_1bc3e7deb;
				};
				goto _case_begin_1bc3e7e51;
			}
		}
		else {
			_case_begin_1bc3e7e51:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc3e7deb:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ad0d6db3_checkDerive(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc3ea44d:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_CppLinked))) {
					goto _match_end_1bc3ea66d;
				};
				goto _case_begin_1bc3ea6c3;
			}
		}
		else {
			_case_begin_1bc3ea6c3:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc3ea66d:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1bc3ee155:;
		}
		else {
			_case_begin_1bc3ea805:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1bc3edc15:;
	};
}



inline void _1ad0d7138_checkNamespace(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc400b18:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_CppLinked))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
			_case_begin_1bc4001bc:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac512b80_Fn>().get()._field_CppLinked))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc400662:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ad112097_Var>().get()._field_CppLinked))) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1bc400530:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc4004ca:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a959a127_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc408c64:;
			{
				if ((_1ad17e972_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ac41195d_Directive> _11625_typedef = jule::new_ptr<_1ac41195d_Directive>(_1ac41195d_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1ac41195d_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1bc406b41:;
	};
}



inline void _1ad0d73ad_checkDeprecated(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc4099ce:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_CppLinked) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
			_case_begin_1bc40b01e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac512b80_Fn>().get()._field_CppLinked) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc40b085:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ad112097_Var>().get()._field_CppLinked) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1bc40a925:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc4092c5:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a959a127_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1ad0d7633_checkTest(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
			_case_begin_1bc4137eb:;
			{
				jule::Ptr<_1ac512b80_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1ac512b80_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1ac51382e_IsInit(_16717_f.ptr())))) && (!(_1ac5135ba_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1bc414313;
				};
				if (_1ac513356_IsMethod(_16717_f.ptr())) {
					_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1bc414313;
				};
				goto _case_begin_1bc414368;
			}
		}
		else {
			_case_begin_1bc414368:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc414313:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ad0d78a8_checkDirective(_1ad0d6478_directiveChecker* _self_, jule::Ptr<_1ac41195d_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1bc418b0e:;
			{
				_1ad0d68b8_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1bc4182d4:;
			{
				_1ad0d6b3d_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1bc41834a:;
			{
				_1ad0d6db3_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1bc4183b1:;
			{
				_1ad0d7138_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1bc418427:;
			{
				_1ad0d73ad_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1bc419071:;
			{
				_1ad0d7633_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1bc4190d7:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1bc41826d:;
			{
				_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1bc4181b3:;
	};
}



inline void _1ad0d7a84_check(_1ad0d6478_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1bc41b6a0:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _20821_d = *it;
			{
				_1ad0d78a8_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1bc41b6a0:;
			++it;
			goto _iter_begin_1bc41b6a0;
		}
		_iter_end_1bc41b6a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0d6478_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0dc638_FindPackage(_1ad0dc11b_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0dc946_SelectPackage(_1ad0dc11b_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ad112097_Var> _1ad0dcced_FindVar(_1ad0dc11b_ImportInfo* _self_, jule::Str _18126_ident, jule::Bool ) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _18126_ident)))) {
		return nullptr;
	};
	return _1ad0d9c1d_findVarInPackage((*_self_)._field_Package.get()._field_Files,_18126_ident,false);
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad0dd1a5_FindTypeAlias(_1ad0dc11b_ImportInfo* _self_, jule::Str _19332_ident, jule::Bool ) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _19332_ident)))) {
		return nullptr;
	};
	return _1ad0da14c_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_19332_ident,false);
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad0dd55c_FindStruct(_1ad0dc11b_ImportInfo* _self_, jule::Str _20529_ident, jule::Bool ) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _20529_ident)))) {
		return nullptr;
	};
	return _1ad0da537_findStructInPackage((*_self_)._field_Package.get()._field_Files,_20529_ident,false);
}



inline jule::Ptr<_1ac512b80_Fn> _1ad0dd914_FindFn(_1ad0dc11b_ImportInfo* _self_, jule::Str _21725_ident, jule::Bool ) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _21725_ident)))) {
		return nullptr;
	};
	return _1ad0da999_findFnInPackage((*_self_)._field_Package.get()._field_Files,_21725_ident,false);
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad0ddc22_FindTrait(_1ad0dc11b_ImportInfo* _self_, jule::Str _22828_ident) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _22828_ident)))) {
		return nullptr;
	};
	return _1ad0daca7_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_22828_ident);
}



inline jule::Ptr<_1ac526b83_Enum> _1ad0de030_FindEnum(_1ad0dc11b_ImportInfo* _self_, jule::Str _23927_ident) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _23927_ident)))) {
		return nullptr;
	};
	return _1ad0db0e8_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_23927_ident);
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0de33d_FindTypeEnum(_1ad0dc11b_ImportInfo* _self_, jule::Str _25031_ident) {
	if ((!(_1ad0de6d4_isLookupable(&(*_self_), _25031_ident)))) {
		return nullptr;
	};
	return _1ad0db439_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_25031_ident);
}



inline jule::Bool _1ad0de6d4_isLookupable(_1ad0dc11b_ImportInfo* _self_, jule::Str _25927_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1ad0de9e2_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1ad0de9e2_existIdent(&(*_self_), _25927_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1ad0de9e2_existIdent(_1ad0dc11b_ImportInfo* _self_, jule::Str _27925_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bc4314b7:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_Kind == _27925_ident)) {
					return true;
				};
			}
			_iter_next_1bc4314b7:;
			++it;
			goto _iter_begin_1bc4314b7;
		}
		_iter_end_1bc4314b7:;
	};
	return false;
}



inline jule::Bool _1ad0dec78_isAccessibleViaSelection(_1ad0dc11b_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1ad0de9e2_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0dc11b_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e054d_FindPackage(_1ad0e0075_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e085b_SelectPackage(_1ad0e0075_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ad112097_Var> _1ad0e0c13_FindVar(_1ad0e0075_Package* _self_, jule::Str _30926_ident, jule::Bool _30938_cpp_linked) {
	return _1ad0d9c1d_findVarInPackage((*_self_)._field_Files,_30926_ident,_30938_cpp_linked);
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad0e10ba_FindTypeAlias(_1ad0e0075_Package* _self_, jule::Str _31532_ident, jule::Bool _31544_cpp_linked) {
	return _1ad0da14c_findTypeAliasInPackage((*_self_)._field_Files,_31532_ident,_31544_cpp_linked);
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad0e1472_FindStruct(_1ad0e0075_Package* _self_, jule::Str _32129_ident, jule::Bool _32141_cpp_linked) {
	return _1ad0da537_findStructInPackage((*_self_)._field_Files,_32129_ident,_32141_cpp_linked);
}



inline jule::Ptr<_1ac512b80_Fn> _1ad0e1829_FindFn(_1ad0e0075_Package* _self_, jule::Str _32725_ident, jule::Bool _32737_cpp_linked) {
	return _1ad0da999_findFnInPackage((*_self_)._field_Files,_32725_ident,_32737_cpp_linked);
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad0e1b37_FindTrait(_1ad0e0075_Package* _self_, jule::Str _33328_ident) {
	return _1ad0daca7_findTraitInPackage((*_self_)._field_Files,_33328_ident);
}



inline jule::Ptr<_1ac526b83_Enum> _1ad0e1e45_FindEnum(_1ad0e0075_Package* _self_, jule::Str _33927_ident) {
	return _1ad0db0e8_findEnumInPackage((*_self_)._field_Files,_33927_ident);
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0e2253_FindTypeEnum(_1ad0e0075_Package* _self_, jule::Str _34531_ident) {
	return _1ad0db439_findTypeEnumInPackage((*_self_)._field_Files,_34531_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0e0075_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e5784_FindPackage(_1ad0e5267_Sema* _self_, jule::Str _21930_ident) {
	return _1ad154947_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad0e5a92_SelectPackage(_1ad0e5267_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _22932_selector) {
	return _1ad154c55_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_1ad112097_Var> _1ad0e5e49_FindVar(_1ad0e5267_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_1ad112097_Var> _24117_v = _1ad0d9c1d_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc458d80:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_1bc458d80;
				};
				_24117_v=_1ad0dcced_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1bc458d80:;
			++it;
			goto _iter_begin_1bc458d80;
		}
		_iter_end_1bc458d80:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad0e6301_FindTypeAlias(_1ad0e5267_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_1ad184537_TypeAlias> _26817_ta = _1ad0da14c_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc45b833:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_1bc45b833;
				};
				_26817_ta=_1ad0dd1a5_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1bc45b833:;
			++it;
			goto _iter_begin_1bc45b833;
		}
		_iter_end_1bc45b833:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad0e66a8_FindStruct(_1ad0e5267_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_1ac43a6e0_Struct> _29517_s = _1ad0da537_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc45e2d6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_1bc45e2d6;
				};
				_29517_s=_1ad0dd55c_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1bc45e2d6:;
			++it;
			goto _iter_begin_1bc45e2d6;
		}
		_iter_end_1bc45e2d6:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac512b80_Fn> _1ad0e6a60_FindFn(_1ad0e5267_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_1ac512b80_Fn> _32017_f = _1ad0da999_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc461c89:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_1bc461c89;
				};
				_32017_f=_1ad0dd914_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1bc461c89:;
			++it;
			goto _iter_begin_1bc461c89;
		}
		_iter_end_1bc461c89:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad0e6d6d_FindTrait(_1ad0e5267_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_1ac524a3d_Trait> _34717_t = _1ad0daca7_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc4643c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_1bc4643c9;
				};
				_34717_t=_1ad0ddc22_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1bc4643c9:;
			++it;
			goto _iter_begin_1bc4643c9;
		}
		_iter_end_1bc4643c9:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac526b83_Enum> _1ad0e717b_FindEnum(_1ad0e5267_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_1ac526b83_Enum> _37417_e = _1ad0db0e8_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc466b18:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_1bc466b18;
				};
				_37417_e=_1ad0de030_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1bc466b18:;
			++it;
			goto _iter_begin_1bc466b18;
		}
		_iter_end_1bc466b18:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0e7489_FindTypeEnum(_1ad0e5267_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_1ac52827d_TypeEnum> _40117_e = _1ad0db439_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc469357:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1ad0e3b8e_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_1bc469357;
				};
				_40117_e=_1ad0de33d_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _1ad0e8600_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1bc469357:;
			++it;
			goto _iter_begin_1bc469357;
		}
		_iter_end_1bc469357:;
	};
	return nullptr;
}



inline jule::Bool _1ad0e77db_isFlag(_1ad0e5267_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1ad0e7a61_setCurrentFile(_1ad0e5267_Sema* _self_, jule::Ptr<_1ad15442a_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1ad0e7e29_pushErr(_1ad0e5267_Sema* _self_, jule::Ptr<_1a959a127_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad0e384d_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1ad0e8248_pushSugggestion(_1ad0e5267_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1ad0e4cd3_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1ad0e8600_isAccessibleDefine(_1ad0e5267_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1a959a127_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1a95a0da8_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1a95a0da8_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1ad0e8a51_isDuplicatedIdent(_1ad0e5267_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1bc47101d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> &_44516_f = *it;
			{
				if (_1ad157928_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1bc4718d1:;
					if (it != expr.end()) {
						jule::Ptr<_1ad0dc11b_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1bc47276c:;
								if (it != expr.end()) {
									jule::Ptr<_1a959a127_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1bc47276c:;
									++it;
									goto _iter_begin_1bc47276c;
								}
								_iter_end_1bc47276c:;
							};
						}
						_iter_next_1bc4718d1:;
						++it;
						goto _iter_begin_1bc4718d1;
					}
					_iter_end_1bc4718d1:;
				};
			}
			_iter_next_1bc47101d:;
			++it;
			goto _iter_begin_1bc47101d;
		}
		_iter_end_1bc47101d:;
	};
	return false;
}



inline void _1ad0e8d70_checkDirectives(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _46140_d, jule::Any _46166_o) {
	_1ad0d6478_directiveChecker _46217_dc = _1ad0d6478_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ac41195d_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1ad0d7a84_check(&_46217_dc);
}



inline jule::Bool _1ad0e92c1_checkGenericQuantity(_1ad0e5267_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1a959a127_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1bc4754a6:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1bc475583:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1bc4755e9:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1bc4752ca:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1bc474d46:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1bc474c69:;
	};
}



inline jule::Bool _1ad0e969a_isDuplicatedImportSelection(_1ad0e5267_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc478531:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1bc478531;
				};
				if (_1ad0de9e2_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1bc478531:;
			++it;
			goto _iter_begin_1bc478531;
		}
		_iter_end_1bc478531:;
	};
	return false;
}



inline jule::Any _1ad0e9a63_getImportDef(_1ad0e5267_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1ad0dc11b_ImportInfo>& _50244_imp) {
	if ((_1ad238cb2_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc479d7e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1ad1574c7_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1bc479d7e:;
			++it;
			goto _iter_begin_1bc479d7e;
		}
		_iter_end_1bc479d7e:;
	};
	return nullptr;
}



inline jule::Bool _1ad0e9d71_checkImportSelections(_1ad0e5267_Sema* _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _51745_imp) {
	jule::Bool _51765_ok = jule::Bool();
	_51765_ok=true;
	{
		auto &expr = _51745_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1bc47c3e2:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> _51916_ident = *it;
			{
				if ((_51916_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1bc47c3e2;
				};
				if (_1ad0e969a_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51745_imp)),_51916_ident.get()._field_Kind)) {
					_1ad0e7e29_pushErr(&(*_self_), _51916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
					_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51765_ok=false;
					goto _iter_next_1bc47c3e2;
				};
				jule::Any _53121_def = _1ad0e9a63_getImportDef(&(*_self_), _51916_ident.get()._field_Kind,_51745_imp);;
				{
					auto &_match_expr{ _53121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1bc47e47c:;
						{
							goto _iter_next_1bc47c3e2;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
						_case_begin_1bc47edea:;
						{
							jule::Ptr<_1ad112097_Var> _53725_v = _53121_def.operator jule::Ptr<_1ad112097_Var>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _53725_v.get()._field_Public,_53725_v.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
						_case_begin_1bc47ee61:;
						{
							jule::Ptr<_1ad184537_TypeAlias> _54225_ta = _53121_def.operator jule::Ptr<_1ad184537_TypeAlias>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _54225_ta.get()._field_Public,_54225_ta.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
						_case_begin_1bc47eec7:;
						{
							jule::Ptr<_1ac43a6e0_Struct> _54725_strct = _53121_def.operator jule::Ptr<_1ac43a6e0_Struct>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _54725_strct.get()._field_Public,_54725_strct.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac524a3d_Trait>>()) {
						_case_begin_1bc480a55:;
						{
							jule::Ptr<_1ac524a3d_Trait> _55225_t = _53121_def.operator jule::Ptr<_1ac524a3d_Trait>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _55225_t.get()._field_Public,_55225_t.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac526b83_Enum>>()) {
						_case_begin_1bc480abb:;
						{
							jule::Ptr<_1ac526b83_Enum> _55725_e = _53121_def.operator jule::Ptr<_1ac526b83_Enum>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _55725_e.get()._field_Public,_55725_e.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac52827d_TypeEnum>>()) {
						_case_begin_1bc480b32:;
						{
							jule::Ptr<_1ac52827d_TypeEnum> _56225_e = _53121_def.operator jule::Ptr<_1ac52827d_TypeEnum>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _56225_e.get()._field_Public,_56225_e.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
						_case_begin_1bc480b98:;
						{
							jule::Ptr<_1ac512b80_Fn> _56725_f = _53121_def.operator jule::Ptr<_1ac512b80_Fn>();;
							if (_1ad0e8600_isAccessibleDefine(&(*_self_), _56725_f.get()._field_Public,_56725_f.get()._field_Token)) {
								goto _iter_next_1bc47c3e2;
							};
						}
					}
					else {
						_case_begin_1bc47eb86:;
						{
							_1ad0e7e29_pushErr(&(*_self_), _51916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
							_51765_ok=false;
							goto _iter_next_1bc47c3e2;
						}
					}
					_match_end_1bc47cb0c:;
				};
				_1ad0e7e29_pushErr(&(*_self_), _51916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
				_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51765_ok=false;
			}
			_iter_next_1bc47c3e2:;
			++it;
			goto _iter_begin_1bc47c3e2;
		}
		_iter_end_1bc47c3e2:;
	};
	return _51765_ok;
}



inline jule::Bool _1ad0ea17e_isUseAliasDuplication(_1ad0e5267_Sema* _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _58441_imp) {
	if ((_58441_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc4888d7:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _58921_imp2 = *it;
			{
				if ((_58921_imp2 == _58441_imp)) {
					goto _iter_end_1bc4888d7;
				};
				if ((_58921_imp2.get()._field_Alias == _58441_imp.get()._field_Alias)) {
					return true;
				};
				if (((_58921_imp2.get()._field_Ident == _58921_imp2.get()._field_LinkPath) && (_58921_imp2.get()._field_Ident == _58441_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1bc4888d7:;
			++it;
			goto _iter_begin_1bc4888d7;
		}
		_iter_end_1bc4888d7:;
	};
	return false;
}



inline jule::Bool _1ad0ea48c_checkImport(_1ad0e5267_Sema* _self_, jule::Ptr<_1ad0dc11b_ImportInfo>& _60435_imp) {
	if ((_60435_imp.get()._field_CppLinked || (_60435_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1ad0ea17e_isUseAliasDuplication(&(*_self_), _60435_imp)) {
		_1ad0e7e29_pushErr(&(*_self_), _60435_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_60435_imp.get()._field_Alias)}));
		_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_60435_imp.get()._field_Duplicate))) {
		jule::Ptr<_1ad0e5267_Sema> _61521_sema = jule::new_ptr<_1ad0e5267_Sema>(_1ad0e5267_Sema{._field_flags=(*_self_)._field_flags});;
		_1ad10e0b6_check(_61521_sema, _60435_imp.get()._field_Package.get()._field_Files);
		if ((_61521_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_61521_sema.get()._field_errors);
			_61521_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1ad0e9d71_checkImportSelections(&(*_self_), _60435_imp);
}



inline void _1ad0ea668_checkImports(_1ad0e5267_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1bc48db62:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _62921_file = *it;
			{
				_1ad0e7a61_setCurrentFile(&(*_self_), _62921_file);
				{
					auto &expr = _62921_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1bc490191:;
					if (it != expr.end()) {
						jule::Ptr<_1ad0dc11b_ImportInfo> _63125_imp = *it;
						{
							jule::Bool _63221_ok = _1ad0ea48c_checkImport(&(*_self_), _63125_imp);;
							if ((!(_63221_ok))) {
								_1ad0e7e29_pushErr(&(*_self_), _63125_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63125_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1bc490191:;
						++it;
						goto _iter_begin_1bc490191;
					}
					_iter_end_1bc490191:;
				};
			}
			_iter_next_1bc48db62:;
			++it;
			goto _iter_begin_1bc48db62;
		}
		_iter_end_1bc48db62:;
	};
}



inline void _1ad0ea844_implFileImpls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1bc4908ab:;
		if (it != expr.end()) {
			jule::Ptr<_1ac5ae0b1_Impl> _64321_imp = *it;
			{
				_1ad10619b_implImpl(_self_, _64321_imp);
			}
			_iter_next_1bc4908ab:;
			++it;
			goto _iter_begin_1bc4908ab;
		}
		_iter_end_1bc4908ab:;
	};
}



inline void _1ad0eaa20_implImpls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc492083:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _64921_file = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _64921_file);
				_1ad0ea844_implFileImpls(_self_);
			}
			_iter_next_1bc492083:;
			++it;
			goto _iter_begin_1bc492083;
		}
		_iter_end_1bc492083:;
	};
}



inline void _1ad0eabeb_checkEnums(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc493617:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _65621_file = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _65621_file);
				_1ad1037c5_checkEnumDecls(_self_);
			}
			_iter_next_1bc493617:;
			++it;
			goto _iter_begin_1bc493617;
		}
		_iter_end_1bc493617:;
	};
}



inline _1ad193755_typeChecker _1ad0eb14c_typeChecker(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Trait<_1ad1a5bb8_Lookup> _66235_l, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _66250_generics, jule::Ptr<_1ad192941_referencer> _66313_referencer) {
	_1ad193755_typeChecker _66417_tc = _1ad193755_typeChecker{._field_s=_self_, ._field_rootLookup=_66235_l, ._field_lookup=_66235_l, ._field_referencer=_66313_referencer, ._field_useGenerics=_66250_generics, };;
	{
		auto &_match_expr{ _66235_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc495130:;
			{
				jule::Ptr<_1ad0c7799_scopeChecker> _67321_hard = _1ad0c8ca6_getHardRoot(_66235_l.operator jule::Ptr<_1ad0c7799_scopeChecker>());;
				_66417_tc._field_refers=_67321_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1bc495042:;
	};
	if (((_66313_referencer != nullptr) && (_66313_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _66313_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
				_case_begin_1bc4955a3:;
				{
					_66417_tc._field_ownerAlias=_66313_referencer.get()._field_owner.operator jule::Ptr<_1ad184537_TypeAlias>();
				}
			}
			_match_end_1bc49554d:;
		};
	};
	return _66417_tc;
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad0eb647_buildTypeWithRefers(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _68944_t, jule::Trait<_1ad1a5bb8_Lookup> _68967_l, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _69013_generics, jule::Ptr<_1ad192941_referencer> _69041_referencer) {
	return ({ auto _wrap_copy = _1ad0eb14c_typeChecker(_self_, _68967_l,_69013_generics,_69041_referencer); _1ad1a082d_checkDecl(&_wrap_copy, _68944_t); });
}



inline jule::Bool _1ad0ebb42_checkTypeWithRefers(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad189383_TypeSymbol>& _69644_t, jule::Trait<_1ad1a5bb8_Lookup> _69664_l, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _69713_generics, jule::Ptr<_1ad192941_referencer> _69741_referencer) {
	jule::Bool _69768_ok = jule::Bool();
	if (_1ad18973a_checked(_69644_t.ptr())) {
		_69768_ok = true;
		return _69768_ok;
	};
	_69644_t.get()._field_Kind=_1ad0eb647_buildTypeWithRefers(_self_, _69644_t.get()._field_Decl,_69664_l,_69713_generics,_69741_referencer);
	_69768_ok = _1ad18973a_checked(_69644_t.ptr());
	return _69768_ok;
}



inline jule::Ptr<_1ac540d78_constraintChecker> _1ad0ebda6_constraintChecker(jule::Ptr<_1ad0e5267_Sema> _self_) {
	return jule::new_ptr<_1ac540d78_constraintChecker>(_1ac540d78_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1ad0ec25d_checkType(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad189383_TypeSymbol>& _71134_t, jule::Trait<_1ad1a5bb8_Lookup> _71154_l) {
	return _1ad0ebb42_checkTypeWithRefers(_self_, _71134_t,_71154_l,nullptr,nullptr);
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ec6ae_buildTypeWithGenerics(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _71746_t, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _71813_generics, jule::Ptr<_1ac518702_ReferenceStack> _71841_refers) {
	jule::Ptr<_1ad193755_typeChecker> _71917_tc = jule::new_ptr<_1ad193755_typeChecker>(_1ad193755_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_refers=_71841_refers, ._field_useGenerics=_71813_generics, });;
	return _1ad1a082d_checkDecl(_71917_tc.ptr(), _71746_t);
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ec9bc_buildType(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _73034_t) {
	return _1ad0ec6ae_buildTypeWithGenerics(_self_, _73034_t,nullptr,nullptr);
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad0eccca_selectType(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _73535_t) {
	jule::Ptr<_1ad193755_typeChecker> _73617_tc = jule::new_ptr<_1ad193755_typeChecker>(_1ad193755_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ad1a082d_checkDecl(_73617_tc.ptr(), _73535_t);
}



inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed22b_evalpd(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Trait<_1ad1a5bb8_Lookup> _74730_l, jule::Ptr<_1ad18522a_TypeKind> _74745_p, jule::Ptr<_1ad112097_Var> _74763_owner) {
	jule::Ptr<_1ad15ac06_Eval> _74817_e = jule::new_ptr<_1ad15ac06_Eval>(_1ad15ac06_Eval{._field_s=_self_, ._field_lookup=_74730_l, ._field_owner=_74763_owner, });;
	{
		auto &_match_expr{ _74730_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc49ec50:;
			{
				_74817_e.get()._field_unsafety=_1ad0c8569_isUnsafe(_74730_l.operator jule::Ptr<_1ad0c7799_scopeChecker>());
			}
		}
		_match_end_1bc49ebd9:;
	};
	_74817_e.get()._field_prefix=_74745_p;
	return _74817_e;
}



inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed5d3_evalp(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Trait<_1ad1a5bb8_Lookup> _76229_l, jule::Ptr<_1ad18522a_TypeKind> _76244_p) {
	return _1ad0ed22b_evalpd(_self_, _76229_l,_76244_p,nullptr);
}



inline jule::Ptr<_1ad15ac06_Eval> _1ad0ed8e1_eval(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Trait<_1ad1a5bb8_Lookup> _76728_l) {
	return _1ad0ed5d3_evalp(_self_, _76728_l,nullptr);
}



inline jule::Bool _1ad0edddb_checkAssignType(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Bool _77135_destIsRef, jule::Ptr<_1ad18522a_TypeKind>& _77157_dest, jule::Ptr<_1ad159188_Data>& _77214_d, jule::Ptr<_1a959a127_Token> _77228_errorToken) {
	if (_77214_d.get()._field_Decl) {
		_1ad0e7e29_pushErr(_self_.ptr(), _77228_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77135_destIsRef) {
		if ((!(_1ad185934_Equals(_77157_dest, _77214_d.get()._field_Kind)))) {
			_1ad0e7e29_pushErr(_self_.ptr(), _77228_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_77157_dest.ptr())),jule::Any(_1ad185626_Str(_77214_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1ad144c23_assignTypeChecker> _78321_atc = jule::new_ptr<_1ad144c23_assignTypeChecker>(_1ad144c23_assignTypeChecker{._field_s=_self_, ._field_dest=_77157_dest, ._field_d=_77214_d, ._field_errorToken=_77228_errorToken});;
		jule::Bool _78917_ok = _1ad145d9a_check(_78321_atc.ptr());;
		if ((!(_78917_ok))) {
			return false;
		};
	};
	if (((!(_1ad159a4b_IsConst(_77214_d.ptr()))) || (_1ad18733c_Prim(_77157_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79917_kind = _1ad18733c_Prim(_77157_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ad0c407b_IsSigInt(_79917_kind)) {
			_case_begin_1bc4a663b:;
			{
				_1ac5047dc_SetI64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ad0c41ad_IsUnsigInt(_79917_kind)) {
			_case_begin_1bc4a66b3:;
			{
				_1ac504a62_SetU64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ad0c4422_IsFloat(_79917_kind)) {
			_case_begin_1bc4a673a:;
			{
				_1ac5052d2_SetF64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ac504567_AsF64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1bc4a6570:;
	};
	return true;
}



inline jule::Bool _1ad0ee33c_checkTypeCompatibility(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad18522a_TypeKind>& _81347_dest, jule::Ptr<_1ad18522a_TypeKind>& _81414_src, jule::Ptr<_1a959a127_Token>& _81435_errorToken) {
	if ((_81414_src == nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_81347_dest.ptr())),jule::Any(_1ad185626_Str(_81414_src.ptr()))}));
		return false;
	};
	if ((_1ad188ecb_Tup(_81414_src.ptr()) != nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_81347_dest.ptr())),jule::Any(_1ad185626_Str(_81414_src.ptr()))}));
		return false;
	};
	_1ad1430ea_typeCompatibilityChecker _82817_tcc = _1ad1430ea_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_81347_dest, ._field_src=_81414_src, ._field_errorToken=_81435_errorToken};;
	if (_1ad1446d4_check(&_82817_tcc)) {
		return true;
	};
	_1ad0e7e29_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_81347_dest.ptr())),jule::Any(_1ad185626_Str(_81414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad0ee716_buildNonGenericTypeKind(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _84948_ast, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>& _85014_generics) {
	jule::Ptr<_1ad193755_typeChecker> _85117_tc = jule::new_ptr<_1ad193755_typeChecker>(_1ad193755_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_ignoreGenerics=_85014_generics, });;
	return _1ad1a082d_checkDecl(_85117_tc.ptr(), _84948_ast);
}



inline void _1ad0ee9be_buildFnNonGenericTypeKinds(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns>& _86051_f) {
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _86117_generics = nullptr;;
	if (_1ac513356_IsMethod(_86051_f.get()._field_Decl.ptr())) {
		_86117_generics=jule::append(_86051_f.get()._field_Decl.get()._field_Generics,_86051_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_86117_generics=_86051_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _86051_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc4b0117:;
		if (it != expr.end()) {
			jule::Ptr<_1ac514962_ParamIns> _86821_p = *it;
			{
				if ((!(_1ac511970_IsSelf(_86821_p.get()._field_Decl.ptr())))) {
					_86821_p.get()._field_Kind=_1ad0ee716_buildNonGenericTypeKind(_self_, _86821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_86117_generics);
				};
			}
			_iter_next_1bc4b0117:;
			++it;
			goto _iter_begin_1bc4b0117;
		}
		_iter_end_1bc4b0117:;
	};
	if ((!(_1ac5130e2_IsVoid(_86051_f.get()._field_Decl.ptr())))) {
		_86051_f.get()._field_Result=_1ad0ee716_buildNonGenericTypeKind(_self_, _86051_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_86117_generics);
	};
}



inline jule::Ptr<_1ac515831_FnIns> _1ad0eecdd_getTraitCheckFnKind(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _87844_f) {
	if ((_87844_f.get()._field_Instances.len() == 1LL)) {
		return _87844_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1ac515831_FnIns> _88217_ins = _1ac51406b_instanceForce(_87844_f);;
	jule::Ptr<_1ad193755_typeChecker> _88417_tc = jule::new_ptr<_1ad193755_typeChecker>(_1ad193755_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3), });;
	{
		auto &expr = _88217_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc4b3cca:;
		if (it != expr.end()) {
			jule::Ptr<_1ac514962_ParamIns> _88921_p = *it;
			{
				if ((!(_1ac511970_IsSelf(_88921_p.get()._field_Decl.ptr())))) {
					_88921_p.get()._field_Kind=_1ad1a082d_checkDecl(_88417_tc.ptr(), _88921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1bc4b3cca:;
			++it;
			goto _iter_begin_1bc4b3cca;
		}
		_iter_end_1bc4b3cca:;
	};
	if ((!(_1ac5130e2_IsVoid(_87844_f.ptr())))) {
		_88217_ins.get()._field_Result=_1ad1a082d_checkDecl(_88417_tc.ptr(), _87844_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _88217_ins;
}



inline jule::Bool _1ad10023e_checkConstraintsFn(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns>& _90143_f, jule::Ptr<_1a959a127_Token>& _90159_et, jule::Ptr<_1ac515831_FnIns> _90175_exist) {
	jule::Ptr<_1ac540d78_constraintChecker> _90217_cc = _1ad0ebda6_constraintChecker(_self_);;
	_90217_cc.get()._field_et=_90159_et;
	_90217_cc.get()._field_fi=_90143_f;
	if ((_90175_exist != nullptr)) {
		{
			auto &expr = _90175_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bc4b710d:;
			if (it != expr.end()) {
				jule::I64 _90618_i = it - expr.begin();
				jule::Ptr<_1ad1839ed_InsGeneric> _90625_g = *it;
				{
					_90143_f.get()._field_Generics[_90618_i].get()._field_Constraint=_90625_g.get()._field_Constraint;
				}
				_iter_next_1bc4b710d:;
				++it;
				_90618_i++;
				goto _iter_begin_1bc4b710d;
			}
			_iter_end_1bc4b710d:;
		};
	} else {
		_90217_cc.get()._field_uniq=true;
	};
	return _1ac585bae_check(_90217_cc);
}



inline jule::Bool _1ad100690_checkConstraintsStruct(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _91547_s, jule::Ptr<_1a959a127_Token>& _91567_et, jule::Ptr<_1ac466a3a_StructIns> _91583_exist) {
	jule::Ptr<_1ac540d78_constraintChecker> _91617_cc = _1ad0ebda6_constraintChecker(_self_);;
	_91617_cc.get()._field_et=_91567_et;
	_91617_cc.get()._field_si=_91547_s;
	if ((_91583_exist != nullptr)) {
		{
			auto &expr = _91583_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bc4b9b9e:;
			if (it != expr.end()) {
				jule::I64 _92018_i = it - expr.begin();
				jule::Ptr<_1ad1839ed_InsGeneric> _92025_g = *it;
				{
					_91547_s.get()._field_Generics[_92018_i].get()._field_Constraint=_92025_g.get()._field_Constraint;
				}
				_iter_next_1bc4b9b9e:;
				++it;
				_92018_i++;
				goto _iter_begin_1bc4b9b9e;
			}
			_iter_end_1bc4b9b9e:;
		};
	} else {
		_91617_cc.get()._field_uniq=true;
	};
	return _1ac585bae_check(_91617_cc);
}



inline jule::Bool _1ad100a47_fnEnvironment(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns>& _93238_f, jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)> _93249_algo) {
	jule::Ptr<_1ad0e5267_Sema> _93317_sema = _93238_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1ad15442a_SymbolTable> _93417_old = _93238_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1ad0e7a61_setCurrentFile(_93238_f.get()._field_Decl.get()._field_sema.ptr(), _93417_old);
	});;
	jule::Ptr<_1ad15442a_SymbolTable> _93617_file = _1ad0e4871_findFile(_93238_f.get()._field_Decl.get()._field_sema.get()._field_files,_93238_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_93617_file != nullptr)) {
		_1ad0e7a61_setCurrentFile(_93238_f.get()._field_Decl.get()._field_sema.ptr(), _93617_file);
	};
	jule::I64 _94117_size = _93238_f.get()._field_Generics.len();;
	if (((_93238_f.get()._field_Decl != nullptr) && (_93238_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_94117_size+=_93238_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _94617_generics = jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>::alloc(0LL,_94117_size);;
	_1ad0e451e_appendGenericTypeAliases(_94617_generics,_93238_f);
	jule::Bool _94913_ok = _93249_algo(_93317_sema,_94617_generics);;
	if ((_93317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_93317_sema.get()._field_errors);
		_93317_sema.get()._field_errors=nullptr;
	};
	return _94913_ok;
}



inline void _1ad100cbc_checkFnParamKind(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac514962_ParamIns>& _95941_p) {
	_95941_p.get()._field_Kind.get()._field_Variadic=_95941_p.get()._field_Decl.get()._field_Variadic;
	if ((_95941_p.get()._field_Decl.get()._field_Reference && (!(_1ad1a2643_isValidForRef(_95941_p.get()._field_Kind))))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _95941_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_95941_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1ad1010ca_reloadFnInsTypes(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns> _96640_f) {
	if ((_1ac516bb7_IsBuiltin(_96640_f.ptr()) || _1ac516e2b_IsAnon(_96640_f.ptr()))) {
		return true;
	};
	return _1ad100a47_fnEnvironment(_self_, _96640_f,jule::Fn<jule::Bool(jule::Ptr<_1ad0e5267_Sema>&,jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>&)>([=](jule::Ptr<_1ad0e5267_Sema>& _97043_sema, jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>& _97061_generics) mutable -> jule::Bool {
		jule::Bool _97121_ok = true;;
		{
			auto &expr = _96640_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1bc4c612d:;
			if (it != expr.end()) {
				jule::Ptr<_1ac514962_ParamIns> _97225_p = *it;
				{
					if (_1ac511970_IsSelf(_97225_p.get()._field_Decl.ptr())) {
						if (_1ac511bd4_IsRef(_97225_p.get()._field_Decl.ptr())) {
							_97225_p.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18d486_Sptr>(_1ad18d486_Sptr{._field_Elem=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_96640_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_97225_p.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_96640_f.get()._field_Owner, 0)});
						};
					} else {
						_97225_p.get()._field_Kind=_1ad0ec6ae_buildTypeWithGenerics(_97043_sema, _97225_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_97061_generics,_96640_f.get()._field_Refers);
						if ((_97225_p.get()._field_Kind != nullptr)) {
							_1ad100cbc_checkFnParamKind(_self_, _97225_p);
						} else {
							_97121_ok=false;
						};
					};
				}
				_iter_next_1bc4c612d:;
				++it;
				goto _iter_begin_1bc4c612d;
			}
			_iter_end_1bc4c612d:;
		};
		if ((!(_1ac5130e2_IsVoid(_96640_f.get()._field_Decl.ptr())))) {
			_96640_f.get()._field_Result=_1ad0ec6ae_buildTypeWithGenerics(_97043_sema, _96640_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_97061_generics,_96640_f.get()._field_Refers);
			_97121_ok=((_96640_f.get()._field_Result != nullptr) && _97121_ok);
		};
		return _97121_ok;
	}));
}



inline jule::Bool _1ad10154d_checkRefValidityForInitExpr(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Bool _100247_leftMut, jule::Ptr<_1ad159188_Data>& _100267_d, jule::Ptr<_1a959a127_Token>& _100282_errorToken) {
	{
		auto &_match_expr{ _100267_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc4cb672:;
			{
				goto _match_end_1bc4cabc1;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
			_case_begin_1bc4cb6d8:;
			{
				jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel> _100721_model = _100267_d.get()._field_Model.operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>();;
				if ((!(_1ad0e33a8_isValidModelForRef(_100721_model.get()._field_Expr)))) {
					_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100721_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bc4cb7b5:;
			{
				jule::Ptr<_1ac50c817_StructSubIdentExprModel> _101321_model = _100267_d.get()._field_Model.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>();;
				if ((!(_1ad0e33a8_isValidModelForRef(_101321_model.get()._field_Expr.get()._field_Model)))) {
					_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_101321_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50cdcd_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>>()) {
			_case_begin_1bc4cb82b:;
			{
				_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
			_case_begin_1bc4cad14:;
			{
				jule::Ptr<_1ac50aae0_UnaryExprModel> _102321_unary = _100267_d.get()._field_Model.operator jule::Ptr<_1ac50aae0_UnaryExprModel>();;
				if ((_102321_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1ad0e33a8_isValidModelForRef(_100267_d.get()._field_Model)))) {
						_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1bc4cabc1;
				};
				goto _case_begin_1bc4cac26;
			}
		}
		else {
			_case_begin_1bc4cac26:;
			{
				_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1bc4cabc1:;
	};
	if ((_100247_leftMut && (!(_100267_d.get()._field_Mutable)))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1ad101b25_checkValidityForInitExpr(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Bool _104344_leftMut, jule::Bool _104359_leftRef, jule::Ptr<_1ad18522a_TypeKind>& _104410_leftKind, jule::Ptr<_1ad159188_Data>& _104436_d, jule::Ptr<_1a959a127_Token>& _104451_errorToken) {
	if (((_104344_leftMut && (!(_104436_d.get()._field_Mutable))) && _1ad186627_Mutable(_104436_d.get()._field_Kind.ptr()))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _104451_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_104436_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_104359_leftRef) {
		if ((!(_1ad10154d_checkRefValidityForInitExpr(_self_, _104344_leftMut,_104436_d,_104451_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1ad144c23_assignTypeChecker> _105417_atc = jule::new_ptr<_1ad144c23_assignTypeChecker>(_1ad144c23_assignTypeChecker{._field_s=_self_, ._field_d=_104436_d, ._field_errorToken=_104451_errorToken});;
	return _1ad1453e9_checkValidity(_105417_atc.ptr());
}



inline jule::Bool _1ad101edd_checkTypeAliasDeclKind(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad184537_TypeAlias>& _106247_ta, jule::Trait<_1ad1a5bb8_Lookup> _106267_l) {
	jule::Bool _106280_ok = jule::Bool();
	jule::Ptr<_1ad15442a_SymbolTable> _106317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1ad0e7a61_setCurrentFile(_self_.ptr(), _106317_old);
	});;
	if ((_106247_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1ad15442a_SymbolTable> _106821_file = _1ad0e4871_findFile(_self_.get()._field_files,_106247_ta.get()._field_Token.get()._field_File);;
		if ((_106821_file != nullptr)) {
			_1ad0e7a61_setCurrentFile(_self_.ptr(), _106821_file);
		};
	};
	_106280_ok=_1ad0ebb42_checkTypeWithRefers(_self_, _106247_ta.get()._field_Kind,_106267_l,nullptr,jule::new_ptr<_1ad192941_referencer>(_1ad192941_referencer{._field_ident=_106247_ta.get()._field_Ident, ._field_owner=jule::Any(_106247_ta), ._field_refs=(&(_106247_ta.get()._field_Refers))}));
	if (((_106280_ok && (_1ad188052_Arr(_106247_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1ad188052_Arr(_106247_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _106247_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106280_ok=false;
	};
	return _106280_ok;
}



inline void _1ad10230c_checkTypeAliasDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad184537_TypeAlias>& _108543_ta, jule::Trait<_1ad1a5bb8_Lookup> _108563_l) {
	if (_1a959c8bb_IsIgnoreIdent(_108543_ta.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _108543_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1ad101edd_checkTypeAliasDeclKind(_self_, _108543_ta,_108563_l);
}



inline void _1ad102582_checkTypeAliasDeclDup(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad184537_TypeAlias>& _109346_ta) {
	if (_1a959c8bb_IsIgnoreIdent(_109346_ta.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _109346_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_109346_ta)),_109346_ta.get()._field_Ident,_109346_ta.get()._field_CppLinked)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _109346_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109346_ta.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ad101edd_checkTypeAliasDeclKind(_self_, _109346_ta,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));
}



inline jule::Bool _1ad1027e6_checkTypeAliasDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _110541_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc2576d9:;
		if (it != expr.end()) {
			jule::Ptr<_1ad184537_TypeAlias> _110621_ta = *it;
			{
				_1ad102582_checkTypeAliasDeclDup(_self_, _110621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_110541_ok = false;
					return _110541_ok;
				};
			}
			_iter_next_1bc2576d9:;
			++it;
			goto _iter_begin_1bc2576d9;
		}
		_iter_end_1bc2576d9:;
	};
	_110541_ok = true;
	return _110541_ok;
}



inline void _1bc268574_checkEnumItemsDup(_1ad0e5267_Sema* _self_, jule::Slice<jule::Ptr<_1ac52618d_EnumItem>> _111739_items) {
	{
		auto &expr = _111739_items;
		auto it = expr.begin();
		_iter_begin_1bc269850:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52618d_EnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_Ident.empty()) {
					goto _iter_next_1bc269850;
				} else if (_1a959c8bb_IsIgnoreIdent(_111816_item.get()._field_Ident)) {
					_1ad0e7e29_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111739_items;
						auto it = expr.begin();
						_iter_begin_1bc26a587:;
						if (it != expr.end()) {
							jule::Ptr<_1ac52618d_EnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1bc26a587;
								} else if ((_111816_item.get()._field_Ident == _112424_citem.get()._field_Ident)) {
									_1ad0e7e29_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_Ident)}));
									_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1bc26a587;
								};
							}
							_iter_next_1bc26a587:;
							++it;
							goto _iter_begin_1bc26a587;
						}
						_iter_end_1bc26a587:;
					};
				};
			}
			_iter_next_1bc269850:;
			++it;
			goto _iter_begin_1bc269850;
		}
		_iter_end_1bc269850:;
	};
}

inline void _1bc274074_checkEnumItemsDup(_1ad0e5267_Sema* _self_, jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>> _111739_items) {
	{
		auto &expr = _111739_items;
		auto it = expr.begin();
		_iter_begin_1bc275350:;
		if (it != expr.end()) {
			jule::Ptr<_1ac527bb7_TypeEnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_Ident.empty()) {
					goto _iter_next_1bc275350;
				} else if (_1a959c8bb_IsIgnoreIdent(_111816_item.get()._field_Ident)) {
					_1ad0e7e29_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111739_items;
						auto it = expr.begin();
						_iter_begin_1bc276087:;
						if (it != expr.end()) {
							jule::Ptr<_1ac527bb7_TypeEnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1bc276087;
								} else if ((_111816_item.get()._field_Ident == _112424_citem.get()._field_Ident)) {
									_1ad0e7e29_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_Ident)}));
									_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1bc276087;
								};
							}
							_iter_next_1bc276087:;
							++it;
							goto _iter_begin_1bc276087;
						}
						_iter_end_1bc276087:;
					};
				};
			}
			_iter_next_1bc275350:;
			++it;
			goto _iter_begin_1bc275350;
		}
		_iter_end_1bc275350:;
	};
}



inline void _1ad102ce1_checkEnumItemsStr(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac526b83_Enum>& _113742_e) {
	jule::Ptr<_1ad15ac06_Eval> _113817_eval = _1ad0ed8e1_eval(_self_, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));;
	{
		auto &expr = _113742_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc258d4a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52618d_EnumItem> _113921_item = *it;
			{
				if (_1ac526578_AutoExpr(_113921_item.ptr())) {
					_113921_item.get()._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Data=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Constant=static__1ac5027da_NewStr(_113921_item.get()._field_Ident)})});
					_113921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_113921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1ad159188_Data> _114825_d = _1ad1769be_evalExpr(_113817_eval, _113921_item.get()._field_Value.get()._field_Expr);;
					if ((_114825_d == nullptr)) {
						goto _iter_next_1bc258d4a;
					};
					if ((!(_1ad159a4b_IsConst(_114825_d.ptr())))) {
						_1ad0e7e29_pushErr(_self_.ptr(), _113921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1ad0edddb_checkAssignType(_self_, false,_113742_e.get()._field_Kind.get()._field_Kind,_114825_d,_113921_item.get()._field_Token);
					_113921_item.get()._field_Value.get()._field_Data=_114825_d;
				};
			}
			_iter_next_1bc258d4a:;
			++it;
			goto _iter_begin_1bc258d4a;
		}
		_iter_end_1bc258d4a:;
	};
}



inline void _1ad103066_checkEnumItemsInt(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac526b83_Enum>& _116342_e) {
	jule::Ptr<_1ad189c02_Prim> _116413_prim = _1ad18733c_Prim(_116342_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _116517_max = static_cast<jule::U64>(_1ac9b3295_Max(_1ad18a065_Str(_116413_prim.ptr())));;
	jule::Ptr<_1ad15ac06_Eval> _116617_eval = _1ad0ed8e1_eval(_self_, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));;
	{
		auto &expr = _116342_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc25e306:;
		if (it != expr.end()) {
			jule::I64 _116714_i = it - expr.begin();
			jule::Ptr<_1ac52618d_EnumItem> _116721_item = *it;
			{
				if ((_116517_max == 0LLU)) {
					_1ad0e7e29_pushErr(_self_.ptr(), _116721_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_116517_max)--;
				};
				if (_1ac526578_AutoExpr(_116721_item.ptr())) {
					_116721_item.get()._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Data=jule::new_ptr<_1ad159188_Data>()});
					{
						
						if (_1ad0c407b_IsSigInt(_1ad18a065_Str(_116413_prim.ptr()))) {
							_case_begin_1bc26188b:;
							{
								_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i))))));
							}
						}
						else {
							_case_begin_1bc2614e5:;
							{
								_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1ac5023ab_NewU64(static_cast<jule::U64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i)))));
							}
						}
						_match_end_1bc26147e:;
					};
					_116721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1ad159188_Data> _118525_d = _1ad1769be_evalExpr(_116617_eval, _116721_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1bc25e306;
					};
					if ((!(_1ad159a4b_IsConst(_118525_d.ptr())))) {
						_1ad0e7e29_pushErr(_self_.ptr(), _116721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1ad0edddb_checkAssignType(_self_, false,_116342_e.get()._field_Kind.get()._field_Kind,_118525_d,_116721_item.get()._field_Token);
					_116721_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1bc25e306:;
			++it;
			_116714_i++;
			goto _iter_begin_1bc25e306;
		}
		_iter_end_1bc25e306:;
	};
}



inline void _1ad1032db_checkEnumDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac526b83_Enum>& _119838_e) {
	if (_1a959c8bb_IsIgnoreIdent(_119838_e.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_119838_e)),_119838_e.get()._field_Ident,false)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_119838_e.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_119838_e.get()._field_Items.len() == 0LL)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_119838_e.get()._field_Ident)}));
	};
	_1bc268574_checkEnumItemsDup(_self_.ptr(), _119838_e.get()._field_Items);
	if ((_119838_e.get()._field_Kind != nullptr)) {
		if ((!(_1ad0ec25d_checkType(_self_, _119838_e.get()._field_Kind,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_119838_e.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1ad189c02_Prim> _122517_t = _1ad18733c_Prim(_119838_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_122517_t == nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ad18ce36_IsStr(_122517_t.ptr())) {
			_case_begin_1bc26ee82:;
			{
				_1ad102ce1_checkEnumItemsStr(_self_, _119838_e);
			}
		}
		else if (_1ad0c42e0_IsInt(_1ad18a065_Str(_122517_t.ptr()))) {
			_case_begin_1bc26ebc9:;
			{
				_1ad103066_checkEnumItemsInt(_self_, _119838_e);
			}
		}
		else {
			_case_begin_1bc26e17e:;
			{
				_1ad0e7e29_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc26dec5:;
	};
}



inline void _1ad103561_checkTypeEnumDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac52827d_TypeEnum>& _124242_e) {
	if (_1a959c8bb_IsIgnoreIdent(_124242_e.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124242_e)),_124242_e.get()._field_Ident,false)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124242_e.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_124242_e.get()._field_Items.len() == 0LL)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_124242_e.get()._field_Ident)}));
		return;;
	};
	_1bc274074_checkEnumItemsDup(_self_.ptr(), _124242_e.get()._field_Items);
	{
		auto &expr = _124242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc2776b5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac527bb7_TypeEnumItem> _125621_item = *it;
			{
				if ((_125621_item.get()._field_Kind == nullptr)) {
					_1ad0e7e29_pushErr(_self_.ptr(), _125621_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1bc2776b5;
				};
				jule::Bool _126117_ok = _1ad0ec25d_checkType(_self_, _125621_item.get()._field_Kind,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));;
				if ((!(_126117_ok))) {
					goto _iter_next_1bc2776b5;
				};
				jule::Ptr<_1ad189c02_Prim> _126517_p = _1ad18733c_Prim(_125621_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_126517_p != nullptr) && _1ad18d19a_IsAny(_126517_p.ptr()))) {
					_1ad0e7e29_pushErr(_self_.ptr(), _125621_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bc2776b5:;
			++it;
			goto _iter_begin_1bc2776b5;
		}
		_iter_end_1bc2776b5:;
	};
	if ((_124242_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1ac527bb7_TypeEnumItem> _127121_item = _124242_e.get()._field_Items[0LL];;
		_1ad18522a_TypeKind _127217_tk = _1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_124242_e, 4)};;
		if (((_127121_item.get()._field_Kind.get()._field_Kind != nullptr) && _1ad185934_Equals(_127121_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1ad18522a_TypeKind>)((&(_127217_tk))))))) {
			_1ad0e7e29_pushErr(_self_.ptr(), _127121_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1ac5285ad_Str(_124242_e.ptr()))}));
		};
	};
}



inline jule::Bool _1ad1037c5_checkEnumDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _128236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc27d9eb:;
		if (it != expr.end()) {
			jule::Ptr<_1ac526b83_Enum> _128321_e = *it;
			{
				_1ad1032db_checkEnumDecl(_self_, _128321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128236_ok = false;
					return _128236_ok;
				};
			}
			_iter_next_1bc27d9eb:;
			++it;
			goto _iter_begin_1bc27d9eb;
		}
		_iter_end_1bc27d9eb:;
	};
	_128236_ok = true;
	return _128236_ok;
}



inline jule::Bool _1ad103a39_checkTypeEnumDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _129440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc2801d4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52827d_TypeEnum> _129521_e = *it;
			{
				_1ad103561_checkTypeEnumDecl(_self_, _129521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_129440_ok = false;
					return _129440_ok;
				};
			}
			_iter_next_1bc2801d4:;
			++it;
			goto _iter_begin_1bc2801d4;
		}
		_iter_end_1bc2801d4:;
	};
	_129440_ok = true;
	return _129440_ok;
}



inline jule::Bool _1ad103d47_checkDeclGenerics(_1ad0e5267_Sema* _self_, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>& _130537_generics) {
	jule::Bool _130570_ok = jule::Bool();
	_130570_ok=true;
	{
		auto &expr = _130537_generics;
		auto it = expr.begin();
		_iter_begin_1bc281a21:;
		if (it != expr.end()) {
			jule::I64 _130713_i = it - expr.begin();
			jule::Ptr<_1ac457597_GenericDecl> &_130716_g = *it;
			{
				if (_1a959c8bb_IsIgnoreIdent(_130716_g.get()._field_Ident)) {
					_1ad0e7e29_pushErr(&(*_self_), _130716_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_130570_ok=false;
					goto _iter_next_1bc281a21;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _130537_generics;
					auto it = expr.begin();
					_iter_begin_1bc282abb:;
					if (it != expr.end()) {
						jule::I64 _131617_j = it - expr.begin();
						jule::Ptr<_1ac457597_GenericDecl> &_131620_ct = *it;
						{
							{
								
								if ((_131617_j >= _130713_i)) {
									_case_begin_1bc284419:;
									{
										goto _iter_end_1bc282abb;
									}
								}
								else if ((_130716_g.get()._field_Ident == _131620_ct.get()._field_Ident)) {
									_case_begin_1bc284491:;
									{
										_1ad0e7e29_pushErr(&(*_self_), _130716_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_130716_g.get()._field_Ident)}));
										_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_130570_ok=false;
										goto _iter_end_1bc282abb;
									}
								}
								_match_end_1bc2842e8:;
							};
						}
						_iter_next_1bc282abb:;
						++it;
						_131617_j++;
						goto _iter_begin_1bc282abb;
					}
					_iter_end_1bc282abb:;
				};
			}
			_iter_next_1bc281a21:;
			++it;
			_130713_i++;
			goto _iter_begin_1bc281a21;
		}
		_iter_end_1bc281a21:;
	};
	return _130570_ok;
}



inline jule::Bool _1ad104155_checkFnDeclParamsDup(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac512b80_Fn>& _133240_f) {
	jule::Bool _133250_ok = jule::Bool();
	_133250_ok=true;
	_julec_label_check:;
	{
		auto &expr = _133240_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc286817:;
		if (it != expr.end()) {
			jule::I64 _133513_i = it - expr.begin();
			jule::Ptr<_1ac511343_Param> &_133516_p = *it;
			{
				{
					auto &expr = _133240_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bc287582:;
					if (it != expr.end()) {
						jule::Ptr<_1ac457597_GenericDecl> &_133720_g = *it;
						{
							if ((_133516_p.get()._field_Ident == _133720_g.get()._field_Ident)) {
								_133250_ok=false;
								_1ad0e7e29_pushErr(&(*_self_), _133516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_p.get()._field_Ident)}));
								_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1bc286817;
							};
						}
						_iter_next_1bc287582:;
						++it;
						goto _iter_begin_1bc287582;
					}
					_iter_end_1bc287582:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _133240_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bc4dc045:;
					if (it != expr.end()) {
						jule::I64 _134717_j = it - expr.begin();
						jule::Ptr<_1ac511343_Param> &_134720_jp = *it;
						{
							{
								
								if ((_134717_j >= _133513_i)) {
									_case_begin_1bc4dd387:;
									{
										goto _iter_end_1bc4dc045;
									}
								}
								else if ((_1a959cb63_IsAnonIdent(_133516_p.get()._field_Ident) || _1a959cb63_IsAnonIdent(_134720_jp.get()._field_Ident))) {
									_case_begin_1bc4dd40e:;
									{
										goto _iter_end_1bc4dc045;
									}
								}
								else if ((_133516_p.get()._field_Ident == _134720_jp.get()._field_Ident)) {
									_case_begin_1bc4dd486:;
									{
										_133250_ok=false;
										_1ad0e7e29_pushErr(&(*_self_), _133516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_p.get()._field_Ident)}));
										_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1bc286817;
									}
								}
								_match_end_1bc4dd255:;
							};
						}
						_iter_next_1bc4dc045:;
						++it;
						_134717_j++;
						goto _iter_begin_1bc4dc045;
					}
					_iter_end_1bc4dc045:;
				};
			}
			_iter_next_1bc286817:;
			++it;
			_133513_i++;
			goto _iter_begin_1bc286817;
		}
		_iter_end_1bc286817:;
	};
	return _133250_ok;
}



inline jule::Bool _1ad104463_checkFnDeclResultDup(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac512b80_Fn>& _136640_f) {
	jule::Bool _136650_ok = jule::Bool();
	_136650_ok=true;
	if (_1ac5130e2_IsVoid(_136640_f.ptr())) {
		return _136650_ok;
	};
	{
		auto &expr = _136640_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1bb6c64b6:;
		if (it != expr.end()) {
			jule::I64 _137313_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> &_137316_v = *it;
			{
				if ((_1a959c8bb_IsIgnoreIdent(_137316_v.get()._field_Kind) || _1a959cb63_IsAnonIdent(_137316_v.get()._field_Kind))) {
					goto _iter_next_1bb6c64b6;
				};
				{
					auto &expr = _136640_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bb6c7c04:;
					if (it != expr.end()) {
						jule::Ptr<_1ac457597_GenericDecl> &_137820_g = *it;
						{
							if ((_137316_v.get()._field_Kind == _137820_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1bb6c7c04:;
						++it;
						goto _iter_begin_1bb6c7c04;
					}
					_iter_end_1bb6c7c04:;
				};
				{
					auto &expr = _136640_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bb6c8e8b:;
					if (it != expr.end()) {
						jule::Ptr<_1ac511343_Param> &_138420_p = *it;
						{
							if ((_137316_v.get()._field_Kind == _138420_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1bb6c8e8b:;
						++it;
						goto _iter_begin_1bb6c8e8b;
					}
					_iter_end_1bb6c8e8b:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _136640_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1bb6ca234:;
					if (it != expr.end()) {
						jule::I64 _139217_j = it - expr.begin();
						jule::Ptr<_1a959a127_Token> &_139220_jv = *it;
						{
							{
								
								if ((_139217_j >= _137313_i)) {
									_case_begin_1bc5a2b88:;
									{
										goto _iter_end_1bb6ca234;
									}
								}
								else if ((_139220_jv.get()._field_Kind == _137316_v.get()._field_Kind)) {
									_case_begin_1bc5a2c10:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1bc5a2a67:;
							};
						}
						_iter_next_1bb6ca234:;
						++it;
						_139217_j++;
						goto _iter_begin_1bb6ca234;
					}
					_iter_end_1bb6ca234:;
				};
				goto _iter_next_1bb6c64b6;
				_julec_label_exist:;
				_1ad0e7e29_pushErr(&(*_self_), _137316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137316_v.get()._field_Kind)}));
				_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_136650_ok=false;
			}
			_iter_next_1bb6c64b6:;
			++it;
			_137313_i++;
			goto _iter_begin_1bb6c64b6;
		}
		_iter_end_1bb6c64b6:;
	};
	return _136650_ok;
}



inline void _1ad1046d8_checkFnDeclPrototype(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _141345_f) {
	if ((_141345_f.get()._field_Exceptional && _141345_f.get()._field_CppLinked)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_141345_f.get()._field_Exceptional) {
		if (_1ac5135ba_IsEntryPoint(_141345_f.ptr())) {
			_1ad0e7e29_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1ac51382e_IsInit(_141345_f.ptr())) {
			_1ad0e7e29_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ad103d47_checkDeclGenerics(_self_.ptr(), _141345_f.get()._field_Generics)))) {
			_case_begin_1bc5a5eee:;
		}
		else if ((!(_1ad104155_checkFnDeclParamsDup(_self_.ptr(), _141345_f)))) {
			_case_begin_1bc5a7385:;
		}
		else if ((!(_1ad104463_checkFnDeclResultDup(_self_.ptr(), _141345_f)))) {
			_case_begin_1bc5a73eb:;
		}
		_match_end_1bc5a5d45:;
	};
}



inline void _1ad10495d_checkTraitDeclMethod(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _143445_f) {
	if (_1a959c8bb_IsIgnoreIdent(_143445_f.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _143445_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_143445_f.get()._field_sema=_self_;
	_1ad1046d8_checkFnDeclPrototype(_self_, _143445_f);
	jule::Ptr<_1ac515831_FnIns> _144117_ins = _1ac5142d0_instance(_143445_f);;
	_1ad1010ca_reloadFnInsTypes(_self_, _144117_ins);
	_144117_ins.get()._field_reloaded=true;
	_1ac5145aa_appendInstance(_143445_f.ptr(), _144117_ins);
}



inline void _1ad104bd3_checkTraitDeclMethods(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac524a3d_Trait>& _144746_t) {
	{
		auto &expr = _144746_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc5aa960:;
		if (it != expr.end()) {
			jule::I64 _144814_i = it - expr.begin();
			jule::Ptr<_1ac512b80_Fn> _144821_f = *it;
			{
				_1ad10495d_checkTraitDeclMethod(_self_, _144821_f);
				_144746_t.get()._field_Mutable=(_144746_t.get()._field_Mutable || _144821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _144746_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bc5ac6a9:;
					if (it != expr.end()) {
						jule::I64 _145917_j = it - expr.begin();
						jule::Ptr<_1ac512b80_Fn> _145920_jf = *it;
						{
							{
								
								if ((_145917_j >= _144814_i)) {
									_case_begin_1bc5ad842:;
									{
										goto _iter_end_1bc5ac6a9;
									}
								}
								else if ((_144821_f.get()._field_Ident == _145920_jf.get()._field_Ident)) {
									_case_begin_1bc5ad8b9:;
									{
										_1ad0e7e29_pushErr(_self_.ptr(), _144821_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_144821_f.get()._field_Ident)}));
										_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1bc5ac6a9;
									}
								}
								_match_end_1bc5ad721:;
							};
						}
						_iter_next_1bc5ac6a9:;
						++it;
						_145917_j++;
						goto _iter_begin_1bc5ac6a9;
					}
					_iter_end_1bc5ac6a9:;
				};
			}
			_iter_next_1bc5aa960:;
			++it;
			_144814_i++;
			goto _iter_begin_1bc5aa960;
		}
		_iter_end_1bc5aa960:;
	};
}



inline void _1ad104e58_checkTraitDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac524a3d_Trait>& _147839_t) {
	if (_1a959c8bb_IsIgnoreIdent(_147839_t.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _147839_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_147839_t)),_147839_t.get()._field_Ident,false)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _147839_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147839_t.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ad104bd3_checkTraitDeclMethods(_self_, _147839_t);
}



inline jule::Bool _1ad1051bc_checkTraitDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _149037_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc5b2868:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> _149121_t = *it;
			{
				_1ad104e58_checkTraitDecl(_self_, _149121_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_149037_ok = false;
					return _149037_ok;
				};
			}
			_iter_next_1bc5b2868:;
			++it;
			goto _iter_begin_1bc5b2868;
		}
		_iter_end_1bc5b2868:;
	};
	_149037_ok = true;
	return _149037_ok;
}



inline jule::Bool _1ad105574_checkTraitImplMethods(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac524a3d_Trait>& _150145_base, jule::Ptr<_1ac5ae0b1_Impl>& _150160_ipl) {
	jule::Bool _150174_ok = jule::Bool();
	_150174_ok=true;
	{
		auto &expr = _150160_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc5b45e5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> &_150316_f = *it;
			{
				if ((_1ac5258b8_FindMethod(_150145_base.ptr(), _150316_f.get()._field_Ident) == nullptr)) {
					_1ad0e7e29_pushErr(&(*_self_), _150316_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_150145_base.get()._field_Ident),jule::Any(_150316_f.get()._field_Ident)}));
					_150174_ok=false;
				};
			}
			_iter_next_1bc5b45e5:;
			++it;
			goto _iter_begin_1bc5b45e5;
		}
		_iter_end_1bc5b45e5:;
	};
	return _150174_ok;
}



inline jule::Bool _1ad10592b_implToStruct(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _151237_dest, jule::Ptr<_1ac5ae0b1_Impl>& _151257_ipl) {
	jule::Bool _151271_ok = jule::Bool();
	_151271_ok=true;
	{
		auto &expr = _151257_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc5b6938:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _151621_f = *it;
			{
				if (((_1ac424ca1_FindMethod(_151237_dest.ptr(), _151621_f.get()._field_Ident,_151621_f.get()._field_Statically) != nullptr) || (_1ac425202_FindField(_151237_dest.ptr(), _151621_f.get()._field_Ident) != nullptr))) {
					_1ad0e7e29_pushErr(_self_.ptr(), _151621_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151237_dest.get()._field_Ident),jule::Any(_151621_f.get()._field_Ident)}));
					_151271_ok=false;
					goto _iter_next_1bc5b6938;
				};
				if (((_151237_dest.get()._field_Generics.len() > 0LL) && (_151621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _151621_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1bc5b9034:;
						if (it != expr.end()) {
							jule::Ptr<_1ac457597_GenericDecl> _152424_fg = *it;
							{
								{
									auto &expr = _151237_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1bc5b9870:;
									if (it != expr.end()) {
										jule::Ptr<_1ac457597_GenericDecl> _152528_dg = *it;
										{
											if ((_152424_fg.get()._field_Ident == _152528_dg.get()._field_Ident)) {
												_1ad0e7e29_pushErr(_self_.ptr(), _152424_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_151271_ok=false;
											};
										}
										_iter_next_1bc5b9870:;
										++it;
										goto _iter_begin_1bc5b9870;
									}
									_iter_end_1bc5b9870:;
								};
							}
							_iter_next_1bc5b9034:;
							++it;
							goto _iter_begin_1bc5b9034;
						}
						_iter_end_1bc5b9034:;
					};
				};
				_1ad0e8d70_checkDirectives(_self_, _151621_f.get()._field_Directives,jule::Any(_151621_f));
				_151621_f.get()._field_sema=_self_;
				_151621_f.get()._field_Owner=_151237_dest;
				_151237_dest.get()._field_Methods = jule::alloc_for_append(_151237_dest.get()._field_Methods,1);_151237_dest.get()._field_Methods.__push(_151621_f);;
			}
			_iter_next_1bc5b6938:;
			++it;
			goto _iter_begin_1bc5b6938;
		}
		_iter_end_1bc5b6938:;
	};
	{
		auto &expr = _151257_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1bc5bb762:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _154121_v = *it;
			{
				;
				if (((_1ac424ca1_FindMethod(_151237_dest.ptr(), _154121_v.get()._field_Ident,true) != nullptr) || (_1ac425cb3_FindStatic(_151237_dest.ptr(), _154121_v.get()._field_Ident) != nullptr))) {
					_1ad0e7e29_pushErr(_self_.ptr(), _154121_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151237_dest.get()._field_Ident),jule::Any(_154121_v.get()._field_Ident)}));
					_151271_ok=false;
					goto _iter_next_1bc5bb762;
				};
				_1ad1064ba_checkVarDecl(_self_, _154121_v,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));
				_1ad109b0b_checkTypeVar(_self_, _154121_v,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));
				_151237_dest.get()._field_Statics = jule::alloc_for_append(_151237_dest.get()._field_Statics,1);_151237_dest.get()._field_Statics.__push(_154121_v);;
			}
			_iter_next_1bc5bb762:;
			++it;
			goto _iter_begin_1bc5bb762;
		}
		_iter_end_1bc5bb762:;
	};
	return _151271_ok;
}



inline void _1ad105ba1_implTrait(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac5ae0b1_Impl>& _155634_decl) {
	jule::Ptr<_1ad18522a_TypeKind> _155717_base_t = _1ad0eccca_selectType(_self_, _155634_decl.get()._field_Base);;
	if ((_155717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac524a3d_Trait> _156117_base = _1ad188a03_Trait(_155717_base_t.ptr());;
	if ((_156117_base == nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _155634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_155717_base_t.ptr()))}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad18522a_TypeKind> _156817_destT = _1ad0eccca_selectType(_self_, _155634_decl.get()._field_Dest);;
	if ((_156817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac466a3a_StructIns> _157217_destS = _1ad18878e_Struct(_156817_destT.ptr());;
	if ((_157217_destS == nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _155634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_156817_destT.ptr()))}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac43a6e0_Struct> _157917_dest = _157217_destS.get()._field_Decl;;
	if ((_1a95a0da8_Dir(_157917_dest.get()._field_Token.get()._field_File.ptr()) != _1a95a0da8_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _155634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_156117_base.get()._field_Implemented = jule::alloc_for_append(_156117_base.get()._field_Implemented,1);_156117_base.get()._field_Implemented.__push(_157917_dest);;
	_157917_dest.get()._field_Implements = jule::alloc_for_append(_157917_dest.get()._field_Implements,1);_157917_dest.get()._field_Implements.__push(_156117_base);;
	if ((_155634_decl.get()._field_Statics.len() > 0LL)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _155634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ad105574_checkTraitImplMethods(_self_.ptr(), _156117_base,_155634_decl)))) {
			_case_begin_1bc5c7196:;
			{
				return;;
			}
		}
		else if ((!(_1ad10592b_implToStruct(_self_, _157917_dest,_155634_decl)))) {
			_case_begin_1bc5c720c:;
			{
				return;;
			}
		}
		_match_end_1bc5c634e:;
	};
}



inline void _1ad105e26_implStruct(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac5ae0b1_Impl>& _160135_decl) {
	jule::Ptr<_1ad18522a_TypeKind> _160217_destT = _1ad0eccca_selectType(_self_, _160135_decl.get()._field_Dest);;
	if ((_160217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac466a3a_StructIns> _160617_destS = _1ad18878e_Struct(_160217_destT.ptr());;
	if ((_160617_destS == nullptr)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _160135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_160217_destT.ptr()))}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac43a6e0_Struct> _161317_dest = _160617_destS.get()._field_Decl;;
	if ((_1a95a0da8_Dir(_161317_dest.get()._field_Token.get()._field_File.ptr()) != _1a95a0da8_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _160135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ad10592b_implToStruct(_self_, _161317_dest,_160135_decl)))) {
			_case_begin_1bc5cbc8e:;
			{
				return;;
			}
		}
		_match_end_1bc5ca63e:;
	};
}



inline void _1ad10619b_implImpl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac5ae0b1_Impl>& _162633_decl) {
	{
		
		if (_1ac5891e0_IsTraitImpl(_162633_decl.ptr())) {
			_case_begin_1bc5cc883:;
			{
				_1ad105ba1_implTrait(_self_, _162633_decl);
			}
		}
		else if (_1ac58993d_IsStructImpl(_162633_decl.ptr())) {
			_case_begin_1bc5cc90a:;
			{
				_1ad105e26_implStruct(_self_, _162633_decl);
			}
		}
		_match_end_1bc5cc762:;
	};
}



inline void _1ad1064ba_checkVarDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad112097_Var>& _163737_decl, jule::Trait<_1ad1a5bb8_Lookup> _163753_l) {
	if (_1a959c8bb_IsIgnoreIdent(_163737_decl.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1ad1126b3_IsTypeInferred(_163737_decl.ptr())) {
		if ((!(_1ad11244e_IsInitialized(_163737_decl.ptr())))) {
			_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1ad0ec25d_checkType(_self_, _163737_decl.get()._field_Kind,_163753_l);
	};
	if ((_163737_decl.get()._field_Constant && _163737_decl.get()._field_Reference)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1ad11244e_IsInitialized(_163737_decl.ptr())))) {
		if (_163737_decl.get()._field_Constant) {
			_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_163737_decl.get()._field_Statically) {
			_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_163737_decl.get()._field_Reference) {
			_1ad0e7e29_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1ad106740_checkGlobalVarDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad112097_Var>& _166943_decl) {
	if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166943_decl)),_166943_decl.get()._field_Ident,_166943_decl.get()._field_CppLinked)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_166943_decl.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_166943_decl.get()._field_CppLinked && _166943_decl.get()._field_Constant)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_166943_decl.get()._field_CppLinked)) && (!(_166943_decl.get()._field_Constant))) && (!(_166943_decl.get()._field_Statically)))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1ad0e8d70_checkDirectives(_self_, _166943_decl.get()._field_Directives,jule::Any(_166943_decl));
	_1ad1064ba_checkVarDecl(_self_, _166943_decl,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));
}



inline jule::Bool _1ad1069a4_checkGlobalDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _168638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc5d7393:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _168721_decl = *it;
			{
				_1ad106740_checkGlobalVarDecl(_self_, _168721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_168638_ok = false;
					return _168638_ok;
				};
			}
			_iter_next_1bc5d7393:;
			++it;
			goto _iter_begin_1bc5d7393;
		}
		_iter_end_1bc5d7393:;
	};
	_168638_ok = true;
	return _168638_ok;
}



inline jule::Bool _1ad106d5b_checkStructTraitImpl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _169745_strct, jule::Ptr<_1ac524a3d_Trait>& _169766_trt) {
	jule::Bool _169781_ok = jule::Bool();
	{
		auto &expr = _169766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc5d8dbc:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _169821_tf = *it;
			{
				jule::Bool _169921_exist = false;;
				jule::Ptr<_1ac512b80_Fn> _170021_sf = _1ac424ca1_FindMethod(_169745_strct.ptr(), _169821_tf.get()._field_Ident,_169821_tf.get()._field_Statically);;
				jule::Ptr<_1ac515831_FnIns> _170117_tfK = _1ad0eecdd_getTraitCheckFnKind(_self_, _169821_tf);;
				if ((_170021_sf != nullptr)) {
					jule::Ptr<_1ac515831_FnIns> _170325_sfK = _1ad0eecdd_getTraitCheckFnKind(_self_, _170021_sf);;
					_169921_exist=(((_170117_tfK.get()._field_Decl.get()._field_Public == _170325_sfK.get()._field_Decl.get()._field_Public) && (_170117_tfK.get()._field_Decl.get()._field_Ident == _170325_sfK.get()._field_Decl.get()._field_Ident)) && _1ac5166de_equalsTrait(_170117_tfK, _170325_sfK));
				};
				if (_169921_exist) {
					jule::Ptr<_1ac41195d_Directive> _170921_d = _1ad17e972_findDirective(_170021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_170921_d != nullptr)) {
						_1ad0e7e29_pushErr(_self_.ptr(), _170921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_169781_ok=false;
				} else {
					;
					jule::Str _171625_s = _1ac517547_GetKindStr(_170117_tfK.ptr(), true);;
					if (_169821_tf.get()._field_Public) {
						(_171625_s).buffer.insert(0, (jule::Str()));;
					};
					_1ad0e7e29_pushErr(_self_.ptr(), _169745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_169766_trt.get()._field_Ident),jule::Any(_171625_s)}));
					_169781_ok=false;
				};
			}
			_iter_next_1bc5d8dbc:;
			++it;
			goto _iter_begin_1bc5d8dbc;
		}
		_iter_end_1bc5d8dbc:;
	};
	return _169781_ok;
}



inline jule::Bool _1ad107169_checkStructImpls(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _172741_s) {
	jule::Bool _172755_ok = jule::Bool();
	_172755_ok=true;
	{
		auto &expr = _172741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1bc5e0a3e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> _172921_trt = *it;
			{
				_172755_ok=(_1ad106d5b_checkStructTraitImpl(_self_, _172741_s,_172921_trt) && _172755_ok);
			}
			_iter_next_1bc5e0a3e:;
			++it;
			goto _iter_begin_1bc5e0a3e;
		}
		_iter_end_1bc5e0a3e:;
	};
	return _172755_ok;
}



inline jule::Bool _1ad107477_checkStructFields(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _173542_st) {
	jule::Bool _173557_ok = jule::Bool();
	_173557_ok=true;
	{
		auto &expr = _173542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc5e1e80:;
		if (it != expr.end()) {
			jule::Ptr<_1ac427d4d_Field> _173721_f = *it;
			{
				_173721_f.get()._field_Owner=_173542_st;
				{
					auto &expr = _173542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1bc5e2a74:;
					if (it != expr.end()) {
						jule::Ptr<_1ac427d4d_Field> _173920_cf = *it;
						{
							if ((_173721_f == _173920_cf)) {
								goto _iter_end_1bc5e2a74;
							} else if ((_173721_f.get()._field_Ident == _173920_cf.get()._field_Ident)) {
								_1ad0e7e29_pushErr(_self_.ptr(), _173721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_173721_f.get()._field_Ident)}));
								_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_173557_ok=false;
							};
						}
						_iter_next_1bc5e2a74:;
						++it;
						goto _iter_begin_1bc5e2a74;
					}
					_iter_end_1bc5e2a74:;
				};
			}
			_iter_next_1bc5e1e80:;
			++it;
			goto _iter_begin_1bc5e1e80;
		}
		_iter_end_1bc5e1e80:;
	};
	return _173557_ok;
}



inline void _1ad1076ec_checkStructDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _175240_s) {
	if (_1a959c8bb_IsIgnoreIdent(_175240_s.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _175240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_175240_s)),_175240_s.get()._field_Ident,_175240_s.get()._field_CppLinked)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _175240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_175240_s.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1ad0e8d70_checkDirectives(_self_, _175240_s.get()._field_Directives,jule::Any(_175240_s));
	{
		
		if ((!(_1ad103d47_checkDeclGenerics(_self_.ptr(), _175240_s.get()._field_Generics)))) {
			_case_begin_1bc5e69ac:;
		}
		else if ((!(_1ad107477_checkStructFields(_self_, _175240_s)))) {
			_case_begin_1bc5e6a23:;
		}
		else if ((!(_1ad107169_checkStructImpls(_self_, _175240_s)))) {
			_case_begin_1bc5e6a89:;
		}
		_match_end_1bc5e6869:;
	};
}



inline jule::Bool _1ad107961_checkStructDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _177038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc5e7d76:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _177121_s = *it;
			{
				_1ad1076ec_checkStructDecl(_self_, _177121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_177038_ok = false;
					return _177038_ok;
				};
			}
			_iter_next_1bc5e7d76:;
			++it;
			goto _iter_begin_1bc5e7d76;
		}
		_iter_end_1bc5e7d76:;
	};
	_177038_ok = true;
	return _177038_ok;
}



inline void _1ad107bd6_checkFnDecl(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _178136_f) {
	if (_1a959c8bb_IsIgnoreIdent(_178136_f.get()._field_Ident)) {
		_1ad0e7e29_pushErr(_self_.ptr(), _178136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1ad0e8d70_checkDirectives(_self_, _178136_f.get()._field_Directives,jule::Any(_178136_f));
	_178136_f.get()._field_sema=_self_;
	_1ad1046d8_checkFnDeclPrototype(_self_, _178136_f);
	if (_1ad0e8a51_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178136_f)),_178136_f.get()._field_Ident,_178136_f.get()._field_CppLinked)) {
		if ((_178136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1ac512b80_Fn> _179321_init = _1ad0e6a60_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_179321_init != nullptr)) {
				return;;
			};
		};
		_1ad0e7e29_pushErr(_self_.ptr(), _178136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178136_f.get()._field_Ident)}));
		_1ad0e8248_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad107e4a_checkFnDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	jule::Bool _180434_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc5ed09b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _180521_f = *it;
			{
				_1ad107bd6_checkFnDecl(_self_, _180521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_180434_ok = false;
					return _180434_ok;
				};
			}
			_iter_next_1bc5ed09b:;
			++it;
			goto _iter_begin_1bc5ed09b;
		}
		_iter_end_1bc5ed09b:;
	};
	_180434_ok = true;
	return _180434_ok;
}



inline void _1ad108313_pushCycleError(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac43a6e0_Struct>& _181530_st1, jule::Ptr<_1ac43a6e0_Struct>& _181545_st2, jule::Str& _181564_message) {
	;
	jule::Str _181713_refers_to = _1a9272706_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_181530_st1.get()._field_Ident),jule::Any(_181545_st2.get()._field_Ident)}));;
	(_181564_message).buffer.insert(0, (((_1a9138028_Repeat(jule::Str(" ", 1),4LL) + _181713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ad108764_checkCrossCycle(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac43a6e0_Struct>& _182131_st1, jule::Ptr<_1ac43a6e0_Struct>& _182146_st2, jule::Str& _182165_message) {
	{
		auto &expr = _182146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1bc601643:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> &_182216_u = *it;
			{
				if ((_182216_u == _182131_st1)) {
					_1ad108313_pushCycleError(&(*_self_), _182146_st2,_182216_u,_182165_message);
					return false;
				};
				if ((!(_1ad108764_checkCrossCycle(&(*_self_), _182131_st1,_182216_u,_182165_message)))) {
					_1ad108313_pushCycleError(&(*_self_), _182146_st2,_182216_u,_182165_message);
					return false;
				};
			}
			_iter_next_1bc601643:;
			++it;
			goto _iter_begin_1bc601643;
		}
		_iter_end_1bc601643:;
	};
	return true;
}



inline jule::Bool _1ad108bd7_checkStructDeriveIllegalCycles(_1ad0e5267_Sema* _self_, jule::Str _183649_derive, jule::Ptr<_1ac43a6e0_Struct>& _183663_st1, jule::Ptr<_1ad18522a_TypeKind>& _183682_k) {
	jule::Bool _183698_ok = jule::Bool();
	jule::Ptr<_1ac43a6e0_Struct> _183717_st2 = _1ad1a32d1_getStructFromKind(_183682_k);;
	if ((_183717_st2 == nullptr)) {
		_183698_ok = true;
		return _183698_ok;
	};
	if ((_183663_st1 == _183717_st2)) {
		_1ad0e7e29_pushErr(&(*_self_), _183663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_183649_derive),jule::Any(_183663_st1.get()._field_Ident)}));
		_183698_ok = false;
		return _183698_ok;
	};
	jule::Str _184917_message = jule::Str();;
	if ((!(_1ad108764_checkCrossCycle(&(*_self_), _183663_st1,_183717_st2,_184917_message)))) {
		jule::Str _185121_errMsg = _184917_message;;
		_184917_message=jule::Str();
		_1ad108313_pushCycleError(&(*_self_), _183663_st1,_183717_st2,_184917_message);
		_185121_errMsg=(_185121_errMsg + _184917_message);
		_1ad0e7e29_pushErr(&(*_self_), _183663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_183649_derive),jule::Any(_185121_errMsg)}));
		_183698_ok = false;
		return _183698_ok;
	};
	_183698_ok = true;
	return _183698_ok;
}



inline jule::Bool _1ad109028_checkStructInsDeriveClone(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac466a3a_StructIns> _186148_st) {
	jule::Bool _186166_ok = jule::Bool();
	if ((!(_1ac4268da_IsDerives(_186148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_186166_ok = true;
		return _186166_ok;
	};
	{
		auto &expr = _186148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc607d86:;
		if (it != expr.end()) {
			jule::Ptr<_1ac442d57_FieldIns> _186521_f = *it;
			{
				if ((_186521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1bc607d86;
				};
				if ((!(_1ad186d64_SupportsCloning(_186521_f.get()._field_Kind.ptr())))) {
					_1ad0e7e29_pushErr(&(*_self_), _186148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_186521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_186166_ok = false;
					return _186166_ok;
				};
				if ((!(_1ad108bd7_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_186148_st.get()._field_Decl,_186521_f.get()._field_Kind)))) {
					_186166_ok = false;
					return _186166_ok;
				};
			}
			_iter_next_1bc607d86:;
			++it;
			goto _iter_begin_1bc607d86;
		}
		_iter_end_1bc607d86:;
	};
	_186166_ok = true;
	return _186166_ok;
}



inline void _1ad109215_checkPackageDecls(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc608480:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _188321_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _188321_f);
				if ((!(_1ad103a39_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1ad1027e6_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc608480:;
			++it;
			goto _iter_begin_1bc608480;
		}
		_iter_end_1bc608480:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc60aa15:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _189321_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _189321_f);
				if ((!(_1ad1051bc_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc60aa15:;
			++it;
			goto _iter_begin_1bc60aa15;
		}
		_iter_end_1bc60aa15:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc60bb37:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _190021_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _190021_f);
				if ((!(_1ad1069a4_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bc60bb37:;
			++it;
			goto _iter_begin_1bc60bb37;
		}
		_iter_end_1bc60bb37:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc60c154:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _190721_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _190721_f);
				{
					
					if ((!(_1ad107e4a_checkFnDecls(_self_)))) {
						_case_begin_1bc60e387:;
					}
					else if ((!(_1ad107961_checkStructDecls(_self_)))) {
						_case_begin_1bc60e3ed:;
					}
					else {
						_case_begin_1bc60e321:;
						{
							goto _iter_next_1bc60c154;
						}
					}
					_match_end_1bc60e2aa:;
				};
				return;;
			}
			_iter_next_1bc60c154:;
			++it;
			goto _iter_begin_1bc60c154;
		}
		_iter_end_1bc60c154:;
	};
}



inline void _1ad109556_checkDataForTypeInference(_1ad0e5267_Sema* _self_, jule::Ptr<_1ad159188_Data>& _191945_d, jule::Ptr<_1a959a127_Token>& _191956_err_token) {
	{
		
		if (_1ad159573_IsNil(_191945_d.ptr())) {
			_case_begin_1bc6103aa:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _191956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1ad1597d7_IsVoid(_191945_d.ptr())) {
			_case_begin_1bc610432:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _191956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_191945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1bc6104a9:;
			{
				_1ad0e7e29_pushErr(&(*_self_), _191956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc610278:;
	};
}



inline void _1ad1097dc_checkVar(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad112097_Var>& _193033_v) {
	if (_193033_v.get()._field_CppLinked) {
		return;;
	};
	if (_1ad1126b3_IsTypeInferred(_193033_v.ptr())) {
		_193033_v.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_193033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1ad109556_checkDataForTypeInference(_self_.ptr(), _193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1ad101b25_checkValidityForInitExpr(_self_, _193033_v.get()._field_Mutable,_193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1ad19108d_Arr> _194721_arr = _1ad188052_Arr(_193033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_194721_arr != nullptr)) {
			if (_194721_arr.get()._field_Auto) {
				jule::Ptr<_1ad19108d_Arr> _195025_dataArr = _1ad188052_Arr(_193033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_195025_dataArr != nullptr)) {
					_194721_arr.get()._field_N=_195025_dataArr.get()._field_N;
				};
			};
		};
		if (_1ad0edddb_checkAssignType(_self_, _193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1ad101b25_checkValidityForInitExpr(_self_, _193033_v.get()._field_Mutable,_193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_193033_v.get()._field_Reference && (!(_1ad1a2643_isValidForRef(_193033_v.get()._field_Kind.get()._field_Kind))))) {
		_1ad0e7e29_pushErr(_self_.ptr(), _193033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_193033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_193033_v.get()._field_Constant) {
		if ((!(_1ad159a4b_IsConst(_193033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1ad0e7e29_pushErr(_self_.ptr(), _193033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_193033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1ad188ecb_Tup(_193033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_193033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1ad109b0b_checkTypeVar(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ad112097_Var>& _198537_decl, jule::Trait<_1ad1a5bb8_Lookup> _198553_l) {
	if ((_198537_decl.get()._field_CppLinked || (!(_1ad11244e_IsInitialized(_198537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1ad15ac06_Eval> _199017_eval = nullptr;;
	if ((_198537_decl.get()._field_Kind != nullptr)) {
		_199017_eval=_1ad0ed22b_evalpd(_self_, _198553_l,_198537_decl.get()._field_Kind.get()._field_Kind,_198537_decl);
	} else {
		_199017_eval=_1ad0ed22b_evalpd(_self_, _198553_l,nullptr,_198537_decl);
	};
	_199017_eval.get()._field_immutable=(!(_198537_decl.get()._field_Mutable));
	_198537_decl.get()._field_Value.get()._field_Data=_1ad1769be_evalExpr(_199017_eval, _198537_decl.get()._field_Value.get()._field_Expr);
	if ((_198537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1ad1097dc_checkVar(_self_, _198537_decl);
}



inline void _1ad109cd7_checkGlobalTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc61e661:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _200621_decl = *it;
			{
				if (((_1ad11244e_IsInitialized(_200621_decl.ptr()) && (_200621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1ad1126b3_IsTypeInferred(_200621_decl.ptr()) && (_200621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1ad109b0b_checkTypeVar(_self_, _200621_decl,jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));
				};
			}
			_iter_next_1bc61e661:;
			++it;
			goto _iter_begin_1bc61e661;
		}
		_iter_end_1bc61e661:;
	};
}



inline jule::Ptr<_1ac515831_FnIns> _1ad10a18e_readyToCheckFn(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _201739_s, jule::Ptr<_1ac512b80_Fn>& _201759_f) {
	jule::Ptr<_1ac515831_FnIns> _201817_ins = _1ac5142d0_instance(_201759_f);;
	if ((_201759_f.get()._field_Instances.len() != 0LL)) {
		return _201817_ins;
	};
	_201817_ins.get()._field_Owner=_201739_s;
	_1ac5145aa_appendInstance(_201759_f.ptr(), _201817_ins);
	_201817_ins.get()._field_reloaded=true;
	if (_1ad1010ca_reloadFnInsTypes(_self_, _201817_ins)) {
		return _201817_ins;
	};
	return nullptr;
}



inline void _1ad10a4ad_checkTypeMethod(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _203140_s, jule::Ptr<_1ac512b80_Fn>& _203160_f) {
	if ((_203160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ac515831_FnIns> _203617_ins = _203160_f.get()._field_Instances[0LL];;
	if ((_203617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ad10cb86_checkFnIns(_self_, _203617_ins);
}



inline jule::Ptr<_1ac515831_FnIns> _1ad10a90e_checkStructInsOp(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _204441_s, jule::Ptr<_1ac512b80_Fn>& _204461_f, jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)> _204469_p) {
	if ((((_204461_f == nullptr) || (_204461_f.get()._field_Generics.len() > 0LL)) || (!(_204469_p(_204461_f))))) {
		return nullptr;
	};
	return _204461_f.get()._field_Instances[0LL];
}



inline jule::Bool _1ad10acb6_checkStructEnv(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _205439_s, jule::Ptr<_1a959a127_Token> _205458_errorToken) {
	jule::Bool _205480_ok = jule::Bool();
	_1ad193755_typeChecker _205517_tc = _1ad193755_typeChecker{._field_s=_205439_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1ad1a5bb8_Lookup>(_205439_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_205439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1ad192941_referencer>(_1ad192941_referencer{._field_ident=_205439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_205439_s.get()._field_Decl), }), ._field_refers=_205439_s.get()._field_Refers, };;
	if ((_205439_s.get()._field_Generics.len() > 0LL)) {
		_205517_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>::alloc(0LL,_205439_s.get()._field_Generics.len());
		{
			auto &expr = _205439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bc628bed:;
			if (it != expr.end()) {
				jule::I64 _206818_i = it - expr.begin();
				jule::Ptr<_1ad1839ed_InsGeneric> _206825_g = *it;
				{
					_205517_tc._field_useGenerics = jule::alloc_for_append(_205517_tc._field_useGenerics,1);_205517_tc._field_useGenerics.__push(jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Ident=_205439_s.get()._field_Decl.get()._field_Generics[_206818_i].get()._field_Ident, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_206825_g.get()._field_Kind}), }));;
				}
				_iter_next_1bc628bed:;
				++it;
				_206818_i++;
				goto _iter_begin_1bc628bed;
			}
			_iter_end_1bc628bed:;
		};
	};
	jule::Ptr<_1ad15442a_SymbolTable> _207617_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1ad0e7a61_setCurrentFile(_self_.ptr(), _207617_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _205439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1ad15442a_SymbolTable> _208021_file = _1ad0e4871_findFile(_self_.get()._field_files,_205439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_208021_file != nullptr)) {
			_1ad0e7a61_setCurrentFile(_self_.ptr(), _208021_file);
		};
	};
	if ((_205439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ac540d78_constraintChecker> _208721_cc = _1ad0ebda6_constraintChecker(_self_);;
		_208721_cc.get()._field_et=_205458_errorToken;
		_208721_cc.get()._field_si=_205439_s;
		_208721_cc.get()._field_genericsA=_205517_tc._field_useGenerics;
		_208721_cc.get()._field_uniq=true;
		if ((!(_1ac585bae_check(_208721_cc)))) {
			return _205480_ok;
		};
	};
	jule::Ptr<_1ad15ac06_Eval> _209717_eval = _1ad0ed8e1_eval(_self_, jule::Trait<_1ad1a5bb8_Lookup>(_self_, 3));;
	_205480_ok=true;
	{
		auto &expr = _205439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc62ebc1:;
		if (it != expr.end()) {
			jule::Ptr<_1ac442d57_FieldIns> _209921_f = *it;
			{
				jule::Ptr<_1ad18522a_TypeKind> _210021_kind = _1ad1a082d_checkDecl(&_205517_tc, _209921_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_205480_ok=((_210021_kind != nullptr) && _205480_ok);
				if ((_210021_kind == nullptr)) {
					if (((_self_ != _205439_s.get()._field_Decl.get()._field_sema) && (_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1bc62ebc1;
				};
				_209921_f.get()._field_Kind=_210021_kind;
				_205439_s.get()._field_Mutable=(_205439_s.get()._field_Mutable || ((!(_209921_f.get()._field_Decl.get()._field_Mutable)) && _1ad186627_Mutable(_209921_f.get()._field_Kind.ptr())));
				_1ad109028_checkStructInsDeriveClone(_self_.ptr(), _205439_s);
				if ((_209921_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1bc62ebc1;
				};
				_209717_eval.get()._field_prefix=_209921_f.get()._field_Kind;
				_209717_eval.get()._field_field=_209921_f;
				_209921_f.get()._field_Default=_1ad1769be_evalExpr(_209717_eval, _209921_f.get()._field_Decl.get()._field_Default);
				if ((_209921_f.get()._field_Default == nullptr)) {
					goto _iter_next_1bc62ebc1;
				};
				;
				_1ad0edddb_checkAssignType(_self_, false,_209921_f.get()._field_Kind,_209921_f.get()._field_Default,_209921_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1bc62ebc1:;
			++it;
			goto _iter_begin_1bc62ebc1;
		}
		_iter_end_1bc62ebc1:;
	};
	return _205480_ok;
}



inline jule::Bool _1ad10b16d_precheckStructIns(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _213342_s, jule::Ptr<_1a959a127_Token> _213361_errorToken) {
	jule::Bool _213383_ok = jule::Bool();
	_213383_ok=_1ad10acb6_checkStructEnv(_self_, _213342_s,_213361_errorToken);
	if ((!(_213383_ok))) {
		_213383_ok = false;
		return _213383_ok;
	};
	{
		auto &expr = _213342_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc636667:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _213821_f = *it;
			{
				if ((_213821_f.get()._field_Generics.len() == 0LL)) {
					if ((_1ad10a18e_readyToCheckFn(_self_, _213342_s,_213821_f) == nullptr)) {
						_213383_ok = false;
						return _213383_ok;
					};
				};
			}
			_iter_next_1bc636667:;
			++it;
			goto _iter_begin_1bc636667;
		}
		_iter_end_1bc636667:;
	};
	_213383_ok = true;
	return _213383_ok;
}



inline void _1ad10b3e3_checkStructIns(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns>& _214839_s) {
	{
		auto &expr = _214839_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc638218:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _214921_f = *it;
			{
				_1ad10a4ad_checkTypeMethod(_self_, _214839_s,_214921_f);
			}
			_iter_next_1bc638218:;
			++it;
			goto _iter_begin_1bc638218;
		}
		_iter_end_1bc638218:;
	};
}



inline void _1ad10b668_checkTypeStruct(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _215440_s) {
	if (_215440_s.get()._field_CppLinked) {
		return;;
	};
	if ((_215440_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _215440_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bc639725:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _216721_ins = *it;
			{
				_1ad10b3e3_checkStructIns(_self_, _216721_ins);
			}
			_iter_next_1bc639725:;
			++it;
			goto _iter_begin_1bc639725;
		}
		_iter_end_1bc639725:;
	};
}



inline void _1ad10b844_checkStructTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc63a33b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _217321_s = *it;
			{
				_1ad10b668_checkTypeStruct(_self_, _217321_s);
			}
			_iter_next_1bc63a33b:;
			++it;
			goto _iter_begin_1bc63a33b;
		}
		_iter_end_1bc63a33b:;
	};
}



inline void _1ad10badb_checkStructInsOperators(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac466a3a_StructIns> _217847_s) {
	{
		auto &expr = _217847_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc63b68e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _217921_m = *it;
			{
				{
					auto &_match_expr{ _217921_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1bc63c41a:;
						{
							_217847_s.get()._field_Operators._field_Eq=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _218265_f) mutable -> jule::Bool {
								return static__1ad113ac1_Eq(_218265_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1bc63c481:;
						{
							_217847_s.get()._field_Operators._field_Gt=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _218465_f) mutable -> jule::Bool {
								return static__1ad113d68_Gt(_218465_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1bc63c508:;
						{
							_217847_s.get()._field_Operators._field_GtEq=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _218667_f) mutable -> jule::Bool {
								return static__1ad114110_GtEq(_218667_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1bc63c580:;
						{
							_217847_s.get()._field_Operators._field_Lt=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _218865_f) mutable -> jule::Bool {
								return static__1ad1143a7_Lt(_218865_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1bc63c607:;
						{
							_217847_s.get()._field_Operators._field_LtEq=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _219067_f) mutable -> jule::Bool {
								return static__1ad11464e_LtEq(_219067_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1bc63c67e:;
						{
							_217847_s.get()._field_Operators._field_Shl=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _219266_f) mutable -> jule::Bool {
								return static__1ad114c37_Shl(_219266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1bc63c706:;
						{
							_217847_s.get()._field_Operators._field_Shr=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _219466_f) mutable -> jule::Bool {
								return static__1ad114ece_Shr(_219466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1bc63c77d:;
						{
							_217847_s.get()._field_Operators._field_Add=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _219666_f) mutable -> jule::Bool {
								return static__1ad115276_Add(_219666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1bc63c805:;
						{
							_217847_s.get()._field_Operators._field_Sub=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _219866_f) mutable -> jule::Bool {
								return static__1ad11551d_Sub(_219866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1bc63c87c:;
						{
							_217847_s.get()._field_Operators._field_Div=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _220066_f) mutable -> jule::Bool {
								return static__1ad1157b5_Div(_220066_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1bc63c904:;
						{
							_217847_s.get()._field_Operators._field_Mul=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _220266_f) mutable -> jule::Bool {
								return static__1ad115a5c_Mul(_220266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1bc63c97b:;
						{
							_217847_s.get()._field_Operators._field_Mod=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _220466_f) mutable -> jule::Bool {
								return static__1ad115d04_Mod(_220466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1bc63ca03:;
						{
							_217847_s.get()._field_Operators._field_BitAnd=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _220669_f) mutable -> jule::Bool {
								return static__1ad11609b_BitAnd(_220669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1bc63ca7a:;
						{
							_217847_s.get()._field_Operators._field_BitOr=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _220868_f) mutable -> jule::Bool {
								return static__1ad116343_BitOr(_220868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1bc63cb02:;
						{
							_217847_s.get()._field_Operators._field_BitXor=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _221069_f) mutable -> jule::Bool {
								return static__1ad1165da_BitXor(_221069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1bc63cb79:;
						{
							_217847_s.get()._field_Operators._field_Neg=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _221266_f) mutable -> jule::Bool {
								return static__1ad116bc3_Neg(_221266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1bc63cc01:;
						{
							_217847_s.get()._field_Operators._field_Pos=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _221466_f) mutable -> jule::Bool {
								return static__1ad116e6a_Pos(_221466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1bc63cc78:;
						{
							_217847_s.get()._field_Operators._field_BitNot=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _221669_f) mutable -> jule::Bool {
								return static__1ad117212_BitNot(_221669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1bc63cd00:;
						{
							_217847_s.get()._field_Operators._field_AddAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _221872_f) mutable -> jule::Bool {
								return static__1ad1177ea_AddAssign(_221872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1bc63cd77:;
						{
							_217847_s.get()._field_Operators._field_SubAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _222072_f) mutable -> jule::Bool {
								return static__1ad117a92_SubAssign(_222072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1bc63cdee:;
						{
							_217847_s.get()._field_Operators._field_DivAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _222272_f) mutable -> jule::Bool {
								return static__1ad117d39_DivAssign(_222272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1bc63ce76:;
						{
							_217847_s.get()._field_Operators._field_MulAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _222472_f) mutable -> jule::Bool {
								return static__1ad1180d1_MulAssign(_222472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1bc63ceed:;
						{
							_217847_s.get()._field_Operators._field_ModAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _222672_f) mutable -> jule::Bool {
								return static__1ad118378_ModAssign(_222672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1bc63d075:;
						{
							_217847_s.get()._field_Operators._field_ShlAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _222872_f) mutable -> jule::Bool {
								return static__1ad118620_ShlAssign(_222872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1bc63d0ec:;
						{
							_217847_s.get()._field_Operators._field_ShrAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _223072_f) mutable -> jule::Bool {
								return static__1ad1188b7_ShrAssign(_223072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1bc63d174:;
						{
							_217847_s.get()._field_Operators._field_BitOrAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _223274_f) mutable -> jule::Bool {
								return static__1ad118b5e_BitOrAssign(_223274_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1bc63d1eb:;
						{
							_217847_s.get()._field_Operators._field_BitAndAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _223475_f) mutable -> jule::Bool {
								return static__1ad118e06_BitAndAssign(_223475_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1bc63d273:;
						{
							_217847_s.get()._field_Operators._field_BitXorAssign=_1ad10a90e_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1ac512b80_Fn>)>([=](jule::Ptr<_1ac512b80_Fn> _223675_f) mutable -> jule::Bool {
								return static__1ad11919d_BitXorAssign(_223675_f);
							}));
						}
					}
					_match_end_1bc63beec:;
				};
			}
			_iter_next_1bc63b68e:;
			++it;
			goto _iter_begin_1bc63b68e;
		}
		_iter_end_1bc63b68e:;
	};
}



inline void _1ad10bd72_precheckStructType(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac43a6e0_Struct>& _224143_s) {
	if (_224143_s.get()._field_CppLinked) {
		return;;
	};
	if ((_224143_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_224143_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac466a3a_StructIns> _225221_ins = _1ac41cc88_instance(_224143_s);;
		_225221_ins.get()._field_Checked=true;
		_1ac422001_appendInstance(_224143_s.ptr(), _225221_ins);
		_1ad10b16d_precheckStructIns(_self_, _225221_ins,nullptr);
	};
	_1ad10badb_checkStructInsOperators(_self_, _224143_s.get()._field_Instances[0LL]);
}



inline void _1ad10c04d_precheckStructTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc66849b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _226221_s = *it;
			{
				_1ad10bd72_precheckStructType(_self_, _226221_s);
			}
			_iter_next_1bc66849b:;
			++it;
			goto _iter_begin_1bc66849b;
		}
		_iter_end_1bc66849b:;
	};
}



inline void _1ad10c2c3_checkRets(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac515831_FnIns>& _226733_f) {
	if (_1ac5130e2_IsVoid(_226733_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1ad10e46d_missingRetChecker _227113_mrc = static__1ad10e836_new();;
	jule::Bool _227213_ok = _1ad110848_check(&_227113_mrc, _226733_f.get()._field_Scope);;
	if ((!(_227213_ok))) {
		_1ad0e7e29_pushErr(&(*_self_), _226733_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1ad10c5e2_checkFnInsSc(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac515831_FnIns>& _227836_f, jule::Ptr<_1ad0c7799_scopeChecker>& _227852_sc) {
	_1ad0e3e8b_appendRetVars(_227852_sc.get()._field_table.get()._field_Vars,_227836_f);
	_1ad0e4244_appendParamVars(_227852_sc.get()._field_table.get()._field_Vars,_227836_f);
	_1ad0e451e_appendGenericTypeAliases(_227852_sc.get()._field_table.get()._field_TypeAliases,_227836_f);
	_1ad0d5664_check(_227852_sc, _227836_f.get()._field_Decl.get()._field_Scope,_227836_f.get()._field_Scope);
	if ((!(_1ad0c8910_stopped(_227852_sc.ptr())))) {
		_1ad10c2c3_checkRets(&(*_self_), _227836_f);
	};
}



inline void _1ad10c911_checkFnInsCaller(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns>& _229141_f, jule::Ptr<_1a959a127_Token> _229156_caller) {
	if (_229141_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1ad15442a_SymbolTable> _229617_old = _229141_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1ad0e7a61_setCurrentFile(_229141_f.get()._field_Decl.get()._field_sema.ptr(), _229617_old);
	});;
	jule::Ptr<_1ad15442a_SymbolTable> _229817_file = _1ad0e4871_findFile(_229141_f.get()._field_Decl.get()._field_sema.get()._field_files,_229141_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_229817_file != nullptr)) {
		_1ad0e7a61_setCurrentFile(_229141_f.get()._field_Decl.get()._field_sema.ptr(), _229817_file);
	};
	jule::Ptr<_1ad0c7799_scopeChecker> _230317_sc = _1ac597132_newScopeChecker(_229141_f.get()._field_Decl.get()._field_sema,_229141_f);;
	_230317_sc.get()._field_calledFrom=_229156_caller;
	_1ad10c5e2_checkFnInsSc(_self_.ptr(), _229141_f,_230317_sc);
	if ((_229141_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_229141_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_229141_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1ad10cb86_checkFnIns(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac515831_FnIns>& _231335_f) {
	_1ad10c911_checkFnInsCaller(_self_, _231335_f,nullptr);
}



inline void _1ad10ce0b_checkTypeFn(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _231736_f) {
	if (_231736_f.get()._field_CppLinked) {
		return;;
	};
	if ((_231736_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _231736_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bc673ac2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac515831_FnIns> _232721_ins = *it;
			{
				_1ad10cb86_checkFnIns(_self_, _232721_ins);
			}
			_iter_next_1bc673ac2:;
			++it;
			goto _iter_begin_1bc673ac2;
		}
		_iter_end_1bc673ac2:;
	};
}



inline void _1ad10d181_checkTestFn(_1ad0e5267_Sema* _self_, jule::Ptr<_1ac515831_FnIns>& _233235_f) {
	if (_233235_f.get()._field_Decl.get()._field_Public) {
		_1ad0e7e29_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_233235_f.get()._field_Params.len() != 1LL) || (_233235_f.get()._field_Result != nullptr))) {
		_1ad0e7e29_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad18d486_Sptr> _234517_sptr = _1ad1875a1_Sptr(_233235_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_234517_sptr == nullptr)) {
		_1ad0e7e29_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac466a3a_StructIns> _235213_s = _1ad18878e_Struct(_234517_sptr.get()._field_Elem.ptr());;
	if (((_235213_s == nullptr) || (!(_1ad0e264e_isStdPackage(_235213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1ad0e7e29_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad0e8248_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ad10d406_precheckTypeFn(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Ptr<_1ac512b80_Fn>& _236039_f) {
	if (_236039_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236039_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_236039_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac515831_FnIns> _237121_ins = _1ac51406b_instanceForce(_236039_f);;
		_236039_f.get()._field_Instances = jule::alloc_for_append(_236039_f.get()._field_Instances,1);_236039_f.get()._field_Instances.__push(_237121_ins);;
		_1ad1010ca_reloadFnInsTypes(_self_, _237121_ins);
		_237121_ins.get()._field_reloaded=true;
		if (_1ad1a1cd5_hasDirective(_236039_f.get()._field_Directives,jule::Str("test", 4))) {
			_1ad10d181_checkTestFn(_self_.ptr(), _237121_ins);
		};
	};
}



inline void _1ad10d5d2_precheckFnTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc67d69d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> _238421_decl = *it;
			{
				{
					auto &expr = _238421_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bc67e061:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _238525_m = *it;
						{
							_1ad10d406_precheckTypeFn(_self_, _238525_m);
						}
						_iter_next_1bc67e061:;
						++it;
						goto _iter_begin_1bc67e061;
					}
					_iter_end_1bc67e061:;
				};
			}
			_iter_next_1bc67d69d:;
			++it;
			goto _iter_begin_1bc67d69d;
		}
		_iter_end_1bc67d69d:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc67dc75:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _238921_decl = *it;
			{
				_1ad10d406_precheckTypeFn(_self_, _238921_decl);
			}
			_iter_next_1bc67dc75:;
			++it;
			goto _iter_begin_1bc67dc75;
		}
		_iter_end_1bc67dc75:;
	};
}



inline void _1ad10d7ad_checkFnTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc68042a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _239621_decl = *it;
			{
				_1ad10ce0b_checkTypeFn(_self_, _239621_decl);
			}
			_iter_next_1bc68042a:;
			++it;
			goto _iter_begin_1bc68042a;
		}
		_iter_end_1bc68042a:;
	};
}



inline void _1ad10d989_checkPackageTypes(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc680c44:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _240421_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _240421_f);
				_1ad109cd7_checkGlobalTypes(_self_);
				_1ad10d5d2_precheckFnTypes(_self_);
				_1ad10c04d_precheckStructTypes(_self_);
			}
			_iter_next_1bc680c44:;
			++it;
			goto _iter_begin_1bc680c44;
		}
		_iter_end_1bc680c44:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc682aae:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _241521_f = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _241521_f);
				_1ad10d7ad_checkFnTypes(_self_);
				_1ad10b844_checkStructTypes(_self_);
			}
			_iter_next_1bc682aae:;
			++it;
			goto _iter_begin_1bc682aae;
		}
		_iter_end_1bc682aae:;
	};
}



inline void _1ad10db65_setFileSemaFields(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc683197:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _242321_f = *it;
			{
				_242321_f.get()._field_sema=_self_;
			}
			_iter_next_1bc683197:;
			++it;
			goto _iter_begin_1bc683197;
		}
		_iter_end_1bc683197:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc6842a8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _242621_st = *it;
			{
				_242621_st.get()._field_sema=_self_;
			}
			_iter_next_1bc6842a8:;
			++it;
			goto _iter_begin_1bc6842a8;
		}
		_iter_end_1bc6842a8:;
	};
}



inline void _1ad10dd41_setSemaFields(jule::Ptr<_1ad0e5267_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bc684cae:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _243221_file = *it;
			{
				_1ad0e7a61_setCurrentFile(_self_.ptr(), _243221_file);
				_1ad10db65_setFileSemaFields(_self_);
			}
			_iter_next_1bc684cae:;
			++it;
			goto _iter_begin_1bc684cae;
		}
		_iter_end_1bc684cae:;
	};
}



inline void _1ad10e0b6_check(jule::Ptr<_1ad0e5267_Sema> _self_, jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _243830_files) {
	_self_.get()._field_files=_243830_files;
	_1ad0ea668_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad10dd41_setSemaFields(_self_);
	_1ad0eabeb_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad0eaa20_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad109215_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad10d989_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad0e5267_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1ad10e46d_missingRetChecker static__1ad10e836_new(void) {
	return _1ad10e46d_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1ad10eb11_checkConditional(_1ad10e46d_missingRetChecker* _self_, jule::Ptr<_1ad0c505a_Conditional> _248135_c) {
	{
		auto &expr = _248135_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bc689214:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c4b81_If> _248221_elif = *it;
			{
				if ((_248221_elif == nullptr)) {
					return false;
				};
				if ((!(_1ad11053a_checkScope(&(*_self_), _248221_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1bc689214:;
			++it;
			goto _iter_begin_1bc689214;
		}
		_iter_end_1bc689214:;
	};
	return ((_248135_c.get()._field_Default != nullptr) && _1ad11053a_checkScope(&(*_self_), _248135_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1ad10ee1e_checkMatch(_1ad10e46d_missingRetChecker* _self_, jule::Ptr<_1ad0c6677_Match> _249329_m) {
	{
		auto &expr = _249329_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bc68b689:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c6bc7_Case> _249421_c = *it;
			{
				if ((_249421_c == nullptr)) {
					return false;
				};
				jule::I64 _249817_n = (*_self_)._field_breaked.len();;
				jule::Bool _249917_ok = _1ad11053a_checkScope(&(*_self_), _249421_c.get()._field_Scope);;
				{
					
					if ((_249817_n != (*_self_)._field_breaked.len())) {
						_case_begin_1bc68d405:;
						{
							return false;
						}
					}
					else if ((!(_249917_ok))) {
						_case_begin_1bc68d47c:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1bc68d504;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1bc68d504:;
						{
							(*_self_)._field_falled=false;
							if ((_249421_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1bc68b689;
						}
					}
					_match_end_1bc68d35b:;
				};
			}
			_iter_next_1bc68b689:;
			++it;
			goto _iter_begin_1bc68b689;
		}
		_iter_end_1bc68b689:;
	};
	return ((_249329_m.get()._field_Default != nullptr) && _1ad11053a_checkScope(&(*_self_), _249329_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1ad11022c_checkInfIter(_1ad10e46d_missingRetChecker* _self_, jule::Ptr<_1ad0c5247_InfIter> _251931_it) {
	jule::I64 _252013_n = (*_self_)._field_breaked.len();;
	if (_1ad11053a_checkScope(&(*_self_), _251931_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
		return true;
	};
	if ((_252013_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _252617_itaddr = static_cast<jule::Uintptr>(_251931_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_252013_n);
			auto it = expr.begin();
			_iter_begin_1bc692272:;
			if (it != expr.end()) {
				jule::Uintptr _252720_addr = *it;
				{
					if ((_252617_itaddr == _252720_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
						return false;
					};
				}
				_iter_next_1bc692272:;
				++it;
				goto _iter_begin_1bc692272;
			}
			_iter_end_1bc692272:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
	};
	return true;
}



inline jule::Bool _1ad11053a_checkScope(_1ad10e46d_missingRetChecker* _self_, jule::Ptr<_1ad0c4994_Scope> _253829_s) {
	if ((_253829_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _253829_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bc693e55:;
		if (it != expr.end()) {
			jule::Any _254221_st = *it;
			{
				{
					auto &_match_expr{ _254221_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ad0c6ee6_FallSt>>()) {
						_case_begin_1bc69484b:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c59ea_BreakSt>>()) {
						_case_begin_1bc6948e5:;
						{
							jule::Uintptr _254821_addr = _254221_st.operator jule::Ptr<_1ad0c59ea_BreakSt>().get()._field_It;;
							if ((_254821_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_254821_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c580d_ContSt>>()) {
						_case_begin_1bc69495b:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
						_case_begin_1bc6949c2:;
						{
							if (_1ad11022c_checkInfIter(&(*_self_), _254221_st.operator jule::Ptr<_1ad0c5247_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c71d3_RetSt>>()) {
						_case_begin_1bc694a38:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c4994_Scope>>()) {
						_case_begin_1bc694a9e:;
						{
							if (_1ad11053a_checkScope(&(*_self_), _254221_st.operator jule::Ptr<_1ad0c4994_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
						_case_begin_1bc694b26:;
						{
							{
								auto &_match_expr{ _254221_st.operator jule::Ptr<_1ad159188_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
									_case_begin_1bc698883:;
									{
										return true;
									}
								}
								_match_end_1bc6985b9:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c505a_Conditional>>()) {
						_case_begin_1bc694b9d:;
						{
							if (_1ad10eb11_checkConditional(&(*_self_), _254221_st.operator jule::Ptr<_1ad0c505a_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
						_case_begin_1bc694c25:;
						{
							if (_1ad10ee1e_checkMatch(&(*_self_), _254221_st.operator jule::Ptr<_1ad0c6677_Match>())) {
								return true;
							};
						}
					}
					_match_end_1bc6946a3:;
				};
			}
			_iter_next_1bc693e55:;
			++it;
			goto _iter_begin_1bc693e55;
		}
		_iter_end_1bc693e55:;
	};
	return false;
}



inline jule::Bool _1ad110848_check(_1ad10e46d_missingRetChecker* _self_, jule::Ptr<_1ad0c4994_Scope> _258424_s) {
	return _1ad11053a_checkScope(&(*_self_), _258424_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad10e46d_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad11112e_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad11244e_IsInitialized(_1ad112097_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1ad1126b3_IsTypeInferred(_1ad112097_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad112097_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ad113241_Dispose(jule::Ptr<_1ac512b80_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1ac5130e2_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1ac511bd4_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1ad1134d8_Str(jule::Ptr<_1ac512b80_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1ac5130e2_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1ac511bd4_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1ac515831_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1ad189c02_Prim> _3913_prim = _1ad18733c_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1ad18ce36_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1ad113829_logical(jule::Ptr<_1ac512b80_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1ac5130e2_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1ac511bd4_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1ac515831_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1ad189c02_Prim> _6413_prim = _1ad18733c_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1ad18cbc2_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1ad18878e_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1ad113ac1_Eq(jule::Ptr<_1ac512b80_Fn> _7218_f) {
	return static__1ad113829_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1ad113d68_Gt(jule::Ptr<_1ac512b80_Fn> _7718_f) {
	return static__1ad113829_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1ad114110_GtEq(jule::Ptr<_1ac512b80_Fn> _8220_f) {
	return static__1ad113829_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1ad1143a7_Lt(jule::Ptr<_1ac512b80_Fn> _8718_f) {
	return static__1ad113829_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1ad11464e_LtEq(jule::Ptr<_1ac512b80_Fn> _9220_f) {
	return static__1ad113829_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1ad114990_result(jule::Ptr<_1ac512b80_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1ac5130e2_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1ac511bd4_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1ac515831_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1ad18878e_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1ad114c37_Shl(jule::Ptr<_1ac512b80_Fn> _11819_f) {
	return static__1ad114990_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1ad114ece_Shr(jule::Ptr<_1ac512b80_Fn> _12319_f) {
	return static__1ad114990_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1ad115276_Add(jule::Ptr<_1ac512b80_Fn> _12819_f) {
	return static__1ad114990_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__1ad11551d_Sub(jule::Ptr<_1ac512b80_Fn> _13319_f) {
	return static__1ad114990_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1ad1157b5_Div(jule::Ptr<_1ac512b80_Fn> _13819_f) {
	return static__1ad114990_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__1ad115a5c_Mul(jule::Ptr<_1ac512b80_Fn> _14319_f) {
	return static__1ad114990_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1ad115d04_Mod(jule::Ptr<_1ac512b80_Fn> _14819_f) {
	return static__1ad114990_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1ad11609b_BitAnd(jule::Ptr<_1ac512b80_Fn> _15322_f) {
	return static__1ad114990_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1ad116343_BitOr(jule::Ptr<_1ac512b80_Fn> _15821_f) {
	return static__1ad114990_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1ad1165da_BitXor(jule::Ptr<_1ac512b80_Fn> _16322_f) {
	return static__1ad114990_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1ad11692b_unary(jule::Ptr<_1ac512b80_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1ac5130e2_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1ac511bd4_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1ac515831_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1ad18878e_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1ad116bc3_Neg(jule::Ptr<_1ac512b80_Fn> _18719_f) {
	return static__1ad11692b_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1ad116e6a_Pos(jule::Ptr<_1ac512b80_Fn> _19219_f) {
	return static__1ad11692b_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1ad117212_BitNot(jule::Ptr<_1ac512b80_Fn> _19722_f) {
	return static__1ad11692b_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1ad117553_assign(jule::Ptr<_1ac512b80_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1ac5130e2_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1ac511bd4_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1ad1177ea_AddAssign(jule::Ptr<_1ac512b80_Fn> _22125_f) {
	return static__1ad117553_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1ad117a92_SubAssign(jule::Ptr<_1ac512b80_Fn> _22625_f) {
	return static__1ad117553_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1ad117d39_DivAssign(jule::Ptr<_1ac512b80_Fn> _23125_f) {
	return static__1ad117553_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1ad1180d1_MulAssign(jule::Ptr<_1ac512b80_Fn> _23625_f) {
	return static__1ad117553_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1ad118378_ModAssign(jule::Ptr<_1ac512b80_Fn> _24125_f) {
	return static__1ad117553_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1ad118620_ShlAssign(jule::Ptr<_1ac512b80_Fn> _24625_f) {
	return static__1ad117553_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1ad1188b7_ShrAssign(jule::Ptr<_1ac512b80_Fn> _25125_f) {
	return static__1ad117553_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1ad118b5e_BitOrAssign(jule::Ptr<_1ac512b80_Fn> _25627_f) {
	return static__1ad117553_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1ad118e06_BitAndAssign(jule::Ptr<_1ac512b80_Fn> _26128_f) {
	return static__1ad117553_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1ad11919d_BitXorAssign(jule::Ptr<_1ac512b80_Fn> _26628_f) {
	return static__1ad117553_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad112ac0_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ad143617_pushErr(_1ad1430ea_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1ad14387b_checkTrait(_1ad1430ea_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1ad18614e_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1ac524a3d_Trait> _12513_trt = _1ad188a03_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1ad1875a1_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1bc6d2845:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1ad1875a1_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1ad18878e_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1bc6d2933;
			}
		}
		else if ((_1ad18878e_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1bc6d2933:;
			{
				jule::Ptr<_1ac466a3a_StructIns> _13617_s = _1ad18878e_Struct((*_self_)._field_src.ptr());;
				if ((!(_1ac4274ce_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1ad13353b_traitHasReferenceReceiver(_12513_trt))) {
					_1ad143617_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1ad188a03_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1bc6d2999:;
			{
				_12131_ok = (_12513_trt == _1ad188a03_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1bc6d21d5:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1bc6d2180:;
	};
}



inline jule::Bool _1ad143ae0_checkPtr(_1ad1430ea_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1ad18614e_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1ad1919ea_Ptr> _15617_dest = _1ad187815_Ptr((*_self_)._field_dest.ptr());;
	if (_1ad1924bd_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1ad185934_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1ad143d54_checkPrim(_1ad1430ea_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1ad189c02_Prim> _16517_prim = _1ad18733c_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1ad18d19a_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1ad185934_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1ad14420b_typeEnum(_1ad1430ea_typeCompatibilityChecker* _self_, jule::Ptr<_1ac52827d_TypeEnum>& _17328_e, jule::Ptr<_1ad18522a_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1bc6da4c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac527bb7_TypeEnumItem> _17421_item = *it;
			{
				if (_1ad185934_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1ac52827d_TypeEnum> _17821_ke = _1ad187cdd_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1bc6da4c9;
				};
				if (_1ad14420b_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1bc6da4c9:;
			++it;
			goto _iter_begin_1bc6da4c9;
		}
		_iter_end_1bc6da4c9:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1ad144470_checkTypeEnum(_1ad1430ea_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1ad185934_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1ac52827d_TypeEnum> _19317_e = _1ad187cdd_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1ad14420b_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1ad1446d4_check(_1ad1430ea_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1ad187815_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1ad143ae0_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1ad18688b_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1ad18614e_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1ad18733c_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc6e090d:;
			{
				_19726_ok = _1ad143d54_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1ad187cdd_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc6e0974:;
			{
				_19726_ok = _1ad144470_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1ad188a03_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1bc6e0c60:;
			{
				_19726_ok = _1ad14387b_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1bc6dea94:;
			{
				_19726_ok = _1ad185934_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1bc6de951:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad1430ea_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ad145185_pushErr(_1ad144c23_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1ad1453e9_checkValidity(_1ad144c23_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1ad18852a_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6e4208:;
			{
				jule::Ptr<_1ac515831_FnIns> _23717_f = _1ad18852a_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1ac516bb7_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1bc6e57d1:;
						{
							_1ad145185_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1bc6e5858:;
						{
							_1ad145185_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1ac513356_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1bc6e58d0:;
						{
							_1ad145185_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1bc6e5957:;
						{
							_1ad145185_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1ad0e8248_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1bc6e5704:;
				};
			}
		}
		else if ((_1ad188ecb_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6e4280:;
			{
				_1ad145185_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1bc6e414d:;
	};
	return _23417_valid;
}



inline jule::Bool _1ad14565d_checkConst(_1ad144c23_assignTypeChecker* _self_) {
	if (((((!(_1ad159a4b_IsConst((*_self_)._field_d.ptr()))) || (_1ad18733c_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1ad0c4554_IsNum(_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1ad18733c_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ad0c4422_IsFloat(_27413_kind)) {
			_case_begin_1bc6ed0e1:;
			{
				if ((!(_1ad12a566_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1ad145185_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1ad0c42e0_IsInt(_27413_kind)) {
			_case_begin_1bc6ec909:;
			{
				if ((!(_1ad141db8_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1ad145185_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1bc6ec893:;
			{
				return false;
			}
		}
		_match_end_1bc6ec83d:;
	};
	return true;
}



inline jule::Bool _1ad1458c2_isPrim(_1ad144c23_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1ad185dda_CppLinked((*_self_)._field_dest.ptr()) || _1ad185dda_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1ad18733c_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1ad145b36_checkCompatibility(_1ad144c23_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1bc701b94:;
			{
				return false;
			}
		}
		else if ((!(_1ad1453e9_checkValidity(&(*_self_))))) {
			_case_begin_1bc701c1b:;
			{
				return false;
			}
		}
		else if (_1ad14565d_checkConst(&(*_self_))) {
			_case_begin_1bc701c93:;
			{
				return true;
			}
		}
		else if ((_1ad187a79_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc701d1a:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1ad187a79_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1ad187a79_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1ad18733c_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1bc701a73;
				};
				if (_1ac87bdea_TypesAreCompatible(_1ad18733c_Prim(_1ad187a79_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1ad18733c_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1ad1458c2_isPrim(&(*_self_))) {
			_case_begin_1bc701d92:;
			{
				jule::Ptr<_1ad189c02_Prim> _32617_dest = _1ad18733c_Prim((*_self_)._field_dest.ptr());;
				if (_1ad18d19a_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1ad189c02_Prim> _33021_src = _1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1ac87bdea_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1bc701a73:;
	};
	return _1ad0ee33c_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1ad145d9a_check(_1ad144c23_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1ad145b36_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1ad1a3831_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad144c23_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc720872_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44c4c1_ArrTypeDecl>>()) {
			_case_begin_1bc721ea0:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1bc722d2a:;
						{
							_36121_elem=_1ad188052_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1bc722c70:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44c4c1_ArrTypeDecl>().get()._field_Elem;
				return _1ad147c8c_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1bc721de5:;
	};
	return false;
}

inline jule::Bool _1bc71eeae_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44b767_SlcTypeDecl>>()) {
			_case_begin_1bc725679:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1bc72659d:;
						{
							_36121_elem=_1ad1882b6_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1bc726449:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44b767_SlcTypeDecl>().get()._field_Elem;
				return _1ad147c8c_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1bc7255be:;
	};
	return false;
}

inline jule::Bool _1bc72227a_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44bd3e_PtrTypeDecl>>()) {
			_case_begin_1bc728eda:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1bc729e75:;
						{
							_36121_elem=_1ad187815_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1bc729caa:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44bd3e_PtrTypeDecl>().get()._field_Elem;
				return _1ad147c8c_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1bc728e30:;
	};
	return false;
}

inline jule::Bool _1bc725954_annotateConstraintElem(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44b36b_SptrTypeDecl>>()) {
			_case_begin_1bc72c32e:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1bc72d330:;
						{
							_36121_elem=_1ad1875a1_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1bc72d0ee:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44b36b_SptrTypeDecl>().get()._field_Elem;
				return _1ad147c8c_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1bc72c274:;
	};
	return false;
}



inline jule::Bool _1ad147022_annotateConstraintMap(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44cc1e_MapTypeDecl>>()) {
			_case_begin_1bc70e4ed:;
			{
				jule::Ptr<_1ad190499_Map> _38121_m = _1ad188c67_Map(_37845_k.ptr());;
				jule::Ptr<_1ac44cc1e_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44cc1e_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1ad147c8c_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1ad147c8c_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1bc70e476:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1ad147330_annotateConstraintTup(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44ba53_TupleTypeDecl>>()) {
			_case_begin_1bc712039:;
			{
				jule::Ptr<_1ac44ba53_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44ba53_TupleTypeDecl>();;
				jule::Ptr<_1ad18e971_Tuple> _39721_tup2 = _1ad188ecb_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1bc7134d0:;
					if (it != expr.end()) {
						jule::Ptr<_1ad18522a_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1bc713d1b:;
								if (it != expr.end()) {
									jule::Ptr<_1ac449eb3_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1ad147c8c_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1bc713d1b:;
									++it;
									goto _iter_begin_1bc713d1b;
								}
								_iter_end_1bc713d1b:;
							};
						}
						_iter_next_1bc7134d0:;
						++it;
						goto _iter_begin_1bc7134d0;
					}
					_iter_end_1bc7134d0:;
				};
			}
		}
		_match_end_1bc711eb2:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1ad14763d_annotateConstraintFn(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bc71427d:;
			{
				jule::Ptr<_1ac45bcc7_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac45bcc7_FnDecl>();;
				jule::Ptr<_1ac515831_FnIns> _41421_f = _1ad18852a_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bc716329:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1ac514962_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1ad147c8c_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1bc716329:;
						++it;
						_41518_i++;
						goto _iter_begin_1bc716329;
					}
					_iter_end_1bc716329:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1ad147c8c_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1bc713a63:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1ad14796d_annotateConstraintIdent(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _43147_k) {
	jule::Ptr<_1ac44a579_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1ac44a579_IdentTypeDecl>();;
	jule::Ptr<_1ac466a3a_StructIns> _43317_s = _1ad18878e_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc71943c:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1ac457597_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1ad1839ed_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1ad1480ab_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1bc71943c;
				};
				jule::Ptr<_1ac449eb3_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bc71c1ba:;
					if (it != expr.end()) {
						jule::Ptr<_1ac449eb3_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1bc71ce35:;
								if (it != expr.end()) {
									jule::Ptr<_1ad1839ed_InsGeneric> _44929_sg = *it;
									{
										if (_1ad147c8c_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1bc71ce35:;
									++it;
									goto _iter_begin_1bc71ce35;
								}
								_iter_end_1bc71ce35:;
							};
						}
						_iter_next_1bc71c1ba:;
						++it;
						goto _iter_begin_1bc71c1ba;
					}
					_iter_end_1bc71c1ba:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1bc71943c:;
			++it;
			_43413_i++;
			goto _iter_begin_1bc71943c;
		}
		_iter_end_1bc71943c:;
	};
	return false;
}



inline jule::Bool _1ad147c8c_annotateConstraint(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44a579_IdentTypeDecl>>()) {
			_case_begin_1bc71c6d7:;
			{
				return _1ad14796d_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1bc71d474:;
	};
	{
		
		if ((_1ad188052_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71de7a:;
			{
				return _1bc720872_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad1882b6_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71dee1:;
			{
				return _1bc71eeae_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad187815_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71e057:;
			{
				return _1bc72227a_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad1875a1_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71e82c:;
			{
				return _1bc725954_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad188c67_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71e893:;
			{
				return _1ad147022_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad18852a_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71e909:;
			{
				return _1ad14763d_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1ad188ecb_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1bc71e970:;
			{
				return _1ad147330_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1bc71e783:;
			{
				return false;
			}
		}
		_match_end_1bc71e72d:;
	};
}



inline void _1ad1480ab_pushGeneric(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1ad1839ed_InsGeneric>(_1ad1839ed_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1ac457597_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1ad147c8c_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1ad1483b9_annotatePrim(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1ad14a1e0_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1ad1486c7_annotateArr(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1ad19108d_Arr> _50017_parr = _1ad188052_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1ad19108d_Arr> _50417_arr = _1ad188052_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1ad14a4ed_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1ad1489d5_annotateSlc(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1ad18dde3_Slc> _51017_pslc = _1ad1882b6_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1ad18dde3_Slc> _51417_slc = _1ad1882b6_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1ad14a4ed_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1ad148d8c_checkMapKey(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>* _51941_k, jule::Ptr<_1ad18522a_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1ad18522a_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1ad14a4ed_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1ad14919a_annotateMap(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1ad190499_Map> _52817_pmap = _1ad188c67_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1ad190499_Map> _53217_m = _1ad188c67_Map(_52742_k.ptr());;
	_52758_ok = (_1ad148d8c_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1ad148d8c_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1ad1494a8_annotateFn(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1ac515831_FnIns> _53817_pf = _1ad18852a_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1ac515831_FnIns> _54217_f = _1ad18852a_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1bc73c284:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1ac5130e2_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1ac5130e2_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1bc73c30b:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1bc73c20c:;
	};
	_53757_ok=true;
	jule::Ptr<_1ad18522a_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc73dbe2:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1ac514962_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1ad14a4ed_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1bc73dbe2:;
			++it;
			_55214_i++;
			goto _iter_begin_1bc73dbe2;
		}
		_iter_end_1bc73dbe2:;
	};
	if ((!(_1ac5130e2_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1ad14a4ed_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1ad1497b6_annotatePtr(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1ad1919ea_Ptr> _56717_pptr = _1ad187815_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1ad1919ea_Ptr> _57117_ptr = _1ad187815_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1ad14a4ed_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1ad149ac4_annotateSptr(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1ad18d486_Sptr> _57717_ssptr = _1ad1875a1_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1ad18d486_Sptr> _58117_sptr = _1ad1875a1_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1ad14a4ed_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1ad149dd2_annotateStruct(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1ac466a3a_StructIns> _58717_s = _1ad18878e_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1ac466a3a_StructIns> _59117_s2 = _1ad18878e_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc747613:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1ad1839ed_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1ad1839ed_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1ad185934_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1bc747613;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1ad14a4ed_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1bc747613:;
			++it;
			_59514_i++;
			goto _iter_begin_1bc747613;
		}
		_iter_end_1bc747613:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1ad14a1e0_annotateAny(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1ad185626_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc74a56c:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1ac457597_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1bc74a56c;
				};
				jule::Ptr<_1ad1839ed_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1bc74c151:;
						{
							_1ad1480ab_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1ad185934_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1bc74c1c8:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1bc74c00d:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1bc74a56c:;
			++it;
			_61013_i++;
			goto _iter_begin_1bc74a56c;
		}
		_iter_end_1bc74a56c:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1ad14a4ed_annotateKind(_1ad14663c_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad18522a_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1ad14a1e0_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1bc7501dc:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1ad18733c_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc750253:;
			{
				_63059_ok = _1ad1483b9_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad188052_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74ee01:;
			{
				_63059_ok = _1ad1486c7_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad1882b6_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74ee67:;
			{
				_63059_ok = _1ad1489d5_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad188c67_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74eecd:;
			{
				_63059_ok = _1ad14919a_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad18852a_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74ea05:;
			{
				_63059_ok = _1ad1494a8_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad187815_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74ea6b:;
			{
				_63059_ok = _1ad1497b6_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad1875a1_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74ead2:;
			{
				_63059_ok = _1ad149ac4_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1ad18878e_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1bc74eb48:;
			{
				_63059_ok = _1ad149dd2_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1bc74e98e:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1bc74e939:;
	};
}



inline jule::Bool _1ad14a762_annotate(_1ad14663c_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1ad14a4ed_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad14663c_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1ad14b488_pushErrToken(_1ad14ae38_fnCallArgChecker* _self_, jule::Ptr<_1a959a127_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1ad0e7e29_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1ad14b7a7_pushErr(_1ad14ae38_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1ad14b488_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1ac514962_ParamIns>> _1ad14ba1b_getParams(_1ad14ae38_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1ac511970_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1ad14bd29_checkCounts(_1ad14ae38_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1ac511970_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1bc75b924:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1bc75b98a:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1bc75ba01:;
			{
				_1ad14b7a7_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1bc75b87a:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1bc75da9c:;
	}
	_iter_end_1bc75da9c:;;
	(_70817_idents).mut_slice(2LL);;
	_1ad14b7a7_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1ad14c27a_checkArg(_1ad14ae38_fnCallArgChecker* _self_, jule::Ptr<_1ac514962_ParamIns>& _71832_p, jule::Ptr<_1ad159188_Data>& _71851_arg, jule::Ptr<_1a959a127_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1ac517943_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1ad14663c_dynamicTypeAnnotation _72225_dta = _1ad14663c_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1ad14a762_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1ad14b488_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1ad101b25_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1ad0edddb_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1ad14c632_push(_1ad14ae38_fnCallArgChecker* _self_, jule::Ptr<_1ac514962_ParamIns>& _74528_p, jule::Ptr<_1ac44e4d4_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1ad18522a_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1ad159188_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1ad1763a3_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1ad14c27a_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1ad14c9d9_pushVariadic(_1ad14ae38_fnCallArgChecker* _self_, jule::Ptr<_1ac514962_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1ac50b76c_SliceExprModel> _77417_model = jule::new_ptr<_1ac50b76c_SliceExprModel>(_1ac50b76c_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1ad18522a_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1ac44e4d4_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1ac45210d_VariadicExpr>>()) {
					_case_begin_1bc76c24d:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1bc76cb66:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1bc76cb11:;
			};
			jule::Ptr<_1ad159188_Data> _80321_d = _1ad1766b1_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1bc76b736;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1ad14c27a_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
						_case_begin_1bc76edcc:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1ac50b76c_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1bc770c24:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1bc7709b0:;
				};
				(_77054_i)++;
				goto _iter_end_1bc76b736;
			};
			_77064_ok=(_77064_ok && _1ad14c27a_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1bc76b736:;
	}
	_iter_end_1bc76b736:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1ad14b488_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1ad14cce7_checkArgs(_1ad14ae38_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1ac511970_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1ac514962_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1bc7779d9:;
					{
						_84656_ok=(_1ad14c9d9_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1bc77581c;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1bc777324:;
					{
						_84656_ok=false;
						goto _iter_end_1bc77581c;
					}
				}
				else {
					_case_begin_1bc776e6c:;
					{
						_84656_ok=(_1ad14c632_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1bc776e06:;
			};
			(_85117_i)++;
		}
	_iter_next_1bc77581c:;
	}
	_iter_end_1bc77581c:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1ad14d07d_checkDynamicTypeAnnotation(_1ad14ae38_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc779359:;
		if (it != expr.end()) {
			jule::Ptr<_1ad1839ed_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1ad14b7a7_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1bc779359:;
			++it;
			goto _iter_begin_1bc779359;
		}
		_iter_end_1bc779359:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1ad14d303_check(_1ad14ae38_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1ac514962_ParamIns>> _88817_params = _1ad14ba1b_getParams(&(*_self_));;
	_88726_ok=_1ad14bd29_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1ad14cce7_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1ad14d07d_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad14ae38_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1ad14dd4d_pushErr(_1ad14d842_structLitChecker* _self_, jule::Ptr<_1a959a127_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1ad15b212_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1ad14e16c_pushSugggestion(_1ad14d842_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1ad15b531_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1ad14e535_pushMatch(_1ad14d842_structLitChecker* _self_, jule::Ptr<_1ac442d57_FieldIns>& _91833_f, jule::Ptr<_1ad159188_Data>& _91852_d, jule::Ptr<_1a959a127_Token>& _91867_errorToken) {
	;
	if (_1ad101b25_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1ad0edddb_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1ac50accc_StructArgExprModel>(_1ac50accc_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1ad14e854_checkPair(_1ad14d842_structLitChecker* _self_, jule::Ptr<_1ac454231_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>& _93160_exprs) {
	jule::Ptr<_1ac442d57_FieldIns> _93317_f = _1ac4446c7_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1ad14dd4d_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1ad14dd4d_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1ad14e16c_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1bc784430:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ac454231_FieldExprPair>>()) {
						_case_begin_1bc784ce3:;
						{
							jule::Ptr<_1ac454231_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1ac454231_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1bc785cd3:;
									{
										goto _iter_end_1bc784430;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1bc785d5a:;
									{
										_1ad14dd4d_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1bc784430;
									}
								}
								_match_end_1bc785c28:;
							};
						}
					}
					_match_end_1bc784b39:;
				};
			}
			_iter_next_1bc784430:;
			++it;
			goto _iter_begin_1bc784430;
		}
		_iter_end_1bc784430:;
	};
	jule::Ptr<_1ad18522a_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1ad159188_Data> _96317_d = _1ad1763a3_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1ad14e535_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1ad14eb62_readyExprs(_1ad14d842_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1bc789820:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1ac44e4d4_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ac455919_KeyValPair>>()) {
						_case_begin_1bc78a579:;
						{
							jule::Ptr<_1ac455919_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1ac455919_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
									_case_begin_1bc78ae1a:;
									{
										goto _match_end_1bc78b39e;
									}
								}
								else {
									_case_begin_1bc78b624:;
									{
										_1ad14dd4d_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1bc789820;
									}
								}
								_match_end_1bc78b39e:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac454231_FieldExprPair>(_1ac454231_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1bc78a3c0:;
				};
			}
			_iter_next_1bc789820:;
			++it;
			_97214_i++;
			goto _iter_begin_1bc789820;
		}
		_iter_end_1bc789820:;
	};
	return _97117_ok;
}



inline void _1ad14edd7_check(_1ad14d842_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1ad14eb62_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1bc7896aa:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1ac44e4d4_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ac454231_FieldExprPair>>()) {
						_case_begin_1bc7949e5:;
						{
							jule::Ptr<_1ac454231_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1ac454231_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1ad14dd4d_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1ad14e854_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1bc78e8d0:;
						{
							if (_100117_paired) {
								_1ad14dd4d_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1ad14dd4d_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1bc7896aa;
							};
							jule::Ptr<_1ac442d57_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1ad14dd4d_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1ad14e16c_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ad18522a_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1ad159188_Data> _103225_d = _1ad1763a3_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1bc7896aa;
							};
							_1ad14e535_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1bc78e759:;
				};
			}
			_iter_next_1bc7896aa:;
			++it;
			_100214_i++;
			goto _iter_begin_1bc7896aa;
		}
		_iter_end_1bc7896aa:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1bc7973cc:;
				{
					return;;
				}
			}
			_match_end_1bc797278:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1bc797d28:;
		}
		_iter_end_1bc797d28:;;
		(_105021_idents).mut_slice(2LL);;
		_1ad14dd4d_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad14d842_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad112097_Var> _1ad1508bb_buildVar(_1ad150426_rangeChecker* _self_, jule::Ptr<_1ac45cca6_VarDecl>& _106928_decl) {
	jule::Ptr<_1ad112097_Var> _107017_v = _1ac51d4c6_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1ad150a97_setSizeKey(_1ad150426_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc79b9ec:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1ad11112e_IterRelation>(_1ad11112e_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1ad112097_Var>()});
			}
		}
		_match_end_1bc79b942:;
	};
}



inline void _1ad150e60_checkRangeExprValidity(_1ad150426_rangeChecker* _self_, jule::Ptr<_1ad159188_Data>& _110046_d, jule::Ptr<_1ad112097_Var>& _110057_key, jule::Ptr<_1ad18522a_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1ad186627_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1ad101b25_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1ad15113b_checkSlice(_1ad150426_rangeChecker* _self_) {
	_1ad150a97_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad18dde3_Slc> _111917_slc = _1ad1882b6_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1ad150e60_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1ad151317_checkArray(_1ad150426_rangeChecker* _self_) {
	_1ad150a97_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad19108d_Arr> _113217_arr = _1ad188052_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1ad150e60_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1ad1514e3_checkMapKeyA(_1ad150426_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad190499_Map> _114417_m = _1ad188c67_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1ad159188_Data> _114817_d = jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1ad150e60_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1ad1516be_checkMapKeyB(_1ad150426_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad190499_Map> _115917_m = _1ad188c67_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1ad159188_Data> _116317_d = jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1ad150e60_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1ad15189a_checkMap(_1ad150426_rangeChecker* _self_) {
	_1ad1514e3_checkMapKeyA(&(*_self_));
	_1ad1516be_checkMapKeyB(&(*_self_));
}



inline void _1ad151a76_checkStr(_1ad150426_rangeChecker* _self_) {
	_1ad150a97_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1a959c8bb_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1ad1508bb_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1ad151cda_check(_1ad150426_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1bc7b0626:;
		}
		else if ((_1ad1882b6_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7ae922:;
			{
				_1ad15113b_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1ad188052_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7ae988:;
			{
				_1ad151317_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1ad188c67_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7ae9ee:;
			{
				_1ad15189a_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1bc7ae8ab:;
			{
				jule::Ptr<_1ad189c02_Prim> _120117_prim = _1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1ad18ce36_IsStr(_120117_prim.ptr()))) {
					_1ad151a76_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1bc7ae7ce:;
	};
	_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad150426_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ad152a33_prepareTypes(_1ad15257c_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1ac516953_Types((*_self_)._field_f.ptr());
	};
}



inline void _1ad152ca8_prepareExprs(_1ad15257c_retTypeChecker* _self_, jule::Ptr<_1ac44e4d4_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac450161_TupleExpr>>()) {
			_case_begin_1bc7b5829:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1ac450161_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1bc7b5494:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1bc7b5054:;
	};
}



inline void _1ad152e84_retVars(_1ad15257c_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1ac5130e2_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1ad112097_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1ad0c7799_scopeChecker> _124817_rootScope = _1ad0c8b74_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1bc7b8453:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _125116_ident = *it;
			{
				if (((!(_1a959c8bb_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1a959cb63_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1bc7b8453:;
			++it;
			_125113_i++;
			goto _iter_begin_1bc7b8453;
		}
		_iter_end_1bc7b8453:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1ad153160_checkExprs(_1ad15257c_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad159188_Data>> _127317_datas = jule::Slice<jule::Ptr<_1ad159188_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1bc7bc1c1:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1ac44e4d4_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1bc7bc1c1;
				};
				jule::Ptr<_1ad18522a_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1ad159188_Data> _128121_d = _1ad1769be_evalExpr(_1ad0ed5d3_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1ad1a5bb8_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1bc7bc1c1;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1ad186627_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1ad144c23_assignTypeChecker _129321_ac = _1ad144c23_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1ad145d9a_check(&_129321_ac);
			}
			_iter_next_1bc7bc1c1:;
			++it;
			_127414_i++;
			goto _iter_begin_1bc7bc1c1;
		}
		_iter_end_1bc7bc1c1:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1ac50d2a7_TupleExprModel>(_1ac50d2a7_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1ad15346d_check(_1ad15257c_retTypeChecker* _self_, jule::Ptr<_1ac44e4d4_Expr>& _131229_e) {
	_1ad152a33_prepareTypes(&(*_self_));
	_1ad152ca8_prepareExprs(&(*_self_), _131229_e);
	_1ad152e84_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1ac513d07_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1ac5130e2_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1ad0e7e29_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1ad153160_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad15257c_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad154947_FindPackage(_1ad15442a_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc7c87a4:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1bc7c87a4:;
			++it;
			goto _iter_begin_1bc7c87a4;
		}
		_iter_end_1bc7c87a4:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1ad154c55_SelectPackage(_1ad15442a_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc7c9750:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1bc7c9750:;
			++it;
			goto _iter_begin_1bc7c9750;
		}
		_iter_end_1bc7c9750:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad112097_Var> _1ad15510c_FindVar(_1ad15442a_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1ad156bbe_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad1554b4_FindTypeAlias(_1ad15442a_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1ad157120_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad15586b_FindStruct(_1ad15442a_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc7cc27a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1bc7cc27a:;
			++it;
			goto _iter_begin_1bc7cc27a;
		}
		_iter_end_1bc7cc27a:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac512b80_Fn> _1ad155c23_FindFn(_1ad15442a_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc7cd721:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1bc7cd721:;
			++it;
			goto _iter_begin_1bc7cd721;
		}
		_iter_end_1bc7cd721:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad156031_FindTrait(_1ad15442a_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc7ce997:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1bc7ce997:;
			++it;
			goto _iter_begin_1bc7ce997;
		}
		_iter_end_1bc7ce997:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac526b83_Enum> _1ad15633e_FindEnum(_1ad15442a_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc7d0932:;
		if (it != expr.end()) {
			jule::Ptr<_1ac526b83_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1bc7d0932:;
			++it;
			goto _iter_begin_1bc7d0932;
		}
		_iter_end_1bc7d0932:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad15664c_FindTypeEnum(_1ad15442a_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc7d0e0a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52827d_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1bc7d0e0a:;
			++it;
			goto _iter_begin_1bc7d0e0a;
		}
		_iter_end_1bc7d0e0a:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad112097_Var> _1ad156bbe_findVar(_1ad15442a_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1ad112097_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1bc7d3957:;
		}
		_iter_end_1bc7d3957:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1bc7d33b3:;
			if (it != expr.end()) {
				jule::Ptr<_1ad112097_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1bc7d33b3:;
				++it;
				goto _iter_begin_1bc7d33b3;
			}
			_iter_end_1bc7d33b3:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad157120_findTypeAlias(_1ad15442a_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1ad184537_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1bc7d6c35:;
		}
		_iter_end_1bc7d6c35:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1bc7d6691:;
			if (it != expr.end()) {
				jule::Ptr<_1ad184537_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1bc7d6691:;
				++it;
				goto _iter_begin_1bc7d6691;
			}
			_iter_end_1bc7d6691:;
		};
	};
	return nullptr;
}



inline jule::Any _1ad1574c7_defByIdent(_1ad15442a_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc7d8671:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1bc7d8671:;
			++it;
			goto _iter_begin_1bc7d8671;
		}
		_iter_end_1bc7d8671:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc7d9e9c:;
		if (it != expr.end()) {
			jule::Ptr<_1ad184537_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1bc7d9e9c:;
			++it;
			goto _iter_begin_1bc7d9e9c;
		}
		_iter_end_1bc7d9e9c:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc7dac8e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1bc7dac8e:;
			++it;
			goto _iter_begin_1bc7dac8e;
		}
		_iter_end_1bc7dac8e:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc018137:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1bc018137:;
			++it;
			goto _iter_begin_1bc018137;
		}
		_iter_end_1bc018137:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc4e08a6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1bc4e08a6:;
			++it;
			goto _iter_begin_1bc4e08a6;
		}
		_iter_end_1bc4e08a6:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc4e14de:;
		if (it != expr.end()) {
			jule::Ptr<_1ac526b83_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1bc4e14de:;
			++it;
			goto _iter_begin_1bc4e14de;
		}
		_iter_end_1bc4e14de:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc4e2127:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52827d_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1bc4e2127:;
			++it;
			goto _iter_begin_1bc4e2127;
		}
		_iter_end_1bc4e2127:;
	};
	return nullptr;
}



inline jule::Bool _1ad157928_isDuplicatedIdent(_1ad15442a_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bc4e328d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1bc4e328d:;
			++it;
			goto _iter_begin_1bc4e328d;
		}
		_iter_end_1bc4e328d:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1bc4e46ac:;
		if (it != expr.end()) {
			jule::Ptr<_1ad184537_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1bc4e46ac:;
			++it;
			goto _iter_begin_1bc4e46ac;
		}
		_iter_end_1bc4e46ac:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bc4e435a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1bc4e435a:;
			++it;
			goto _iter_begin_1bc4e435a;
		}
		_iter_end_1bc4e435a:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1bc4e54c1:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1bc4e54c1:;
			++it;
			goto _iter_begin_1bc4e54c1;
		}
		_iter_end_1bc4e54c1:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1bc4e80c8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac524a3d_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1bc4e80c8:;
			++it;
			goto _iter_begin_1bc4e80c8;
		}
		_iter_end_1bc4e80c8:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1bc4e8c66:;
		if (it != expr.end()) {
			jule::Ptr<_1ac526b83_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1bc4e8c66:;
			++it;
			goto _iter_begin_1bc4e8c66;
		}
		_iter_end_1bc4e8c66:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1bc4e9c45:;
		if (it != expr.end()) {
			jule::Ptr<_1ac52827d_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1bc4e9c45:;
			++it;
			goto _iter_begin_1bc4e9c45;
		}
		_iter_end_1bc4e9c45:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad15442a_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad159573_IsNil(_1ad159188_Data* _self_) {
	return _1ad18614e_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1ad1597d7_IsVoid(_1ad159188_Data* _self_) {
	return _1ad1863b3_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1ad159a4b_IsConst(_1ad159188_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1ad159d59_GoodOperand(_1ad159188_Data* _self_, jule::Ptr<_1ad159188_Data>& _9631_other) {
	if ((_1ad187cdd_TypeEnum(_9631_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1ad18733c_Prim(_9631_other.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18d19a_IsAny(_1ad18733c_Prim(_9631_other.get()._field_Kind.ptr()).ptr())))) && (_1ad188a03_Trait(_9631_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1ad18614e_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad159188_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad15a211_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ad15b212_pushErr(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _1ad15b531_pushSugggestion(_1ad15ac06_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1ad0e8248_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1ad15b70c_allowBuiltin(_1ad15ac06_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1ad15b8d8_disallowBuiltin(_1ad15ac06_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1ad15bb4c_isUnsafe(_1ad15ac06_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1ad15bdb1_isGlobal(_1ad15ac06_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0e5267_Sema>>()) {
			_case_begin_1bc529c86:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bc529b76:;
			{
				return false;
			}
		}
		_match_end_1bc52978b:;
	};
}



inline jule::Bool _1ad15c18b_applyNumericPrefix(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_1ad159a4b_IsConst(_15942_d.ptr())))) || (_1ad18733c_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1ad189c02_Prim> _16613_prim = _1ad18733c_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1ad0c4422_IsFloat(_1ad18a065_Str(_16613_prim.ptr()))) {
			_case_begin_1bc52c591:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac5052d2_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ac504567_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ad0c407b_IsSigInt(_1ad18a065_Str(_16613_prim.ptr()))) {
			_case_begin_1bc52c607:;
			{
				if ((!(_1ad12a698_sigAssignable(_1ad18a065_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac5047dc_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ad0c41ad_IsUnsigInt(_1ad18a065_Str(_16613_prim.ptr()))) {
			_case_begin_1bc52c66d:;
			{
				if ((!(_1ad141c86_unsigAssignable(_1ad18a065_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac504a62_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1bc52c34e:;
	};
	return true;
}



inline jule::Ptr<_1ad159188_Data> _1ad15c400_litNil(_1ad15ac06_Eval* _self_) {
	jule::Ptr<_1ac49c202_Const> _19517_constant = static__1ac502c80_NewNil();;
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_1ad159188_Data> _1ad15c70d_litStr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_1a959b47a_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_1ad142094_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1ad14234c_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1ac49c202_Const> _21017_constant = static__1ac5027da_NewStr(_20417_s);;
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_1ad159188_Data> _1ad15ca1b_litBool(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _22123_l) {
	jule::Ptr<_1ac49c202_Const> _22217_constant = static__1ac502543_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_1ad159188_Data> _1ad15cd29_litRune(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _1ad12a27a_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_1ad159188_Data> _23917_data = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Constant=static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _1ad12a148_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac510034_RuneExprModel>(_1ac510034_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_1ad159188_Data> _1ad15d137_litFloat(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _1ad0bd938_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ac49c202_Const> _26317_constant = static__1ac502a82_NewF64(_26213_f);;
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_1ad159188_Data> _1ad15d445_litInt(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_1a9142ae3_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_1bc53d75b:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LL;
			}
		}
		else if (_1a9142ae3_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_1bc53d43c:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LL;
			}
		}
		else if (_1a9142ae3_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_1bc53d4a3:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LL;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_1bc53d12e:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LL;
			}
		}
		else {
			_case_begin_1bc53d0b8:;
			{
				_27817_base=10LL;
			}
		}
		_match_end_1bc53d063:;
	};
	jule::Ptr<_1ad159188_Data> _29817_d = jule::new_ptr<_1ad159188_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _1ace374e9_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__1ac502279_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _1acdd8b82_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1ad15b212_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1ad15b531_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__1ac5023ab_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_1ad15c18b_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_1ad180016_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad15d753_litNum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr>& _33226_l) {
	{
		
		if (_1a959c0d5_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_1bc546302:;
			{
				return _1ad15d137_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_1bc545a82:;
			{
				return _1ad15d445_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_1bc5459c7:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad15da61_evalLit(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac450518_LitExpr> _34126_lit) {
	{
		
		if (_1ac45086a_IsNil(_34126_lit.ptr())) {
			_case_begin_1bc5474ce:;
			{
				return _1ad15c400_litNil(&(*_self_));
			}
		}
		else if (_1a959b1d3_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_1bc546db3:;
			{
				return _1ad15c70d_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_1a959bd3d_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_1bc546e3a:;
			{
				return _1ad15ca1b_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_1a959b722_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_1bc546eb2:;
			{
				return _1ad15cd29_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_1a959c37c_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_1bc5471d2:;
			{
				return _1ad15d753_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_1bc546863:;
			{
				return nullptr;
			}
		}
		_match_end_1bc5467a8:;
	};
}



inline jule::Any _1ad15dd6e_findBuiltins(_1ad15ac06_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0dc11b_ImportInfo>>()) {
			_case_begin_1bc5477ba:;
			{
				jule::Any _36121_def = _1ad17ed07_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad0dc11b_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0e5267_Sema>>()) {
			_case_begin_1bc547831:;
			{
				jule::Any _36621_def = _1ad180995_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad0e5267_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc549a86:;
			{
				jule::Any _37121_def = _1ad180995_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_1bc547633:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1ad1b3841_findBuiltinDef(_35831_ident));
}



inline jule::Any _1ad15e226_getDef(_1ad15ac06_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_1ac526b83_Enum> _38421_enm = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a5767_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_1ac52827d_TypeEnum> _38921_tenm = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a5a75_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_1ad112097_Var> _39517_v = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a4535_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_1ac512b80_Fn> _40017_f = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a514b_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_1ac43a6e0_Struct> _40517_s = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a4c94_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_1ad184537_TypeAlias> _41017_ta = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a48dc_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_1ad15dd6e_findBuiltins(&(*_self_), _38225_ident));
}



inline void _1bc560a25_pushReference(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac515831_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc5626d6:;
			{
				jule::Ptr<_1ad0c7799_scopeChecker> _42121_sc = _1ad0c8ca6_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>());;
				if ((!(_1bc563352_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1ac519406_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1bc562010:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bc563352_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1ac519406_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1bc561eaa:;
	};
}

inline void _1bc575595_pushReference(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad112097_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc576ed1:;
			{
				jule::Ptr<_1ad0c7799_scopeChecker> _42121_sc = _1ad0c8ca6_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>());;
				if ((!(_1bc577b4c_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1ac519406_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1bc57680a:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bc577b4c_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1ac519406_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1bc5767a5:;
	};
}

inline void _1bb8d15e4_pushReference(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac466a3a_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bb8d32b6:;
			{
				jule::Ptr<_1ad0c7799_scopeChecker> _42121_sc = _1ad0c8ca6_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>());;
				if ((!(_1bb8d3e32_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1ac519406_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1bb8d2ae0:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1bb8d3e32_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1ac519406_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1bb8d2a8a:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad15e7a9__evalEnum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac526b83_Enum> _43228_enm) {
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1ad159188_Data> _1ad15eb61_evalEnum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac526b83_Enum> _44131_enm, jule::Ptr<_1a959a127_Token> _44143_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1ad15e7a9__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_1ad159188_Data> _1ad15ee6e__evalTypeEnum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac52827d_TypeEnum> _45032_enm) {
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1ad159188_Data> _1ad160326_evalTypeEnum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac52827d_TypeEnum> _45935_enm, jule::Ptr<_1a959a127_Token> _45951_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1ad15ee6e__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_1ad159188_Data> _1ad160634__evalStruct(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac466a3a_StructIns> _46830_s) {
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_1ad159188_Data> _1ad1609db_evalStruct(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac466a3a_StructIns> _47833_s, jule::Ptr<_1a959a127_Token> _47848_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1ad161118_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _1ad160634__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_1ad159188_Data> _1ad160ce9_evalFnIns(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac515831_FnIns> _48828_f) {
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _1ad161118_checkDeprecated(_1ad15ac06_Eval* _self_, jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _49739_directives, jule::Ptr<_1a959a127_Token> _49770_tok) {
	if (_1ad15bb4c_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1ac41195d_Directive> _50213_d = _1ad17e972_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_1ad15b212_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1ad15b212_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad1614c0_evalFn(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac512b80_Fn> _51329_f, jule::Ptr<_1a959a127_Token> _51337_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1ad161118_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_1ac515831_FnIns> _52217_ins = _1ac5142d0_instance(_51329_f);;
	_1bc560a25_pushReference(&(*_self_), _52217_ins);
	return _1ad160ce9_evalFnIns(&(*_self_), _52217_ins);
}



inline void _1ad161888_pushIllegalCycleError(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad112097_Var>& _52741_v1, jule::Ptr<_1ad112097_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _1a9272706_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_1a9138028_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ad161c40_checkCrossCycle(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad112097_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1bc5685bb:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_1ad161888_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_1ad161c40_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_1ad161888_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_1bc5685bb:;
			++it;
			goto _iter_begin_1bc5685bb;
		}
		_iter_end_1bc5685bb:;
	};
	return true;
}



inline jule::Bool _1ad1620e7_checkIllegalCycles(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad112097_Var>& _55242_v, jule::Ptr<_1a959a127_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_1ad15b212_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_1ad161c40_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_1ad161888_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg=(_56721_errMsg + _56417_message);
		_1ad15b212_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_1ad159188_Data> _1ad16249e_evalVar(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad112097_Var> _57930_v, jule::Ptr<_1a959a127_Token> _57939_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1ad161118_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0e5267_Sema>>()) {
			_case_begin_1bc571283:;
			{
				jule::Bool _59317_ok = _1ad1620e7_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc57133d:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _1ad15bb4c_isUnsafe(&(*_self_)))) {
					goto _match_end_1bc57122d;
				};
				jule::Ptr<_1ad0c7799_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_1bc5733a6:;
				}
				_iter_end_1bc5733a6:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_1ad15b212_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1bc57122d:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_1bc575595_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_1ad109b0b_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_1ad1a5bb8_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1ad109b0b_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1ad159188_Data> _64417_d = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _1ad11244e_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_1ac49c202_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_1ad159a4b_IsConst(_64417_d.ptr())) {
		_1ad15c18b_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad162856_evalTypeAlias(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad184537_TypeAlias> _66836_ta, jule::Ptr<_1a959a127_Token> _66852_errorToken) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_1ad184ceb_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1ad159188_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac466a3a_StructIns>>()) {
			_case_begin_1bc7e0656:;
			{
				_67817_d=_1ad160634__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_1ac466a3a_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac526b83_Enum>>()) {
			_case_begin_1bc7e0ba6:;
			{
				_67817_d=_1ad15e7a9__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1ac526b83_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac52827d_TypeEnum>>()) {
			_case_begin_1bc7de7a9:;
			{
				_67817_d=_1ad15ee6e__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1ac52827d_TypeEnum>());
			}
		}
		else {
			_case_begin_1bc7de688:;
			{
				_67817_d=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_1bc7de633:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad162c0d_evalDef(_1ad15ac06_Eval* _self_, jule::Any _70430_def, jule::Ptr<_1a959a127_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc7e3813:;
			{
				return _1ad16249e_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_1ad112097_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac526b83_Enum>>()) {
			_case_begin_1bc7e3879:;
			{
				return _1ad15eb61_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_1ac526b83_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac52827d_TypeEnum>>()) {
			_case_begin_1bc7e38e0:;
			{
				return _1ad160326_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_1ac52827d_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc7e3967:;
			{
				return _1ad1609db_evalStruct(&(*_self_), _1ac41cc88_instance(_70430_def.operator jule::Ptr<_1ac43a6e0_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac512b80_Fn>>()) {
			_case_begin_1bc7e39cd:;
			{
				jule::Ptr<_1ac512b80_Fn> _71521_f = _70430_def.operator jule::Ptr<_1ac512b80_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1ad1614c0_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
			_case_begin_1bc7e3a55:;
			{
				return _1ad160ce9_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_1ac515831_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
			_case_begin_1bc7e3acc:;
			{
				return _1ad162856_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_1ad184537_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_1bc7e3725:;
	};
	_1ad15b212_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1ad159188_Data> _1ad16301b_evalIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac45154c_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _1ad15e226_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _1ad162c0d_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_1ad159188_Data> _1ad163329_evalUnary(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac451c56_UnaryExpr> _73333_u) {
	_1ad176e42_unaryEval _73417_unary = static__1ad1773e8_new(_self_);;
	return _1ad178691_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_1ad159188_Data> _1ad163637_evalVariadic(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac45210d_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_1ad15b212_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad18522a_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_1ad159188_Data> _74817_d = _1ad1763a3_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ad1870c8_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_1ad15b212_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1ad18dde3_Slc> _75813_slc = _1ad1882b6_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad163945_evalUnsafe(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac450c22_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1ad159188_Data> _77117_d = _1ad1763a3_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad163c53_evalArr(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac455d8c_SliceExpr> _77631_s) {
	jule::Ptr<_1ad19108d_Arr> _77817_pt = _1ad188052_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1ad19108d_Arr> _78017_arr = jule::new_ptr<_1ad19108d_Arr>(_1ad19108d_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1ac45210d_VariadicExpr>>()) {
				_case_begin_1bc8033c2:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1ac45210d_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1bc80336c;
					};
					if (_77817_pt.get()._field_Auto) {
						_1ad15b212_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1bc80336c:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_1ad15b212_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_1ac50cbe1_ArrayExprModel> _81517_model = jule::new_ptr<_1ac50cbe1_ArrayExprModel>(_1ac50cbe1_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1ad18522a_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bc8081a7:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _82621_elem = *it;
			{
				jule::Ptr<_1ad159188_Data> _82721_d = _1ad1763a3_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_1bc8081a7;
				};
				_1ad0edddb_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_1bc8081a7:;
			++it;
			goto _iter_begin_1bc8081a7;
		}
		_iter_end_1bc8081a7:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_1ad159188_Data> _1ad1641a4_evalExpSlc(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac455d8c_SliceExpr> _85134_s, jule::Ptr<_1ad18522a_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_1ad18dde3_Slc> _85217_slc = jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_1ac50b76c_SliceExprModel> _85617_model = jule::new_ptr<_1ac50b76c_SliceExprModel>(_1ac50b76c_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1ad18522a_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bc80d94e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _86721_elem = *it;
			{
				jule::Ptr<_1ad159188_Data> _86821_d = _1ad1763a3_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_1bc80d94e;
				};
				_1ad0edddb_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_1bc80d94e:;
			++it;
			goto _iter_begin_1bc80d94e;
		}
		_iter_end_1bc80d94e:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_1ad159188_Data> _1ad1644b2_evalSliceExpr(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac455d8c_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1ad188052_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bc8119a7:;
				{
					return _1ad163c53_evalArr(_self_, _88637_s);
				}
			}
			else if ((_1ad1882b6_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1bc811a2e:;
				{
					jule::Ptr<_1ad18dde3_Slc> _89225_pt = _1ad1882b6_Slc(_self_.get()._field_prefix.ptr());;
					return _1ad1641a4_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1bc811886:;
		};
	};
	jule::Ptr<_1ad18522a_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_1ad15b212_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _90517_first_elem = _1ad1763a3_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _91017_d = _1ad1641a4_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _1ad164803_checkIntegerIndexingByData(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _91650_d, jule::Ptr<_1a959a127_Token> _91660_token) {
	jule::Str _91713_err_key = _1ad181d70_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bb87639c:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1bb877249:;
			{
				_1ad15b212_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1bb877106:;
			{
				_1ad15b212_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb8770a1:;
	};
}



inline void _1ad164bcc_indexingPtr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _92835_d, jule::Ptr<_1ad159188_Data>& _92850_index, jule::Ptr<_1ac45672d_IndexingExpr>& _92865_i) {
	_1ad164803_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_1ad1919ea_Ptr> _93117_ptr = _1ad187815_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_1ad1924bd_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_1bb879746:;
			{
				_1ad15b212_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ad15bb4c_isUnsafe(&(*_self_))))) {
			_case_begin_1bb8797ac:;
			{
				_1ad15b212_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb8795e2:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _1ad165095_indexingArr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _94335_d, jule::Ptr<_1ad159188_Data>& _94350_index, jule::Ptr<_1ac45672d_IndexingExpr>& _94365_i) {
	jule::Ptr<_1ad19108d_Arr> _94417_arr = _1ad188052_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_1ad164803_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_1ad159a4b_IsConst(_94350_index.ptr()) && (_1ac504567_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_1ad15b212_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1ad16545d_indexingSlc(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _95235_d, jule::Ptr<_1ad159188_Data>& _95250_index, jule::Ptr<_1ac45672d_IndexingExpr>& _95265_i) {
	jule::Ptr<_1ad18dde3_Slc> _95317_slc = _1ad1882b6_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_1ad164803_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_1ad159a4b_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
			_case_begin_1bb87ee88:;
			{
				jule::Ptr<_1ac50b76c_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_1ac50b76c_SliceExprModel>();;
				jule::F64 _96417_indx = _1ac504567_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_1ad15b212_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1bb8801db:;
	};
}



inline void _1ad165826_indexingMap(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _97435_d, jule::Ptr<_1ad159188_Data>& _97450_index, jule::Ptr<_1ac45672d_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad190499_Map> _97817_m = _1ad188c67_Map(_97435_d.get()._field_Kind.ptr());;
	_1ad144c23_assignTypeChecker _97917_atc = _1ad144c23_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_1ad145d9a_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _1ad165bde_indexingStr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _98935_d, jule::Ptr<_1ad159188_Data>& _98950_index, jule::Ptr<_1ac45672d_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_1ad164803_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_1ad159a4b_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1ad159a4b_IsConst(_98935_d.ptr())) {
		jule::Ptr<_1a959a127_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _1ac50408e_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _1ac503ab6_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_1ad15b212_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1ac504a62_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _1ad1660a7_toIndexing(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _101634_d, jule::Ptr<_1ad159188_Data>& _101649_index, jule::Ptr<_1ac45672d_IndexingExpr>& _101668_i) {
	{
		
		if ((_1ad187815_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb88a13b:;
			{
				_1ad164bcc_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1ad188052_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb88a1b3:;
			{
				_1ad165095_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1ad1882b6_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb88a23a:;
			{
				_1ad16545d_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1ad188c67_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb88a2b2:;
			{
				_1ad165826_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1ad18733c_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb88a339:;
			{
				jule::Ptr<_1ad189c02_Prim> _103117_prim = _1ad18733c_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_1ad18ce36_IsStr(_103117_prim.ptr())) {
						_case_begin_1bb88e5a2:;
						{
							_1ad165bde_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_1bb88e508:;
				};
			}
		}
		_match_end_1bb889ed7:;
	};
	_1ad15b212_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1ad16652a_pushGenericsFromExprSubIdent(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac452ce0_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>& _104214_generics, jule::Ptr<_1ac44e4d4_Expr>& _104242_expr) {
	jule::Ptr<_1ac44abc8_SubIdentTypeDecl> _104317_t = jule::new_ptr<_1ac44abc8_SubIdentTypeDecl>();;
	if ((!(_1ad182b40_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_1ad15b212_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _1ad1668e3_pushGenericsFromData(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>& _105245_generics, jule::Ptr<_1ac44e4d4_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac451c56_UnaryExpr>>()) {
			_case_begin_1bb892ae4:;
			{
				jule::Ptr<_1ad159188_Data> _105721_d = _1ad163329_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_1ac451c56_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_1ad15b212_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac449eb3_TypeDecl>>()) {
			_case_begin_1bb892b5a:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_1ac449eb3_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac452ce0_SubIdentExpr>>()) {
			_case_begin_1bb892bc1:;
			{
				jule::Ptr<_1ac452ce0_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1ac452ce0_SubIdentExpr>();;
				return _1ad16652a_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
			_case_begin_1bb8934c9:;
			{
				jule::Ptr<_1ac45154c_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_1ac45154c_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac450161_TupleExpr>>()) {
			_case_begin_1bb893540:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1ac450161_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1bb897973:;
					if (it != expr.end()) {
						jule::Ptr<_1ac44e4d4_Expr> _108125_texpr = *it;
						{
							if ((!(_1ad1668e3_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_1bb897973:;
						++it;
						goto _iter_begin_1bb897973;
					}
					_iter_end_1bb897973:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45286c_NsSelectionExpr>>()) {
			_case_begin_1bb8935a6:;
			{
				jule::Ptr<_1ac45286c_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_1ac45286c_NsSelectionExpr>();;
				jule::Ptr<_1ac44a579_IdentTypeDecl> _108821_decl = jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44b080_NamespaceTypeDecl>(_1ac44b080_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_1bb8929c3:;
			{
				_1ad15b212_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1bb89282a:;
	};
	return true;
}



inline void _1ad166c34_evalIdentDeclFromIndexing(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ad159188_Data>& _110950_d, jule::Ptr<_1ac45672d_IndexingExpr>& _110965_i) {
	jule::Ptr<_1ac466a3a_StructIns> _111017_s = _1ad18878e_Struct(_110950_d.get()._field_Kind.ptr());;
	if ((_111017_s == nullptr)) {
		_1ad15b212_pushErr(_self_.ptr(), _110965_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_110950_d.get()._field_Kind.ptr()))}));
		_110950_d=nullptr;
		return;;
	};
	jule::Ptr<_1ac44a579_IdentTypeDecl> _111717_decl = nullptr;;
	{
		auto &_match_expr{ _110965_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
			_case_begin_1bb89d182:;
			{
				jule::Ptr<_1ac45154c_IdentExpr> _112021_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1ac45154c_IdentExpr>();;
				_111717_decl=jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_112021_expr.get()._field_Token, ._field_Ident=_112021_expr.get()._field_Ident, ._field_CppLinked=_112021_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45286c_NsSelectionExpr>>()) {
			_case_begin_1bb89e2d7:;
			{
				jule::Ptr<_1ac45286c_NsSelectionExpr> _112721_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1ac45286c_NsSelectionExpr>();;
				_111717_decl=jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Ident, ._field_Ident=_112721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1bb89d5c2:;
			{
				_1ad15b212_pushErr(_self_.ptr(), _110965_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_110950_d=nullptr;
				return;;
			}
		}
		_match_end_1bb89d56c:;
	};
	if ((!(_1ad1668e3_pushGenericsFromData(_self_, _111717_decl.get()._field_Generics,_110965_i.get()._field_Index)))) {
		_110950_d=nullptr;
		return;;
	};
	_111017_s=({ auto _wrap_copy = _1ad16cac5_typeChecker(_self_.ptr()); _1ad19c440_fromStruct(&_wrap_copy, _111717_decl,_111017_s.get()._field_Decl); });
	if ((_111017_s == nullptr)) {
		_110950_d=nullptr;
		return;;
	};
	_110950_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1ad184ceb_Kind>(_111017_s, 0);
}



inline jule::Bool _1ad167196_checkGenericFn(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac515831_FnIns>& _115239_f, jule::Ptr<_1a959a127_Token>& _115255_et, jule::Any& _115272_model) {
	jule::Bool _115313_ok = _1ad1010ca_reloadFnInsTypes(_self_.get()._field_s, _115239_f);;
	_115239_f.get()._field_reloaded=true;
	if ((!(_115313_ok))) {
		return false;
	};
	jule::Ptr<_1ac515831_FnIns> _115817_existInstance = _1ac5145aa_appendInstance(_115239_f.get()._field_Decl.ptr(), _115239_f);;
	if ((!(_1ad10023e_checkConstraintsFn(_self_.get()._field_s, _115239_f,_115255_et,_115817_existInstance)))) {
		return false;
	};
	if ((_115817_existInstance != nullptr)) {
		_115239_f=_115817_existInstance;
		_1ad1828ed_updateModelToGenericIns(_115272_model,_115817_existInstance);
	} else {
		_1ad10c911_checkFnInsCaller(_self_.get()._field_s, _115239_f,_115255_et);
	};
	return true;
}



inline void _1ad1674d7_evalFnGenericFromIndexing(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ad159188_Data>& _117750_d, jule::Ptr<_1ac45672d_IndexingExpr>& _117765_i) {
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _117817_generics = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1ad1668e3_pushGenericsFromData(_self_, _117817_generics,_117765_i.get()._field_Index)))) {
		_117750_d=nullptr;
		return;;
	};
	jule::Ptr<_1ac515831_FnIns> _118417_f = _1ad18852a_Fn(_117750_d.get()._field_Kind.ptr());;
	jule::I64 _118517_genericsLen = 0LL;;
	if ((_118417_f.get()._field_Decl != nullptr)) {
		_118517_genericsLen=static_cast<jule::I64>(_118417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1ad0e92c1_checkGenericQuantity(_self_.get()._field_s.ptr(), _118517_genericsLen,static_cast<jule::I64>(_117817_generics.len()),_117765_i.get()._field_Expr.get()._field_Token)))) {
		_117750_d=nullptr;
		return;;
	};
	_118417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>::alloc(0LL,_118417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117817_generics;
		auto it = expr.begin();
		_iter_begin_1bb8a9e80:;
		if (it != expr.end()) {
			jule::Ptr<_1ac449eb3_TypeDecl> _119621_g = *it;
			{
				jule::Ptr<_1ad159188_Data> _119721_k = _1ad16cdd3_evalType(_self_.ptr(), _119621_g);;
				if ((_119721_k == nullptr)) {
					_117750_d=nullptr;
					return;;
				};
				_118417_f.get()._field_Generics = jule::alloc_for_append(_118417_f.get()._field_Generics,1);_118417_f.get()._field_Generics.__push(jule::new_ptr<_1ad1839ed_InsGeneric>(_1ad1839ed_InsGeneric{._field_Kind=_119721_k.get()._field_Kind, }));;
			}
			_iter_next_1bb8a9e80:;
			++it;
			goto _iter_begin_1bb8a9e80;
		}
		_iter_end_1bb8a9e80:;
	};
	if (_1ac516bb7_IsBuiltin(_118417_f.ptr())) {
		return;;
	};
	if (_1ad167196_checkGenericFn(_self_, _118417_f,_117765_i.get()._field_Expr.get()._field_Token,_117750_d.get()._field_Model)) {
		_117750_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1ad184ceb_Kind>(_118417_f, 1);
	} else {
		_117750_d=nullptr;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad167806_evalIndexing(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac45672d_IndexingExpr> _121636_i) {
	jule::Ptr<_1ad18522a_TypeKind> _121717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121717_prefix;
	});;
	jule::Ptr<_1ad159188_Data> _122117_d = _1ad1763a3_evalExprKind(_self_, _121636_i.get()._field_Expr.get()._field_Kind);;
	if ((_122117_d == nullptr)) {
		return nullptr;
	};
	if (_122117_d.get()._field_Decl) {
		_1ad166c34_evalIdentDeclFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	if ((_1ad18852a_Fn(_122117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1ad1674d7_evalFnGenericFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	_1ad159188_Data _123717_old_d = (*(_122117_d));;
	jule::Ptr<_1ad159188_Data> _123917_index = _1ad1763a3_evalExprKind(_self_, _121636_i.get()._field_Index.get()._field_Kind);;
	if ((_123917_index == nullptr)) {
		return nullptr;
	};
	_122117_d.get()._field_Decl=false;
	_1ad1660a7_toIndexing(_self_.ptr(), _122117_d,_123917_index,_121636_i);
	if (_1ad159a4b_IsConst(_122117_d.ptr())) {
		_122117_d.get()._field_Decl=false;
		_122117_d.get()._field_Model=static_cast<jule::Any>(_122117_d.get()._field_Constant);
	} else if (_122117_d.get()._field_Decl) {
		_122117_d.get()._field_Decl=false;
	} else {
		_122117_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50b959_IndexingExprModel>(_1ac50b959_IndexingExprModel{._field_Token=_121636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1ad159188_Data>(_123717_old_d), ._field_Index=_123917_index}));
	};
	return _122117_d;
}



inline std::tuple<jule::Ptr<_1ad159188_Data>,jule::Ptr<_1ad159188_Data>> _1ad167b14_evalSlicingExprs(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac456d38_SlicingExpr>& _127041_s) {
	jule::Ptr<_1ad18522a_TypeKind> _127117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127117_prefix;
	});;
	jule::Ptr<_1ad159188_Data> _127517_l = nullptr;;
	jule::Ptr<_1ad159188_Data> _127617_r = nullptr;;
	if ((_127041_s.get()._field_Start != nullptr)) {
		_127517_l=_1ad1763a3_evalExprKind(_self_, _127041_s.get()._field_Start.get()._field_Kind);
		if ((_127517_l != nullptr)) {
			_1ad164803_checkIntegerIndexingByData(_self_.ptr(), _127517_l,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_127517_l=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1ac502279_NewI64(0LL)});
		_127517_l.get()._field_Model=static_cast<jule::Any>(_127517_l.get()._field_Constant);
	};
	if ((_127041_s.get()._field_To != nullptr)) {
		_127617_r=_1ad1763a3_evalExprKind(_self_, _127041_s.get()._field_To.get()._field_Kind);
		if ((_127617_r != nullptr)) {
			_1ad164803_checkIntegerIndexingByData(_self_.ptr(), _127617_r,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_127517_l,_127617_r);
}



inline void _1ad167d89_slicingArr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _130530_d) {
	jule::Ptr<_1ad18522a_TypeKind> _130617_elemType = _1ad188052_Arr(_130530_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_130530_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_130617_elemType}), 8)});
	_130530_d.get()._field_Lvalue=false;
	_130530_d.get()._field_Mutable=(_130530_d.get()._field_Mutable || (!(_1ad186627_Mutable(_130617_elemType.ptr()))));
}



inline void _1ad168252_slicingStr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _132030_d, jule::Ptr<_1ad159188_Data>& _132041_l, jule::Ptr<_1ad159188_Data>& _132052_r) {
	_132030_d.get()._field_Lvalue=false;
	_132030_d.get()._field_Mutable=true;
	if ((!(_1ad159a4b_IsConst(_132030_d.ptr())))) {
		return;;
	};
	if (((_132041_l == nullptr) || (_132052_r == nullptr))) {
		_132030_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1ad159a4b_IsConst(_132041_l.ptr()) && _1ad159a4b_IsConst(_132052_r.ptr()))) {
		jule::I64 _133317_left = _1ac50408e_AsI64(_132041_l.get()._field_Constant.ptr());;
		if ((_133317_left < 0LL)) {
			return;;
		};
		jule::Str _133817_s = _1ac503ab6_ReadStr(_132030_d.get()._field_Constant.ptr());;
		jule::I64 _133921_right = 0LL;;
		if ((_132052_r == nullptr)) {
			_133921_right=static_cast<jule::I64>(static_cast<jule::I64>(_133817_s.len()));
		} else {
			_133921_right=static_cast<jule::I64>(_1ac50408e_AsI64(_132052_r.get()._field_Constant.ptr()));
		};
		if ((_133317_left > _133921_right)) {
			return;;
		};
		_1ac50505c_SetStr(_132030_d.get()._field_Constant.ptr(), _133817_s.slice(_133317_left,_133921_right));
		_132030_d.get()._field_Decl=true;
	} else {
		_132030_d.get()._field_Constant=nullptr;
	};
}



inline void _1ad1686b4_checkSlicing(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data>& _135636_d, jule::Ptr<_1ad159188_Data>& _135647_l, jule::Ptr<_1ad159188_Data>& _135658_r, jule::Ptr<_1ac456d38_SlicingExpr>& _135669_s) {
	{
		
		if ((_1ad188052_Arr(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8c1271:;
			{
				_1ad167d89_slicingArr(&(*_self_), _135636_d);
				return;;
			}
		}
		else if ((_1ad1882b6_Slc(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8c12e8:;
			{
				return;;
			}
		}
		else if ((_1ad18733c_Prim(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb8c1370:;
			{
				jule::Ptr<_1ad189c02_Prim> _136417_prim = _1ad18733c_Prim(_135636_d.get()._field_Kind.ptr());;
				{
					
					if (_1ad18ce36_IsStr(_136417_prim.ptr())) {
						_case_begin_1bb8c3839:;
						{
							_1ad168252_slicingStr(&(*_self_), _135636_d,_135647_l,_135658_r);
							return;;
						}
					}
					_match_end_1bb8c3790:;
				};
			}
		}
		_match_end_1bb8c113e:;
	};
	_1ad15b212_pushErr(&(*_self_), _135669_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_135636_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1ad159188_Data> _1ad1689c2_evalSlicing(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac456d38_SlicingExpr> _137535_s) {
	jule::Ptr<_1ad159188_Data> _137617_d = _1ad1763a3_evalExprKind(_self_, _137535_s.get()._field_Expr.get()._field_Kind);;
	if ((_137617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _138118_l;;
	jule::Ptr<_1ad159188_Data> _138125_r;;
	std::tie(_138118_l,_138125_r) = _1ad167b14_evalSlicingExprs(_self_, _137535_s);
	if ((_138118_l == nullptr)) {
		return _137617_d;
	};
	_137617_d.get()._field_Decl=false;
	_1ad1686b4_checkSlicing(_self_.ptr(), _137617_d,_138118_l,_138125_r,_137535_s);
	if (_1ad159a4b_IsConst(_137617_d.ptr())) {
		_137617_d.get()._field_Decl=false;
		_137617_d.get()._field_Model=static_cast<jule::Any>(_137617_d.get()._field_Constant);
	} else if (_137617_d.get()._field_Decl) {
		_137617_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1ac50c20c_SlicingExprModel> _139921_model = jule::new_ptr<_1ac50c20c_SlicingExprModel>(_1ac50c20c_SlicingExprModel{._field_Token=_137535_s.get()._field_Token, ._field_Expr=_137617_d.get()._field_Model, ._field_Left=_138118_l.get()._field_Model, });;
		if ((_138125_r != nullptr)) {
			_139921_model.get()._field_Right=_138125_r.get()._field_Model;
		};
		_137617_d.get()._field_Model=static_cast<jule::Any>(_139921_model);
	};
	return _137617_d;
}



inline void _1ad168d8a_castPtr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _141230_t, jule::Ptr<_1ad159188_Data> _141248_d, jule::Ptr<_1a959a127_Token> _141258_errorToken) {
	jule::Ptr<_1ad18d486_Sptr> _141313_sptr = _1ad1875a1_Sptr(_141248_d.get()._field_Kind.ptr());;
	if ((_141313_sptr != nullptr)) {
		if ((!(_1ad185934_Equals(_1ad187815_Ptr(_141230_t.ptr()).get()._field_Elem, _141313_sptr.get()._field_Elem)))) {
			_1ad15b212_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_141230_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1ad15bb4c_isUnsafe(&(*_self_))))) {
		_1ad15b212_pushErr(&(*_self_), _141258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad189c02_Prim> _142613_prim = _1ad18733c_Prim(_141248_d.get()._field_Kind.ptr());;
	if (((_1ad187815_Ptr(_141248_d.get()._field_Kind.ptr()) == nullptr) && ((_142613_prim == nullptr) || (!(_1ad0c42e0_IsInt(_1ad18a065_Str(_142613_prim.ptr()))))))) {
		_1ad15b212_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_141230_t.ptr()))}));
	};
	_141248_d.get()._field_Constant=nullptr;
}



inline void _1ad169253_castStruct(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _143433_t, jule::Ptr<_1ad159188_Data> _143451_d, jule::Ptr<_1a959a127_Token> _143461_errorToken) {
	jule::Ptr<_1ac524a3d_Trait> _143517_tr = _1ad188a03_Trait(_143451_d.get()._field_Kind.ptr());;
	if ((_143517_tr == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _143461_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_143451_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_143433_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1ac466a3a_StructIns> _144117_s = _1ad18878e_Struct(_143433_t.ptr());;
	_1bb8d15e4_pushReference(&(*_self_), _144117_s);
	if ((!(_1ac4274ce_IsImplements(_144117_s.get()._field_Decl.ptr(), _143517_tr)))) {
		_1ad15b212_pushErr(&(*_self_), _143461_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_143451_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_143433_t.ptr()))}));
	};
}



inline void _1ad16961b_castRef(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _144930_t, jule::Ptr<_1ad159188_Data> _144948_d, jule::Ptr<_1a959a127_Token> _144958_errorToken) {
	jule::Ptr<_1ad18d486_Sptr> _145017_sptr = _1ad1875a1_Sptr(_144930_t.ptr());;
	jule::Ptr<_1ad1919ea_Ptr> _145217_ptr = _1ad187815_Ptr(_144948_d.get()._field_Kind.ptr());;
	if (((_145217_ptr != nullptr) && _1ad185934_Equals(_145017_sptr.get()._field_Elem, _145217_ptr.get()._field_Elem))) {
		if ((!(_1ad15bb4c_isUnsafe(&(*_self_))))) {
			_1ad15b212_pushErr(&(*_self_), _144958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ad18878e_Struct(_145017_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1ad169253_castStruct(&(*_self_), _145017_sptr.get()._field_Elem,_144948_d,_144958_errorToken);
		return;;
	};
	_1ad15b212_pushErr(&(*_self_), _144958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_144948_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_144930_t.ptr()))}));
}



inline void _1ad1699d4_castSlc(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _147030_t, jule::Ptr<_1ad159188_Data> _147048_d, jule::Ptr<_1a959a127_Token> _147058_errorToken) {
	if ((_1ad187a79_Enum(_147048_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1ad18733c_Prim(_1ad187a79_Enum(_147048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18ce36_IsStr(_1ad18733c_Prim(_1ad187a79_Enum(_147048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1ad15b212_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_147030_t.ptr()))}));
			return;;
		};
	} else if (((_1ad18733c_Prim(_147048_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18ce36_IsStr(_1ad18733c_Prim(_147048_d.get()._field_Kind.ptr()).ptr()))))) {
		_1ad15b212_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_147030_t.ptr()))}));
		return;;
	};
	_147030_t=_1ad1882b6_Slc(_147030_t.ptr()).get()._field_Elem;
	jule::Ptr<_1ad189c02_Prim> _148213_prim = _1ad18733c_Prim(_147030_t.ptr());;
	if (((_148213_prim == nullptr) || ((!(_1ad18b50b_IsU8(_148213_prim.ptr()))) && (!(_1ad18b033_IsI32(_148213_prim.ptr())))))) {
		_1ad15b212_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_147030_t.ptr()))}));
	};
}



inline void _1ad169d03_castStr(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _148830_d, jule::Ptr<_1a959a127_Token> _148840_errorToken) {
	if ((_1ad187a79_Enum(_148830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac526b83_Enum> _149021_e = _1ad187a79_Enum(_148830_d.get()._field_Kind.ptr());;
		if (((_1ad18733c_Prim(_149021_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1ad18ce36_IsStr(_1ad18733c_Prim(_149021_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1ad18733c_Prim(_148830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad189c02_Prim> _149717_prim = _1ad18733c_Prim(_148830_d.get()._field_Kind.ptr());;
		if (((!(_1ad18b50b_IsU8(_149717_prim.ptr()))) && (!(_1ad18b033_IsI32(_149717_prim.ptr()))))) {
			_1ad15b212_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ad185626_Str(_148830_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1ad1882b6_Slc(_148830_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ad185626_Str(_148830_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1ad18522a_TypeKind> _150917_t = _1ad1882b6_Slc(_148830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1ad189c02_Prim> _151013_prim = _1ad18733c_Prim(_150917_t.ptr());;
	if (((_151013_prim == nullptr) || ((!(_1ad18b50b_IsU8(_151013_prim.ptr()))) && (!(_1ad18b033_IsI32(_151013_prim.ptr())))))) {
		_1ad15b212_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ad185626_Str(_148830_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1ad16a1bb_castInt(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _151630_t, jule::Ptr<_1ad159188_Data> _151648_d, jule::Ptr<_1a959a127_Token> _151658_errorToken) {
	if (_1ad159a4b_IsConst(_151648_d.ptr())) {
		jule::Ptr<_1ad189c02_Prim> _151817_prim = _1ad18733c_Prim(_151630_t.ptr());;
		{
			
			if (_1ad0c407b_IsSigInt(_151817_prim.get()._field_Kind)) {
				_case_begin_1bb8eb6db:;
				{
					_1ac5047dc_SetI64(_151648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_151648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad0c41ad_IsUnsigInt(_151817_prim.get()._field_Kind)) {
				_case_begin_1bb8eb763:;
				{
					_1ac504a62_SetU64(_151648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_151648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1bb8eb631:;
		};
	};
	if ((_1ad187a79_Enum(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac526b83_Enum> _152817_e = _1ad187a79_Enum(_151648_d.get()._field_Kind.ptr());;
		if (_1ad0c4554_IsNum(_1ad185626_Str(_152817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ad1875a1_Sptr(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad189c02_Prim> _153517_prim = _1ad18733c_Prim(_151630_t.ptr());;
		if ((!(_1ad18c95d_IsUintptr(_153517_prim.ptr())))) {
			_1ad15b212_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_151630_t.ptr()))}));
		};
		return;;
	};
	if ((_1ad187815_Ptr(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad189c02_Prim> _154217_prim = _1ad18733c_Prim(_151630_t.ptr());;
		if (_1ad18c95d_IsUintptr(_154217_prim.ptr())) {
		} else if ((!(_1ad15bb4c_isUnsafe(&(*_self_))))) {
			_1ad15b212_pushErr(&(*_self_), _151658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1ad18b033_IsI32(_154217_prim.ptr()))) && (!(_1ad18b297_IsI64(_154217_prim.ptr())))) && (!(_1ad18b770_IsU16(_154217_prim.ptr())))) && (!(_1ad18b9d4_IsU32(_154217_prim.ptr())))) && (!(_1ad18bc48_IsU64(_154217_prim.ptr()))))) {
			_1ad15b212_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_151630_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1ad189c02_Prim> _155313_prim = _1ad18733c_Prim(_151648_d.get()._field_Kind.ptr());;
	if (((_155313_prim != nullptr) && _1ad0c4554_IsNum(_1ad18a065_Str(_155313_prim.ptr())))) {
		return;;
	};
	_1ad15b212_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_151630_t.ptr()))}));
}



inline void _1ad16a584_castNum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _156130_t, jule::Ptr<_1ad159188_Data> _156148_d, jule::Ptr<_1a959a127_Token> _156158_errorToken) {
	if (_1ad159a4b_IsConst(_156148_d.ptr())) {
		jule::Ptr<_1ad189c02_Prim> _156317_prim = _1ad18733c_Prim(_156130_t.ptr());;
		{
			
			if (_1ad0c4422_IsFloat(_156317_prim.get()._field_Kind)) {
				_case_begin_1bb906ce0:;
				{
					_1ac5052d2_SetF64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ac504567_AsF64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad0c407b_IsSigInt(_156317_prim.get()._field_Kind)) {
				_case_begin_1bb906d67:;
				{
					_1ac5047dc_SetI64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad0c41ad_IsUnsigInt(_156317_prim.get()._field_Kind)) {
				_case_begin_1bb906dde:;
				{
					_1ac504a62_SetU64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1bb906c24:;
		};
	};
	if ((_1ad187a79_Enum(_156148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac526b83_Enum> _157517_e = _1ad187a79_Enum(_156148_d.get()._field_Kind.ptr());;
		if (_1ad0c4554_IsNum(_1ad185626_Str(_157517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ad189c02_Prim> _158113_prim = _1ad18733c_Prim(_156148_d.get()._field_Kind.ptr());;
	if (((_158113_prim != nullptr) && _1ad0c4554_IsNum(_1ad18a065_Str(_158113_prim.ptr())))) {
		return;;
	};
	_1ad15b212_pushErr(&(*_self_), _156158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_156148_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_156130_t.ptr()))}));
}



inline void _1ad16a94c_castPrim(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _158931_t, jule::Ptr<_1ad159188_Data> _158949_d, jule::Ptr<_1a959a127_Token> _158959_errorToken) {
	jule::Ptr<_1ad189c02_Prim> _159013_prim = _1ad18733c_Prim(_158931_t.ptr());;
	{
		
		if (_1ad18d19a_IsAny(_159013_prim.ptr())) {
			_case_begin_1bb90c961:;
		}
		else if (_1ad18ce36_IsStr(_159013_prim.ptr())) {
			_case_begin_1bb90ced3:;
			{
				_1ad169d03_castStr(&(*_self_), _158949_d,_158959_errorToken);
			}
		}
		else if (_1ad0c42e0_IsInt(_1ad18a065_Str(_159013_prim.ptr()))) {
			_case_begin_1bb90d049:;
			{
				_1ad16a1bb_castInt(&(*_self_), _158931_t,_158949_d,_158959_errorToken);
			}
		}
		else if (_1ad0c4554_IsNum(_1ad18a065_Str(_159013_prim.ptr()))) {
			_case_begin_1bb90d0b0:;
			{
				_1ad16a584_castNum(&(*_self_), _158931_t,_158949_d,_158959_errorToken);
			}
		}
		else {
			_case_begin_1bb90ce6c:;
			{
				_1ad15b212_pushErr(&(*_self_), _158959_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_158931_t.ptr()))}));
			}
		}
		_match_end_1bb90ce06:;
	};
}



inline void _1ad16ac6b_castConstant(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind>& _160536_t, jule::Ptr<_1ad159188_Data>& _160555_d) {
	if (((_160555_d == nullptr) || (!(_1ad159a4b_IsConst(_160555_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1ad189c02_Prim> _160913_prim = _1ad18733c_Prim(_160536_t.ptr());;
	_1ad1823e2_castConstByType(_160913_prim.get()._field_Kind,_160555_d);
	_160555_d.get()._field_Model=static_cast<jule::Any>(_160555_d.get()._field_Constant);
}



inline void _1ad16b134_castTypeEnum(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind>& _161436_t, jule::Ptr<_1ad159188_Data>& _161455_d, jule::Ptr<_1a959a127_Token>& _161470_errorToken) {
	jule::I64 _161513_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1ad0ee33c_checkTypeCompatibility((*_self_)._field_s, _161455_d.get()._field_Kind,_161436_t,_161470_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_161513_n);
		_1ad15b212_pushErr(&(*_self_), _161470_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_161455_d.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_161436_t.ptr()))}));
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad16b585_evalCastByTypeNData(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad18522a_TypeKind> _162242_t, jule::Ptr<_1ad159188_Data> _162260_d, jule::Ptr<_1a959a127_Token> _162274_errorToken) {
	if (((_162260_d != nullptr) && _162260_d.get()._field_Decl)) {
		_1ad15b212_pushErr(&(*_self_), _162274_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1ad18733c_Prim(_162260_d.get()._field_Kind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim(_162260_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bb9168b0:;
			{
				if ((_1ad187a79_Enum(_162242_t.ptr()) != nullptr)) {
					_1ad15b212_pushErr(&(*_self_), _162274_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1ad15b531_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1ad187cdd_TypeEnum(_162242_t.ptr()) != nullptr)) {
					_1ad15b212_pushErr(&(*_self_), _162274_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1ad187cdd_TypeEnum(_162260_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bb915c22:;
			{
				_1ad16b134_castTypeEnum(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1ad187815_Ptr(_162242_t.ptr()) != nullptr)) {
			_case_begin_1bb915c88:;
			{
				_1ad168d8a_castPtr(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1ad1875a1_Sptr(_162242_t.ptr()) != nullptr)) {
			_case_begin_1bb915cee:;
			{
				_1ad16961b_castRef(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1ad1882b6_Slc(_162242_t.ptr()) != nullptr)) {
			_case_begin_1bb915d65:;
			{
				_1ad1699d4_castSlc(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1ad18878e_Struct(_162242_t.ptr()) != nullptr)) {
			_case_begin_1bb916a14:;
			{
				_1ad169253_castStruct(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1ad18733c_Prim(_162242_t.ptr()) != nullptr)) {
			_case_begin_1bb916a7a:;
			{
				_1ad16a94c_castPrim(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
				_1ad16ac6b_castConstant(&(*_self_), _162242_t,_162260_d);
			}
		}
		else {
			_case_begin_1bb915bab:;
			{
				_1ad15b212_pushErr(&(*_self_), _162274_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_162242_t.ptr()))}));
				_162260_d=nullptr;
			}
		}
		_match_end_1bb915b56:;
	};
	if ((_162260_d == nullptr)) {
		return nullptr;
	};
	_162260_d.get()._field_Mutable=(_162260_d.get()._field_Mutable || ((!(_1ad186627_Mutable(_162260_d.get()._field_Kind.ptr()))) && _1ad186627_Mutable(_162242_t.ptr())));
	_162260_d.get()._field_Lvalue=false;
	_162260_d.get()._field_Decl=false;
	if (((_1ad187a79_Enum(_162260_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ad185934_Equals(_1ad187a79_Enum(_162260_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _162242_t))))) {
		_1ad1818a8_applyCastKind(_162260_d,_162242_t);
		_162260_d.get()._field_Model.operator jule::Ptr<_1ac50b393_CastingExprModel>().get()._field_Token=_162274_errorToken;
	} else {
		_162260_d.get()._field_Kind=_162242_t;
	};
	return _162260_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad16b9d6_evalCastT(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ad18522a_TypeKind>& _167534_t, jule::Ptr<_1ac44e4d4_Expr>& _167553_e, jule::Ptr<_1a959a127_Token>& _167568_et) {
	jule::Ptr<_1ad18522a_TypeKind> _167617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_167617_prefix;
	});;
	if ((_1ad1882b6_Slc(_167534_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _167553_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1ac455d8c_SliceExpr>>()) {
				_case_begin_1bb92205d:;
				{
					_self_.get()._field_prefix=_167534_t;
				}
			}
			_match_end_1bb92214b:;
		};
	};
	jule::Ptr<_1ad159188_Data> _168517_d = _1ad1763a3_evalExprKind(_self_, _167553_e.get()._field_Kind);;
	if (((_168517_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _168517_d;
	};
	return _1ad16b585_evalCastByTypeNData(_self_.ptr(), _167534_t,_168517_d,_167568_et);
}



inline jule::Ptr<_1ad159188_Data> _1ad16bce4_evalCast(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac4524b5_CastExpr> _169232_c) {
	jule::Ptr<_1ad189383_TypeSymbol> _169317_t = _1ac519e1d_buildType(_169232_c.get()._field_Kind);;
	jule::Bool _169413_ok = _1ad0ec25d_checkType(_self_.get()._field_s, _169317_t,_self_.get()._field_lookup);;
	if ((!(_169413_ok))) {
		return nullptr;
	};
	return _1ad16b9d6_evalCastT(_self_, _169317_t.get()._field_Kind,_169232_c.get()._field_Expr,_169232_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1ad159188_Data> _1ad16c102_evalNsSelection(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac45286c_NsSelectionExpr> _170134_s) {
	jule::Str _170213_path = _1ad1a2b82_buildLinkPathByTokens(_170134_s.get()._field_Ns);;
	jule::Ptr<_1ad0dc11b_ImportInfo> _170317_imp = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a417d_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>([=](jule::Ptr<_1ad0dc11b_ImportInfo> _170352_imp) mutable -> jule::Bool {
		if (((_170134_s.get()._field_Ns.len() == 1LL) && (_170352_imp.get()._field_Alias == _170213_path))) {
			return true;
		};
		return ((_170352_imp.get()._field_LinkPath == _170213_path) && _1ad0dec78_isAccessibleViaSelection(_170352_imp.ptr()));
	}));;
	if ((_170317_imp == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _170134_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_170213_path)}));
		return nullptr;
	};
	jule::Trait<_1ad1a5bb8_Lookup> _171517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_170317_imp, 1);
	;
	_1ad15b8d8_disallowBuiltin(&(*_self_));
	jule::Any _172017_def = _1ad15e226_getDef(&(*_self_), _170134_s.get()._field_Ident.get()._field_Kind,false);;
	_1ad15b70c_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_171517_lookup;
	jule::Ptr<_1ad159188_Data> _172317_d = _1ad162c0d_evalDef(&(*_self_), jule::Any(_172017_def),_170134_s.get()._field_Ident);;
	return _172317_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad16c553_evalStructLitExplicit(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac466a3a_StructIns> _172745_s, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _172813_exprs, jule::Ptr<_1a959a127_Token> _172833_errorToken) {
	jule::Bool _172913_ok = _1ad0e92c1_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172745_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_172745_s.get()._field_Generics.len()),_172833_errorToken);;
	if ((!(_172913_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _172745_s.get()._field_Decl))) {
		_1ad15b212_pushErr(_self_.ptr(), _172833_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172745_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1bb8d15e4_pushReference(_self_.ptr(), _172745_s);
	_1ad161118_checkDeprecated(_self_.ptr(), _172745_s.get()._field_Decl.get()._field_Directives,_172833_errorToken);
	_1ad14d842_structLitChecker _174217_slc = _1ad14d842_structLitChecker{._field_e=_self_, ._field_errorToken=_172833_errorToken, ._field_s=_172745_s, };;
	_1ad14edd7_check(&_174217_slc, _172813_exprs);
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_172745_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aeb9_StructLitExprModel>(_1ac50aeb9_StructLitExprModel{._field_Strct=_172745_s, ._field_Args=_174217_slc._field_args})), });
}



inline jule::Ptr<_1ad159188_Data> _1ad16c861_evalStructLit(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac45497e_StructLit> _176137_lit) {
	jule::Ptr<_1ad189383_TypeSymbol> _176217_t = _1ac519e1d_buildType(_176137_lit.get()._field_Kind);;
	jule::Bool _176313_ok = _1ad0ec25d_checkType(_self_.get()._field_s, _176217_t,_self_.get()._field_lookup);;
	if ((!(_176313_ok))) {
		return nullptr;
	};
	jule::Ptr<_1ac466a3a_StructIns> _176817_s = _1ad18878e_Struct(_176217_t.get()._field_Kind.ptr());;
	if ((_176817_s == nullptr)) {
		if ((_1ad1875a1_Sptr(_176217_t.get()._field_Kind.ptr()) != nullptr)) {
			_176817_s=_1ad18878e_Struct(_1ad1875a1_Sptr(_176217_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_176817_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1ad15b212_pushErr(_self_.ptr(), _176137_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1ad159188_Data> _178117_d = _1ad16c553_evalStructLitExplicit(_self_, _176817_s,_176137_lit.get()._field_Exprs,_176137_lit.get()._field_Kind.get()._field_Token);;
	if ((_1ad1875a1_Sptr(_176217_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac50aeb9_StructLitExprModel> _178321_model = _178117_d.get()._field_Model.operator jule::Ptr<_1ac50aeb9_StructLitExprModel>();;
		_1ad180313_makeStructLitAlloc(_178117_d,_178321_model);
	};
	return _178117_d;
}



inline _1ad193755_typeChecker _1ad16cac5_typeChecker(_1ad15ac06_Eval* _self_) {
	return _1ad0eb14c_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_1ad159188_Data> _1ad16cdd3_evalType(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac449eb3_TypeDecl> _179331_t) {
	jule::Ptr<_1ad189383_TypeSymbol> _179417_tk = _1ac519e1d_buildType(_179331_t);;
	jule::Bool _179513_ok = _1ad0ec25d_checkType((*_self_)._field_s, _179417_tk,(*_self_)._field_lookup);;
	if ((!(_179513_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=_179417_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_179417_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1ad16d202_callTypeFn(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac4537a2_FnCallExpr>& _180635_fc, jule::Ptr<_1ad159188_Data>& _180657_d) {
	if ((_180635_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_self_.ptr(), _180635_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_180635_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_self_.ptr(), _180635_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_180635_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1ac44e4d4_Expr> _181421_arg = _180635_fc.get()._field_Args[0LL];;
		_180657_d=_1ad16b9d6_evalCastT(_self_, _180657_d.get()._field_Kind,_181421_arg,_181421_arg.get()._field_Token);
		return;;
	};
	if ((_180657_d != nullptr)) {
		_180657_d.get()._field_Decl=false;
	};
}



inline void _1ad16d521_callBuiltinFn(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac4537a2_FnCallExpr>& _182438_fc, jule::Ptr<_1ad159188_Data>& _182460_d) {
	_182460_d=_1ad18852a_Fn(_182460_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_182438_fc,_182460_d);
	if ((_182460_d == nullptr)) {
		return;;
	};
	_182460_d.get()._field_Mutable=true;
}



inline void _1ad16d862_checkFnOfConcurrentCall(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac515831_FnIns>& _183243_f, jule::Ptr<_1a959a127_Token> _183254_errorToken) {
	if (_1ad15bb4c_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _183243_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bb940ba3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac514962_ParamIns> &_183616_p = *it;
			{
				if (_183616_p.get()._field_Decl.get()._field_Reference) {
					_1ad15b212_pushErr(&(*_self_), _183254_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bb940ba3:;
			++it;
			goto _iter_begin_1bb940ba3;
		}
		_iter_end_1bb940ba3:;
	};
}



inline void _1ad16dc5d_processExceptionalHandler(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac515831_FnIns>& _184449_f, jule::Ptr<_1ac4537a2_FnCallExpr>& _184465_fc, jule::Ptr<_1ad159188_Data>& _184487_d) {
	jule::Bool _184513_resultNeeded = ((!(_1ac5130e2_IsVoid(_184449_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1ad0c7799_scopeChecker> _184617_csc = nullptr;;
	jule::Ptr<_1ad0c4994_Scope> _184717_ch = nullptr;;
	jule::Ptr<_1ac50b580_FnCallExprModel> _184917_model = _184487_d.get()._field_Model.operator jule::Ptr<_1ac50b580_FnCallExprModel>();;
	jule::Ptr<_1ad0c7799_scopeChecker> _185317_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>();;
	_184617_csc=_1ad0d58c8_newChildChecker(_185317_sc);
	if (_184513_resultNeeded) {
		_184617_csc.get()._field_result=_184449_f;
	};
	_184717_ch=_1ad0c9c63_getChild(_185317_sc.ptr());
	_184465_fc.get()._field_Exception.get()._field_Parent=_185317_sc.get()._field_tree;
	_184617_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_184617_csc.get()._field_table.get()._field_Vars,1);_184617_csc.get()._field_table.get()._field_Vars.__push(_1ad180654_buildErrorVar(_184717_ch,_184465_fc));;
	_1ad0ca12b_checkChildSsc(_185317_sc, _184465_fc.get()._field_Exception,_184717_ch,_184617_csc);
	_184917_model.get()._field_Assigned=_184513_resultNeeded;
	_184917_model.get()._field_Except=_184717_ch;
	if ((_184513_resultNeeded && (_184617_csc.get()._field_result != nullptr))) {
		_1ad15b212_pushErr(&(*_self_), _184465_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1ad16e08d_callFn(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac4537a2_FnCallExpr>& _187131_fc, jule::Ptr<_1ad159188_Data>& _187153_d) {
	jule::Ptr<_1ac515831_FnIns> _187217_f = _1ad18852a_Fn(_187153_d.get()._field_Kind.ptr());;
	if ((_1ad15bdb1_isGlobal(_self_.ptr()) && _187217_f.get()._field_Decl.get()._field_Exceptional)) {
		_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1ad15b531_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_187153_d=nullptr;
		return;;
	};
	if (_1ac516bb7_IsBuiltin(_187217_f.ptr())) {
		_1ad16d521_callBuiltinFn(_self_, _187131_fc,_187153_d);
		return;;
	};
	if (((!(_1ac513356_IsMethod(_187217_f.get()._field_Decl.ptr()))) && _1ad1a1cd5_hasDirective(_187217_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_187153_d=nullptr;
		return;;
	};
	if (((((!(_187153_d.get()._field_Mutable)) && _1ac513356_IsMethod(_187217_f.get()._field_Decl.ptr())) && (!(_187217_f.get()._field_Decl.get()._field_Statically))) && _187217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1ad15bb4c_isUnsafe(_self_.ptr()))) && _187217_f.get()._field_Decl.get()._field_Unsafety)) {
		_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _189617_dynamicAnnotation = (((_187217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_187217_f.get()._field_Generics.len() == 0LL)) && (_187217_f.get()._field_Params.len() > 0LL));;
	if (_189617_dynamicAnnotation) {
		_187217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>::alloc(_187217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_187217_f.get()._field_Generics.len() != _187217_f.get()._field_Decl.get()._field_Generics.len())) {
		_1ad0e92c1_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_187217_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_187217_f.get()._field_Generics.len()),_187131_fc.get()._field_Token);
		_187153_d=nullptr;
		return;;
	};
	jule::Ptr<_1ad0e5267_Sema> _190517_old = _self_.get()._field_s;;
	if ((_187217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_187217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_190517_old != _self_.get()._field_s)) {
			_190517_old.get()._field_errors=jule::append(_190517_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_190517_old;
	});;
	if ((!(_189617_dynamicAnnotation))) {
		if ((!(_187217_f.get()._field_reloaded))) {
			jule::Bool _192021_ok = _1ad1010ca_reloadFnInsTypes(_self_.get()._field_s, _187217_f);;
			_187217_f.get()._field_reloaded=true;
			if ((!(_192021_ok))) {
				_187153_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ac515831_FnIns> _192721_existInstance = _1ac5145aa_appendInstance(_187217_f.get()._field_Decl.ptr(), _187217_f);;
		if ((_192721_existInstance != nullptr)) {
			_187217_f=_192721_existInstance;
		};
	} else {
		_1ad0ee9be_buildFnNonGenericTypeKinds(_self_.get()._field_s, _187217_f);
	};
	_1ad14ae38_fnCallArgChecker _193517_fcac = _1ad14ae38_fnCallArgChecker{._field_e=_self_, ._field_args=_187131_fc.get()._field_Args, ._field_errorToken=_187131_fc.get()._field_Token, ._field_f=_187217_f, ._field_dynamicAnnotation=_189617_dynamicAnnotation, };;
	jule::Bool _194217_ok = false;;
	if ((_187217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_190517_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_190517_old);
		_194217_ok=_1ad14d303_check(&_193517_fcac);
		std::tie(_190517_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_190517_old);
	} else {
		_194217_ok=_1ad14d303_check(&_193517_fcac);
	};
	if (_189617_dynamicAnnotation) {
		if ((!(_194217_ok))) {
			_187153_d=nullptr;
			return;;
		};
		if ((!(_1ad167196_checkGenericFn(_self_, _187217_f,_187131_fc.get()._field_Token,_187153_d.get()._field_Model)))) {
			_187153_d=nullptr;
			return;;
		};
	};
	jule::Any _196217_callModel = _187153_d.get()._field_Model;;
	if (_1ac5130e2_IsVoid(_187217_f.get()._field_Decl.ptr())) {
		_187153_d=_1ad181aa6_buildVoidData();
	} else {
		_187153_d.get()._field_Kind=_187217_f.get()._field_Result;
		_187153_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1ac50b580_FnCallExprModel> _197117_model = jule::new_ptr<_1ac50b580_FnCallExprModel>(_1ac50b580_FnCallExprModel{._field_Token=_187131_fc.get()._field_Token, ._field_Func=_187217_f, ._field_Expr=_196217_callModel, ._field_Args=_193517_fcac._field_argModels, });;
	_187153_d.get()._field_Model=static_cast<jule::Any>(_197117_model);
	_187153_d.get()._field_Mutable=true;
	if (_187217_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1ac453b15_Unhandled(_187131_fc.ptr())) {
				_case_begin_1bc5869c4:;
				{
					_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1ad15b531_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1ac453d79_Ignored(_187131_fc.ptr())) {
				_case_begin_1bc586397:;
				{
					goto _match_end_1bc586254;
				}
			}
			else {
				_case_begin_1bc586331:;
				{
					_1ad16dc5d_processExceptionalHandler(_self_.ptr(), _187217_f,_187131_fc,_187153_d);
				}
			}
			_match_end_1bc586254:;
		};
	} else if ((!(_1ac453b15_Unhandled(_187131_fc.ptr())))) {
		_1ad15b212_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad16e39b_evalFnCall(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac4537a2_FnCallExpr> _199734_fc) {
	jule::Ptr<_1ad18522a_TypeKind> _199817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_199817_prefix;
	});;
	{
		auto &_match_expr{ _199734_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
			_case_begin_1bc5895cb:;
			{
				if ((_199734_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1ad214a18_builtinCallerError(_self_,_199734_fc);
				};
			}
		}
		_match_end_1bc589576:;
	};
	jule::Ptr<_1ad159188_Data> _201117_d = _1ad1763a3_evalExprKind(_self_, _199734_fc.get()._field_Expr.get()._field_Kind);;
	if ((_201117_d == nullptr)) {
		return nullptr;
	};
	if (_201117_d.get()._field_Decl) {
		_1ad16d202_callTypeFn(_self_, _199734_fc,_201117_d);
		return _201117_d;
	};
	if ((_1ad18852a_Fn(_201117_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ad15b212_pushErr(_self_.ptr(), _199734_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1ad16e08d_callFn(_self_, _199734_fc,_201117_d);
	return _201117_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad16e753_evalEnumStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac526b83_Enum> _203037_enm, jule::Ptr<_1a959a127_Token> _203049_ident) {
	jule::Ptr<_1ad159188_Data> _203117_d = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_203037_enm, 3)}), });;
	jule::Ptr<_1ac52618d_EnumItem> _203717_item = _1ac527744_FindItem(_203037_enm.ptr(), _203049_ident.get()._field_Kind);;
	if ((_203717_item == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _203049_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203037_enm.get()._field_Ident),jule::Any(_203049_ident.get()._field_Kind)}));
	} else {
		_203117_d.get()._field_Constant=jule::new_ptr<_1ac49c202_Const>((*(_203717_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_203117_d.get()._field_Model=static_cast<jule::Any>(_203117_d.get()._field_Constant);
		_1ad182139_applyCastModelByEnum(_203117_d,_203037_enm);
	};
	return _203117_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad16eb0a_evalTypeEnumStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac52827d_TypeEnum> _204941_enm, jule::Ptr<_1a959a127_Token> _204957_ident) {
	jule::Ptr<_1ac527bb7_TypeEnumItem> _205017_item = _1ac528cb7_FindItem(_204941_enm.ptr(), _204957_ident.get()._field_Kind);;
	if ((_205017_item == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _204957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204941_enm.get()._field_Ident),jule::Any(_204957_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1ad187a79_Enum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc59310c:;
			{
				return _1ad15e7a9__evalEnum(&(*_self_), _1ad187a79_Enum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1ad187cdd_TypeEnum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc59330a:;
			{
				return _1ad15ee6e__evalTypeEnum(&(*_self_), _1ad187cdd_TypeEnum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1ad18878e_Struct(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc592529:;
			{
				return _1ad160634__evalStruct(&(*_self_), _1ad18878e_Struct(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1bc59177b:;
			{
				jule::Ptr<_1ad159188_Data> _206321_d = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=_205017_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_206321_d.get()._field_Model=static_cast<jule::Any>(_206321_d.get()._field_Kind);
				return _206321_d;
			}
		}
		_match_end_1bc591726:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad16eeb2_evalStructStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1ac466a3a_StructIns> _207239_s, jule::Ptr<_1a959a127_Token> _207254_ident) {
	jule::Ptr<_1ad159188_Data> _207317_d = jule::new_ptr<_1ad159188_Data>();;
	;
	jule::Ptr<_1ac512b80_Fn> _207717_method = _1ac441bad_FindMethod(_207239_s.ptr(), _207254_ident.get()._field_Kind,true);;
	if ((_207717_method != nullptr)) {
		if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _207717_method.get()._field_Public,_207717_method.get()._field_Token)))) {
			_1ad15b212_pushErr(&(*_self_), _207254_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_207254_ident.get()._field_Kind)}));
			_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac515831_FnIns> _208421_ins = _1ac5142d0_instance(_207717_method);;
		_208421_ins.get()._field_Owner=_207239_s;
		_1bc560a25_pushReference(&(*_self_), _208421_ins);
		_207317_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50ca04_StructStaticIdentExprModel>(_1ac50ca04_StructStaticIdentExprModel{._field_Structure=_207239_s, ._field_Expr=_207317_d.get()._field_Model, ._field_Method=_208421_ins}));
		_207317_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_208421_ins, 1)});
		return _207317_d;
	};
	jule::Ptr<_1ad112097_Var> _209817_sttc = _1ac425cb3_FindStatic(_207239_s.get()._field_Decl.ptr(), _207254_ident.get()._field_Kind);;
	if ((_209817_sttc != nullptr)) {
		return _1ad16249e_evalVar(&(*_self_), _209817_sttc,_207254_ident);
	};
	_1ad15b212_pushErr(&(*_self_), _207254_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_207239_s.get()._field_Decl.get()._field_Ident),jule::Any(_207254_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1ad159188_Data> _1ad170413_evalTraitSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _210740_d, jule::Ptr<_1ac524a3d_Trait> _210754_trt, jule::Ptr<_1a959a127_Token> _210771_ident) {
	jule::Ptr<_1ac512b80_Fn> _210817_f = _1ac5258b8_FindMethod(_210754_trt.ptr(), _210771_ident.get()._field_Kind);;
	if ((_210817_f == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _210771_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_210754_trt.get()._field_Ident),jule::Any(_210771_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ac5142d0_instance(_210817_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50c3e9_TraitSubIdentExprModel>(_1ac50c3e9_TraitSubIdentExprModel{._field_Token=_210771_ident, ._field_Expr=_210740_d.get()._field_Model, ._field_Method=_210817_f, ._field_Trt=_210754_trt})), });
}



inline jule::Ptr<_1ad159188_Data> _1ad17090d_evalStructSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _212641_d, jule::Ptr<_1ac466a3a_StructIns> _212655_s, jule::Ptr<_1ac452ce0_SubIdentExpr> _212674_si, jule::Bool _212693_ref) {
	jule::Ptr<_1ac442d57_FieldIns> _212717_f = _1ac4446c7_FindField(_212655_s.ptr(), _212674_si.get()._field_Ident.get()._field_Kind);;
	if ((_212717_f != nullptr)) {
		if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _212717_f.get()._field_Decl.get()._field_Public,_212717_f.get()._field_Decl.get()._field_Token)))) {
			_1ad15b212_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_212717_f.get()._field_Decl.get()._field_Ident)}));
			_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac50c817_StructSubIdentExprModel> _213421_model = jule::new_ptr<_1ac50c817_StructSubIdentExprModel>(_1ac50c817_StructSubIdentExprModel{._field_Token=_212674_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1ad159188_Data>((*(_212641_d))), ._field_ExprKind=_212641_d.get()._field_Kind, ._field_Field=_212717_f});;
		_212641_d.get()._field_Model=static_cast<jule::Any>(_213421_model);
		_212641_d.get()._field_Kind=_212717_f.get()._field_Kind;
		_212641_d.get()._field_Lvalue=true;
		if ((_212717_f.get()._field_Decl.get()._field_Mutable && (!(_212641_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
					_case_begin_1bc87050a:;
					{
						jule::Ptr<_1ad0c7799_scopeChecker> _214825_scope = _1ad0c8b74_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>());;
						_212641_d.get()._field_Mutable=((_214825_scope.get()._field_owner != nullptr) && (_214825_scope.get()._field_owner.get()._field_Owner == _212655_s));
					}
				}
				_match_end_1bc8704a5:;
			};
		};
		return _212641_d;
	};
	;
	jule::Ptr<_1ac512b80_Fn> _215717_m = _1ac441bad_FindMethod(_212655_s.ptr(), _212674_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_215717_m == nullptr)) {
		_1ad15b212_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212655_s.get()._field_Decl.get()._field_Ident),jule::Any(_212674_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _215717_m.get()._field_Public,_215717_m.get()._field_Token)))) {
		_1ad15b212_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215717_m.get()._field_Ident)}));
		_1ad15b531_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1ac511bd4_IsRef(_215717_m.get()._field_Params[0LL].ptr()) && (!(_212693_ref)))) {
		_1ad15b212_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1ad161118_checkDeprecated(&(*_self_), _215717_m.get()._field_Directives,_212674_si.get()._field_Ident);
	jule::Ptr<_1ac515831_FnIns> _217317_ins = _1ac5142d0_instance(_215717_m);;
	_217317_ins.get()._field_Owner=_212655_s;
	_1bc560a25_pushReference(&(*_self_), _217317_ins);
	jule::Ptr<_1ad159188_Data> _217617_model = jule::new_ptr<_1ad159188_Data>((*(_212641_d)));;
	_212641_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50c817_StructSubIdentExprModel>(_1ac50c817_StructSubIdentExprModel{._field_Token=_212674_si.get()._field_Ident, ._field_Expr=_217617_model, ._field_ExprKind=_212641_d.get()._field_Kind, ._field_Method=_217317_ins, }));
	_212641_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_217317_ins, 1)});
	return _212641_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad170cb5_evalSliceSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _218740_d, jule::Ptr<_1a959a127_Token> _218754_ident) {
	{
		auto &_match_expr{ _218754_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1bc879091:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1bc879107:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1bc87916d:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::make({jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_218740_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1bc87902a:;
			{
				_1ad15b212_pushErr(&(*_self_), _218754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_218740_d.get()._field_Kind.ptr())),jule::Any(_218754_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc878cd8:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17116c_evalArraySubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _224640_d, jule::Ptr<_1a959a127_Token> _224654_ident) {
	{
		auto &_match_expr{ _224654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1bc87a3a0:;
			{
				jule::Ptr<_1ac49c202_Const> _224921_c = static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad188052_Arr(_224640_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_224921_c), ._field_Constant=_224921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1bc8802c8:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::make({jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_224640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_224640_d.get()._field_Kind, ._field_Expr=_224640_d.get()._field_Model, ._field_Token=_224654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1bc87e2a5:;
			{
				_1ad15b212_pushErr(&(*_self_), _224654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_224640_d.get()._field_Kind.ptr())),jule::Any(_224654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc87e1ea:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad171524_evalMapSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _229038_d, jule::Ptr<_1a959a127_Token> _229052_ident) {
	jule::Ptr<_1ad190499_Map> _229117_mapKind = _1ad188c67_Map(_229038_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _229052_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1bc88508b:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1bc885102:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1bc884e6a:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Result=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_229117_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1bc884ed1:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Result=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_229117_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1bc884233:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::make({jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_229117_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad21d527_builtinCallerCommon), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1bc884299:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::make({jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_229117_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2396ca_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1bc8841bc:;
			{
				_1ad15b212_pushErr(&(*_self_), _229052_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ad19080c_Str(_229117_mapKind.ptr())),jule::Any(_229052_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc884123:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad1718cb_evalStrSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _241238_d, jule::Ptr<_1a959a127_Token> _241252_ident) {
	jule::Ptr<_1ad18522a_TypeKind> _241317_strKind = jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _241252_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1bc88d869:;
			{
				jule::Ptr<_1ad159188_Data> _241621_sd = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1ad159a4b_IsConst(_241238_d.ptr())) {
					_241621_sd.get()._field_Constant=static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac503ab6_ReadStr(_241238_d.get()._field_Constant.ptr()).len())));
					_241621_sd.get()._field_Model=static_cast<jule::Any>(_241621_sd.get()._field_Constant);
				} else {
					_241621_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_241238_d.get()._field_Kind, ._field_Expr=_241238_d.get()._field_Model, ._field_Token=_241252_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _241621_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1bc88d8d0:;
			{
				jule::Ptr<_1ad159188_Data> _243221_sd = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1ad159a4b_IsConst(_241238_d.ptr())) {
					_243221_sd.get()._field_Constant=static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac503ab6_ReadStr(_241238_d.get()._field_Constant.ptr()).cap())));
					_243221_sd.get()._field_Model=static_cast<jule::Any>(_243221_sd.get()._field_Constant);
				} else {
					_243221_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_241238_d.get()._field_Kind, ._field_Expr=_241238_d.get()._field_Model, ._field_Token=_241252_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _243221_sd;
			}
		}
		else {
			_case_begin_1bc88d803:;
			{
				_1ad15b212_pushErr(&(*_self_), _241252_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_241317_strKind.ptr())),jule::Any(_241252_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc88d759:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad171bd9_evalIntTypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _245336_ident) {
	;
	{
		auto &_match_expr{ _245336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc89484d:;
			{
				jule::Ptr<_1ac49c202_Const> _245821_c = static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac9b3295_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245821_c), ._field_Constant=_245821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8957e9:;
			{
				jule::Ptr<_1ac49c202_Const> _246521_c = static__1ac502279_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac9a560b_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246521_c), ._field_Constant=_246521_c});
			}
		}
		else {
			_case_begin_1bc894a3a:;
			{
				_1ad15b212_pushErr(&(*_self_), _245336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_245336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8949d5:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad171ee7_evalUintTypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _247737_ident) {
	;
	{
		auto &_match_expr{ _247737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc898445:;
			{
				jule::Ptr<_1ac49c202_Const> _248221_c = static__1ac5023ab_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1ac9b3295_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_248221_c), ._field_Constant=_248221_c});
			}
		}
		else {
			_case_begin_1bc89839b:;
			{
				_1ad15b212_pushErr(&(*_self_), _247737_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_247737_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc898346:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad172305_evalI8TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _249435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc89b448:;
			{
				jule::Ptr<_1ac49c202_Const> _250121_c = static__1ac502279_NewI64(127LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_250121_c), ._field_Constant=_250121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc89b4ae:;
			{
				jule::Ptr<_1ac49c202_Const> _250821_c = static__1ac502279_NewI64(-128LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_250821_c), ._field_Constant=_250821_c});
			}
		}
		else {
			_case_begin_1bc89b38d:;
			{
				_1ad15b212_pushErr(&(*_self_), _249435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_249435_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc89b338:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad172613_evalI16TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _252036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _252036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8a012d:;
			{
				jule::Ptr<_1ac49c202_Const> _252721_c = static__1ac502279_NewI64(32767LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252721_c), ._field_Constant=_252721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8a0194:;
			{
				jule::Ptr<_1ac49c202_Const> _253421_c = static__1ac502279_NewI64(-32768LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253421_c), ._field_Constant=_253421_c});
			}
		}
		else {
			_case_begin_1bc8a0073:;
			{
				_1ad15b212_pushErr(&(*_self_), _252036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_252036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8a001d:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad172921_evalI32TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _254636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _254636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8a3d13:;
			{
				jule::Ptr<_1ac49c202_Const> _255321_c = static__1ac502279_NewI64(2147483647LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255321_c), ._field_Constant=_255321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8a3d79:;
			{
				jule::Ptr<_1ac49c202_Const> _256021_c = static__1ac502279_NewI64(-2147483648LL);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256021_c), ._field_Constant=_256021_c});
			}
		}
		else {
			_case_begin_1bc8a3c58:;
			{
				_1ad15b212_pushErr(&(*_self_), _254636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_254636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8a3c03:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad172c2e_evalI64TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _257236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _257236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8a79e8:;
			{
				jule::Ptr<_1ac49c202_Const> _257921_c = static__1ac502279_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257921_c), ._field_Constant=_257921_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8a7a5e:;
			{
				jule::Ptr<_1ac49c202_Const> _258621_c = static__1ac502279_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258621_c), ._field_Constant=_258621_c});
			}
		}
		else {
			_case_begin_1bc8a793d:;
			{
				_1ad15b212_pushErr(&(*_self_), _257236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_257236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8a78d8:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17303c_evalU8TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _259835_ident) {
	;
	;
	{
		auto &_match_expr{ _259835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8ab25a:;
			{
				jule::Ptr<_1ac49c202_Const> _260421_c = static__1ac5023ab_NewU64(255LLU);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_260421_c), ._field_Constant=_260421_c});
			}
		}
		else {
			_case_begin_1bc8aa754:;
			{
				_1ad15b212_pushErr(&(*_self_), _259835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_259835_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8ab106:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17334a_evalU16TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _261636_ident) {
	;
	;
	{
		auto &_match_expr{ _261636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8adb0e:;
			{
				jule::Ptr<_1ac49c202_Const> _262221_c = static__1ac5023ab_NewU64(65535LLU);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262221_c), ._field_Constant=_262221_c});
			}
		}
		else {
			_case_begin_1bc8ad108:;
			{
				_1ad15b212_pushErr(&(*_self_), _261636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_261636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8ad9aa:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad173658_evalU32TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _263436_ident) {
	;
	;
	{
		auto &_match_expr{ _263436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8b14b3:;
			{
				jule::Ptr<_1ac49c202_Const> _264021_c = static__1ac5023ab_NewU64(4294967295LLU);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_264021_c), ._field_Constant=_264021_c});
			}
		}
		else {
			_case_begin_1bc8b09ac:;
			{
				_1ad15b212_pushErr(&(*_self_), _263436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_263436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8b135e:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad173966_evalU64TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _265236_ident) {
	;
	;
	{
		auto &_match_expr{ _265236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8b3d67:;
			{
				jule::Ptr<_1ac49c202_Const> _265821_c = static__1ac5023ab_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_265821_c), ._field_Constant=_265821_c});
			}
		}
		else {
			_case_begin_1bc8b3361:;
			{
				_1ad15b212_pushErr(&(*_self_), _265236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_265236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8b3c13:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad173c74_evalF32TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _267036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _267036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8b6ee1:;
			{
				jule::Ptr<_1ac49c202_Const> _267821_c = static__1ac502a82_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_267821_c), ._field_Constant=_267821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8b7057:;
			{
				jule::Ptr<_1ac49c202_Const> _268521_c = static__1ac502a82_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268521_c), ._field_Constant=_268521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1bc8b70bd:;
			{
				jule::Ptr<_1ac49c202_Const> _269221_c = static__1ac502a82_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_269221_c), ._field_Constant=_269221_c});
			}
		}
		else {
			_case_begin_1bc8b6de2:;
			{
				_1ad15b212_pushErr(&(*_self_), _267036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_267036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8b6d7b:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad174082_evalF64TypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1a959a127_Token> _270436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1bc8bbe5d:;
			{
				jule::Ptr<_1ac49c202_Const> _271221_c = static__1ac502a82_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271221_c), ._field_Constant=_271221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1bc8bbec4:;
			{
				jule::Ptr<_1ac49c202_Const> _271921_c = static__1ac502a82_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271921_c), ._field_Constant=_271921_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1bc8bc03a:;
			{
				jule::Ptr<_1ac49c202_Const> _272621_c = static__1ac502a82_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_272621_c), ._field_Constant=_272621_c});
			}
		}
		else {
			_case_begin_1bc8bbd5e:;
			{
				_1ad15b212_pushErr(&(*_self_), _270436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_270436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8bbce8:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad174439_evalPrimStatic(_1ad15ac06_Eval* _self_, jule::Str _273833_kind, jule::Ptr<_1a959a127_Token> _273844_ident) {
	{
		auto &_match_expr{ _273833_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bc8c0e84:;
			{
				return _1ad171bd9_evalIntTypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bc8c0eea:;
			{
				return _1ad171ee7_evalUintTypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bc8c188b:;
			{
				return _1ad172305_evalI8TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bc8c1902:;
			{
				return _1ad172613_evalI16TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bc8c1968:;
			{
				return _1ad172921_evalI32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bc8c19ce:;
			{
				return _1ad172c2e_evalI64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bc8c1a45:;
			{
				return _1ad17303c_evalU8TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bc8c1b00:;
			{
				return _1ad17334a_evalU16TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bc8c1b66:;
			{
				return _1ad173658_evalU32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bc8c1bcc:;
			{
				return _1ad173966_evalU64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bc8c1c43:;
			{
				return _1ad173c74_evalF32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bc8c1ca9:;
			{
				return _1ad174082_evalF64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else {
			_case_begin_1bc8c04b1:;
			{
				_1ad15b212_pushErr(&(*_self_), _273844_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_273833_kind),jule::Any(_273844_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bc8c0d1e:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad1747e1_evalTypeStatic(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _277037_d, jule::Ptr<_1ac452ce0_SubIdentExpr> _277051_si) {
	{
		
		if ((_1ad18733c_Prim(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8c6231:;
			{
				return _1ad174439_evalPrimStatic(&(*_self_), _1ad18a065_Str(_1ad18733c_Prim(_277037_d.get()._field_Kind.ptr()).ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1ad187a79_Enum(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8c6297:;
			{
				return _1ad16e753_evalEnumStatic(&(*_self_), _1ad187a79_Enum(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1ad187cdd_TypeEnum(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8c630d:;
			{
				return _1ad16eb0a_evalTypeEnumStatic(&(*_self_), _1ad187cdd_TypeEnum(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1ad18878e_Struct(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8c6374:;
			{
				return _1ad16eeb2_evalStructStatic(&(*_self_), _1ad18878e_Struct(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1bc8c61ba:;
			{
				_1ad15b212_pushErr(&(*_self_), _277051_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_277037_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bc8c6110:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad174b98_evalObjSubIdent(_1ad15ac06_Eval* _self_, jule::Ptr<_1ad159188_Data> _278638_d, jule::Ptr<_1ac452ce0_SubIdentExpr> _278652_si) {
	if (_1a959c8bb_IsIgnoreIdent(_278652_si.get()._field_Ident.get()._field_Kind)) {
		_1ad15b212_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad18522a_TypeKind> _279217_kind = _278638_d.get()._field_Kind;;
	{
		
		if ((_1ad187815_Ptr(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8cbde6:;
			{
				jule::Ptr<_1ad1919ea_Ptr> _279517_ptr = _1ad187815_Ptr(_278638_d.get()._field_Kind.ptr());;
				if (_1ad1924bd_IsUnsafe(_279517_ptr.ptr())) {
					goto _match_end_1bc8cbc92;
				};
				if (((!(_278652_si.get()._field_IsSelf)) && (!(_1ad15bb4c_isUnsafe(&(*_self_)))))) {
					_1ad15b212_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_279217_kind=_1ad187815_Ptr(_278638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1ad1875a1_Sptr(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8cbe5c:;
			{
				_279217_kind=_1ad1875a1_Sptr(_278638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1bc8cbc92:;
	};
	{
		
		if ((_1ad188a03_Trait(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8ce8cc:;
			{
				return _1ad170413_evalTraitSubIdent(&(*_self_), _278638_d,_1ad188a03_Trait(_278638_d.get()._field_Kind.ptr()),_278652_si.get()._field_Ident);
			}
		}
		else if ((_1ad18878e_Struct(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1bc8ce954:;
			{
				jule::Ptr<_1ac466a3a_StructIns> _281117_s = _1ad18878e_Struct(_279217_kind.ptr());;
				if (_1ad1810e4_isInstancedStruct(_281117_s)) {
					jule::Bool _281325_usedReferenceElem = (_1ad1875a1_Sptr(_278638_d.get()._field_Kind.ptr()) != nullptr);;
					return _1ad17090d_evalStructSubIdent(&(*_self_), _278638_d,_1ad18878e_Struct(_279217_kind.ptr()),_278652_si,_281325_usedReferenceElem);
				};
			}
		}
		else if ((_1ad1882b6_Slc(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1bc8ce9cb:;
			{
				return _1ad170cb5_evalSliceSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1ad188052_Arr(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1bc8cea53:;
			{
				return _1ad17116c_evalArraySubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1ad188c67_Map(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1bc8d00b4:;
			{
				return _1ad171524_evalMapSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1ad18733c_Prim(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1bc8d013b:;
			{
				jule::Ptr<_1ad189c02_Prim> _282317_p = _1ad18733c_Prim(_279217_kind.ptr());;
				{
					auto &_match_expr{ _282317_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1bc8d5839:;
						{
							return _1ad1718cb_evalStrSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
						}
					}
					_match_end_1bc8d5680:;
				};
			}
		}
		_match_end_1bc8ce7cd:;
	};
	_1ad15b212_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_278638_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1ad159188_Data> _1ad174ea6_evalSubIdent(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac452ce0_SubIdentExpr> _283336_si) {
	jule::Ptr<_1ad18522a_TypeKind> _283417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_283417_prefix;
	});;
	jule::Ptr<_1ad159188_Data> _283817_d = _1ad1763a3_evalExprKind(_self_, _283336_si.get()._field_Expr.get()._field_Kind);;
	if ((_283817_d == nullptr)) {
		return nullptr;
	};
	if (_283817_d.get()._field_Decl) {
		return _1ad1747e1_evalTypeStatic(_self_.ptr(), _283817_d,_283336_si);
	};
	return _1ad174b98_evalObjSubIdent(_self_.ptr(), _283817_d,_283336_si);
}



inline jule::Ptr<_1ad159188_Data> _1ad1752b4_evalTuple(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac450161_TupleExpr> _285033_tup) {
	jule::Ptr<_1ad18e971_Tuple> _285117_tupT = jule::new_ptr<_1ad18e971_Tuple>();;
	_285117_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>::alloc(0LL,_285033_tup.get()._field_Expr.len());
	jule::Ptr<_1ac50d2a7_TupleExprModel> _285417_model = jule::new_ptr<_1ac50d2a7_TupleExprModel>(_1ac50d2a7_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ad159188_Data>>::alloc(0LL,_285033_tup.get()._field_Expr.len())});;
	jule::Bool _285817_ok = true;;
	{
		auto &expr = _285033_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1bc8daab4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _285921_expr = *it;
			{
				jule::Ptr<_1ad159188_Data> _286021_d = _1ad1763a3_evalExprKind(_self_, _285921_expr.get()._field_Kind);;
				if ((_286021_d == nullptr)) {
					_285817_ok=false;
					goto _iter_next_1bc8daab4;
				};
				_285117_tupT.get()._field_Types = jule::alloc_for_append(_285117_tupT.get()._field_Types,1);_285117_tupT.get()._field_Types.__push(_286021_d.get()._field_Kind);;
				_285417_model.get()._field_Datas = jule::alloc_for_append(_285417_model.get()._field_Datas,1);_285417_model.get()._field_Datas.__push(_286021_d);;
			}
			_iter_next_1bc8daab4:;
			++it;
			goto _iter_begin_1bc8daab4;
		}
		_iter_end_1bc8daab4:;
	};
	if ((!(_285817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_285117_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_285417_model), });
}



inline jule::Ptr<_1ad159188_Data> _1ad17566b_evalMap(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ad190499_Map> _287931_m, jule::Ptr<_1ac454e02_BraceLit> _287944_lit) {
	jule::Ptr<_1ac50c020_MapExprModel> _288017_model = jule::new_ptr<_1ac50c020_MapExprModel>(_1ac50c020_MapExprModel{._field_KeyKind=_287931_m.get()._field_Key, ._field_ValKind=_287931_m.get()._field_Val, });;
	{
		auto &expr = _287944_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bc8ddd81:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44e4d4_Expr> _288521_expr = *it;
			{
				{
					auto &_match_expr{ _288521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ac455919_KeyValPair>>()) {
						_case_begin_1bc8de8ba:;
						{
							goto _match_end_1bc8de69a;
						}
					}
					else {
						_case_begin_1bc8de821:;
						{
							_1ad15b212_pushErr(_self_.ptr(), _287944_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1bc8de69a:;
				};
				jule::Ptr<_1ac455919_KeyValPair> _289521_pair = _288521_expr.get()._field_Kind.operator jule::Ptr<_1ac455919_KeyValPair>();;
				jule::Ptr<_1ad159188_Data> _289721_key = _1ad1763a3_evalExprKind(_self_, _289521_pair.get()._field_Key.get()._field_Kind);;
				if ((_289721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1ad159188_Data> _290221_val = _1ad1763a3_evalExprKind(_self_, _289521_pair.get()._field_Val.get()._field_Kind);;
				if ((_290221_val == nullptr)) {
					return nullptr;
				};
				_1ad0edddb_checkAssignType(_self_.get()._field_s, false,_287931_m.get()._field_Key,_289721_key,_289521_pair.get()._field_Colon);
				_1ad0edddb_checkAssignType(_self_.get()._field_s, false,_287931_m.get()._field_Val,_290221_val,_289521_pair.get()._field_Colon);
				_288017_model.get()._field_Entries = jule::alloc_for_append(_288017_model.get()._field_Entries,1);_288017_model.get()._field_Entries.__push(jule::new_ptr<_1ac50bd33_KeyValPairExprModel>(_1ac50bd33_KeyValPairExprModel{._field_Key=_289721_key.get()._field_Model, ._field_Val=_290221_val.get()._field_Model}));;
			}
			_iter_next_1bc8ddd81:;
			++it;
			goto _iter_begin_1bc8ddd81;
		}
		_iter_end_1bc8ddd81:;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_287931_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_288017_model), });
}



inline jule::Ptr<_1ad159188_Data> _1ad175979_evalBraceLit(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac454e02_BraceLit> _292336_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1bc8e41a5:;
			{
				_1ad15b212_pushErr(_self_.ptr(), _292336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1ad188c67_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bc8e421b:;
			{
				return _1ad17566b_evalMap(_self_, _1ad188c67_Map(_self_.get()._field_prefix.ptr()),_292336_lit);
			}
		}
		else if ((_1ad18878e_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bc8e4282:;
			{
				return _1ad16c553_evalStructLitExplicit(_self_, _1ad18878e_Struct(_self_.get()._field_prefix.ptr()),_292336_lit.get()._field_Exprs,_292336_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1bc8e40ea:;
			{
				_1ad15b212_pushErr(_self_.ptr(), _292336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bc8e401d:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad175c87_evalAnonFn(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac45bcc7_FnDecl> _293834_decl) {
	_1ad193755_typeChecker _293917_tc = _1ad193755_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1ac515831_FnIns> _294417_ins = _1ad19ee04_buildFn(&_293917_tc, _293834_decl);;
	if ((_294417_ins == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
			_case_begin_1bc8e8a6c:;
			{
				jule::Ptr<_1ad0c7799_scopeChecker> _295021_sc = _self_.get()._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>();;
				jule::Ptr<_1ad0c7799_scopeChecker> _295121_scc = _1ad0d58c8_newChildChecker(_295021_sc);;
				_295121_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad0c73c0_scopeLabel>>>(nullptr);
				_295121_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad0c75ac_scopeGoto>>>(nullptr);
				_295121_scc.get()._field_owner=nullptr;
				_295121_scc.get()._field_childIndex=0LL;
				_295121_scc.get()._field_it=0LLU;
				_295121_scc.get()._field_cse=0LLU;
				_295121_scc.get()._field_owner=_294417_ins;
				_1ad10c5e2_checkFnInsSc(_self_.get()._field_s.ptr(), _294417_ins,_295121_scc);
			}
		}
		else {
			_case_begin_1bc8e8709:;
			{
				_1ad10cb86_checkFnIns(_self_.get()._field_s, _294417_ins);
			}
		}
		_match_end_1bc8e86a4:;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_294417_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50bb46_AnonFnExprModel>(_1ac50bb46_AnonFnExprModel{._field_Func=_294417_ins, ._field_Global=_1ad15bdb1_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1ad159188_Data> _1ad176095_evalBinop(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac453263_BinopExpr> _297333_op) {
	_1ad178bd0_binaryEval _297417_bs = static__1ad179296_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1ad189c02_Prim> _297717_prim = _1ad18733c_Prim(_self_.get()._field_prefix.ptr());;
		if (((_297717_prim == nullptr) || (!(_1ad0c4554_IsNum(_1ad18a065_Str(_297717_prim.ptr())))))) {
			jule::Ptr<_1ad18522a_TypeKind> _297925_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_297925_prefix;
			});;
			return _1ad17e576_eval(&_297417_bs, _297333_op);
		};
	};
	return _1ad17e576_eval(&_297417_bs, _297333_op);
}



inline jule::Ptr<_1ad159188_Data> _1ad1763a3_evalExprKind(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Any _298836_kind) {
	{
		auto &_match_expr{ _298836_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44e7c0_RangeExpr>>()) {
			_case_begin_1bc900c61:;
			{
				jule::Ptr<_1ac44e7c0_RangeExpr> _299121_e = _298836_kind.operator jule::Ptr<_1ac44e7c0_RangeExpr>();;
				return _1ad1763a3_evalExprKind(_self_, _299121_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac450518_LitExpr>>()) {
			_case_begin_1bc900dd7:;
			{
				return _1ad15da61_evalLit(_self_.ptr(), _298836_kind.operator jule::Ptr<_1ac450518_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
			_case_begin_1bc900e4d:;
			{
				return _1ad16301b_evalIdent(_self_.ptr(), _298836_kind.operator jule::Ptr<_1ac45154c_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac451c56_UnaryExpr>>()) {
			_case_begin_1bc900eb4:;
			{
				return _1ad163329_evalUnary(_self_, _298836_kind.operator jule::Ptr<_1ac451c56_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45210d_VariadicExpr>>()) {
			_case_begin_1bc90102a:;
			{
				return _1ad163637_evalVariadic(_self_, _298836_kind.operator jule::Ptr<_1ac45210d_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac450c22_UnsafeExpr>>()) {
			_case_begin_1bc901091:;
			{
				return _1ad163945_evalUnsafe(_self_, _298836_kind.operator jule::Ptr<_1ac450c22_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac455d8c_SliceExpr>>()) {
			_case_begin_1bc901118:;
			{
				return _1ad1644b2_evalSliceExpr(_self_, _298836_kind.operator jule::Ptr<_1ac455d8c_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45672d_IndexingExpr>>()) {
			_case_begin_1bc9011c3:;
			{
				return _1ad167806_evalIndexing(_self_, _298836_kind.operator jule::Ptr<_1ac45672d_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac456d38_SlicingExpr>>()) {
			_case_begin_1bc901239:;
			{
				return _1ad1689c2_evalSlicing(_self_, _298836_kind.operator jule::Ptr<_1ac456d38_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4524b5_CastExpr>>()) {
			_case_begin_1bc9012a0:;
			{
				return _1ad16bce4_evalCast(_self_, _298836_kind.operator jule::Ptr<_1ac4524b5_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45286c_NsSelectionExpr>>()) {
			_case_begin_1bc901316:;
			{
				return _1ad16c102_evalNsSelection(_self_.ptr(), _298836_kind.operator jule::Ptr<_1ac45286c_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45497e_StructLit>>()) {
			_case_begin_1bc90138d:;
			{
				return _1ad16c861_evalStructLit(_self_, _298836_kind.operator jule::Ptr<_1ac45497e_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac449eb3_TypeDecl>>()) {
			_case_begin_1bc901415:;
			{
				return _1ad16cdd3_evalType(_self_.ptr(), _298836_kind.operator jule::Ptr<_1ac449eb3_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4537a2_FnCallExpr>>()) {
			_case_begin_1bc90148c:;
			{
				return _1ad16e39b_evalFnCall(_self_, _298836_kind.operator jule::Ptr<_1ac4537a2_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac452ce0_SubIdentExpr>>()) {
			_case_begin_1bc901514:;
			{
				return _1ad174ea6_evalSubIdent(_self_, _298836_kind.operator jule::Ptr<_1ac452ce0_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac450161_TupleExpr>>()) {
			_case_begin_1bc90158b:;
			{
				return _1ad1752b4_evalTuple(_self_, _298836_kind.operator jule::Ptr<_1ac450161_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac454e02_BraceLit>>()) {
			_case_begin_1bc901613:;
			{
				return _1ad175979_evalBraceLit(_self_, _298836_kind.operator jule::Ptr<_1ac454e02_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bc90168a:;
			{
				return _1ad175c87_evalAnonFn(_self_, _298836_kind.operator jule::Ptr<_1ac45bcc7_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac453263_BinopExpr>>()) {
			_case_begin_1bc901712:;
			{
				return _1ad176095_evalBinop(_self_, _298836_kind.operator jule::Ptr<_1ac453263_BinopExpr>());
			}
		}
		else {
			_case_begin_1bc900997:;
			{
				return nullptr;
			}
		}
		_match_end_1bc9008a9:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad1766b1_eval(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac44e4d4_Expr> _303628_expr) {
	jule::Ptr<_1ad159188_Data> _303717_d = _1ad1763a3_evalExprKind(_self_, _303628_expr.get()._field_Kind);;
	if (((_303717_d == nullptr) || (_303717_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1ad18852a_Fn(_303717_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc90b5eb:;
			{
				jule::Ptr<_1ac515831_FnIns> _304421_f = _1ad18852a_Fn(_303717_d.get()._field_Kind.ptr());;
				if (_1ac516bb7_IsBuiltin(_304421_f.ptr())) {
					goto _match_end_1bc90b497;
				};
				if ((_304421_f.get()._field_Generics.len() != _304421_f.get()._field_Decl.get()._field_Generics.len())) {
					_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _303628_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_304421_f.get()._field_Decl.get()._field_Statically)) && _1ac513356_IsMethod(_304421_f.get()._field_Decl.ptr()))) {
					_1ad0e7e29_pushErr(_self_.get()._field_s.ptr(), _303628_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1bc90b497:;
	};
	return _303717_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad1769be_evalExpr(jule::Ptr<_1ad15ac06_Eval> _self_, jule::Ptr<_1ac44e4d4_Expr> _306232_expr) {
	jule::Ptr<_1ad159188_Data> _306317_d = _1ad1766b1_eval(_self_, _306232_expr);;
	{
		
		if ((_306317_d == nullptr)) {
			_case_begin_1bc91026a:;
			{
				return nullptr;
			}
		}
		else if (_306317_d.get()._field_Decl) {
			_case_begin_1bc9102e2:;
			{
				_1ad15b212_pushErr(_self_.ptr(), _306232_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1bc9101d2:;
			{
				return _306317_d;
			}
		}
		_match_end_1bc91016b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad15ac06_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ad176e42_unaryEval static__1ad1773e8_new(jule::Ptr<_1ad15ac06_Eval> _308323_e) {
	return _1ad176e42_unaryEval{._field_e=_308323_e, };
}



inline void _1ad1775c4_minus(_1ad176e42_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc911db5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc912316:;
			{
				if ((!(_1ad0c4554_IsNum(_1ad185626_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91237c:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc911a30:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc911920:;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac5061c3_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc91554a:;
				{
					_1ac5052d2_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1ac503d2a_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ac505722_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc9155c2:;
				{
					_1ac5047dc_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ac503379_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ac505986_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc915649:;
				{
					_1ac5047dc_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ac50408e_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc915418:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1ad1777a0_plus(_1ad176e42_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc919c58:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91a198:;
			{
				if ((!(_1ad0c4554_IsNum(_1ad185626_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc91a20e:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc9198a1:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc9197c4:;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac5061c3_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc91d3cc:;
				{
					_1ac5052d2_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1ac503d2a_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ac505722_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc91d454:;
				{
					_1ac5047dc_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ac503379_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ac505986_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc91d4cb:;
				{
					_1ac5047dc_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ac50408e_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc91d29a:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1ad17797b_caret(_1ad176e42_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1bc922ada:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc92302a:;
			{
				if ((!(_1ad0c42e0_IsInt(_1ad185626_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc923091:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bc922733:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc922656:;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac505722_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc92624d:;
				{
					_1ac5047dc_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1ac503379_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ac505986_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc9262c5:;
				{
					_1ac504a62_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1ac5035dd_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1bc92612c:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1ad177b57_excl(_1ad176e42_unaryEval* _self_) {
	jule::Ptr<_1ad189c02_Prim> _320213_t = _1ad18733c_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_320213_t == nullptr) || (!(_1ad18cbc2_IsBool(_320213_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac505bea_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1bc92ad02:;
				{
					_1ac504cd7_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1ac503852_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1bc92abe2:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1ad177d33_star(_1ad176e42_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1ad187815_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc92dbe5:;
			{
				if ((!(_1ad15bb4c_isUnsafe((*_self_)._field_e.ptr())))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ad1919ea_Ptr> _323421_t = _1ad187815_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1ad1924bd_IsUnsafe(_323421_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_323421_t.get()._field_Elem;
			}
		}
		else if ((_1ad1875a1_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc92e146:;
			{
				(*_self_)._field_d.get()._field_Kind=_1ad1875a1_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1bc92d84e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bc92d7d8:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1ad17800e_amper(_1ad176e42_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50aeb9_StructLitExprModel>>()) {
			_case_begin_1bb956856:;
			{
				jule::Ptr<_1ac50aeb9_StructLitExprModel> _325421_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1ac50aeb9_StructLitExprModel>();;
				_1ad180313_makeStructLitAlloc((*_self_)._field_d,_325421_lit);
			}
		}
		else {
			_case_begin_1bb94d067:;
			{
				{
					
					if (_1ad1a207c_canGetPtr((*_self_)._field_d)) {
						_case_begin_1bb9584b2:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad1919ea_Ptr>(_1ad1919ea_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1bb957e2e:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1bb957d74:;
				};
			}
		}
		_match_end_1bb94cd14:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1ad1781da_typeDecl(_1ad176e42_unaryEval* _self_) {
	_1ad193755_typeChecker _327817_tc = _1ad193755_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bb95b66e:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad19d793_buildPtrFromType(&_327817_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bb95dd14:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad19d177_buildSptrFromType(&_327817_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1bb95c65e:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bb95c609:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1ad1783b6_evalData(_1ad176e42_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1bb95c6c5:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _330121_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1ad1763a3_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_330121_prefix;
			}
		}
		else {
			_case_begin_1bb960d05:;
			{
				(*_self_)._field_d=_1ad1763a3_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1bb960c4a:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad178691_eval(_1ad176e42_unaryEval* _self_, jule::Ptr<_1ac451c56_UnaryExpr> _331027_u) {
	(*_self_)._field_u=_331027_u;
	_1ad1783b6_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1ad1781da_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1ad18522a_TypeKind> _332113_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bb965502:;
			{
				_1ad1775c4_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bb96504b:;
			{
				_1ad1777a0_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bb9650b2:;
			{
				_1ad17797b_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1bb965128:;
			{
				_1ad177b57_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bb96518e:;
			{
				_1ad177d33_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bb9656bc:;
			{
				_1ad17800e_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1bb964ed5:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1bb964e80:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1bb967526:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1ad185626_Str(_332113_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1ad159a4b_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1bb9659db:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1bb9674b0:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad176e42_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ad178bd0_binaryEval static__1ad179296_newPlain(jule::Ptr<_1ad15ac06_Eval> _335928_e) {
	return _1ad178bd0_binaryEval{._field_e=_335928_e, };
}



inline _1ad178bd0_binaryEval static__1ad1795d7_new(jule::Ptr<_1ad15ac06_Eval> _336523_e, jule::Ptr<_1a959a127_Token> _336537_op) {
	return _1ad178bd0_binaryEval{._field_e=_336523_e, ._field_op=_336537_op};
}



inline jule::Bool _1ad17984b_checkTypeCompatibility(_1ad178bd0_binaryEval* _self_) {
	return _1ad0ee33c_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1ad179ae3_checkStructCommonOperatorCompatibility(_1ad178bd0_binaryEval* _self_) {
	jule::Ptr<_1ac515831_FnIns> _337917_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1bb96c185:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1bb96c1eb:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bb96d21e:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bb96d285:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bb96d2eb:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bb96d362:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bb96d3c8:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bb96d43e:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1bb96d4b6:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bb96d52c:;
			{
				_337917_overload=_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bb96c053:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1bb96bdcc:;
	};
	if ((_337917_overload == nullptr)) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1ac514962_ParamIns> _341117_p = _337917_overload.get()._field_Params[1LL];;
	return _1ad0edddb_checkAssignType((*_self_)._field_e.get()._field_s, _341117_p.get()._field_Decl.get()._field_Reference,_341117_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1ad159188_Data> _1ad179d8a_evalNil(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad18688b_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1ad185626_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bb9774c0:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bb977459:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1bb9773c1:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17a0ee_evalEnum(_1ad178bd0_binaryEval* _self_) {
	jule::Ptr<_1ac526b83_Enum> _343617_enm = _1ad187a79_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bb9796ae:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _344021_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1ad187a79_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_344021_rkind=_1ad187a79_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1ad0ee33c_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _343617_enm.get()._field_Kind.get()._field_Kind,_344021_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1bb979604:;
	};
	if (((_1ad187a79_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_343617_enm != _1ad187a79_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_343617_enm.get()._field_Ident),jule::Any(_1ad185626_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bb97db25:;
			{
				if ((!(_1ad0c4554_IsNum(_1ad185626_Str(_343617_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343617_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1bb97db8b:;
			{
				if (((_1ad18733c_Prim(_343617_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ad0c42e0_IsInt(_1ad18a065_Str(_1ad18733c_Prim(_343617_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343617_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1bb97daae:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343617_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1bb97d9c1:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17a363_evalTypeEnum(_1ad178bd0_binaryEval* _self_) {
	jule::Ptr<_1ac52827d_TypeEnum> _348717_enm = _1ad187cdd_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bb984ba3:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bb9843ab:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ac5285ad_Str(_348717_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bb984a2c:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17a5c7_evalSptr(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bb986c3d:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bb986bc7:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bb986a51:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17a83b_evalPtr(_1ad178bd0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1bb988b30:;
			{
				if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1bb988b96:;
			{
				if ((_1ad187815_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1ad1924bd_IsUnsafe(_1ad187815_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1ad1813ad_isPtrArithmeticCompatibleInt((*_self_)._field_r)))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1bb9883b0:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bb987e92:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17aaa0_evalArr(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bb98ecbd:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bb98ec57:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bb98a4a0:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17ad14_evalSlc(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb30259:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bb991c6a:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bb991c15:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17b078_evalFn(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb324c0:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bcb32459:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bcb322d3:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17b2dc_evalStruct(_1ad178bd0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1bcb33ba8:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1bcb33c1e:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1bcb33c85:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1bcb343b2:;
			{
				if ((_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb34439:;
			{
				if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1bcb33724:;
	};
	if ((!(_1ad179ae3_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1ad159188_Data> _1ad17b551_evalTrait(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb3d8b6:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bcb3d850:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bcb3d6b8:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17b7b5_evalAny(_1ad178bd0_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb407a8:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bcb40038:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1bcb3eb1a:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17ba29_evalBool(_1ad178bd0_binaryEval* _self_) {
	if ((!(_1ad17984b_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1bcb42623:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1bcb425ac:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1ad185626_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1bcb42436:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17bc8d_evalStr(_1ad178bd0_binaryEval* _self_) {
	jule::Str _372917_rk = _1ad185626_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_372917_rk != jule::Str("str", 3))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_372917_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bcb45813:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bcb45879:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1bcb44735:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1bcb44966:;
	};
}



inline void _1ad17be69_setTypeToGreater(_1ad178bd0_binaryEval* _self_) {
	if (_1ad159a4b_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1ad159a4b_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1ad0c3b3b_IsGreater(_1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1ad17c1ab_checkModData(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _377236_d) {
	if ((!(_1ad159a4b_IsConst(_377236_d.ptr())))) {
		if (((_1ad18733c_Prim(_377236_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ad0c42e0_IsInt(_1ad18733c_Prim(_377236_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ad12a698_sigAssignable(jule::Str("i64", 3),_377236_d)) {
			_case_begin_1bcb4c672:;
			{
				_1ac5047dc_SetI64(_377236_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_377236_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1ad141c86_unsigAssignable(jule::Str("u64", 3),_377236_d)) {
			_case_begin_1bcb4c353:;
			{
				_1ac504a62_SetU64(_377236_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_377236_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1bcb4c2dc:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bcb4ab7b:;
	};
}



inline void _1ad17c387_mod(_1ad178bd0_binaryEval* _self_) {
	_1ad17c1ab_checkModData(&(*_self_), (*_self_)._field_l);
	_1ad17c1ab_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1ad17c73e_numbersAreCompatibile(_1ad178bd0_binaryEval* _self_, jule::Str& _379437_lk, jule::Str& _379447_rk) {
	if ((!(_1ad0c4554_IsNum(_379447_rk)))) {
		return false;
	};
	if (_1ad159a4b_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_379437_lk == jule::Str("f32", 3))) {
		if (_1ad159a4b_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379447_rk == jule::Str("f32", 3));
	};
	if ((_379437_lk == jule::Str("f64", 3))) {
		if (_1ad159a4b_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379447_rk == jule::Str("f64", 3));
	};
	if (_1ad159a4b_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_379437_lk == _379447_rk);
}



inline jule::Ptr<_1ad159188_Data> _1ad17c9a3_evalFloat(_1ad178bd0_binaryEval* _self_) {
	jule::Str _382413_lk = _1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382513_rk = _1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1ad17c73e_numbersAreCompatibile(&(*_self_), _382413_lk,_382513_rk)))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382413_lk),jule::Any(_382513_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1bcb5515d:;
			{
				if (((!(_1ad159a4b_IsConst((*_self_)._field_l.ptr()))) || (!(_1ad141db8_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382413_lk),jule::Any(_382513_rk)}));
					return nullptr;
				};
				if (((!(_1ad159a4b_IsConst((*_self_)._field_r.ptr()))) || (!(_1ad141db8_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382413_lk),jule::Any(_382513_rk)}));
					return nullptr;
				};
				_1ac5047dc_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1ac504a62_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1ad180c3c_isOkForShifting((*_self_)._field_r)))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1bcb55081:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bcb59a03:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1bcb5a031:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1bcb5a6a2:;
			{
				_1ad17be69_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bcb5a718:;
			{
				if ((!(_1ad0c42e0_IsInt(_382513_rk)))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382413_lk),jule::Any(_382513_rk)}));
					return nullptr;
				};
				_1ad17c387_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1bcb5aad1:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bcb5a9e3:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17cc17_evalInt(_1ad178bd0_binaryEval* _self_) {
	jule::Str _388813_lk = _1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _388913_rk = _1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1bcb5a77e:;
			{
				if (((!(_1ad0c42e0_IsInt(_388813_lk))) || (!(_1ad0c42e0_IsInt(_388913_rk))))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388813_lk),jule::Any(_388913_rk)}));
					return nullptr;
				};
				if ((!(_1ad180c3c_isOkForShifting((*_self_)._field_r)))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1bcb5ed9e:;
	};
	if ((!(_1ad17c73e_numbersAreCompatibile(&(*_self_), _388813_lk,_388913_rk)))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388813_lk),jule::Any(_388913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1bcb63028:;
			{
				return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1bcb62ec3:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1bcb6380e:;
			{
				_1ad17be69_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bcb63875:;
			{
				_1ad17c387_mod(&(*_self_));
				_1ad17be69_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1bcb63c3d:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1bcb63b50:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17ce7b_evalPrim(_1ad178bd0_binaryEval* _self_) {
	jule::Ptr<_1ad189c02_Prim> _394713_prim = _1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1ad18cbc2_IsBool(_394713_prim.ptr())) {
			_case_begin_1bcb6704e:;
			{
				return _1ad17ba29_evalBool(&(*_self_));
			}
		}
		else if (_1ad18ce36_IsStr(_394713_prim.ptr())) {
			_case_begin_1bcb670c6:;
			{
				return _1ad17bc8d_evalStr(&(*_self_));
			}
		}
		_match_end_1bcb66e94:;
	};
	if ((_1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad18a065_Str(_394713_prim.ptr())),jule::Any(_1ad185626_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1ad0c4422_IsFloat(_394713_prim.get()._field_Kind)) {
			_case_begin_1bcb699ad:;
			{
				return _1ad17c9a3_evalFloat(&(*_self_));
			}
		}
		else if (_1ad0c42e0_IsInt(_394713_prim.get()._field_Kind)) {
			_case_begin_1bcb6932b:;
			{
				return _1ad17cc17_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1bcb692b5:;
			{
				return nullptr;
			}
		}
		_match_end_1bcb690d9:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad17d1e0_evalOp(_1ad178bd0_binaryEval* _self_) {
	{
		
		if (_1ad1863b3_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1bcb69c44:;
			{
				_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bcb6b196:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6adee;
			}
		}
		else if (((_1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bcb6adee:;
			{
				return _1ad17b7b5_evalAny(&(*_self_));
			}
		}
		else if ((_1ad187cdd_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6ae65:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6aecb;
			}
		}
		else if ((_1ad187cdd_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6aecb:;
			{
				return _1ad17a363_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1ad18614e_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1bcb6b042:;
			{
				return _1ad179d8a_evalNil(&(*_self_));
			}
		}
		else if ((_1ad187a79_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b0a8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6b262;
			}
		}
		else if ((_1ad187a79_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b262:;
			{
				return _1ad17a0ee_evalEnum(&(*_self_));
			}
		}
		else if ((_1ad1875a1_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b2c8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6b33e;
			}
		}
		else if ((_1ad1875a1_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b33e:;
			{
				return _1ad17a5c7_evalSptr(&(*_self_));
			}
		}
		else if ((_1ad187815_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b3b6:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6b43d;
			}
		}
		else if ((_1ad187815_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b43d:;
			{
				return _1ad17a83b_evalPtr(&(*_self_));
			}
		}
		else if ((_1ad188052_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b4b5:;
			{
				return _1ad17aaa0_evalArr(&(*_self_));
			}
		}
		else if ((_1ad1882b6_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b53c:;
			{
				return _1ad17ad14_evalSlc(&(*_self_));
			}
		}
		else if ((_1ad18852a_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b5b4:;
			{
				return _1ad17b078_evalFn(&(*_self_));
			}
		}
		else if ((_1ad188a03_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b63b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1bcb6b6b3;
			}
		}
		else if ((_1ad188a03_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b6b3:;
			{
				return _1ad17b551_evalTrait(&(*_self_));
			}
		}
		else if ((_1ad18878e_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b73a:;
			{
				return _1ad17b2dc_evalStruct(&(*_self_));
			}
		}
		else if ((_1ad18733c_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6b7b2:;
			{
				return _1ad17ce7b_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1bcb69a57:;
			{
				return nullptr;
			}
		}
		_match_end_1bcb6a838:;
	};
}



inline void _1ad17d465_evalConst(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _402233_d) {
	{
		
		if ((_402233_d == nullptr)) {
			_case_begin_1bcb7a55c:;
			{
				return;;
			}
		}
		else if ((!(_1ad159a4b_IsConst((*_self_)._field_l.ptr()))) || (!(_1ad159a4b_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1bcb7ac00:;
			{
				_402233_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1bcb7a43b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1bcb7c295:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac50716e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1bcb7c30b:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool((!(_1ac50716e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1bcb7c372:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac506d61_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1bcb7c3d8:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac506a53_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1bcb7c44e:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac507a98_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1bcb7c4b5:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac50747c_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1bcb7c52b:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac507da6_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1bcb7c592:;
			{
				_402233_d.get()._field_Constant=static__1ac502543_NewBool(_1ac50778a_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1bcb7c608:;
			{
				_1ac5081b4_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1bcb7c66e:;
			{
				_1ac5084c2_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bcb7c6d5:;
			{
				_1ac5087d0_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bcb7c74b:;
			{
				jule::Bool _405917_ok = _1ac508add_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_405917_ok)) && (_1ac504567_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1ad189c02_Prim> _406421_prim = _1ad18733c_Prim(_402233_d.get()._field_Kind.ptr());;
				{
					
					if (_1ad0c407b_IsSigInt(_406421_prim.get()._field_Kind)) {
						_case_begin_1bcb8935c:;
						{
							_1ac5047dc_SetI64(_402233_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_402233_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1ad0c41ad_IsUnsigInt(_406421_prim.get()._field_Kind)) {
						_case_begin_1bcb893d4:;
						{
							_1ac504a62_SetU64(_402233_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_402233_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1bcb892a2:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bcb7c7c3:;
			{
				jule::Bool _407217_ok = _1ac508deb_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_407217_ok)) && (_1ac504567_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1bcb7c84a:;
			{
				_1ac509517_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bcb7c8c2:;
			{
				_1ac509209_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bcb7c949:;
			{
				_1ac509825_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1bcb7c9c1:;
			{
				_1ac509b33_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1bcb7ca48:;
			{
				_1ac509e41_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_402233_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1bcb7ba14:;
	};
	_1ad182139_applyCastModelByEnum(_402233_d,_1ad187a79_Enum(_402233_d.get()._field_Kind.ptr()));
	jule::Ptr<_1ad189c02_Prim> _409617_prim = _1ad18733c_Prim(_402233_d.get()._field_Kind.ptr());;
	if (((_409617_prim == nullptr) || (!(_1ad0c4554_IsNum(_1ad18a065_Str(_409617_prim.ptr())))))) {
		_402233_d.get()._field_Model=static_cast<jule::Any>(_402233_d.get()._field_Constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_Kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_Kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model != (*_self_)._field_r.get()._field_Constant))) {
			_402233_d.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			_409617_prim=_1ad18733c_Prim(_402233_d.get()._field_Kind.ptr());
		};
	};
	_1ad180016_fitBitsize(_402233_d);
	_1ad1823e2_castConstByType(_409617_prim.get()._field_Kind,_402233_d);
}



inline void _1ad17d6da_checkData(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _411233_d) {
	jule::Ptr<_1ac515831_FnIns> _411313_f = _1ad18852a_Fn(_411233_d.get()._field_Kind.ptr());;
	if ((((_411313_f != nullptr) && (_411313_f.get()._field_Decl != nullptr)) && _1ac513356_IsMethod(_411313_f.get()._field_Decl.ptr()))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1ad17d8b6_checkDatas(_1ad178bd0_binaryEval* _self_) {
	_1ad17d6da_checkData(&(*_self_), (*_self_)._field_l);
	_1ad17d6da_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1ad17db3b_setModel(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _412432_d) {
	if (_1ad159a4b_IsConst(_412432_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model == (*_self_)._field_r.get()._field_Constant))) {
			return;;
		};
	};
	jule::Ptr<_1ad159188_Data> _413218_l = (*_self_)._field_l;;
	jule::Ptr<_1ad159188_Data> _413225_r = (*_self_)._field_r;;
	std::tie(_413218_l,_413225_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1ad159d59_GoodOperand(_413218_l.ptr(), _413225_r)))) {
		std::tie(_413218_l,_413225_r) = std::make_tuple(_413225_r,_413218_l);
	};
	_412432_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50a903_BinopExprModel>(_1ac50a903_BinopExprModel{._field_Left=jule::new_ptr<_1ac50a716_OperandExprModel>(_1ac50a716_OperandExprModel{._field_Kind=_413218_l.get()._field_Kind, ._field_Model=_413218_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1ac50a716_OperandExprModel>(_1ac50a716_OperandExprModel{._field_Kind=_413225_r.get()._field_Kind, ._field_Model=_413225_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1ad17ddb1_postEval(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _415032_d) {
	_415032_d.get()._field_Lvalue=false;
	_1ad17db3b_setModel(&(*_self_), _415032_d);
}



inline jule::Ptr<_1ad159188_Data> _1ad17e268_solveExplicit(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ad159188_Data>& _415537_l, jule::Ptr<_1ad159188_Data>& _415552_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415537_l,_415552_r);
	_1ad17d8b6_checkDatas(&(*_self_));
	jule::Ptr<_1ad159188_Data> _416017_d = _1ad17d1e0_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415537_l,_415552_r);
	_1ad17d465_evalConst(&(*_self_), _416017_d);
	if ((_416017_d != nullptr)) {
		_416017_d.get()._field_Mutable=true;
		_1ad17ddb1_postEval(&(*_self_), _416017_d);
	};
	return _416017_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad17e576_eval(_1ad178bd0_binaryEval* _self_, jule::Ptr<_1ac453263_BinopExpr>& _417528_op) {
	if ((_417528_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1ad15b212_pushErr((*_self_)._field_e.ptr(), _417528_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1ad15b531_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _418217_l = _1ad1763a3_evalExprKind((*_self_)._field_e, _417528_op.get()._field_Left.get()._field_Kind);;
	if (((_418217_l == nullptr) || (_418217_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1ad18522a_TypeKind> _418717_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_418217_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_418717_prefix;
	});;
	jule::Ptr<_1ad159188_Data> _419017_r = _1ad1763a3_evalExprKind((*_self_)._field_e, _417528_op.get()._field_Right.get()._field_Kind);;
	if (((_419017_r == nullptr) || (_419017_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_417528_op.get()._field_Op;
	jule::Ptr<_1ad159188_Data> _419717_d = _1ad17e268_solveExplicit(&(*_self_), _418217_l,_419017_r);;
	if ((((_419717_d != nullptr) && _418217_l.get()._field_IsRune) && _419017_r.get()._field_IsRune)) {
		_419717_d.get()._field_IsRune=true;
	};
	return _419717_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad178bd0_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad1839ed_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad184537_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad185626_Str(_1ad18522a_TypeKind* _self_) {
	if (_1ad18614e_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1ad185dda_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1ad184ceb_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1ad18489a_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1ad185934_Equals(jule::Ptr<_1ad18522a_TypeKind> _self_, jule::Ptr<_1ad18522a_TypeKind> _9022_other) {
	if (_1ad18614e_IsNil(_self_.ptr())) {
		return _1ad18614e_IsNil(_9022_other.ptr());
	};
	if (_1ad185dda_CppLinked(_self_.ptr())) {
		return (_1ad185dda_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _1ad184ceb_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1ad184ba8_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _1ad185dda_CppLinked(_1ad18522a_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1ad18614e_IsNil(_1ad18522a_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1ad1863b3_Void(_1ad18522a_TypeKind* _self_) {
	jule::Ptr<_1ad189c02_Prim> _11113_prim = _1ad18733c_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1ad186627_Mutable(_1ad18522a_TypeKind* _self_) {
	{
		_1ad18522a_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1ad18878e_Struct(_11821__self) != nullptr)) {
			return _1ad18878e_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1ad188a03_Trait(_11821__self) != nullptr)) {
			return _1ad188a03_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1ad18733c_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1ad189c02_Prim> _12721_p = _1ad18733c_Prim(_11821__self);;
			return _1ad18d19a_IsAny(_12721_p.ptr());
		};
		if ((_1ad188052_Arr(_11821__self) != nullptr)) {
			return _1ad186627_Mutable(_1ad188052_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1ad1882b6_Slc(_11821__self) != nullptr) || (_1ad187815_Ptr(_11821__self) != nullptr)) || (_1ad1875a1_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1ad18688b_NilCompatible(_1ad18522a_TypeKind* _self_) {
	{
		_1ad18522a_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1ad189c02_Prim> _14417_prim = _1ad18733c_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1ad18d19a_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1ad18614e_IsNil(_14221__self) || (_1ad18852a_Fn(_14221__self) != nullptr)) || (_1ad1875a1_Sptr(_14221__self) != nullptr)) || (_1ad187815_Ptr(_14221__self) != nullptr)) || (_1ad188a03_Trait(_14221__self) != nullptr)) || (_1ad1882b6_Slc(_14221__self) != nullptr)) || (_1ad188c67_Map(_14221__self) != nullptr)) || (_1ad187cdd_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1ad186b00_PerformsRC(_1ad18522a_TypeKind* _self_) {
	{
		_1ad18522a_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1ad1875a1_Sptr(_16321__self) != nullptr) || (_1ad1882b6_Slc(_16321__self) != nullptr)) || (_1ad188a03_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1ad186d64_SupportsCloning(_1ad18522a_TypeKind* _self_) {
	{
		_1ad18522a_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1ad18733c_Prim(_17121__self) != nullptr)) {
				_case_begin_1bc95eb7c:;
				{
					return (!(_1ad18d19a_IsAny(_1ad18733c_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1ad187a79_Enum(_17121__self) != nullptr)) {
				_case_begin_1bc95ebe3:;
				{
					return true;
				}
			}
			else if ((_1ad18852a_Fn(_17121__self) != nullptr)) {
				_case_begin_1bc95eee0:;
				{
					return true;
				}
			}
			else if ((_1ad187815_Ptr(_17121__self) != nullptr)) {
				_case_begin_1bc960056:;
				{
					return true;
				}
			}
			else if ((_1ad1882b6_Slc(_17121__self) != nullptr)) {
				_case_begin_1bc9600bc:;
				{
					return _1ad186d64_SupportsCloning(_1ad1882b6_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1ad188c67_Map(_17121__self) != nullptr)) {
				_case_begin_1bc960133:;
				{
					jule::Ptr<_1ad190499_Map> _18421_m = _1ad188c67_Map(_17121__self);;
					return (_1ad186d64_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1ad186d64_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1ad188052_Arr(_17121__self) != nullptr)) {
				_case_begin_1bc960199:;
				{
					return _1ad186d64_SupportsCloning(_1ad188052_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1ad1875a1_Sptr(_17121__self) != nullptr)) {
				_case_begin_1bc960210:;
				{
					return _1ad186d64_SupportsCloning(_1ad1875a1_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1ad18878e_Struct(_17121__self) != nullptr)) {
				_case_begin_1bc960287:;
				{
					jule::Ptr<_1ac466a3a_StructIns> _19125_s = _1ad18878e_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1ac4268da_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1bc95ea5b:;
				{
					return false;
				}
			}
			_match_end_1bc95e9e5:;
		};
	};
}



inline jule::Bool _1ad1870c8_Variadicable(_1ad18522a_TypeKind* _self_) {
	{
		_1ad18522a_TypeKind* _20421__self = (&((*_self_)));;
		return (_1ad1882b6_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1ad189c02_Prim> _1ad18733c_Prim(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad189c02_Prim>>()) {
			_case_begin_1bc9678aa:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad189c02_Prim>();
			}
		}
		else {
			_case_begin_1bc96726c:;
			{
				return nullptr;
			}
		}
		_match_end_1bc967217:;
	};
}



inline jule::Ptr<_1ad18d486_Sptr> _1ad1875a1_Sptr(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad18d486_Sptr>>()) {
			_case_begin_1bc96859d:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad18d486_Sptr>();
			}
		}
		else {
			_case_begin_1bc9680a3:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96804d:;
	};
}



inline jule::Ptr<_1ad1919ea_Ptr> _1ad187815_Ptr(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad1919ea_Ptr>>()) {
			_case_begin_1bc9692e6:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad1919ea_Ptr>();
			}
		}
		else {
			_case_begin_1bc968ceb:;
			{
				return nullptr;
			}
		}
		_match_end_1bc968c96:;
	};
}



inline jule::Ptr<_1ac526b83_Enum> _1ad187a79_Enum(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac526b83_Enum>>()) {
			_case_begin_1bc96a061:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ac526b83_Enum>();
			}
		}
		else {
			_case_begin_1bc969a66:;
			{
				return nullptr;
			}
		}
		_match_end_1bc969a11:;
	};
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad187cdd_TypeEnum(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac52827d_TypeEnum>>()) {
			_case_begin_1bc96accb:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ac52827d_TypeEnum>();
			}
		}
		else {
			_case_begin_1bc96a7d1:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96a77b:;
	};
}



inline jule::Ptr<_1ad19108d_Arr> _1ad188052_Arr(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad19108d_Arr>>()) {
			_case_begin_1bc96ba46:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad19108d_Arr>();
			}
		}
		else {
			_case_begin_1bc96b54b:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96b4e6:;
	};
}



inline jule::Ptr<_1ad18dde3_Slc> _1ad1882b6_Slc(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad18dde3_Slc>>()) {
			_case_begin_1bc96c7b1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad18dde3_Slc>();
			}
		}
		else {
			_case_begin_1bc96c2b6:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96c261:;
	};
}



inline jule::Ptr<_1ac515831_FnIns> _1ad18852a_Fn(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
			_case_begin_1bc96d509:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ac515831_FnIns>();
			}
		}
		else {
			_case_begin_1bc96d00e:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96cea9:;
	};
}



inline jule::Ptr<_1ac466a3a_StructIns> _1ad18878e_Struct(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac466a3a_StructIns>>()) {
			_case_begin_1bc96e274:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ac466a3a_StructIns>();
			}
		}
		else {
			_case_begin_1bc96dc79:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96dc24:;
	};
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad188a03_Trait(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac524a3d_Trait>>()) {
			_case_begin_1bc96eede:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ac524a3d_Trait>();
			}
		}
		else {
			_case_begin_1bc96e9e4:;
			{
				return nullptr;
			}
		}
		_match_end_1bc96e98e:;
	};
}



inline jule::Ptr<_1ad190499_Map> _1ad188c67_Map(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad190499_Map>>()) {
			_case_begin_1bc970c37:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad190499_Map>();
			}
		}
		else {
			_case_begin_1bc97073c:;
			{
				return nullptr;
			}
		}
		_match_end_1bc9706d7:;
	};
}



inline jule::Ptr<_1ad18e971_Tuple> _1ad188ecb_Tup(_1ad18522a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad18e971_Tuple>>()) {
			_case_begin_1bc971980:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ad18e971_Tuple>();
			}
		}
		else {
			_case_begin_1bc971485:;
			{
				return nullptr;
			}
		}
		_match_end_1bc971430:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad18522a_TypeKind _Src) {
	_Stream << "TypeKind{";
	_Stream << "CppIdent:" << _Src._field_CppIdent << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad18973a_checked(_1ad189383_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1ad189916_removeKind(_1ad189383_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad189383_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad18a065_Str(_1ad189c02_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1ad18a373_Equals(jule::Ptr<_1ad189c02_Prim> _self_, jule::Ptr<_1ad18522a_TypeKind> _35722_other) {
	jule::Ptr<_1ad189c02_Prim> _35813_prim = _1ad18733c_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1ad18a7e6_IsConstraint(_1ad189c02_Prim* _self_) {
	return ((((!(_1ad18ce36_IsStr(&(*_self_)))) && (!(_1ad18d19a_IsAny(&(*_self_))))) && (!(_1ad18cbc2_IsBool(&(*_self_))))) && (!(_1ad0c4554_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1ad18aa5a_IsI8(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1ad18acbe_IsI16(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1ad18b033_IsI32(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1ad18b297_IsI64(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1ad18b50b_IsU8(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1ad18b770_IsU16(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1ad18b9d4_IsU32(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1ad18bc48_IsU64(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1ad18beac_IsF32(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1ad18c221_IsF64(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1ad18c485_IsInt(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1ad18c6e9_IsUint(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1ad18c95d_IsUintptr(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1ad18cbc2_IsBool(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1ad18ce36_IsStr(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1ad18d19a_IsAny(_1ad189c02_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad189c02_Prim _Src) {
	_Stream << "Prim{";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad18d7e9_Str(_1ad18d486_Sptr* _self_) {
	return (jule::Str("&", 1) + _1ad185626_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1ad18db07_Equals(jule::Ptr<_1ad18d486_Sptr> _self_, jule::Ptr<_1ad18522a_TypeKind> _43422_other) {
	jule::Ptr<_1ad18d486_Sptr> _43513_sptr = _1ad1875a1_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1ad185934_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad18d486_Sptr _Src) {
	_Stream << "Sptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad18e3ee_Str(_1ad18dde3_Slc* _self_) {
	return (jule::Str("[]", 2) + _1ad185626_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1ad18e70c_Equals(jule::Ptr<_1ad18dde3_Slc> _self_, jule::Ptr<_1ad18522a_TypeKind> _45322_other) {
	jule::Ptr<_1ad18dde3_Slc> _45413_slc = _1ad1882b6_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1ad185934_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad18dde3_Slc _Src) {
	_Stream << "Slc{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad18ecd4_Str(_1ad18e971_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1ad185626_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1bc28a387:;
		if (it != expr.end()) {
			jule::Ptr<_1ad18522a_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1ad185626_Str(_47216_t.ptr());
			}
			_iter_next_1bc28a387:;
			++it;
			goto _iter_begin_1bc28a387;
		}
		_iter_end_1bc28a387:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1ad1900e2_Equals(jule::Ptr<_1ad18e971_Tuple> _self_, jule::Ptr<_1ad18522a_TypeKind> _48122_other) {
	jule::Ptr<_1ad18e971_Tuple> _48213_tup = _1ad188ecb_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1ad185934_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1bc28d973:;
	}
	_iter_end_1bc28d973:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad18e971_Tuple _Src) {
	_Stream << "Tuple{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad19080c_Str(_1ad190499_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1ad185626_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1ad185626_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1ad190b1a_Equals(jule::Ptr<_1ad190499_Map> _self_, jule::Ptr<_1ad18522a_TypeKind> _51822_other) {
	jule::Ptr<_1ad190499_Map> _51913_map = _1ad188c67_Map(_51822_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_1ad185934_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _1ad185934_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad190499_Map _Src) {
	_Stream << "Map{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad191401_Str(_1ad19108d_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1ad0c280a_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1ad185626_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1ad19170e_Equals(jule::Ptr<_1ad19108d_Arr> _self_, jule::Ptr<_1ad18522a_TypeKind> _54522_other) {
	jule::Ptr<_1ad19108d_Arr> _54613_arr = _1ad188052_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1ad185934_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad19108d_Arr _Src) {
	_Stream << "Arr{";
	_Stream << "Auto:" << _Src._field_Auto << ", ";
	_Stream << "N:" << _Src._field_N << ", ";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad191d5d_Str(_1ad1919ea_Ptr* _self_) {
	if (_1ad1924bd_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1ad185626_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1ad19216b_Equals(jule::Ptr<_1ad1919ea_Ptr> _self_, jule::Ptr<_1ad18522a_TypeKind> _56922_other) {
	jule::Ptr<_1ad1919ea_Ptr> _57013_ptr = _1ad187815_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1ad185934_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1ad1924bd_IsUnsafe(_1ad1919ea_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad1919ea_Ptr _Src) {
	_Stream << "Ptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad192941_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ad193e5e_pushErr(_1ad193755_typeChecker* _self_, jule::Ptr<_1a959a127_Token> _65226_token, jule::Str _65241_fmt, jule::Slice<jule::Any> _65254_args) {
	_1ad0e7e29_pushErr((*_self_)._field_s.ptr(), _65226_token,_65241_fmt,jule::Any(_65254_args));
}



inline void _1ad19413a_allowBuiltin(_1ad193755_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1ad194316_disallowBuiltin(_1ad193755_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1ad189c02_Prim> _1ad194624_buildPrim(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _66429_decl) {
	if ((!(_1ad1a3578_isPrim(_66429_decl.get()._field_Ident)))) {
		_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66429_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _66429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66429_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1ad1a3039_buildPrimType(_66429_decl.get()._field_Ident);
}



inline void _1bc29d345_pushReference(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac466a3a_StructIns>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1bb8d3e32_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1ac519406_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}

inline void _1bc2a13d1_pushReference(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac524a3d_Trait>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1bc2a3009_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1ac519406_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}



inline void _1ad194b1e_pushReferenceByKind(_1ad193755_typeChecker* _self_, jule::Ptr<_1ad18522a_TypeKind>& _68843_k) {
	{
		
		if ((_1ad18878e_Struct(_68843_k.ptr()) != nullptr)) {
			_case_begin_1bc29be9d:;
			{
				jule::Ptr<_1ac466a3a_StructIns> _69121_t = _1ad18878e_Struct(_68843_k.ptr());;
				_1bc29d345_pushReference(&(*_self_), _69121_t);
			}
		}
		else if ((_1ad188a03_Trait(_68843_k.ptr()) != nullptr)) {
			_case_begin_1bc29c025:;
			{
				jule::Ptr<_1ac524a3d_Trait> _69421_t = _1ad188a03_Trait(_68843_k.ptr());;
				_1bc2a13d1_pushReference(&(*_self_), _69421_t);
			}
		}
		_match_end_1bc29bd7c:;
	};
}



inline void _1ad194ed7_pushCycleError(_1ad193755_typeChecker* _self_, jule::Any _69929_def1, jule::Any _69940_def2, jule::Str& _69956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70128_def };
			
			if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
				_case_begin_1bc2a63b4:;
				{
					return _70128_def.operator jule::Ptr<_1ad184537_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
				_case_begin_1bc2a642a:;
				{
					return _70128_def.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1bc2a622c:;
				{
					return jule::Str();
				}
			}
			_match_end_1bc2a6150:;
		};
	});;
	jule::Str _71113_def1Ident = _70113_getIdent(_69929_def1);;
	jule::Str _71213_def2Ident = _70113_getIdent(_69940_def2);;
	jule::Str _71313_refersTo = _1a9272706_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71113_def1Ident),jule::Any(_71213_def2Ident)}));;
	(_69956_message).buffer.insert(0, (((_1a9138028_Repeat(jule::Str(" ", 1),4LL) + _71313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ad19538e_checkCrossCycle(_1ad193755_typeChecker* _self_, jule::Any _71730_decl, jule::Str& _71746_message) {
	{
		auto &_match_expr{ _71730_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
			_case_begin_1bc2a8c68:;
			{
				jule::Ptr<_1ad184537_TypeAlias> _72017_ta = _71730_decl.operator jule::Ptr<_1ad184537_TypeAlias>();;
				{
					auto &expr = _72017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1bc2a9a05:;
					if (it != expr.end()) {
						jule::Any &_72120_d = *it;
						{
							{
								
								if ((_72120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1bc2aa484:;
									{
										_1ad194ed7_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1ad19538e_checkCrossCycle(&(*_self_), jule::Any(_72120_d),_71746_message)))) {
									_case_begin_1bc2aa50b:;
									{
										_1ad194ed7_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								_match_end_1bc2aa363:;
							};
						}
						_iter_next_1bc2a9a05:;
						++it;
						goto _iter_begin_1bc2a9a05;
					}
					_iter_end_1bc2a9a05:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc2a8cce:;
			{
				jule::Ptr<_1ac43a6e0_Struct> _73217_s = _71730_decl.operator jule::Ptr<_1ac43a6e0_Struct>();;
				{
					auto &expr = _73217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1bc2ab6e9:;
					if (it != expr.end()) {
						jule::Ptr<_1ac43a6e0_Struct> &_73320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73320_d)) {
									_case_begin_1bc2aca6e:;
									{
										_1ad194ed7_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1ad19538e_checkCrossCycle(&(*_self_), jule::Any(_73320_d),_71746_message)))) {
									_case_begin_1bc2acae6:;
									{
										_1ad194ed7_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								_match_end_1bc2ac94d:;
							};
						}
						_iter_next_1bc2ab6e9:;
						++it;
						goto _iter_begin_1bc2ab6e9;
					}
					_iter_end_1bc2ab6e9:;
				};
			}
		}
		_match_end_1bc2a8c13:;
	};
	return true;
}



inline jule::Bool _1ad195746_checkIllegalCycles(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _75138_ident, jule::Any _75165_decl) {
	jule::Bool _75178_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75178_ok = true;
		return _75178_ok;
	};
	{
		auto &_match_expr{ _75165_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc2adba2:;
			{
				if (((*_self_)._field_notPlain || _75165_decl.operator jule::Ptr<_1ac43a6e0_Struct>().get()._field_CppLinked)) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
			_case_begin_1bc2adce5:;
			{
				if (_75165_decl.operator jule::Ptr<_1ad184537_TypeAlias>().get()._field_CppLinked) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		_match_end_1bc2adb4c:;
	};
	if ((_75165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1ad193e5e_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75178_ok = false;
		return _75178_ok;
	};
	jule::Str _77417_message = jule::Str();;
	if ((!(_1ad19538e_checkCrossCycle(&(*_self_), jule::Any(_75165_decl),_77417_message)))) {
		jule::Str _77721_errMsg = _77417_message;;
		_77417_message=jule::Str();
		_1ad194ed7_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75165_decl),_77417_message);
		_77721_errMsg=(_77721_errMsg + _77417_message);
		_1ad193e5e_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77721_errMsg)}));
		_75178_ok = false;
		return _75178_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ad184537_TypeAlias>>()) {
			_case_begin_1bc2b3ee8:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75165_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc2b40b4:;
			{
				{
					auto &_match_expr{ _75165_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
						_case_begin_1bc2b4812:;
						{
							jule::Ptr<_1ac43a6e0_Struct> _79325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ac43a6e0_Struct>();;
							_79325_s.get()._field_Depends = jule::alloc_for_append(_79325_s.get()._field_Depends,1);_79325_s.get()._field_Depends.__push(_75165_decl.operator jule::Ptr<_1ac43a6e0_Struct>());;
						}
					}
					_match_end_1bc2b4724:;
				};
			}
		}
		_match_end_1bc2b3e93:;
	};
	_75178_ok = true;
	return _75178_ok;
}



inline jule::Trait<_1ad184ceb_Kind> _1ad19a95a_fromTypeAlias(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _80133_decl, jule::Ptr<_1ad184537_TypeAlias>& _80160_ta) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _80160_ta.get()._field_Public,_80160_ta.get()._field_Token)))) {
		_1ad193e5e_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80160_ta.get()._field_Used=true;
	if ((_80133_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1bc2b9185:;
			if (it != expr.end()) {
				jule::Ptr<_1ad184537_TypeAlias> _81820_bg = *it;
				{
					if (((_81820_bg == _80160_ta) || ((_80160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1ad185934_Equals(_80160_ta.get()._field_Kind.get()._field_Kind, _81820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1bc2b9185;
					};
				}
				_iter_next_1bc2b9185:;
				++it;
				goto _iter_begin_1bc2b9185;
			}
			_iter_end_1bc2b9185:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1bc2baeab:;
			if (it != expr.end()) {
				jule::Ptr<_1ad184537_TypeAlias> _82920_bg = *it;
				{
					if ((_82920_bg == _80160_ta)) {
						_1ad193e5e_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1bc2bb94b:;
						if (it != expr.end()) {
							jule::Ptr<_1ad184537_TypeAlias> _83424_dg = *it;
							{
								if ((_82920_bg == _83424_dg)) {
									_1ad193e5e_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1bc2bb94b:;
							++it;
							goto _iter_begin_1bc2bb94b;
						}
						_iter_end_1bc2bb94b:;
					};
				}
				_iter_next_1bc2baeab:;
				++it;
				goto _iter_begin_1bc2baeab;
			}
			_iter_end_1bc2baeab:;
		};
	};
	jule::Bool _84317_ok = _1ad195746_checkIllegalCycles(&(*_self_), _80133_decl,jule::Any(_80160_ta));;
	if ((!(_84317_ok))) {
		return nullptr;
	};
	_84317_ok=_1ad101edd_checkTypeAliasDeclKind((*_self_)._field_s, _80160_ta,(*_self_)._field_lookup);
	if ((!(_84317_ok))) {
		return nullptr;
	};
	if ((_80160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80160_ta);;
	};
	jule::Ptr<_1ad18522a_TypeKind> _86017_tk = jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Generic=_80160_ta.get()._field_Generic, ._field_Kind=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1ad194b1e_pushReferenceByKind(&(*_self_), _86017_tk);
	if (_80160_ta.get()._field_CppLinked) {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Ident;
	} else {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1ad184ceb_Kind>(_86017_tk, 5);
}



inline jule::Ptr<_1ac526b83_Enum> _1ad19ad12_fromEnum(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _87328_decl, jule::Ptr<_1ac526b83_Enum>& _87355_e) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _87355_e.get()._field_Public,_87355_e.get()._field_Token)))) {
		_1ad193e5e_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87328_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87355_e;
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad19b1b9_fromTypeEnum(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _88532_decl, jule::Ptr<_1ac52827d_TypeEnum>& _88559_e) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _88559_e.get()._field_Public,_88559_e.get()._field_Token)))) {
		_1ad193e5e_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88532_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88559_e;
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad19b571_fromTrait(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _89729_decl, jule::Ptr<_1ac524a3d_Trait>& _89756_t) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _89756_t.get()._field_Public,_89756_t.get()._field_Token)))) {
		_1ad193e5e_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89729_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1bc2a13d1_pushReference(&(*_self_), _89756_t);
	return _89756_t;
}



inline jule::Bool _1ad19b928_checkStructIns(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac466a3a_StructIns>& _91038_ins, jule::Ptr<_1a959a127_Token>& _91060_errorToken) {
	jule::Bool _91082_ok = jule::Bool();
	if (_91038_ins.get()._field_Checked) {
		_91082_ok = true;
		return _91082_ok;
	};
	_91038_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91038_ins.get()._field_Decl))) {
		_91082_ok = true;
		return _91082_ok;
	};
	if ((!(_1ad10b16d_precheckStructIns((*_self_)._field_s, _91038_ins,_91060_errorToken)))) {
		_91082_ok = false;
		return _91082_ok;
	};
	if ((_91038_ins.get()._field_Generics.len() > 0LL)) {
		_1ad10badb_checkStructInsOperators((*_self_)._field_s, _91038_ins);
		_1ad10b3e3_checkStructIns((*_self_)._field_s, _91038_ins);
	};
	_91082_ok = true;
	return _91082_ok;
}



inline void _1ad19bbc0_appendUsedStructReference(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac43a6e0_Struct>& _93149_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ac43a6e0_Struct>>()) {
			_case_begin_1bc2cccd1:;
			{
				jule::Ptr<_1ac43a6e0_Struct> _93721_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ac43a6e0_Struct>();;
				if ((!(_1ac42a68b_IsUses(_93721_refS.ptr(), _93149_s)))) {
					_93721_refS.get()._field_Uses = jule::alloc_for_append(_93721_refS.get()._field_Uses,1);_93721_refS.get()._field_Uses.__push(_93149_s);;
				};
			}
		}
		_match_end_1bc2cc9e5:;
	};
}



inline jule::Ptr<_1ac466a3a_StructIns> _1ad19c088_buildStructInstance(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _94443_decl, jule::Ptr<_1ac43a6e0_Struct>& _94470_s) {
	jule::Ptr<_1ad192941_referencer> _94617_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ad184537_TypeAlias>> _94817_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1ad0c7799_scopeChecker>>()) {
				_case_begin_1bc2d09b5:;
				{
					jule::Ptr<_1ad0c7799_scopeChecker> _95525_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ad0c7799_scopeChecker>();;
					jule::Ptr<_1ad0c7799_scopeChecker> _95625_hard = _1ad0c8ca6_getHardRoot(_95525_sc);;
					if (((_95625_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95625_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94470_s))) {
						goto _match_end_1bc2d0960;
					};
					jule::I64 _96021_n = (_95625_hard.get()._field_owner.get()._field_Generics.len() + _95625_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95625_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96021_n);
				}
			}
			_match_end_1bc2d0960:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1ad1a5bb8_Lookup> _97017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_1ac466a3a_StructIns> _97417_ins = _1ac41cc88_instance(_94470_s);;
	_97417_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1ad1839ed_InsGeneric>>::alloc(0LL,_94443_decl.get()._field_Generics.len());
	{
		auto &expr = _94443_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc2d51d4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac449eb3_TypeDecl> _97621_g = *it;
			{
				jule::Ptr<_1ad18522a_TypeKind> _97721_kind = _1ad1a0520_build(&(*_self_), _97621_g.get()._field_Kind);;
				if ((_97721_kind == nullptr)) {
					return nullptr;
				};
				_97417_ins.get()._field_Generics = jule::alloc_for_append(_97417_ins.get()._field_Generics,1);_97417_ins.get()._field_Generics.__push(jule::new_ptr<_1ad1839ed_InsGeneric>(_1ad1839ed_InsGeneric{._field_Kind=_97721_kind, }));;
			}
			_iter_next_1bc2d51d4:;
			++it;
			goto _iter_begin_1bc2d51d4;
		}
		_iter_end_1bc2d51d4:;
	};
	(*_self_)._field_lookup=_97017_lookup;
	(*_self_)._field_bannedGenerics=_94817_bannedGenerics;
	(*_self_)._field_referencer=_94617_referencer;
	return _97417_ins;
}



inline jule::Ptr<_1ac466a3a_StructIns> _1ad19c440_fromStruct(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _99234_decl, jule::Ptr<_1ac43a6e0_Struct>& _99261_s) {
	if ((!(_1ad0e8600_isAccessibleDefine((*_self_)._field_s.ptr(), _99261_s.get()._field_Public,_99261_s.get()._field_Token)))) {
		_1ad193e5e_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99234_decl.get()._field_Generics.len() > 0LL)) {
			_1ad193e5e_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1ac466a3a_StructIns>(_1ac466a3a_StructIns{._field_Decl=_99261_s, });
	};
	jule::Bool _101017_ok = ((*_self_)._field_notPlain || _1ad195746_checkIllegalCycles(&(*_self_), _99234_decl,jule::Any(_99261_s)));;
	if ((!(_101017_ok))) {
		return nullptr;
	};
	_1ad19bbc0_appendUsedStructReference(&(*_self_), _99261_s);
	jule::Ptr<_1ac466a3a_StructIns> _101617_ins = _1ad19c088_buildStructInstance(&(*_self_), _99234_decl,_99261_s);;
	if ((_101617_ins == nullptr)) {
		return nullptr;
	};
	_101017_ok=_1ad0e92c1_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_101617_ins.get()._field_Generics.len()),_99234_decl.get()._field_Token);
	if ((!(_101017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1ac466a3a_StructIns> _102617_existInstance = _1ac422001_appendInstance(_99261_s.ptr(), _101617_ins);;
	if ((_102617_existInstance != nullptr)) {
		if ((!(_1ad100690_checkConstraintsStruct((*_self_)._field_s, _101617_ins,_99234_decl.get()._field_Token,_102617_existInstance)))) {
			return nullptr;
		};
		_1bc29d345_pushReference(&(*_self_), _102617_existInstance);
		return _102617_existInstance;
	};
	if ((!(_1ad19b928_checkStructIns(&(*_self_), _101617_ins,_99234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1bc29d345_pushReference(&(*_self_), _101617_ins);
	return _101617_ins;
}



inline jule::Trait<_1ad184ceb_Kind> _1ad19c74d_getDef(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl>& _105030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1bcc94a0b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac457597_GenericDecl> _105116_g = *it;
			{
				if ((_105116_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					return jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(_105116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1bcc94a0b:;
			++it;
			goto _iter_begin_1bcc94a0b;
		}
		_iter_end_1bcc94a0b:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1bcc94951:;
		if (it != expr.end()) {
			jule::Ptr<_1ad184537_TypeAlias> _105721_g = *it;
			{
				if ((_105721_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					if ((_105030_decl.get()._field_Generics.len() > 0LL)) {
						_1ad193e5e_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1ac466a3a_StructIns> _106325_st = _1ad18878e_Struct(_105721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106325_st != nullptr)) {
						jule::Bool _106525_ok = _1ad195746_checkIllegalCycles(&(*_self_), _105030_decl,jule::Any(_106325_st.get()._field_Decl));;
						if ((!(_106525_ok))) {
							return nullptr;
						};
					};
					return _105721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1bcc94951:;
			++it;
			goto _iter_begin_1bcc94951;
		}
		_iter_end_1bcc94951:;
	};
	if ((!(_105030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1ac526b83_Enum> _107521_e = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a5767_FindEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_107521_e != nullptr)) {
			return jule::Trait<_1ad184ceb_Kind>(_1ad19ad12_fromEnum(&(*_self_), _105030_decl,_107521_e), 3);
		};
		jule::Ptr<_1ac52827d_TypeEnum> _108021_te = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a5a75_FindTypeEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108021_te != nullptr)) {
			return jule::Trait<_1ad184ceb_Kind>(_1ad19b1b9_fromTypeEnum(&(*_self_), _105030_decl,_108021_te), 4);
		};
		jule::Ptr<_1ac524a3d_Trait> _108521_t = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a5459_FindTrait((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108521_t != nullptr)) {
			return jule::Trait<_1ad184ceb_Kind>(_1ad19b571_fromTrait(&(*_self_), _105030_decl,_108521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1ad193e5e_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac43a6e0_Struct> _109417_s = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a4c94_FindStruct((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_1ad184ceb_Kind>(_1ad19c440_fromStruct(&(*_self_), _105030_decl,_109417_s), 0);
	};
	jule::Ptr<_1ad184537_TypeAlias> _109917_ta = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a48dc_FindTypeAlias((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_109917_ta=_1ad1b2c5d_findBuiltinTypeAlias(_105030_decl.get()._field_Ident);
	};
	if ((_109917_ta != nullptr)) {
		return _1ad19a95a_fromTypeAlias(&(*_self_), _105030_decl,_109917_ta);
	};
	_1ad193e5e_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1ad184ceb_Kind> _1ad19ca5b_buildIdent(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44a579_IdentTypeDecl> _111133_decl) {
	{
		
		if (_1ad1a3578_isPrim(_111133_decl.get()._field_Ident)) {
			_case_begin_1bcca1144:;
			{
				return jule::Trait<_1ad184ceb_Kind>(_1ad194624_buildPrim(&(*_self_), _111133_decl), 6);
			}
		}
		else {
			_case_begin_1bcca08c4:;
			{
				return _1ad19c74d_getDef(&(*_self_), _111133_decl);
			}
		}
		_match_end_1bcca07e7:;
	};
}



inline jule::Trait<_1ad184ceb_Kind> _1ad19cd69_buildSubIdent(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44abc8_SubIdentTypeDecl> _112036_decl) {
	jule::Trait<_1ad184ceb_Kind> _112117_ident = _1ad19ca5b_buildIdent(&(*_self_), _112036_decl.get()._field_Idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1ac52827d_TypeEnum>>()) {
			_case_begin_1bcca2b29:;
			{
				goto _match_end_1bcca2a4c;
			}
		}
		else {
			_case_begin_1bcca281b:;
			{
				_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bcca2a4c:;
	};
	jule::Ptr<_1ac52827d_TypeEnum> _113317_t = _112117_ident.operator jule::Ptr<_1ac52827d_TypeEnum>();;
	jule::Slice<jule::Ptr<_1ac44a579_IdentTypeDecl>> _113417_idents = _112036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113417_idents;
		auto it = expr.begin();
		_iter_begin_1bcca3e7c:;
		if (it != expr.end()) {
			jule::I64 _113513_i = it - expr.begin();
			jule::Ptr<_1ac44a579_IdentTypeDecl> _113516_id = *it;
			{
				jule::Ptr<_1ac527bb7_TypeEnumItem> _113621_item = _1ac528cb7_FindItem(_113317_t.ptr(), _113516_id.get()._field_Ident);;
				if ((_113621_item == nullptr)) {
					_1ad193e5e_pushErr(&(*_self_), _113516_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113317_t.get()._field_Ident),jule::Any(_113516_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113417_idents.len() - _113513_i) == 1LL)) {
					_1ad194b1e_pushReferenceByKind(&(*_self_), _113621_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1ad184ceb_Kind>(_113621_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113317_t=_1ad187cdd_TypeEnum(_113621_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113317_t == nullptr)) {
					_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1bcca3e7c:;
			++it;
			_113513_i++;
			goto _iter_begin_1bcca3e7c;
		}
		_iter_end_1bcca3e7c:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad18d486_Sptr> _1ad19d177_buildSptrFromType(_1ad193755_typeChecker* _self_, jule::Ptr<_1ad18522a_TypeKind>& _115541_elem) {
	{
		
		if ((_115541_elem == nullptr)) {
			_case_begin_1bcca493e:;
			{
				return nullptr;
			}
		}
		else if ((_1ad18878e_Struct(_115541_elem.ptr()) != nullptr)) {
			_case_begin_1bcca49b6:;
			{
				jule::Ptr<_1ac466a3a_StructIns> _116117_s = _1ad18878e_Struct(_115541_elem.ptr());;
				if (((_116117_s.get()._field_Decl != nullptr) && _116117_s.get()._field_Decl.get()._field_CppLinked)) {
					_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1ad188052_Arr(_115541_elem.ptr()) != nullptr) && _1ad188052_Arr(_115541_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bcca4a3d:;
			{
				_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bcca480c:;
	};
	return jule::new_ptr<_1ad18d486_Sptr>(_1ad18d486_Sptr{._field_Elem=_115541_elem});
}



inline jule::Ptr<_1ad18d486_Sptr> _1ad19d485_buildSptr(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44b36b_SptrTypeDecl> _117532_decl) {
	jule::Bool _117613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117613_notPlain;
	});;
	jule::Ptr<_1ad18522a_TypeKind> _118017_elem = _1ad1a082d_checkDecl(&(*_self_), _117532_decl.get()._field_Elem);;
	return _1ad19d177_buildSptrFromType(&(*_self_), _118017_elem);
}



inline jule::Ptr<_1ad1919ea_Ptr> _1ad19d793_buildPtrFromType(_1ad193755_typeChecker* _self_, jule::Ptr<_1ad18522a_TypeKind>& _118440_elem) {
	{
		
		if ((_118440_elem == nullptr)) {
			_case_begin_1bccad0b8:;
			{
				return nullptr;
			}
		}
		else if (((_1ad188052_Arr(_118440_elem.ptr()) != nullptr) && _1ad188052_Arr(_118440_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bccad140:;
			{
				_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1ad1919ea_Ptr>();
			}
		}
		_match_end_1bccace97:;
	};
	return jule::new_ptr<_1ad1919ea_Ptr>(_1ad1919ea_Ptr{._field_Elem=_118440_elem});
}



inline jule::Ptr<_1ad1919ea_Ptr> _1ad19daa1_buildPtr(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44bd3e_PtrTypeDecl> _119931_decl) {
	jule::Bool _120013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120013_notPlain;
	});;
	jule::Ptr<_1ad18522a_TypeKind> _120417_elem = nullptr;;
	if ((!(_1ac44c191_IsUnsafe(_119931_decl.ptr())))) {
		_120417_elem=_1ad1a082d_checkDecl(&(*_self_), _119931_decl.get()._field_Elem);
		return _1ad19d793_buildPtrFromType(&(*_self_), _120417_elem);
	};
	return jule::new_ptr<_1ad1919ea_Ptr>(_1ad1919ea_Ptr{._field_Elem=_120417_elem});
}



inline jule::Ptr<_1ad18dde3_Slc> _1ad19ddae_buildSlc(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44b767_SlcTypeDecl> _121631_decl) {
	jule::Bool _121713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121713_notPlain;
	});;
	jule::Ptr<_1ad18522a_TypeKind> _122117_elem = _1ad1a082d_checkDecl(&(*_self_), _121631_decl.get()._field_Elem);;
	{
		
		if ((_122117_elem == nullptr)) {
			_case_begin_1bccb3387:;
			{
				return nullptr;
			}
		}
		else if (((_1ad188052_Arr(_122117_elem.ptr()) != nullptr) && _1ad188052_Arr(_122117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bccb340e:;
			{
				_1ad193e5e_pushErr(&(*_self_), _121631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bccb32cc:;
	};
	return jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=_122117_elem});
}



inline jule::Ptr<_1ad19108d_Arr> _1ad19e1bc_buildArr(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44c4c1_ArrTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123813_notPlain;
	});;
	jule::I64 _124217_n = 0LL;;
	if ((!(_1ac44c89a_AutoSized(_123731_decl.ptr())))) {
		jule::Ptr<_1ad159188_Data> _124521_size = _1ad1769be_evalExpr(_1ad0ed8e1_eval((*_self_)._field_s, (*_self_)._field_lookup), _123731_decl.get()._field_Size);;
		if ((_124521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1ad159a4b_IsConst(_124521_size.ptr())))) {
			_1ad193e5e_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1ad18733c_Prim(_124521_size.get()._field_Kind.ptr()) == nullptr) || (!(_1ad0c42e0_IsInt(_1ad18733c_Prim(_124521_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ad193e5e_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1ac50408e_AsI64(_124521_size.get()._field_Constant.ptr())));
		if ((_124217_n < 0LL)) {
			_1ad193e5e_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1ac60b570_BitSize != 64LL) && (static_cast<jule::F64>(_124217_n) > _1ac9b3295_Max(jule::Str("int", 3))))) {
			_1ad193e5e_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1ad18522a_TypeKind> _126817_elem = _1ad1a082d_checkDecl(&(*_self_), _123731_decl.get()._field_Elem);;
	{
		
		if ((_126817_elem == nullptr)) {
			_case_begin_1bccbc061:;
			{
				return nullptr;
			}
		}
		else if (((_1ad188052_Arr(_126817_elem.ptr()) != nullptr) && _1ad188052_Arr(_126817_elem.ptr()).get()._field_Auto)) {
			_case_begin_1bccbc0c7:;
			{
				_1ad193e5e_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bccbbcdb:;
	};
	return jule::new_ptr<_1ad19108d_Arr>(_1ad19108d_Arr{._field_Auto=_1ac44c89a_AutoSized(_123731_decl.ptr()), ._field_N=_124217_n, ._field_Elem=_126817_elem});
}



inline jule::Ptr<_1ad190499_Map> _1ad19e4ca_buildMap(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44cc1e_MapTypeDecl> _128631_decl) {
	jule::Bool _128713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_128713_notPlain;
	});;
	jule::Ptr<_1ad18522a_TypeKind> _129117_key = _1ad1a082d_checkDecl(&(*_self_), _128631_decl.get()._field_Key);;
	if ((_129117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ad18522a_TypeKind> _129617_val = _1ad1a082d_checkDecl(&(*_self_), _128631_decl.get()._field_Val);;
	if ((_129617_val == nullptr)) {
		return nullptr;
	};
	if ((_1ad187a79_Enum(_129617_val.ptr()) != nullptr)) {
		_1ad193e5e_pushErr(&(*_self_), _128631_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ad190499_Map>(_1ad190499_Map{._field_Key=_129117_key, ._field_Val=_129617_val});
}



inline jule::Ptr<_1ad18e971_Tuple> _1ad19e7d8_buildTuple(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44ba53_TupleTypeDecl> _131033_decl) {
	jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _131117_types = jule::Slice<jule::Ptr<_1ad18522a_TypeKind>>::alloc(0LL,_131033_decl.get()._field_Types.len());;
	{
		auto &expr = _131033_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bccc27a3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac449eb3_TypeDecl> _131221_t = *it;
			{
				jule::Ptr<_1ad18522a_TypeKind> _131321_kind = _1ad1a082d_checkDecl(&(*_self_), _131221_t);;
				if ((_131321_kind == nullptr)) {
					return nullptr;
				};
				_131117_types = jule::alloc_for_append(_131117_types,1);_131117_types.__push(_131321_kind);;
			}
			_iter_next_1bccc27a3:;
			++it;
			goto _iter_begin_1bccc27a3;
		}
		_iter_end_1bccc27a3:;
	};
	return jule::new_ptr<_1ad18e971_Tuple>(_1ad18e971_Tuple{._field_Types=_131117_types});
}



inline jule::Bool _1ad19eae6_checkFnTypes(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac515831_FnIns>& _132336_f) {
	jule::Bool _132349_ok = jule::Bool();
	{
		auto &expr = _132336_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bccc46ea:;
		if (it != expr.end()) {
			jule::Ptr<_1ac514962_ParamIns> _132421_p = *it;
			{
				_132421_p.get()._field_Kind=_1ad1a0520_build(&(*_self_), _132421_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132349_ok=(_132421_p.get()._field_Kind != nullptr);
				if ((!(_132349_ok))) {
					_132349_ok = false;
					return _132349_ok;
				};
				_1ad100cbc_checkFnParamKind((*_self_)._field_s, _132421_p);
			}
			_iter_next_1bccc46ea:;
			++it;
			goto _iter_begin_1bccc46ea;
		}
		_iter_end_1bccc46ea:;
	};
	if ((!(_1ac5130e2_IsVoid(_132336_f.get()._field_Decl.ptr())))) {
		_132336_f.get()._field_Result=_1ad1a0520_build(&(*_self_), _132336_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132349_ok = (_132336_f.get()._field_Result != nullptr);
		return _132349_ok;
	};
	_132349_ok = true;
	return _132349_ok;
}



inline jule::Ptr<_1ac515831_FnIns> _1ad19ee04_buildFn(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac45bcc7_FnDecl> _134130_decl) {
	if ((_134130_decl.get()._field_Generics.len() > 0LL)) {
		_1ad193e5e_pushErr(&(*_self_), _134130_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac512b80_Fn> _134717_f = _1ac51b969_buildFn(_134130_decl);;
	jule::I64 _134913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1ad107bd6_checkFnDecl((*_self_)._field_s, _134717_f);
	if ((_134913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1ac515831_FnIns> _135517_ins = _1ac51406b_instanceForce(_134717_f);;
	_135517_ins.get()._field_Anon=true;
	jule::Bool _135813_ok = _1ad19eae6_checkFnTypes(&(*_self_), _135517_ins);;
	if ((!(_135813_ok))) {
		return nullptr;
	};
	return _135517_ins;
}



inline jule::Trait<_1ad184ceb_Kind> _1ad1a0212_buildByNamespace(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac44b080_NamespaceTypeDecl> _136639_decl) {
	jule::Str _136713_path = _1ad1a2b82_buildLinkPathByTokens(_136639_decl.get()._field_Idents);;
	jule::Ptr<_1ad0dc11b_ImportInfo> _136817_imp = _1ad1a5bb8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad1a417d_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ad0dc11b_ImportInfo>)>([=](jule::Ptr<_1ad0dc11b_ImportInfo> _136852_imp) mutable -> jule::Bool {
		if (((_136639_decl.get()._field_Idents.len() == 1LL) && (_136852_imp.get()._field_Alias == _136713_path))) {
			return true;
		};
		return ((_136852_imp.get()._field_LinkPath == _136713_path) && _1ad0dec78_isAccessibleViaSelection(_136852_imp.ptr()));
	}));;
	if (((_136817_imp == nullptr) || (!(_1ad0de6d4_isLookupable(_136817_imp.ptr(), jule::Str("self", 4)))))) {
		_1ad193e5e_pushErr(&(*_self_), _136639_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136713_path)}));
		return nullptr;
	};
	_1ad194316_disallowBuiltin(&(*_self_));
	jule::Trait<_1ad1a5bb8_Lookup> _138117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ad1a5bb8_Lookup>(_136817_imp, 1);
	jule::Ptr<_1ad18522a_TypeKind> _138317_kind = _1ad1a082d_checkDecl(&(*_self_), _136639_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138117_lookup;
	_1ad19413a_allowBuiltin(&(*_self_));
	return jule::Trait<_1ad184ceb_Kind>(_138317_kind, 5);
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad1a0520_build(_1ad193755_typeChecker* _self_, jule::Any& _138929_declKind) {
	jule::Trait<_1ad184ceb_Kind> _139017_kind = nullptr;;
	{
		auto &_match_expr{ _138929_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44a579_IdentTypeDecl>>()) {
			_case_begin_1bccd3055:;
			{
				jule::Trait<_1ad184ceb_Kind> _139321_t = _1ad19ca5b_buildIdent(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44a579_IdentTypeDecl>());;
				if ((_139321_t != nullptr)) {
					_139017_kind=_139321_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44abc8_SubIdentTypeDecl>>()) {
			_case_begin_1bccd38d5:;
			{
				jule::Trait<_1ad184ceb_Kind> _139821_t = _1ad19cd69_buildSubIdent(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44abc8_SubIdentTypeDecl>());;
				if ((_139821_t != nullptr)) {
					_139017_kind=_139821_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b36b_SptrTypeDecl>>()) {
			_case_begin_1bccd394b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad18d486_Sptr> _140421_t = _1ad19d485_buildSptr(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44b36b_SptrTypeDecl>());;
				if ((_140421_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_140421_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44bd3e_PtrTypeDecl>>()) {
			_case_begin_1bccd2241:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad1919ea_Ptr> _141021_t = _1ad19daa1_buildPtr(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44bd3e_PtrTypeDecl>());;
				if ((_141021_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_141021_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b767_SlcTypeDecl>>()) {
			_case_begin_1bccd22a7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad18dde3_Slc> _141621_t = _1ad19ddae_buildSlc(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44b767_SlcTypeDecl>());;
				if ((_141621_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_141621_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44c4c1_ArrTypeDecl>>()) {
			_case_begin_1bccd231d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad19108d_Arr> _142221_t = _1ad19e1bc_buildArr(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44c4c1_ArrTypeDecl>());;
				if ((_142221_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_142221_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44cc1e_MapTypeDecl>>()) {
			_case_begin_1bccd2384:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad190499_Map> _142821_t = _1ad19e4ca_buildMap(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44cc1e_MapTypeDecl>());;
				if ((_142821_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_142821_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44ba53_TupleTypeDecl>>()) {
			_case_begin_1bccd40de:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad18e971_Tuple> _143421_t = _1ad19e7d8_buildTuple(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44ba53_TupleTypeDecl>());;
				if ((_143421_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_143421_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bccd4155:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ac515831_FnIns> _144021_t = _1ad19ee04_buildFn(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac45bcc7_FnDecl>());;
				if ((_144021_t != nullptr)) {
					_139017_kind=jule::Trait<_1ad184ceb_Kind>(_144021_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b080_NamespaceTypeDecl>>()) {
			_case_begin_1bccd41bb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1ad184ceb_Kind> _144621_t = _1ad1a0212_buildByNamespace(&(*_self_), _138929_declKind.operator jule::Ptr<_1ac44b080_NamespaceTypeDecl>());;
				if ((_144621_t != nullptr)) {
					_139017_kind=_144621_t;
				};
			}
		}
		else {
			_case_begin_1bccd2098:;
			{
				jule::Any _145121_udeclKind = (*(((jule::Any*)((&(_138929_declKind))))));;
				{
					auto &_match_expr{ _145121_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1ad18d486_Sptr>>()) {
						_case_begin_1bccd2e78:;
						{
							_139017_kind=jule::Trait<_1ad184ceb_Kind>(_145121_udeclKind.operator jule::Ptr<_1ad18d486_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad1919ea_Ptr>>()) {
						_case_begin_1bccd2ede:;
						{
							_139017_kind=jule::Trait<_1ad184ceb_Kind>(_145121_udeclKind.operator jule::Ptr<_1ad1919ea_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1bccd2d24:;
						{
							_1ad193e5e_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1bccd2c36:;
				};
			}
		}
		_match_end_1bccd2043:;
	};
	if ((_139017_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139017_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad18522a_TypeKind>>()) {
			_case_begin_1bcce134e:;
			{
				return _139017_kind.operator jule::Ptr<_1ad18522a_TypeKind>();
			}
		}
		else {
			_case_begin_1bcce0b89:;
			{
				return jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=_139017_kind});
			}
		}
		_match_end_1bccd46e9:;
	};
}



inline jule::Ptr<_1ad18522a_TypeKind> _1ad1a082d_checkDecl(_1ad193755_typeChecker* _self_, jule::Ptr<_1ac449eb3_TypeDecl>& _147533_decl) {
	jule::Ptr<_1a959a127_Token> _147717_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147533_decl.get()._field_Token;
	jule::Ptr<_1ad18522a_TypeKind> _148017_kind = _1ad1a0520_build(&(*_self_), _147533_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_147717_errorToken;
	return _148017_kind;
}



inline void _1ad1a0aa3_check(_1ad193755_typeChecker* _self_, jule::Ptr<_1ad189383_TypeSymbol>& _148629_t) {
	if ((_148629_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad18522a_TypeKind> _149017_kind = _1ad1a082d_checkDecl(&(*_self_), _148629_t.get()._field_Decl);;
	if ((_149017_kind == nullptr)) {
		_1ad189916_removeKind(_148629_t.ptr());
		return;;
	};
	_148629_t.get()._field_Kind=_149017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad193755_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ad1a1213_identTypeDecl(jule::Str& _150230_ident, jule::Ptr<_1ac44a579_IdentTypeDecl> _150242_t) {
	if ((_150242_t.get()._field_Ident == _150230_ident)) {
		return true;
	};
	{
		auto &expr = _150242_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bcce4d8b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac449eb3_TypeDecl> &_150616_g = *it;
			{
				if (static__1ad1a1554_exist(_150230_ident,_150616_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1bcce4d8b:;
			++it;
			goto _iter_begin_1bcce4d8b;
		}
		_iter_end_1bcce4d8b:;
	};
	return false;
}



inline jule::Bool static__1ad1a1554_exist(jule::Str& _151422_ident, jule::Any& _151435_k) {
	{
		auto &_match_expr{ _151435_k };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44a579_IdentTypeDecl>>()) {
			_case_begin_1bcce5e8b:;
			{
				return static__1ad1a1213_identTypeDecl(_151422_ident,_151435_k.operator jule::Ptr<_1ac44a579_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44abc8_SubIdentTypeDecl>>()) {
			_case_begin_1bcce6002:;
			{
				jule::Ptr<_1ac44abc8_SubIdentTypeDecl> _151917_sit = _151435_k.operator jule::Ptr<_1ac44abc8_SubIdentTypeDecl>();;
				{
					auto &expr = _151917_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1bcce780b:;
					if (it != expr.end()) {
						jule::Ptr<_1ac44a579_IdentTypeDecl> &_152020_id = *it;
						{
							if (static__1ad1a1213_identTypeDecl(_151422_ident,_152020_id)) {
								return true;
							};
						}
						_iter_next_1bcce780b:;
						++it;
						goto _iter_begin_1bcce780b;
					}
					_iter_end_1bcce780b:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b36b_SptrTypeDecl>>()) {
			_case_begin_1bcce61de:;
			{
				jule::Ptr<_1ac44b36b_SptrTypeDecl> _152717_sptr = _151435_k.operator jule::Ptr<_1ac44b36b_SptrTypeDecl>();;
				return static__1ad1a1554_exist(_151422_ident,_152717_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44bd3e_PtrTypeDecl>>()) {
			_case_begin_1bcce6255:;
			{
				jule::Ptr<_1ac44bd3e_PtrTypeDecl> _153017_ptr = _151435_k.operator jule::Ptr<_1ac44bd3e_PtrTypeDecl>();;
				return static__1ad1a1554_exist(_151422_ident,_153017_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b767_SlcTypeDecl>>()) {
			_case_begin_1bcce62bb:;
			{
				jule::Ptr<_1ac44b767_SlcTypeDecl> _153317_slc = _151435_k.operator jule::Ptr<_1ac44b767_SlcTypeDecl>();;
				return static__1ad1a1554_exist(_151422_ident,_153317_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44c4c1_ArrTypeDecl>>()) {
			_case_begin_1bcce6332:;
			{
				jule::Ptr<_1ac44c4c1_ArrTypeDecl> _153617_arr = _151435_k.operator jule::Ptr<_1ac44c4c1_ArrTypeDecl>();;
				return static__1ad1a1554_exist(_151422_ident,_153617_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44cc1e_MapTypeDecl>>()) {
			_case_begin_1bcce6398:;
			{
				jule::Ptr<_1ac44cc1e_MapTypeDecl> _153917_map = _151435_k.operator jule::Ptr<_1ac44cc1e_MapTypeDecl>();;
				return (static__1ad1a1554_exist(_151422_ident,_153917_map.get()._field_Key.get()._field_Kind) || static__1ad1a1554_exist(_151422_ident,_153917_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bcce640e:;
			{
				jule::Ptr<_1ac45bcc7_FnDecl> _154317_f = _151435_k.operator jule::Ptr<_1ac45bcc7_FnDecl>();;
				{
					auto &expr = _154317_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1bccecba7:;
					if (it != expr.end()) {
						jule::Ptr<_1ac45a9a7_ParamDecl> &_154420_p = *it;
						{
							if (_1ac45ad1a_IsSelf(_154420_p.ptr())) {
								goto _iter_next_1bccecba7;
							};
							if (static__1ad1a1554_exist(_151422_ident,_154420_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1bccecba7:;
						++it;
						goto _iter_begin_1bccecba7;
					}
					_iter_end_1bccecba7:;
				};
				if ((_154317_f.get()._field_Result != nullptr)) {
					return static__1ad1a1554_exist(_151422_ident,_154317_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44ba53_TupleTypeDecl>>()) {
			_case_begin_1bcce6486:;
			{
				jule::Ptr<_1ac44ba53_TupleTypeDecl> _155717_tup = _151435_k.operator jule::Ptr<_1ac44ba53_TupleTypeDecl>();;
				{
					auto &expr = _155717_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1bcd00061:;
					if (it != expr.end()) {
						jule::Ptr<_1ac449eb3_TypeDecl> &_155820_t = *it;
						{
							if (static__1ad1a1554_exist(_151422_ident,_155820_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1bcd00061:;
						++it;
						goto _iter_begin_1bcd00061;
					}
					_iter_end_1bcd00061:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44b080_NamespaceTypeDecl>>()) {
			_case_begin_1bcce650d:;
			{
				jule::Ptr<_1ac44b080_NamespaceTypeDecl> _156517_ns = _151435_k.operator jule::Ptr<_1ac44b080_NamespaceTypeDecl>();;
				return static__1ad1a1554_exist(_151422_ident,_156517_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1bcce5cc1:;
			{
				return false;
			}
		}
		_match_end_1bcce5c6b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad1a0cc3_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9652036_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8c1625_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ad8c25d2_stop(_1ad8c1e50_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1ad8c2846_stopped(_1ad8c1e50_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1ad8c2aaa_finished(_1ad8c1e50_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1ad8c2d1e_isLastSt(_1ad8c1e50_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1ad8c313d_pushErr(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1a959a127_Token> _19226_token, jule::Str _19241_fmt) {
	_1ad8dde5b_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1ad8c345c_pushSuggestion(_1ad8c1e50_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1ad8de27a_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1ad8c36d2_insertAsNext(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1ad8c1625_stmt>(_1ad8c1625_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1ad8c1625_stmt> _1ad8c3946_next(_1ad8c1e50_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c3ced_buildScope(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _21134_tokens, jule::Ptr<_1a959a127_Token> _21156_end) {
	jule::Ptr<_1ac45a2d1_ScopeTree> _21217_s = _1ad8c0503_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1ad8c1e50_scopeParser _21517_ssp = _1ad8c1e50_scopeParser{._field_p=(*_self_)._field_p, };;
	_1ad8cc93e_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8c410b_buildVarSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _22234_tokens) {
	jule::Ptr<_1ac45cca6_VarDecl> _22317_v = _1ad8e1997_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1ac45d15d_RetSt> _1ad8c4419_buildRetSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _22833_tokens) {
	jule::Ptr<_1ac45d15d_RetSt> _22917_st = jule::new_ptr<_1ac45d15d_RetSt>(_1ac45d15d_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c4727_buildWhileNextIter(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ad8c1625_stmt>& _23942_s) {
	jule::Ptr<_1ac45d7bd_Iter> _24017_it = jule::new_ptr<_1ac45d7bd_Iter>(_1ac45d7bd_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1ac45e093_WhileKind> _24417_kind = jule::new_ptr<_1ac45e093_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1ad8c2d1e_isLastSt(&(*_self_))) {
		_1ad8c313d_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1ad8c3946_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _25617_stTokens = _1ad8d8692_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1ad8c1625_stmt> _25821_stmt = jule::new_ptr<_1ad8c1625_stmt>(_1ad8c1625_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1ad8cc620_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _26717_blockTokens = _1ad8db761_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1ad8c25d2_stop(&(*_self_));
		_1ad8c313d_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1ad8c3ced_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1ac45e093_WhileKind> _1ad8c4a35_buildWhileIterKind(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _28442_tokens) {
	return jule::new_ptr<_1ac45e093_WhileKind>(_1ac45e093_WhileKind{._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8c4d43_getRangeKindKeysTokens(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _29118_vars;;
	jule::Slice<_1a92722b6_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1ad8dc2cd_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8c5151_buildRangeKindKey(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1ac45cca6_VarDecl> _30017_key = jule::new_ptr<_1ac45cca6_VarDecl>(_1ac45cca6_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1ad8c313d_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1ad8c313d_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8c313d_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _1ad8c545e_buildRangeKindKeys(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1bbd04e79:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1ad8c5151_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1bbd04e79:;
			++it;
			goto _iter_begin_1bbd04e79;
		}
		_iter_end_1bbd04e79:;
	};
	return _32217_keys;
}



inline void _1ad8c57a0_setupRangeKindKeysPlain(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ac45e934_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1a959a127_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _33017_keyTokens = _1ad8c4d43_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1ad8c313d_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _33717_keys = _1ad8c545e_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1ad8c5b02_setupRangeKindKeysExplicit(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ac45e934_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1a959a127_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _34617_rang = _1ad8db761_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1ad8c57a0_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1ad8c5e32_setupRangeKindKeys(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ac45e934_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1a959a127_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1ad8c313d_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1ad8c5b02_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1ad8c57a0_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1ac45e934_RangeKind> _1ad8c6383_buildRangeIterKind(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1a959a127_Token>>& _36614_exprTokens, jule::Ptr<_1a959a127_Token>& _36641_inToken) {
	jule::Ptr<_1ac45e934_RangeKind> _36717_rng = jule::new_ptr<_1ac45e934_RangeKind>(_1ac45e934_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1ad8c313d_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1ad8c5e32_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1ad8c673a_buildCommonIterKind(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _38143_tokens, jule::Ptr<_1a959a127_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1bbd10abc:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bbd11a79:;
							{
								(_38217_braceN)++;
								goto _iter_next_1bbd10abc;
							}
						}
						else {
							_case_begin_1bbd11d54:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1bbd11b45:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1bbd10abc;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1bbd1176b:;
						{
							jule::Slice<jule::Ptr<_1a959a127_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1a959a127_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1ad8c6383_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1bbd1231b:;
				};
			}
			_iter_next_1bbd10abc:;
			++it;
			_38314_i++;
			goto _iter_begin_1bbd10abc;
		}
		_iter_end_1bbd10abc:;
	};
	return static_cast<jule::Any>(_1ad8c4a35_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c6a48_buildCommonIter(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _40838_tokens) {
	jule::Ptr<_1ac45d7bd_Iter> _40917_it = jule::new_ptr<_1ac45d7bd_Iter>(_1ac45d7bd_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1ad8c25d2_stop(&(*_self_));
		_1ad8c313d_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _41917_exprTokens = _1ad8d8692_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1ad8c673a_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _42417_scopeTokens = _1ad8db761_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1ad8c25d2_stop(&(*_self_));
		_1ad8c313d_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1ad8c3ced_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1ac45d7bd_Iter> _1ad8c6d56_buildIterSt(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ad8c1625_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1ad8c4727_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1ad8c6a48_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1ac45ecdb_BreakSt> _1ad8c7164_buildBreakSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _44536_tokens) {
	jule::Ptr<_1ac45ecdb_BreakSt> _44617_brk = jule::new_ptr<_1ac45ecdb_BreakSt>(_1ac45ecdb_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ad8c313d_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1ad8c313d_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1ac460193_ContSt> _1ad8c7472_buildContSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _46335_tokens) {
	jule::Ptr<_1ac460193_ContSt> _46417_cont = jule::new_ptr<_1ac460193_ContSt>(_1ac460193_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ad8c313d_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1ad8c313d_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1ac460616_If> _1ad8c7780_buildIf(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _48131_tokens) {
	jule::Ptr<_1ac460616_If> _48217_model = jule::new_ptr<_1ac460616_If>(_1ac460616_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1a959a127_Token>> _48617_exprTokens = _1ad8d8692_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1ad8c313d_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _49317_scopeTokens = _1ad8db761_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1ad8c25d2_stop(&(*_self_));
		_1ad8c313d_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a959a127_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1ad8c313d_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1ad8c3ced_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1ac4609bd_Else> _1ad8c7a8d_buildElse(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _51433_tokens) {
	jule::Ptr<_1ac4609bd_Else> _51517_els = jule::new_ptr<_1ac4609bd_Else>(_1ac4609bd_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _52017_scopeTokens = _1ad8db761_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1ad8c313d_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1ad8c25d2_stop(&(*_self_));
			_1ad8c313d_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1ad8c3ced_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1ac460e41_Conditional> _1ad8c7d9b_buildIfElseChain(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _53839_tokens) {
	jule::Ptr<_1ac460e41_Conditional> _53917_chain = jule::new_ptr<_1ac460e41_Conditional>(_1ac460e41_Conditional{._field_Head=_1ad8c7780_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1bbd2d2b0;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1ac460616_If> _55125_elif = _1ad8c7780_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1bbd2d2b0;
			};
			_53917_chain.get()._field_Default=_1ad8c7a8d_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1bbd2d2b0;
		}
	_iter_next_1bbd2d2b0:;
	}
	_iter_end_1bbd2d2b0:;;
	return _53917_chain;
}



inline jule::Ptr<_1ac4510c9_CoExpr> _1ad8c81a9_buildCoCallSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _56136_tokens) {
	jule::Ptr<_1ac4510c9_CoExpr> _56217_c = jule::new_ptr<_1ac4510c9_CoExpr>(_1ac4510c9_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1ac457d06_GotoSt> _1ad8c84b7_buildGotoSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _57035_tokens) {
	jule::Ptr<_1ac457d06_GotoSt> _57117_gt = jule::new_ptr<_1ac457d06_GotoSt>(_1ac457d06_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1ad8c313d_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1ad8c313d_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a959a127_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8c313d_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1ac4580e2_FallSt> _1ad8c87c5_buildFallSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _59035_tokens) {
	jule::Ptr<_1ac4580e2_FallSt> _59117_fll = jule::new_ptr<_1ac4580e2_FallSt>(_1ac4580e2_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1ad8c313d_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8c8ad3_buildTypeAliasSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _60040_tokens) {
	jule::Ptr<_1ac461617_TypeAliasDecl> _60117_tad = _1ad8e0b83_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1ad8c9045_pushCaseExpr(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _60635_tokens, jule::Ptr<_1a959a127_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1ac449eb3_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1ad8e0875_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1ac44e4d4_Expr>(_1ac44e4d4_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1ad8c313d_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1ad8de588_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8c93ec_buildCaseExprs(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _63038_tokens, jule::Bool _63056_type_match) {
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1bbd3d8db:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1bbd3e942:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1bbd3ec1c:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1bbd3ea0d:;
					};
					goto _iter_next_1bbd3d8db;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1bbd3d8db;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1bbd40910:;
						{
							jule::Slice<jule::Ptr<_1a959a127_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1ad8c313d_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1ad8c9045_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1bbd40976:;
						{
							_1ad8c9045_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1bbd4049d:;
				};
			}
			_iter_next_1bbd3d8db:;
			++it;
			_63514_i++;
			goto _iter_begin_1bbd3d8db;
		}
		_iter_end_1bbd3d8db:;
	};
	_1ad8c313d_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c970a_buildCaseScope(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _66938_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1a959a127_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1ad8c1328_skipSt(_67221_i,_66938_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1bbd444b3;
			};
			jule::Ptr<_1a959a127_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1bbd444b3;
			};
			jule::Slice<jule::Ptr<_1a959a127_Token>> _68221_scopeTokens = _66938_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1ac45a2d1_ScopeTree> _68321_scope = _1ad8c3ced_buildScope(&(*_self_), _68221_scopeTokens,_66938_tokens[_67017_n]);;
			_66938_tokens=_66938_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1bbd444b3:;
	}
	_iter_end_1bbd444b3:;;
	jule::Ptr<_1a959a127_Token> _68717_end = jule::Ptr<_1a959a127_Token>();;
	if ((_66938_tokens.len() > 0LL)) {
		_68717_end=_66938_tokens[(_66938_tokens.len() - 1LL)];
	};
	jule::Ptr<_1ac45a2d1_ScopeTree> _69117_scope = _1ad8c3ced_buildScope(&(*_self_), _66938_tokens,_68717_end);;
	_66938_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1ac461a8a_Case>,jule::Bool> _1ad8c9ab2_buildCase(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _69633_tokens, jule::Bool _69651_typeMatch) {
	jule::Ptr<_1ac461a8a_Case> _69717_c = jule::new_ptr<_1ac461a8a_Case>(_1ac461a8a_Case{._field_Token=_69633_tokens[0LL], });;
	_69633_tokens=_69633_tokens.slice(1LL);
	_69717_c.get()._field_Exprs=_1ad8c93ec_buildCaseExprs(&(*_self_), _69633_tokens,_69651_typeMatch);
	_69717_c.get()._field_Scope=_1ad8c970a_buildCaseScope(&(*_self_), _69633_tokens);
	jule::Bool _70313_isDefault = (_69717_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1ac461a8a_Case>>,jule::Ptr<_1ac4609bd_Else>> _1ad8c9e69_buildCases(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _70733_tokens, jule::Bool _70751_type_match) {
	jule::Slice<jule::Ptr<_1ac461a8a_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1ac4609bd_Else> _70917_def = nullptr;;
	jule::Bool _71017_defNotLast = false;;
	while ((_70733_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a959a127_Token> _71221_tok = _70733_tokens[0LL];;
			if (((_71221_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1ad8c313d_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1bbd4c279;
			};
			jule::Ptr<_1ac461a8a_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1ad8c9ab2_buildCase(&(*_self_), _70733_tokens,_70751_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_Token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1ac4609bd_Else>(_1ac4609bd_Else{._field_Token=_71722_c.get()._field_Token, ._field_Scope=_71722_c.get()._field_Scope});
				} else {
					_1ad8c313d_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_defNotLast=(_71017_defNotLast || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1bbd4c279:;
	}
	_iter_end_1bbd4c279:;;
	if (_71017_defNotLast) {
		_1ad8c313d_pushErr(&(*_self_), _70917_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1ac462261_MatchCase> _1ad8ca277_buildMatchCase(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _74137_tokens) {
	jule::Ptr<_1ac462261_MatchCase> _74217_m = jule::new_ptr<_1ac462261_MatchCase>(_1ac462261_MatchCase{._field_Token=_74137_tokens[0LL], });;
	_74137_tokens=_74137_tokens.slice(1LL);
	if (((_74137_tokens.len() > 0LL) && (_74137_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_TypeMatch=true;
		_74137_tokens=_74137_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _75217_exprTokens = _1ad8d8692_getBlockExpr(_74137_tokens);;
	if ((_75217_exprTokens.len() > 0LL)) {
		_74217_m.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _75217_exprTokens);
	} else if (_74217_m.get()._field_TypeMatch) {
		_1ad8c313d_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _76017_blockToks = _1ad8db761_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74137_tokens);;
	if ((_76017_blockToks == nullptr)) {
		_1ad8c25d2_stop(&(*_self_));
		_1ad8c313d_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1ad8c345c_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74137_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _74137_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_End=_74137_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_Cases,_74217_m.get()._field_Default) = _1ad8c9e69_buildCases(&(*_self_), _76017_blockToks,_74217_m.get()._field_TypeMatch);
	return _74217_m;
}



inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8ca585_buildScopeSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _77435_tokens) {
	jule::Bool _77517_isUnsafe = false;;
	jule::Bool _77617_isDeferred = false;;
	jule::Ptr<_1a959a127_Token> _77717_token = _77435_tokens[0LL];;
	if ((_77717_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_77517_isUnsafe=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1ad8c313d_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77435_tokens[0LL];
		if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_77617_isDeferred=true;
			_77435_tokens=_77435_tokens.slice(1LL);
			if ((_77435_tokens.len() == 0LL)) {
				_1ad8c313d_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_77617_isDeferred=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1ad8c313d_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _80417_scopeTokens = _1ad8db761_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77435_tokens);;
	if ((_80417_scopeTokens == nullptr)) {
		_1ad8c313d_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77435_tokens.len())) {
		_1ad8c313d_pushErr(&(*_self_), _77435_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ac45a2d1_ScopeTree> _81117_scope = _1ad8c3ced_buildScope(&(*_self_), _80417_scopeTokens,_77435_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_Unsafety=_77517_isUnsafe;
	_81117_scope.get()._field_Deferred=_77617_isDeferred;
	return _81117_scope;
}



inline jule::Ptr<_1ac45794e_LabelSt> _1ad8ca893_buildLabelSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _81736_tokens) {
	jule::Ptr<_1ac45794e_LabelSt> _81817_lbl = jule::new_ptr<_1ac45794e_LabelSt>(_1ac45794e_LabelSt{._field_Token=_81736_tokens[0LL], ._field_Ident=_81736_tokens[0LL].get()._field_Kind});;
	if ((_81736_tokens.len() > 2LL)) {
		_81736_tokens=_81736_tokens.slice(2LL);
		_1ad8c36d2_insertAsNext(&(*_self_), _81736_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1ad8caba1_buildIdSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _83233_tokens) {
	jule::Bool _83263_ok = jule::Bool();
	if ((_83233_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83263_ok);
	};
	jule::Ptr<_1a959a127_Token> _83717_token = _83233_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bbd62e71:;
			{
				_83263_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1ad8ca893_buildLabelSt(&(*_self_), _83233_tokens)),_83263_ok);
			}
		}
		_match_end_1bbd63b31:;
	};
	return std::make_tuple(jule::Any(),_83263_ok);
}



inline jule::Ptr<_1ad8d9bc1_assignInfo> _1ad8caeae_buildAssignInfo(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _84639_tokens) {
	jule::Ptr<_1ad8d9bc1_assignInfo> _84717_info = jule::new_ptr<_1ad8d9bc1_assignInfo>(_1ad8d9bc1_assignInfo{._field_ok=true});;
	jule::I64 _85017_braceN = 0LL;;
	{
		auto &expr = _84639_tokens;
		auto it = expr.begin();
		_iter_begin_1bbd6599b:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bbd6699c:;
							{
								(_85017_braceN)++;
							}
						}
						else {
							_case_begin_1bbd66c77:;
							{
								(_85017_braceN)--;
							}
						}
						_match_end_1bbd66a68:;
					};
				};
				{
					
					if ((_85017_braceN > 0LL)) {
						_case_begin_1bbd6745e:;
						{
							goto _iter_next_1bbd6599b;
						}
					}
					else if ((_85121_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1bbd674c5:;
						{
							goto _iter_next_1bbd6599b;
						}
					}
					else if ((!(_1a959ec0e_IsAssignOp(_85121_token.get()._field_Kind)))) {
						_case_begin_1bbd6754c:;
						{
							goto _iter_next_1bbd6599b;
						}
					}
					_match_end_1bbd6723e:;
				};
				_84717_info.get()._field_l=_84639_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84639_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1a959e967_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1bbd6599b;
				};
				_84717_info.get()._field_r=_84639_tokens.slice((_85114_i + 1LL));
				if (_1a959e967_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1ad8c313d_pushErr(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1bbd6599b;
			}
			_iter_next_1bbd6599b:;
			++it;
			_85114_i++;
			goto _iter_begin_1bbd6599b;
		}
		_iter_end_1bbd6599b:;
	};
	return _84717_info;
}



inline jule::Ptr<_1ac4586ec_AssignLeft> _1ad8cb2bc_buildAssignL(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _89436_tokens) {
	jule::Ptr<_1ac4586ec_AssignLeft> _89517_l = jule::new_ptr<_1ac4586ec_AssignLeft>(_1ac4586ec_AssignLeft{._field_Token=_89436_tokens[0LL], });;
	if ((_89436_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_Ident=_89517_l.get()._field_Token.get()._field_Kind;
	};
	_89517_l.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _89436_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1ac4586ec_AssignLeft>> _1ad8cb5ca_buildAssignLs(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>& _90537_parts) {
	jule::Slice<jule::Ptr<_1ac4586ec_AssignLeft>> _90617_lefts = nullptr;;
	{
		auto &expr = _90537_parts;
		auto it = expr.begin();
		_iter_begin_1bbd6e1ad:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _90721_part = *it;
			{
				jule::Ptr<_1ac4586ec_AssignLeft> _90821_l = _1ad8cb2bc_buildAssignL(&(*_self_), _90721_part);;
				_90617_lefts = jule::alloc_for_append(_90617_lefts,1);_90617_lefts.__push(_90821_l);;
			}
			_iter_next_1bbd6e1ad:;
			++it;
			goto _iter_begin_1bbd6e1ad;
		}
		_iter_end_1bbd6e1ad:;
	};
	return _90617_lefts;
}



inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cb8d8_buildPlainAssign(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _91540_tokens) {
	jule::Ptr<_1ad8d9bc1_assignInfo> _91617_info = _1ad8caeae_buildAssignInfo(&(*_self_), _91540_tokens);;
	if ((!(_91617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1ac458c3b_AssignSt> _92117_assign = jule::new_ptr<_1ac458c3b_AssignSt>(_1ac458c3b_AssignSt{._field_Setter=_91617_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _92518_parts;;
	jule::Slice<_1a92722b6_Log> _92525_errs;;
	std::tie(_92518_parts,_92525_errs) = _1ad8dc2cd_parts(_91617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92525_errs);
		return std::make_tuple(nullptr,false);
	};
	_92117_assign.get()._field_Left=_1ad8cb5ca_buildAssignLs(&(*_self_), _92518_parts);
	if ((_91617_info.get()._field_r != nullptr)) {
		_92117_assign.get()._field_Right=_1ad8de588_buildExpr((*_self_)._field_p, _91617_info.get()._field_r);
	};
	return std::make_tuple(_92117_assign,true);
}



inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cbbe6_buildDeclAssign(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _93938_tokens) {
	if ((_93938_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93938_tokens=_93938_tokens.slice(1LL);
	jule::Ptr<_1a959a127_Token> _94517_token = _93938_tokens[0LL];;
	if (((_94517_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94517_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1ac458c3b_AssignSt> _95017_assign = jule::new_ptr<_1ac458c3b_AssignSt>(_1ac458c3b_AssignSt{._field_Declarative=true, });;
	jule::I64 _95417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _95517_rang = _1ad8db761_range(_95417_i,jule::Str("(", 1),jule::Str(")", 1),_93938_tokens);;
	if ((_95517_rang == nullptr)) {
		_1ad8c313d_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95417_i + 1LL) < _93938_tokens.len())) {
		_95017_assign.get()._field_Setter=_93938_tokens[_95417_i];
		(_95417_i)++;
		jule::Slice<jule::Ptr<_1a959a127_Token>> _96221_exprTokens = _93938_tokens.slice(_95417_i);;
		_95017_assign.get()._field_Right=_1ad8de588_buildExpr((*_self_)._field_p, _96221_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _96718_parts;;
	jule::Slice<_1a92722b6_Log> _96725_errs;;
	std::tie(_96718_parts,_96725_errs) = _1ad8dc2cd_parts(_95517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96725_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96718_parts;
		auto it = expr.begin();
		_iter_begin_1bbd7a098:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _97321_part = *it;
			{
				jule::Bool _97421_isMut = false;;
				jule::Bool _97521_isRef = false;;
				_94517_token=_97321_part[0LL];
				if ((_94517_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97421_isMut=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1ad8c313d_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1bbd7a098;
					};
				};
				if (((_97321_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97321_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_97521_isRef=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1ad8c313d_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1bbd7a098;
					};
				};
				if ((((_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97321_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1ad8c313d_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1bbd7a098;
				};
				jule::Ptr<_1ac4586ec_AssignLeft> _100321_l = _1ad8cb2bc_buildAssignL(&(*_self_), _97321_part);;
				_100321_l.get()._field_Mutable=_97421_isMut;
				_100321_l.get()._field_Reference=_97521_isRef;
				_95017_assign.get()._field_Left = jule::alloc_for_append(_95017_assign.get()._field_Left,1);_95017_assign.get()._field_Left.__push(_100321_l);;
			}
			_iter_next_1bbd7a098:;
			++it;
			goto _iter_begin_1bbd7a098;
		}
		_iter_end_1bbd7a098:;
	};
	return std::make_tuple(_95017_assign,true);
}



inline std::tuple<jule::Ptr<_1ac458c3b_AssignSt>,jule::Bool> _1ad8cc004_buildAssignSt(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _101237_tokens) {
	jule::Ptr<_1ac458c3b_AssignSt> _101257_st = jule::Ptr<_1ac458c3b_AssignSt>();
	jule::Bool _101272_ok = jule::Bool();
	if ((!(_1ad8da067_checkAssignTokens(_101237_tokens)))) {
		_101257_st = nullptr;
		_101272_ok = false;
		return std::make_tuple(_101257_st,_101272_ok);
	};
	{
		auto &_match_expr{ _101237_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bbd83d82:;
			{
				std::tie(_101257_st,_101272_ok) = _1ad8cbbe6_buildDeclAssign(&(*_self_), _101237_tokens);
			}
		}
		else {
			_case_begin_1bbd83975:;
			{
				std::tie(_101257_st,_101272_ok) = _1ad8cb8d8_buildPlainAssign(&(*_self_), _101237_tokens);
			}
		}
		_match_end_1bbd83920:;
	};
	return std::make_tuple(_101257_st,_101272_ok);
}



inline jule::Ptr<_1ac44ed75_UseExpr> _1ad8cc312_buildUseExpr(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _102736_tokens) {
	if ((_102736_tokens.len() == 1LL)) {
		_1ad8c313d_pushErr(&(*_self_), _102736_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1ac44ed75_UseExpr> _103217_ue = jule::new_ptr<_1ac44ed75_UseExpr>(_1ac44ed75_UseExpr{._field_Token=_102736_tokens[0LL], });;
	_102736_tokens=_102736_tokens.slice(1LL);
	_103217_ue.get()._field_Expr=_1ad8de588_buildExpr((*_self_)._field_p, _102736_tokens);
	return _103217_ue;
}



inline jule::Any _1ad8cc620_buildSt(_1ad8c1e50_scopeParser* _self_, jule::Ptr<_1ad8c1625_stmt>& _104031_st) {
	jule::Ptr<_1a959a127_Token> _104117_token = _104031_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1ad8caba1_buildIdSt(&(*_self_), _104031_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		};
	};
	jule::Ptr<_1ac458c3b_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1ad8cc004_buildAssignSt(&(*_self_), _104031_st.get()._field_tokens);
	if (_104921_ok) {
		return static_cast<jule::Any>(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bbd88edb:;
			{
				return static_cast<jule::Any>(_1ad8cc312_buildUseExpr(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1bbd88caa:;
			{
				return static_cast<jule::Any>(_1ad8c410b_buildVarSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1bbd893a4:;
			{
				return static_cast<jule::Any>(_1ad8c4419_buildRetSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1bbd8941a:;
			{
				return static_cast<jule::Any>(_1ad8c6d56_buildIterSt(&(*_self_), _104031_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1bbd89481:;
			{
				return static_cast<jule::Any>(_1ad8c7164_buildBreakSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1bbd894e7:;
			{
				return static_cast<jule::Any>(_1ad8c7472_buildContSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1bbd8955d:;
			{
				return static_cast<jule::Any>(_1ad8c7d9b_buildIfElseChain(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1bbd895c4:;
			{
				return static_cast<jule::Any>(_1ad8c81a9_buildCoCallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1bbd8963a:;
			{
				return static_cast<jule::Any>(_1ad8c84b7_buildGotoSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1bbd896a1:;
			{
				return static_cast<jule::Any>(_1ad8c87c5_buildFallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bbd89717:;
			{
				return static_cast<jule::Any>(_1ad8c8ad3_buildTypeAliasSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1bbd8977d:;
			{
				return static_cast<jule::Any>(_1ad8ca277_buildMatchCase(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1bbd897e4:;
			{
				return static_cast<jule::Any>(_1ad8ca585_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bbd8985a:;
			{
				if ((_104117_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1ad8ca585_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
				};
			}
		}
		_match_end_1bbd891c8:;
	};
	jule::Ptr<_1ac44e4d4_Expr> _109017_expr = _1ad8de588_buildExpr((*_self_)._field_p, _104031_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return static_cast<jule::Any>(_109017_expr);
	};
	_1ad8c313d_pushErr(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1ad8cc93e_build(_1ad8c1e50_scopeParser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _109829_tokens, jule::Ptr<_1ac45a2d1_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1ad8c19bb_splitStmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1ad8c2d1e_isLastSt(&(*_self_)))) && (!(_1ad8c2aaa_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1ad8c1625_stmt> _110621_st = _1ad8c3946_next(&(*_self_));;
			jule::Any _110721_data = _1ad8cc620_buildSt(&(*_self_), _110621_st);;
			if ((_110721_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1ac459bc6_Stmt{._field_Token=_110621_st.get()._field_tokens[0LL], ._field_Data=_110721_data});;
			};
			if (_1ad8c2846_stopped(&(*_self_))) {
				goto _iter_end_1bbd92a1c;
			};
		}
	_iter_next_1bbd92a1c:;
	}
	_iter_end_1bbd92a1c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8c1e50_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ad8cdb60_pushErr(_1ad8cd368_exprBuilder* _self_, jule::Ptr<_1a959a127_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1ad8dde5b_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _1ad8cde7e_pushSuggestion(_1ad8cd368_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1ad8de27a_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_1ac450161_TupleExpr> _1ad8ce28c_buildTuple(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>& _5334_parts) {
	jule::Ptr<_1ac450161_TupleExpr> _5417_tuple = jule::new_ptr<_1ac450161_TupleExpr>(_1ac450161_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1bbdb3ac6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1ad8d7cac_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1bbdb3ac6:;
			++it;
			goto _iter_begin_1bbdb3ac6;
		}
		_iter_end_1bbdb3ac6:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_1ac450518_LitExpr> _1ad8ce59a_buildLit(_1ad8cd368_exprBuilder* _self_, jule::Ptr<_1a959a127_Token> _6327_token) {
	return jule::new_ptr<_1ac450518_LitExpr>(_1ac450518_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8ce8a8_buildPrimitiveType(_1ad8cd368_exprBuilder* _self_, jule::Ptr<_1a959a127_Token>& _7038_token) {
	return _1ad8edc7e_buildPrimType(_7038_token);
}



inline jule::Any _1ad8cebb6_buildSingle(_1ad8cd368_exprBuilder* _self_, jule::Ptr<_1a959a127_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1bd053a89:;
			{
				return static_cast<jule::Any>(_1ad8ce59a_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd053b00:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1ac45210d_VariadicExpr>(_1ac45210d_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1bd053b66:;
			{
				return static_cast<jule::Any>(_1ad8d9066_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bd053bcc:;
			{
				return static_cast<jule::Any>(_1ad8ce8a8_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_1bd0535a0:;
	};
	_1ad8cdb60_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1ac45154c_IdentExpr> _1ad8ceec4_buildCppLinkedIdent(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1ad8cdb60_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a959a127_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8cdb60_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac45154c_IdentExpr> _10917_expr = _1ad8d9066_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_1ac451c56_UnaryExpr> _1ad8d02d2_buildUnary(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _11433_tokens) {
	jule::Ptr<_1a959a127_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1a959a831_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1ad8cdb60_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1ac451c56_UnaryExpr>(_1ac451c56_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_1ac452ce0_SubIdentExpr> _1ad8d05e0_buildObjSubIdent(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1a959a127_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac452ce0_SubIdentExpr>(_1ac452ce0_SubIdentExpr{._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_1ac45286c_NsSelectionExpr> _1ad8d08ed_buildNsSubIdent(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _15039_tokens) {
	jule::Ptr<_1ac45286c_NsSelectionExpr> _15117_ns = jule::new_ptr<_1ac45286c_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1bd06039d:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1ad8cdb60_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ad8cdb60_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bd06039d:;
			++it;
			_15214_i++;
			goto _iter_begin_1bd06039d;
		}
		_iter_end_1bd06039d:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8d0c0b_buildType(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1ac449eb3_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _1ad8e0875_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_1ad8cdb60_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1ad8cdb60_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _1ad8d1019_buildSubIdent(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_1a959a127_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1bd0677c3:;
			{
				return static_cast<jule::Any>(_1ad8d05e0_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bd067d01:;
			{
				return static_cast<jule::Any>(_1ad8d08ed_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd067d67:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_1bd067b58:;
	};
	_1ad8cdb60_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1ac45210d_VariadicExpr> _1ad8d1327_buildVariadic(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _20136_tokens) {
	jule::Ptr<_1a959a127_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1ac45210d_VariadicExpr>(_1ac45210d_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _1ad8d1635_buildOpRight(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _21036_tokens) {
	jule::Ptr<_1a959a127_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1bd06bee2:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1ad8d7691_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_1ac4537a2_FnCallExpr>>()) {
						_case_begin_1bd06d444:;
						{
							_21521_d.operator jule::Ptr<_1ac4537a2_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1ac45a2d1_ScopeTree>(_1ac45a2d1_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_1bd06d39a:;
				};
			}
		}
		_match_end_1bd06be48:;
	};
	_1ad8cdb60_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1ac44e7c0_RangeExpr> _1ad8d1965_buildBetweenParentheses(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1ac44e7c0_RangeExpr>(_1ac44e7c0_RangeExpr{._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_1ac4524b5_CastExpr> _1ad8d1c84_tryBuildCast(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1bd071b1d:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd072a31:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1bd071b1d;
							}
						}
						else {
							_case_begin_1bd072d0b:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1bd072aec:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1bd071b1d;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1a959a127_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1a959a127_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1a959a127_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1ac4524b5_CastExpr> _27721_cast = jule::new_ptr<_1ac4524b5_CastExpr>(_1ac4524b5_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1ad8cdb60_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1ad8cdb60_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1ac449eb3_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _1ad8e0875_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1ad8cdb60_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1ad8db761_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_1bd071b1d:;
			++it;
			_24513_i++;
			goto _iter_begin_1bd071b1d;
		}
		_iter_end_1bd071b1d:;
	};
	return nullptr;
}



inline void _1ad8d214c_pushArg(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>& _31731_args, jule::Slice<jule::Ptr<_1a959a127_Token>> _31750_tokens, jule::Ptr<_1a959a127_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1ad8d7cac_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8d245a_buildArgs(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1bd08119e:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd081e91:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1bd08226b:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1bd08205c:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bd08119e;
				};
				_1ad8d214c_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1bd08119e:;
			++it;
			_33613_i++;
			goto _iter_begin_1bd08119e;
		}
		_iter_end_1bd08119e:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1ad8d214c_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1ad8d214c_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _1ad8d2768_buildCallGenerics(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _37418_parts;;
	jule::Slice<_1a92722b6_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _1ad8dc2cd_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1bd087606:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1bd087606;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1ac449eb3_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _1ad8e0875_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_1ad8cdb60_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1bd087606:;
			++it;
			goto _iter_begin_1bd087606;
		}
		_iter_end_1bd087606:;
	};
	return _37517_generics;
}



inline jule::Ptr<_1ac4537a2_FnCallExpr> _1ad8d2bb9_buildFnCall(_1ad8cd368_exprBuilder* _self_, jule::Ptr<_1a959a127_Token>& _39235_token, jule::Slice<jule::Ptr<_1a959a127_Token>>& _39255_expr, jule::Slice<jule::Ptr<_1a959a127_Token>>& _39276_args) {
	return jule::new_ptr<_1ac4537a2_FnCallExpr>(_1ac4537a2_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1ad8d245a_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _1ad8d2ec7_buildParenthesesRange(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _40045_tokens) {
	jule::Ptr<_1a959a127_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd08b9c3:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bd08c265:;
						{
							jule::Ptr<_1ac4524b5_CastExpr> _40625_expr = _1ad8d1c84_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_1bd08c09a:;
				};
			}
		}
		_match_end_1bd08b929:;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _1ad8dba08_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1ad8d1965_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_1ad8d2bb9_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_1ac450c22_UnsafeExpr> _1ad8d32d5_buildUnsafeExpr(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _42138_tokens) {
	jule::Ptr<_1a959a127_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _42517_rangeTokens = _1ad8db761_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac450c22_UnsafeExpr>(_1ac450c22_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8d35e3_buildAnonFn(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _43635_tokens) {
	jule::Ptr<_1ac45bcc7_FnDecl> _43717_f = _1ad8e49bc_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_1ac45c129_IsAnon(_43717_f.ptr())))) {
		_1ad8cdb60_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _1ad8d3901_buildUnsafe(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bd093755:;
			{
				return static_cast<jule::Any>(_1ad8d35e3_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_1bd093c50:;
			{
				return static_cast<jule::Any>(_1ad8d32d5_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_1bd093b95:;
	};
}



inline void _1ad8d3cb9_pushRangeLitPart(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _45539_part, jule::Ptr<_1a959a127_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d40e9_getBraceRangeLitExprParts(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1bd0983c5:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd0991b7:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1bd099492:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1bd099283:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1bd0983c5;
				};
				_1ad8d3cb9_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1bd0983c5:;
			++it;
			_47713_i++;
			goto _iter_begin_1bd0983c5;
		}
		_iter_end_1bd0983c5:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1ad8d3cb9_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1ad8d3cb9_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_1ac454231_FieldExprPair> _1ad8d4418_buildFieldExprPair(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac454231_FieldExprPair> _51317_pair = jule::new_ptr<_1ac454231_FieldExprPair>(_1ac454231_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d4726_buildStructLitExpr(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _52142_tokens) {
	jule::Ptr<_1a959a127_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1ac44e4d4_Expr>(_1ac44e4d4_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1ad8d4418_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _1ad8d7cac_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _1ad8d4a34_buildStructLitExprs(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _53717_parts = _1ad8d40e9_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ac44e4d4_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1bd0a3c0a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1ad8d4726_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1bd0a3c0a:;
			++it;
			goto _iter_begin_1bd0a3c0a;
		}
		_iter_end_1bd0a3c0a:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_1ac45497e_StructLit> _1ad8d4d64_buildTypedStructLiteral(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1ac449eb3_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _1ad8e0875_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1ad8cdb60_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1a959a127_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1ad8cdb60_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac45497e_StructLit>(_1ac45497e_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1ad8d4a34_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d5183_buildBraceLitPart(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _1ad8d8a27_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1ac44e4d4_Expr>(_1ac44e4d4_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac455919_KeyValPair>(_1ac455919_KeyValPair{._field_Key=_1ad8d7cac_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1ad8d7cac_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _1ad8d7cac_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_1ac454e02_BraceLit> _1ad8d5491_buildBraceLit(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _59037_tokens) {
	jule::Ptr<_1ac454e02_BraceLit> _59117_lit = jule::new_ptr<_1ac454e02_BraceLit>(_1ac454e02_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _59617_parts = _1ad8d40e9_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1bd0acd02:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1ad8d5183_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1bd0acd02:;
			++it;
			goto _iter_begin_1bd0acd02;
		}
		_iter_end_1bd0acd02:;
	};
	return _59117_lit;
}



inline jule::Any _1ad8d579e_buildBraceRange(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _1ad8d930d_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1bd0ae5a6:;
			{
				return static_cast<jule::Any>(_1ad8d5491_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1bd0ae62d:;
			{
				_1ad8cdb60_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bd0ae51d:;
	};
	jule::Ptr<_1a959a127_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1ad8d7691_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_1ac4537a2_FnCallExpr>>()) {
				_case_begin_1bd0b2b1a:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1a959a127_Token>> _63225_rangeTokens = _1ad8db761_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_1ac4537a2_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_1ac4537a2_FnCallExpr>();;
					if (_1ac453d79_Ignored(_63325_model.ptr())) {
						_1ad8cdb60_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1ad8deec3_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_1bd0b2a3d:;
				{
					_1ad8cdb60_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1bd0b27eb:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bd0b6aa8:;
			{
				return _1ad8d3901_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bd0b6b1e:;
			{
				return static_cast<jule::Any>(_1ad8d35e3_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd0b6b85:;
			{
				return static_cast<jule::Any>(_1ad8d4d64_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_1bd0b2b81:;
			{
				_1ad8cdb60_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bd0b15b9:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d5aac_getEnumerableParts(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _66318_parts;;
	jule::Slice<_1a92722b6_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _1ad8dc2cd_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_1ac455d8c_SliceExpr> _1ad8d5dba_buildSlice(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _66833_tokens) {
	jule::Ptr<_1ac455d8c_SliceExpr> _66917_slc = jule::new_ptr<_1ac455d8c_SliceExpr>(_1ac455d8c_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _67417_parts = _1ad8d5aac_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1ac44e4d4_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1bd0bc52b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1bd0bc52b;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1ad8d7cac_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1bd0bc52b:;
			++it;
			goto _iter_begin_1bd0bc52b;
		}
		_iter_end_1bd0bc52b:;
	};
	return _66917_slc;
}



inline jule::Ptr<_1ac45672d_IndexingExpr> _1ad8d631b_buildIndexing(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1a959a127_Token>> _69113_tokens, jule::Ptr<_1a959a127_Token> _69135_errorToken) {
	jule::Ptr<_1a959a127_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac44e4d4_Expr> _69817_expr = _1ad8d7cac_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ac44e4d4_Expr> _70217_index = _1ad8d7cac_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac45672d_IndexingExpr>(_1ac45672d_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_1ac456d38_SlicingExpr> _1ad8d68b0_buildSlicing(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_1a959a127_Token>>& _71463_start, jule::Slice<jule::Ptr<_1a959a127_Token>>& _71514_to, jule::Ptr<_1a959a127_Token>& _71533_errorToken, jule::Ptr<_1a959a127_Token> _71557_end) {
	jule::Ptr<_1ac456d38_SlicingExpr> _71617_slc = jule::new_ptr<_1ac456d38_SlicingExpr>(_1ac456d38_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1ad8d7cac_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1ad8d7cac_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1ad8d7cac_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _1ad8d6bbd_buildBracketRange(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _73040_tokens) {
	jule::Ptr<_1a959a127_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _1ad8d930d_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1ad8d5dba_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1a959a127_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _1ad8d8a27_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_1ad8d68b0_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1ad8d631b_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _1ad8d6ecb_buildData(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bd0c947d:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bd0c9505:;
			{
				return _1ad8cebb6_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bd0c957c:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_1ad8ceec4_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_1bd0c9219:;
	};
	jule::Ptr<_1a959a127_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1ad8d1327_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd0cc85a:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_1ad8d02d2_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd0cc8d2:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1bd0cc77d;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_1a959a127_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1bd0cc77d;
					};
				};
				jule::Ptr<_1a959a127_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _79825_delim = 0LL;;
					_79825_delim=static_cast<jule::I64>(_1ad8ee0c0_mapColon(_75533_tokens,_79825_delim));
					if ((_79825_delim == -1LL)) {
						goto _match_end_1bd0cc77d;
					};
				};
				return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_1bd0cc77d:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bd0ccdcc:;
			{
				return _1ad8d1019_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bd0d408c:;
			{
				return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd0d4103:;
			{
				return _1ad8d1635_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd0d4169:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bd0d59a6:;
						{
							return _1ad8d2ec7_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1bd0d5a1c:;
						{
							return _1ad8d579e_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bd0d5a94:;
						{
							return _1ad8d6bbd_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_1bd0d53e0:;
				};
			}
		}
		_match_end_1bd0ccd77:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _75533_tokens));
	};
	_1ad8cdb60_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _1ad8d7383_buildBinop(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _83634_tokens, jule::I64 _83652_i) {
	jule::Ptr<_1a959a127_Token> _83717_op = _83634_tokens[_83652_i];;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _83817_leftTokens = _83634_tokens.slice(0LL,_83652_i);;
	if ((_1ad8d810e_isTypeOp(_83717_op.get()._field_Kind) && _1ad8d83ea_isTypeRange(_83817_leftTokens))) {
		return static_cast<jule::Any>(_1ad8d0c0b_buildType(&(*_self_), _83634_tokens));
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _84317_rightTokens = _83634_tokens.slice((_83652_i + 1LL));;
	if ((_83817_leftTokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_84317_rightTokens.len() == 0LL)) {
		_1ad8cdb60_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8cde7e_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_1ac453263_BinopExpr>(_1ac453263_BinopExpr{._field_Left=_1ad8d7cac_buildFromTokens(&(*_self_), _83817_leftTokens), ._field_Right=_1ad8d7cac_buildFromTokens(&(*_self_), _84317_rightTokens), ._field_Op=_83717_op}));
}



inline jule::Any _1ad8d7691_build(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _86129_tokens) {
	jule::I64 _86213_i = _1ad8d8cbe_findLowestPrecOp(_86129_tokens);;
	if ((_86213_i == -1LL)) {
		return _1ad8d6ecb_buildData(&(*_self_), _86129_tokens);
	};
	return _1ad8d7383_buildBinop(&(*_self_), _86129_tokens,_86213_i);
}



inline jule::Any _1ad8d799e_buildKind(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _86933_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _87018_parts;;
	jule::Slice<_1a92722b6_Log> _87025_errors;;
	std::tie(_87018_parts,_87025_errors) = _1ad8dc2cd_parts(_86933_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_87025_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_87025_errors);
		return nullptr;
	} else if ((_87018_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1ad8ce28c_buildTuple(&(*_self_), _87018_parts));
	};
	return _1ad8d7691_build(&(*_self_), _86933_tokens);
}



inline jule::Ptr<_1ac44e4d4_Expr> _1ad8d7cac_buildFromTokens(_1ad8cd368_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _88038_tokens) {
	if ((_88038_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac44e4d4_Expr>(_1ac44e4d4_Expr{._field_Token=_88038_tokens[0LL], ._field_End=_88038_tokens[(_88038_tokens.len() - 1LL)], ._field_Kind=_1ad8d799e_buildKind(&(*_self_), _88038_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8cd368_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8d9bc1_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ad8dd82e_stop(_1ad8dd4ee_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1ad8dda93_stopped(_1ad8dd4ee_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1ad8dde5b_pushErr(_1ad8dd4ee_parser* _self_, jule::Ptr<_1a959a127_Token> _28726_token, jule::Str _28741_fmt, jule::Slice<jule::Any> _28754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad8dc960_compilerErr(_28726_token,_28741_fmt,jule::Any(_28754_args)));;
}



inline void _1ad8de27a_pushSuggestion(_1ad8dd4ee_parser* _self_, jule::Str _29233_fmt, jule::Slice<jule::Any> _29246_args) {
	{
		_1ad8dcd8e_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29233_fmt,jule::Any(_29246_args));
	};
}



inline jule::Ptr<_1ac44e4d4_Expr> _1ad8de588_buildExpr(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _29634_tokens) {
	jule::Ptr<_1ad8cd368_exprBuilder> _29717_ep = jule::new_ptr<_1ad8cd368_exprBuilder>(_1ad8cd368_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1ac44e4d4_Expr> _30017_expr = _1ad8d7cac_buildFromTokens(_29717_ep.ptr(), _29634_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_1ac41195d_Directive> _1ad8de896_buildDirective(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _30437_tokens) {
	if ((_30437_tokens.len() == 1LL)) {
		_1ad8dde5b_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30437_tokens[1LL].get()._field_Column != (_30437_tokens[0LL].get()._field_Column + 1LL))) {
		_1ad8dde5b_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ac41195d_Directive>(_1ac41195d_Directive{._field_Tag=_30437_tokens[1LL], ._field_Args=_30437_tokens.slice(2LL)});
}



inline void _1ad8deb1b_pushDirective(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac41195d_Directive> _31936_d) {
	if ((_31936_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1bd11b2b1:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _32416_pd = *it;
			{
				if ((_31936_d.get()._field_Tag.get()._field_Kind == _32416_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bd11b2b1:;
			++it;
			goto _iter_begin_1bd11b2b1;
		}
		_iter_end_1bd11b2b1:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31936_d);;
}



inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8deec3_buildScope(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _33235_tokens, jule::Ptr<_1a959a127_Token> _33257_end) {
	jule::Ptr<_1ac45a2d1_ScopeTree> _33317_s = _1ad8c0503_newScope();;
	_33317_s.get()._field_End=_33257_end;
	_1ad8c1e50_scopeParser _33517_sp = _1ad8c1e50_scopeParser{._field_p=_self_, };;
	_1ad8cc93e_build(&_33517_sp, _33235_tokens,_33317_s);
	return _33317_s;
}



inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad8e0424__buildType(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _34242_tokens, jule::I64* _34313_i, jule::Bool _34322_err) {
	_1ad8ee5cb_typeBuilder _34417_tb = _1ad8ee5cb_typeBuilder{._field_p=_self_, ._field_tokens=_34242_tokens, ._field_i=_34313_i, ._field_err=_34322_err};;
	jule::Ptr<_1ac449eb3_TypeDecl> _35018_decl;;
	jule::Bool _35024_ok;;
	std::tie(_35018_decl,_35024_ok) = _1ad902986_build(&_34417_tb);
	return std::make_tuple(_35018_decl,_35024_ok);
}



inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad8e0875_buildType(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _35541_tokens, jule::I64* _35613_i, jule::Bool _35622_err) {
	jule::Ptr<_1a959a127_Token> _35713_token = _35541_tokens[(*(_35613_i))];;
	jule::Ptr<_1ac449eb3_TypeDecl> _35818_t;;
	jule::Bool _35821_ok;;
	std::tie(_35818_t,_35821_ok) = _1ad8e0424__buildType(_self_, _35541_tokens,_35613_i,_35622_err);
	if ((_35622_err && (!(_35821_ok)))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _35713_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35818_t,_35821_ok);
}



inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8e0b83_buildTypeAliasDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _36543_tokens) {
	jule::I64 _36617_i = 1LL;;
	if ((_36617_i >= _36543_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac461617_TypeAliasDecl> _37117_tad = jule::new_ptr<_1ac461617_TypeAliasDecl>(_1ac461617_TypeAliasDecl{._field_Token=_36543_tokens[1LL], ._field_Ident=_36543_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1a959a127_Token> _37517_token = _36543_tokens[_36617_i];;
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _37517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	_37517_token=_36543_tokens[_36617_i];
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	jule::Ptr<_1ac449eb3_TypeDecl> _39618_t;;
	jule::Bool _39621_ok;;
	std::tie(_39618_t,_39621_ok) = _1ad8e0875_buildType(_self_, _36543_tokens,(&(_36617_i)),true);
	_37117_tad.get()._field_Kind=_39618_t;
	if ((_39621_ok && (_36617_i < _36543_tokens.len()))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _36543_tokens[_36617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_37117_tad.get()._field_Public=_1ad8ed19b_isPub(_37117_tad.get()._field_Ident);
	return _37117_tad;
}



inline void _1ad8e0ea2_buildVarTypeAndExpr(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac45cca6_VarDecl>& _40544_v, jule::Slice<jule::Ptr<_1a959a127_Token>>& _40562_tokens) {
	jule::I64 _40617_i = 0LL;;
	jule::Ptr<_1a959a127_Token> _40717_tok = _40562_tokens[_40617_i];;
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40617_i)++;
		if (((_40617_i >= _40562_tokens.len()) || ((_40562_tokens[_40617_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40562_tokens[_40617_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1ad8dde5b_pushErr(_self_.ptr(), _40717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ac449eb3_TypeDecl> _41522_t;;
		jule::Bool _41525_ok;;
		std::tie(_41522_t,_41525_ok) = _1ad8e0875_buildType(_self_, _40562_tokens,(&(_40617_i)),true);
		if (_41525_ok) {
			_40544_v.get()._field_Kind=_41522_t;
			if ((_40617_i >= _40562_tokens.len())) {
				return;;
			};
			_40717_tok=_40562_tokens[_40617_i];
		};
	};
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40717_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1ad8dde5b_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1a959a127_Token>> _43021_exprTokens = _40562_tokens.slice((_40617_i + 1LL));;
		if ((_43021_exprTokens.len() == 0LL)) {
			_1ad8dde5b_pushErr(_self_.ptr(), _40717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40544_v.get()._field_Expr=_1ad8de588_buildExpr(_self_, _43021_exprTokens);
	} else {
		_1ad8dde5b_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ad8e12c1_buildVarCommon(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac45cca6_VarDecl>& _44139_v, jule::Slice<jule::Ptr<_1a959a127_Token>> _44156_tokens) {
	_44139_v.get()._field_Token=_44156_tokens[0LL];
	if ((_44139_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _44139_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44139_v.get()._field_Ident=_44139_v.get()._field_Token.get()._field_Kind;
	_44139_v.get()._field_Public=_1ad8ed19b_isPub(_44139_v.get()._field_Ident);
	_44139_v.get()._field_Kind=nullptr;
	if ((_44156_tokens.len() > 1LL)) {
		_44156_tokens=_44156_tokens.slice(1LL);
		_1ad8e0ea2_buildVarTypeAndExpr(_self_, _44139_v,_44156_tokens);
	};
}



inline void _1ad8e1689_buildVarBegin(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac45cca6_VarDecl>& _45737_v, jule::I64& _45755_i, jule::Slice<jule::Ptr<_1a959a127_Token>>& _45764_tokens) {
	jule::Ptr<_1a959a127_Token> _45813_tok = _45764_tokens[_45755_i];;
	{
		auto &_match_expr{ _45813_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bd1365c8:;
			{
				_45737_v.get()._field_Statically=true;
				goto _case_begin_1bd13663e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bd13663e:;
			{
				(_45755_i)++;
				if ((_45755_i >= _45764_tokens.len())) {
					_1ad8dde5b_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45764_tokens[_45755_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45737_v.get()._field_Mutable=true;
					(_45755_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1bd135cc0:;
			{
				(_45755_i)++;
				_45737_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1bd135c04:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bd135a5b:;
	};
	if ((_45755_i >= _45764_tokens.len())) {
		_1ad8dde5b_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8e1997_buildVar(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _48732_tokens) {
	jule::I64 _48817_i = 0LL;;
	jule::Ptr<_1ac45cca6_VarDecl> _48917_v = jule::new_ptr<_1ac45cca6_VarDecl>(_1ac45cca6_VarDecl{._field_Token=_48732_tokens[0LL], });;
	_1ad8e1689_buildVarBegin(_self_.ptr(), _48917_v,_48817_i,_48732_tokens);
	if ((_48817_i >= _48732_tokens.len())) {
		return nullptr;
	};
	_48732_tokens=_48732_tokens.slice(_48817_i);
	if (((_48732_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48732_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48917_v.get()._field_Reference=true;
		if ((_48732_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48732_tokens=_48732_tokens.slice(1LL);
	};
	_1ad8e12c1_buildVarCommon(_self_, _48917_v,_48732_tokens);
	return _48917_v;
}



inline jule::Ptr<_1ac457597_GenericDecl> _1ad8e1ca5_buildGeneric(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _50937_tokens) {
	jule::Ptr<_1ac457597_GenericDecl> _51017_g = jule::new_ptr<_1ac457597_GenericDecl>(_1ac457597_GenericDecl{._field_Token=_50937_tokens[0LL], });;
	if ((_51017_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _51017_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51017_g.get()._field_Ident=_51017_g.get()._field_Token.get()._field_Kind;
	if ((_50937_tokens.len() > 1LL)) {
		if ((_50937_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1ad8dde5b_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50937_tokens.len() == 2LL)) {
			_1ad8dde5b_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1a959a127_Token>> _52721_constraintTokens = _50937_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _52822_parts;;
		jule::Slice<_1a92722b6_Log> _52829_errors;;
		std::tie(_52822_parts,_52829_errors) = _1ad8dbde3_partsKind(_52721_constraintTokens,jule::Str("|", 1),true);
		if ((_52829_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52829_errors);
			return nullptr;
		};
		_51017_g.get()._field_Constraint=jule::new_ptr<_1ac457124_Constraint>(_1ac457124_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>::alloc(0LL,_52822_parts.len())});
		{
			auto &expr = _52822_parts;
			auto it = expr.begin();
			_iter_begin_1bd142d32:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1a959a127_Token>> _53425_part = *it;
				{
					jule::I64 _53525_i = 0LL;;
					jule::Ptr<_1ac449eb3_TypeDecl> _53626_kind;;
					std::tie(_53626_kind,std::ignore) = _1ad8e0875_buildType(_self_, _53425_part,(&(_53525_i)),true);
					_51017_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_51017_g.get()._field_Constraint.get()._field_Mask,1);_51017_g.get()._field_Constraint.get()._field_Mask.__push(_53626_kind);;
					if ((_53525_i < _53425_part.len())) {
						_1ad8dde5b_pushErr(_self_.ptr(), _53425_part[_53525_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bd142d32:;
				++it;
				goto _iter_begin_1bd142d32;
			}
			_iter_end_1bd142d32:;
		};
	};
	return _51017_g;
}



inline jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _1ad8e215c_buildGenerics(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _54638_tokens, jule::Ptr<_1a959a127_Token>& _54657_errorToken) {
	if ((_54638_tokens.len() == 0LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _54657_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _55218_parts;;
	jule::Slice<_1a92722b6_Log> _55225_errors;;
	std::tie(_55218_parts,_55225_errors) = _1ad8dc2cd_parts(_54638_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55225_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55225_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ac457597_GenericDecl>> _55817_generics = jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>::alloc(0LL,_55218_parts.len());;
	{
		auto &expr = _55218_parts;
		auto it = expr.begin();
		_iter_begin_1bd148464:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _55921_part = *it;
			{
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_1ad8e1ca5_buildGeneric(_self_, _55921_part));;
			}
			_iter_next_1bd148464:;
			++it;
			goto _iter_begin_1bd148464;
		}
		_iter_end_1bd148464:;
	};
	return _55817_generics;
}



inline jule::Ptr<_1ac45a9a7_ParamDecl> _1ad8e246a_buildSelfParam(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _56637_tokens) {
	if ((_56637_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1ac45a9a7_ParamDecl> _57117_param = jule::new_ptr<_1ac45a9a7_ParamDecl>();;
	jule::I64 _57417_i = 0LL;;
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_57117_param.get()._field_Mutable=true;
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1ad8dde5b_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Kind == jule::Str("&", 1))) {
		_57117_param.get()._field_Ident=jule::Str("&", 1);
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1ad8dde5b_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_57117_param.get()._field_Ident+=jule::Str("self", 4);
		_57117_param.get()._field_Token=_56637_tokens[_57417_i];
		(_57417_i)++;
		if ((_57417_i < _56637_tokens.len())) {
			_1ad8dde5b_pushErr(&(*_self_), _56637_tokens[_57417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57117_param;
}



inline void _1ad8e2833_paramTypeBegin(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac45a9a7_ParamDecl>& _60538_param, jule::I64& _60562_i, jule::Slice<jule::Ptr<_1a959a127_Token>>& _60571_tokens) {
	for (; (_60562_i < _60571_tokens.len()); (_60562_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _60717_token = _60571_tokens[_60562_i];;
			if ((_60717_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60717_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60538_param.get()._field_Variadic) {
				_1ad8dde5b_pushErr(&(*_self_), _60717_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1bc97e98d;
			};
			_60538_param.get()._field_Variadic=true;
		}
	_iter_next_1bc97e98d:;
	}
	_iter_end_1bc97e98d:;;
}



inline void _1ad8e2b52_buildParamType(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac45a9a7_ParamDecl>& _62239_param, jule::Slice<jule::Ptr<_1a959a127_Token>>& _62263_tokens) {
	jule::I64 _62317_i = 0LL;;
	_1ad8e2833_paramTypeBegin(_self_.ptr(), _62239_param,_62317_i,_62263_tokens);
	if ((_62317_i >= _62263_tokens.len())) {
		return;;
	};
	std::tie(_62239_param.get()._field_Kind,std::ignore) = _1ad8e0875_buildType(_self_, _62263_tokens,(&(_62317_i)),true);
	if ((_62317_i < _62263_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _62263_tokens[_62317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1ad8e2e71_buildParamBody(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac45a9a7_ParamDecl>& _63539_param, jule::Slice<jule::Ptr<_1a959a127_Token>> _63562_tokens) {
	jule::Ptr<_1a959a127_Token> _63617_tok = _63562_tokens[0LL];;
	_63539_param.get()._field_Ident=_63617_tok.get()._field_Kind;
	if ((_63562_tokens.len() == 1LL)) {
		return;;
	} else if ((_63562_tokens.len() < 3LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _63617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63562_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ad8e2b52_buildParamType(_self_, _63539_param,_63562_tokens);
		return;;
	};
	_63562_tokens=_63562_tokens.slice(2LL);
	_1ad8e2b52_buildParamType(_self_, _63539_param,_63562_tokens);
}



inline jule::Ptr<_1ac45a9a7_ParamDecl> _1ad8e327e_buildParam(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _65334_tokens) {
	jule::Ptr<_1ac45a9a7_ParamDecl> _65417_param = jule::new_ptr<_1ac45a9a7_ParamDecl>(_1ac45a9a7_ParamDecl{._field_Token=_65334_tokens[0LL], });;
	if ((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65417_param.get()._field_Mutable=true;
		if ((_65334_tokens.len() == 1LL)) {
			_1ad8dde5b_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65334_tokens=_65334_tokens.slice(1LL);
		_65417_param.get()._field_Token=_65334_tokens[0LL];
	};
	if ((_65334_tokens.len() >= 3LL)) {
		if (((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65417_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_65334_tokens.len() == 1LL)) {
				_1ad8dde5b_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65334_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_65334_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65417_param.get()._field_Reference=true;
				_65334_tokens=_65334_tokens.slice(1LL);
				_65417_param.get()._field_Token=_65334_tokens[0LL];
			};
		};
	};
	if ((_65417_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65417_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ad8e2b52_buildParamType(_self_, _65417_param,_65334_tokens);
	} else {
		_1ad8e2e71_buildParamBody(_self_, _65417_param,_65334_tokens);
	};
	return _65417_param;
}



inline void _1ad8e3504_checkParams(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>>& _69635_params) {
	{
		auto &expr = _69635_params;
		auto it = expr.begin();
		_iter_begin_1bc98de64:;
		if (it != expr.end()) {
			jule::Ptr<_1ac45a9a7_ParamDecl> _69721_param = *it;
			{
				if ((_1ac45ad1a_IsSelf(_69721_param.ptr()) || (_69721_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1bc98de64;
				};
				if ((_69721_param.get()._field_Token == nullptr)) {
					_1ad8dde5b_pushErr(&(*_self_), _69721_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69721_param.get()._field_Kind=jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Ident=_69721_param.get()._field_Token.get()._field_Kind, }))});
					_69721_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1bc98de64:;
			++it;
			goto _iter_begin_1bc98de64;
		}
		_iter_end_1bc98de64:;
	};
}



inline jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>> _1ad8e38ab_buildParams(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _71636_tokens, jule::Bool _71654_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _71718_parts;;
	jule::Slice<_1a92722b6_Log> _71725_errs;;
	std::tie(_71718_parts,_71725_errs) = _1ad8dc2cd_parts(_71636_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71725_errs);
	if ((_71718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>> _72317_params = nullptr;;
	if ((_71654_method && (_71718_parts.len() > 0LL))) {
		jule::Ptr<_1ac45a9a7_ParamDecl> _72521_param = _1ad8e246a_buildSelfParam(_self_.ptr(), _71718_parts[0LL]);;
		if (((_72521_param != nullptr) && _1ac45ad1a_IsSelf(_72521_param.ptr()))) {
			_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_72521_param);;
			_71718_parts=_71718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71718_parts;
		auto it = expr.begin();
		_iter_begin_1bc9937a4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _73221_part = *it;
			{
				jule::Ptr<_1ac45a9a7_ParamDecl> _73321_param = _1ad8e327e_buildParam(_self_, _73221_part);;
				if ((_73321_param != nullptr)) {
					_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_73321_param);;
				};
			}
			_iter_next_1bc9937a4:;
			++it;
			goto _iter_begin_1bc9937a4;
		}
		_iter_end_1bc9937a4:;
	};
	_1ad8e3504_checkParams(_self_.ptr(), _72317_params);
	return _72317_params;
}



inline std::tuple<jule::Ptr<_1ac44d0c6_RetTypeDecl>,jule::Bool> _1ad8e3c63_buildMultiRetType(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _74342_tokens, jule::I64& _74365_i) {
	jule::Ptr<_1ac44d0c6_RetTypeDecl> _74375_t = jule::Ptr<_1ac44d0c6_RetTypeDecl>();
	jule::Bool _74392_ok = jule::Bool();
	_74375_t=jule::new_ptr<_1ac44d0c6_RetTypeDecl>();
	(_74365_i)++;
	if ((_74365_i >= _74342_tokens.len())) {
		(_74365_i)--;
		std::tie(_74375_t.get()._field_Kind,_74392_ok) = _1ad8e0875_buildType(_self_, _74342_tokens,(&(_74365_i)),false);
		return std::make_tuple(_74375_t,_74392_ok);
	};
	(_74365_i)--;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _75317_rangeTokens = _1ad8db761_range(_74365_i,jule::Str("(", 1),jule::Str(")", 1),_74342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _75518_parts;;
	jule::Slice<_1a92722b6_Log> _75525_errs;;
	std::tie(_75518_parts,_75525_errs) = _1ad8dc2cd_parts(_75317_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75525_errs);
	if ((_75518_parts.len() == 0LL)) {
		return std::make_tuple(_74375_t,_74392_ok);
	};
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _76117_types = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>::alloc(0LL,_75518_parts.len());;
	_74375_t.get()._field_Idents=jule::Slice<jule::Ptr<_1a959a127_Token>>::alloc(0LL,_75518_parts.len());
	{
		auto &expr = _75518_parts;
		auto it = expr.begin();
		_iter_begin_1bc999e1a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _76321_part = *it;
			{
				jule::Ptr<_1a959a127_Token> _76421_token = _76321_part[0LL];;
				jule::I64 _76521_offset = 0LL;;
				if ((_76321_part.len() > 1LL)) {
					_76421_token=_76321_part[1LL];
					if ((_76421_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76521_offset=2LL;
						if ((_76321_part.len() < 3LL)) {
							_1ad8dde5b_pushErr(_self_.ptr(), _76421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1bc999e1a;
						};
					};
				};
				_76421_token=_76321_part[0LL];
				if ((_76521_offset != 2LL)) {
					jule::Ptr<_1a959a127_Token> _78125_newToken = jule::new_ptr<_1a959a127_Token>((*(_76421_token)));;
					_78125_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_78125_newToken);;
				} else {
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_76421_token);;
				};
				jule::Ptr<_1ac449eb3_TypeDecl> _78822_tk;;
				std::tie(_78822_tk,std::ignore) = _1ad8e0875_buildType(_self_, _76321_part,(&(_76521_offset)),true);
				if ((_76521_offset < _76321_part.len())) {
					_1ad8dde5b_pushErr(_self_.ptr(), _76321_part[_76521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76117_types = jule::alloc_for_append(_76117_types,1);_76117_types.__push(_78822_tk);;
			}
			_iter_next_1bc999e1a:;
			++it;
			goto _iter_begin_1bc999e1a;
		}
		_iter_end_1bc999e1a:;
	};
	if ((_76117_types.len() > 1LL)) {
		_74375_t.get()._field_Kind=jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_74342_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44ba53_TupleTypeDecl>(_1ac44ba53_TupleTypeDecl{._field_Types=_76117_types}))});
	} else {
		_74375_t.get()._field_Kind=_76117_types[0LL];
	};
	_74392_ok=true;
	return std::make_tuple(_74375_t,_74392_ok);
}



inline std::tuple<jule::Ptr<_1ac44d0c6_RetTypeDecl>,jule::Bool> _1ad8e411a_buildRetType(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _81137_tokens, jule::I64& _81160_i) {
	jule::Ptr<_1ac44d0c6_RetTypeDecl> _81170_t = jule::Ptr<_1ac44d0c6_RetTypeDecl>();
	jule::Bool _81187_ok = jule::Bool();
	_81170_t=jule::new_ptr<_1ac44d0c6_RetTypeDecl>();
	if ((_81160_i >= _81137_tokens.len())) {
		return std::make_tuple(_81170_t,_81187_ok);
	};
	jule::Ptr<_1a959a127_Token> _81717_token = _81137_tokens[_81160_i];;
	{
		auto &_match_expr{ _81717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bc9a397e:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bc9a39e5:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1bc9a3a5b:;
			{
				if (((_81160_i + 1LL) >= _81137_tokens.len())) {
					_1ad8dde5b_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81170_t,_81187_ok);
				};
				(_81160_i)++;
				_81717_token=_81137_tokens[_81160_i];
				if ((_81717_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81717_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1bc9a6597:;
							{
								std::tie(_81170_t,_81187_ok) = _1ad8e3c63_buildMultiRetType(_self_, _81137_tokens,_81160_i);
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1bc9a660d:;
							{
								_1ad8dde5b_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						_match_end_1bc9a64dc:;
					};
				};
				std::tie(_81170_t.get()._field_Kind,_81187_ok) = _1ad8e0875_buildType(_self_, _81137_tokens,(&(_81160_i)),true);
				return std::make_tuple(_81170_t,_81187_ok);
			}
		}
		_match_end_1bc9a38c4:;
	};
	(_81160_i)++;
	_1ad8dde5b_pushErr(_self_.ptr(), _81717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81170_t,_81187_ok);
}



inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e456b_buildFnPrototype(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _85641_tokens, jule::I64& _85664_i, jule::Bool _85672_method) {
	jule::Ptr<_1ac45bcc7_FnDecl> _85717_f = jule::new_ptr<_1ac45bcc7_FnDecl>(_1ac45bcc7_FnDecl{._field_Token=_85641_tokens[_85664_i], });;
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85717_f.get()._field_Statically=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85717_f.get()._field_Unsafety=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	(_85664_i)++;
	if ((_85664_i >= _85641_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a959a127_Token> _89013_tok = _85641_tokens[_85664_i];;
	if ((_89013_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Ident=_89013_tok.get()._field_Kind;
	} else {
		_85717_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1a959a127_Token> _90213_errorToken = _85641_tokens[_85664_i];;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _90317_genericsTokens = _1ad8db761_range(_85664_i,jule::Str("[", 1),jule::Str("]", 1),_85641_tokens);;
	if ((_90317_genericsTokens != nullptr)) {
		_85717_f.get()._field_Generics=_1ad8e215c_buildGenerics(_self_, _90317_genericsTokens,_90213_errorToken);
	};
	if ((_85641_tokens[_85664_i].get()._field_Kind != jule::Str("(", 1))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _85641_tokens[_85664_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _91317_paramsToks = _1ad8db761_range(_85664_i,jule::Str("(", 1),jule::Str(")", 1),_85641_tokens);;
	if ((_91317_paramsToks.len() > 0LL)) {
		_85717_f.get()._field_Params=_1ad8e38ab_buildParams(_self_, _91317_paramsToks,_85672_method);
	};
	if ((_85664_i < _85641_tokens.len())) {
		jule::Ptr<_1a959a127_Token> _91917_token = _85641_tokens[_85664_i];;
		if (((_91917_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91917_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85717_f.get()._field_Exceptional=true;
			(_85664_i)++;
		};
	};
	_85717_f.get()._field_Public=_1ad8ed19b_isPub(_85717_f.get()._field_Ident);
	std::tie(_85717_f.get()._field_Result,std::ignore) = _1ad8e411a_buildRetType(_self_, _85641_tokens,_85664_i);
	return _85717_f;
}



inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e49bc_buildFn(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _93332_tokens, jule::Bool _93350_method, jule::Bool _93364_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_1ac45bcc7_FnDecl> _93517_f = _1ad8e456b_buildFnPrototype(_self_, _93332_tokens,_93417_i,_93350_method);;
	if (_93364_prototype) {
		if ((_93417_i < _93332_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _93332_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93332_tokens.len())) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _95117_blockTokens = _1ad8db761_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93332_tokens);;
	if ((_95117_blockTokens != nullptr)) {
		_93517_f.get()._field_Scope=_1ad8deec3_buildScope(_self_, _95117_blockTokens,_93332_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_Scope.get()._field_Unsafety=_93517_f.get()._field_Unsafety;
		if ((_93417_i < _93332_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _93332_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8e4cca_getUseDeclSelectors(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _96742_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96742_tokens=_1ad8db761_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96742_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _97018_parts;;
	jule::Slice<_1a92722b6_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _1ad8dc2cd_parts(_96742_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _97617_selectors = jule::Slice<jule::Ptr<_1a959a127_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_1bc9bcd61:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a959a127_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1ad8dde5b_pushErr(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ad8de27a_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1bc9bcd61;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_1bc9bcd61:;
			++it;
			goto _iter_begin_1bc9bcd61;
		}
		_iter_end_1bc9bcd61:;
	};
	return _97617_selectors;
}



inline void _1ad8e50e9_buildCppUseDecl(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac462a03_UseDecl>& _99239_decl, jule::Slice<jule::Ptr<_1a959a127_Token>>& _99256_tokens) {
	if ((_99256_tokens.len() > 1LL)) {
		_1ad8dde5b_pushErr(&(*_self_), _99256_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a959a127_Token> _99613_token = _99256_tokens[0LL];;
	if (((_99613_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_Kind[0LL] != '`') && (_99613_token.get()._field_Kind[0LL] != '\"')))) {
		_1ad8dde5b_pushErr(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99239_decl.get()._field_CppLinked=true;
	_99239_decl.get()._field_LinkPath=_99613_token.get()._field_Kind.slice(1LL,(_99613_token.get()._field_Kind.len() - 1LL));
}



inline void _1ad8e5418_buildStdUseDecl(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac462a03_UseDecl>& _100539_decl, jule::Slice<jule::Ptr<_1a959a127_Token>> _100559_tokens) {
	_100539_decl.get()._field_Std=true;
	jule::Ptr<_1a959a127_Token> _100817_token = _100559_tokens[0LL];;
	if ((_100559_tokens.len() < 3LL)) {
		_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100559_tokens=_100559_tokens.slice(2LL);
	_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bd1b513a:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd1b51b2:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("}", 1))) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a959a127_Token>> _102521_selectors = nullptr;;
				std::tie(_100559_tokens,_102521_selectors) = _1ad8dba08_rangeLast(_100559_tokens);
				_100539_decl.get()._field_Selected=_1ad8e4cca_getUseDeclSelectors(&(*_self_), _102521_selectors);
				if ((_100559_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd1b5239:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("*", 1))) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100539_decl.get()._field_Full=true;
			}
		}
		_match_end_1bd1b50b3:;
	};
	_100539_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1ad8dd136_tokstoa(_100559_tokens));
}



inline void _1ad8e5737_buildIdentUseDecl(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac462a03_UseDecl>& _106741_decl, jule::Slice<jule::Ptr<_1a959a127_Token>> _106761_tokens) {
	_106741_decl.get()._field_Std=false;
	jule::Ptr<_1a959a127_Token> _107017_token = _106761_tokens[(_106761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1bd1c01bc:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd1c0398:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("}", 1))) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1a959a127_Token>> _108121_selectors = nullptr;;
				std::tie(_106761_tokens,_108121_selectors) = _1ad8dba08_rangeLast(_106761_tokens);
				_106741_decl.get()._field_Selected=_1ad8e4cca_getUseDeclSelectors(&(*_self_), _108121_selectors);
				if ((_106761_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd1c040e:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("*", 1))) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1ad8dde5b_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106741_decl.get()._field_Full=true;
			}
		}
		_match_end_1bd1c0167:;
	};
	_106741_decl.get()._field_LinkPath=_1ad8dd136_tokstoa(_106761_tokens);
}



inline void _1ad8e5a56_parseUseDecl(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac462a03_UseDecl>& _113036_decl, jule::Slice<jule::Ptr<_1a959a127_Token>> _113056_tokens) {
	if (_113036_decl.get()._field_CppLinked) {
		_1ad8e50e9_buildCppUseDecl(&(*_self_), _113036_decl,_113056_tokens);
		return;;
	};
	jule::Ptr<_1a959a127_Token> _113617_token = _113056_tokens[0LL];;
	if ((_113617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113056_tokens.len() > 2LL) && (_113056_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_113036_decl.get()._field_Alias=_113617_token.get()._field_Kind;
		if ((_113056_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1ad8dde5b_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1ad8de27a_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113056_tokens=_113056_tokens.slice(2LL);
		_113617_token=_113056_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1bd1cba14:;
			{
				_1ad8e5418_buildStdUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		else {
			_case_begin_1bd1cdad2:;
			{
				_1ad8e5737_buildIdentUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		_match_end_1bd1cda6b:;
	};
}



inline jule::Ptr<_1ac462a03_UseDecl> _1ad8e5e0d_buildUseDecl(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _116435_tokens, jule::Bool _116453_cpp_linked) {
	jule::Ptr<_1ac462a03_UseDecl> _116517_decl = jule::new_ptr<_1ac462a03_UseDecl>(_1ac462a03_UseDecl{._field_Token=_116435_tokens[0LL], ._field_CppLinked=_116453_cpp_linked, });;
	if ((_116435_tokens.len() < 2LL)) {
		_1ad8dde5b_pushErr(&(*_self_), _116517_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116435_tokens=_116435_tokens.slice(1LL);
	_1ad8e5a56_parseUseDecl(&(*_self_), _116517_decl,_116435_tokens);
	return _116517_decl;
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8e62b5_buildTypeEnumItemKind(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::I64& _117846_i, jule::Slice<jule::Ptr<_1a959a127_Token>>& _117859_tokens) {
	jule::I64 _117917_braceN = 0LL;;
	jule::I64 _118013_exprStart = _117846_i;;
	for (; (_117846_i < _117859_tokens.len()); (_117846_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _118217_t = _117859_tokens[_117846_i];;
			if ((_118217_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bd1d3125:;
						{
							(_117917_braceN)++;
							goto _iter_next_1bd1d2960;
						}
					}
					else {
						_case_begin_1bd1d39d8:;
						{
							(_117917_braceN)--;
						}
					}
					_match_end_1bd1d37c9:;
				};
			};
			if ((_117917_braceN > 0LL)) {
				goto _iter_next_1bd1d2960;
			};
			if (((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117846_i + 1LL) >= _117859_tokens.len()))) {
				jule::Slice<jule::Ptr<_1a959a127_Token>> _119825_kindTokens = nullptr;;
				if ((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart,_117846_i);
				} else {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_1ac449eb3_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _1ad8e0875_buildType(_self_, _119825_kindTokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kindTokens.len())) {
					_1ad8dde5b_pushErr(_self_.ptr(), _119825_kindTokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_1bd1d2960:;
	}
	_iter_end_1bd1d2960:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>> _1ad8e65c3_buildTypeEnumItems(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _121543_tokens) {
	jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121543_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _121921_t = _121543_tokens[_121717_i];;
			jule::Ptr<_1ac4644a5_TypeEnumItemDecl> _122021_item = jule::new_ptr<_1ac4644a5_TypeEnumItemDecl>();;
			_122021_item.get()._field_Token=_121921_t;
			if (((_122021_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121543_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_Ident=_122021_item.get()._field_Token.get()._field_Kind;
				_121921_t=_121543_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121543_tokens.len()) || (_121543_tokens[_121717_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1ad8dde5b_pushErr(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1bd1d8955;
					};
				};
			};
			_122021_item.get()._field_Kind=_1ad8e62b5_buildTypeEnumItemKind(_self_, _121717_i,_121543_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_1bd1d8955:;
	}
	_iter_end_1bd1d8955:;;
	return _121617_items;
}



inline jule::Ptr<_1ac4646a3_TypeEnumDecl> _1ad8e68d1_buildTypeEnumDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _123942_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_1ac4646a3_TypeEnumDecl> _124117_e = jule::new_ptr<_1ac4646a3_TypeEnumDecl>(_1ac4646a3_TypeEnumDecl{._field_Token=_123942_tokens[_124017_i], });;
	if ((_124117_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Ident=_124117_e.get()._field_Token.get()._field_Kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _125117_itemTokens = _1ad8db761_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123942_tokens);;
	if ((_125117_itemTokens == nullptr)) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123942_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _123942_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Public=_1ad8ed19b_isPub(_124117_e.get()._field_Ident);
	_124117_e.get()._field_End=_123942_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_Items=_1ad8e65c3_buildTypeEnumItems(_self_, _125117_itemTokens);
	return _124117_e;
}



inline jule::Ptr<_1ac44e4d4_Expr> _1ad8e6c88_buildEnumItemExpr(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::I64& _126642_i, jule::Slice<jule::Ptr<_1a959a127_Token>>& _126655_tokens) {
	jule::I64 _126717_braceN = 0LL;;
	jule::I64 _126813_exprStart = _126642_i;;
	for (; (_126642_i < _126655_tokens.len()); (_126642_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _127017_t = _126655_tokens[_126642_i];;
			if ((_127017_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _127017_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bd1e46db:;
						{
							(_126717_braceN)++;
							goto _iter_next_1bd1e4026;
						}
					}
					else {
						_case_begin_1bd1e509e:;
						{
							(_126717_braceN)--;
						}
					}
					_match_end_1bd1e4d90:;
				};
			};
			if ((_126717_braceN > 0LL)) {
				goto _iter_next_1bd1e4026;
			};
			if (((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126642_i + 1LL) >= _126655_tokens.len()))) {
				jule::Slice<jule::Ptr<_1a959a127_Token>> _128625_exprTokens = nullptr;;
				if ((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart,_126642_i);
				} else {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart);
				};
				return _1ad8de588_buildExpr(_self_, _128625_exprTokens);
			};
		}
	_iter_next_1bd1e4026:;
	}
	_iter_end_1bd1e4026:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>> _1ad8e7096_buildEnumItems(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _129839_tokens) {
	jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>> _129917_items = jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _130017_i = 0LL;;
	for (; (_130017_i < _129839_tokens.len()); (_130017_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _130221_t = _129839_tokens[_130017_i];;
			jule::Ptr<_1ac462e76_EnumItemDecl> _130321_item = jule::new_ptr<_1ac462e76_EnumItemDecl>();;
			_130321_item.get()._field_Token=_130221_t;
			if ((_130321_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1ad8dde5b_pushErr(_self_.ptr(), _130321_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130321_item.get()._field_Ident=_130321_item.get()._field_Token.get()._field_Kind;
			if ((((_130017_i + 1LL) >= _129839_tokens.len()) || (_129839_tokens[(_130017_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_130017_i + 1LL) < _129839_tokens.len())) {
					(_130017_i)++;
				};
				_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
				goto _iter_next_1bd1e8a75;
			};
			(_130017_i)++;
			_130221_t=_129839_tokens[_130017_i];
			(_130017_i)++;
			if ((_130221_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1ad8dde5b_pushErr(_self_.ptr(), _130221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1bd1e8a75;
			};
			if (((_130017_i >= _129839_tokens.len()) || (_129839_tokens[_130017_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1ad8dde5b_pushErr(_self_.ptr(), _130221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1bd1e8a75;
			};
			_130321_item.get()._field_Expr=_1ad8e6c88_buildEnumItemExpr(_self_, _130017_i,_129839_tokens);
			_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
		}
	_iter_next_1bd1e8a75:;
	}
	_iter_end_1bd1e8a75:;;
	return _129917_items;
}



inline jule::Ptr<_1ac46399e_EnumDecl> _1ad8e73a4_buildEnumDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _133538_tokens) {
	if ((_133538_tokens.len() < 3LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _133538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac46399e_EnumDecl> _134017_e = jule::new_ptr<_1ac46399e_EnumDecl>(_1ac46399e_EnumDecl{._field_Token=_133538_tokens[1LL], });;
	if ((_134017_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Ident=_134017_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134817_i = 2LL;;
	if ((_133538_tokens[_134817_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134817_i)++;
		if ((_134817_i >= _133538_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _133538_tokens[(_134817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _134017_e;
		};
		std::tie(_134017_e.get()._field_Kind,std::ignore) = _1ad8e0875_buildType(_self_, _133538_tokens,(&(_134817_i)),true);
		if ((_134817_i >= _133538_tokens.len())) {
			_1ad8dd82e_stop(_self_.ptr());
			_1ad8dde5b_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _134017_e;
		};
	} else {
		_134017_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _136517_itemTokens = _1ad8db761_range(_134817_i,jule::Str("{", 1),jule::Str("}", 1),_133538_tokens);;
	if ((_136517_itemTokens == nullptr)) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _134017_e;
	} else if ((_134817_i < _133538_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _133538_tokens[_134817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Public=_1ad8ed19b_isPub(_134017_e.get()._field_Ident);
	_134017_e.get()._field_End=_133538_tokens[(_134817_i - 1LL)];
	_134017_e.get()._field_Items=_1ad8e7096_buildEnumItems(_self_, _136517_itemTokens);
	return _134017_e;
}



inline jule::Any _1ad8e76b2_buildNodeEnumDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _138042_tokens) {
	if (((_138042_tokens.len() > 3LL) && (_138042_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_138042_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1ad8e68d1_buildTypeEnumDecl(_self_, _138042_tokens));
		};
	};
	return static_cast<jule::Any>(_1ad8e73a4_buildEnumDecl(_self_, _138042_tokens));
}



inline jule::Ptr<_1ac464c03_FieldDecl> _1ad8e79c0_buildField(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _138934_tokens) {
	jule::Ptr<_1ac464c03_FieldDecl> _139017_f = jule::new_ptr<_1ac464c03_FieldDecl>();;
	_139017_f.get()._field_Mutable=(_138934_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_139017_f.get()._field_Mutable) {
		if ((_138934_tokens.len() == 1LL)) {
			_1ad8dde5b_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(1LL);
	};
	_139017_f.get()._field_Token=_138934_tokens[0LL];
	if ((_139017_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _139017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_139017_f.get()._field_Ident=_139017_f.get()._field_Token.get()._field_Kind;
	if ((_138934_tokens.len() == 1LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138934_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _138934_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138934_tokens=_138934_tokens.slice(2LL);
	jule::I64 _141817_i = 0LL;;
	std::tie(_139017_f.get()._field_Kind,std::ignore) = _1ad8e0875_buildType(_self_, _138934_tokens,(&(_141817_i)),true);
	if ((_141817_i < _138934_tokens.len())) {
		jule::Ptr<_1a959a127_Token> _142117_token = _138934_tokens[_141817_i];;
		if (((_142117_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142117_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1ad8dde5b_pushErr(_self_.ptr(), _138934_tokens[_141817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141817_i)++;
		if ((_141817_i >= _138934_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _142117_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(_141817_i);
		_139017_f.get()._field_Default=_1ad8de588_buildExpr(_self_, _138934_tokens);
	};
	_139017_f.get()._field_Public=_1ad8ed19b_isPub(_139017_f.get()._field_Ident);
	return _139017_f;
}



inline jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>> _1ad8e7ccd_buildStructDeclFields(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _143845_tokens) {
	jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>> _143917_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _144017_stmts = _1ad8c19bb_splitStmts(_143845_tokens);;
	{
		auto &expr = _144017_stmts;
		auto it = expr.begin();
		_iter_begin_1bd215c07:;
		if (it != expr.end()) {
			jule::Ptr<_1ad8c1625_stmt> _144121_stmt = *it;
			{
				_143845_tokens=_144121_stmt.get()._field_tokens;
				jule::Ptr<_1ac464c03_FieldDecl> _144321_f = _1ad8e79c0_buildField(_self_, _143845_tokens);;
				_143917_fields = jule::alloc_for_append(_143917_fields,1);_143917_fields.__push(_144321_f);;
			}
			_iter_next_1bd215c07:;
			++it;
			goto _iter_begin_1bd215c07;
		}
		_iter_end_1bd215c07:;
	};
	return _143917_fields;
}



inline jule::Ptr<_1ac465561_StructDecl> _1ad8e80db_buildStructDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _144940_tokens) {
	if ((_144940_tokens.len() < 3LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _144940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145517_i = 1LL;;
	jule::Ptr<_1ac465561_StructDecl> _145617_s = jule::new_ptr<_1ac465561_StructDecl>(_1ac465561_StructDecl{._field_Token=_144940_tokens[_145517_i], });;
	if ((_145617_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145517_i)++;
	if ((_145517_i >= _144940_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145617_s;
	};
	_145617_s.get()._field_Ident=_145617_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1a959a127_Token> _147013_errorToken = _144940_tokens[_145517_i];;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _147117_genericsTokens = _1ad8db761_range(_145517_i,jule::Str("[", 1),jule::Str("]", 1),_144940_tokens);;
	if ((_147117_genericsTokens != nullptr)) {
		_145617_s.get()._field_Generics=_1ad8e215c_buildGenerics(_self_, _147117_genericsTokens,_147013_errorToken);
	};
	if ((_145517_i >= _144940_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _144940_tokens[(_145517_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _148117_bodyTokens = _1ad8db761_range(_145517_i,jule::Str("{", 1),jule::Str("}", 1),_144940_tokens);;
	if ((_148117_bodyTokens == nullptr)) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	if ((_145517_i < _144940_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145617_s.get()._field_Public=_1ad8ed19b_isPub(_145617_s.get()._field_Ident);
	_145617_s.get()._field_Fields=_1ad8e7ccd_buildStructDeclFields(_self_, _148117_bodyTokens);
	_145617_s.get()._field_End=_144940_tokens[(_145517_i - 1LL)];
	return _145617_s;
}



inline void _1ad8e8361_checkMethodReceiver(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac45bcc7_FnDecl>& _149739_f) {
	if (_149739_f.get()._field_Statically) {
		if (((_149739_f.get()._field_Params.len() > 0LL) && _1ac45ad1a_IsSelf(_149739_f.get()._field_Params[0LL].ptr()))) {
			_1ad8dde5b_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149739_f.get()._field_Params.len() == 0LL)) {
		_1ad8dde5b_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac45a9a7_ParamDecl> _150913_param = _149739_f.get()._field_Params[0LL];;
	if ((!(_1ac45ad1a_IsSelf(_150913_param.ptr())))) {
		_1ad8dde5b_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>> _1ad8e866e_buildTraitMethods(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _151641_tokens) {
	jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>> _151717_methods = nullptr;;
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _151817_stmts = _1ad8c19bb_splitStmts(_151641_tokens);;
	{
		auto &expr = _151817_stmts;
		auto it = expr.begin();
		_iter_begin_1bd2254b9:;
		if (it != expr.end()) {
			jule::Ptr<_1ad8c1625_stmt> _151921_stmt = *it;
			{
				_151641_tokens=_151921_stmt.get()._field_tokens;
				if ((_151641_tokens.len() == 0LL)) {
					goto _iter_next_1bd2254b9;
				};
				jule::Ptr<_1ac45bcc7_FnDecl> _152421_f = _1ad8e49bc_buildFn(_self_, _151641_tokens,true,true);;
				if ((_152421_f != nullptr)) {
					if (_1ac45c129_IsAnon(_152421_f.ptr())) {
						_1ad8dde5b_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1ad8e8361_checkMethodReceiver(_self_.ptr(), _152421_f);
					if ((_152421_f.get()._field_Generics.len() > 0LL)) {
						_1ad8dde5b_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151717_methods = jule::alloc_for_append(_151717_methods,1);_151717_methods.__push(_152421_f);;
				};
			}
			_iter_next_1bd2254b9:;
			++it;
			goto _iter_begin_1bd2254b9;
		}
		_iter_end_1bd2254b9:;
	};
	return _151717_methods;
}



inline jule::Ptr<_1ac465b6b_TraitDecl> _1ad8e897c_buildTraitDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _153939_tokens) {
	if ((_153939_tokens.len() < 3LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _153939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac465b6b_TraitDecl> _154417_t = jule::new_ptr<_1ac465b6b_TraitDecl>(_1ac465b6b_TraitDecl{._field_Token=_153939_tokens[1LL], });;
	if ((_154417_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Ident=_154417_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155217_i = 2LL;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _155317_bodyTokens = _1ad8db761_range(_155217_i,jule::Str("{", 1),jule::Str("}", 1),_153939_tokens);;
	if ((_155317_bodyTokens == nullptr)) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_155217_i < _153939_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _153939_tokens[_155217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Public=_1ad8ed19b_isPub(_154417_t.get()._field_Ident);
	_154417_t.get()._field_Methods=_1ad8e866e_buildTraitMethods(_self_, _155317_bodyTokens);
	_154417_t.get()._field_End=_153939_tokens[(_155217_i - 1LL)];
	return _154417_t;
}



inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8e8c8a_buildCppLinkFn(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _156938_tokens) {
	_156938_tokens=_156938_tokens.slice(1LL);
	jule::Ptr<_1ac45bcc7_FnDecl> _157117_f = _1ad8e49bc_buildFn(_self_, _156938_tokens,false,true);;
	if ((_157117_f != nullptr)) {
		if (_1ac45c129_IsAnon(_157117_f.ptr())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _157117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_157117_f.get()._field_Public=false;
		_157117_f.get()._field_CppLinked=true;
	};
	return _157117_f;
}



inline jule::Ptr<_1ac45cca6_VarDecl> _1ad8e9098_buildCppLinkVar(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _158239_tokens) {
	_158239_tokens=_158239_tokens.slice(1LL);
	jule::Ptr<_1ac45cca6_VarDecl> _158417_v = _1ad8e1997_buildVar(_self_, _158239_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_CppLinked=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1ad8dde5b_pushErr(_self_.ptr(), _158417_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _158417_v;
}



inline jule::Ptr<_1ac465561_StructDecl> _1ad8e93a6_buildCppLinkStruct(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _159542_tokens) {
	_159542_tokens=_159542_tokens.slice(1LL);
	jule::Ptr<_1ac465561_StructDecl> _159717_s = _1ad8e80db_buildStructDecl(_self_, _159542_tokens);;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto &expr = _159717_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd235265:;
			if (it != expr.end()) {
				jule::Ptr<_1ac464c03_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1bd235265:;
				++it;
				goto _iter_begin_1bd235265;
			}
			_iter_end_1bd235265:;
		};
		_159717_s.get()._field_CppLinked=true;
	};
	return _159717_s;
}



inline jule::Ptr<_1ac461617_TypeAliasDecl> _1ad8e96b4_buildCppLinkTypeAlias(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _160945_tokens) {
	_160945_tokens=_160945_tokens.slice(1LL);
	jule::Ptr<_1ac461617_TypeAliasDecl> _161117_t = _1ad8e0b83_buildTypeAliasDecl(_self_, _160945_tokens);;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_CppLinked=true;
	};
	return _161117_t;
}



inline jule::Ptr<_1ac462a03_UseDecl> _1ad8e99c2_buildCppLinkUse(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _161939_tokens) {
	if ((_161939_tokens.len() == 1LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _161939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161939_tokens=_161939_tokens.slice(1LL);
	;
	return _1ad8e5e0d_buildUseDecl(_self_.ptr(), _161939_tokens,true);
}



inline jule::Any _1ad8e9cd0_buildCppLink(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _163037_tokens) {
	jule::Ptr<_1a959a127_Token> _163117_token = _163037_tokens[0LL];;
	if ((_163037_tokens.len() == 1LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163117_token=_163037_tokens[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bd23a04a:;
			{
				return static_cast<jule::Any>(_1ad8e8c8a_buildCppLinkFn(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1bd23ac60:;
			{
				return static_cast<jule::Any>(_1ad8e9098_buildCppLinkVar(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bd23acc6:;
			{
				return static_cast<jule::Any>(_1ad8e93a6_buildCppLinkStruct(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bd23ad3c:;
			{
				return static_cast<jule::Any>(_1ad8e96b4_buildCppLinkTypeAlias(_self_, _163037_tokens));
			}
		}
		else {
			_case_begin_1bd23ab72:;
			{
				_1ad8dde5b_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd23ab0b:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac45bcc7_FnDecl> _1ad8ea0dd_getMethod(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_1a959a127_Token> _165617_token = _165434_tokens[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1ad8dde5b_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac45bcc7_FnDecl> _168017_f = _1ad8e49bc_buildFn(_self_, _165434_tokens,true,false);;
	if (((_168017_f != nullptr) && _1ac45c129_IsAnon(_168017_f.ptr()))) {
		_1ad8dde5b_pushErr(_self_.ptr(), _168017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168017_f;
}



inline void _1ad8ea40c_parseImplBody(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac466276_Impl>& _168738_ipl, jule::Slice<jule::Ptr<_1a959a127_Token>>& _168755_tokens) {
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _168817_stmts = _1ad8c19bb_splitStmts(_168755_tokens);;
	{
		auto &expr = _168817_stmts;
		auto it = expr.begin();
		_iter_begin_1bd244164:;
		if (it != expr.end()) {
			jule::Ptr<_1ad8c1625_stmt> _168921_stmt = *it;
			{
				_168755_tokens=_168921_stmt.get()._field_tokens;
				jule::Ptr<_1a959a127_Token> _169121_token = _168755_tokens[0LL];;
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1bd24494a:;
						{
							_1ad8deb1b_pushDirective(_self_.ptr(), _1ad8de896_buildDirective(_self_.ptr(), _168755_tokens));
							goto _iter_next_1bd244164;
						}
					}
					_match_end_1bd2452ec:;
				};
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1bd245484:;
						{
							jule::Ptr<_1ac45cca6_VarDecl> _170025_v = _1ad8e1997_buildVar(_self_, _168755_tokens);;
							if ((_170025_v != nullptr)) {
								_168738_ipl.get()._field_Statics = jule::alloc_for_append(_168738_ipl.get()._field_Statics,1);_168738_ipl.get()._field_Statics.__push(_170025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1bd245792:;
						{
							jule::Ptr<_1ac45bcc7_FnDecl> _170725_f = _1ad8ea0dd_getMethod(_self_, _168755_tokens);;
							if ((_170725_f != nullptr)) {
								_1ad8e8361_checkMethodReceiver(_self_.ptr(), _170725_f);
								_1ad8eac9d_applyFnMeta(_self_.ptr(), _170725_f);
								_168738_ipl.get()._field_Methods = jule::alloc_for_append(_168738_ipl.get()._field_Methods,1);_168738_ipl.get()._field_Methods.__push(_170725_f);;
							};
						}
					}
					else {
						_case_begin_1bd24572b:;
						{
							_1ad8dde5b_pushErr(_self_.ptr(), _169121_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1bd244164;
						}
					}
					_match_end_1bd245990:;
				};
			}
			_iter_next_1bd244164:;
			++it;
			goto _iter_begin_1bd244164;
		}
		_iter_end_1bd244164:;
	};
}



inline jule::Ptr<_1ac466276_Impl> _1ad8ea71a_buildImpl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _172033_tokens) {
	jule::Ptr<_1a959a127_Token> _172117_token = _172033_tokens[0LL];;
	if ((_172033_tokens.len() < 2LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172717_i = 1LL;;
	jule::Ptr<_1ac449eb3_TypeDecl> _172918_base;;
	jule::Bool _172928_ok;;
	std::tie(_172918_base,_172928_ok) = _1ad8e0875_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac466276_Impl> _173817_ipl = jule::new_ptr<_1ac466276_Impl>(_1ac466276_Impl{._field_Base=_172918_base, });;
	_172117_token=_172033_tokens[_172717_i];
	if ((_172117_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_172117_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_172117_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173817_ipl.get()._field_Base,_173817_ipl.get()._field_Dest) = std::make_tuple(_173817_ipl.get()._field_Dest,_173817_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172717_i)++;
	if ((_172717_i >= _172033_tokens.len())) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173817_ipl.get()._field_Dest,_172928_ok) = _1ad8e0875_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _177617_bodyTokens = _1ad8db761_range(_172717_i,jule::Str("{", 1),jule::Str("}", 1),_172033_tokens);;
	if ((_177617_bodyTokens == nullptr)) {
		_1ad8dd82e_stop(_self_.ptr());
		_1ad8dde5b_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172717_i < _172033_tokens.len())) {
		_1ad8dde5b_pushErr(_self_.ptr(), _172033_tokens[_172717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173817_ipl.get()._field_End=_172033_tokens[(_172717_i - 1LL)];
	_1ad8ea40c_parseImplBody(_self_, _173817_ipl,_177617_bodyTokens);
	return _173817_ipl;
}



inline jule::Any _1ad8eaa28_buildNodeData(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _179138_tokens) {
	jule::Ptr<_1a959a127_Token> _179217_token = _179138_tokens[0LL];;
	{
		auto &_match_expr{ _179217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1bd256929:;
			{
				jule::Ptr<_1ac45bcc7_FnDecl> _179621_f = _1ad8e49bc_buildFn(_self_, _179138_tokens,false,false);;
				if ((_179621_f != nullptr)) {
					_179621_f.get()._field_Global=true;
					if (_1ac45c129_IsAnon(_179621_f.ptr())) {
						_1ad8dde5b_pushErr(_self_.ptr(), _179621_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1bd256990:;
			{
				return static_cast<jule::Any>(_1ad8e1997_buildVar(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1bd257199:;
			{
				return static_cast<jule::Any>(_1ad8e0b83_buildTypeAliasDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1bd257210:;
			{
				return _1ad8e76b2_buildNodeEnumDecl(_self_, _179138_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1bd257276:;
			{
				return static_cast<jule::Any>(_1ad8e80db_buildStructDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1bd2572dc:;
			{
				return static_cast<jule::Any>(_1ad8e897c_buildTraitDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1bd257353:;
			{
				return static_cast<jule::Any>(_1ad8ea71a_buildImpl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd2573ca:;
			{
				return _1ad8e9cd0_buildCppLink(_self_, _179138_tokens);
			}
		}
		else {
			_case_begin_1bd256819:;
			{
				_1ad8dde5b_pushErr(_self_.ptr(), _179217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bd256770:;
	};
}



inline void _1ad8eac9d_applyFnMeta(_1ad8dd4ee_parser* _self_, jule::Ptr<_1ac45bcc7_FnDecl>& _182735_f) {
	_182735_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1ad8eb023_applyMeta(_1ad8dd4ee_parser* _self_, _1ac411562_Node& _183233_node) {
	{
		auto &_match_expr{ _183233_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45cca6_VarDecl>>()) {
			_case_begin_1bd25d018:;
			{
				jule::Ptr<_1ac45cca6_VarDecl> _183521_v = _183233_node._field_Data.operator jule::Ptr<_1ac45cca6_VarDecl>();;
				if ((_183521_v == nullptr)) {
					return;;
				};
				_183521_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac45bcc7_FnDecl>>()) {
			_case_begin_1bd25d07e:;
			{
				jule::Ptr<_1ac45bcc7_FnDecl> _184221_f = _183233_node._field_Data.operator jule::Ptr<_1ac45bcc7_FnDecl>();;
				if ((_184221_f == nullptr)) {
					return;;
				};
				_1ad8eac9d_applyFnMeta(&(*_self_), _184221_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac465561_StructDecl>>()) {
			_case_begin_1bd25d0e5:;
			{
				jule::Ptr<_1ac465561_StructDecl> _184821_sd = _183233_node._field_Data.operator jule::Ptr<_1ac465561_StructDecl>();;
				if ((_184821_sd == nullptr)) {
					return;;
				};
				_184821_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1bd25cd09:;
	};
}



inline void _1ad8eb298_pushUseDecl(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1ac462a03_UseDecl>& _185736_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185736_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _185736_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1ad8de27a_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad8eb5a6_pushMetaNodes(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _186538_tokens) {
	{
		auto &_match_expr{ _186538_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1bd263c44:;
			{
				;
				jule::Ptr<_1ac462a03_UseDecl> _186921_decl = _1ad8e5e0d_buildUseDecl(_self_.ptr(), _186538_tokens,false);;
				_1ad8eb298_pushUseDecl(_self_, _186921_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd263caa:;
			{
				if (((_186538_tokens.len() > 1LL) && (_186538_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1ac462a03_UseDecl> _187425_decl = _1ad8e99c2_buildCppLinkUse(_self_, _186538_tokens);;
					_1ad8eb298_pushUseDecl(_self_, _187425_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1bd263d32:;
			{
				_1ad8deb1b_pushDirective(_self_.ptr(), _1ad8de896_buildDirective(_self_.ptr(), _186538_tokens));
				return true;
			}
		}
		_match_end_1bd263b45:;
	};
	return false;
}



inline _1ac411562_Node _1ad8eb8b4_parseNode(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _188534_st) {
	_1ac411562_Node _188617_node = _1ac411562_Node{._field_Token=_188534_st[0LL], };;
	if (_1ad8eb5a6_pushMetaNodes(_self_, _188534_st)) {
		return _188617_node;
	};
	jule::Any _189417_data = _1ad8eaa28_buildNodeData(_self_, _188534_st);;
	if ((_189417_data == nullptr)) {
		return _188617_node;
	};
	_188617_node._field_Data=_189417_data;
	_1ad8eb023_applyMeta(_self_.ptr(), _188617_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188617_node;
}



inline void _1ad8ebb39_appendNode(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _190935_st) {
	if ((_190935_st.len() == 0LL)) {
		return;;
	};
	_1ac411562_Node _191317_node = _1ad8eb8b4_parseNode(_self_, _190935_st);;
	if (((_191317_node._field_Data == nullptr) || _1ad8dda93_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_191317_node);;
}



inline void _1ad8ec09b_removeRange(_1ad8dd4ee_parser* _self_, jule::I64 _192030_i, jule::Str _192038_kind, jule::Slice<jule::Ptr<_1a959a127_Token>>& _192050_tokens, jule::Slice<jule::I64>& _192073_ranges) {
	jule::Str _192113_close = _1ad8dc575_getCloseKindOfBrace(_192038_kind);;
	for (; (_192030_i >= 0LL); (_192030_i)--) {
		{
			jule::Ptr<_1a959a127_Token> _192317_tok = _192050_tokens[_192073_ranges[_192030_i]];;
			if ((_192317_tok.get()._field_Kind != _192113_close)) {
				goto _iter_next_1bd26d5cd;
			};
			_192073_ranges=jule::append(_192073_ranges.slice(0LL,_192030_i),_192073_ranges.slice((_192030_i + 1LL)));
			goto _iter_end_1bd26d5cd;
		}
	_iter_next_1bd26d5cd:;
	}
	_iter_end_1bd26d5cd:;;
}



inline void _1ad8ec464_pushWrongOrderCloseErr(_1ad8dd4ee_parser* _self_, jule::Ptr<_1a959a127_Token>& _193242_t, jule::Slice<jule::Ptr<_1a959a127_Token>>& _193254_tokens, jule::Slice<jule::I64>& _193273_ranges) {
	{
		auto &_match_expr{ _193254_tokens[_193273_ranges[(_193273_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1bd2708dd:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _193242_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1bd270965:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _193242_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1bd2709dc:;
			{
				_1ad8dde5b_pushErr(&(*_self_), _193242_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd2707ab:;
	};
}



inline void _1ad8ec8c6_pushRangeClose(_1ad8dd4ee_parser* _self_, jule::Ptr<_1a959a127_Token> _194333_t, jule::Str _194344_left, jule::Slice<jule::Ptr<_1a959a127_Token>>& _194356_tokens, jule::Slice<jule::I64>& _194379_ranges) {
	jule::I64 _194413_n = _194379_ranges.len();;
	if ((_194413_n == 0LL)) {
		{
			auto &_match_expr{ _194333_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1bd27357d:;
				{
					_1ad8dde5b_pushErr(&(*_self_), _194333_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1bd2735e4:;
				{
					_1ad8dde5b_pushErr(&(*_self_), _194333_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1bd27366b:;
				{
					_1ad8dde5b_pushErr(&(*_self_), _194333_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1bd27332a:;
		};
		return;;
	} else if ((_194356_tokens[_194379_ranges[(_194413_n - 1LL)]].get()._field_Kind != _194344_left)) {
		_1ad8ec464_pushWrongOrderCloseErr(&(*_self_), _194333_t,_194356_tokens,_194379_ranges);
	};
	_1ad8ec09b_removeRange(&(*_self_), static_cast<jule::I64>((_194413_n - 1LL)),_194333_t.get()._field_Kind,_194356_tokens,_194379_ranges);
}



inline void _1ad8ecb4b_checkRanges(_1ad8dd4ee_parser* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>>& _196131_tokens) {
	jule::Slice<jule::I64> _196217_ranges = nullptr;;
	{
		auto &expr = _196131_tokens;
		auto it = expr.begin();
		_iter_begin_1bd27687d:;
		if (it != expr.end()) {
			jule::I64 _196413_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> &_196416_token = *it;
			{
				if ((_196416_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1bd27687d;
				};
				{
					auto &_match_expr{ _196416_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1bd277b15:;
						{
							_196217_ranges = jule::alloc_for_append(_196217_ranges,1);_196217_ranges.__push(_196413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bd277bae:;
						{
							_1ad8ec8c6_pushRangeClose(&(*_self_), _196416_token,jule::Str("(", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1bd277c25:;
						{
							_1ad8ec8c6_pushRangeClose(&(*_self_), _196416_token,jule::Str("{", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bd277c8b:;
						{
							_1ad8ec8c6_pushRangeClose(&(*_self_), _196416_token,jule::Str("[", 1),_196131_tokens,_196217_ranges);
						}
					}
					_match_end_1bd277692:;
				};
			}
			_iter_next_1bd27687d:;
			++it;
			_196413_i++;
			goto _iter_begin_1bd27687d;
		}
		_iter_end_1bd27687d:;
	};
	{
		auto &expr = _196217_ranges;
		auto it = expr.begin();
		_iter_begin_1bd2795b7:;
		if (it != expr.end()) {
			jule::I64 _198216_i = *it;
			{
				jule::Ptr<_1a959a127_Token> _198317_token = _196131_tokens[_198216_i];;
				{
					auto &_match_expr{ _198317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bd27a431:;
						{
							_1ad8dde5b_pushErr(&(*_self_), _198317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1bd27a4a8:;
						{
							_1ad8dde5b_pushErr(&(*_self_), _198317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1bd27a530:;
						{
							_1ad8dde5b_pushErr(&(*_self_), _198317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1bd27a365:;
				};
			}
			_iter_next_1bd2795b7:;
			++it;
			goto _iter_begin_1bd2795b7;
		}
		_iter_end_1bd2795b7:;
	};
}



inline void _1ad8ecdc1_parse(jule::Ptr<_1ad8dd4ee_parser> _self_, jule::Ptr<_1a95a04b2_File>& _199530_f) {
	_self_.get()._field_ast=jule::new_ptr<_1ac4107d6_Ast>(_1ac4107d6_Ast{._field_File=_199530_f, });
	_1ad8ecb4b_checkRanges(_self_.ptr(), _199530_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _200517_stmts = _1ad8c19bb_splitStmts(_199530_f.get()._field_Tokens);;
	jule::I64 _200817_i = 0LL;;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1ad8c1625_stmt> _201021_stmt = _200517_stmts[_200817_i];;
			if ((_201021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201021_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1bd27d5ee;
			};
			if ((!(_1a92741db_IsTopDirective(_201021_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1bd27d5ee;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1ad8de896_buildDirective(_self_.ptr(), _201021_stmt.get()._field_tokens));;
		}
	_iter_next_1bd27d5ee:;
	}
	_iter_end_1bd27d5ee:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1ad8c1625_stmt> _202721_stmt = _200517_stmts[_200817_i];;
			_1ad8ebb39_appendNode(_self_, _202721_stmt.get()._field_tokens);
			if (_1ad8dda93_stopped(_self_.ptr())) {
				goto _iter_end_1bd2811d4;
			};
		}
	_iter_next_1bd2811d4:;
	}
	_iter_end_1bd2811d4:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ad8dde5b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8dd4ee_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1ad8eeb70_pushErr(_1ad8ee5cb_typeBuilder* _self_, jule::Ptr<_1a959a127_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_1ad8dde5b_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1ad8eee8e_pushSuggestion(_1ad8ee5cb_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_1ad8de27a_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900203_buildPrim(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1ac449eb3_TypeDecl> _8717_t = _1ad8edc7e_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900467_buildNamespace(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1ac449eb3_TypeDecl> _9317_t = jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1ac44b080_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1ac44b080_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a959a127_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1ad8eeb70_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1ad8eee8e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1bd28b046;
			};
			(_9817_n)++;
		}
	_iter_next_1bd28b046:;
	}
	_iter_end_1bd28b046:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_1ad900ba4_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _1ad9006cb_buildGenerics(_1ad8ee5cb_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1a959a127_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _13117_parts = _1ad900940_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1ad8eeb70_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1ac449eb3_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1bd293b86:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1ac449eb3_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1ad8e0875_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1ad8eeb70_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1bd293b86:;
			++it;
			goto _iter_begin_1bd293b86;
		}
		_iter_end_1bd293b86:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad900940_identGenerics(_1ad8ee5cb_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1a959a127_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1bd29785a:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1bd2978d2:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_1bd297629:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1bd2964c4;
			};
		}
	_iter_next_1bd2964c4:;
	}
	_iter_end_1bd2964c4:;;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _16818_parts;;
	jule::Slice<_1a92722b6_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1ad8dc2cd_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900ba4_buildIdent(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1ad900467_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1a959a127_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ac44a579_IdentTypeDecl> _18117_it = jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ac449eb3_TypeDecl> _18717_itd = jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_1ad9006cb_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1ad8eeb70_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1ad8eeb70_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1ac44abc8_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1ac44abc8_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_1ac449eb3_TypeDecl> _20617_ident = _1ad900ba4_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44a579_IdentTypeDecl>>()) {
			_case_begin_1bd2a2a74:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_1ac44a579_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44abc8_SubIdentTypeDecl>>()) {
			_case_begin_1bd2a2b40:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_1ac44abc8_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1bd2a2a1e:;
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad900e18_buildCppLink(_1ad8ee5cb_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1ad8eeb70_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1ac449eb3_TypeDecl> _22517_t = _1ad900ba4_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_1ac44a579_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad90117c_buildFn(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ac45bcc7_FnDecl> _23217_f = _1ad8e456b_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1ac45c129_IsAnon(_23217_f.ptr())))) {
		_1ad8eeb70_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9013e1_buildPtr(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1ad8eeb70_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44bd3e_PtrTypeDecl>(_1ac44bd3e_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1ac449eb3_TypeDecl> _26317_elem = _1ad902722_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44bd3e_PtrTypeDecl>(_1ac44bd3e_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901655_buildSptr(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1ad8eeb70_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ac449eb3_TypeDecl> _28417_elem = _1ad902722_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44b36b_SptrTypeDecl>(_1ac44b36b_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9018b9_buildOp(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bd2b11e2:;
			{
				return _1ad9013e1_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1bd2b1258:;
			{
				return _1ad901655_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1bd2b12be:;
			{
				return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44b36b_SptrTypeDecl>(_1ac44b36b_SptrTypeDecl{._field_Elem=_1ad901655_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1bd2b1137:;
			{
				_1ad8eeb70_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1bd2b108d:;
	};
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901b2d_buildSlc(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ac449eb3_TypeDecl> _31917_elem = _1ad902722_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44b767_SlcTypeDecl>(_1ac44b767_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad901d92_buildArr(_1ad8ee5cb_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1ad8eeb70_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_1ac449eb3_TypeDecl> _34217_elem = _1ad902722_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ac44c4c1_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1ac44c4c1_ArrTypeDecl>(_1ac44c4c1_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1a959a127_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _1ad8dba08_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_1a959a127_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_1ad8de588_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad902249_buildMap(_1ad8ee5cb_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_1a959a127_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1ad8eeb70_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1a959a127_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_1ad8eeb70_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1ac44cc1e_MapTypeDecl> _38117_mapt = jule::new_ptr<_1ac44cc1e_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1ac449eb3_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1ad8e0875_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_1ad8eeb70_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ac449eb3_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1ad8e0875_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad9024ad_buildEnumerable(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1ad8eeb70_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1ad901b2d_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1ad8ee0c0_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1ad901d92_buildArr(&(*_self_));
	};
	return _1ad902249_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad902722_step(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Ptr<_1a959a127_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1bd2c4854:;
			{
				return _1ad900203_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1bd2c4744:;
			{
				return _1ad900ba4_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bd2c47aa:;
			{
				return _1ad900e18_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1bd2c3b72:;
			{
				return _1ad90117c_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1bd2c3bd8:;
			{
				return _1ad9018b9_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1bd2c3c4e:;
			{
				return _1ad9024ad_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1bd2c3b0b:;
			{
				((*((*_self_)._field_i)))++;
				_1ad8eeb70_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1bd2c3985:;
	};
}



inline std::tuple<jule::Ptr<_1ac449eb3_TypeDecl>,jule::Bool> _1ad902986_build(_1ad8ee5cb_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1ac449eb3_TypeDecl> _45317_root = _1ad902722_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1ad8eda1a_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8ee5cb_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac263590_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ac264e43_pushErr(_1ac2648e3_directiveEval* _self_, jule::Ptr<_1a959a127_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1a9272706_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ac2652ea_splitOperans(_1ac2648e3_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1a959a127_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1bd2ead53:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1bd2e9c53;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1bd2eadb9:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1bd2eab44:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1bd2e9c53;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1bd2e9c53:;
	}
	_iter_end_1bd2e9c53:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1ac264e43_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1ac265608_evalDirectiveIdent(_1ac2648e3_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1bd2ee3c8:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1bd2ee3c8:;
			++it;
			goto _iter_begin_1bd2ee3c8;
		}
		_iter_end_1bd2ee3c8:;
	};
	return false;
}



inline jule::Bool _1ac265916_evalDirectivePart(_1ac2648e3_directiveEval* _self_, jule::Slice<jule::Ptr<_1a959a127_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1ac264e43_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1ac265608_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1ac265b7a_eval(_1ac2648e3_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1ac264e43_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _11317_logicalOrParts = _1ac2652ea_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1bd3055ee:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1a959a127_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _12021_logicalAndParts = _1ac2652ea_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1bd3069da:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1a959a127_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1a959a127_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1a959a127_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1ac264e43_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ac265916_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1bd3069da:;
						++it;
						goto _iter_begin_1bd3069da;
					}
					_iter_end_1bd3069da:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1bd3055ee:;
			++it;
			goto _iter_begin_1bd3055ee;
		}
		_iter_end_1bd3055ee:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2648e3_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a964cb25_JuleImporter> static__1a95b59a0_New(_1ac263590_CompileInfo _5819_info) {
	jule::Ptr<_1a964cb25_JuleImporter> _5917_imp = jule::new_ptr<_1a964cb25_JuleImporter>(_1a964cb25_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a9293eec_PathStdlib}), });;
	_1ac263da9_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _1a95c1c64_AllPackages(_1a964cb25_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1a95da9e7_SetModPath(_1a964cb25_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1a95e466b_GetModPath(_1a964cb25_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1a95e99a1_ModById(_1a964cb25_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1a964b8d2_GetImport(_1a964cb25_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1bd30de87:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_1bd30de87:;
			++it;
			goto _iter_begin_1bd30de87;
		}
		_iter_end_1bd30de87:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1ac4107d6_Ast>>,jule::Slice<_1a92722b6_Log>> _1a965309d_ImportPackage(_1a964cb25_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_1d9e50172_DirEntry>> _9717_dirents = ({
		auto except = static__1a91d4c40_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1a92722b6_Log>::make({_1a95b1bcc_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1ac274705_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1a92722b6_Log> _10525_errs = _1ac27498b_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1ac4107d6_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1ac4107d6_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1bd3131cd:;
		if (it != expr.end()) {
			jule::Ptr<_1d9e50172_DirEntry> _11316_dirent = *it;
			{
				if ((_1d9e3de63_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1a91579c6_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1bd3131cd;
				};
				jule::Str _11917__path = _1a91d4503_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1a95a04b2_File> _12021_file = _1a95a19e1_NewFileSet(_11917__path);;
				_1a95a0b44_Fill(_12021_file.ptr(), _1a944e20c_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1a92722b6_Log> _12221_errors = _1a95ac425_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1a9652036_FileInfo> _12721_finfo = _1ad8be5bd_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1ac249268_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1bd3131cd;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1a92722b6_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1a96556ee_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1bd3131cd;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1bd3131cd:;
			++it;
			goto _iter_begin_1bd3131cd;
		}
		_iter_end_1bd3131cd:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a9653dc3_Imported(_1a964cb25_JuleImporter* _self_, jule::Ptr<_1ad0dc11b_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1bd31dabd:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bd31dabd:;
			++it;
			goto _iter_begin_1bd31dabd;
		}
		_iter_end_1bd31dabd:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1bd3204a4:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1bd3204a4:;
				++it;
				_16217_i++;
				goto _iter_begin_1bd3204a4;
			}
			_iter_end_1bd3204a4:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1a92722b6_Log>> _1a96556ee_isPassBuildDirectives(_1a964cb25_JuleImporter* _self_, jule::Ptr<_1ac4107d6_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1bd32372c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1bd32372c;
				};
				_1ac2648e3_directiveEval _18421_de = _1ac2648e3_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1ac265b7a_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1bd32372c:;
			++it;
			goto _iter_begin_1bd32372c;
		}
		_iter_end_1bd32372c:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a964cb25_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad902d4e_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bd345ab2_isCommonOrdered(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>& _1835_s, jule::Ptr<_1ac43a6e0_Struct> _1844_t) {
	jule::Ptr<_1ac43a6e0_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1ac43a6e0_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1bd3489e9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1bd3489e9;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1bd3489e9:;
			++it;
			goto _iter_begin_1bd3489e9;
		}
		_iter_end_1bd3489e9:;
	};
	return false;
}

inline jule::Bool _1bd34de72_isCommonOrdered(jule::Slice<jule::Ptr<_1ad112097_Var>>& _1835_s, jule::Ptr<_1ad112097_Var> _1844_t) {
	jule::Ptr<_1ad112097_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1ad112097_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1bd351d65:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1bd351d65;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1bd351d65:;
			++it;
			goto _iter_begin_1bd351d65;
		}
		_iter_end_1bd351d65:;
	};
	return false;
}



inline void _1bd341b02_orderCommon(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1bd342e55:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1ac43a6e0_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1bd342e55:;
			++it;
			_4114_j++;
			goto _iter_begin_1bd342e55;
		}
		_iter_end_1bd342e55:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1bd345ab2_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1bd3454c9:;
			}
			_iter_end_1bd3454c9:;;
		}
	_iter_next_1bd342dcd:;
	}
	_iter_end_1bd342dcd:;;
}

inline void _1bd341d22_orderCommon(jule::Slice<jule::Ptr<_1ad112097_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1bd34b315:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1ad112097_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1bd34b315:;
			++it;
			_4114_j++;
			goto _iter_begin_1bd34b315;
		}
		_iter_end_1bd34b315:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1bd34de72_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1bd34d889:;
			}
			_iter_end_1bd34d889:;;
		}
	_iter_next_1bd34b28d:;
	}
	_iter_end_1bd34b28d:;;
}



inline void static__1ad8a57c4_orderStructures(jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>& _6136_structs) {
	_1bd341b02_orderCommon(_6136_structs);
}



inline void static__1a964b041_orderVars(jule::Slice<jule::Ptr<_1ad112097_Var>>& _6730_vars) {
	_1bd341d22_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad90303b_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad9e3967_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1ada25aed_optimizeChild(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c4994_Scope>& _3938_s) {
	jule::Ptr<_1ada25625_scopeDeadCode> _4017_sdc = jule::new_ptr<_1ada25625_scopeDeadCode>(_1ada25625_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ada2823d_optimizeStmts(_4017_sdc);
	};
}



inline void _1ada25d95_optimizeBodyChildExceptional(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c4994_Scope>& _5053_s) {
	jule::Ptr<_1ada25625_scopeDeadCode> _5117_sdc = jule::new_ptr<_1ada25625_scopeDeadCode>(_1ada25625_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1ada2823d_optimizeStmts(_5117_sdc);
	};
}



inline void _1ada2612b_optimizeBodyChild(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c4994_Scope>& _6142_s) {
	jule::Ptr<_1ada25625_scopeDeadCode> _6217_sdc = jule::new_ptr<_1ada25625_scopeDeadCode>(_1ada25625_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ada2823d_optimizeStmts(_6217_sdc);
	};
}



inline void _1ada263a1_optimizeExprModel(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1ada29580_exprDeadCode _7213_edc = static__1ada29b79_new(_self_);;
	_1ada30124_optimize(&_7213_edc, _7142_model);
}



inline void _1ada2657c_eliminateFollowed(_1ada25625_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1ada25625_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1bc83c6b4:;
	}
	_iter_end_1bc83c6b4:;;
}



inline void _1ada26802_pushGoto(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c5dc4_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bc8400e0:;
	}
	_iter_end_1bc8400e0:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>>::make({_9232_gt}));
}



inline void _1ada26a77_pushLabel(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c5bd7_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1bc841d5b;
			};
			(_10317_i)++;
		}
	_iter_next_1bc841d5b:;
	}
	_iter_end_1bc841d5b:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ad0c5bd7_Label>>::make({_10233_l}));
}



inline void _1ada26cec_optimizeRangeIter(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c5621_RangeIter> _11541_it) {
	_1ada263a1_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1ada2612b_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1ada27072_optimizeWhileIter(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c5434_WhileIter> _12041_it) {
	_1ada263a1_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1ada28062_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1ada2612b_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1ada272e7_optimizeInfIter(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c5247_InfIter> _12839_it) {
	_1ada2612b_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1ada2756c_optimizeConditional(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c505a_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bc8478ab:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c4b81_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1ada263a1_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1ada2612b_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1bc8478ab:;
			++it;
			goto _iter_begin_1bc8478ab;
		}
		_iter_end_1bc8478ab:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1ada25aed_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1ada2612b_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1ada277e2_optimizeMatch(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c6677_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bc84a518:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c6bc7_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bc84ad87:;
					if (it != expr.end()) {
						jule::Ptr<_1ad159188_Data> _15225_expr = *it;
						{
							_1ada263a1_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1bc84ad87:;
						++it;
						goto _iter_begin_1bc84ad87;
					}
					_iter_end_1bc84ad87:;
				};
				_1ada2612b_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1bc84a518:;
			++it;
			goto _iter_begin_1bc84a518;
		}
		_iter_end_1bc84a518:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1ada25aed_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1ada2612b_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1ada27a67_optimizeAssign(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c629d_Assign> _16838_assign) {
	_1ada263a1_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1ada263a1_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1ada27cdc_optimizeMultiAssign(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Ptr<_1ad0c648a_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bc84e330:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1ada263a1_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1bc84e330:;
			++it;
			goto _iter_begin_1bc84e330;
		}
		_iter_end_1bc84e330:;
	};
	_1ada263a1_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1ada28062_optimizeStmt(jule::Ptr<_1ada25625_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c4994_Scope>>()) {
			_case_begin_1bc85096e:;
			{
				jule::Ptr<_1ad0c4994_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1ad0c4994_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1ada28529_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1ada25aed_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
			_case_begin_1bc850ae5:;
			{
				_1ada26cec_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1ad0c5621_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
			_case_begin_1bc850b5b:;
			{
				_1ada27072_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1ad0c5434_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
			_case_begin_1bc850bc2:;
			{
				_1ada272e7_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1ad0c5247_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c505a_Conditional>>()) {
			_case_begin_1bc850c49:;
			{
				_1ada2756c_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1ad0c505a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
			_case_begin_1bc850cc1:;
			{
				_1ada277e2_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1ad0c6677_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c629d_Assign>>()) {
			_case_begin_1bc850d48:;
			{
				_1ada27a67_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1ad0c629d_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c648a_MultiAssign>>()) {
			_case_begin_1bc850dc0:;
			{
				_1ada27cdc_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1ad0c648a_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bc850e47:;
			{
				jule::Ptr<_1ad159188_Data> _20621_d = _18236_st.operator jule::Ptr<_1ad159188_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1bc850a7e;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>()) {
						_case_begin_1bc85636a:;
						{
							_1ada2657c_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bc8568cb:;
						{
							_1ada263a1_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1bc856876:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c71d3_RetSt>>()) {
			_case_begin_1bc850ebe:;
			{
				_1ada2657c_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5dc4_GotoSt>>()) {
			_case_begin_1bc851046:;
			{
				_1ada26802_pushGoto(_self_, _18236_st.operator jule::Ptr<_1ad0c5dc4_GotoSt>());
				_1ada2657c_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5bd7_Label>>()) {
			_case_begin_1bc8510bd:;
			{
				_1ada26a77_pushLabel(_self_, _18236_st.operator jule::Ptr<_1ad0c5bd7_Label>());
			}
		}
		_match_end_1bc850a7e:;
	};
}



inline void _1ada2823d_optimizeStmts(jule::Ptr<_1ada25625_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1ada28062_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1bc854500:;
	}
	_iter_end_1bc854500:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada25625_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1ada29580_exprDeadCode static__1ada29b79_new(jule::Ptr<_1ada25625_scopeDeadCode>& _4724_s) {
	return _1ada29580_exprDeadCode{._field_s=_4724_s};
}



inline void _1ada29dee_binary(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50a903_BinopExprModel> _5325_m) {
	_1ada30124_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_1ada30124_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _1ada2a174_unary(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50aae0_UnaryExprModel> _5824_m) {
	_1ada30124_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _1ada2a3e9_structureLit(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50aeb9_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1bc85beec:;
		if (it != expr.end()) {
			jule::Ptr<_1ac50accc_StructArgExprModel> _6321_arg = *it;
			{
				_1ada30124_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_1bc85beec:;
			++it;
			goto _iter_begin_1bc85beec;
		}
		_iter_end_1bc85beec:;
	};
}



inline void _1ada2a66e_allocStructure(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel> _6833_m) {
	_1ada2a3e9_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _1ada2a8e4_casting(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50b393_CastingExprModel> _7226_m) {
	_1ada30124_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _1ada2ab69_args(_1ada29580_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1bc85e274:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1ada30124_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1bc85e274:;
			++it;
			goto _iter_begin_1bc85e274;
		}
		_iter_end_1bc85e274:;
	};
}



inline void _1ada2adde_funcCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50b580_FnCallExprModel> _8227_m) {
	_1ada30124_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_1ada2ab69_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_1ada25d95_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _1ada2b164_slice(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50b76c_SliceExprModel> _9024_m) {
	_1ada2ab69_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _1ada2b3d9_array(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50cbe1_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_1ada30124_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_1ada2ab69_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _1ada2b65e_indexing(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50b959_IndexingExprModel> _10127_m) {
	_1ada30124_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_1ada30124_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _1ada2b8d4_anonFunc(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50bb46_AnonFnExprModel> _10627_m) {
	_1ada28529_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _1ada2bb59_map(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50c020_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1bd4757c4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac50bd33_KeyValPairExprModel> _11121_pair = *it;
			{
				_1ada30124_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_1ada30124_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_1bd4757c4:;
			++it;
			goto _iter_begin_1bd4757c4;
		}
		_iter_end_1bd4757c4:;
	};
}



inline void _1ada2bdce_slicing(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50c20c_SlicingExprModel> _11726_m) {
	_1ada30124_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_1ada30124_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_1ada30124_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _1ada2c154_traitSub(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel> _12527_m) {
	_1ada30124_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _1ada2c3c9_structureSub(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50c817_StructSubIdentExprModel> _12931_m) {
	_1ada30124_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _1ada2c64e_commonSub(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel> _13328_m) {
	_1ada30124_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _1ada2c8c4_tuple(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50d2a7_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bd479cb2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad159188_Data> _13821_d = *it;
			{
				_1ada30124_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_1bd479cb2:;
			++it;
			goto _iter_begin_1bd479cb2;
		}
		_iter_end_1bd479cb2:;
	};
}



inline void _1ada2cb49_newCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_1ada30124_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _1ada2cdbe_outCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel> _14926_m) {
	_1ada30124_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _1ada2d144_outlnCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel> _15328_m) {
	_1ada30124_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _1ada2d3b9_panicCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel> _15728_m) {
	_1ada30124_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _1ada2d63e_assertCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel> _16129_m) {
	_1ada30124_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _1ada2d8b4_errorCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel> _16528_m) {
	_1ada30124_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _1ada2db39_makeCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_1ada30124_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_1ada30124_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _1ada2ddae_appendCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel> _17829_m) {
	_1ada30124_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_1ada30124_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _1ada2e134_cloneCall(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel> _18328_m) {
	_1ada30124_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _1ada2e3a9_sizeof(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50c5d6_SizeofExprModel> _18725_m) {
	_1ada30124_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _1ada2e62e_alignof(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac50ed47_AlignofExprModel> _19126_m) {
	_1ada30124_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _1ada2e8a4_integratedToStr(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac510221_IntegratedToStrExprModel> _19534_m) {
	_1ada30124_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _1ada2eb29_free(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac5105ea_FreeExprModel> _19923_m) {
	_1ada30124_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _1ada2ed9e_backendEmit(_1ada29580_exprDeadCode* _self_, jule::Ptr<_1ac51040d_BackendEmitExprModel> _20330_m) {
	_1ada2ab69_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _1ada30124_optimize(_1ada29580_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
			_case_begin_1bd484e87:;
			{
				_1ada29dee_binary(&(*_self_), _20728_model.operator jule::Ptr<_1ac50a903_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
			_case_begin_1bd48500e:;
			{
				_1ada2a174_unary(&(*_self_), _20728_model.operator jule::Ptr<_1ac50aae0_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aeb9_StructLitExprModel>>()) {
			_case_begin_1bd485086:;
			{
				_1ada2a3e9_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_1ac50aeb9_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>>()) {
			_case_begin_1bd48542c:;
			{
				_1ada2a66e_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b393_CastingExprModel>>()) {
			_case_begin_1bd485493:;
			{
				_1ada2a8e4_casting(&(*_self_), _20728_model.operator jule::Ptr<_1ac50b393_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bd48551a:;
			{
				_1ada2adde_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50b580_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
			_case_begin_1bd485592:;
			{
				_1ada2b164_slice(&(*_self_), _20728_model.operator jule::Ptr<_1ac50b76c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50cbe1_ArrayExprModel>>()) {
			_case_begin_1bd485619:;
			{
				_1ada2b3d9_array(&(*_self_), _20728_model.operator jule::Ptr<_1ac50cbe1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b959_IndexingExprModel>>()) {
			_case_begin_1bd485691:;
			{
				_1ada2b65e_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1ac50b959_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50bb46_AnonFnExprModel>>()) {
			_case_begin_1bd485718:;
			{
				_1ada2b8d4_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_1ac50bb46_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c020_MapExprModel>>()) {
			_case_begin_1bd485790:;
			{
				_1ada2bb59_map(&(*_self_), _20728_model.operator jule::Ptr<_1ac50c020_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c20c_SlicingExprModel>>()) {
			_case_begin_1bd485817:;
			{
				_1ada2bdce_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1ac50c20c_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
			_case_begin_1bd48588e:;
			{
				_1ada2c154_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bd485916:;
			{
				_1ada2c3c9_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>>()) {
			_case_begin_1bd48598d:;
			{
				_1ada2c64e_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d2a7_TupleExprModel>>()) {
			_case_begin_1bd485a15:;
			{
				_1ada2c8c4_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1ac50d2a7_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>>()) {
			_case_begin_1bd485a8c:;
			{
				_1ada2cdbe_outCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1bd485b14:;
			{
				_1ada2d144_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>>()) {
			_case_begin_1bd485b8b:;
			{
				_1ada2cb49_newCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>()) {
			_case_begin_1bd485c13:;
			{
				_1ada2d3b9_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>>()) {
			_case_begin_1bd485c8a:;
			{
				_1ada2d63e_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bd485d12:;
			{
				_1ada2d8b4_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>>()) {
			_case_begin_1bd485d89:;
			{
				_1ada2db39_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>>()) {
			_case_begin_1bd485e11:;
			{
				_1ada2ddae_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1bd485e88:;
			{
				_1ada2e134_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c5d6_SizeofExprModel>>()) {
			_case_begin_1bd486010:;
			{
				_1ada2e3a9_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1ac50c5d6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50ed47_AlignofExprModel>>()) {
			_case_begin_1bd486087:;
			{
				_1ada2e62e_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1ac50ed47_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac510221_IntegratedToStrExprModel>>()) {
			_case_begin_1bd48610e:;
			{
				_1ada2e8a4_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_1ac510221_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5105ea_FreeExprModel>>()) {
			_case_begin_1bd486186:;
			{
				_1ada2eb29_free(&(*_self_), _20728_model.operator jule::Ptr<_1ac5105ea_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac51040d_BackendEmitExprModel>>()) {
			_case_begin_1bd48620d:;
			{
				_1ada2ed9e_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_1ac51040d_BackendEmitExprModel>());
			}
		}
		_match_end_1bd485185:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ada29580_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dbcb83c3_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac0eb626_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c16a67e3_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac0c0144_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac190610_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac0e3a4c_scopeOptimizer> static__1da02a77a_new(jule::Ptr<_1ad0c4994_Scope> _4523_scope) {
	return jule::new_ptr<_1ac0e3a4c_scopeOptimizer>(_1ac0e3a4c_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1dbcd2299_setCurrentStmt(_1ac0e3a4c_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1c169e1ae_optimizeData(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad159188_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bd4c11b0:;
			{
				jule::Ptr<_1ac50b580_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1ac50b580_FnCallExprModel>();;
				if (_1da020d7a_Production) {
					if (((!(_1ac516bb7_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1abe24a7b_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1dbcd2299_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bd4c0ea1:;
	};
	static__1abe97813_optimize(_5535_d.get()._field_Model);
}



inline void _1c16a8042_optimizeVar(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad112097_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1abe97813_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1aa3ec60a_optimizeConditional(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c505a_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bd4c42b2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c4b81_If> _7721_elif = *it;
			{
				static__1abe97813_optimize(_7721_elif.get()._field_Expr);
				_1abde75dc_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1bd4c42b2:;
			++it;
			goto _iter_begin_1bd4c42b2;
		}
		_iter_end_1bd4c42b2:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1abde75dc_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1aa436138_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bd4c623c:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1ad0c4b81_If> _9221_elif = *it;
			{
				if ((!(_1abe3069c_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1bd4c623c;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1ad0c4d6d_Else>(_1ad0c4d6d_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1bd4c623c;
			}
			_iter_next_1bd4c623c:;
			++it;
			_9214_i++;
			goto _iter_begin_1bd4c623c;
		}
		_iter_end_1bd4c623c:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ad0c4b81_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1ad0c4b81_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1abdcbe40_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1bd4c9581:;
	}
	_iter_end_1bd4c9581:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bd4cace1:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1ad0c4b81_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1bd4cace1:;
			++it;
			_12913_j++;
			goto _iter_begin_1bd4cace1;
		}
		_iter_end_1bd4cace1:;
	};
	if ((_12817_only != -1LL)) {
		_1dbcd2299_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1aa41c99e_buildDefaultConstatTrueCase(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c6bc7_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1ad0c6677_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1bd4cd4db;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1ad0c6ee6_FallSt>>()) {
					_case_begin_1bd4cdd9e:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1bd4cd4db;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1bd4d03de:;
					{
						goto _iter_end_1bd4cd4db;
					}
				}
				_match_end_1bd4d0301:;
			};
		}
	_iter_next_1bd4cd4db:;
	}
	_iter_end_1bd4cd4db:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1aa42d163_optimizeMatch(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c6677_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bd4d2479:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c6bc7_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bd4d2d1a:;
					if (it != expr.end()) {
						jule::Ptr<_1ad159188_Data> _17325_expr = *it;
						{
							static__1abe97813_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1bd4d2d1a:;
						++it;
						goto _iter_begin_1bd4d2d1a;
					}
					_iter_end_1bd4d2d1a:;
				};
				_1abde75dc_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1bd4d2479:;
			++it;
			goto _iter_begin_1bd4d2479;
		}
		_iter_end_1bd4d2479:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1abde75dc_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1aa436138_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bd4d4a97:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1ad0c6bc7_Case> _18925_case = *it;
			{
				if ((!(_1abe854c1_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1bd4d4a97;
				};
				_18617_constCase=true;
				_1aa41c99e_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1bd4d4a97;
			}
			_iter_next_1bd4d4a97:;
			++it;
			_18918_i++;
			goto _iter_begin_1bd4d4a97;
		}
		_iter_end_1bd4d4a97:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ad0c6bc7_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1ad0c6bc7_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1abe8dc16_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1bd4d7946:;
	}
	_iter_end_1bd4d7946:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bd4d8ae0:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1ad0c6bc7_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1bd4d8ae0:;
			++it;
			_21913_j++;
			goto _iter_begin_1bd4d8ae0;
		}
		_iter_end_1bd4d8ae0:;
	};
	if ((_21817_only != -1LL)) {
		_1dbcd2299_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1aa491dca_optimizeRangeIter(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c5621_RangeIter> _23540_it) {
	static__1abe97813_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1abde75dc_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1aa495c14_optimizeWhileIter(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c5434_WhileIter> _24040_it) {
	static__1abe97813_optimize(_24040_it.get()._field_Expr);
	_1abdceb8a_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1abde75dc_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1aa4b4ae0_substr(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c629d_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50c20c_SlicingExprModel>>()) {
			_case_begin_1bd4dcce2:;
			{
				jule::Ptr<_1ac50c20c_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1ac50c20c_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1dbcd2299_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1ac0c0144_MutSlicingExprModel>(_1ac0c0144_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1bd4dcc8c:;
	};
	return false;
}



inline jule::Bool _1aa4b741c_strInsert(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c629d_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
			_case_begin_1bd4e0201:;
			{
				jule::Ptr<_1ac50a903_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1ac50a903_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1dbcd2299_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1ac190610_StrInsertBeginExprModel>(_1ac190610_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1bd4e019b:;
	};
	return false;
}



inline jule::Bool _1aa4b9d04_strAssign(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c629d_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1ad189c02_Prim> _28213_lp = _1ad18733c_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1ad18ce36_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1aa4b4ae0_substr(&(*_self_), _27832_a) || _1aa4b741c_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1bd4e3b2d:;
			{
				return true;
			}
		}
		_match_end_1bd4e3a95:;
	};
	return false;
}



inline void _1aa4bc6db_optimizeAssign(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c629d_Assign> _29437_assign) {
	if ((_1da02a901_Copy && _1aa4b9d04_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1abe97813_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1abe97813_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bd4e5aec:;
			{
				if ((_1c16baa6b_Math && (_1ad18878e_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1ac50a903_BinopExprModel>(_1ac50a903_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1abe97813_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
							_case_begin_1bd4e7c97:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1ac50a716_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1bd4e7db8:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1bd4e5a42:;
	};
	if (_1c16ba692_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>>()) {
				_case_begin_1bd4e9b56:;
				{
					jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
							_case_begin_1bd4eabbd:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>() || _match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
										_case_begin_1bd4eb4a4:;
										{
											_1dbcd2299_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1c16a67e3_PushToSliceExprModel>(_1c16a67e3_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1ac50b76c_SliceExprModel>()})));
										}
									}
									_match_end_1bd4eb44e:;
								};
							}
						}
						_match_end_1bd4eaa14:;
					};
				}
			}
			_match_end_1bd4e667a:;
		};
	};
}



inline void _1abdb3333_optimizeMultiAssign(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c648a_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bd4e604d:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1abe97813_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1bd4e604d:;
			++it;
			_34514_i++;
			goto _iter_begin_1bd4e604d;
		}
		_iter_end_1bd4e604d:;
	};
	static__1abe97813_optimize(_34442_assign.get()._field_R);
}



inline void _1abdcc814_optimizeRet(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c71d3_RetSt> _35434_r) {
	static__1abe97813_optimize(_35434_r.get()._field_Expr);
}



inline void _1abdceb8a_optimizeStmt(_1ac0e3a4c_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c4994_Scope>>()) {
			_case_begin_1bd4ee177:;
			{
				_1abde75dc_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c4994_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bd4ee1dd:;
			{
				_1c169e1ae_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad159188_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bd4ee254:;
			{
				_1c16a8042_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad112097_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c505a_Conditional>>()) {
			_case_begin_1bd4ee2ba:;
			{
				_1aa3ec60a_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c505a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
			_case_begin_1bd4ee331:;
			{
				_1aa491dca_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c5621_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
			_case_begin_1bd4ee397:;
			{
				_1aa495c14_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c5434_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
			_case_begin_1bd4ee40d:;
			{
				_1abde75dc_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c5247_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c629d_Assign>>()) {
			_case_begin_1bd4ee474:;
			{
				_1aa4bc6db_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c629d_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c648a_MultiAssign>>()) {
			_case_begin_1bd4ee4da:;
			{
				_1abdb3333_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c648a_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
			_case_begin_1bd4ee562:;
			{
				_1aa42d163_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c6677_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c71d3_RetSt>>()) {
			_case_begin_1bd4ee5d9:;
			{
				_1abdcc814_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1ad0c71d3_RetSt>());
			}
		}
		_match_end_1bd4ee023:;
	};
}



inline void _1abde75dc_optimizeChild(_1ac0e3a4c_scopeOptimizer* _self_, jule::Ptr<_1ad0c4994_Scope> _38536_child) {
	jule::Ptr<_1ac0e3a4c_scopeOptimizer> _38617_so = static__1da02a77a_new(_38536_child);;
	_1abe00b34_optimize(_38617_so.ptr());
}



inline void _1abe00b34_optimize(_1ac0e3a4c_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bd505513:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1abdceb8a_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1bd505513:;
			++it;
			_39214_i++;
			goto _iter_begin_1bd505513;
		}
		_iter_end_1bd505513:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac0e3a4c_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1abe97813_optimize(jule::Any& _5529_model) {
	if (_1ad930db0_exprEnabled) {
		jule::Ptr<_1aa427811_exprOptimizer> _5821_exop = jule::new_ptr<_1aa427811_exprOptimizer>(_1aa427811_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_1ac1a3700_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1abe9cbc0_strCond(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50a903_BinopExprModel> _6526_m) {
	jule::Ptr<_1ad189c02_Prim> _6613_lp = _1ad18733c_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1ad18ce36_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd50eb49:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1bd50eae4:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd510b4a:;
			{
				goto _match_end_1bd510a5c;
			}
		}
		else {
			_case_begin_1bd510ac3:;
			{
				return true;
			}
		}
		_match_end_1bd510a5c:;
	};
	_julec_label_opt:;
	jule::Ptr<_1ac49c202_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1ac49c202_Const>();;
	if ((!(_1ac503ab6_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1bd512410:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1bd512476:;
			{
				jule::Ptr<_1a959a127_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1ac50aae0_UnaryExprModel>(_1ac50aae0_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d0ba_CommonSubIdentExprModel>(_1ac50d0ba_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_1bd5122de:;
	};
	return true;
}



inline void _1abea2774_binary(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50a903_BinopExprModel> _11325_m) {
	static__1abe97813_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__1abe97813_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd516414:;
			{
				goto _match_end_1bd515dd6;
			}
		}
		else {
			_case_begin_1bd515e80:;
			{
				return;;
			}
		}
		_match_end_1bd515dd6:;
	};
	if ((_1aa436138_Cond && _1abe9cbc0_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1c16baa6b_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bd5170d5:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1da02a538_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1ac49c202_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1ac49c202_Const>();;
					_1ac504a62_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1bd51714b:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1da02a538_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1ac49c202_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1ac49c202_Const>();;
					_1ac504a62_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1bd5171c3:;
			{
				jule::Ptr<_1ac49c202_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1ac49c202_Const>();;
				jule::F64 _15017_d = _1ac504567_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1ac5047dc_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1bd517080:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1dbcb83c3_UnsafeBinopExprModel>(_1dbcb83c3_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1abea4006_unary(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50aae0_UnaryExprModel> _16024_m) {
	static__1abe97813_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_1aa41859e_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
				_case_begin_1bd51e483:;
				{
					jule::Ptr<_1ac50aae0_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1ac50aae0_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1bd51e42d:;
		};
	};
}



inline void _1abeb1497_structureLit(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50aeb9_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1bd520ece:;
		if (it != expr.end()) {
			jule::Ptr<_1ac50accc_StructArgExprModel> _17421_arg = *it;
			{
				static__1abe97813_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_1bd520ece:;
			++it;
			goto _iter_begin_1bd520ece;
		}
		_iter_end_1bd520ece:;
	};
}



inline void _1ac09cc6a_allocStructure(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel> _17933_m) {
	_1abeb1497_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _1ac0e4e7c_casting(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50b393_CastingExprModel> _18326_m) {
	static__1abe97813_optimize(_18326_m.get()._field_Expr);
}



inline void _1ac0ea68b_args(_1aa427811_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1bd522a19:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1abe97813_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1bd522a19:;
			++it;
			_18814_i++;
			goto _iter_begin_1bd522a19;
		}
		_iter_end_1bd522a19:;
	};
}



inline void _1ac1014c7_scope(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ad0c4994_Scope>& _19425_s) {
	jule::Ptr<_1ac0e3a4c_scopeOptimizer> _19517_scopt = static__1da02a77a_new(_19425_s);;
	_1abe00b34_optimize(_19517_scopt.ptr());
}



inline void _1ac12c404_funcCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50b580_FnCallExprModel> _19927_m) {
	static__1abe97813_optimize(_19927_m.get()._field_Expr);
	_1ac0ea68b_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_1ac1014c7_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _1ac12c1c3_slice(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50b76c_SliceExprModel> _20724_m) {
	_1ac0ea68b_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _1ac174d31_array(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50cbe1_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__1abe97813_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_1ac0ea68b_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _1ac19ec07_indexing(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50b959_IndexingExprModel> _22027_m) {
	static__1abe97813_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__1abe97813_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_1aa405e1b_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_1ad188052_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _1ad159a4b_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1ac0eb626_UnsafeIndexingExprModel>(_1ac0eb626_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bd52b627:;
			{
				jule::Ptr<_1ad112097_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1ad112097_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1bd52b4c3;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
						_case_begin_1bd52cddc:;
						{
							jule::Ptr<_1ad112097_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1ad112097_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1ac0eb626_UnsafeIndexingExprModel>(_1ac0eb626_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1bd52cd87:;
				};
			}
		}
		_match_end_1bd52b4c3:;
	};
}



inline void _1ac1a4b1e_anonFunc(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50bb46_AnonFnExprModel> _25127_m) {
	_1ac1014c7_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _1ac1a5515_map(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50c020_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1bd530571:;
		if (it != expr.end()) {
			jule::Ptr<_1ac50bd33_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1abe97813_optimize(_25621_pair.get()._field_Key);
				static__1abe97813_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_1bd530571:;
			++it;
			goto _iter_begin_1bd530571;
		}
		_iter_end_1bd530571:;
	};
}



inline void _1ac1a7c21_slicing(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50c20c_SlicingExprModel> _26226_m) {
	static__1abe97813_optimize(_26226_m.get()._field_Expr);
	static__1abe97813_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__1abe97813_optimize(_26226_m.get()._field_Right);
	};
}



inline void _1aa3ebdac_traitSub(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel> _27027_m) {
	static__1abe97813_optimize(_27027_m.get()._field_Expr);
}



inline void _1aa41acaa_structureSub(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50c817_StructSubIdentExprModel> _27431_m) {
	static__1abe97813_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _1abe7b72b_commonSub(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel> _27828_m) {
	static__1abe97813_optimize(_27828_m.get()._field_Expr);
}



inline void _1ac0a0069_tuple(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50d2a7_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bd533a08:;
		if (it != expr.end()) {
			jule::Ptr<_1ad159188_Data> _28321_d = *it;
			{
				static__1abe97813_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_1bd533a08:;
			++it;
			goto _iter_begin_1bd533a08;
		}
		_iter_end_1bd533a08:;
	};
}



inline void _1ac0e0cd0_newCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__1abe97813_optimize(_28826_m.get()._field_Init);
	};
}



inline void _1ac134e67_outCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel> _29426_m) {
	static__1abe97813_optimize(_29426_m.get()._field_Expr);
}



inline void _1ac154b24_outlnCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel> _29828_m) {
	static__1abe97813_optimize(_29828_m.get()._field_Expr);
}



inline void _1ac0e8d3d_panicCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel> _30228_m) {
	static__1abe97813_optimize(_30228_m.get()._field_Expr);
}



inline void _1abe86181_assertCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel> _30629_m) {
	static__1abe97813_optimize(_30629_m.get()._field_Expr);
}



inline void _1ac0a1367_errorCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel> _31028_m) {
	static__1abe97813_optimize(_31028_m.get()._field_Err);
}



inline void _1ac0c858c_makeCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__1abe97813_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__1abe97813_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _1ac0d725a_appendCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel> _32329_m) {
	static__1abe97813_optimize(_32329_m.get()._field_Dest);
	static__1abe97813_optimize(_32329_m.get()._field_Elements);
}



inline void _1ac153480_cloneCall(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel> _32828_m) {
	static__1abe97813_optimize(_32828_m.get()._field_Expr);
}



inline void _1aa528ea6_sizeof(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50c5d6_SizeofExprModel> _33225_m) {
	static__1abe97813_optimize(_33225_m.get()._field_Expr);
}



inline void _1abdcdb9a_alignof(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac50ed47_AlignofExprModel> _33626_m) {
	static__1abe97813_optimize(_33626_m.get()._field_Expr);
}



inline void _1ac0c637b_integratedToStr(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac510221_IntegratedToStrExprModel> _34034_m) {
	static__1abe97813_optimize(_34034_m.get()._field_Expr);
}



inline void _1ac0e05c6_free(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac5105ea_FreeExprModel> _34423_m) {
	static__1abe97813_optimize(_34423_m.get()._field_Expr);
}



inline void _1ac0e64cd_backendEmit(_1aa427811_exprOptimizer* _self_, jule::Ptr<_1ac51040d_BackendEmitExprModel> _34830_m) {
	_1ac0ea68b_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _1ac1a3700_do(_1aa427811_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
			_case_begin_1bd53b2d5:;
			{
				_1abea2774_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50a903_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
			_case_begin_1bd53b59e:;
			{
				_1abea4006_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50aae0_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aeb9_StructLitExprModel>>()) {
			_case_begin_1bd53b615:;
			{
				_1abeb1497_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50aeb9_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>>()) {
			_case_begin_1bd53b67b:;
			{
				_1ac09cc6a_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b393_CastingExprModel>>()) {
			_case_begin_1bd53b6e2:;
			{
				_1ac0e4e7c_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50b393_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bd53b769:;
			{
				_1ac12c404_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50b580_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
			_case_begin_1bd53b7e1:;
			{
				_1ac12c1c3_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50b76c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50cbe1_ArrayExprModel>>()) {
			_case_begin_1bd53b868:;
			{
				_1ac174d31_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50cbe1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b959_IndexingExprModel>>()) {
			_case_begin_1bd53b8e0:;
			{
				_1ac19ec07_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50b959_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50bb46_AnonFnExprModel>>()) {
			_case_begin_1bd53b967:;
			{
				_1ac1a4b1e_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50bb46_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c020_MapExprModel>>()) {
			_case_begin_1bd53b9de:;
			{
				_1ac1a5515_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50c020_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c20c_SlicingExprModel>>()) {
			_case_begin_1bd53ba66:;
			{
				_1ac1a7c21_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50c20c_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
			_case_begin_1bd53badd:;
			{
				_1aa3ebdac_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bd53bb65:;
			{
				_1aa41acaa_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>>()) {
			_case_begin_1bd53bbdc:;
			{
				_1abe7b72b_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d2a7_TupleExprModel>>()) {
			_case_begin_1bd53bc64:;
			{
				_1ac0a0069_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50d2a7_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>>()) {
			_case_begin_1bd53bcdb:;
			{
				_1ac134e67_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1bd53bd63:;
			{
				_1ac154b24_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>>()) {
			_case_begin_1bd53bdda:;
			{
				_1ac0e0cd0_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>()) {
			_case_begin_1bd53be62:;
			{
				_1ac0e8d3d_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>>()) {
			_case_begin_1bd53bed9:;
			{
				_1abe86181_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bd53c061:;
			{
				_1ac0a1367_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>>()) {
			_case_begin_1bd53c0d8:;
			{
				_1ac0c858c_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>>()) {
			_case_begin_1bd53c160:;
			{
				_1ac0d725a_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1bd53c1d7:;
			{
				_1ac153480_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c5d6_SizeofExprModel>>()) {
			_case_begin_1bd53c25e:;
			{
				_1aa528ea6_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50c5d6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50ed47_AlignofExprModel>>()) {
			_case_begin_1bd53c2d6:;
			{
				_1abdcdb9a_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac50ed47_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac510221_IntegratedToStrExprModel>>()) {
			_case_begin_1bd53c35d:;
			{
				_1ac0c637b_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac510221_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5105ea_FreeExprModel>>()) {
			_case_begin_1bd53c3d5:;
			{
				_1ac0e05c6_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac5105ea_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac51040d_BackendEmitExprModel>>()) {
			_case_begin_1bd53c45c:;
			{
				_1ac0e64cd_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac51040d_BackendEmitExprModel>());
			}
		}
		_match_end_1bd53b280:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa427811_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad9eddd4_Optimizer> static__1ad95c86a_New(jule::Ptr<_1ad8ad38c_IR>& _2524_ir) {
	return jule::new_ptr<_1ad9eddd4_Optimizer>(_1ad9eddd4_Optimizer{._field_ir=_2524_ir});
}



inline void _1ad9315a8_optimizeGlobal(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ad112097_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1abe97813_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1ad98b404_optimizeFunction(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ac512b80_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd55320e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac515831_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1ac0e3a4c_scopeOptimizer> _4221_so = static__1da02a77a_new(_4121_ins.get()._field_Scope);;
				_1abe00b34_optimize(_4221_so.ptr());
			}
			_iter_next_1bd55320e:;
			++it;
			goto _iter_begin_1bd55320e;
		}
		_iter_end_1bd55320e:;
	};
}



inline void _1ad98b7ab_optimizeStruct(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ac43a6e0_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd554661:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1bd554ce3:;
					if (it != expr.end()) {
						jule::Ptr<_1ac442d57_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1abe97813_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1bd554ce3:;
						++it;
						goto _iter_begin_1bd554ce3;
					}
					_iter_end_1bd554ce3:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd55608b:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _5725_m = *it;
						{
							_1ad98b404_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1bd55608b:;
						++it;
						goto _iter_begin_1bd55608b;
					}
					_iter_end_1bd55608b:;
				};
			}
			_iter_next_1bd554661:;
			++it;
			goto _iter_begin_1bd554661;
		}
		_iter_end_1bd554661:;
	};
}



inline void _1ad98d23b_optimizeGlobals(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ad0e0075_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd5562de:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1bd557037:;
					if (it != expr.end()) {
						jule::Ptr<_1ad112097_Var> _6525_v = *it;
						{
							_1ad9315a8_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1bd557037:;
						++it;
						goto _iter_begin_1bd557037;
					}
					_iter_end_1bd557037:;
				};
			}
			_iter_next_1bd5562de:;
			++it;
			goto _iter_begin_1bd5562de;
		}
		_iter_end_1bd5562de:;
	};
}



inline void _1ad994396_optimizeFunctions(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ad0e0075_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd557675:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bd5583bd:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _7325_func = *it;
						{
							_1ad98b404_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1bd5583bd:;
						++it;
						goto _iter_begin_1bd5583bd;
					}
					_iter_end_1bd5583bd:;
				};
			}
			_iter_next_1bd557675:;
			++it;
			goto _iter_begin_1bd557675;
		}
		_iter_end_1bd557675:;
	};
}



inline void _1ad99a6ee_optimizeStructs(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ad0e0075_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd558a0b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1bd559754:;
					if (it != expr.end()) {
						jule::Ptr<_1ac43a6e0_Struct> _8125_s = *it;
						{
							_1ad98b7ab_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1bd559754:;
						++it;
						goto _iter_begin_1bd559754;
					}
					_iter_end_1bd559754:;
				};
			}
			_iter_next_1bd558a0b:;
			++it;
			goto _iter_begin_1bd558a0b;
		}
		_iter_end_1bd558a0b:;
	};
}



inline void _1ad9a385b_optimizePackage(_1ad9eddd4_Optimizer* _self_, jule::Ptr<_1ad0e0075_Package>& _8739_p) {
	_1ad98d23b_optimizeGlobals(&(*_self_), _8739_p);
	_1ad994396_optimizeFunctions(&(*_self_), _8739_p);
	_1ad99a6ee_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1ad9ade60_Optimize(_1ad9eddd4_Optimizer* _self_) {
	_1ad9b41eb_detectEnabled();
	if (_1c16a8dab_Deadcode) {
		_1ada24206_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1ad932015_scopeEnabled || _1ad930db0_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1bd559d4d:;
			if (it != expr.end()) {
				jule::Ptr<_1ad0dc11b_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1ad9a385b_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1bd559d4d:;
				++it;
				goto _iter_begin_1bd559d4d;
			}
			_iter_end_1bd559d4d:;
		};
		_1ad9a385b_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1c16a8dab_Deadcode) {
		_1ada28ea8_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ad9eddd4_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ada32544_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ada3380e_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ada32544_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ada33622_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ada34eb4_LogFlat(_1a92722b6_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1ada351c3_LogError(_1a92722b6_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1ada32544_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ad0c280a_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ad0c280a_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1a91d34be_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1a91d34be_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ad0c280a_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1a9138028_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1a9138028_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1a9138028_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ada3380e_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ada353d2_Log(_1a92722b6_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bd56b986:;
			{
				static__1ada34eb4_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bd56b9ec:;
			{
				static__1ada351c3_LogError(_6520_l);
			}
		}
		_match_end_1bd56b832:;
	};
}



inline void static__1ada355e1_PrintLogs(jule::Slice<_1a92722b6_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1bd5617e4:;
		if (it != expr.end()) {
			_1a92722b6_Log &_7616_l = *it;
			{
				static__1ada353d2_Log(_7616_l);
			}
			_iter_next_1bd5617e4:;
			++it;
			goto _iter_begin_1bd5617e4;
		}
		_iter_end_1bd5617e4:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ad0c280a_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ada34c0b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1badb4732_Unix(_1badb437a_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1badb9847_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1badb9bcc_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1badb437a_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1badb4a1d_Time static__1badb4db4_Unix(jule::U64 _9120_sec) {
	return _1badb4a1d_Time{._field_sec=_9120_sec};
}



inline _1badb4a1d_Time static__1badb50b2_Now(void) {
	return static__1badb4db4_Unix(static_cast<jule::U64>(_1badb9506_unix()));
}



inline jule::U64 _1badb5513_Unix(_1badb4a1d_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1badb5777_Day(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1badb59db_Month(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1badb5c50_Year(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1badb5eb4_Second(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1badb6228_Minute(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1badb648c_Hour(_1badb4a1d_Time* _self_) {
	return _1badb6701_Abs(&(*_self_))._field_Hour;
}



inline _1badb437a_AbsTime _1badb6701_Abs(_1badb4a1d_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1badb391d_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1badb391d_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1bd59892a:;
	}
	_iter_end_1bd59892a:;;
	_1badb437a_AbsTime _17417_t = _1badb437a_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1badb4a1d_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bad395a8_scopeCoder> static__1bad39bc4_new(jule::Ptr<_1badba21b_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1bad395a8_scopeCoder>(_1bad395a8_scopeCoder{._field_oc=_5524_oc});
}



inline void _1bad39e49_rangeIndexIter(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5621_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1bad55d22_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1bad56361_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1da02a901_Copy && _1bad3eb0d_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1bad4c4bc_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, _6213_begin);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1badbbd77_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1da02a901_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1bad3ee93_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1badbbd77_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	_1bad3e536_scope(_self_, _6139_it.get()._field_Scope);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, _6313_next);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1bada0553_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, static__1bad55a7a_var(_6139_it.get()._field_KeyA));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1bad9d573_write(_self_.get()._field_oc, _6213_begin);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad560b9_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1bad3a1be_rangeHashmapIter(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5621_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1bad55d22_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1bad56361_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1da02a901_Copy && _1bad3eb0d_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1bad4c4bc_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, _13013_begin);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1da02a901_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1bad3ee93_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1badbbd77_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1da02a901_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1bad3ee93_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1badbbd77_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	_1bad3e536_scope(_self_, _12941_it.get()._field_Scope);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, _13113_next);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1bad9d573_write(_self_.get()._field_oc, _13013_begin);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad560b9_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1bad3a444_ifCase(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c4b81_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1bad3e536_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1bad3a6b9_conditional(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c505a_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1bd64296e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c4b81_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1bd64296e;
				};
				if (_20517_writed) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1bad3a444_ifCase(_self_, _20621_elif);
			}
			_iter_next_1bd64296e:;
			++it;
			goto _iter_begin_1bd64296e;
		}
		_iter_end_1bd64296e:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1bad3e536_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1bad3a93e_infIter(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5247_InfIter> _22431_it) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad3e536_scope(_self_, _22431_it.get()._field_Scope);
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56361_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad560b9_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1bad3abb4_whileIter(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5434_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1bad3e03b_st(_self_, _24133_it.get()._field_Next);
		};
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad3e536_scope(_self_, _24133_it.get()._field_Scope);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56361_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad560b9_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1bad3ae39_rangeIter(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5621_RangeIter> _27433_it) {
	{
		
		if ((_1ad1882b6_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd652e35:;
			{
				_1bad39e49_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1ad188052_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd652b05:;
			{
				_1bad39e49_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1ad188c67_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd652b6b:;
			{
				_1bad3a1be_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1bd652a8e:;
			{
				_1bad39e49_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1bd6529b2:;
	};
}



inline void _1bad3b1ae_cont(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c580d_ContSt> _28724_c) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56361_iterNext(_28724_c.get()._field_It));
}



inline void _1bad3b434_label(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5bd7_Label> _29225_l) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56608_label(_29225_l.get()._field_Ident));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1bad3b6a9_gotoSt(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c5dc4_GotoSt> _29726_gt) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56608_label(_29726_gt.get()._field_Ident));
}



inline void _1bad3b92e_postfix(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c60b1_Postfix> _30231_p) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1bad9d573_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1bad3bba4_assign(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c629d_Assign> _30930_a) {
	_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1bad3be29_multiAssign(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c648a_MultiAssign> _31535_a) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1bd65c13c:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bd65c13c:;
			++it;
			_31714_i++;
			goto _iter_begin_1bd65c13c;
		}
		_iter_end_1bd65c13c:;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _1bad3c237_matchExpr(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c6677_Match> _33133_m) {
	if ((!(_1ad159a4b_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1ac505bea_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1ac503852_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1bad4c4bc_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1bad3c556_case(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c6677_Match> _34128_m, jule::Ptr<_1ad0c6bc7_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_1ad0c6a95_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1bd6651cd:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1ad159188_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_1bd667587:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _1bad3c237_matchExpr(_self_, _34128_m);;
								if (_1ad159d59_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_1bad9d573_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_1bad9d573_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bd665ee2:;
							{
								_1bad9d573_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1bad9d573_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_1bad9d573_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1bd665e15:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1bd6651cd:;
				++it;
				_34818_i++;
				goto _iter_begin_1bd6651cd;
			}
			_iter_end_1bd6651cd:;
		};
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_1bada0553_indent(_self_.get()._field_oc);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56b47_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1bada0553_indent(_self_.get()._field_oc);
		_1bad3e536_scope(_self_, _34143_c.get()._field_Scope);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1bad3c7cb_matchSt(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c6677_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _1ad0c6a95_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_1ad159a4b_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_1da02a901_Copy && _1bad3eb0d_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1bada0553_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1bd676ec0:;
			if (it != expr.end()) {
				jule::Ptr<_1ad0c6bc7_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1bd676ec0;
					};
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1bada0553_indent(_self_.get()._field_oc);
					_1bad3c556_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_1bd676ec0:;
				++it;
				goto _iter_begin_1bd676ec0;
			}
			_iter_end_1bd676ec0:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1bad3c556_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad568a0_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1bad3ca51_fallSt(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c6ee6_FallSt> _45626_f) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1bad9d573_write(_self_.get()._field_oc, static__1bad56b47_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _1bad3ccc6_breakSt(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c59ea_BreakSt> _46127_b) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_1bad9d573_write(_self_.get()._field_oc, static__1bad560b9_iterEnd(_46127_b.get()._field_It));
	} else {
		_1bad9d573_write(_self_.get()._field_oc, static__1bad568a0_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _1bad3d04b_retWithVars(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c71d3_RetSt> _47035_r) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_47035_r.get()._field_Func.get()._field_Result));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bd682618:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1ad112097_Var> _48021_v = *it;
			{
				if (_1a959c8bb_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_1bad4cc3c_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1bad9d573_write(_self_.get()._field_oc, static__1bad55a7a_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bd682618:;
			++it;
			_48014_i++;
			goto _iter_begin_1bd682618;
		}
		_iter_end_1bd682618:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1bad3d2c1_retTuple(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c71d3_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_1ad159188_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_1ac50d2a7_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1bd686ae5:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1ad112097_Var> _50221_v = *it;
			{
				if (_1a959c8bb_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_1bd686ae5;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1bd686ae5;
				};
				_1bad9d573_write(_self_.get()._field_oc, static__1bad55a7a_var(_50221_v));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1bada0553_indent(_self_.get()._field_oc);
			}
			_iter_next_1bd686ae5:;
			++it;
			_50214_i++;
			goto _iter_begin_1bd686ae5;
		}
		_iter_end_1bd686ae5:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_50032_r.get()._field_Func.get()._field_Result));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1bd68bb72:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1ad159188_Data> _52721_d = *it;
			{
				jule::Ptr<_1ad112097_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_1a959c8bb_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_1bad9d573_write(_self_.get()._field_oc, static__1bad55a7a_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bd68bb72:;
			++it;
			_52714_i++;
			goto _iter_begin_1bd68bb72;
		}
		_iter_end_1bd68bb72:;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1bad3d546_retWithExprs(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c71d3_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_1bad3d2c1_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1ad112097_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_1a959c8bb_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__1bad55a7a_var(_55321_v);;
			_1bad9d573_write(_self_.get()._field_oc, _55521_ident);
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1bada0553_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_54536_r.get()._field_Func.get()._field_Result));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1bad9d573_write(_self_.get()._field_oc, _55521_ident);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1bad9d573_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_54536_r.get()._field_Func.get()._field_Result));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _1bad3d7bb_retSt(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c71d3_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_1bad3d04b_retWithVars(_self_, _58929_r);
		return;;
	};
	_1bad3d546_retWithExprs(_self_, _58929_r);
}



inline void _1bad3dcb6_var(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad112097_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_1badbc0ec_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1bad3e03b_st(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c4994_Scope>>()) {
			_case_begin_1bd6a301d:;
			{
				_1bad3e536_scope(_self_, _63126_st.operator jule::Ptr<_1ad0c4994_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bd6a2bcc:;
			{
				_1bad3dcb6_var(_self_, _63126_st.operator jule::Ptr<_1ad112097_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bd6a3639:;
			{
				_1bad4c742_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1ad159188_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c505a_Conditional>>()) {
			_case_begin_1bd6a36a0:;
			{
				_1bad3a6b9_conditional(_self_, _63126_st.operator jule::Ptr<_1ad0c505a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
			_case_begin_1bd6a3716:;
			{
				_1bad3a93e_infIter(_self_, _63126_st.operator jule::Ptr<_1ad0c5247_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
			_case_begin_1bd6a377c:;
			{
				_1bad3abb4_whileIter(_self_, _63126_st.operator jule::Ptr<_1ad0c5434_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
			_case_begin_1bd6a37e3:;
			{
				_1bad3ae39_rangeIter(_self_, _63126_st.operator jule::Ptr<_1ad0c5621_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c580d_ContSt>>()) {
			_case_begin_1bd6a3859:;
			{
				_1bad3b1ae_cont(_self_, _63126_st.operator jule::Ptr<_1ad0c580d_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5bd7_Label>>()) {
			_case_begin_1bd6a38c0:;
			{
				_1bad3b434_label(_self_, _63126_st.operator jule::Ptr<_1ad0c5bd7_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5dc4_GotoSt>>()) {
			_case_begin_1bd6a3936:;
			{
				_1bad3b6a9_gotoSt(_self_, _63126_st.operator jule::Ptr<_1ad0c5dc4_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c60b1_Postfix>>()) {
			_case_begin_1bd6a399c:;
			{
				_1bad3b92e_postfix(_self_, _63126_st.operator jule::Ptr<_1ad0c60b1_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c629d_Assign>>()) {
			_case_begin_1bd6a3a13:;
			{
				_1bad3bba4_assign(_self_, _63126_st.operator jule::Ptr<_1ad0c629d_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c648a_MultiAssign>>()) {
			_case_begin_1bd6a3a8a:;
			{
				_1bad3be29_multiAssign(_self_, _63126_st.operator jule::Ptr<_1ad0c648a_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
			_case_begin_1bd6a3b12:;
			{
				_1bad3c7cb_matchSt(_self_, _63126_st.operator jule::Ptr<_1ad0c6677_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c6ee6_FallSt>>()) {
			_case_begin_1bd6a3b89:;
			{
				_1bad3ca51_fallSt(_self_, _63126_st.operator jule::Ptr<_1ad0c6ee6_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c59ea_BreakSt>>()) {
			_case_begin_1bd6a3c11:;
			{
				_1bad3ccc6_breakSt(_self_, _63126_st.operator jule::Ptr<_1ad0c59ea_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c71d3_RetSt>>()) {
			_case_begin_1bd6a3c88:;
			{
				_1bad3d7bb_retSt(_self_, _63126_st.operator jule::Ptr<_1ad0c71d3_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c16a67e3_PushToSliceExprModel>>()) {
			_case_begin_1bd6a3d10:;
			{
				_1bad4a454_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c16a67e3_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac0c0144_MutSlicingExprModel>>()) {
			_case_begin_1bd6a3d87:;
			{
				_1bad4bec2_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1ac0c0144_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac190610_StrInsertBeginExprModel>>()) {
			_case_begin_1bd6a3e0e:;
			{
				_1bad4c247_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1ac190610_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1bd6a2924:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bd6a28be:;
	};
}



inline void _1bad3e2b1_scopeStmts(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c4994_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1bd1554a4:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1bada0553_indent(_self_.get()._field_oc);
				_1bad3e03b_st(_self_, _68221_st);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bd1554a4:;
			++it;
			goto _iter_begin_1bd1554a4;
		}
		_iter_end_1bd1554a4:;
	};
}



inline void _1bad3e536_scope(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ad0c4994_Scope> _69029_s) {
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bad3e2b1_scopeStmts(_self_, _69029_s);
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1bad3e7ab_funcScope(jule::Ptr<_1bad395a8_scopeCoder> _self_, jule::Ptr<_1ac515831_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	if ((!(_1ac5130e2_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _71321_types = _1ac516953_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1bd15b279:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1a959a127_Token> _71420_ident = *it;
				{
					if ((_1a959c8bb_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _1a959cb63_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_1bd15b279;
					};
					_1bada0553_indent(_self_.get()._field_oc);
					_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_71321_types[_71417_i]));
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1bad9d573_write(_self_.get()._field_oc, static__1bad5446e_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1bad4cc3c_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1bd15b279:;
				++it;
				_71417_i++;
				goto _iter_begin_1bd15b279;
			}
			_iter_end_1bd15b279:;
		};
	};
	_1bad3e2b1_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _1ac5130e2_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1bad395a8_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bad420e9_exprCoder> static__1bad424e5_new(jule::Ptr<_1badba21b_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1bad420e9_exprCoder>(_1bad420e9_exprCoder{._field_oc=_9724_oc});
}



inline void _1bad4276a_string(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac49c202_Const>& _10327_c) {
	jule::Str _10413_content = _1ac503ab6_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1ad0c26c8_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1bad4d941_cstrLit(_10913_bytes);;
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad9d573_write(_self_.get()._field_oc, _11113_lit);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1bad9d573_write(_self_.get()._field_oc, _11013_len);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad429e0_boolean(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac49c202_Const>& _12028_c) {
	if (_1ac503852_ReadBool(_12028_c.ptr())) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1bad42bbb_nilLit(jule::Ptr<_1bad420e9_exprCoder> _self_) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1bad42ec9_ftoaSpecialCases(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_1ad016b4a_IsNaN(_13237_x)) {
			_case_begin_1bd17adc0:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1ad01de4e_IsInf(_13237_x,1LL)) {
			_case_begin_1bd17a683:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1ad01de4e_IsInf(_13237_x,-1LL)) {
			_case_begin_1bd17a6e9:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bd17a61c:;
			{
				return false;
			}
		}
		_match_end_1bd17a540:;
	};
	return true;
}



inline void _1bad4324e_float32(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac49c202_Const>& _14628_c) {
	jule::F64 _14713_x = _1ac504567_AsF64(_14628_c.ptr());;
	if (_1bad42ec9_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bd17d895:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bd17d598:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bd17ce16:;
			{
				_1bad9d573_write(_self_.get()._field_oc, _1bad4dc4e_ftoa(_14713_x,32LL));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1bd17d2ce:;
	};
}



inline void _1bad434c4_float64(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac49c202_Const>& _16528_c) {
	jule::F64 _16613_x = _1ac504567_AsF64(_16528_c.ptr());;
	if (_1bad42ec9_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1bd1818dc:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1bd18204c:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bd180e5d:;
			{
				_1bad9d573_write(_self_.get()._field_oc, _1bad4dc4e_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1bd181326:;
	};
}



inline void _1bad437e3_constant(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac49c202_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1ac505e5e_IsStr(_18432_c.ptr())) {
			_case_begin_1bd183856:;
			{
				_1bad4276a_string(_self_, _18432_c);
			}
		}
		else if (_1ac505bea_IsBool(_18432_c.ptr())) {
			_case_begin_1bd1838bc:;
			{
				_1bad429e0_boolean(_self_, _18432_c);
			}
		}
		else if (_1ac5061c3_IsF64(_18432_c.ptr())) {
			_case_begin_1bd183933:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1bd185b22:;
						{
							_1bad4324e_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1bd18577b:;
						{
							_1bad434c4_float64(_self_, _18432_c);
						}
					}
					_match_end_1bd18569e:;
				};
			}
		}
		else if (_1ac505722_IsI64(_18432_c.ptr())) {
			_case_begin_1bd183999:;
			{
				_1bad9d573_write(_self_.get()._field_oc, _1bad4dee6_itoa(static_cast<jule::I64>(_1ac503379_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_1ac505986_IsU64(_18432_c.ptr())) {
			_case_begin_1bd1842e6:;
			{
				_1bad9d573_write(_self_.get()._field_oc, _1bad4e28d_utoa(static_cast<jule::U64>(_1ac5035dd_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_1ac506437_IsNil(_18432_c.ptr())) {
			_case_begin_1bd18435c:;
			{
				_1bad42bbb_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bd1837e0:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bd183713:;
	};
}



inline void _1bad43bab_divByZeroBinary(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1a959a127_Token>& _20836_op, jule::Ptr<_1ac50a716_OperandExprModel>& _20853_l, jule::Ptr<_1ac50a716_OperandExprModel>& _20880_r) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1bd188dab:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bd188e22:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1bd188cac:;
	};
	if ((!(_1da020d7a_Production))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1bada193e_locInfo(_self_.get()._field_oc, _20836_op);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1bad4c742_expr(_self_, _20853_l.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1bad4c742_expr(_self_, _20880_r.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad43e31_unsafeBinary(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50a903_BinopExprModel> _23036_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad4c4bc_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1bad9d573_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1bad4c4bc_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad441a6_binary(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50a903_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1bd190500:;
			{
				if ((_1ad18878e_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1bad43bab_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1bd190445:;
	};
	_1bad43e31_unsafeBinary(_self_, _24030_m);
}



inline void _1bad4442b_var(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ad112097_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_1ac41195d_Directive> _25417_d = _1badc846b_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1bad9d573_write(_self_.get()._field_oc, _1badc0045_concatAllParts(_25417_d.get()._field_Args));
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1bad55a7a_var(_25227_m));
}



inline void _1bad446a1_structureIns(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac466a3a_StructIns> _26336_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1badc4500_structureIns(_26336_m));
}



inline void _1bad44926_unary(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50aae0_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bd195082:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1bad4c742_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bd1950e8:;
			{
				if ((_1da020d7a_Production || (_1ad1875a1_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1bd194ec7;
				};
				_1bad4c742_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1bada193e_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1bd194ec7:;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad9d573_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad4c742_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1bad44b9b_structureLit(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50aeb9_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1bad5553b_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd19c6d8:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1ac442d57_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1bd19d2aa:;
						if (it != expr.end()) {
							jule::Ptr<_1ac50accc_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_1bad9d573_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1bad9d573_write(_self_.get()._field_oc, static__1bad557d3_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_1bad9d573_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1bad4c742_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_1bad9d573_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1bd19c6d8;
								};
							}
							_iter_next_1bd19d2aa:;
							++it;
							goto _iter_begin_1bd19d2aa;
						}
						_iter_end_1bd19d2aa:;
					};
				}
				_iter_next_1bd19c6d8:;
				++it;
				_30417_i++;
				goto _iter_begin_1bd19c6d8;
			}
			_iter_end_1bd19c6d8:;
		};
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1bad44e21_allocStructure(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b1a6_AllocStructLitExprModel> _32238_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1bad9d573_write(_self_.get()._field_oc, static__1bad5553b_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1bad44b9b_structureLit(_self_, _32238_m.get()._field_Lit);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad45196_casting(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b393_CastingExprModel> _33031_m) {
	{
		
		if (((_1ad18733c_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bd1a415c:;
			{
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1bad4c4bc_model(_self_, _33031_m.get()._field_Expr);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1ad187815_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_1ad187815_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1a3d2c:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1bad4c742_expr(_self_, _33031_m.get()._field_Expr);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1ad188a03_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1ad18733c_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _1ad18d19a_IsAny(_1ad18733c_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_1ad187cdd_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bd1a3d93:;
			{
				_1bad4c4bc_model(_self_, _33031_m.get()._field_Expr);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1da020d7a_Production) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1ad1875a1_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_1ad1875a1_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
					};
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1bada193e_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1ad188a03_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd1a3e09:;
			{
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1bad4c742_expr(_self_, _33031_m.get()._field_Expr);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1bad9d573_write(_self_.get()._field_oc, _1ad0c280a_Itoa(static_cast<jule::I64>(_1bad8e8c7_findTypeOffset(_self_.get()._field_oc.ptr(), _1ad188a03_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1bd1a3cb6:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_33031_m.get()._field_Kind));
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1bad4c742_expr(_self_, _33031_m.get()._field_Expr);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bd1a3bd9:;
	};
}



inline void _1bad4541b_args(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1bd74737b:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1bad4c742_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bd74737b:;
			++it;
			_38514_i++;
			goto _iter_begin_1bd74737b;
		}
		_iter_end_1bd74737b:;
	};
}



inline void _1bad45691_modelForCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
			_case_begin_1bd74934a:;
			{
				_1bad48474_funcIns(_self_, _39336_expr.operator jule::Ptr<_1ac515831_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bd7493c2:;
			{
				jule::Ptr<_1ac50c817_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_1bad48474_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1bd74923a:;
	};
	_1bad4c4bc_model(_self_, _39336_expr);
}



inline void _1bad45916_pushCallInf(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b580_FnCallExprModel>& _40832_m) {
	if ((_1da020d7a_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_1bad4e90e_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
				_case_begin_1bd74c76b:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1bd74c947;
				}
			}
			else {
				_case_begin_1bd74c947:;
				{
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1bd74c826:;
		};
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1bada193e_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1bad45c24_isWrapped(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b580_FnCallExprModel>& _43334_m) {
	if ((((!(_1ac516bb7_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1ac511970_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
				_case_begin_1bd7514a6:;
				{
					jule::Ptr<_1ac50c817_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>();;
					{
						
						if (_1ac511bd4_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1ad1875a1_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1bd751cd1:;
							{
								goto _match_end_1bd752364;
							}
						}
						else {
							_case_begin_1bd7523ca:;
							{
								if ((_1ad18878e_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1bad9d573_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1bad4c4bc_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_1bad9d573_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1bd752364:;
					};
				}
			}
			_match_end_1bd751297:;
		};
	};
	return false;
}



inline void _1bad45e99_pureFuncCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b580_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _1bad45c24_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1bad45691_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_1ac516bb7_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1badc8801_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1bd758700:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1ad1839ed_InsGeneric> _46733_g = *it;
						{
							_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1bd758700:;
						++it;
						_46726_i++;
						goto _iter_begin_1bd758700;
					}
					_iter_end_1bd758700:;
				};
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1bad45916_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1ac516bb7_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1ac511970_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
				_case_begin_1bd757413:;
				{
					jule::Ptr<_1ac50c817_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>();;
					{
						
						if (_1ac511bd4_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1bd75e3c6:;
							{
								_1bad4c4bc_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1ad1875a1_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1bd75e937:;
							{
								_1bad4c4bc_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_1bad9d573_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1da020d7a_Production))) {
									_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1bada193e_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1bd75d02e:;
							{
								if ((_1ad18878e_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1bad9d573_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1bad9d573_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1bad4c4bc_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1bd75ceb8:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
				_case_begin_1bd75c0a5:;
				{
					_1bad4c4bc_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_1da020d7a_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1bd75be40:;
		};
	};
	_1bad4541b_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1bada193e_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1bad4621e_funcCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b580_FnCallExprModel> _53632_m) {
	if (((_1ac516bb7_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1bad45e99_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1bad45e99_pureFuncCall(_self_, _53632_m);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1bad3e536_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1bad4e645_isForwarded(_53632_m.get()._field_Except);;
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1bad3e536_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1bad4cc3c_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1bad9ed05_doneIndent(_self_.get()._field_oc);
	} else {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1bada193e_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1ac5130e2_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1bada0553_indent(_self_.get()._field_oc);
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1bad9ed05_doneIndent(_self_.get()._field_oc);
	};
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1bad46494_slice(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b76c_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_1bad9d573_write(_self_.get()._field_oc, static__1badc3433_asSlice(_58729_m.get()._field_ElemKind));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1badc3433_asSlice(_58729_m.get()._field_ElemKind));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1bad4541b_args(_self_, _58729_m.get()._field_Elems);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1bad46719_indexing(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50b959_IndexingExprModel> _59932_m) {
	_1bad4c4bc_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1da020d7a_Production || (_1ad187815_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1ad188c67_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd778038:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1bad4c742_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bd7787ca:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1bada193e_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1bad4c742_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bd778764:;
	};
}



inline void _1bad4698e_unsafeIndexing(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac0eb626_UnsafeIndexingExprModel> _61838_m) {
	_1bad4c4bc_model(_self_, _61838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1da020d7a_Production || (_1ad187815_Ptr(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1ad188c67_Map(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd77b3d2:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1bad4c742_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bd77ccb8:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1bad4c742_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bd77cc52:;
	};
}



inline void _1bad46c14_anonFunc(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50bb46_AnonFnExprModel> _63532_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5864_func(_63532_m.get()._field_Func));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1badbba58_paramsIns(_self_.get()._field_oc, _63532_m.get()._field_Func.get()._field_Params);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5325_funcInsResult(_63532_m.get()._field_Func));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1bad3e7ab_funcScope(_self_.get()._field_oc.get()._field_sc, _63532_m.get()._field_Func);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad46e89_map(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50c020_MapExprModel> _64627_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_64627_m.get()._field_KeyKind));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_64627_m.get()._field_ValKind));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1bd786783:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1ac50bd33_KeyValPairExprModel> _65325_pair = *it;
				{
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1bad4c742_expr(_self_, _65325_pair.get()._field_Key);
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1bad4c742_expr(_self_, _65325_pair.get()._field_Val);
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_Entries.len() - _65318_i) > 1LL)) {
						_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1bd786783:;
				++it;
				_65318_i++;
				goto _iter_begin_1bd786783;
			}
			_iter_end_1bd786783:;
		};
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1bad4720e_slicing(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50c20c_SlicingExprModel> _66731_m) {
	_1bad4c4bc_model(_self_, _66731_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1da020d7a_Production))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1bada193e_locInfo(_self_.get()._field_oc, _66731_m.get()._field_Token);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1bad4c742_expr(_self_, _66731_m.get()._field_Left);
	if ((_66731_m.get()._field_Right != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1bad4c742_expr(_self_, _66731_m.get()._field_Right);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad47484_traitSub(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel> _68332_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad54c55_traitDecl(_68332_m.get()._field_Trt));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1bad4c4bc_model(_self_, _68332_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1bad9d573_write(_self_.get()._field_oc, static__1bad54716_func(_68332_m.get()._field_Method));
}



inline void _1bad47709_structureSub(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50c817_StructSubIdentExprModel> _69236_m) {
	_1bad4c4bc_model(_self_, _69236_m.get()._field_Expr.get()._field_Model);
	if ((_69236_m.get()._field_Field != nullptr)) {
		if ((_1ad187815_Ptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1ad1875a1_Sptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1da020d7a_Production))) {
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1bada193e_locInfo(_self_.get()._field_oc, _69236_m.get()._field_Token);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1bad9d573_write(_self_.get()._field_oc, static__1bad557d3_field(_69236_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1bad4797e_commonIdent(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50cdcd_CommonIdentExprModel> _71231_m) {
	_1bad9d573_write(_self_.get()._field_oc, _71231_m.get()._field_Ident);
}



inline void _1bad47c04_commonSub(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel> _71633_m) {
	_1bad4c4bc_model(_self_, _71633_m.get()._field_Expr);
	{
		
		if ((_1ad187815_Ptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bd795b38:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1ad1875a1_Sptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bd796364:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1da020d7a_Production))) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1bada193e_locInfo(_self_.get()._field_oc, _71633_m.get()._field_Token);
					_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1bd7962ed:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1bd796287:;
	};
	_1bad9d573_write(_self_.get()._field_oc, _71633_m.get()._field_Ident);
}



inline void _1bad47e79_array(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50cbe1_ArrayExprModel> _73529_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1badc4797_array(_73529_m.get()._field_Kind));
	if ((_73529_m.get()._field_Elems.len() == 0LL)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_Elems.len() == 2LL) && (_73529_m.get()._field_Elems[1LL] == nullptr))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1bad4c742_expr(_self_, _73529_m.get()._field_Elems[0LL]);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1bad4541b_args(_self_, _73529_m.get()._field_Elems);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1bad481ee_funcInsCommon(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac515831_FnIns> _75837_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5864_func(_75837_m));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad48474_funcIns(_self_, _75837_m);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad48474_funcIns(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac515831_FnIns> _76531_m) {
	if (((_76531_m.get()._field_Decl != nullptr) && _76531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1ac41195d_Directive> _76717_d = _1badc846b_findDirective(_76531_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1bad9d573_write(_self_.get()._field_oc, _1badc0045_concatAllParts(_76717_d.get()._field_Args));
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1bad549ad_funcIns(_76531_m));
}



inline void _1bad486e9_tuple(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50d2a7_TupleExprModel> _77629_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1bd7a39ae:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1ad159188_Data> _77821_d = *it;
			{
				_1bad4c742_expr(_self_, _77821_d.get()._field_Model);
				if (((_77629_m.get()._field_Datas.len() - _77814_i) > 1LL)) {
					_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bd7a39ae:;
			++it;
			_77814_i++;
			goto _iter_begin_1bd7a39ae;
		}
		_iter_end_1bd7a39ae:;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4896e_newCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel> _78731_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_78731_m.get()._field_Kind));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78731_m.get()._field_Init != nullptr)) {
		_1bad4c742_expr(_self_, _78731_m.get()._field_Init);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad48be4_outCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50d494_BuiltinOutCallExprModel> _79731_m) {
	if ((_79731_m.get()._field_Debug && _1da020d7a_Production)) {
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1bad4c742_expr(_self_, _79731_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad48e69_outlnCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel> _80633_m) {
	if ((_80633_m.get()._field_Debug && _1da020d7a_Production)) {
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1bad4c742_expr(_self_, _80633_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad491de_panicCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel> _81533_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1bad4c742_expr(_self_, _81533_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1bada193e_locInfo(_self_.get()._field_oc, _81533_m.get()._field_Token);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1bad49464_assertCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel> _82334_m) {
	if (_1da020d7a_Production) {
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1bad4c742_expr(_self_, _82334_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1bad9d573_write(_self_.get()._field_oc, _1bad4d941_cstrLit(static_cast<jule::Slice<jule::U8>>(_82334_m.get()._field_Log)));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1bada193e_locInfo(_self_.get()._field_oc, _82334_m.get()._field_Token);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1bad496d9_errorCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel> _83633_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1ac5130e2_IsVoid(_83633_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_83633_m.get()._field_Func.get()._field_Result));
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1bad4c742_expr(_self_, _83633_m.get()._field_Err);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4995e_copyCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e4ea_BuiltinCopyCallExprModel> _84932_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1bad4c4bc_model(_self_, _84932_m.get()._field_Dest.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ad18733c_Prim(_84932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1bad4c4bc_model(_self_, _84932_m.get()._field_Src.get()._field_Model);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ad18733c_Prim(_84932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad49bd4_makeCallSlice(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>& _86538_m) {
	jule::Ptr<_1ad18dde3_Slc> _86617_slice = _1ad1882b6_Slc(_86538_m.get()._field_Kind.ptr());;
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_86538_m.get()._field_Kind));
	if ((_1ad187a79_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86538_m.get()._field_Cap != nullptr)) {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1bad9d573_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1bad4c742_expr(_self_, _86538_m.get()._field_Len);
	if ((_86538_m.get()._field_Cap != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1bad4c742_expr(_self_, _86538_m.get()._field_Cap);
	};
	if ((_1ad187a79_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1bad4cc3c_initExpr(_self_, _86617_slice.get()._field_Elem);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad49e59_makeCallStr(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>& _89136_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1bad4c742_expr(_self_, _89136_m.get()._field_Len);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4a1ce_makeCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel> _89832_m) {
	if ((_1ad1882b6_Slc(_89832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1bad49bd4_makeCallSlice(_self_, _89832_m);
		return;;
	};
	_1bad49e59_makeCallStr(_self_, _89832_m);
}



inline void _1bad4a454_pushToSlice(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1c16a67e3_PushToSliceExprModel> _90635_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1bad4c4bc_model(_self_, _90635_m.get()._field_Dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90713_n);;
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1bad9d573_write(_self_.get()._field_oc, _90913_dest);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1bad9d573_write(_self_.get()._field_oc, _1ad0c280a_Itoa(static_cast<jule::I64>(_90635_m.get()._field_Elems.get()._field_Elems.len())));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1bd7c3913:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1bad9d573_write(_self_.get()._field_oc, _90913_dest);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1bad4c4bc_model(_self_, _91621_e);
				_1bad9d573_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1bd7c3913:;
			++it;
			goto _iter_begin_1bd7c3913;
		}
		_iter_end_1bd7c3913:;
	};
}



inline void _1bad4a6c9_appendCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel> _92534_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1bad4c4bc_model(_self_, _92534_m.get()._field_Dest);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1bad4c4bc_model(_self_, _92534_m.get()._field_Elements);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4a94e_cloneCall(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel> _93333_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1bad4c4bc_model(_self_, _93333_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4abc4_sizeof(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50c5d6_SizeofExprModel> _93930_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1bad4c4bc_model(_self_, _93930_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4ae49_alignof(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50ed47_AlignofExprModel> _94531_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1bad4c4bc_model(_self_, _94531_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1bad4b257_runeLit(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac510034_RuneExprModel> _95127_m) {
	if ((_95127_m.get()._field_Code <= 127LL)) {
		jule::Str _95321_b = _1bad4d37a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95127_m.get()._field_Code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1bad4dee6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95127_m.get()._field_Code)));
}



inline void _1bad4b4cc_structureStatic(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac50ca04_StructStaticIdentExprModel> _96239_m) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad549ad_funcIns(_96239_m.get()._field_Method));
}



inline void _1bad4b752_integratedToStr(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac510221_IntegratedToStrExprModel> _96639_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1bad4c4bc_model(_self_, _96639_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1bad4b9c7_backendEmit(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac51040d_BackendEmitExprModel> _97235_m) {
	if ((_97235_m.get()._field_Exprs.len() == 0LL)) {
		_1bad9d573_write(_self_.get()._field_oc, _97235_m.get()._field_Code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97235_m.get()._field_Exprs.len());;
	{
		auto &expr = _97235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bd7d139e:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1bad4c742_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97713_n);
			}
			_iter_next_1bd7d139e:;
			++it;
			_97914_i++;
			goto _iter_begin_1bd7d139e;
		}
		_iter_end_1bd7d139e:;
	};
	_1bad9d573_write(_self_.get()._field_oc, _1ad23ae07_Format(_97235_m.get()._field_Code,jule::Any(_97817_args)));
}



inline void _1bad4bc4c_free(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac5105ea_FreeExprModel> _98728_m) {
	_1bad4c742_expr(_self_, _98728_m.get()._field_Expr);
	if (_1da02064e_RC) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1bad4bec2_mutSlicing(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac0c0144_MutSlicingExprModel> _99634_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad4c4bc_model(_self_, _99634_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1da020d7a_Production))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1bada193e_locInfo(_self_.get()._field_oc, _99634_m.get()._field_Token);
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1bad4c742_expr(_self_, _99634_m.get()._field_Left);
	if ((_99634_m.get()._field_Right != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1bad4c742_expr(_self_, _99634_m.get()._field_Right);
	};
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1bad4c247_strInsertBegin(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ac190610_StrInsertBeginExprModel> _101338_m) {
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1bad4c4bc_model(_self_, _101338_m.get()._field_Dest);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1bad4c4bc_model(_self_, _101338_m.get()._field_Expr);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1bad4c4bc_model(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ad18522a_TypeKind>>()) {
			_case_begin_1bd7da441:;
			{
				_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_102129_m.operator jule::Ptr<_1ad18522a_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd7da71b:;
			{
				_1bad437e3_constant(_self_, _102129_m.operator jule::Ptr<_1ac49c202_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bd7da782:;
			{
				_1bad4442b_var(_self_, _102129_m.operator jule::Ptr<_1ad112097_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac466a3a_StructIns>>()) {
			_case_begin_1bd7da7e8:;
			{
				_1bad446a1_structureIns(_self_, _102129_m.operator jule::Ptr<_1ac466a3a_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
			_case_begin_1bd7da85e:;
			{
				_1bad481ee_funcInsCommon(_self_, _102129_m.operator jule::Ptr<_1ac515831_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dbcb83c3_UnsafeBinopExprModel>>()) {
			_case_begin_1bd7db376:;
			{
				_1bad43e31_unsafeBinary(_self_, _102129_m.operator jule::Ptr<_1dbcb83c3_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
			_case_begin_1bd7db3dc:;
			{
				_1bad441a6_binary(_self_, _102129_m.operator jule::Ptr<_1ac50a903_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
			_case_begin_1bd7db453:;
			{
				_1bad44926_unary(_self_, _102129_m.operator jule::Ptr<_1ac50aae0_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aeb9_StructLitExprModel>>()) {
			_case_begin_1bd7db4b9:;
			{
				_1bad44b9b_structureLit(_self_, _102129_m.operator jule::Ptr<_1ac50aeb9_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>>()) {
			_case_begin_1bd7db530:;
			{
				_1bad44e21_allocStructure(_self_, _102129_m.operator jule::Ptr<_1ac50b1a6_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b393_CastingExprModel>>()) {
			_case_begin_1bd7db596:;
			{
				_1bad45196_casting(_self_, _102129_m.operator jule::Ptr<_1ac50b393_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bd7db60c:;
			{
				_1bad4621e_funcCall(_self_, _102129_m.operator jule::Ptr<_1ac50b580_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b76c_SliceExprModel>>()) {
			_case_begin_1bd7db673:;
			{
				_1bad46494_slice(_self_, _102129_m.operator jule::Ptr<_1ac50b76c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50cbe1_ArrayExprModel>>()) {
			_case_begin_1bd7db6d9:;
			{
				_1bad47e79_array(_self_, _102129_m.operator jule::Ptr<_1ac50cbe1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac0eb626_UnsafeIndexingExprModel>>()) {
			_case_begin_1bd7db750:;
			{
				_1bad4698e_unsafeIndexing(_self_, _102129_m.operator jule::Ptr<_1ac0eb626_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50b959_IndexingExprModel>>()) {
			_case_begin_1bd7db7b6:;
			{
				_1bad46719_indexing(_self_, _102129_m.operator jule::Ptr<_1ac50b959_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50bb46_AnonFnExprModel>>()) {
			_case_begin_1bd7db82c:;
			{
				_1bad46c14_anonFunc(_self_, _102129_m.operator jule::Ptr<_1ac50bb46_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c020_MapExprModel>>()) {
			_case_begin_1bd7db893:;
			{
				_1bad46e89_map(_self_, _102129_m.operator jule::Ptr<_1ac50c020_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c20c_SlicingExprModel>>()) {
			_case_begin_1bd7db909:;
			{
				_1bad4720e_slicing(_self_, _102129_m.operator jule::Ptr<_1ac50c20c_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
			_case_begin_1bd7db970:;
			{
				_1bad47484_traitSub(_self_, _102129_m.operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bd7db9e7:;
			{
				_1bad47709_structureSub(_self_, _102129_m.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50cdcd_CommonIdentExprModel>>()) {
			_case_begin_1bd7dba6e:;
			{
				_1bad4797e_commonIdent(_self_, _102129_m.operator jule::Ptr<_1ac50cdcd_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>>()) {
			_case_begin_1bd7dbae6:;
			{
				_1bad47c04_commonSub(_self_, _102129_m.operator jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d2a7_TupleExprModel>>()) {
			_case_begin_1bd7dbb6d:;
			{
				_1bad486e9_tuple(_self_, _102129_m.operator jule::Ptr<_1ac50d2a7_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>>()) {
			_case_begin_1bd7dbbe5:;
			{
				_1bad48be4_outCall(_self_, _102129_m.operator jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1bd7dbc6c:;
			{
				_1bad48e69_outlnCall(_self_, _102129_m.operator jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>>()) {
			_case_begin_1bd7dbce4:;
			{
				_1bad4896e_newCall(_self_, _102129_m.operator jule::Ptr<_1ac50da5a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>>()) {
			_case_begin_1bd7dbd6b:;
			{
				_1bad491de_panicCall(_self_, _102129_m.operator jule::Ptr<_1ac50dc47_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>>()) {
			_case_begin_1bd7dbde3:;
			{
				_1bad49464_assertCall(_self_, _102129_m.operator jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bd7dbe6a:;
			{
				_1bad496d9_errorCall(_self_, _102129_m.operator jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>>()) {
			_case_begin_1bd7dbee2:;
			{
				_1bad4a1ce_makeCall(_self_, _102129_m.operator jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>>()) {
			_case_begin_1bd7dc069:;
			{
				_1bad4a6c9_appendCall(_self_, _102129_m.operator jule::Ptr<_1ac50e30d_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1bd7dc0e1:;
			{
				_1bad4a94e_cloneCall(_self_, _102129_m.operator jule::Ptr<_1ac50d86d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50e4ea_BuiltinCopyCallExprModel>>()) {
			_case_begin_1bd7dc168:;
			{
				_1bad4995e_copyCall(_self_, _102129_m.operator jule::Ptr<_1ac50e4ea_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c5d6_SizeofExprModel>>()) {
			_case_begin_1bd7dc1e0:;
			{
				_1bad4abc4_sizeof(_self_, _102129_m.operator jule::Ptr<_1ac50c5d6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50ed47_AlignofExprModel>>()) {
			_case_begin_1bd7dc267:;
			{
				_1bad4ae49_alignof(_self_, _102129_m.operator jule::Ptr<_1ac50ed47_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac510034_RuneExprModel>>()) {
			_case_begin_1bd7dc2de:;
			{
				_1bad9d573_write(_self_.get()._field_oc, _1bad4b257_runeLit(_self_, _102129_m.operator jule::Ptr<_1ac510034_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50ca04_StructStaticIdentExprModel>>()) {
			_case_begin_1bd7dc366:;
			{
				_1bad4b4cc_structureStatic(_self_, _102129_m.operator jule::Ptr<_1ac50ca04_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac510221_IntegratedToStrExprModel>>()) {
			_case_begin_1bd7dc3dd:;
			{
				_1bad4b752_integratedToStr(_self_, _102129_m.operator jule::Ptr<_1ac510221_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac51040d_BackendEmitExprModel>>()) {
			_case_begin_1bd7dc465:;
			{
				_1bad4b9c7_backendEmit(_self_, _102129_m.operator jule::Ptr<_1ac51040d_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5105ea_FreeExprModel>>()) {
			_case_begin_1bd7dc4dc:;
			{
				_1bad4bc4c_free(_self_, _102129_m.operator jule::Ptr<_1ac5105ea_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac0c0144_MutSlicingExprModel>>()) {
			_case_begin_1bd7dc564:;
			{
				_1bad4bec2_mutSlicing(_self_, _102129_m.operator jule::Ptr<_1ac0c0144_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac190610_StrInsertBeginExprModel>>()) {
			_case_begin_1bd7dc5db:;
			{
				_1bad4c247_strInsertBegin(_self_, _102129_m.operator jule::Ptr<_1ac190610_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1bd7da5b7:;
			{
				_1bad9d573_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bd7da4da:;
	};
}



inline void _1bad4c742_expr(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Any _111428_e) {
	_1bad4c4bc_model(_self_, _111428_e);
}



inline void _1bad4c9b7_val(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ad15a211_Value> _111827_v) {
	if (_1ad159a4b_IsConst(_111827_v.get()._field_Data.ptr())) {
		_1bad437e3_constant(_self_, _111827_v.get()._field_Data.get()._field_Constant,((_111827_v.get()._field_Data.get()._field_Kind != nullptr) && _1ad18beac_IsF32(_1ad18733c_Prim(_111827_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1bad4c742_expr(_self_, _111827_v.get()._field_Data.get()._field_Model);
}



inline void _1bad4cc3c_initExpr(jule::Ptr<_1bad420e9_exprCoder> _self_, jule::Ptr<_1ad18522a_TypeKind> _112632_t) {
	if ((_1ad187815_Ptr(_112632_t.ptr()) != nullptr)) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1ac526b83_Enum> _113117_enm = _1ad187a79_Enum(_112632_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1bad4c9b7_val(_self_, _113117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1badc5b0b_kind(_112632_t));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1bad420e9_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1bad502a0_cloneFuncDecl(jule::Ptr<_1ac43a6e0_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1badc4258_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1bad50547_cloneFuncDef(jule::Ptr<_1ac43a6e0_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1badc4258_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1bad4eee7_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bad51427_TestCoder> static__1bad5189a_New(jule::Ptr<_1badba21b_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1bad51427_TestCoder>(_1bad51427_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_1ad0dc11b_ImportInfo> _1bad51b0e_findTestingPackage(jule::Ptr<_1bad51427_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd809ecc:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1bd809ecc:;
			++it;
			goto _iter_begin_1bd809ecc;
		}
		_iter_end_1bd809ecc:;
	};
	return nullptr;
}



inline void _1bad51d84_appendTest(jule::Ptr<_1bad51427_TestCoder> _self_, jule::Ptr<_1ac515831_FnIns> _4334_f) {
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad52549_callTmReset(_self_);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1bad9d573_write(_self_.get()._field_oc, _1bad4d941_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, static__1bad549ad_funcIns(_4334_f));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1bad52109_appendPackageTests(jule::Ptr<_1bad51427_TestCoder> _self_, jule::Ptr<_1ad0e0075_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd810c91:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bd811632:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _6225_f = *it;
						{
							if (_1badc8801_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1bad51d84_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1bd811632:;
						++it;
						goto _iter_begin_1bd811632;
					}
					_iter_end_1bd811632:;
				};
			}
			_iter_next_1bd810c91:;
			++it;
			goto _iter_begin_1bd810c91;
		}
		_iter_end_1bd810c91:;
	};
}



inline jule::Bool _1bad5236d_readyTestingPackage(jule::Ptr<_1bad51427_TestCoder> _self_) {
	jule::Ptr<_1ad0dc11b_ImportInfo> _7117_p = _1bad51b0e_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1ad0dd55c_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1ac441bad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1ac441bad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1ac441bad_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1bad52549_callTmReset(jule::Ptr<_1bad51427_TestCoder> _self_) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad54716_func(_self_.get()._field_tmReset));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1bad52725_callTmFailed(jule::Ptr<_1bad51427_TestCoder> _self_) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad54716_func(_self_.get()._field_tmFailed));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1bad52901_callTmSkipped(jule::Ptr<_1bad51427_TestCoder> _self_) {
	_1bad9d573_write(_self_.get()._field_oc, static__1bad54716_func(_self_.get()._field_tmSkipped));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1bad52acc_Serialize(jule::Ptr<_1bad51427_TestCoder> _self_) {
	_1badbe50b_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1badbe330_end(_self_.get()._field_oc);
	});;
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	if ((!(_1bad5236d_readyTestingPackage(_self_)))) {
		_1bad9d573_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1bad9ed05_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1bad9d573_write(_self_.get()._field_oc, static__1badc2366_asSptr(static__1badc4500_structureIns(_self_.get()._field_t)));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1bad9d573_write(_self_.get()._field_oc, static__1badc4500_structureIns(_self_.get()._field_t));
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1bad9dd15_addIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1bad52725_callTmFailed(_self_);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1bad52901_callTmSkipped(_self_);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1bad52109_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1bad9ed05_doneIndent(_self_.get()._field_oc);
	_1bada0553_indent(_self_.get()._field_oc);
	_1bad9d573_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1bad51427_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1bad54084_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1bad5446e_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1ad0c280a_Itoa(_5423_row);
	_5517_obj+=_1ad0c280a_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1bad54716_func(jule::Ptr<_1ac512b80_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1bd829095:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1bd82910b:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1ac513356_IsMethod(_6521_f.ptr())) {
			_case_begin_1bd82846d:;
			{
				jule::Str _7221_obj = static__1bad54084_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1bd8283a2:;
			{
				return static__1bad54084_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1bd8282c5:;
	};
}



inline jule::Str static__1bad549ad_funcIns(jule::Ptr<_1ac515831_FnIns>& _8424_f) {
	if (_1ac516bb7_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1bad54716_func(_8424_f.get()._field_Decl);
	};
	return static__1bad54084_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1bad54c55_traitDecl(jule::Ptr<_1ac524a3d_Trait> _9525_t) {
	if (_1ac5255aa_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1bad54084_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1bad54eec_param(jule::Ptr<_1ac511343_Param>& _10322_p) {
	if ((_1a959cb63_IsAnonIdent(_10322_p.get()._field_Ident) || _1a959c8bb_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1ac511970_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1bad5446e_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1bad5446e_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1bad55294_structure(jule::Ptr<_1ac43a6e0_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1badc8801_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1bad54084_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1bad5553b_structureIns(jule::Ptr<_1ac466a3a_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1bad55294_structure(_12829_s.get()._field_Decl);
	};
	return static__1bad54084_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1bad557d3_field(jule::Ptr<_1ac427d4d_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1bad55a7a_var(jule::Ptr<_1ad112097_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1bd83437a:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1bd8343e1:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1bd83370e:;
			{
				if ((_1ad1875a1_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1bd833775:;
			{
				return static__1bad5446e_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1bd833698:;
			{
				return static__1bad54084_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1bd8335dd:;
	};
}



inline jule::Str static__1bad55d22_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1bad560b9_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1bad56361_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1bad56608_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1bad568a0_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1bad56b47_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1bad53a78_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1badb9d42_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1badba02e_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1badc1024_Str(_1badc0c5a_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1badc1332_Equals(jule::Ptr<_1badc0c5a_customType> _self_, jule::Ptr<_1ad18522a_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1badc0c5a_customType _Src) {
	_Stream << "customType{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1badc1a80_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1ac62d4b5_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1badc1d27_prim(jule::Ptr<_1ad189c02_Prim> _7120_p) {
	return static__1badc1a80_toType(_1ad18a065_Str(_7120_p.ptr()));
}



inline jule::Str static__1badc20be_tuple(jule::Ptr<_1ad18e971_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1bd6a7dbe:;
		if (it != expr.end()) {
			jule::Ptr<_1ad18522a_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1badc5b0b_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1bd6a7dbe:;
			++it;
			goto _iter_begin_1bd6a7dbe;
		}
		_iter_end_1bd6a7dbe:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1badc2366_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1badc260d_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1badc28a5_sptr(jule::Ptr<_1ad18d486_Sptr> _10124_sptr) {
	return static__1badc2366_asSptr(static__1badc5b0b_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1badc2b4c_ptr(jule::Ptr<_1ad1919ea_Ptr> _10623_p) {
	;
	if (_1ad1924bd_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1badc5b0b_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1badc2de4_enumDecl(jule::Ptr<_1ac526b83_Enum> _11728_e) {
	return static__1badc5b0b_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1badc318b_typeEnumDecl(jule::Ptr<_1ac52827d_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1badc3433_asSlice(jule::Ptr<_1ad18522a_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1badc5b0b_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1badc36ca_slice(jule::Ptr<_1ad18dde3_Slc> _13425_s) {
	return static__1badc3433_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1badc3972_map(jule::Ptr<_1ad190499_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1badc5b0b_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1badc5b0b_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1badc3c19_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1badc3eb1_traitDecl(jule::Ptr<_1ac524a3d_Trait> _15625_t) {
	return static__1badc3c19_traitIdent(static__1bad54c55_traitDecl(_15625_t));
}



inline jule::Str static__1badc4258_structure(jule::Ptr<_1ac43a6e0_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1badc8801_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1bad55294_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1badc4500_structureIns(jule::Ptr<_1ac466a3a_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1bad5553b_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1bd6b323c:;
				if (it != expr.end()) {
					jule::Ptr<_1ad1839ed_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1badc5b0b_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1bd6b323c:;
					++it;
					goto _iter_begin_1bd6b323c;
				}
				_iter_end_1bd6b323c:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1ac41195d_Directive> _18317_d = _1badc846b_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1badc0045_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1bad5553b_structureIns(_17132_s);
}



inline jule::Str static__1badc4797_array(jule::Ptr<_1ad19108d_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1badc5b0b_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1ad0c280a_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1badc4cd6_paramIns(jule::Ptr<_1ac514962_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1badc5b0b_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1badc5b0b_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1badc5325_funcInsResult(jule::Ptr<_1ac515831_FnIns>& _24934_f) {
	if (_1ac5130e2_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1badc5b0b_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1badc5b0b_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1badc55bc_anonFunc(jule::Ptr<_1ac515831_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1badc5325_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1bd6bd1ae:;
			if (it != expr.end()) {
				jule::Ptr<_1ac514962_ParamIns> _26625_param = *it;
				{
					if (_1ac511970_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1bd6bd1ae;
					};
					_26317_decl+=static__1badc4cd6_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1bd6bd1ae:;
				++it;
				goto _iter_begin_1bd6bd1ae;
			}
			_iter_end_1bd6bd1ae:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1badc5864_func(jule::Ptr<_1ac515831_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1badc55bc_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1badc5b0b_kind(jule::Ptr<_1ad18522a_TypeKind> _29024_k) {
	{
		
		if (_1ad185dda_CppLinked(_29024_k.ptr())) {
			_case_begin_1bd6c0bd9:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1ad18733c_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c0d71:;
			{
				return static__1badc1d27_prim(_1ad18733c_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1ad188ecb_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c0dd7:;
			{
				return static__1badc20be_tuple(_1ad188ecb_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1ad1875a1_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c0e5e:;
			{
				return static__1badc28a5_sptr(_1ad1875a1_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1ad187815_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c0ed6:;
			{
				return static__1badc2b4c_ptr(_1ad187815_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1ad187a79_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c105d:;
			{
				return static__1badc2de4_enumDecl(_1ad187a79_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1ad187cdd_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c10d5:;
			{
				return static__1badc318b_typeEnumDecl(_1ad187cdd_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1ad1882b6_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c115c:;
			{
				return static__1badc36ca_slice(_1ad1882b6_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1ad188c67_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c11d4:;
			{
				return static__1badc3972_map(_1ad188c67_Map(_29024_k.ptr()));
			}
		}
		else if ((_1ad188a03_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c125b:;
			{
				return static__1badc3eb1_traitDecl(_1ad188a03_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1ad18878e_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c12d3:;
			{
				return static__1badc4500_structureIns(_1ad18878e_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1ad188052_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c135a:;
			{
				return static__1badc4797_array(_1ad188052_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1ad18852a_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bd6c13d2:;
			{
				return static__1badc5864_func(_1ad18852a_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1bd6c0aeb:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1badc0c5a_customType>>()) {
			_case_begin_1bd6c14ae:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1badc0c5a_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1bd6c78e4:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1bd6c788e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1badc1552_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bd6c92ca_Name(_1bd6c9929_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1bd6c9d14_What(_1bd6c9929_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1bd6c9e46_Reset(_1bd6c9929_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bd6ca078_Short(_1bd6c9929_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd6c9929_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd6cd136_Name(_1bd6cd5dc_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1bd6cd8a6_What(_1bd6cd5dc_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1bd6cd9d8_Reset(_1bd6cd5dc_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bd6cdb1a_Short(_1bd6cd5dc_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd6cd5dc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd6d1b1d_Name(_1bd6d20c4_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1bd6d238d_What(_1bd6d20c4_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1bd6d24c0_Reset(_1bd6d20c4_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bd6d2602_Short(_1bd6d20c4_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd6d20c4_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd6d5649_Name(_1bd6d5b00_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1bd6d5db9_What(_1bd6d5b00_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1bd6d5eeb_Reset(_1bd6d5b00_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bd6d612d_Short(_1bd6d5b00_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd6d5b00_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bd6d9131_Name(_1bd6d95d7_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1bd6d98a1_What(_1bd6d95d7_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1bd6d99d3_Reset(_1bd6d95d7_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1bd6d9b15_Short(_1bd6d95d7_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd6d95d7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bae0c2e6_FlagSet> static__1bae0c5d2_New(void) {
	return jule::new_ptr<_1bae0c2e6_FlagSet>(_1bae0c2e6_FlagSet{._field_flags=jule::Slice<jule::Trait<_1bae0a877_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1bae0a877_CommonFlag> _1bae0ca66_FindFlag(_1bae0c2e6_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bd6e5280:;
		if (it != expr.end()) {
			jule::Trait<_1bae0a877_CommonFlag> _7221_flag = *it;
			{
				if ((_1bae0a877_CommonFlag_mptr_data[(_7221_flag).type_offset]._1badcab11_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1bd6e5280:;
			++it;
			goto _iter_begin_1bd6e5280;
		}
		_iter_end_1bd6e5280:;
	};
	return nullptr;
}



inline jule::Trait<_1bae0a877_CommonFlag> _1bae0cd74_FindFlagShort(_1bae0c2e6_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bd6e56e2:;
		if (it != expr.end()) {
			jule::Trait<_1bae0a877_CommonFlag> _8221_flag = *it;
			{
				if ((_1bae0a877_CommonFlag_mptr_data[(_8221_flag).type_offset]._1badcac43_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1bd6e56e2:;
			++it;
			goto _iter_begin_1bd6e56e2;
		}
		_iter_end_1bd6e56e2:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1bae0a877_CommonFlag>> _1bae0d0d8_Flags(_1bae0c2e6_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1bae0d3e6_Parse(_1bae0c2e6_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1bae0e9be_argParser _11617_ap = _1bae0e9be_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1bae10daa_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1bae0d5c2_Reset(_1bae0c2e6_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1bd6e8a8b:;
		if (it != expr.end()) {
			jule::Trait<_1bae0a877_CommonFlag> _12616_f = *it;
			{
				_1bae0a877_CommonFlag_mptr_data[(_12616_f).type_offset]._1badcb00c_Reset(_12616_f);
			}
			_iter_next_1bd6e8a8b:;
			++it;
			goto _iter_begin_1bd6e8a8b;
		}
		_iter_end_1bd6e8a8b:;
	};
}



inline jule::Ptr<_1bd6d95d7_Flag> _1bd8c1989_addFlagCommon(_1bae0c2e6_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd8c3062:;
			{
				goto _match_end_1bd8c2ec9;
			}
		}
		_match_end_1bd8c2ec9:;
	};
	if ((_1bae0ca66_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1bae0cd74_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bd6d95d7_Flag> _14817_flag = jule::new_ptr<_1bd6d95d7_Flag>(_1bd6d95d7_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1bae0a877_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1bd6d5b00_Flag> _1bd8ca5a8_addFlagCommon(_1bae0c2e6_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1bd8cbc2a:;
			{
				goto _match_end_1bd8cbb81;
			}
		}
		_match_end_1bd8cbb81:;
	};
	if ((_1bae0ca66_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1bae0cd74_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bd6d5b00_Flag> _14817_flag = jule::new_ptr<_1bd6d5b00_Flag>(_1bd6d5b00_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1bae0a877_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1bd8be8dd_AddVar(_1bae0c2e6_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bd6d95d7_Flag> _17617_flag = _1bd8c1989_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1bd8c851d_AddVar(_1bae0c2e6_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1bd6d5b00_Flag> _17617_flag = _1bd8ca5a8_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1bae0c2e6_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1ad8ad38c_IR>,jule::Slice<_1a92722b6_Log>> static__1ad88c547_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_1a964cb25_JuleImporter> _2817_importer = static__1a95b59a0_New(_1a965b0ea_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ac4107d6_Ast>> _2918_files;;
	jule::Slice<_1a92722b6_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1a965309d_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1ad0e0075_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1ad1a703d_AnalyzePackage(_2918_files,jule::Trait<_1ad0d9888_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1ad8ad38c_IR> _4417_ir = jule::new_ptr<_1ad8ad38c_IR>(_1ad8ad38c_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a95c1c64_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a95bb4cd_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1ad899301_appendStructs(_1ad8ad38c_IR* _self_, jule::Ptr<_1ad0e0075_Package>& _5633_p, jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd338d3b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1bd3396cc:;
					if (it != expr.end()) {
						jule::Ptr<_1ac43a6e0_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1bd3396cc:;
						++it;
						goto _iter_begin_1bd3396cc;
					}
					_iter_end_1bd3396cc:;
				};
			}
			_iter_next_1bd338d3b:;
			++it;
			goto _iter_begin_1bd338d3b;
		}
		_iter_end_1bd338d3b:;
	};
}



inline jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _1ad8a0add_GetAllStructures(_1ad8ad38c_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac43a6e0_Struct>> _6917_buffer = nullptr;;
	_1ad899301_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd33a14a:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1ad899301_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1bd33a14a:;
			++it;
			goto _iter_begin_1bd33a14a;
		}
		_iter_end_1bd33a14a:;
	};
	return _6917_buffer;
}



inline void _1ad8a7b5b_appendGlobals(_1ad8ad38c_IR* _self_, jule::Ptr<_1ad0e0075_Package>& _7933_p, jule::Slice<jule::Ptr<_1ad112097_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd33bec6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1bd33c823:;
					if (it != expr.end()) {
						jule::Ptr<_1ad112097_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1bd33c823:;
						++it;
						goto _iter_begin_1bd33c823;
					}
					_iter_end_1bd33c823:;
				};
			}
			_iter_next_1bd33bec6:;
			++it;
			goto _iter_begin_1bd33bec6;
		}
		_iter_end_1bd33bec6:;
	};
}



inline jule::Slice<jule::Ptr<_1ad112097_Var>> _1ad8ad227_GetAllGlobals(_1ad8ad38c_IR* _self_) {
	jule::Slice<jule::Ptr<_1ad112097_Var>> _9217_buffer = nullptr;;
	_1ad8a7b5b_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd33e319:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1ad8a7b5b_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1bd33e319:;
			++it;
			goto _iter_begin_1bd33e319;
		}
		_iter_end_1bd33e319:;
	};
	return _9217_buffer;
}



inline void _1a96559c9_Order(_1ad8ad38c_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1ad8a0add_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1ad8ad227_GetAllGlobals(&(*_self_));
	static__1ad8a57c4_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1a964b041_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad8ad38c_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac43c3c3_Str(_1ac466a3a_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bc23c4b0:;
			if (it != expr.end()) {
				jule::Ptr<_1ad1839ed_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1ad185626_Str(_24720_g.get()._field_Kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1bc23c4b0:;
				++it;
				goto _iter_begin_1bc23c4b0;
			}
			_iter_end_1bc23c4b0:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1ac43d539_Equals(jule::Ptr<_1ac466a3a_StructIns> _self_, jule::Ptr<_1ad18522a_TypeKind> _25822_other) {
	jule::Ptr<_1ac466a3a_StructIns> _25913_s = _1ad18878e_Struct(_25822_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _25913_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _25913_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_Generics.len()); (_27217_i)++) {
		{
			if ((!(_1ad185934_Equals(_self_.get()._field_Generics[_27217_i].get()._field_Kind, _25913_s.get()._field_Generics[_27217_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1bc240bde:;
	}
	_iter_end_1bc240bde:;;
	return true;
}



inline jule::Bool _1ac44088d_Same(_1ac466a3a_StructIns* _self_, jule::Ptr<_1ac466a3a_StructIns> _28619_s) {
	if ((((*_self_)._field_Decl != _28619_s.get()._field_Decl) || (_28619_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc243164:;
		if (it != expr.end()) {
			jule::I64 _29013_i = it - expr.begin();
			jule::Ptr<_1ad1839ed_InsGeneric> &_29016_g = *it;
			{
				if ((!(_1ad185934_Equals(_29016_g.get()._field_Kind, _28619_s.get()._field_Generics[_29013_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1bc243164:;
			++it;
			_29013_i++;
			goto _iter_begin_1bc243164;
		}
		_iter_end_1bc243164:;
	};
	return true;
}



inline jule::Ptr<_1ac512b80_Fn> _1ac441bad_FindMethod(_1ac466a3a_StructIns* _self_, jule::Str _30029_ident, jule::Bool _30041_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc244b49:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _30121_f = *it;
			{
				if (((_30121_f.get()._field_Statically == _30041_statically) && (_30121_f.get()._field_Ident == _30029_ident))) {
					return _30121_f;
				};
			}
			_iter_next_1bc244b49:;
			++it;
			goto _iter_begin_1bc244b49;
		}
		_iter_end_1bc244b49:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac442d57_FieldIns> _1ac4446c7_FindField(_1ac466a3a_StructIns* _self_, jule::Str _31128_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bc245dc0:;
		if (it != expr.end()) {
			jule::Ptr<_1ac442d57_FieldIns> _31221_f = *it;
			{
				if ((_31221_f.get()._field_Decl.get()._field_Ident == _31128_ident)) {
					return _31221_f;
				};
			}
			_iter_next_1bc245dc0:;
			++it;
			goto _iter_begin_1bc245dc0;
		}
		_iter_end_1bc245dc0:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac466a3a_StructIns _Src) {
	_Stream << "StructIns{";
	_Stream << "Checked:" << _Src._field_Checked << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Operators:" << _Src._field_Operators;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad9e3c97_ObjectDeadCode> static__1ad9e4270_new(jule::Ptr<_1ad8ad38c_IR>& _3424_ir) {
	return jule::new_ptr<_1ad9e3c97_ObjectDeadCode>(_1ad9e3c97_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1bd379277_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac524a3d_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1ac524a3d_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd37b301:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1bd37b015:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bd37b9c7:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1bd37b9c7:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd37b9c7;
		}
		_iter_end_1bd37b9c7:;
	};
	return false;
}

inline jule::Bool _1bd38004c_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac515831_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1ac515831_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd381878:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1bd3817bd:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bd381e2d:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1bd381e2d:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd381e2d;
		}
		_iter_end_1bd381e2d:;
	};
	return false;
}

inline jule::Bool _1bd38620c_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac466a3a_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1ac466a3a_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd38a71c:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1bd38a497:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bd38a7e9:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1bd38a7e9:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd38a7e9;
		}
		_iter_end_1bd38a7e9:;
	};
	return false;
}

inline jule::Bool _1bd38d0e3_isLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad112097_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1ad112097_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bd38ee5d:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1bd38ed3c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bd390865:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1bd390865:;
			++it;
			_5213_i++;
			goto _iter_begin_1bd390865;
		}
		_iter_end_1bd390865:;
	};
	return false;
}



inline void _1bd37981b_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac524a3d_Trait> _6035_t) {
	{
		
{
			_case_begin_1bd37d512:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1bd37d1b0:;
	};
}

inline void _1bd38367c_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac515831_FnIns> _6035_t) {
	{
		
{
			_case_begin_1bd384309:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1bd384084:;
	};
}

inline void _1bd38674b_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac466a3a_StructIns> _6035_t) {
	{
		
{
			_case_begin_1bd388022:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1bd387c36:;
	};
}

inline void _1bd3919cb_pushLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad112097_Var> _6035_t) {
	{
		
{
			_case_begin_1bd3924b0:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1bd3923d3:;
	};
}



inline void _1ada223be_setReferencesAsLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ac518702_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1ac518d73_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1ac519181_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1ac524a3d_Trait>>()) {
					_case_begin_1bd3782dc:;
					{
						jule::Ptr<_1ac524a3d_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1ac524a3d_Trait>();;
						if (_1bd379277_isLive(_self_, _8225_t)) {
							goto _iter_next_1bd3775c7;
						};
						_1bd37981b_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bd37cca3:;
							if (it != expr.end()) {
								jule::Ptr<_1ac512b80_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bd37cec3:;
										if (it != expr.end()) {
											jule::Ptr<_1ac515831_FnIns> _8833_mins = *it;
											{
												if (_1bd38004c_isLive(_self_, _8833_mins)) {
													goto _iter_next_1bd37cec3;
												};
												_1bd38367c_pushLive(_self_, _8833_mins);
												_1ada223be_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1bd37cec3:;
											++it;
											goto _iter_begin_1bd37cec3;
										}
										_iter_end_1bd37cec3:;
									};
								}
								_iter_next_1bd37cca3:;
								++it;
								goto _iter_begin_1bd37cca3;
							}
							_iter_end_1bd37cca3:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
					_case_begin_1bd378353:;
					{
						jule::Ptr<_1ac515831_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1ac515831_FnIns>();;
						if (_1bd38004c_isLive(_self_, _9725_f)) {
							goto _match_end_1bd377e68;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1bd38620c_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1bd38674b_pushLive(_self_, _9725_f.get()._field_Owner);
								_1ada223be_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1bd38367c_pushLive(_self_, _9725_f);
						_1ada223be_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
					_case_begin_1bd378441:;
					{
						jule::Ptr<_1ad112097_Var> _11025_v = _7921_ref.operator jule::Ptr<_1ad112097_Var>();;
						if (_1bd38d0e3_isLive(_self_, _11025_v)) {
							goto _match_end_1bd377e68;
						};
						_1bd3919cb_pushLive(_self_, _11025_v);
						_1ada223be_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac466a3a_StructIns>>()) {
					_case_begin_1bd3784a7:;
					{
						jule::Ptr<_1ac466a3a_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1ac466a3a_StructIns>();;
						if (_1bd38620c_isLive(_self_, _11725_s)) {
							goto _match_end_1bd377e68;
						};
						_1bd38674b_pushLive(_self_, _11725_s);
						_1ada223be_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bd395969:;
							if (it != expr.end()) {
								jule::Ptr<_1ac512b80_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bd396184:;
										if (it != expr.end()) {
											jule::Ptr<_1ac515831_FnIns> _12433_mins = *it;
											{
												if (_1bd38004c_isLive(_self_, _12433_mins)) {
													goto _iter_next_1bd396184;
												};
												_1bd38367c_pushLive(_self_, _12433_mins);
												_1ada223be_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1bd396184:;
											++it;
											goto _iter_begin_1bd396184;
										}
										_iter_end_1bd396184:;
									};
								}
								_iter_next_1bd395969:;
								++it;
								goto _iter_begin_1bd395969;
							}
							_iter_end_1bd395969:;
						};
					}
				}
				_match_end_1bd377e68:;
			};
		}
	_iter_next_1bd3775c7:;
	}
	_iter_end_1bd3775c7:;;
}



inline void _1ada22644_inits(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad0e0075_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd377990:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1bd39895b:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1ac515831_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1ada223be_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1bd39895b:;
						++it;
						goto _iter_begin_1bd39895b;
					}
					_iter_end_1bd39895b:;
				};
			}
			_iter_next_1bd377990:;
			++it;
			goto _iter_begin_1bd377990;
		}
		_iter_end_1bd377990:;
	};
}



inline void _1ada228b9_collectLivePackage(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad0e0075_Package>& _14843_pkg) {
	_1ada22644_inits(_self_, _14843_pkg);
	if (_1da020341_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1bc81676a:;
			if (it != expr.end()) {
				jule::Ptr<_1ad15442a_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1bc81710b:;
						if (it != expr.end()) {
							jule::Ptr<_1ac512b80_Fn> _15529_f = *it;
							{
								if (_1ada248cc_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1ac515831_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1ada223be_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1bc81710b:;
							++it;
							goto _iter_begin_1bc81710b;
						}
						_iter_end_1bc81710b:;
					};
				}
				_iter_next_1bc81676a:;
				++it;
				goto _iter_begin_1bc81676a;
			}
			_iter_end_1bc81676a:;
		};
	};
}



inline void _1ada22a95_collectLive(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bc8156c0:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1ada228b9_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1bc8156c0:;
			++it;
			goto _iter_begin_1bc8156c0;
		}
		_iter_end_1bc8156c0:;
	};
	_1ada228b9_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1ac512b80_Fn> _17517_main = _1ad0e1829_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1ac515831_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1ada223be_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1ada22d1a_removeDeadGlobals(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad112097_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1ad112097_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1bd38d0e3_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1bc81be68;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1bc81be68:;
	}
	_iter_end_1bc81be68:;;
}



inline void _1ada23090_removeDeadFns(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac512b80_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1ac512b80_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1ac515831_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1bd38004c_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1bc820598;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1bc820598:;
			}
			_iter_end_1bc820598:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1bc81dd6b;
			};
			(_19417_i)++;
		}
	_iter_next_1bc81dd6b:;
	}
	_iter_end_1bc81dd6b:;;
}



inline void _1ada23315_removeDeadStructs(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac43a6e0_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1ac43a6e0_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1ac466a3a_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1ada23090_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1bd38620c_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1bc8247bc;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1bc8247bc:;
			}
			_iter_end_1bc8247bc:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1bc823612;
			};
			(_21517_i)++;
		}
	_iter_next_1bc823612:;
	}
	_iter_end_1bc823612:;;
}



inline void _1ada2358a_removeDeadTraits(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac524a3d_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1ac524a3d_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1bd379277_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1bc82823d;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1ac43a6e0_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1bc828dcb;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1bc828dcb:;
			}
			_iter_end_1bc828dcb:;;
			(_23717_i)++;
		}
	_iter_next_1bc82823d:;
	}
	_iter_end_1bc82823d:;;
}



inline void _1ada23810_removeDeadsFile(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad15442a_SymbolTable>& _25740_file) {
	_1ada23090_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1ada23315_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1ada2358a_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1ada22d1a_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1ada23a85_removeDeadsPackage(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_, jule::Ptr<_1ad0e0075_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc82d93b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _26521_file = *it;
			{
				_1ada23810_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1bc82d93b:;
			++it;
			goto _iter_begin_1bc82d93b;
		}
		_iter_end_1bc82d93b:;
	};
}



inline void _1ada23c61_removeDeads(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bc82e860:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1ada23a85_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1bc82e860:;
			++it;
			goto _iter_begin_1bc82e860;
		}
		_iter_end_1bc82e860:;
	};
	_1ada23a85_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1ada23e3c_elimanate(jule::Ptr<_1ad9e3c97_ObjectDeadCode> _self_) {
	_1ada22a95_collectLive(_self_);
	_1ada23c61_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad9e3c97_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1badba21b_ObjectCoder> static__1bad9d243_New(jule::Ptr<_1ad8ad38c_IR>& _7224_ir, _1badb9d42_SerializationInfo _7233_info) {
	jule::Ptr<_1badba21b_ObjectCoder> _7317_oc = jule::new_ptr<_1badba21b_ObjectCoder>(_1badba21b_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__1bad424e5_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1bad39bc4_new(_7317_oc);
	return _7317_oc;
}



inline void _1bad9d573_write(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1bad9dd15_addIndent(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1bad9ed05_doneIndent(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1bada0553_indent(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1bad8e8c7_findTypeOffset(_1badba21b_ObjectCoder* _self_, jule::Ptr<_1ac524a3d_Trait> _10229_t, jule::Ptr<_1ad18522a_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1ac466a3a_StructIns> _10617_s = nullptr;;
	if ((_1ad1875a1_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1ad1875a1_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1ad18878e_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1ad18878e_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bd848d62:;
		if (it != expr.end()) {
			jule::Ptr<_1badba02e_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1bd848d62:;
			++it;
			goto _iter_begin_1bd848d62;
		}
		_iter_end_1bd848d62:;
	};
	return -1LL;
}



inline void _1bada193e_locInfo(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1a959a127_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_1da020d7a_Production) {
		{
			
			if (_1a9142ae3_HasPrefix(_12414_loc,_1a9293eec_PathStdlib)) {
				_case_begin_1bd84b2b5:;
				{
					_1bad9d573_write(_self_, _1bad4d622_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1a91d49cb_Dir(_1a9293eec_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1a9142ae3_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1bd84ae85:;
				{
					_1bad9d573_write(_self_, _1bad4d622_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1a91d49cb_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1bd84ae1e:;
				{
					_1bad9d573_write(_self_, _1bad4d622_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1bd84ad42:;
		};
	} else {
		_1bad9d573_write(_self_, _1bad4d622_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1bad9d573_write(_self_, jule::Str(":", 1));
	_1bad9d573_write(_self_, _1ad0c280a_Itoa(_12328_t.get()._field_Row));
	_1bad9d573_write(_self_, jule::Str(":", 1));
	_1bad9d573_write(_self_, _1ad0c280a_Itoa(_12328_t.get()._field_Column));
}



inline void _1bad7b210_head(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1badb4a1d_Time _15013_time = static__1badb50b2_Now();;
	_1badb437a_AbsTime _15113_abs = _1badb6701_Abs(&_15013_time);;
	_1bad9d573_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1bad9d573_write(_self_, jule::Str("// JuleC version: ", 18));
	_1bad9d573_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1bad9d573_write(_self_, jule::Str("\n", 1));
	_1bad9d573_write(_self_, jule::Str("// Date: ", 9));
	_1bad9d573_write(_self_, _1ad0c2596_FmtUint(_15113_abs._field_Day,10LL));
	_1bad9d573_write(_self_, jule::Str("/", 1));
	_1bad9d573_write(_self_, _1ad0c2596_FmtUint(_15113_abs._field_Month,10LL));
	_1bad9d573_write(_self_, jule::Str("/", 1));
	_1bad9d573_write(_self_, _1ad0c2596_FmtUint(_15113_abs._field_Year,10LL));
	_1bad9d573_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1bad9d573_write(_self_, _self_.get()._field_info._field_Compiler);
	_1bad9d573_write(_self_, jule::Str(" ", 1));
	_1bad9d573_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	if (_1da020d7a_Production) {
		_1bad9d573_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1da02064e_RC))) {
		_1bad9d573_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1da020a6c_Safety))) {
		_1bad9d573_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1bad9d573_write(_self_, jule::Str("\n\n#include \"", 12));
	_1bad9d573_write(_self_, _1a92ae38b_PathApi);
	_1bad9d573_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1bad9e563_links(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd857205:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1bd858bb8:;
						{
							goto _iter_next_1bd857205;
						}
					}
					else if (_1a9265595_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1bd8580c4:;
						{
							_1bad9d573_write(_self_, jule::Str("#include ", 9));
							_1bad9d573_write(_self_, _18316_used.get()._field_Path);
							_1bad9d573_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1bd857c2d:;
						{
							_1bad9d573_write(_self_, jule::Str("#include \"", 10));
							_1bad9d573_write(_self_, _18316_used.get()._field_Path);
							_1bad9d573_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1bd857b51:;
				};
			}
			_iter_next_1bd857205:;
			++it;
			goto _iter_begin_1bd857205;
		}
		_iter_end_1bd857205:;
	};
}



inline void _1bad7ea3d_prepareStructures(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd365230:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1badbec9d_prepareStructure(_20021_s);
				};
			}
			_iter_next_1bd365230:;
			++it;
			goto _iter_begin_1bd365230;
		}
		_iter_end_1bd365230:;
	};
}



inline void _1bad8b6d7_iterPackages(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd39a85e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1bd39a85e:;
			++it;
			goto _iter_begin_1bd39a85e;
		}
		_iter_end_1bd39a85e:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1bad8bc6a_buildTraitMap(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _21735_pkg) mutable -> void {
		_1badbea4a_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd39d972:;
				if (it != expr.end()) {
					jule::Ptr<_1ac524a3d_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1badba02e_traitHash>(_1badba02e_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1bd39d972;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1bd39ec5e:;
							if (it != expr.end()) {
								jule::Ptr<_1ac43a6e0_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1bd39e533:;
										if (it != expr.end()) {
											jule::Ptr<_1ac466a3a_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1badba02e_traitHash>(_1badba02e_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1bd39e533:;
											++it;
											goto _iter_begin_1bd39e533;
										}
										_iter_end_1bd39e533:;
									};
								}
								_iter_next_1bd39ec5e:;
								++it;
								goto _iter_begin_1bd39ec5e;
							}
							_iter_end_1bd39ec5e:;
						};
					}
					_iter_next_1bd39d972:;
					++it;
					goto _iter_begin_1bd39d972;
				}
				_iter_end_1bd39d972:;
			};
		}));
	}));
}



inline void _1bad8cb39_traitDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _24835_pkg) mutable -> void {
		_1badbea4a_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd3a3559:;
				if (it != expr.end()) {
					jule::Ptr<_1ac524a3d_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1bada0553_indent(_self_);
						_1bad9d573_write(_self_, jule::Str("struct ", 7));
						_1bad9d573_write(_self_, static__1bad54c55_traitDecl(_25029_t));
						_1bad9d573_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1bd3a3559:;
					++it;
					goto _iter_begin_1bd3a3559;
				}
				_iter_end_1bd3a3559:;
			};
		}));
	}));
}



inline void _1bad8d2ee_structurePlainDecl(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac43a6e0_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd3a314c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _26421_ins = *it;
			{
				_1bad9d573_write(_self_, jule::Str("struct ", 7));
				_1bad9d573_write(_self_, static__1bad5553b_structureIns(_26421_ins));
				_1bad9d573_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd3a314c:;
			++it;
			goto _iter_begin_1bd3a314c;
		}
		_iter_end_1bd3a314c:;
	};
}



inline void _1bad8d9b4_structurePlainDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd3a57e2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1bad8d2ee_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1bd3a57e2:;
			++it;
			goto _iter_begin_1bd3a57e2;
		}
		_iter_end_1bd3a57e2:;
	};
}



inline void _1bad8e179_fieldDecl(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac442d57_FieldIns>& _27934_f) {
	_1bad9d573_write(_self_, static__1badc5b0b_kind(_27934_f.get()._field_Kind));
	_1bad9d573_write(_self_, jule::Str(" ", 1));
	_1bad9d573_write(_self_, static__1bad557d3_field(_27934_f.get()._field_Decl));
	_1bad9d573_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1bad4cc3c_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1bad4c742_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1bad9d573_write(_self_, jule::Str(";", 1));
}



inline void _1bad8b462_structureDestructor(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _29444_s) {
	;
	jule::Ptr<_1ac512b80_Fn> _29713_disposeMethod = _1ac441bad_FindMethod(_29444_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29817_disposed = static__1ad113241_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1bad9d573_write(_self_, jule::Str("~", 1));
	_1bad9d573_write(_self_, static__1bad5553b_structureIns(_29444_s));
	_1bad9d573_write(_self_, jule::Str("(void) { ", 9));
	_1bad9d573_write(_self_, static__1bad54716_func(_29713_disposeMethod));
	_1bad9d573_write(_self_, jule::Str("(this); }", 9));
}



inline void _1bad80e07_structureDeriveDefsDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _31045_s) {
	if (_1ac4268da_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, static__1bad502a0_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1bad9d573_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1badba7b0_structureOperatorEq(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1ac466a3a_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1badbaa24_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1bada0553_indent(_self_);
	if (_1aa408506_Inline) {
		_1bad9d573_write(_self_, jule::Str("inline ", 7));
	};
	_1bad9d573_write(_self_, jule::Str("bool operator==(", 16));
	_1bad9d573_write(_self_, _31840_ident);
	_1bad9d573_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1bad9dd15_addIndent(_self_);
		_1bad9d573_write(_self_, jule::Str("\n", 1));
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, jule::Str("return ", 7));
		_1bad9dd15_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd3b3c73:;
			if (it != expr.end()) {
				jule::Ptr<_1ac442d57_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1ac466a3a_StructIns> _34121_strct = _1ad18878e_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1bd3b3c73;
					};
					if (_33821_writed) {
						_1bad9d573_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1bad9d573_write(_self_, jule::Str("\n", 1));
					_1bada0553_indent(_self_);
					_1bad9d573_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1bad557d3_field(_33925_f.get()._field_Decl);;
					_1bad9d573_write(_self_, _35321_fIdent);
					_1bad9d573_write(_self_, jule::Str(" == _other.", 11));
					_1bad9d573_write(_self_, _35321_fIdent);
				}
				_iter_next_1bd3b3c73:;
				++it;
				goto _iter_begin_1bd3b3c73;
			}
			_iter_end_1bd3b3c73:;
		};
		_1bad9ed05_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1bad9d573_write(_self_, jule::Str("true", 4));
		};
		_1bad9d573_write(_self_, jule::Str(";\n", 2));
		_1bad9ed05_doneIndent(_self_);
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, jule::Str("}", 1));
	} else {
		_1bad9d573_write(_self_, jule::Str(" return true; }", 15));
	};
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
}



inline void _1badba8e2_structureOperatorNotEq(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1ac466a3a_StructIns>& _37260_s) {
	_1bada0553_indent(_self_);
	if (_1aa408506_Inline) {
		_1bad9d573_write(_self_, jule::Str("inline ", 7));
	};
	_1bad9d573_write(_self_, jule::Str("bool operator!=(", 16));
	_1bad9d573_write(_self_, _37243_ident);
	_1bad9d573_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1badbaa24_structureOperator(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1ac515831_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1ac5130e2_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1bada0553_indent(_self_);
	if (_1aa408506_Inline) {
		_1bad9d573_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1bad9d573_write(_self_, _38338_ident);
		_1bad9d573_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1ad18733c_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1bad9d573_write(_self_, _38338_ident);
		} else {
			_1bad9d573_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1bad9d573_write(_self_, jule::Str(" operator", 9));
	_1bad9d573_write(_self_, _38366_op);
	_1bad9d573_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1ac514962_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1bad9d573_write(_self_, static__1badc4cd6_paramIns(_41121_p));
		_1bad9d573_write(_self_, jule::Str(" _other", 7));
	};
	_1bad9d573_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1bad9d573_write(_self_, jule::Str("return ", 7));
	};
	_1bad9d573_write(_self_, static__1bad549ad_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1bad9d573_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1bad9d573_write(_self_, jule::Str("return *this; ", 14));
		};
		_1bad9d573_write(_self_, jule::Str("}", 1));
	} else {
		_1bad9d573_write(_self_, jule::Str("(this); }", 9));
	};
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
}



inline void _1badbab56_structureOperators(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1bad5553b_structureIns(_43243_s);;
	_1badba7b0_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1badba8e2_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1badbaa24_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1badbac88_structureInsDecl(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1bd3d1b5e:;
			if (it != expr.end()) {
				jule::Ptr<_1ac512b80_Fn> _47325_m = *it;
				{
					_1badbb393_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1bd3d1b5e:;
				++it;
				goto _iter_begin_1bd3d1b5e;
			}
			_iter_end_1bd3d1b5e:;
		};
	};
	_1bad9d573_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1bad5553b_structureIns(_47141_s);;
	_1bad9d573_write(_self_, _47913_outIdent);
	_1bad9d573_write(_self_, jule::Str(" {\n", 3));
	_1bad9dd15_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1bd3d3b61:;
		if (it != expr.end()) {
			jule::Ptr<_1ac442d57_FieldIns> _48521_f = *it;
			{
				_1bada0553_indent(_self_);
				_1bad8e179_fieldDecl(_self_, _48521_f);
				_1bad9d573_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1bd3d3b61:;
			++it;
			goto _iter_begin_1bd3d3b61;
		}
		_iter_end_1bd3d3b61:;
	};
	_1bada0553_indent(_self_);
	_1bad8b462_structureDestructor(_self_, _47141_s);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1bada0553_indent(_self_);
	_1bad9d573_write(_self_, _47913_outIdent);
	_1bad9d573_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1bad80e07_structureDeriveDefsDecls(_self_, _47141_s);
	_1badbab56_structureOperators(_self_, _47141_s);
	_1bad9d573_write(_self_, jule::Str("\n", 1));
	_1bad9ed05_doneIndent(_self_);
	_1bada0553_indent(_self_);
	_1bad9d573_write(_self_, jule::Str("};", 2));
}



inline void _1badbadba_structureDecl(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac43a6e0_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd3d7d74:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _51121_ins = *it;
			{
				_1badbac88_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1bd3d7d74:;
			++it;
			goto _iter_begin_1bd3d7d74;
		}
		_iter_end_1bd3d7d74:;
	};
}



inline void _1badbaeec_structureDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd3d8c98:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1badbadba_structureDecl(_self_, _51721_s);
					_1bad9d573_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1bd3d8c98:;
			++it;
			goto _iter_begin_1bd3d8c98;
		}
		_iter_end_1bd3d8c98:;
	};
}



inline void _1badbb12e_paramsDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1bad9d573_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1bad9d573_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1bd3dad66:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1ac514962_ParamIns> _53221_p = *it;
			{
				_1bad9d573_write(_self_, static__1badc4cd6_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1bad9d573_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bd3dad66:;
			++it;
			_53214_i++;
			goto _iter_begin_1bd3dad66;
		}
		_iter_end_1bd3dad66:;
	};
	_1bad9d573_write(_self_, jule::Str(")", 1));
}



inline void _1badbb261_funcHead(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac515831_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1aa408506_Inline) && (!(_1ac5135ba_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1bad9d573_write(_self_, jule::Str("inline ", 7));
	};
	_1bad9d573_write(_self_, static__1badc5325_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1bad9d573_write(_self_, jule::Str("(*", 2));
		_1bad9d573_write(_self_, static__1bad549ad_funcIns(_54233_f));
		_1bad9d573_write(_self_, jule::Str(")", 1));
	} else {
		_1bad9d573_write(_self_, jule::Str(" ", 1));
		_1bad9d573_write(_self_, static__1bad549ad_funcIns(_54233_f));
	};
}



inline void _1badbb393_funcDecl(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac512b80_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd3e12cd:;
		if (it != expr.end()) {
			jule::Ptr<_1ac515831_FnIns> _55821_c = *it;
			{
				_1bada0553_indent(_self_);
				_1badbb261_funcHead(_self_, _55821_c,_55741_ptr);
				_1badbb12e_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1bad9d573_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd3e12cd:;
			++it;
			goto _iter_begin_1bd3e12cd;
		}
		_iter_end_1bd3e12cd:;
	};
}



inline void _1badbb4c5_funcDecls(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _56735_pkg) mutable -> void {
		_1badbea4a_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1bd3e48a8:;
				if (it != expr.end()) {
					jule::Ptr<_1ac512b80_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1badbb393_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1bd3e48a8:;
					++it;
					goto _iter_begin_1bd3e48a8;
				}
				_iter_end_1bd3e48a8:;
			};
		}));
	}));
}



inline void _1badbb607_traitDataTypes(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _57935_pkg) mutable -> void {
		_1badbea4a_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1bd3e768b:;
				if (it != expr.end()) {
					jule::Ptr<_1ac524a3d_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1bad9d573_write(_self_, jule::Str("struct ", 7));
						_1bad9d573_write(_self_, static__1bad54c55_traitDecl(_58129_t));
						_1bad9d573_write(_self_, jule::Str("MptrData", 8));
						_1bad9d573_write(_self_, jule::Str(" {\n", 3));
						_1bad9dd15_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1bd3e944b:;
							if (it != expr.end()) {
								jule::Ptr<_1ac512b80_Fn> _59033_m = *it;
								{
									jule::Ptr<_1ac515831_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1ac514962_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1bd3eb8d2:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1ac514962_ParamIns> _59637_ip = *it;
											{
												if (_1a959cb63_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1ad0c280a_Itoa(_59630_i));
												};
											}
											_iter_next_1bd3eb8d2:;
											++it;
											_59630_i++;
											goto _iter_begin_1bd3eb8d2;
										}
										_iter_end_1bd3eb8d2:;
									};
									if ((!(_1da020d7a_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1badc0c5a_customType>(_1badc0c5a_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1badbb393_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1bd3e944b:;
								++it;
								goto _iter_begin_1bd3e944b;
							}
							_iter_end_1bd3e944b:;
						};
						_1bad9ed05_doneIndent(_self_);
						_1bada0553_indent(_self_);
						_1bad9d573_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1bd3e768b:;
					++it;
					goto _iter_begin_1bd3e768b;
				}
				_iter_end_1bd3e768b:;
			};
		}));
	}));
}



inline void _1badbb7d3_paramIns(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac514962_ParamIns>& _62333_p) {
	_1bad9d573_write(_self_, static__1badc4cd6_paramIns(_62333_p));
	_1bad9d573_write(_self_, jule::Str(" ", 1));
	_1bad9d573_write(_self_, static__1bad54eec_param(_62333_p.get()._field_Decl));
}



inline void _1badbba58_paramsIns(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ac514962_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1bad9d573_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1bad9d573_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1bd4012dd:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1ac514962_ParamIns> _63521_p = *it;
			{
				_1badbb7d3_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1bad9d573_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bd4012dd:;
			++it;
			_63514_i++;
			goto _iter_begin_1bd4012dd;
		}
		_iter_end_1bd4012dd:;
	};
	_1bad9d573_write(_self_, jule::Str(")", 1));
}



inline void _1badbbd77_varInitExpr(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ad112097_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1bad9d573_write(_self_, jule::Str("static ", 7));
	};
	_1bad9d573_write(_self_, static__1badc5b0b_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1bad9d573_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1bad9d573_write(_self_, jule::Str("&", 1));
	};
	_1bad9d573_write(_self_, static__1bad55a7a_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1bad9d573_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1bad9d573_write(_self_, jule::Str(";", 1));
}



inline void _1badbc0ec_var(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ad112097_Var> _66227_v) {
	if (_1a959c8bb_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1badbbd77_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1bad4c9b7_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1badbbd77_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1badbbd77_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1bad4cc3c_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1badbc372_func(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac512b80_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd40a270:;
		if (it != expr.end()) {
			jule::Ptr<_1ac515831_FnIns> _67821_ins = *it;
			{
				_1badbb261_funcHead(_self_, _67821_ins,false);
				_1badbba58_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1bad9d573_write(_self_, jule::Str(" ", 1));
				_1bad3e7ab_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1bad9d573_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bd40a270:;
			++it;
			goto _iter_begin_1bd40a270;
		}
		_iter_end_1bd40a270:;
	};
}



inline void _1badbc54d_traitWrappers(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bd40a9ac:;
		if (it != expr.end()) {
			jule::Ptr<_1badba02e_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd40cd11:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1ad0c280a_Itoa(_69021_hash.get()._field_i));
							_1badbc372_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_1da020d7a_Production) {
									_1bad9d573_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1bad9d573_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1bd40cd11;
							};
							jule::Bool _70821_ptr = (!(_1ac511bd4_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1ac512b80_Fn> _71025_sm = _1ac441bad_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1bd40cd11;
							};
							_1bad9dd15_addIndent(_self_);
							_1bad9d573_write(_self_, jule::Str("{\n", 2));
							_1bada0553_indent(_self_);
							if ((!(_1ac5130e2_IsVoid(_71025_sm.ptr())))) {
								_1bad9d573_write(_self_, jule::Str("return ", 7));
							};
							_1bad9d573_write(_self_, static__1bad54716_func(_71025_sm));
							_1bad9d573_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1bad9d573_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1bad9d573_write(_self_, static__1badc4500_structureIns(_69021_hash.get()._field_s));
								_1bad9d573_write(_self_, jule::Str(">(", 2));
								if ((!(_1da020d7a_Production))) {
									_1bad9d573_write(_self_, jule::Str("_00___file", 10));
								};
								_1bad9d573_write(_self_, jule::Str(")", 1));
							} else {
								_1bad9d573_write(_self_, jule::Str("_self_.data.as<", 15));
								_1bad9d573_write(_self_, static__1badc4258_structure(_71025_sm.get()._field_Owner));
								_1bad9d573_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1bd4172e3:;
								if (it != expr.end()) {
									jule::Ptr<_1ac511343_Param> _73624_mp = *it;
									{
										_1bad9d573_write(_self_, jule::Str(", ", 2));
										_1bad9d573_write(_self_, static__1bad54eec_param(_73624_mp));
									}
									_iter_next_1bd4172e3:;
									++it;
									goto _iter_begin_1bd4172e3;
								}
								_iter_end_1bd4172e3:;
							};
							_1bad9d573_write(_self_, jule::Str(");\n}\n", 5));
							_1bad9ed05_doneIndent(_self_);
						}
						_iter_next_1bd40cd11:;
						++it;
						goto _iter_begin_1bd40cd11;
					}
					_iter_end_1bd40cd11:;
				};
			}
			_iter_next_1bd40a9ac:;
			++it;
			goto _iter_begin_1bd40a9ac;
		}
		_iter_end_1bd40a9ac:;
	};
}



inline void _1badbc729_traitDatas(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	jule::Ptr<_1ac524a3d_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bd418b85:;
		if (it != expr.end()) {
			jule::Ptr<_1badba02e_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1bad54c55_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1bad9ed05_doneIndent(_self_);
						_1bada0553_indent(_self_);
						_1bad9d573_write(_self_, jule::Str("};\n", 3));
					};
					_1bad9d573_write(_self_, jule::Str("static ", 7));
					_1bad9d573_write(_self_, _74917_ident);
					_1bad9d573_write(_self_, jule::Str("MptrData ", 9));
					_1bad9d573_write(_self_, _74917_ident);
					_1bad9d573_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1bad9dd15_addIndent(_self_);
				};
				_1bada0553_indent(_self_);
				_1bad9d573_write(_self_, jule::Str("{\n", 2));
				_1bad9dd15_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd41c925:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1bad54716_func(_76725_m);;
							_1bada0553_indent(_self_);
							_1bad9d573_write(_self_, jule::Str(".", 1));
							_1bad9d573_write(_self_, _76821_mIdent);
							_1bad9d573_write(_self_, jule::Str("=", 1));
							_1bad9d573_write(_self_, _76821_mIdent);
							_1bad9d573_write(_self_, jule::Str("_", 1));
							_1bad9d573_write(_self_, _1ad0c280a_Itoa(_74821_hash.get()._field_i));
							_1bad9d573_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1bd41c925:;
						++it;
						goto _iter_begin_1bd41c925;
					}
					_iter_end_1bd41c925:;
				};
				_1bad9ed05_doneIndent(_self_);
				_1bada0553_indent(_self_);
				_1bad9d573_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1bd418b85:;
			++it;
			goto _iter_begin_1bd418b85;
		}
		_iter_end_1bd418b85:;
	};
	if ((_74717_old != nullptr)) {
		_1bad9ed05_doneIndent(_self_);
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1badbc905_globals(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1bd42162c:;
		if (it != expr.end()) {
			jule::Ptr<_1ad112097_Var> _79021_v = *it;
			{
				_1bad9d573_write(_self_, static__1badc5b0b_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1bad9d573_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1bad9d573_write(_self_, jule::Str("&", 1));
				};
				_1bad9d573_write(_self_, static__1bad55a7a_var(_79021_v));
				_1bad9d573_write(_self_, jule::Str(" = ", 3));
				_1bad4c9b7_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1bad9d573_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bd42162c:;
			++it;
			goto _iter_begin_1bd42162c;
		}
		_iter_end_1bd42162c:;
	};
}



inline void _1badbcad1_decls(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8cb39_traitDecls(_self_);
	_1bad8d9b4_structurePlainDecls(_self_);
	_1badbaeec_structureDecls(_self_);
	_1badbb4c5_funcDecls(_self_);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbb607_traitDataTypes(_self_);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbc54d_traitWrappers(_self_);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbc729_traitDatas(_self_);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbc905_globals(_self_);
}



inline void _1badbcd56_structureMethods(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bd427ca4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _81921_f = *it;
			{
				_1badbc372_func(_self_, _81921_f);
				_1bad9d573_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bd427ca4:;
			++it;
			goto _iter_begin_1bd427ca4;
		}
		_iter_end_1bd427ca4:;
	};
}



inline void _1badbd0cb_structureDeriveDefs(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _82544_s) {
	if (_1ac4268da_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1bad9d573_write(_self_, static__1bad50547_cloneFuncDef(_82544_s.get()._field_Decl));
		_1bad9d573_write(_self_, jule::Str("{\n", 2));
		_1bad9dd15_addIndent(_self_);
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, static__1badc4500_structureIns(_82544_s));
		_1bad9d573_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd42a9ee:;
			if (it != expr.end()) {
				jule::Ptr<_1ac442d57_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1bad557d3_field(_83320_f.get()._field_Decl);;
					_1bada0553_indent(_self_);
					_1bad9d573_write(_self_, jule::Str("clone.", 6));
					_1bad9d573_write(_self_, _83421_ident);
					_1bad9d573_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1bad9d573_write(_self_, _83421_ident);
					_1bad9d573_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1bd42a9ee:;
				++it;
				goto _iter_begin_1bd42a9ee;
			}
			_iter_end_1bd42a9ee:;
		};
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, jule::Str("return clone;\n", 14));
		_1bad9ed05_doneIndent(_self_);
		_1bad9d573_write(_self_, jule::Str("}", 1));
	};
}



inline void _1badbd351_structureOstream(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _84941_s) {
	_1bada0553_indent(_self_);
	_1bad9d573_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1bad9d573_write(_self_, static__1bad5553b_structureIns(_84941_s));
	_1bad9d573_write(_self_, jule::Str(" _Src) {\n", 9));
	_1bad9dd15_addIndent(_self_);
	_1bada0553_indent(_self_);
	jule::Ptr<_1ac512b80_Fn> _85717_fts = _1ac441bad_FindMethod(_84941_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1ad1134d8_Str(_85717_fts)) {
		_1bad9d573_write(_self_, jule::Str("_Stream << ", 11));
		_1bad9d573_write(_self_, static__1bad54716_func(_85717_fts));
		_1bad9d573_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1bad9d573_write(_self_, jule::Str("_Stream << \"", 12));
		_1bad9d573_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1bad9d573_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1bd4333db:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1ac442d57_FieldIns> _86725_f = *it;
				{
					_1bada0553_indent(_self_);
					_1bad9d573_write(_self_, jule::Str("_Stream << \"", 12));
					_1bad9d573_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1bad9d573_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1ac466a3a_StructIns> _87421_strct = _1ad18878e_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1bad9d573_write(_self_, jule::Str(" cpp.", 5));
						_1bad9d573_write(_self_, static__1bad557d3_field(_86725_f.get()._field_Decl));
						_1bad9d573_write(_self_, jule::Str("\"", 1));
					} else {
						_1bad9d573_write(_self_, jule::Str("\" << _Src.", 10));
						_1bad9d573_write(_self_, static__1bad557d3_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1bad9d573_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1bad9d573_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1bd4333db:;
				++it;
				_86718_i++;
				goto _iter_begin_1bd4333db;
			}
			_iter_end_1bd4333db:;
		};
		_1bada0553_indent(_self_);
		_1bad9d573_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1bada0553_indent(_self_);
	_1bad9d573_write(_self_, jule::Str("return _Stream;\n", 16));
	_1bad9ed05_doneIndent(_self_);
	_1bad9d573_write(_self_, jule::Str("}", 1));
}



inline void _1badbd5c6_structureIns(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac466a3a_StructIns>& _90037_s) {
	_1badbcd56_structureMethods(_self_, _90037_s);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbd0cb_structureDeriveDefs(_self_, _90037_s);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
	_1badbd351_structureOstream(_self_, _90037_s);
}



inline void _1badbd84b_structure(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ac43a6e0_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd43b56a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _90921_ins = *it;
			{
				_1badbd5c6_structureIns(_self_, _90921_ins);
				_1bad9d573_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bd43b56a:;
			++it;
			goto _iter_begin_1bd43b56a;
		}
		_iter_end_1bd43b56a:;
	};
}



inline void _1badbda27_structures(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1bd43bceb:;
		if (it != expr.end()) {
			jule::Ptr<_1ac43a6e0_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1badbd84b_structure(_self_, _91621_s);
					_1bad9d573_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bd43bceb:;
			++it;
			goto _iter_begin_1bd43bceb;
		}
		_iter_end_1bd43bceb:;
	};
}



inline void _1badbdc03_funcs(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _92535_pkg) mutable -> void {
		_1badbea4a_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1bd440a8b:;
				if (it != expr.end()) {
					jule::Ptr<_1ac512b80_Fn> _92729_f = *it;
					{
						if (((!(_1da020341_Test)) && _1badc8801_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1bd440a8b;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1badbc372_func(_self_, _92729_f);
							_1bad9d573_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1bd440a8b:;
					++it;
					goto _iter_begin_1bd440a8b;
				}
				_iter_end_1bd440a8b:;
			};
		}));
	}));
}



inline void _1badbde78_pushInit(jule::Ptr<_1badba21b_ObjectCoder> _self_, jule::Ptr<_1ad0e0075_Package>& _94033_pkg) {
	_1badbea4a_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)>([=](jule::Ptr<_1ad15442a_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1bd443440:;
			if (it != expr.end()) {
				jule::Ptr<_1ac512b80_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1bada0553_indent(_self_);
						_1bad9d573_write(_self_, static__1bad54716_func(_94220_f));
						_1bad9d573_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1bd443440:;
				++it;
				goto _iter_begin_1bd443440;
			}
			_iter_end_1bd443440:;
		};
	}));
}



inline void _1badbe154_initCaller(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad9d573_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1bad9dd15_addIndent(_self_);
	_1bad8b6d7_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ad0e0075_Package>&)>([=](jule::Ptr<_1ad0e0075_Package>& _95535_pkg) mutable -> void {
		_1badbde78_pushInit(_self_, _95535_pkg);
	}));
	_1bad9ed05_doneIndent(_self_);
	_1bad9d573_write(_self_, jule::Str("\n}", 2));
}



inline void _1badbe330_end(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad9d573_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1da020341_Test) {
		_1bad9d573_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1bad9d573_write(_self_, jule::Str("entry_point();", 14));
	};
	_1bad9d573_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1badbe50b_serializeHead(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1bad7ea3d_prepareStructures(_self_);
	_1bad8bc6a_buildTraitMap(_self_);
	_1bad7b210_head(_self_);
	_1bad9e563_links(_self_);
	_1bad9d573_write(_self_, jule::Str("\n", 1));
	_1badbcad1_decls(_self_);
	_1bad9d573_write(_self_, jule::Str("\n", 1));
	_1badbda27_structures(_self_);
	_1badbdc03_funcs(_self_);
	_1badbe154_initCaller(_self_);
	_1bad9d573_write(_self_, jule::Str("\n\n", 2));
}



inline void _1badbe6d7_Serialize(jule::Ptr<_1badba21b_ObjectCoder> _self_) {
	_1badbe50b_serializeHead(_self_);
	_1badbe330_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1badba21b_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1bd6ed5c9_parseInteger(_1bae0e9be_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1bd7012d0:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1bd7017a8:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1bd701643:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1bd701896:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1bd70190c:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1bd700e39:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1bd700d5c:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1bd70668c_parseInteger(_1bae0e9be_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1bd70934e:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1bd709827:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1bd7096b2:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1a9142ae3_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1bd709915:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1bd70997b:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1bd708ea8:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1bd708dcb:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _1bae102b6_getData(_1bae0e9be_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1bae10508_processFlag(_1bae0e9be_argParser* _self_, jule::Trait<_1bae0a877_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bd6d5b00_Flag>>()) {
			_case_begin_1bd6ea74c:;
			{
				jule::Ptr<_1bd6d5b00_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1bd6d5b00_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bd6ea6d6:;
	};
	jule::Str _22513_data = _1bae102b6_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1bae0a877_CommonFlag_mptr_data[(_21735_flag).type_offset]._1badcab11_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bd6c9929_Flag>>()) {
			_case_begin_1bd6ebe13:;
			{
				jule::Ptr<_1bd6c9929_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1bd6c9929_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _1bd6ed5c9_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1ace374e9_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1bae0a877_CommonFlag_mptr_data[(_21735_flag).type_offset]._1badcab11_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd6cd5dc_Flag>>()) {
			_case_begin_1bd6ec83c:;
			{
				jule::Ptr<_1bd6cd5dc_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1bd6cd5dc_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _1bd70668c_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1acdd8b82_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1bae0a877_CommonFlag_mptr_data[(_21735_flag).type_offset]._1badcab11_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd6d20c4_Flag>>()) {
			_case_begin_1bd6ec8a3:;
			{
				jule::Ptr<_1bd6d20c4_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1bd6d20c4_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1ad0bd938_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1bae0a877_CommonFlag_mptr_data[(_21735_flag).type_offset]._1badcab11_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd6d95d7_Flag>>()) {
			_case_begin_1bd6ec919:;
			{
				(*(_21735_flag.operator jule::Ptr<_1bd6d95d7_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1bd6ec7c6:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bae1077d_singleDash(_1bae0e9be_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1bd71170d:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1bae0a877_CommonFlag> _26321_flag = _1bae0cd74_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1bae10508_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bd71170d:;
			++it;
			goto _iter_begin_1bd71170d;
		}
		_iter_end_1bd71170d:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bae10a03_doubleDash(_1bae0e9be_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1bae0a877_CommonFlag> _27617_flag = _1bae0ca66_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1bae10508_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bae10bce_tryArg(_1bae0e9be_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1bae10a03_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1bae1077d_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bae10daa_parse(_1bae0e9be_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1bae10bce_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bd7197d2:;
	}
	_iter_end_1bd7197d2:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1bae0e9be_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1db9dac61_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1db9db008_EncodeRune(jule::I32 _7819_r) {
	jule::I32 _7830_r1 = jule::I32();
	jule::I32 _7840_r2 = jule::I32();
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		_7830_r1 = 65533LL;
		_7840_r2 = 65533LL;
		return std::make_tuple(_7830_r1,_7840_r2);
	};
	_7819_r-=65536LL;
	_7830_r1 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	_7840_r2 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return std::make_tuple(_7830_r1,_7840_r2);
}



inline jule::Slice<jule::I32> _1db9db5be_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1bae20a9b:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1bae21618:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1db9dac61_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1bae21085:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1bae2101e:;
			};
			(_12113_n)++;
		}
	_iter_next_1bae1eacd:;
	}
	_iter_end_1bae1eacd:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _1db9db8cc_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1bae2464e:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1bae246c6:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _1db9db008_EncodeRune(_14929_r);
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1bae2362b:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _1db9c64dd_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1bae31271:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1bae31271;
				};
				_2113_buff=_1db9db8cc_AppendRune(_2113_buff,_2212_r);
			}
			_iter_next_1bae31271:;
			++it;
			goto _iter_begin_1bae31271;
		}
		_iter_end_1bae31271:;
	};
	return _1db9db8cc_AppendRune(_2113_buff,0LL);
}



inline jule::Str _1db9c7126_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto &expr = _3415_s;
		auto it = expr.begin();
		_iter_begin_1bae32937:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL,_399_i);
					goto _iter_end_1bae32937;
				};
			}
			_iter_next_1bae32937:;
			++it;
			_399_i++;
			goto _iter_begin_1bae32937;
		}
		_iter_end_1bae32937:;
	};
	return static_cast<jule::Str>(_1db9db5be_Decode(_3813_codePage));
}



inline jule::Str _1db9c7258_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1db9db5be_Decode(_5513_codePage));
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1bae33c9b:;
	}
	_iter_end_1bae33c9b:;;
	return jule::Str();
}



inline jule::I64 _1d9e96350_GetLastErrno(void) {
	return errno;
}



inline jule::Uintptr _1db9dcee9_GetStdHandle(jule::Uintptr _5417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5417_stdh))));
}



inline jule::I64 _1db9dd48e_Wstat(jule::U16* _5817_path, struct stat* _5833_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5817_path)),_5833_stat));
}



inline jule::I64 _1db9dd879_Wopen(jule::U16* _6317_path, jule::I64 _6329_flag, jule::I64 _6340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6317_path[0LL])))),_6329_flag,_6340_mode));
}



inline jule::U32 _1db9dda77_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1db9dddb8_GetCurrentDirectory(jule::U32 _7231_bufflen, jule::U16* _7249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7231_bufflen,((wchar_t*)(_7249_buff))));
}



inline jule::Bool _1db9de407_DeleteFile(jule::U16* _8322_path) {
	return DeleteFileW(((wchar_t*)(_8322_path)));
}



inline jule::Bool _1db9de69e_CreateDirectory(jule::U16* _8827_path) {
	return CreateDirectoryW(((wchar_t*)(_8827_path)),nullptr);
}



inline jule::Bool _1db9de946_RemoveDirectory(jule::U16* _9327_path) {
	return RemoveDirectoryW(((wchar_t*)(_9327_path)));
}



inline _WDIR* _1db9debdd_Wopendir(jule::U16* _9820_path) {
	return _wopendir(((wchar_t*)(_9820_path)));
}



inline struct _wdirent* _1db9dee85_Wreaddir(_WDIR* _10124_dir) {
	return _wreaddir(_10124_dir);
}



inline jule::I64 _1db9e022c_Wclosedir(_WDIR* _10425_dir) {
	return static_cast<jule::I64>(_wclosedir(_10425_dir));
}



inline jule::U32 _1db9e0903_GetFullPathName(jule::U16* _10727_path, jule::U32 _10739_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10727_path)),_10739_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _1db9e0c44_GetConsoleMode(jule::Uintptr _11319_handle, jule::I64& _11340_mode) {
	return GetConsoleMode(((HANDLE)(_11319_handle)),((DWORD*)((&(_11340_mode)))));
}



inline jule::Bool _1db9e1085_SetConsoleMode(jule::Uintptr _11819_handle, jule::I64 _11835_mode) {
	return SetConsoleMode(((HANDLE)(_11819_handle)),static_cast<DWORD>(_11835_mode));
}



inline jule::Bool _1db9e15b3_WriteConsole(jule::Uintptr _12324_handle, jule::U16* _12340_buffer, jule::I64 _12354_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12324_handle)),((void*)(_12340_buffer)),static_cast<DWORD>(_12354_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _1db9e1ae1_ReadConsole(jule::Uintptr _13023_handle, jule::U16* _13043_buffer, jule::I64 _13057_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13023_handle)),((void*)(_13043_buffer)),static_cast<DWORD>(_13057_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _1db9e3e78_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _1db9e4363_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _1db9e46d7_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _1db9e4ac2_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _1db9e4cd1_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline std::tuple<jule::I32,jule::I64> _1dbac6c1a_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1dbac5ab5_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1dbac6137_acceptRange _1969_accept = _1dbac649a_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _1dbac7039_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1dbac5ab5_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1dbac6137_acceptRange _2439_accept = _1dbac649a_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _1dbac72d1_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1dbac8ba6_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1baea7715;
			};
		}
	_iter_next_1baea7715:;
	}
	_iter_end_1baea7715:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _1dbac6c1a_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::I64 _1dbac7820_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1baeae8d7:;
			{
				return -1LL;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1baeae123:;
			{
				return 1LL;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1baeae19a:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1baeae222:;
			{
				return -1LL;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1baeae299:;
			{
				return 3LL;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1baeae541:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1baeae0ac:;
			{
				return -1LL;
			}
		}
		_match_end_1baeae002:;
	};
}



inline jule::I64 _1dbac7c3d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1baeb4c50:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1baeb4cb6:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1baeb4a0d:;
			{
				_37434_r=65533LL;
				goto _case_begin_1baeb4a74;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1baeb4a74:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1baeb2269:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1baeb2214:;
	};
}



inline jule::Slice<jule::U8> _1dbac807e_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _1dbac83c0_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _1dbac83c0_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1baebce34:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1baebb5c5:;
			{
				_41242_r=128LL;
				goto _case_begin_1baebb63b;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1baebb63b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1baebaaad:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1baebaa58:;
	};
}



inline jule::I64 _1dbac890e_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1baec537b;
			};
			jule::U8 _48213_x = _1dbac5ab5_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1baec537b;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1baec537b;
			};
			_1dbac6137_acceptRange _49213_accept = _1dbac649a_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1baec537b:;
	}
	_iter_end_1baec537b:;;
	return _47327_n;
}



inline jule::Bool _1dbac8ba6_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::I64 _1da13dc23_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _1db9dda77_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1bb000cad:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bb002d04:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bb002d6a:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1bb002dd1:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1bb0010bb:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1bb002c8d:;
	};
}



inline jule::Slice<jule::Str> _1da142870_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1da142ce3_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1da143be5_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1da143be5_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _1db9dddb8_GetCurrentDirectory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_1da13dc23_getLastOsErrorWindows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_1db9c7258_U16PtrToStr((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _1dbd194ce_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline jule::Bool _1a915c932_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a91c6e1e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _1a91d08c8_isExcludingLatin(_1a91678a4_Letter,_7613_r);
}



inline jule::Bool _1a91cece5_is16(jule::Slice<_1a91cd233_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1bb61aaae:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1a91cd233_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1bb61aaae:;
				++it;
				_19313_i++;
				goto _iter_begin_1bb61aaae;
			}
			_iter_end_1bb61aaae:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1a91cd233_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1bb61943c:;
	}
	_iter_end_1bb61943c:;;
	return false;
}



inline jule::Bool _1a91d0136_is32(jule::Slice<_1a91cd6a6_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1bb622247:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1a91cd6a6_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1bb622247:;
				++it;
				_23013_i++;
				goto _iter_begin_1bb622247;
			}
			_iter_end_1bb622247:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1a91cd6a6_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1bb61ddd1:;
	}
	_iter_end_1bb61ddd1:;;
	return false;
}



inline jule::Bool _1a91d08c8_isExcludingLatin(jule::Ptr<_1a91cdb29_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a91cd233_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _1a91cece5_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_1a91cd6a6_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _1a91d0136_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _1a91d0b70_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a91c6e1e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _1a91d08c8_isExcludingLatin(_1a916e944_Upper,_29512_r);
}



inline jule::Str _1a9138028_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	jule::Str _1913_ss = jule::Str::alloc((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1913_ss+=_1111_s;
		}
	_iter_next_1bb6449c8:;
	}
	_iter_end_1bb6449c8:;;
	return _1913_ss;
}



inline jule::Bool _1a91413c7_hasPrefix(jule::Str& _2615_s, jule::Str& _2624_sub, jule::I64 _2638_start) {
	if (((_2624_sub.len() == 0LL) || ((_2615_s.len() - _2638_start) < _2624_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2624_sub.len()); std::tie(_3113_i,_2638_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2638_start + 1LL)))) {
		{
			if ((_2615_s[_2638_start] != _2624_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1bb647a97:;
	}
	_iter_end_1bb647a97:;;
	return true;
}



inline jule::Bool _1a9142ae3_HasPrefix(jule::Str _4114_s, jule::Str _4122_sub) {
	return _1a91413c7_hasPrefix(_4114_s,_4122_sub,0LL);
}



inline jule::Bool _1a9154253_hasSuffix(jule::Str& _4515_s, jule::Str& _4524_sub, jule::I64 _4538_start) {
	if (((_4524_sub.len() == 0LL) || ((_4515_s.len() - _4538_start) < _4524_sub.len()))) {
		return false;
	};
	_4538_start=static_cast<jule::I64>((_4515_s.len() - _4538_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4524_sub.len()); (_5113_i)++) {
		{
			if ((_4515_s[((_4538_start - _5113_i) - 1LL)] != _4524_sub[((_4524_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1bb649aaa:;
	}
	_iter_end_1bb649aaa:;;
	return true;
}



inline jule::Bool _1a91579c6_HasSuffix(jule::Str _6114_s, jule::Str _6122_sub) {
	return _1a9154253_hasSuffix(_6114_s,_6122_sub,0LL);
}



inline jule::I64 _1a91379a6_FindAt(jule::Str _6911_s, jule::Str _6919_sub, jule::I64 _6933_i) {
	if ((((_6933_i < 0LL) || (_6911_s.len() < _6919_sub.len())) || (_6919_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6933_i < _6911_s.len()); (_6933_i)++) {
		{
			if (_1a91413c7_hasPrefix(_6911_s,_6919_sub,_6933_i)) {
				return _6933_i;
			};
		}
	_iter_next_1bb64d55e:;
	}
	_iter_end_1bb64d55e:;;
	return -1LL;
}



inline jule::I64 _1a9138a62_FindLastAt(jule::Str _9215_s, jule::Str _9223_sub, jule::I64 _9233_i) {
	jule::I64 _9313_j = ((_9233_i - _9223_sub.len()) + 1LL);;
	if (((((_9223_sub.len() == 0LL) || (_9233_i < 0LL)) || (_9233_i >= _9215_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9223_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9215_s[_9917_k] != _9223_sub[_10017_z])) {
						goto _iter_next_1bb650c15;
					};
				}
			_iter_next_1bb652be5:;
			}
			_iter_end_1bb652be5:;;
			return _9313_j;
		}
	_iter_next_1bb650c15:;
	}
	_iter_end_1bb650c15:;;
	return -1LL;
}



inline jule::I64 _1a91d1049_FindLast(jule::Str _11413_s, jule::Str _11421_sub) {
	return static_cast<jule::I64>(_1a9138a62_FindLastAt(_11413_s,_11421_sub,static_cast<jule::I64>((_11413_s.len() - 1LL))));
}



inline jule::I64 _1a91d1654_findRune(jule::Slice<jule::U8>& _17014_s, jule::I32 _17025_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17014_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _1dbac6c1a_DecodeRune(_17014_s.slice(_17113_i));
			if ((_17025_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1bb65a6ae:;
	}
	_iter_end_1bb65a6ae:;;
	return -1LL;
}



inline jule::I64 _1a91d1ae9_FindLastByte(jule::Str _19717_s, jule::U8 _19725_b) {
	jule::I64 _19813_i = (_19717_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19717_s[_19813_i] == _19725_b)) {
				return _19813_i;
			};
		}
	_iter_next_1bb65d717:;
	}
	_iter_end_1bb65d717:;;
	return -1LL;
}



inline jule::I64 _1a91d20c2_FindAny(jule::Str _23812_s, jule::Str _23820_runes) {
	jule::Slice<jule::U8> _2399_sb = _1dbd194ce_Stobs(_23812_s);;
	jule::Slice<jule::U8> _24013_rb = _1dbd194ce_Stobs(_23820_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _1dbac6c1a_DecodeRune(_2399_sb.slice(_24113_i));
			if ((_1a91d1654_findRune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1bb663123:;
	}
	_iter_end_1bb663123:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1a91d2336_Split(jule::Str _27210_s, jule::Str _27218_sub, jule::I64 _27232_n) {
	jule::I64 _27313_cap = _27232_n;;
	if ((_27232_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27232_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27232_n < 0LL)) {
		_27232_n=static_cast<jule::I64>(_27210_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27232_n > 0LL); (_27232_n)--) {
		{
			jule::I64 _28613_j = _1a91379a6_FindAt(_27210_s,_27218_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1bb669cea;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27218_sub.len()));
		}
	_iter_next_1bb669cea:;
	}
	_iter_end_1bb669cea:;;
	if (((_27232_n > 0LL) && (_28413_i < _27210_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _1a91d2468_Contains(jule::Str _30013_s, jule::Str _30021_sub) {
	return (_1a91379a6_FindAt(_30013_s,_30021_sub,0LL) != -1LL);
}



inline jule::Bool _1a91d280e_ContainsAny(jule::Str _31616_s, jule::Str _31624_runes) {
	return (_1a91d20c2_FindAny(_31616_s,_31624_runes) != -1LL);
}



inline jule::I64 _1a91d2941_Count(jule::Str _32210_s, jule::Str _32218_sub) {
	if ((_32218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32613_n = 0LL;;
	jule::I64 _32713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _32913_j = _1a91379a6_FindAt(_32210_s,_32218_sub,_32713_i);;
			if ((_32913_j == -1LL)) {
				goto _iter_end_1bb670718;
			};
			(_32613_n)++;
			_32713_i=static_cast<jule::I64>((_32913_j + _32218_sub.len()));
		}
	_iter_next_1bb670718:;
	}
	_iter_end_1bb670718:;;
	return _32613_n;
}



inline jule::Str _1a91d2a73_Replace(jule::Str _34212_s, jule::Str _34220_sub, jule::Str _34230_new, jule::I64 _34244_n) {
	if (((_34244_n == 0LL) || (_34220_sub == _34230_new))) {
		return _34212_s;
	};
	jule::I64 _3479_m = _1a91d2941_Count(_34212_s,_34220_sub);;
	if ((_3479_m == 0LL)) {
		return _34212_s;
	};
	if (((_34244_n < 0LL) || (_3479_m < _34244_n))) {
		_34244_n=_3479_m;
	};
	jule::Str _35513_ss = jule::Str::alloc((_34212_s.len() + (_34244_n * (_34230_new.len() - _34220_sub.len()))));;
	jule::I64 _35613_i = 0LL;;
	for (; (_34244_n > 0LL); (_34244_n)--) {
		{
			jule::I64 _35813_j = _1a91379a6_FindAt(_34212_s,_34220_sub,_35613_i);;
			if ((_35813_j == -1LL)) {
				goto _iter_end_1bb67471c;
			};
			_35513_ss+=_34212_s.slice(_35613_i,_35813_j);
			_35513_ss+=_34230_new;
			_35613_i=static_cast<jule::I64>((_35813_j + _34220_sub.len()));
		}
	_iter_next_1bb67471c:;
	}
	_iter_end_1bb67471c:;;
	_35513_ss+=_34212_s.slice(_35613_i);
	return _35513_ss;
}



inline void _1a91d18b8_trimLeft(jule::Slice<jule::U8>& _39818_s, jule::Slice<jule::U8>& _39830_cutset) {
	jule::I64 _39913_i = 0LL;;
	while ((_39913_i < _39818_s.len())) {
		{
			jule::I32 _40114_r;;
			jule::I64 _40117_n;;
			std::tie(_40114_r,_40117_n) = _1dbac6c1a_DecodeRune(_39818_s.slice(_39913_i));
			if ((_1a91d1654_findRune(_39830_cutset,_40114_r) == -1LL)) {
				_39818_s=_39818_s.slice(_39913_i);
				return;;
			};
			_39913_i+=_40117_n;
		}
	_iter_next_1bb6795ce:;
	}
	_iter_end_1bb6795ce:;;
	_39818_s=nullptr;
}



inline jule::Str _1a91d34be_TrimLeft(jule::Str _41313_s, jule::Str _41321_cutset) {
	jule::Slice<jule::U8> _41413_bytes = _1dbd194ce_Stobs(_41313_s);;
	jule::Slice<jule::U8> _4159_bcutset = _1dbd194ce_Stobs(_41321_cutset);;
	_1a91d18b8_trimLeft(_41413_bytes,_4159_bcutset);
	return static_cast<jule::Str>(_41413_bytes);
}



inline void _1a91d3601_trimRight(jule::Slice<jule::U8>& _42019_s, jule::Slice<jule::U8>& _42031_cutset) {
	jule::I64 _42113_i = _42019_s.len();;
	while ((_42113_i > 0LL)) {
		{
			jule::I32 _42314_r;;
			jule::I64 _42317_n;;
			std::tie(_42314_r,_42317_n) = _1dbac72d1_DecodeLastRune(_42019_s.slice(0LL,_42113_i));
			if ((_1a91d1654_findRune(_42031_cutset,_42314_r) == -1LL)) {
				_42019_s=_42019_s.slice(0LL,_42113_i);
				return;;
			};
			_42113_i-=_42317_n;
		}
	_iter_next_1bb67ca33:;
	}
	_iter_end_1bb67ca33:;;
	_42019_s=nullptr;
}



inline jule::Str _1a91d3865_Trim(jule::Str _4449_s, jule::Str _44417_cutset) {
	jule::Slice<jule::U8> _44513_bytes = _1dbd194ce_Stobs(_4449_s);;
	jule::Slice<jule::U8> _4469_bcutset = _1dbd194ce_Stobs(_44417_cutset);;
	_1a91d18b8_trimLeft(_44513_bytes,_4469_bcutset);
	_1a91d3601_trimRight(_44513_bytes,_4469_bcutset);
	return static_cast<jule::Str>(_44513_bytes);
}



inline jule::Bool _1da11ad21_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));
}



inline jule::Bool _1da11b10c_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));
}



inline jule::U8 _1da11b3a4_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - ('a' - 'A')));
	};
	return _5412_c;
}



inline jule::I64 _1da11b96a_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_1da11b10c_isSlash(_8218_path[0LL]))) || (!(_1da11b10c_isSlash(_8218_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1da11bc12_cutPath(_8218_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1da11bc12_cutPath(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_1da11b3a4_toUpper(_9613_p2[0LL]) == 'U')) && (_1da11b3a4_toUpper(_9613_p2[1LL]) == 'N')) && (_1da11b3a4_toUpper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1da11bc12_cutPath(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1da11bc12_cutPath(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1da11bc12_cutPath(jule::Str _11912_path) {
	jule::Str _11925_before = jule::Str();
	jule::Str _11938_after = jule::Str();
	jule::Bool _11950_found = jule::Bool();
	{
		auto &expr = _11912_path;
		auto it = expr.begin();
		_iter_begin_1bb69a248:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_1da11b10c_isSlash(_11912_path[_1209_i])) {
					_11925_before = _11912_path.slice(0LL,_1209_i);
					_11938_after = _11912_path.slice((_1209_i + 1LL));
					_11950_found = true;
					return std::make_tuple(_11925_before,_11938_after,_11950_found);
				};
			}
			_iter_next_1bb69a248:;
			++it;
			_1209_i++;
			goto _iter_begin_1bb69a248;
		}
		_iter_end_1bb69a248:;
	};
	_11925_before = _11912_path;
	_11938_after = jule::Str();
	_11950_found = false;
	return std::make_tuple(_11925_before,_11938_after,_11950_found);
}



inline std::tuple<jule::Str,jule::Bool> _1da11bea9_fullPath(jule::Str _12813_name) {
	jule::Str _12826_path = jule::Str();
	jule::Bool _12837_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16Name = _1db9c64dd_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_1db9e0903_GetFullPathName(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12826_path = jule::Str();
				_12837_ok = false;
				return std::make_tuple(_12826_path,_12837_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12826_path = _1db9c7126_Utf16ToStr(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12837_ok = true;
				return std::make_tuple(_12826_path,_12837_ok);
			};
		}
	_iter_next_1bb4622eb:;
	}
	_iter_end_1bb4622eb:;;
	_12826_path = jule::Str();
	_12837_ok = false;
	return std::make_tuple(_12826_path,_12837_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1da11c32d_abs(jule::Str _14512_path) {
	jule::Bool _14530_ok = jule::Bool();
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	std::tie(_14512_path,_14530_ok) = _1da11bea9_fullPath(_14512_path);
	if ((!(_14530_ok))) {
		_14530_ok = false;
		return std::make_tuple(jule::Str(),_14530_ok);
	};
	_14530_ok = true;
	return std::make_tuple(_1a91d415c_Clean(_14512_path),_14530_ok);
}



inline jule::Str _1da11c5c5_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto &expr = _15913_elem;
		auto it = expr.begin();
		_iter_begin_1bb203202:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1bb204b93:;
					}
					else if (_1da11b10c_isSlash(_16113_lastChar)) {
						_case_begin_1bb204d3b:;
						{
							while (((_16217_e.len() > 0LL) && _1da11b10c_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1bb205512:;
							}
							_iter_end_1bb205512:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1bb204da2:;
					}
					else {
						_case_begin_1bb2047db:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1bb20470e:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1bb203202:;
			++it;
			goto _iter_begin_1bb203202;
		}
		_iter_end_1bb203202:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _1a91d415c_Clean(_16013_s);
}



inline jule::Str _1a91d415c_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1da11b96a_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1da11ad21_IsPathSep(_1099_originalPath[0LL])) && _1da11ad21_IsPathSep(_1099_originalPath[1LL]))) {
			return _1a91d43c1_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1da11ad21_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1a91d3ac9_lazyBuff _12713_out = _1a91d3ac9_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1a91d3de8_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1da11ad21_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1bb20e065:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1da11ad21_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1bb211c5a:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1da11ad21_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1bb211cc1:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1bb214c19:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1da11ad21_IsPathSep(static_cast<jule::U8>(_1a91d3cb6_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1bb215016:;
									}
									_iter_end_1bb215016:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1bb214c80:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1a91d3de8_append(&_12713_out, 92LLU);
									};
									_1a91d3de8_append(&_12713_out, '.');
									_1a91d3de8_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1bb214851:;
						};
					}
				}
				else {
					_case_begin_1bb20c3d7:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1a91d3de8_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_1da11ad21_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1a91d3de8_append(&_12713_out, '.');
										_1a91d3de8_append(&_12713_out, 92LLU);
										goto _iter_end_1bb20e10e;
									};
								}
							_iter_next_1bb20e10e:;
							}
							_iter_end_1bb20e10e:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_1da11ad21_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1a91d3de8_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1bb20da26:;
						}
						_iter_end_1bb20da26:;;
					}
				}
				_match_end_1bb20c30a:;
			};
		}
	_iter_next_1bb20b969:;
	}
	_iter_end_1bb20b969:;;
	if ((_12713_out._field_w == 0LL)) {
		_1a91d3de8_append(&_12713_out, '.');
	};
	return _1a91d43c1_FromSlash(_1a91d402a_string(&_12713_out));
}



inline jule::Str _1a91d43c1_FromSlash(jule::Str _21114_path) {
	if ((92LL == '/')) {
		return _21114_path;
	};
	return _1a91d2a73_Replace(_21114_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1a91d4503_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1da11c5c5_join(_2259_elem);
}



inline jule::Str _1a91d4635_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1da11ad21_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_1bb219b97:;
	}
	_iter_end_1bb219b97:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1a91d4767_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1da11c32d_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1a91d4899_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _1da11ad21_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1bb21b9ac:;
	}
	_iter_end_1bb21b9ac:;;
	(_25413_path).mut_slice(_1a91d4b0d_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1da11ad21_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1bb21d948:;
	}
	_iter_end_1bb21d948:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25413_path;
}



inline jule::Str _1a91d49cb_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1a91d4b0d_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1da11ad21_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1bb220dbd:;
	}
	_iter_end_1bb220dbd:;;
	jule::Str _2919_dir = _1a91d415c_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1a91d4b0d_VolumeName(jule::Str _30315_path) {
	return _1a91d43c1_FromSlash(_30315_path.slice(0LL,_1da11b96a_volumeNameLen(_30315_path)));
}



inline jule::I64 _1d9e3591b_getLastFsError(void) {
	jule::I64 _729_err = _1d9e96350_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bb23509c:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bb234585:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1bb234a08:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1bb234a6e:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bb234ad5:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bb234b4b:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1bb2352ab:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bb235322:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bb235388:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bb2353ee:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bb235465:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bb2354cb:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bb235542:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bb2355b9:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bb235641:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1bb2356b8:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bb235740:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bb2357b7:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bb23583e:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bb2358b6:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1bb23593d:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bb2359b5:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bb235a3c:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bb235ab4:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bb235b3b:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1bb235bb3:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1bb235c3a:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1bb235cb2:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1bb234871:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1bb23481b:;
	};
}



inline jule::Bool _1dbb28486_isConsoleHandle(jule::Uintptr _11520_handle) {
	return (((_11520_handle == _1db9c7566_STDIN) || (_11520_handle == _1db9cb0a3_STDOUT)) || (_11520_handle == _1db9c59c6_STDERR));
}



inline jule::I64 _1a92b07aa_getLastProcessError(void) {
	jule::I64 _429_err = _1d9e96350_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bb264d35:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1bb2652a8:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1bb26531e:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bb265385:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bb2653eb:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bb26563d:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bb2656a4:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1bb26571a:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1bb265781:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1bb2657e7:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1bb26585d:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1bb265121:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1bb2650bb:;
	};
}



inline jule::Slice<wchar_t*> _1a92c0369_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>> _1726_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1726_us.len() + 1LL));;
	{
		auto &expr = _1726_us;
		auto it = expr.begin();
		_iter_begin_1bb26d3e3:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1726_us[_199_i][0LL])))));;
			}
			_iter_next_1bb26d3e3:;
			++it;
			_199_i++;
			goto _iter_begin_1bb26d3e3;
		}
		_iter_end_1bb26d3e3:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1a92c0611_strSliceToUstrSlice(jule::Slice<jule::Str> _2624_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2624_s.len());;
	{
		auto &expr = _2624_s;
		auto it = expr.begin();
		_iter_begin_1bb2701b4:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_1db9c64dd_Utf16FromStr(_2812_p));;
			}
			_iter_next_1bb2701b4:;
			++it;
			goto _iter_begin_1bb2701b4;
		}
		_iter_end_1bb2701b4:;
	};
	return _2713_us;
}



inline jule::I64 _1a92c091e_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16File = _1db9c64dd_Utf16FromStr(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1a92c0611_strSliceToUstrSlice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _1a92c0369_ustrSliceToWcstrSlice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16File[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _1a92c0d09_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1a92c0611_strSliceToUstrSlice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _1a92c0369_ustrSliceToWcstrSlice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1a92c0611_strSliceToUstrSlice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _1a92c0369_ustrSliceToWcstrSlice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16File = _1db9c64dd_Utf16FromStr(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16File[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1a92c1a30_Exit(jule::I64 _129_code) {
	_1db9e4cd1_Exit(_129_code);
}



inline jule::Str _1a92c1c2d_Executable(void) {
	return jule::executable();
}



inline jule::Bool _1a9265595_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1a926584d_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _1a9263b26_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1bb2a5848:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1bb2a5848:;
			++it;
			goto _iter_begin_1bb2a5848;
		}
		_iter_end_1bb2a5848:;
	};
	return false;
}



inline jule::Bool _1a9265ae5_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1a9264ece_CppExts;
		auto it = expr.begin();
		_iter_begin_1bb2a7839:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1bb2a7839:;
			++it;
			goto _iter_begin_1bb2a7839;
		}
		_iter_end_1bb2a7839:;
	};
	{
		auto &expr = _1a92652ba_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1bb2a8582:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1bb2a8582:;
			++it;
			goto _iter_begin_1bb2a8582;
		}
		_iter_end_1bb2a8582:;
	};
	return false;
}



inline jule::Str _1a9272706_Logf(jule::Str _2949_fmt, jule::Slice<jule::Any> _29422_args) {
	return _1a927311e_applyFmt(_2949_fmt,jule::Any(_29422_args));
}



inline jule::Str _1a92729e2_argToStr(jule::Any _29813_arg) {
	{
		auto &_match_expr{ _29813_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1bb6d16be:;
			{
				return _29813_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1bb6d1735:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1bb6d179b:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1bb6d0866:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1bb6d12b2:;
	};
}



inline jule::I64 _1a9272c89_findNextFmt(jule::Str _31116_fmt) {
	{
		auto &expr = _31116_fmt;
		auto it = expr.begin();
		_iter_begin_1bb6d2a00:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1bb6d2a00:;
			++it;
			_3129_i++;
			goto _iter_begin_1bb6d2a00;
		}
		_iter_end_1bb6d2a00:;
	};
	return -1LL;
}



inline jule::Str _1a927311e_applyFmt(jule::Str _32017_fmt, jule::Slice<jule::Any> _32027_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32027_args;
		auto it = expr.begin();
		_iter_begin_1bb6d432b:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _1a9272c89_findNextFmt(_32017_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1bb6d432b;
				};
				_32113_s+=_32017_fmt.slice(0LL,_32313_i);
				_32113_s+=_1a92729e2_argToStr(jule::Any(_32212_arg));
				(_32017_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1bb6d432b:;
			++it;
			goto _iter_begin_1bb6d432b;
		}
		_iter_end_1bb6d432b:;
	};
	_32113_s+=_32017_fmt;
	return _32113_s;
}



inline jule::Bool _1a92741db_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _1a927561b_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _1a92758c4_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _1a9275b6b_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _1a9275e8a_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _1a9276232_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1a92764c9_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1a9276771_IsUnix(jule::Str _5511_os) {
	return (_1a92758c4_IsDarwin(_5511_os) || _1a9275b6b_IsLinux(_5511_os));
}



inline jule::Bool _1a9276ae5_Is32Bit(jule::Str _5812_arch) {
	return _1a9275e8a_IsI386(_5812_arch);
}



inline jule::Bool _1a9276d8c_Is64Bit(jule::Str _6112_arch) {
	return (_1a9276232_IsAmd64(_6112_arch) || _1a92764c9_IsArm64(_6112_arch));
}



inline void _1a9283ea9_init(void) {
	jule::Str _2513_path = _1a92c1c2d_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1a9295a59_PathWd=({
			auto except = _1da142ce3_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1a9294b57_PathExec=_1a91d49cb_Dir(_2513_path);
		_1a9293eec_PathStdlib=_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a9294b57_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1a92ae38b_PathApi=_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a9294b57_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1a959a831_IsUnaryOp(jule::Str _31014_kind) {
	{
		auto &expr = _1a94eb2ed_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1bb72cd69:;
		if (it != expr.end()) {
			jule::Str &_31112_op = *it;
			{
				if ((_31014_kind == _31112_op)) {
					return true;
				};
			}
			_iter_next_1bb72cd69:;
			++it;
			goto _iter_begin_1bb72cd69;
		}
		_iter_end_1bb72cd69:;
	};
	return false;
}



inline jule::Bool _1a959ab1c_IsBinOp(jule::Str _32012_kind) {
	{
		auto &expr = _1a94eb63e_BinOps;
		auto it = expr.begin();
		_iter_begin_1bb72d771:;
		if (it != expr.end()) {
			jule::Str &_32112_op = *it;
			{
				if ((_32012_kind == _32112_op)) {
					return true;
				};
			}
			_iter_next_1bb72d771:;
			++it;
			goto _iter_begin_1bb72d771;
		}
		_iter_end_1bb72d771:;
	};
	return false;
}



inline jule::Bool _1a959b1d3_IsStr(jule::Str _34010_k) {
	return ((!(_34010_k.empty())) && ((_34010_k[0LL] == '\"') || _1a959b47a_IsRawStr(_34010_k)));
}



inline jule::Bool _1a959b47a_IsRawStr(jule::Str _34313_k) {
	return ((!(_34313_k.empty())) && (_34313_k[0LL] == '`'));
}



inline jule::Bool _1a959b722_IsRune(jule::Str _34711_k) {
	return ((!(_34711_k.empty())) && (_34711_k[0LL] == '\''));
}



inline jule::Bool _1a959bd3d_IsBool(jule::Str _35311_k) {
	return ((_35311_k == jule::Str("true", 4)) || (_35311_k == jule::Str("false", 5)));
}



inline jule::Bool _1a959c0d5_IsFloat(jule::Str _35612_k) {
	if (_1a9142ae3_HasPrefix(_35612_k,jule::Str("0x", 2))) {
		return _1a91d280e_ContainsAny(_35612_k,jule::Str(".pP", 3));
	};
	return _1a91d280e_ContainsAny(_35612_k,jule::Str(".eE", 3));
}



inline jule::Bool _1a959c37c_IsNum(jule::Str _36410_k) {
	if (_36410_k.empty()) {
		return false;
	};
	jule::U8 _3699_b = _36410_k[0LL];;
	return ((_3699_b == '.') || (('0' <= _3699_b) && (_3699_b <= '9')));
}



inline jule::Bool _1a959c8bb_IsIgnoreIdent(jule::Str _37918_ident) {
	return (_37918_ident == jule::Str("_", 1));
}



inline jule::Bool _1a959cb63_IsAnonIdent(jule::Str _38216_ident) {
	return (_38216_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1a959d1a2_IsSpace(jule::I32 _39512_r) {
	{
		auto &expr = _1a94eb089_Spaces;
		auto it = expr.begin();
		_iter_begin_1bb737648:;
		if (it != expr.end()) {
			jule::I32 &_39612_cr = *it;
			{
				if ((_39512_r == _39612_cr)) {
					return true;
				};
			}
			_iter_next_1bb737648:;
			++it;
			goto _iter_begin_1bb737648;
		}
		_iter_end_1bb737648:;
	};
	return false;
}



inline jule::Bool _1a959d603_IsLetter(jule::I32 _40513_r) {
	return _1a915c932_IsLetter(_40513_r);
}



inline jule::Bool _1a959db42_IsDecimal(jule::U8 _42514_b) {
	return (('0' <= _42514_b) && (_42514_b <= '9'));
}



inline jule::Bool _1a959ddd9_IsBinary(jule::U8 _42813_b) {
	return ((_42813_b == '0') || (_42813_b == '1'));
}



inline jule::Bool _1a959e181_IsOctal(jule::U8 _43112_b) {
	return (('0' <= _43112_b) && (_43112_b <= '7'));
}



inline jule::Bool _1a959e428_IsHex(jule::U8 _43410_b) {
	{
		
		if ((('0' <= _43410_b) && (_43410_b <= '9'))) {
			_case_begin_1bb73c4a5:;
			{
				return true;
			}
		}
		else if ((('a' <= _43410_b) && (_43410_b <= 'f'))) {
			_case_begin_1bb73bc8a:;
			{
				return true;
			}
		}
		else if ((('A' <= _43410_b) && (_43410_b <= 'F'))) {
			_case_begin_1bb73bd01:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bb73bc24:;
			{
				return false;
			}
		}
		_match_end_1bb73bb69:;
	};
}



inline jule::Bool _1a959e6c0_IsAssign(jule::U64 _44913_id) {
	return (((((((_44913_id == static_cast<jule::U64>(2LLU)) || (_44913_id == static_cast<jule::U64>(30LLU))) || (_44913_id == static_cast<jule::U64>(33LLU))) || (_44913_id == static_cast<jule::U64>(20LLU))) || (_44913_id == static_cast<jule::U64>(27LLU))) || (_44913_id == static_cast<jule::U64>(3LLU))) || (_44913_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1a959e967_IsPostfixOp(jule::Str _46016_kind) {
	{
		auto &expr = _1a95946e8_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1bb73de02:;
		if (it != expr.end()) {
			jule::Str &_46112_op = *it;
			{
				if ((_46016_kind == _46112_op)) {
					return true;
				};
			}
			_iter_next_1bb73de02:;
			++it;
			goto _iter_begin_1bb73de02;
		}
		_iter_end_1bb73de02:;
	};
	return false;
}



inline jule::Bool _1a959ec0e_IsAssignOp(jule::Str _47015_kind) {
	if (_1a959e967_IsPostfixOp(_47015_kind)) {
		return true;
	};
	{
		auto &expr = _1a9594a39_AssignOps;
		auto it = expr.begin();
		_iter_begin_1bb74190a:;
		if (it != expr.end()) {
			jule::Str &_47412_op = *it;
			{
				if ((_47015_kind == _47412_op)) {
					return true;
				};
			}
			_iter_next_1bb74190a:;
			++it;
			goto _iter_begin_1bb74190a;
		}
		_iter_end_1bb74190a:;
	};
	return false;
}



inline jule::Ptr<_1a95a04b2_File> _1a95a19e1_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1a95a04b2_File>(_1a95a04b2_File{._field_Path=_6315_path, });
}



inline _1a92722b6_Log _1a95a331c_makeErr(jule::I64 _11012_row, jule::I64 _11022_col, jule::Ptr<_1a95a04b2_File>& _11033_f, jule::Str _11043_fmt, jule::Slice<jule::Any> _11056_args) {
	return _1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11012_row, ._field_Column=_11022_col, ._field_Path=_11033_f.get()._field_Path, ._field_Text=_1a9272706_Logf(_11043_fmt,jule::Any(_11056_args)), };
}



inline jule::Bool _1a95a36a2_bytesHasPrefix(jule::Slice<jule::U8>& _12020_bytes, jule::Str _12035_prefix) {
	if ((_12020_bytes.len() < _12035_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12035_prefix;
		auto it = expr.begin();
		_iter_begin_1bb74c020:;
		if (it != expr.end()) {
			jule::I64 _1249_i = it - expr.begin();
			{
				if ((_12020_bytes[_1249_i] != _12035_prefix[_1249_i])) {
					return false;
				};
			}
			_iter_next_1bb74c020:;
			++it;
			_1249_i++;
			goto _iter_begin_1bb74c020;
		}
		_iter_end_1bb74c020:;
	};
	return true;
}



inline jule::Str _1a95a39e3_floatFmtE(jule::Slice<jule::U8>& _13215_txt, jule::I64 _13232_i) {
	jule::Str _13242_lit = jule::Str();
	(_13232_i)++;
	if ((_13232_i >= _13215_txt.len())) {
		return _13242_lit;
	};
	jule::U8 _13813_b = _13215_txt[_13232_i];;
	if ((_13813_b == '_')) {
		return _13242_lit;
	};
	if (((_13813_b == '+') || (_13813_b == '-'))) {
		(_13232_i)++;
		if ((_13232_i >= _13215_txt.len())) {
			return _13242_lit;
		};
		if ((_13215_txt[_13232_i] == '_')) {
			return _13242_lit;
		};
	};
	jule::I64 _1529_first = _13232_i;;
	for (; (_13232_i < _13215_txt.len()); (_13232_i)++) {
		{
			_13813_b=_13215_txt[_13232_i];
			if (((_13813_b != '_') && (!(_1a959db42_IsDecimal(_13813_b))))) {
				goto _iter_end_1bb750782;
			};
		}
	_iter_next_1bb750782:;
	}
	_iter_end_1bb750782:;;
	if ((_13232_i == _1529_first)) {
		_13242_lit = jule::Str();
		return _13242_lit;
	};
	_13242_lit = static_cast<jule::Str>(_13215_txt.slice(0LL,_13232_i));
	return _13242_lit;
}



inline jule::Str _1a95a3d78_floatFmtP(jule::Slice<jule::U8>& _16615_txt, jule::I64 _16628_i) {
	return _1a95a39e3_floatFmtE(_16615_txt,_16628_i);
}



inline jule::Str _1a95a41b9_floatFmtDotnp(jule::Slice<jule::U8>& _17019_txt, jule::I64 _17036_i) {
	if ((_17019_txt[_17036_i] != '.')) {
		return jule::Str();
	};
	(_17036_i)++;
	_julec_label_loop:;
	for (; (_17036_i < _17019_txt.len()); (_17036_i)++) {
		{
			jule::U8 _17813_b = _17019_txt[_17036_i];;
			{
				
				if ((_17813_b == '_') || _1a959db42_IsDecimal(_17813_b)) {
					_case_begin_1bb753a4e:;
					{
						goto _iter_next_1bb752267;
					}
				}
				else if (_1a95a596d_isFloatFmtP(_17813_b,_17036_i)) {
					_case_begin_1bb753ab5:;
					{
						return _1a95a3d78_floatFmtP(_17019_txt,_17036_i);
					}
				}
				else {
					_case_begin_1bb7539d8:;
					{
						goto _iter_end_1bb752267;
					}
				}
				_match_end_1bb753972:;
			};
		}
	_iter_next_1bb752267:;
	}
	_iter_end_1bb752267:;;
	return jule::Str();
}



inline jule::Str _1a95a450a_floatFmtDotfp(jule::Slice<jule::U8>& _19119_txt, jule::I64 _19136_i) {
	_19136_i+=2LL;
	return _1a95a39e3_floatFmtE(_19119_txt,_19136_i);
}



inline jule::Str _1a95a484b_floatFmtDotp(jule::Slice<jule::U8>& _19618_txt, jule::I64 _19635_i) {
	(_19635_i)++;
	return _1a95a39e3_floatFmtE(_19618_txt,_19635_i);
}



inline jule::Str _1a95a4c9c_floatNum(jule::Slice<jule::U8>& _20114_txt, jule::I64 _20131_i) {
	jule::Str _20141_lit = jule::Str();
	(_20131_i)++;
	if ((_20131_i >= _20114_txt.len())) {
		_20141_lit = static_cast<jule::Str>(_20114_txt);
		return _20141_lit;
	};
	if ((_20114_txt[_20131_i] == '_')) {
		(_20131_i)--;
		_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
		return _20141_lit;
	};
	for (; (_20131_i < _20114_txt.len()); (_20131_i)++) {
		{
			jule::U8 _21113_b = _20114_txt[_20131_i];;
			if (((_20131_i > 1LL) && ((_21113_b == 'e') || (_21113_b == 'E')))) {
				_20141_lit = _1a95a39e3_floatFmtE(_20114_txt,_20131_i);
				return _20141_lit;
			};
			if (((_21113_b != '_') && (!(_1a959db42_IsDecimal(_21113_b))))) {
				goto _iter_end_1bb75636a;
			};
		}
	_iter_next_1bb75636a:;
	}
	_iter_end_1bb75636a:;;
	if ((_20131_i == 1LL)) {
		return _20141_lit;
	};
	_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
	return _20141_lit;
}



inline jule::Str _1a95a5044_commonNum(jule::Slice<jule::U8>& _22615_txt) {
	jule::Str _22630_lit = jule::Str();
	jule::I64 _22713_i = 0LL;;
	_julec_label_loop:;
	for (; (_22713_i < _22615_txt.len()); (_22713_i)++) {
		{
			jule::U8 _23013_b = _22615_txt[_22713_i];;
			{
				
				if ((_23013_b == '.')) {
					_case_begin_1bb75aaab:;
					{
						_22630_lit = _1a95a4c9c_floatNum(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((_23013_b == '_')) {
					_case_begin_1bb75ab33:;
					{
						goto _iter_next_1bb759d41;
					}
				}
				else if (_1a95a562c_isFloatFmtE(_23013_b,_22713_i)) {
					_case_begin_1bb75abaa:;
					{
						_22630_lit = _1a95a39e3_floatFmtE(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((!(_1a959db42_IsDecimal(_23013_b)))) {
					_case_begin_1bb75ac32:;
					{
						goto _iter_end_1bb759d41;
					}
				}
				_match_end_1bb75a9ce:;
			};
		}
	_iter_next_1bb759d41:;
	}
	_iter_end_1bb759d41:;;
	if ((_22713_i == 0LL)) {
		return _22630_lit;
	};
	_22630_lit = static_cast<jule::Str>(_22615_txt.slice(0LL,_22713_i));
	return _22630_lit;
}



inline jule::Str _1a95a52db_binaryNum(jule::Slice<jule::U8>& _24915_txt) {
	jule::Str _24930_lit = jule::Str();
	if ((!(_1a95a36a2_bytesHasPrefix(_24915_txt,jule::Str("0b", 2))))) {
		_24930_lit = jule::Str();
		return _24930_lit;
	};
	if ((_24915_txt.len() < 2LL)) {
		return _24930_lit;
	};
	;
	jule::I64 _25813_i = 2LL;;
	for (; (_25813_i < _24915_txt.len()); (_25813_i)++) {
		{
			if (((_24915_txt[_25813_i] != '_') && (!(_1a959ddd9_IsBinary(_24915_txt[_25813_i]))))) {
				goto _iter_end_1bb75e31d;
			};
		}
	_iter_next_1bb75e31d:;
	}
	_iter_end_1bb75e31d:;;
	if ((_25813_i == 2LL)) {
		return _24930_lit;
	};
	_24930_lit = static_cast<jule::Str>(_24915_txt.slice(0LL,_25813_i));
	return _24930_lit;
}



inline jule::Bool _1a95a562c_isFloatFmtE(jule::U8 _27116_b, jule::I64 _27125_i) {
	return ((_27125_i > 0LL) && ((_27116_b == 'e') || (_27116_b == 'E')));
}



inline jule::Bool _1a95a596d_isFloatFmtP(jule::U8 _27516_b, jule::I64 _27525_i) {
	return ((_27525_i > 0LL) && ((_27516_b == 'p') || (_27516_b == 'P')));
}



inline jule::Bool _1a95a5cae_isFloatFmtDotnp(jule::Slice<jule::U8>& _27921_txt, jule::I64 _27938_i) {
	if ((_27921_txt[_27938_i] != '.')) {
		return false;
	};
	(_27938_i)++;
	_julec_label_loop:;
	for (; (_27938_i < _27921_txt.len()); (_27938_i)++) {
		{
			jule::U8 _28613_b = _27921_txt[_27938_i];;
			{
				
				if ((_28613_b == '_') || _1a959db42_IsDecimal(_28613_b)) {
					_case_begin_1bb763c18:;
					{
						goto _iter_next_1bb761c38;
					}
				}
				else if (_1a95a596d_isFloatFmtP(_28613_b,_27938_i)) {
					_case_begin_1bb763c7e:;
					{
						return true;
					}
				}
				else {
					_case_begin_1bb763ba2:;
					{
						goto _iter_end_1bb761c38;
					}
				}
				_match_end_1bb763b3b:;
			};
		}
	_iter_next_1bb761c38:;
	}
	_iter_end_1bb761c38:;;
	return false;
}



inline jule::Bool _1a95a6100_isFloatFmtDotp(jule::Slice<jule::U8>& _30020_txt, jule::I64 _30033_i) {
	{
		
		if ((_30020_txt.len() < 3LL)) {
			_case_begin_1bb765a1c:;
			{
				goto _case_begin_1bb7652d0;
			}
		}
		else if ((_30020_txt[_30033_i] != '.')) {
			_case_begin_1bb7652d0:;
			{
				goto _case_begin_1bb765346;
			}
		}
		else if (((_30020_txt[(_30033_i + 1LL)] != 'p') && (_30020_txt[(_30033_i + 1LL)] != 'P'))) {
			_case_begin_1bb765346:;
			{
				return false;
			}
		}
		else {
			_case_begin_1bb765269:;
			{
				return true;
			}
		}
		_match_end_1bb76518c:;
	};
}



inline jule::Bool _1a95a6441_isFloatFmtDotfp(jule::Slice<jule::U8>& _31321_txt, jule::I64 _31334_i) {
	{
		
		if ((_31321_txt.len() < 4LL)) {
			_case_begin_1bb767d2c:;
			{
				goto _case_begin_1bb767667;
			}
		}
		else if ((_31321_txt[_31334_i] != '.')) {
			_case_begin_1bb767667:;
			{
				goto _case_begin_1bb7676cd;
			}
		}
		else if (((_31321_txt[(_31334_i + 1LL)] != 'f') && (_31321_txt[(_31334_i + 1LL)] != 'F'))) {
			_case_begin_1bb7676cd:;
			{
				goto _case_begin_1bb767744;
			}
		}
		else if (((_31321_txt[(_31334_i + 2LL)] != 'p') && (_31321_txt[(_31334_i + 1LL)] != 'P'))) {
			_case_begin_1bb767744:;
			{
				return false;
			}
		}
		else {
			_case_begin_1bb767128:;
			{
				return true;
			}
		}
		_match_end_1bb76704b:;
	};
}



inline jule::Str _1a95a6892_octalNum(jule::Slice<jule::U8>& _32814_txt) {
	jule::Str _32829_lit = jule::Str();
	if ((_32814_txt[0LL] != '0')) {
		_32829_lit = jule::Str();
		return _32829_lit;
	};
	if ((_32814_txt.len() < 2LL)) {
		return _32829_lit;
	};
	jule::I64 _33613_octalStart = 1LL;;
	jule::Bool _33813_o = false;;
	if ((_32814_txt[1LL] == 'o')) {
		if ((_32814_txt.len() < 3LL)) {
			return _32829_lit;
		};
		(_33613_octalStart)++;
		_33813_o=true;
	};
	jule::I64 _34713_i = _33613_octalStart;;
	for (; (_34713_i < _32814_txt.len()); (_34713_i)++) {
		{
			jule::U8 _34913_b = _32814_txt[_34713_i];;
			if ((_34913_b == '.')) {
				if (_33813_o) {
					_32829_lit = jule::Str();
					return _32829_lit;
				};
				_32829_lit = _1a95a4c9c_floatNum(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (_1a95a562c_isFloatFmtE(_34913_b,_34713_i)) {
				_32829_lit = _1a95a39e3_floatFmtE(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (((_34913_b != '_') && (!(_1a959e181_IsOctal(_34913_b))))) {
				goto _iter_end_1bb76cb56;
			};
		}
	_iter_next_1bb76cb56:;
	}
	_iter_end_1bb76cb56:;;
	if ((_34713_i == _33613_octalStart)) {
		return _32829_lit;
	};
	_32829_lit = static_cast<jule::Str>(_32814_txt.slice(0LL,_34713_i));
	return _32829_lit;
}



inline jule::Str _1a95a6b39_hexNum(jule::Slice<jule::U8>& _37012_txt) {
	jule::Str _37027_lit = jule::Str();
	if ((_37012_txt.len() < 3LL)) {
		return _37027_lit;
	};
	if (((_37012_txt[0LL] != '0') || ((_37012_txt[1LL] != 'x') && (_37012_txt[1LL] != 'X')))) {
		return _37027_lit;
	};
	;
	jule::I64 _37913_i = 2LL;;
	_julec_label_loop:;
	for (; (_37913_i < _37012_txt.len()); (_37913_i)++) {
		{
			jule::U8 _38213_b = _37012_txt[_37913_i];;
			{
				
				if (_1a95a6100_isFloatFmtDotp(_37012_txt,_37913_i)) {
					_case_begin_1bb7737a5:;
					{
						_37027_lit = _1a95a484b_floatFmtDotp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1a95a6441_isFloatFmtDotfp(_37012_txt,_37913_i)) {
					_case_begin_1bb77382c:;
					{
						_37027_lit = _1a95a450a_floatFmtDotfp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1a95a596d_isFloatFmtP(_38213_b,_37913_i)) {
					_case_begin_1bb7738a4:;
					{
						_37027_lit = _1a95a3d78_floatFmtP(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1a95a5cae_isFloatFmtDotnp(_37012_txt,_37913_i)) {
					_case_begin_1bb77392b:;
					{
						_37027_lit = _1a95a41b9_floatFmtDotnp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (((_38213_b != '_') && (!(_1a959e428_IsHex(_38213_b))))) {
					_case_begin_1bb7739a3:;
					{
						goto _iter_end_1bb7729b3;
					}
				}
				_match_end_1bb7736b7:;
			};
		}
	_iter_next_1bb7729b3:;
	}
	_iter_end_1bb7729b3:;;
	if ((_37913_i == 2LL)) {
		return _37027_lit;
	};
	_37027_lit = static_cast<jule::Str>(_37012_txt.slice(0LL,_37913_i));
	return _37027_lit;
}



inline jule::Str _1a95a6e7a_hexEscape(jule::Slice<jule::U8>& _40315_txt, jule::I64 _40328_n) {
	jule::Str _40338_seq = jule::Str();
	if ((_40315_txt.len() < _40328_n)) {
		return _40338_seq;
	};
	;
	jule::I64 _40913_i = 2LL;;
	for (; (_40913_i < _40328_n); (_40913_i)++) {
		{
			if ((!(_1a959e428_IsHex(_40315_txt[_40913_i])))) {
				return _40338_seq;
			};
		}
	_iter_next_1bb7765bb:;
	}
	_iter_end_1bb7765bb:;;
	_40338_seq=static_cast<jule::Str>(_40315_txt.slice(0LL,_40328_n));
	return _40338_seq;
}



inline jule::Str _1a95a7222_bigUnicodePointEscape(jule::Slice<jule::U8>& _42127_txt) {
	return _1a95a6e7a_hexEscape(_42127_txt,10LL);
}



inline jule::Str _1a95a74db_littleUnicodePointEscape(jule::Slice<jule::U8>& _42630_txt) {
	return _1a95a6e7a_hexEscape(_42630_txt,6LL);
}



inline jule::Str _1a95a7695_hexByteEscape(jule::Slice<jule::U8>& _43119_txt) {
	return _1a95a6e7a_hexEscape(_43119_txt,4LL);
}



inline jule::Str _1a95a792b_byteEscape(jule::Slice<jule::U8>& _43616_txt) {
	jule::Str _43631_seq = jule::Str();
	if ((_43616_txt.len() < 4LL)) {
		return _43631_seq;
	};
	if ((((!(_1a959e181_IsOctal(_43616_txt[1LL]))) || (!(_1a959e181_IsOctal(_43616_txt[2LL])))) || (!(_1a959e181_IsOctal(_43616_txt[3LL]))))) {
		return _43631_seq;
	};
	_43631_seq = static_cast<jule::Str>(_43616_txt.slice(0LL,4LL));
	return _43631_seq;
}



inline jule::Slice<_1a92722b6_Log> _1a95ac425_Lex(jule::Ptr<_1a95a04b2_File> _82512_f, jule::I64 _82522_mode) {
	if ((_82512_f == nullptr)) {
		return nullptr;
	};
	_1a95a8113_lex _83013_lex = _1a95a8113_lex{._field_mode=_82522_mode, ._field_file=_82512_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a95aaba4_newLine(&_83013_lex);
	_1a95a8ba2_lex(&_83013_lex);
	if ((_83013_lex._field_errors.len() > 0LL)) {
		return _83013_lex._field_errors;
	};
	_82512_f.get()._field_Tokens=_83013_lex._field_tokens;
	return nullptr;
}



inline void _1ac50a2a4_lshiftUnsig(_1ac49c202_Const& _58721_c, _1ac49c202_Const& _58732_x) {
	jule::U64 _5889_l = _1ac504303_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1ac504303_AsU64(&_58732_x);;
	_1ac504a62_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1ac50a5a1_rshiftUnsig(_1ac49c202_Const& _59321_c, _1ac49c202_Const& _59332_x) {
	jule::U64 _5949_l = _1ac504303_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1ac504303_AsU64(&_59332_x);;
	_1ac504a62_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1ad07e047_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1ad086758_Len64(_6119_x)));
}



inline jule::I64 _1ad08009d_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1ad080c3b_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _1ad080994_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad07e6eb__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1ad080c3b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad07ed4a__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1ad0864b1_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _1ad086758_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _1ad087418_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1ad088a9b_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _1acea5424_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _1acea5710_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _1acea59a7_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _1acea5cc6_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1acea83d3_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ad4080a2:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_1ad01de4e_IsInf(_4714_f,0LL) || _1ad016b4a_IsNaN(_4714_f)) {
			_case_begin_1ad408129:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_1ad407eb4:;
	};
	std::tie(_4714_f,_4735_exp) = _1ad02055a_normalize(_4714_f);
	jule::U64 _5613_x = _1acea59a7_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_1acea5cc6_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _1ad015c15_NaN(void) {
	return static_cast<jule::F64>(_1acea5cc6_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1ad016b4a_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _1ad0185db_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1acea5cc6_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1acea5cc6_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1ad01de4e_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1ad02055a_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1ad037198_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1ad030724_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ad016b4a_IsNaN(_1118_x) || _1ad01de4e_IsInf(_1118_x,1LL)) {
			_case_begin_1ad44b304:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ad44b37b:;
			{
				return static_cast<jule::F64>(_1ad015c15_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ad44b403:;
			{
				return static_cast<jule::F64>(_1ad0185db_Inf(-1LL));
			}
		}
		_match_end_1ad44b238:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1acea83d3_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1ad037198_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1acea5cc6_F64FromBits(static_cast<jule::U64>((_1acea59a7_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1ad092445_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _1ad037198_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1bb46580a:;
		}
		_iter_end_1bb46580a:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _1ad092c09_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1acea83d3_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1ad030724_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1aca2a252_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1aca3e909_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1acbc3e12_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _1aca3e909_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1acbbc9cc_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1bba115e2:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1acea5424_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1acbbc9cc_floatInfo>)((&(_1aca1a1cb_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bba117ce:;
			{
				_8313_bits=static_cast<jule::U64>(_1acea59a7_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1acbbc9cc_floatInfo>)((&(_1aca20665_f64info))));
			}
		}
		else {
			_case_begin_1bba10e93:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1bba0eb51:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1bba14e75:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1bba17461:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1bba175e8:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1bba16460:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1bba16383:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bba159c0:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1bba113c2:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1bba14e20:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1acad188b_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1acb9a2a1_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1acabe7d0_decimalSlice _13213_digs = _1acabe7d0_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1ad0be373_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bba1b7b7:;
				{
					_8258_prec=static_cast<jule::I64>(_1acbc3e12_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bba1b83e:;
				{
					_8258_prec=static_cast<jule::I64>(_1acbc3e12_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bba1b8d8:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1bba1a92b:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bba1de4b:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bba1d7a8:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1bba1d984:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1bba1d841:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ad0bdd56_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ad0bde88_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1aca97588_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1acabde83_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1aca97588_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1acbbc9cc_floatInfo& _18327_flt) {
	_1ad0c09d4_decimal _18413_d = _1ad0c09d4_decimal{};;
	_1ad0c0bc1_assign(&_18413_d, _1835_mant);
	_1ad0c0d03_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1acabe7d0_decimalSlice _18713_digs = _1acabe7d0_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1acac1150_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1acabe7d0_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bba23bba:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bba26519:;
				{
					_18233_prec=static_cast<jule::I64>(_1acbc3e12_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bba26580:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1bba25b89:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bba255a1:;
				{
					_1ad0c1199_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bba25617:;
				{
					_1ad0c1199_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bba2568e:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ad0c1199_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1bba254e6:;
		};
		_18713_digs=_1acabe7d0_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1acabde83_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1acabde83_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1acabe7d0_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bba2b596:;
			{
				return _1acad024c_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bba2b60c:;
			{
				return _1acad0901_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bba2b673:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1acad024c_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1acad0901_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1acbc3e12_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1bba2b453:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1acac1150_roundShortest(_1ad0c09d4_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1acbbc9cc_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1ad0c09d4_decimal _28713_upper = _1ad0c09d4_decimal{};;
	_1ad0c0bc1_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ad0c0d03_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1ad0c09d4_decimal _30613_lower = _1ad0c09d4_decimal{};;
	_1ad0c0bc1_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1ad0c0d03_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1bba39670;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1bba3e9b6:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1bba3ea3d:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1bba3eab5:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1bba3e8ea:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1bba42c61:;
					{
						_1ad0c1199_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1bba42cc7:;
					{
						_1ad0c0e35_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1bba42d4e:;
					{
						_1ad0c1067_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1bba42bb7:;
			};
		}
	_iter_next_1bba39670:;
	}
	_iter_end_1bba39670:;;
}



inline jule::Slice<jule::U8> _1acad024c_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1acabe7d0_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1acbbda33_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1bba47b56:;
		}
		_iter_end_1bba47b56:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1bba4a72a:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1bba4b9e5:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1bba49d67:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1bba482c7:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1acad0901_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1acabe7d0_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1acbbda33_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1bba4e641:;
		}
		_iter_end_1bba4e641:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1bba50da1:;
		}
		_iter_end_1bba50da1:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1acad188b_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1acbbc9cc_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1ad0c2ba1_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1ad0c2ba1_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1acb9a2a1_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1acbbc9cc_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1bba5614d:;
	}
	_iter_end_1bba5614d:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1bba5b032:;
		}
		_iter_end_1bba5b032:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1bba5d84d:;
		}
		_iter_end_1bba5d84d:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1acc090ce_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1bba60c90:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1bba63457:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1bba61004:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1bba5de7a:;
	};
	return _50613_dst;
}



inline jule::I64 _1acbbda33_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1acbc3e12_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1acc090ce_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1acc39d35_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1bba6823c:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1bba680d8:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1acc090ce_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1bba69ea8:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1acc090ce_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1bba69cbb:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1acc090ce_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1bba69d43:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bba69925:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1bba69848:;
					};
				};
			}
		}
		else {
			_case_begin_1bba6733a:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1bba672d5:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bba6eb7d:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bba6e2ba:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bba6e584:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1bba6e40d:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bba6e672:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bba70d27:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bba70cc2:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1bba71d39:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1bba73489:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1acc090ce_lower(_10912_c)) && (_1acc090ce_lower(_10912_c) <= 'z'))) {
						_case_begin_1bba73357:;
						{
							_11017_d=static_cast<jule::U8>(((_1acc090ce_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1bba733bd:;
						{
							goto _iter_next_1bba71d39;
						}
					}
					else {
						_case_begin_1bba72dc3:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1bba72d5c:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1bba71d39:;
			++it;
			goto _iter_begin_1bba71d39;
		}
		_iter_end_1bba71d39:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1acdd8b82_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1acc39d35_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1ace374e9_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1acc39d35_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1aca1b2a9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1acea5cc6_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1ad07e047_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1ad088a9b_Mul64(_4122_man,_1acaaa568_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1ad088a9b_Mul64(_4122_man,_1acaaa568_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1acea5cc6_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1aca40498_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1acea5710_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1ad07e047_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1ad088a9b_Mul64(_11022_man,_1acaaa568_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1ad088a9b_Mul64(_11022_man,_1acaaa568_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1acea5710_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1acbcdc41_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1bba9a912:;
	}
	_iter_end_1bba9a912:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1aca61b4b_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bbaa031d:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1bbaa0395;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bbaa0395:;
			{
				jule::I64 _8317_caseN = _1acbcdc41_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1ad0185db_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bbaa041c:;
			{
				if ((_1acbcdc41_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1ad015c15_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1bbaa0252:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1acaa573e_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1bbaa6566:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1bbaa65cc:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1bbaa638a:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1acc090ce_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1bbaac9e0:;
					{
						goto _iter_next_1bbaabdda;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1bbaaca67:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1bbaabdda;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1bbaacade:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1bbaabdda;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1bbaabdda;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1acc090ce_lower(_13313_c))) && (_1acc090ce_lower(_13313_c) <= 'f'))) {
					_case_begin_1bbaacb66:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1acc090ce_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1bbaabdda;
					}
				}
				_match_end_1bbaac913:;
			};
			goto _iter_end_1bbaabdda;
		}
	_iter_next_1bbaabdda:;
	}
	_iter_end_1bbaabdda:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1acc090ce_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1bbab7610;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1bbab7610:;
		}
		_iter_end_1bbab7610:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1ace9094d_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1aca20665_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1bbac2c9c:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1bbac2d24:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1acb0d81e_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1acb0d81e_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1bbac2d9b:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1acb0d81e_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1bbac2be2:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1ace97290_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1aca1a1cb_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1bbac7dc3:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1bbac7e4a:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1acb2a3eb_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1acb2a3eb_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1bbac7ec2:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1acb2a3eb_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1bbac7d18:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1aca85620_atofHex(jule::Str _55112_s, _1acbbc9cc_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1bbacd923:;
	}
	_iter_end_1bbacd923:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1bbacddda:;
	}
	_iter_end_1bbacddda:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1bbad0a24:;
	}
	_iter_end_1bbad0a24:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1aca1a1cb_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1acea5710_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1acea5cc6_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1acb6d74c_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1aca61b4b_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1acaa573e_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1aca85620_atofHex(_61611_s.slice(0LL,_61629_n),_1aca1a1cb_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1ace97290_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1aca40498_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1aca40498_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1ad0c09d4_decimal _66213_d = _1ad0c09d4_decimal{};;
	if ((!(_1acb05283_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1acc088e7_floatBits(&_66213_d, _1aca1a1cb_f32info);
	_61621_f=static_cast<jule::F32>(_1acea5710_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ad0bd6c4_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1aca61b4b_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1acaa573e_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1aca85620_atofHex(_67411_s.slice(0LL,_67429_n),_1aca20665_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1ace9094d_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1aca1b2a9_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1aca1b2a9_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1ad0c09d4_decimal _71913_d = _1ad0c09d4_decimal{};;
	if ((!(_1acb05283_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1acc088e7_floatBits(&_71913_d, _1aca20665_f64info);
	_67421_f=static_cast<jule::F64>(_1acea5cc6_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ad0bd806_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1acb6d74c_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1ad0bd6c4_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1ad0bd938_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1ad0bd806_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1ad0bdd56_ryuFtoaFixed32(_1acabe7d0_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1ad0864b1_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1ad0be4a5_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1ad0bebc0_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1ad0bee34_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1ad0be241_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1ad0bde88_ryuFtoaFixed64(_1acabe7d0_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1ad086758_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1ad0be4a5_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1ad0bed02_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1ad0bee34_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1ad0be241_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1ad0be241_formatDecimal(_1acabe7d0_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1acbbceb6_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bbc792e9:;
	}
	_iter_end_1bbc792e9:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1bbc7cce2:;
	}
	_iter_end_1bbc7cce2:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1bbc83435:;
	}
	_iter_end_1bbc83435:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1ad0be373_ryuFtoaShortest(_1acabe7d0_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1acbbc9cc_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ad080c3b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1ad0be95b_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1ad0be719_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1ad0be95b_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1ad0be4a5_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1aca1a1cb_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1ad0bebc0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1ad0bebc0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1ad0bebc0_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1ad0bed02_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1ad0bed02_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1ad0bed02_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1ad0bee34_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1ad0bee34_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1ad0bee34_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1ad0be95b_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1ad0be4a5_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1ad0be5d7_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ad0be719_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1acbbc9cc_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1ad0be95b_ryuDigits(_1acabe7d0_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1ad0c0066_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1ad0c0066_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1ad0c0066_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1ad0bea8d_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1ad0bea8d_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1bbca3bc5:;
		}
		_iter_end_1bbca3bc5:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1ad0bea8d_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1bbca5eb3:;
	}
	_iter_end_1bbca5eb3:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1bbca3950:;
	}
	_iter_end_1bbca3950:;;
}



inline void _1ad0bea8d_ryuDigits32(_1acabe7d0_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1bbca988a;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1bbca988a:;
	}
	_iter_end_1bbca988a:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1bbcb14b8:;
	}
	_iter_end_1bbcb14b8:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ad0bebc0_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1acaaa568_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1ad088a9b_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1ad0be5d7_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ad0bed02_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1acaaa568_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ad0be5d7_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1ad088a9b_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1ad088a9b_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1ad087418_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1ad0bee34_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1bbcc0e56:;
	}
	_iter_end_1bbcc0e56:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1ad0c0066_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1ad0c1540_trim(_1ad0c09d4_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1bbcc5499:;
	}
	_iter_end_1bbcc5499:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1ad0c1672_rightShift(_1ad0c09d4_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1bbcc8843:;
				}
				_iter_end_1bbcc8843:;;
				goto _iter_end_1bbcc72c0;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1bbcc72c0:;
	}
	_iter_end_1bbcc72c0:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1bbccb11a:;
	}
	_iter_end_1bbccb11a:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1bbccbc75:;
	}
	_iter_end_1bbccbc75:;;
	_46320_a._field_nd=_46513_w;
	_1ad0c1540_trim(_46320_a);
}



inline jule::Bool _1ad0c17a4_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1bbcd0a9d:;
	}
	_iter_end_1bbcd0a9d:;;
	return false;
}



inline void _1ad0c18d6_leftShift(_1ad0c09d4_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1acbbea01_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1ad0c17a4_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1acbbea01_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1bbcd4453:;
	}
	_iter_end_1bbcd4453:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1bbcd6a71:;
	}
	_iter_end_1bbcd6a71:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1ad0c1540_trim(_53119_a);
}



inline jule::Bool _1ad0c1a18_shouldRoundUp(_1ad0c09d4_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1ad0c2596_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1ad0c293c_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1ad0c2ba1_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _1ad0c26c8_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1ad0c293c_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1ad0c2ba1_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1ad0c280a_Itoa(jule::I64 _809_i) {
	return _1ad0c26c8_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _1ad0c293c_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1ad0c2a6e_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ad0c2ba1_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1bbbeb854:;
		}
		_iter_end_1bbbeb854:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1ad0c2a6e_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1ad08009d_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1bbc05473:;
		}
		_iter_end_1bbc05473:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1bbc08212:;
		}
		_iter_end_1bbc08212:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1ac62d4b5_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bbc23a79:;
			{
				return _1ac60ba9d_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bbc23ae0:;
			{
				return _1ac651175_SysUint;
			}
		}
		else {
			_case_begin_1bbc23958:;
			{
				return _4515_kind;
			}
		}
		_match_end_1bbc2389d:;
	};
}



inline jule::I64 _1ac634be7_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1bbc2530b:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1bbc25372:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1bbc24b68:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1bbc24bce:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1bbc24c45:;
			{
				return _1ac60b570_BitSize;
			}
		}
		else {
			_case_begin_1bbc24b02:;
			{
				return -1LL;
			}
		}
		_match_end_1bbc2485a:;
	};
}



inline jule::Str _1ac658e80_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1bbc26e23:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bbc26e89:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bbc27000:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bbc27110:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1bbc262a7:;
			{
				return jule::Str();
			}
		}
		_match_end_1bbc26d02:;
	};
}



inline jule::Str _1ac66ad93_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1bbc28298:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bbc2830e:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bbc28375:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bbc28672:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1bbc27819:;
			{
				return jule::Str();
			}
		}
		_match_end_1bbc276c6:;
	};
}



inline jule::Str _1ac694dab_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1bbc29783:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bbc297e9:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1bbc28d59:;
			{
				return jule::Str();
			}
		}
		_match_end_1bbc28c16:;
	};
}



inline jule::Bool _1ac830de3_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1ad0bd938_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1ac84ee78_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bbc2d369:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1bbc2e26b:;
			{
				return 64LL;
			}
		}
		_match_end_1bbc2e5bd:;
	};
}



inline jule::I64 _1ac905726_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1bbc30778:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1bbc307de:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1bbc30866:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1bbc30547:;
			{
				return 64LL;
			}
		}
		_match_end_1bbc3046a:;
	};
}



inline jule::I64 _1ac91d4b9_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1bbc325e3:;
			{
				return 8LL;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1bbc32659:;
			{
				return 16LL;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1bbc326d1:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1bbc32538:;
			{
				return 64LL;
			}
		}
		_match_end_1bbc32b65:;
	};
}



inline void _1ac91dbe5_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a9293408_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1bbc3355b:;
				{
					_1ac60b570_BitSize=64LL;
					_1ac60ba9d_SysInt=jule::Str("i64", 3);
					_1ac651175_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1bbc33d75:;
				{
					_1ac60b570_BitSize=32LL;
					_1ac60ba9d_SysInt=jule::Str("i32", 3);
					_1ac651175_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1bbc3347e:;
		};
	};
}



inline void _1ac92b2a7_init(void) {
	_1ac91dbe5_UpdateTarget();
}



inline jule::F64 _1ac9a560b_Min(jule::Str _6112_k) {
	_6112_k=_1ac62d4b5_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bbc36bbe:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bbc36c35:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bbc3666e:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bbc366e6:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bbc3676d:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bbc367e5:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1bbc346c2:;
			{
				return 0LL;
			}
		}
		_match_end_1bbc344d5:;
	};
}



inline jule::F64 _1ac9b3295_Max(jule::Str _8312_k) {
	_8312_k=_1ac62d4b5_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bbc3696b:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bbc383b8:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bbc3842e:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bbc38495:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bbc3850b:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bbc38770:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bbc387d6:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bbc3884c:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bbc388c4:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bbc3894b:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1bbc38231:;
			{
				return 0LL;
			}
		}
		_match_end_1bbc37186:;
	};
}



inline jule::Bool _1ac9beca7_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac9cb29c_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _1ac9eb366_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _1aca02933_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _1ac60a74a_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac5b1855_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _1ac682ad0_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _1ac68364c_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _1ac875b5d_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _1ac876c91_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _1ac87bdea_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1bbc41e3d:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bbc421a2:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bbc42218:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bbc4227e:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1bbc422e5:;
			{
				return _1ac9beca7_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bbc4235b:;
			{
				return _1ac9cb29c_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bbc423c2:;
			{
				return _1ac9eb366_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bbc42438:;
			{
				return _1aca02933_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1bbc424b0:;
			{
				return _1ac60a74a_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bbc42526:;
			{
				return _1ac5b1855_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bbc4259d:;
			{
				return _1ac682ad0_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bbc42625:;
			{
				return _1ac68364c_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bbc4269c:;
			{
				return _1ac875b5d_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bbc42724:;
			{
				return _1ac876c91_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1bbc4279b:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1bbc42823:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1bbc41beb:;
			{
				return false;
			}
		}
		_match_end_1bbc41b30:;
	};
}



inline jule::Bool _1ac882054_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac9eb7c8_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _1ac60c7e6_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _1ac830750_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _1ad0c3663_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _1ad0c3795_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _1ad0c38c7_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _1ad0c3a09_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _1ad0c3b3b_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1bbc4a73d:;
			{
				return _1ad0c407b_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1bbc4a7a4:;
			{
				return _1ad0c41ad_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1bbc4a9a2:;
			{
				return _1ad0c41ad_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1bbc4aa18:;
			{
				return _1ac882054_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1bbc4aa7e:;
			{
				return _1ac9eb7c8_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1bbc4ab06:;
			{
				return _1ac60c7e6_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1bbc4ab7d:;
			{
				return _1ac830750_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1bbc4ac05:;
			{
				return _1ad0c3663_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1bbc4acd2:;
			{
				return _1ad0c3795_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1bbc4ad48:;
			{
				return _1ad0c38c7_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1bbc4adae:;
			{
				return _1ad0c3a09_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1bbc4ae25:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bbc4a4eb:;
			{
				return false;
			}
		}
		_match_end_1bbc49dd0:;
	};
}



inline jule::Bool _1ad0c407b_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _1ad0c41ad_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1ad0c42e0_IsInt(jule::Str _4610_k) {
	return (_1ad0c407b_IsSigInt(_4610_k) || _1ad0c41ad_IsUnsigInt(_4610_k));
}



inline jule::Bool _1ad0c4422_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _1ad0c4554_IsNum(jule::Str _5610_k) {
	return (_1ad0c42e0_IsInt(_5610_k) || _1ad0c4422_IsFloat(_5610_k));
}



inline jule::Bool _1ad0c4686_IsSigNum(jule::Str _6113_k) {
	return (_1ad0c407b_IsSigInt(_6113_k) || _1ad0c4422_IsFloat(_6113_k));
}



inline jule::Bool _1ad12a148_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _1ad12a27a_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1ad142902_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1dbac6c1a_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _1ad142094_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _1ad14234c_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1ad142c43_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1dbac6c1a_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1dbac807e_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1bbdb9318:;
	}
	_iter_end_1bbdb9318:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1ad1425e4_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bbdbde33:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bbdbde99:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bbdbe010:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bbdbe076:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bbdbe0ed:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bbdbe175:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bbdbe1ec:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bbdbe274:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bbdbe2eb:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bbdbe373:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1bbdbdd12:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1ad142902_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1ad1425e4_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1bbdc4b09:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1acdd8b82_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bbdc4bb4:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1acdd8b82_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bbdc4c2a:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1acdd8b82_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1bbdc39d7:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1acdd8b82_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1bbdc3982:;
	};
}



inline jule::Slice<jule::U8> _1ad142c43_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1ad142902_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1ad21c2b2_findFormatPrefix(jule::Slice<jule::U8>& _922_bytes, jule::I64& _938_start) {
	jule::I64 _1013_i = _938_start;;
	while ((_1013_i < _922_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1dbac6c1a_DecodeRune(_922_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1bbe15bc2:;
	}
	_iter_end_1bbe15bc2:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1ad21ca76_getFormatRange(jule::I64& _2624_i, jule::Slice<jule::U8>& _2637_bytes) {
	jule::I64 _279_start = _2624_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2624_i < _2637_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1dbac6c1a_DecodeRune(_2637_bytes.slice(_2624_i));
			_2624_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1bbe189e9:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bbe18a71:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2637_bytes.slice(_279_start,_2624_i);
						};
					}
				}
				_match_end_1bbe185dc:;
			};
		}
	_iter_next_1bbe17b3b:;
	}
	_iter_end_1bbe17b3b:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1ad203c16_fmtByDefault(jule::Any& _4518_arg) {
	if ((_4518_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4518_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1bbe1aa40:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1aca2a252_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4518_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1bbe1a6dd:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1aca2a252_FmtFloat(static_cast<jule::F64>(_4518_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1bbe18e06:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c26c8_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1bbe18e6c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c26c8_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1bbe1a3d0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c26c8_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1bbe1a446:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c26c8_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1bbe1a4ac:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c2596_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1bbe1a523:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c2596_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1bbe1a589:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c2596_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1bbe1aab7:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad0c2596_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1bbe1ab2d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4518_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1bbe1ab94:;
			{
				if (_4518_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1bbe17ce5:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4518_arg));
			}
		}
		_match_end_1bbe17c90:;
	};
}



inline jule::Slice<jule::U8> _1ad2034eb_applyFmtByDefault(jule::I64& _8327_j, jule::Slice<jule::Any>& _8336_args) {
	jule::Any _849_arg = _8336_args[_8327_j];;
	(_8327_j)++;
	return _1ad203c16_fmtByDefault(_849_arg);
}



inline jule::Slice<jule::U8> _1ad206cc4_applyFmt(jule::Slice<jule::U8>& _9118_fmt, jule::I64& _9136_j, jule::Slice<jule::Any>& _9145_args) {
	if ((_9118_fmt.len() == 2LL)) {
		return _1ad2034eb_applyFmtByDefault(_9136_j,_9145_args);
	};
	if (((_9118_fmt.len() == 4LL) && (_9118_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9118_fmt;
}



inline jule::Slice<jule::U8> _1ad214463_formatBytes(jule::Str _10516_fmt, jule::Slice<jule::Any> _10526_args) {
	jule::Slice<jule::U8> _10613_fmtBytes = static_cast<jule::Slice<jule::U8>>(_10516_fmt);;
	if ((_10526_args.len() == 0LL)) {
		return _10613_fmtBytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10516_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1ad21c2b2_findFormatPrefix(_10613_fmtBytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1ad21c2b2_findFormatPrefix(_10613_fmtBytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1ad21ca76_getFormatRange(_11613_i,_10613_fmtBytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1bbe25808;
			};
			_11213_bytes=jule::append(_11213_bytes,_1ad206cc4_applyFmt(_11917_format,_11413_j,_10526_args));
			if ((_11413_j >= _10526_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmtBytes.len());
				goto _iter_end_1bbe25808;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1bbe25808:;
	}
	_iter_end_1bbe25808:;;
	if ((_11513_last < _10613_fmtBytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1ad23ae07_Format(jule::Str _16511_fmt, jule::Slice<jule::Any> _16521_args) {
	return static_cast<jule::Str>(_1ad214463_formatBytes(_16511_fmt,jule::Any(_16521_args)));
}



inline jule::Bool _1ac517943_parameterUsesGenerics(jule::Ptr<_1ac511343_Param>& _37427_p, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>& _37439_generics) {
	if (_1ac511970_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1ad1a1950_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1ad189383_TypeSymbol> _1ac519e1d_buildType(jule::Ptr<_1ac449eb3_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1ad15a211_Value> _1ac51a209_buildExpr(jule::Ptr<_1ac44e4d4_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ac51a4a1_buildTypeAlias(jule::Ptr<_1ac461617_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1ac519e1d_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1ac427d4d_Field> _1ac51a7c0_buildField(jule::Ptr<_1ac464c03_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ac427d4d_Field>(_1ac427d4d_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1ac519e1d_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1ac427d4d_Field>> _1ac51aa67_buildFields(jule::Slice<jule::Ptr<_1ac464c03_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1ac427d4d_Field>> _13513_fields = jule::Slice<jule::Ptr<_1ac427d4d_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1bc09536d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac464c03_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1ac51a7c0_buildField(_13617_decl));;
			}
			_iter_next_1bc09536d:;
			++it;
			goto _iter_begin_1bc09536d;
		}
		_iter_end_1bc09536d:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ac51ad0e_buildStruct(jule::Ptr<_1ac465561_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ac43a6e0_Struct>(_1ac43a6e0_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1ac51aa67_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1ac511343_Param> _1ac51b0a6_buildParam(jule::Ptr<_1ac45a9a7_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1ac519e1d_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1ac511343_Param>> _1ac51b42a_buildParams(jule::Slice<jule::Ptr<_1ac45a9a7_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1ac511343_Param>> _16613_params = jule::Slice<jule::Ptr<_1ac511343_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1bc0981ea:;
		if (it != expr.end()) {
			jule::Ptr<_1ac45a9a7_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1ac51b0a6_buildParam(_16717_decl));;
			}
			_iter_next_1bc0981ea:;
			++it;
			goto _iter_begin_1bc0981ea;
		}
		_iter_end_1bc0981ea:;
	};
	return _16613_params;
}



inline jule::Ptr<_1ac510b7d_RetType> _1ac51b6c2_buildRetType(jule::Ptr<_1ac44d0c6_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1ac510b7d_RetType>(_1ac510b7d_RetType{._field_Kind=_1ac519e1d_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1ac512b80_Fn> _1ac51b969_buildFn(jule::Ptr<_1ac45bcc7_FnDecl> _18316_decl) {
	return jule::new_ptr<_1ac512b80_Fn>(_1ac512b80_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1ac51b6c2_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1ac51b42a_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1ac512b80_Fn>> _1ac51bc11_buildMethods(jule::Slice<jule::Ptr<_1ac45bcc7_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1ac512b80_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1ac512b80_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1bc09bb9e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac45bcc7_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1ac51b969_buildFn(_20317_decl));;
			}
			_iter_next_1bc09bb9e:;
			++it;
			goto _iter_begin_1bc09bb9e;
		}
		_iter_end_1bc09bb9e:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1ac524a3d_Trait> _1ac51bea8_buildTrait(jule::Ptr<_1ac465b6b_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1ac524a3d_Trait>(_1ac524a3d_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1ac51bc11_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1ac52618d_EnumItem> _1ac51c250_buildEnumItem(jule::Ptr<_1ac462e76_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1ac52618d_EnumItem>(_1ac52618d_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1ac51a209_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1ac52618d_EnumItem>> _1ac51c4e7_buildEnumItems(jule::Slice<jule::Ptr<_1ac462e76_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1ac52618d_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1ac52618d_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1bc09e311:;
		if (it != expr.end()) {
			jule::Ptr<_1ac462e76_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1ac51c250_buildEnumItem(_22817_decl));;
			}
			_iter_next_1bc09e311:;
			++it;
			goto _iter_begin_1bc09e311;
		}
		_iter_end_1bc09e311:;
	};
	return _22713_items;
}



inline jule::Ptr<_1ac526b83_Enum> _1ac51c78e_buildEnum(jule::Ptr<_1ac46399e_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1ac526b83_Enum>(_1ac526b83_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1ac519e1d_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1ac51c4e7_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1ac527bb7_TypeEnumItem> _1ac51cbe0_buildTypeEnumItem(jule::Ptr<_1ac4644a5_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1ac527bb7_TypeEnumItem>(_1ac527bb7_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1ac519e1d_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>> _1ac51ce87_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac4644a5_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1ac527bb7_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1bc0a1b2c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac4644a5_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1ac51cbe0_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1bc0a1b2c:;
			++it;
			goto _iter_begin_1bc0a1b2c;
		}
		_iter_end_1bc0a1b2c:;
	};
	return _25313_items;
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ac51d22e_buildTypeEnum(jule::Ptr<_1ac4646a3_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1ac52827d_TypeEnum>(_1ac52827d_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1ac51ce87_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1ad112097_Var> _1ac51d4c6_buildVar(jule::Ptr<_1ac45cca6_VarDecl> _26917_decl) {
	return jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1ac519e1d_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1ac51a209_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1ac5189dd_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1ad112097_Var>> _1ac51d76d_buildVars(jule::Slice<jule::Ptr<_1ac45cca6_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1ad112097_Var>> _28713_vars = jule::Slice<jule::Ptr<_1ad112097_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1bc0a503c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac45cca6_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1ac51d4c6_buildVar(_28817_decl));;
			}
			_iter_next_1bc0a503c:;
			++it;
			goto _iter_begin_1bc0a503c;
		}
		_iter_end_1bc0a503c:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1ac5ae0b1_Impl> _1ac51da15_buildImpl(jule::Ptr<_1ac466276_Impl> _29418_decl) {
	return jule::new_ptr<_1ac5ae0b1_Impl>(_1ac5ae0b1_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1ac51bc11_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1ac51d76d_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1ac58640c_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1ad18522a_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1bc111708:;
			{
				jule::Ptr<_1ad189c02_Prim> _14513_prim = _1ad18733c_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1ad0c4686_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1bc11176e:;
			{
				jule::Ptr<_1ad189c02_Prim> _15113_prim = _1ad18733c_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1ad0c41ad_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1bc1118a1:;
			{
				jule::Ptr<_1ad189c02_Prim> _15713_prim = _1ad18733c_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1ad0c4422_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1bc111917:;
			{
				jule::Ptr<_1ad189c02_Prim> _16313_prim = _1ad18733c_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1ad0c4554_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1bc11197d:;
			{
				return _1ad186627_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1bc1119e4:;
			{
				return (!(_1ad186627_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1bc111a5a:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1bc111ac1:;
			{
				jule::Ptr<_1ad189c02_Prim> _17513_prim = _1ad18733c_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1ad0c4554_IsNum(_17513_prim.get()._field_Kind) || _1ad18ce36_IsStr(_17513_prim.ptr()));
				};
				if ((_1ad187815_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1ac466a3a_StructIns> _18213_s = _1ad18878e_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1ac526b83_Enum> _18913_enm = _1ad187a79_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1ad0c4554_IsNum(_1ad185626_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1bc11142d:;
			{
				return false;
			}
		}
		_match_end_1bc111373:;
	};
}



inline jule::Bool _1ac588002_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1ac541719_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1bc11add8:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1bc11add8:;
			++it;
			goto _iter_begin_1bc11add8;
		}
		_iter_end_1bc11add8:;
	};
	return false;
}



inline jule::Ptr<_1ad0c7799_scopeChecker> _1ac587d59_newScopeCheckerBase(jule::Ptr<_1ad0e5267_Sema>& _5929_s, jule::Ptr<_1ac515831_FnIns> _5943_owner) {
	return jule::new_ptr<_1ad0c7799_scopeChecker>(_1ad0c7799_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1ad15442a_SymbolTable>(), });
}



inline jule::Ptr<_1ad0c7799_scopeChecker> _1ac597132_newScopeChecker(jule::Ptr<_1ad0e5267_Sema>& _6725_s, jule::Ptr<_1ac515831_FnIns> _6739_owner) {
	jule::Ptr<_1ad0c7799_scopeChecker> _6813_base = _1ac587d59_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad0c73c0_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad0c75ac_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1ad0c73c0_scopeLabel> _1ac597bb0_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1ad0c7799_scopeChecker> _7736_scope) {
	jule::Ptr<_1ad0c73c0_scopeLabel> _7813_label = _1ad0c901a_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1ad0c901a_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1bc1316e5:;
	}
	_iter_end_1bc1316e5:;;
	return _7813_label;
}



inline jule::Bool _1ac598a6d_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1ad0c4994_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
			_case_begin_1bc132e44:;
			{
				jule::Ptr<_1ac50b580_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1ac50b580_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bc132ebb:;
			{
				jule::Ptr<_1ad159188_Data> _9913_d = _9121_Model.operator jule::Ptr<_1ad159188_Data>();;
				return _1ac598a6d_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1bc132d34:;
	};
	return false;
}



inline jule::Bool _1ac599a3b_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1ad0c4994_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c4994_Scope>>()) {
			_case_begin_1bc135133:;
			{
				return (_10521_stmt.operator jule::Ptr<_1ad0c4994_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5247_InfIter>>()) {
			_case_begin_1bc135199:;
			{
				return (_10521_stmt.operator jule::Ptr<_1ad0c5247_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5621_RangeIter>>()) {
			_case_begin_1bc135210:;
			{
				jule::Ptr<_1ad0c5621_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1ad0c5621_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1ac598a6d_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c5434_WhileIter>>()) {
			_case_begin_1bc1352ed:;
			{
				jule::Ptr<_1ad0c5434_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1ad0c5434_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1ac598a6d_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1ac598a6d_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c6677_Match>>()) {
			_case_begin_1bc135375:;
			{
				jule::Ptr<_1ad0c6677_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1ad0c6677_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1bc139005:;
					if (it != expr.end()) {
						jule::Ptr<_1ad0c6bc7_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1bc139ec3:;
								if (it != expr.end()) {
									jule::Ptr<_1ad159188_Data> &_12520_expr = *it;
									{
										if (_1ac598a6d_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1bc139ec3:;
									++it;
									goto _iter_begin_1bc139ec3;
								}
								_iter_end_1bc139ec3:;
							};
						}
						_iter_next_1bc139005:;
						++it;
						goto _iter_begin_1bc139005;
					}
					_iter_end_1bc139005:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad0c505a_Conditional>>()) {
			_case_begin_1bc1353ec:;
			{
				jule::Ptr<_1ad0c505a_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1ad0c505a_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1bc13b5ce:;
					if (it != expr.end()) {
						jule::Ptr<_1ad0c4b81_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1ac598a6d_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1bc13b5ce:;
						++it;
						goto _iter_begin_1bc13b5ce;
					}
					_iter_end_1bc13b5ce:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bc135474:;
			{
				jule::Ptr<_1ad159188_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1ad159188_Data>();;
				return _1ac598a6d_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1bc1333ea:;
			{
				return false;
			}
		}
		_match_end_1bc133395:;
	};
}



inline jule::I64 _1ac59a8e9_countMatchType(jule::Ptr<_1ad0c6677_Match>& _14820_m, jule::Ptr<_1ad18522a_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1ad185626_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1bc13e604:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0c6bc7_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1bc13e604;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1bc13ee95:;
					if (it != expr.end()) {
						jule::Ptr<_1ad159188_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1bc13e604;
							};
							if ((_1509_kind == _1ad185626_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1ad18522a_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1bc13ee95:;
						++it;
						goto _iter_begin_1bc13ee95;
					}
					_iter_end_1bc13ee95:;
				};
			}
			_iter_next_1bc13e604:;
			++it;
			goto _iter_begin_1bc13e604;
		}
		_iter_end_1bc13e604:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1ad159188_Data>> _1ac5a86a4_getDatasFromTupleData(jule::Ptr<_1ad159188_Data>& _17231_d) {
	if ((_1ad188ecb_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac50d2a7_TupleExprModel>>()) {
				_case_begin_1bc1441db:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1ac50d2a7_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1bc141ae0:;
				{
					jule::Ptr<_1ad18e971_Tuple> _17821_t = _1ad188ecb_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1ad159188_Data>> _17921_r = jule::Slice<jule::Ptr<_1ad159188_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1bc14310d:;
						if (it != expr.end()) {
							jule::Ptr<_1ad18522a_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1bc14310d:;
							++it;
							goto _iter_begin_1bc14310d;
						}
						_iter_end_1bc14310d:;
					};
					return _17921_r;
				}
			}
			_match_end_1bc141969:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ad159188_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _1ac5ab5ec_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ac450161_TupleExpr>>()) {
			_case_begin_1bc14461a:;
			{
				jule::Ptr<_1ac450161_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_1ac450161_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1bc145b9e:;
					if (it != expr.end()) {
						jule::Ptr<_1ac44e4d4_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_1bc145b9e:;
						++it;
						goto _iter_begin_1bc145b9e;
					}
					_iter_end_1bc145b9e:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1bc141bde:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_1bc1444a5:;
	};
}



inline jule::Bool _1ac5ac136_checkMut(jule::Ptr<_1ad0e5267_Sema>& _20718_s, jule::Ptr<_1ad159188_Data>& _20729_left, jule::Ptr<_1ad159188_Data> _20746_right, jule::Ptr<_1a959a127_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1bc147431:;
			{
				_1ad0e7e29_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1ad186627_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1bc147541:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1ad18878e_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1ad0e7e29_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1bc146d04:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1bc1463b9:;
	};
}



inline jule::Bool _1ac5acbb4_checkAssign(jule::Ptr<_1ad0e5267_Sema>& _22621_s, jule::Ptr<_1ad159188_Data>& _22636_left, jule::Ptr<_1ad159188_Data> _22653_right, jule::Ptr<_1a959a127_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1ac515831_FnIns> _2279_f = _1ad18852a_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1ad0e7e29_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1ad159a4b_IsConst(_22636_left.ptr())) {
			_case_begin_1bc14c447:;
			{
				_1ad0e7e29_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1ad0e8248_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1bc14c524:;
			{
				_1ad0e7e29_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1ac5ac136_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1bc14c59b:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1bc14bce8:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1bc14bb94:;
	};
}



inline jule::Bool _1ac5a8330_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1ac458c3b_AssignSt>>()) {
			_case_begin_1bc14c656:;
			{
				return (!(_24831_n.operator jule::Ptr<_1ac458c3b_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44e4d4_Expr>>()) {
			_case_begin_1bc14c6bc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bc14de3d:;
			{
				return false;
			}
		}
		_match_end_1bc14e229:;
	};
}



inline jule::Bool _1ac5552cc_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad0c60b1_Postfix>>() || _match_expr.type_is<jule::Ptr<_1ad0c629d_Assign>>() || _match_expr.type_is<jule::Ptr<_1ad0c648a_MultiAssign>>()) {
			_case_begin_1bc14e944:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bc14e9aa:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1ad159188_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50b580_FnCallExprModel>>()) {
						_case_begin_1bc15157d:;
						{
							return true;
						}
					}
					else {
						_case_begin_1bc151517:;
						{
							return false;
						}
					}
					_match_end_1bc1512a3:;
				};
			}
		}
		else {
			_case_begin_1bc14e8cd:;
			{
				return false;
			}
		}
		_match_end_1bc150181:;
	};
}



inline jule::Bool _1ac5968e5_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc15221b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1bc1511a4:;
			{
				return false;
			}
		}
		_match_end_1bc15114e:;
	};
}



inline jule::Ptr<_1ad112097_Var> _1ad0d9c1d_findVarInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1bc41d141:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ad112097_Var> _4817_v = _1ad15510c_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1bc41d141:;
			++it;
			goto _iter_begin_1bc41d141;
		}
		_iter_end_1bc41d141:;
	};
	return nullptr;
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad0da14c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1bc41e6e7:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ad184537_TypeAlias> _6017_ta = _1ad1554b4_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1bc41e6e7:;
			++it;
			goto _iter_begin_1bc41e6e7;
		}
		_iter_end_1bc41e6e7:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad0da537_findStructInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1bc420c8c:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ac43a6e0_Struct> _7217_s = _1ad15586b_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1bc420c8c:;
			++it;
			goto _iter_begin_1bc420c8c;
		}
		_iter_end_1bc420c8c:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac512b80_Fn> _1ad0da999_findFnInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1bc422332:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ac512b80_Fn> _8417_f = _1ad155c23_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1bc422332:;
			++it;
			goto _iter_begin_1bc422332;
		}
		_iter_end_1bc422332:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac524a3d_Trait> _1ad0daca7_findTraitInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1bc42292b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1ac524a3d_Trait> _9617_t = _1ad156031_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1bc42292b:;
			++it;
			goto _iter_begin_1bc42292b;
		}
		_iter_end_1bc42292b:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac526b83_Enum> _1ad0db0e8_findEnumInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1bc423cd4:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1ac526b83_Enum> _10817_e = _1ad15633e_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1bc423cd4:;
			++it;
			goto _iter_begin_1bc423cd4;
		}
		_iter_end_1bc423cd4:;
	};
	return nullptr;
}



inline jule::Ptr<_1ac52827d_TypeEnum> _1ad0db439_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1bc42519d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1ac52827d_TypeEnum> _12017_e = _1ad15664c_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1bc42519d:;
			++it;
			goto _iter_begin_1bc42519d;
		}
		_iter_end_1bc42519d:;
	};
	return nullptr;
}



inline jule::Bool _1ad0e264e_isStdPackage(jule::Str _35017_f, jule::Str _35025_p) {
	return _1a9142ae3_HasPrefix(_35017_f,_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a9293eec_PathStdlib,_35025_p})));
}



inline jule::Bool _1ad0e33a8_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ad112097_Var>>()) {
			_case_begin_1bc4373d0:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bc437446:;
			{
				jule::Ptr<_1ac50c817_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>();;
				return _1ad0e33a8_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>>()) {
			_case_begin_1bc4374ac:;
			{
				jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1ac50c3e9_TraitSubIdentExprModel>();;
				return _1ad0e33a8_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50aae0_UnaryExprModel>>()) {
			_case_begin_1bc437633:;
			{
				jule::Ptr<_1ac50aae0_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1ac50aae0_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1ad187815_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1ad1875a1_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1ad0e33a8_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1bc436bd7:;
			{
				return false;
			}
		}
		_match_end_1bc436b82:;
	};
}



inline _1a92722b6_Log _1ad0e384d_compilerErr(jule::Ptr<_1a959a127_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1a92722b6_Log _4213_log = _1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1a9272706_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1a95a168e_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1ad0e3b8e_impIsLookupable(jule::Ptr<_1ad0dc11b_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1ad0de9e2_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1ad0e3e8b_appendRetVars(jule::Slice<jule::Ptr<_1ad112097_Var>>& _6723_dest, jule::Ptr<_1ac515831_FnIns>& _6742_f) {
	if ((_1ac5130e2_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad18522a_TypeKind>> _7213_types = _1ac516953_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1bc440d01:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _7317_ident = *it;
			{
				if ((_1a959c8bb_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1a959cb63_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1bc440d01;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Data=jule::new_ptr<_1ad159188_Data>()}), }));;
			}
			_iter_next_1bc440d01:;
			++it;
			_7310_i++;
			goto _iter_begin_1bc440d01;
		}
		_iter_end_1bc440d01:;
	};
}



inline void _1ad0e4244_appendParamVars(jule::Slice<jule::Ptr<_1ad112097_Var>>& _9325_dest, jule::Ptr<_1ac515831_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1bc441807:;
		if (it != expr.end()) {
			jule::Ptr<_1ac514962_ParamIns> _9817_p = *it;
			{
				if ((_1a959c8bb_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1a959cb63_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1bc441807;
				};
				jule::Ptr<_1ad112097_Var> _10317_v = jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Data=jule::new_ptr<_1ad159188_Data>()}), });;
				{
					
					if (_1ac511970_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1bc44b0b4:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ad184ceb_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1ac511bd4_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1ac511bd4_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18d486_Sptr>(_1ad18d486_Sptr{._field_Elem=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1bc44aca6:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18dde3_Slc>(_1ad18dde3_Slc{._field_Elem=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1bc449920:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1bc44ab52:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1bc441807:;
			++it;
			goto _iter_begin_1bc441807;
		}
		_iter_end_1bc441807:;
	};
}



inline void _1ad0e451e_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ad184537_TypeAlias>>& _15334_dest, jule::Ptr<_1ac515831_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1bc451284:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1ad1839ed_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1ac457597_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1bc451284:;
			++it;
			_16310_i++;
			goto _iter_begin_1bc451284;
		}
		_iter_end_1bc451284:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1ac466a3a_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1bc452b04:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1ad1839ed_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1ac457597_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1bc452b04:;
				++it;
				_17714_i++;
				goto _iter_begin_1bc452b04;
			}
			_iter_end_1bc452b04:;
		};
	};
}



inline jule::Ptr<_1ad15442a_SymbolTable> _1ad0e4871_findFile(jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>& _19118_files, jule::Ptr<_1a95a04b2_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1bc451ae2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1bc451ae2:;
			++it;
			goto _iter_begin_1bc451ae2;
		}
		_iter_end_1bc451ae2:;
	};
	return nullptr;
}



inline void _1ad0e4cd3_pushSugggestion(_1a92722b6_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_1a9272706_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1ad13353b_traitHasReferenceReceiver(jule::Ptr<_1ac524a3d_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1bc6bcae9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1bc6bcae9;
				};
				jule::Ptr<_1ac511343_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1ac511bd4_IsRef(_3313_p.ptr()) && _1ac511970_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1bc6bcae9:;
			++it;
			goto _iter_begin_1bc6bcae9;
		}
		_iter_end_1bc6bcae9:;
	};
	return false;
}



inline jule::Bool _1ad12a566_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1ad159188_Data>& _4132_d) {
	jule::Str _429_value = _1aca2a252_FmtFloat(static_cast<jule::F64>(_1ac504567_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1ac830de3_CheckBitFloat(_429_value,static_cast<jule::I64>(_1ac634be7_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1ad12a698_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1ad159188_Data>& _4630_d) {
	jule::F64 _479_min = _1ac9a560b_Min(_4618_kind);;
	jule::F64 _489_max = _1ac9b3295_Max(_4618_kind);;
	{
		
		if (_1ac5061c3_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c4815:;
			{
				jule::F64 _5113_x = _1ac503d2a_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1ad092445_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1ac505986_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c487b:;
			{
				jule::F64 _5813_x = _1ac504567_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1ac505722_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c48e2:;
			{
				jule::F64 _6313_x = _1ac504567_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1bc6c46c2:;
	};
	return false;
}



inline jule::Bool _1ad141c86_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1ad159188_Data>& _6932_d) {
	jule::F64 _709_max = _1ac9b3295_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1ad12a148_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1ac503379_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1ac5061c3_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c8ece:;
			{
				jule::F64 _7713_x = _1ac503d2a_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1ad092445_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1ac505986_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c9a6d:;
			{
				jule::F64 _8713_x = _1ac504567_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1ac505722_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1bc6c9ae5:;
			{
				jule::F64 _9213_x = _1ac504567_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1bc6c8e35:;
	};
	return false;
}



inline jule::Bool _1ad141db8_intAssignable(jule::Str _9818_kind, jule::Ptr<_1ad159188_Data>& _9830_d) {
	{
		
		if (_1ad0c407b_IsSigInt(_9818_kind)) {
			_case_begin_1bc6ce59a:;
			{
				return _1ad12a698_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1ad0c41ad_IsUnsigInt(_9818_kind)) {
			_case_begin_1bc6cde18:;
			{
				return _1ad141c86_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1bc6ca255:;
			{
				return false;
			}
		}
		_match_end_1bc6ca178:;
	};
}



inline jule::Ptr<_1ac41195d_Directive> _1ad17e972_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _420923_directives, jule::Str _420954_d) {
	{
		auto &expr = _420923_directives;
		auto it = expr.begin();
		_iter_begin_1bc4eac9b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _421017_dr = *it;
			{
				if ((_421017_dr.get()._field_Tag.get()._field_Kind == _420954_d)) {
					return _421017_dr;
				};
			}
			_iter_next_1bc4eac9b:;
			++it;
			goto _iter_begin_1bc4eac9b;
		}
		_iter_end_1bc4eac9b:;
	};
	return nullptr;
}



inline jule::Any _1ad17ed07_findBuiltinsImport(jule::Str _421823_ident, jule::Ptr<_1ad0dc11b_ImportInfo> _421835_imp) {
	return jule::Any(_1ad238cb2_findPackageBuiltinDef(_421835_imp.get()._field_LinkPath,_421823_ident));
}



inline void _1ad180016_fitBitsize(jule::Ptr<_1ad159188_Data>& _422520_d) {
	jule::Ptr<_1ad189c02_Prim> _422613_prim = _1ad18733c_Prim(_422520_d.get()._field_Kind.ptr());;
	jule::I64 _42279_z = _1ac634be7_BitsizeOf(_1ad18a065_Str(_422613_prim.ptr()));;
	if ((_42279_z == 64LL)) {
		return;;
	};
	jule::I64 _423213_k = 0LL;;
	{
		
		if (_1ac505722_IsI64(_422520_d.get()._field_Constant.ptr())) {
			_case_begin_1bc4edb5b:;
			{
				_423213_k=static_cast<jule::I64>(_1ac905726_BitsizeOfInt(static_cast<jule::I64>(_1ac503379_ReadI64(_422520_d.get()._field_Constant.ptr()))));
				if ((_423213_k > _42279_z)) {
					_422613_prim.get()._field_Kind=_1ac658e80_IntFromBits(_423213_k);
				};
			}
		}
		else if (_1ac505986_IsU64(_422520_d.get()._field_Constant.ptr())) {
			_case_begin_1bc4edbd3:;
			{
				_423213_k=static_cast<jule::I64>(_1ac91d4b9_BitsizeOfUint(static_cast<jule::U64>(_1ac5035dd_ReadU64(_422520_d.get()._field_Constant.ptr()))));
				if ((_423213_k > _42279_z)) {
					_422613_prim.get()._field_Kind=_1ac66ad93_UintFromBits(_423213_k);
				};
			}
		}
		else if (_1ac5061c3_IsF64(_422520_d.get()._field_Constant.ptr())) {
			_case_begin_1bc4edc5a:;
			{
				_423213_k=static_cast<jule::I64>(_1ac84ee78_BitsizeOfFloat(static_cast<jule::F64>(_1ac503d2a_ReadF64(_422520_d.get()._field_Constant.ptr()))));
				if ((_423213_k > _42279_z)) {
					_422613_prim.get()._field_Kind=_1ac694dab_FloatFromBits(_423213_k);
				};
			}
		}
		_match_end_1bc4eda90:;
	};
}



inline void _1ad180313_makeStructLitAlloc(jule::Ptr<_1ad159188_Data>& _425228_d, jule::Ptr<_1ac50aeb9_StructLitExprModel>& _425243_lit) {
	_425228_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18d486_Sptr>(_1ad18d486_Sptr{._field_Elem=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_425243_lit.get()._field_Strct, 0)})}), 7)});
	_425228_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50b1a6_AllocStructLitExprModel>(_1ac50b1a6_AllocStructLitExprModel{._field_Lit=_425243_lit}));
}



inline jule::Ptr<_1ad112097_Var> _1ad180654_buildErrorVar(jule::Ptr<_1ad0c4994_Scope>& _426323_s, jule::Ptr<_1ac4537a2_FnCallExpr>& _426339_fc) {
	return jule::new_ptr<_1ad112097_Var>(_1ad112097_Var{._field_Scope=_426323_s, ._field_Token=_426339_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1ad15a211_Value>(_1ad15a211_Value{._field_Data=jule::new_ptr<_1ad159188_Data>()}), });
}



inline jule::Any _1ad180995_findBuiltinsSema(jule::Str _428221_ident, jule::Ptr<_1ad0e5267_Sema> _428237_s) {
	{
		auto &expr = _428237_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1bc504711:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _428317_imp = *it;
			{
				if ((_428317_imp.get()._field_ImportAll || _1ad0de9e2_existIdent(_428317_imp.ptr(), _428221_ident))) {
					jule::Any _428521_def = _1ad17ed07_findBuiltinsImport(_428221_ident,_428317_imp);;
					if ((_428521_def != nullptr)) {
						return jule::Any(_428521_def);
					};
				};
			}
			_iter_next_1bc504711:;
			++it;
			goto _iter_begin_1bc504711;
		}
		_iter_end_1bc504711:;
	};
	jule::Str _429313_ppath = _1a95a0da8_Dir(_428237_s.get()._field_file.get()._field_File.ptr());;
	if (_1a9142ae3_HasPrefix(_429313_ppath,_1a9293eec_PathStdlib)) {
		(_429313_ppath).mut_slice(_1a9293eec_PathStdlib.len());;
		_429313_ppath=(jule::Str("std", 3) + _1a91d2a73_Replace(_429313_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1ad238cb2_findPackageBuiltinDef(_429313_ppath,_428221_ident));
	};
	return nullptr;
}



inline jule::Bool _1ad180c3c_isOkForShifting(jule::Ptr<_1ad159188_Data>& _430725_d) {
	if (_1ad159a4b_IsConst(_430725_d.ptr())) {
		{
			
			if (_1ac505722_IsI64(_430725_d.get()._field_Constant.ptr())) {
				_case_begin_1bc50856c:;
				{
					return (_1ac503379_ReadI64(_430725_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1ac505986_IsU64(_430725_d.get()._field_Constant.ptr())) {
				_case_begin_1bc507d30:;
				{
					return true;
				}
			}
			else if (_1ac5061c3_IsF64(_430725_d.get()._field_Constant.ptr())) {
				_case_begin_1bc507d96:;
				{
					return (_1ac503d2a_ReadF64(_430725_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1bc507cb9:;
				{
					return false;
				}
			}
			_match_end_1bc507bdc:;
		};
	};
	jule::Ptr<_1ad189c02_Prim> _43209_prim = _1ad18733c_Prim(_430725_d.get()._field_Kind.ptr());;
	return ((_43209_prim != nullptr) && _1ad0c42e0_IsInt(_1ad18a065_Str(_43209_prim.ptr())));
}



inline jule::Bool _1ad1810e4_isInstancedStruct(jule::Ptr<_1ac466a3a_StructIns> _432422_s) {
	return (_432422_s.get()._field_Decl.get()._field_Generics.len() == _432422_s.get()._field_Generics.len());
}



inline jule::Bool _1ad1813ad_isPtrArithmeticCompatibleInt(jule::Ptr<_1ad159188_Data>& _432838_d) {
	if (_1ad159a4b_IsConst(_432838_d.ptr())) {
		return _1ad141db8_intAssignable(jule::Str("int", 3),_432838_d);
	};
	_1ad1430ea_typeCompatibilityChecker _433213_tcc = _1ad1430ea_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_432838_d.get()._field_Kind, };;
	return _1ad1446d4_check(&_433213_tcc);
}



inline void _1ad181600_applyCastKindModel(jule::Ptr<_1ad159188_Data>& _434128_d, jule::Ptr<_1ad18522a_TypeKind>& _434143_t) {
	_434128_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50b393_CastingExprModel>(_1ac50b393_CastingExprModel{._field_Expr=_434128_d.get()._field_Model, ._field_Kind=_434143_t, ._field_ExprKind=_434128_d.get()._field_Kind}));
}



inline void _1ad1818a8_applyCastKind(jule::Ptr<_1ad159188_Data>& _434923_d, jule::Ptr<_1ad18522a_TypeKind>& _434938_t) {
	_1ad181600_applyCastKindModel(_434923_d,_434938_t);
	_434923_d.get()._field_Kind=_434938_t;
}



inline jule::Ptr<_1ad159188_Data> _1ad181aa6_buildVoidData(void) {
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1ad181d70_checkDataForIntegerIndexing(jule::Ptr<_1ad159188_Data>& _436237_d) {
	jule::Str _436249_err_fmt = jule::Str();
	if ((_436237_d == nullptr)) {
		_436249_err_fmt = jule::Str();
		return _436249_err_fmt;
	};
	{
		
		if ((_1ad18733c_Prim(_436237_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bc50e1cc:;
			{
				_436249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436249_err_fmt;
			}
		}
		else if ((!(_1ad0c42e0_IsInt(_1ad18a065_Str(_1ad18733c_Prim(_436237_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bc50e243:;
			{
				_436249_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436249_err_fmt;
			}
		}
		else if (_1ad159a4b_IsConst(_436237_d.ptr())) {
			_case_begin_1bc50e2a9:;
			{
				if ((_1ac504567_AsF64(_436237_d.get()._field_Constant.ptr()) < 0LL)) {
					_436249_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _436249_err_fmt;
				};
			}
		}
		else if ((_1ad18733c_Prim(_436237_d.get()._field_Kind.ptr()) == nullptr) || _1ad159a4b_IsConst(_436237_d.ptr()) || (_1ac62d4b5_RealKindOf(_1ad18a065_Str(_1ad18733c_Prim(_436237_d.get()._field_Kind.ptr()).ptr())) != _1ac62d4b5_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1bc50e320:;
			{
				jule::Ptr<_1ad18522a_TypeKind> _437917_t = jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)});;
				_1ad1818a8_applyCastKind(_436237_d,_437917_t);
			}
		}
		_match_end_1bc50e7a4:;
	};
	_436249_err_fmt = jule::Str();
	return _436249_err_fmt;
}



inline void _1ad182139_applyCastModelByEnum(jule::Ptr<_1ad159188_Data>& _438830_d, jule::Ptr<_1ac526b83_Enum> _438844_e) {
	if ((_438844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad189c02_Prim> _43929_p = _1ad18733c_Prim(_438844_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1ad18ce36_IsStr(_43929_p.ptr())) {
		return;;
	};
	_1ad181600_applyCastKindModel(_438830_d,_438844_e.get()._field_Kind.get()._field_Kind);
}



inline void _1ad1823e2_castConstByType(jule::Str& _439921_t, jule::Ptr<_1ad159188_Data>& _439934_d) {
	{
		
		if (_1ad0c407b_IsSigInt(_439921_t)) {
			_case_begin_1bc5150a1:;
			{
				{
					auto _match_expr{ _1ac634be7_BitsizeOf(_1ac62d4b5_RealKindOf(_439921_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1bc515ca5:;
						{
							_1ac5047dc_SetI64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ac50408e_AsI64(_439934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1bc515d1b:;
						{
							_1ac5047dc_SetI64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ac50408e_AsI64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1bc515d82:;
						{
							_1ac5047dc_SetI64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ac50408e_AsI64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1bc515de8:;
						{
							_1ac5047dc_SetI64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ac50408e_AsI64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc515c50:;
				};
			}
		}
		else if (_1ad0c41ad_IsUnsigInt(_439921_t)) {
			_case_begin_1bc515128:;
			{
				{
					auto _match_expr{ _1ac634be7_BitsizeOf(_1ac62d4b5_RealKindOf(_439921_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1bc5193c4:;
						{
							_1ac504a62_SetU64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ac504303_AsU64(_439934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1bc51943a:;
						{
							_1ac504a62_SetU64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ac504303_AsU64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1bc5194a1:;
						{
							_1ac504a62_SetU64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ac504303_AsU64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1bc519517:;
						{
							_1ac504a62_SetU64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ac504303_AsU64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc518945:;
				};
			}
		}
		else if (_1ad0c4422_IsFloat(_439921_t)) {
			_case_begin_1bc5151a0:;
			{
				{
					auto _match_expr{ _1ac634be7_BitsizeOf(_1ac62d4b5_RealKindOf(_439921_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1bc51c7d4:;
						{
							_1ac5052d2_SetF64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ac504567_AsF64(_439934_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1bc51ca37:;
						{
							_1ac5052d2_SetF64(_439934_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ac504567_AsF64(_439934_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1bc51c075:;
				};
			}
		}
		_match_end_1bc514e6e:;
	};
}



inline void _1ad1828ed_updateModelToGenericIns(jule::Any& _443333_m, jule::Ptr<_1ac515831_FnIns>& _443352_f) {
	{
		auto &_match_expr{ _443333_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ac515831_FnIns>>()) {
			_case_begin_1bc51dc36:;
			{
				_443333_m=static_cast<jule::Any>(_443352_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50c817_StructSubIdentExprModel>>()) {
			_case_begin_1bc51ce77:;
			{
				_443333_m.operator jule::Ptr<_1ac50c817_StructSubIdentExprModel>().get()._field_Method=_443352_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50ca04_StructStaticIdentExprModel>>()) {
			_case_begin_1bc51cedd:;
			{
				_443333_m.operator jule::Ptr<_1ac50ca04_StructStaticIdentExprModel>().get()._field_Method=_443352_f;
			}
		}
		_match_end_1bc516e0a:;
	};
}



inline jule::Bool _1ad182b40_pushSubIdentFromExpr(jule::Any _444429_expr, jule::Ptr<_1ac44abc8_SubIdentTypeDecl>& _444450_t) {
	{
		auto &_match_expr{ _444429_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac45154c_IdentExpr>>()) {
			_case_begin_1bc520d9d:;
			{
				jule::Ptr<_1ac45154c_IdentExpr> _444717_e = _444429_expr.operator jule::Ptr<_1ac45154c_IdentExpr>();;
				_444450_t.get()._field_Idents = jule::alloc_for_append(_444450_t.get()._field_Idents,1);_444450_t.get()._field_Idents.__push(jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_444717_e.get()._field_Token, ._field_Ident=_444717_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac452ce0_SubIdentExpr>>()) {
			_case_begin_1bc520e14:;
			{
				jule::Ptr<_1ac452ce0_SubIdentExpr> _445317_e = _444429_expr.operator jule::Ptr<_1ac452ce0_SubIdentExpr>();;
				if ((!(_1ad182b40_pushSubIdentFromExpr(_445317_e.get()._field_Expr.get()._field_Kind,_444450_t)))) {
					return false;
				};
				_444450_t.get()._field_Idents = jule::alloc_for_append(_444450_t.get()._field_Idents,1);_444450_t.get()._field_Idents.__push(jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_445317_e.get()._field_Ident, ._field_Ident=_445317_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1bc520cd2:;
			{
				return false;
			}
		}
		_match_end_1bc520c7c:;
	};
	return true;
}



inline jule::Bool _1ad1a1950_kindUsesGenerics(jule::Any& _157322_k, jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>& _157340_generics) {
	{
		auto &expr = _157340_generics;
		auto it = expr.begin();
		_iter_begin_1bc9395b3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac457597_GenericDecl> &_157412_g = *it;
			{
				if (static__1ad1a1554_exist(_157412_g.get()._field_Ident,_157322_k)) {
					return true;
				};
			}
			_iter_next_1bc9395b3:;
			++it;
			goto _iter_begin_1bc9395b3;
		}
		_iter_end_1bc9395b3:;
	};
	return false;
}



inline jule::Bool _1ad1a1cd5_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _158322_directives, jule::Str _158353_tag) {
	{
		auto &expr = _158322_directives;
		auto it = expr.begin();
		_iter_begin_1bc93a707:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _158417_dr = *it;
			{
				if ((_158417_dr.get()._field_Tag.get()._field_Kind == _158353_tag)) {
					return true;
				};
			}
			_iter_next_1bc93a707:;
			++it;
			goto _iter_begin_1bc93a707;
		}
		_iter_end_1bc93a707:;
	};
	return false;
}



inline jule::Bool _1ad1a207c_canGetPtr(jule::Ptr<_1ad159188_Data>& _159219_d) {
	if (((!(_159219_d.get()._field_Lvalue)) || _1ad159a4b_IsConst(_159219_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1ad18852a_Fn(_159219_d.get()._field_Kind.ptr()) != nullptr) || (_1ad187a79_Enum(_159219_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1bc93c363:;
			{
				return false;
			}
		}
		else {
			_case_begin_1bc93bb26:;
			{
				return true;
			}
		}
		_match_end_1bc93ba16:;
	};
}



inline jule::Bool _1ad1a239b_isValidForSptrType(jule::Ptr<_1ad18522a_TypeKind>& _160528_t) {
	jule::Ptr<_1ac466a3a_StructIns> _160613_s = _1ad18878e_Struct(_160528_t.ptr());;
	if ((((_160613_s != nullptr) && (_160613_s.get()._field_Decl != nullptr)) && _160613_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1ad1a2643_isValidForRef(jule::Ptr<_1ad18522a_TypeKind>& _161423_t) {
	return (_1ad18852a_Fn(_161423_t.ptr()) == nullptr);
}



inline jule::Bool _1ad1a290c_isBuiltinStrConvertable(jule::Ptr<_1ad18522a_TypeKind>& _161733_t) {
	return (((!(_1ad1863b3_Void(_161733_t.ptr()))) && (_1ad18852a_Fn(_161733_t.ptr()) == nullptr)) && (_1ad188ecb_Tup(_161733_t.ptr()) == nullptr));
}



inline jule::Str _1ad1a2b82_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>& _162127_tokens) {
	jule::Str _162213_s = _162127_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162127_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1bc9410c0:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_162312_token = *it;
			{
				_162213_s+=jule::Str("::", 2);
				_162213_s+=_162312_token.get()._field_Kind;
			}
			_iter_next_1bc9410c0:;
			++it;
			goto _iter_begin_1bc9410c0;
		}
		_iter_end_1bc9410c0:;
	};
	return _162213_s;
}



inline jule::Ptr<_1ad189c02_Prim> _1ad1a3039_buildPrimType(jule::Str _163018_kind) {
	return jule::new_ptr<_1ad189c02_Prim>(_1ad189c02_Prim{._field_Kind=_163018_kind});
}



inline jule::Ptr<_1ac43a6e0_Struct> _1ad1a32d1_getStructFromKind(jule::Ptr<_1ad18522a_TypeKind> _163626_k) {
	{
		
		if ((_163626_k == nullptr)) {
			_case_begin_1bc9423ce:;
			{
				return nullptr;
			}
		}
		else if ((_1ad18878e_Struct(_163626_k.ptr()) != nullptr)) {
			_case_begin_1bc942445:;
			{
				return _1ad18878e_Struct(_163626_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1ad1875a1_Sptr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1bc9424ab:;
			{
				return _1ad1a32d1_getStructFromKind(_1ad1875a1_Sptr(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1ad1882b6_Slc(_163626_k.ptr()) != nullptr)) {
			_case_begin_1bc942522:;
			{
				return _1ad1a32d1_getStructFromKind(_1ad1882b6_Slc(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1ad188052_Arr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1bc9427ca:;
			{
				return _1ad1a32d1_getStructFromKind(_1ad188052_Arr(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1ad187815_Ptr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1bc942841:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1bc942368:;
			{
				return nullptr;
			}
		}
		_match_end_1bc933469:;
	};
}



inline jule::Bool _1ad1a3578_isPrim(jule::Str _165911_kind) {
	return ((((((((((((((((_165911_kind == jule::Str("i8", 2)) || (_165911_kind == jule::Str("i16", 3))) || (_165911_kind == jule::Str("i32", 3))) || (_165911_kind == jule::Str("i64", 3))) || (_165911_kind == jule::Str("u8", 2))) || (_165911_kind == jule::Str("u16", 3))) || (_165911_kind == jule::Str("u32", 3))) || (_165911_kind == jule::Str("u64", 3))) || (_165911_kind == jule::Str("f32", 3))) || (_165911_kind == jule::Str("f64", 3))) || (_165911_kind == jule::Str("int", 3))) || (_165911_kind == jule::Str("uint", 4))) || (_165911_kind == jule::Str("uintptr", 7))) || (_165911_kind == jule::Str("bool", 4))) || (_165911_kind == jule::Str("str", 3))) || (_165911_kind == jule::Str("any", 3)));
}



inline void _1ad1a3831_applyImplicitCast(jule::Ptr<_1ad18522a_TypeKind>& _167827_dest, jule::Ptr<_1ad159188_Data>& _167849_d) {
	if (_1ad18614e_IsNil(_167849_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ad189c02_Prim> _16829_destPrim = _1ad18733c_Prim(_167827_dest.ptr());;
	jule::Ptr<_1ad189c02_Prim> _16839_prim = _1ad18733c_Prim(_167849_d.get()._field_Kind.ptr());;
	if ((_16829_destPrim != nullptr)) {
		if (_1ad18d19a_IsAny(_16829_destPrim.ptr())) {
			_1ad1818a8_applyCastKind(_167849_d,_167827_dest);
			return;;
		};
		if (((((((!(_1ad185dda_CppLinked(_167849_d.get()._field_Kind.ptr()))) && (!(_167849_d.get()._field_Kind.get()._field_Variadic))) && (!(_167849_d.get()._field_Lvalue))) && (!(_1ad159a4b_IsConst(_167849_d.ptr())))) && (_16839_prim != nullptr)) && _1ad0c4554_IsNum(_16839_prim.get()._field_Kind))) {
			_1ad1818a8_applyCastKind(_167849_d,_167827_dest);
		};
		return;;
	};
	if (((_1ad188a03_Trait(_167827_dest.ptr()) != nullptr) && (_1ad188a03_Trait(_167849_d.get()._field_Kind.ptr()) == nullptr))) {
		_1ad181600_applyCastKindModel(_167849_d,_167827_dest);
		return;;
	};
	if (((_1ad187cdd_TypeEnum(_167827_dest.ptr()) != nullptr) && (_1ad187cdd_TypeEnum(_167849_d.get()._field_Kind.ptr()) == nullptr))) {
		_1ad181600_applyCastKindModel(_167849_d,_167827_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1ad15442a_SymbolTable>,jule::Slice<_1a92722b6_Log>> _1ad1a6724_buildSymbols(jule::Ptr<_1ac4107d6_Ast>& _1522_ast, jule::Trait<_1ad0d9888_Importer>& _1538_importer, jule::Ptr<_1ac51e065_symbolBuilder> _1562_owner) {
	jule::Ptr<_1ac51e065_symbolBuilder> _1613_sb = jule::new_ptr<_1ac51e065_symbolBuilder>(_1ac51e065_symbolBuilder{._field_owner=_1562_owner, ._field_importer=_1538_importer, ._field_ast=_1522_ast, });;
	_1ac524015_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1ad0e0075_Package>,jule::Slice<_1a92722b6_Log>> _1ad1a6b53_analyzePackage(jule::Slice<jule::Ptr<_1ac4107d6_Ast>>& _2924_files, jule::Trait<_1ad0d9888_Importer>& _2944_importer, jule::I64& _2965_flags) {
	jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1ad15442a_SymbolTable>>::alloc(0LL,_2924_files.len());;
	{
		auto &expr = _2924_files;
		auto it = expr.begin();
		_iter_begin_1bcd03d23:;
		if (it != expr.end()) {
			jule::Ptr<_1ac4107d6_Ast> _3217_f = *it;
			{
				jule::Ptr<_1ad15442a_SymbolTable> _3318_table;;
				jule::Slice<_1a92722b6_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1ad1a6724_buildSymbols(_3217_f,_2944_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1bcd03d23:;
			++it;
			goto _iter_begin_1bcd03d23;
		}
		_iter_end_1bcd03d23:;
	};
	jule::Ptr<_1ad0e5267_Sema> _4013_sema = jule::new_ptr<_1ad0e5267_Sema>(_1ad0e5267_Sema{._field_flags=_2965_flags});;
	_1ad10e0b6_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1ad0e0075_Package> _4813_pkg = jule::new_ptr<_1ad0e0075_Package>(_1ad0e0075_Package{._field_Files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1ad0e0075_Package>,jule::Slice<_1a92722b6_Log>> _1ad1a703d_AnalyzePackage(jule::Slice<jule::Ptr<_1ac4107d6_Ast>> _7223_files, jule::Trait<_1ad0d9888_Importer> _7242_importer, jule::I64 _7262_flags) {
	if ((_7223_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1ad0e0075_Package> _7614_package;;
	jule::Slice<_1a92722b6_Log> _7627_logs;;
	std::tie(_7614_package,_7627_logs) = _1ad1a6b53_analyzePackage(_7223_files,_7242_importer,_7262_flags);
	return std::make_tuple(_7614_package,_7627_logs);
}



inline jule::Ptr<_1ac515831_FnIns> _1ad1b0d5a_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1bcd0b853:;
			{
				static jule::Ptr<_1ac515831_FnIns> _2520_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2361aa_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1bcd0b8b9:;
			{
				static jule::Ptr<_1ac515831_FnIns> _2820_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad238aa3_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1bcd0bac8:;
			{
				static jule::Ptr<_1ac515831_FnIns> _3120_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad1b1b80_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1bcd0bb3e:;
			{
				static jule::Ptr<_1ac515831_FnIns> _3420_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad203023_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1bcd0bba5:;
			{
				static jule::Ptr<_1ac515831_FnIns> _3720_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad21b8ee_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1bcd0bc1b:;
			{
				static jule::Ptr<_1ac515831_FnIns> _4020_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad214d37_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1bcd0bc82:;
			{
				static jule::Ptr<_1ac515831_FnIns> _4320_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2289d8_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1bcd0bce8:;
			{
				static jule::Ptr<_1ac515831_FnIns> _4620_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2137c5_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1bcd0bdb4:;
			{
				static jule::Ptr<_1ac515831_FnIns> _4920_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad1caa45_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1bcd0b644:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd0b0a0:;
	};
}



inline jule::Ptr<_1ad184537_TypeAlias> _1ad1b2c5d_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1bcd126b1:;
			{
				static jule::Ptr<_1ad184537_TypeAlias> _5920_t = jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1bcd12727:;
			{
				static jule::Ptr<_1ad184537_TypeAlias> _6920_t = jule::new_ptr<_1ad184537_TypeAlias>(_1ad184537_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ad189383_TypeSymbol>(_1ad189383_TypeSymbol{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1bcd1264a:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd0c205:;
	};
}



inline jule::Any _1ad1b3841_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_1ac515831_FnIns> _8413_f = _1ad1b0d5a_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_1ad184537_TypeAlias> _8813_ta = _1ad1b2c5d_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _1ad1b4358_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1bcd16121:;
			{
				static jule::Ptr<_1ac515831_FnIns> _9820_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad249487_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1bcd16187:;
			{
				static jule::Ptr<_1ac515831_FnIns> _10120_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad249872_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_1bcd15c14:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd15ac1:;
	};
}



inline jule::Any _1ad1dd0eb_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1bcd16572:;
			{
				static jule::Ptr<_1ac515831_FnIns> _11120_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad1e6bd7_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1bcd165d8:;
			{
				static jule::Ptr<_1ac515831_FnIns> _11420_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad248365_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1bcd1664e:;
			{
				static jule::Ptr<_1ac515831_FnIns> _11720_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad2486ea_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_1bcd17111:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd17b7d:;
	};
}



inline jule::Any _1ad239c19_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1bcd18057:;
			{
				static jule::Ptr<_1ac515831_FnIns> _12720_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad248b29_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1bcd180bd:;
			{
				static jule::Ptr<_1ac515831_FnIns> _13020_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Decl=jule::new_ptr<_1ac512b80_Fn>(_1ac512b80_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ac457597_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad249047_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_1bcd1a246:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd1a103:;
	};
}



inline jule::Any _1ad238cb2_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1bcd1c28c:;
			{
				return jule::Any(_1ad1b4358_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1bcd1c303:;
			{
				return jule::Any(_1ad1dd0eb_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1bcd1c369:;
			{
				return jule::Any(_1ad239c19_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_1bcd1a444:;
			{
				return nullptr;
			}
		}
		_match_end_1bcd1b049:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad213d69_builtinCallerCommonPlain(jule::Ptr<_1ad15ac06_Eval>& _15534_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _15549_fc, jule::Ptr<_1ad159188_Data>& _15571_d) {
	jule::Ptr<_1ac515831_FnIns> _15613_f = _1ad18852a_Fn(_15571_d.get()._field_Kind.ptr());;
	_1ad14ae38_fnCallArgChecker _15813_fcac = _1ad14ae38_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1ad14d303_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1ac50b580_FnCallExprModel> _16913_model = jule::new_ptr<_1ac50b580_FnCallExprModel>(_1ac50b580_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_1ad181aa6_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad21d527_builtinCallerCommon(jule::Ptr<_1ad15ac06_Eval>& _18829_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _18844_fc, jule::Ptr<_1ad159188_Data>& _18866_d) {
	return _1ad213d69_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_1ad159188_Data> _1ad2396ca_builtinCallerCommonMut(jule::Ptr<_1ad15ac06_Eval>& _19232_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _19247_fc, jule::Ptr<_1ad159188_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_1ad15b212_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1ad21d527_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_1ad159188_Data> _1ad214a18_builtinCallerError(jule::Ptr<_1ad15ac06_Eval>& _19928_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _20713_expr = _1ad1769be_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_1ad159573_IsNil(_20713_expr.ptr())) {
		_1ad15b212_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _21613_d = _1ad181aa6_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50e6d7_BuiltinErrorCallExprModel>(_1ac50e6d7_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad2361aa_builtinCallerOut(jule::Ptr<_1ad15ac06_Eval>& _22426_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _22441_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _23313_expr = _1ad1769be_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1ad1a290c_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_1ad15b212_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _24313_d = _1ad181aa6_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d494_BuiltinOutCallExprModel>(_1ac50d494_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad238aa3_builtinCallerOutln(jule::Ptr<_1ad15ac06_Eval>& _24828_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _24843_fc, jule::Ptr<_1ad159188_Data>& _24865_d) {
	_24865_d=_1ad2361aa_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d681_BuiltinOutlnCallExprModel>(_1ac50d681_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad1b1b80_builtinCallerNew(jule::Ptr<_1ad15ac06_Eval>& _26026_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _26041_fc, jule::Ptr<_1ad159188_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_1ad15b212_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _26913_t = _1ad1763a3_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_1ad15b212_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1ad1a239b_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_1ac466a3a_StructIns> _28017_s = _1ad18878e_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_1ad15b212_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1ad18d486_Sptr>(_1ad18d486_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1ad18522a_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_1ad159188_Data> _29717_init = _1ad1769be_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_1a959a127_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1ad101b25_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_1ad0edddb_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50da5a_BuiltinNewCallExprModel>(_1ac50da5a_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50da5a_BuiltinNewCallExprModel>(_1ac50da5a_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad203023_builtinCallerPanic(jule::Ptr<_1ad15ac06_Eval>& _32228_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _32243_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _33113_expr = _1ad1769be_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1ad18733c_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18ce36_IsStr(_1ad18733c_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1ad15b212_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _34013_d = _1ad181aa6_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50dc47_BuiltinPanicCallExprModel>(_1ac50dc47_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad21b8ee_builtinCallerMake(jule::Ptr<_1ad15ac06_Eval>& _34827_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _34842_fc, jule::Ptr<_1ad159188_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_1ad15b212_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1ad15b212_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _35813_t = _1ad1763a3_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_1bcd41ed7:;
			{
				goto _match_end_1bcd422c3;
			}
		}
		else if ((_1ad1882b6_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd4204d:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_1ad15b212_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1ad18733c_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _1ad18ce36_IsStr(_1ad18733c_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bcd420b4:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_1ad15b212_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1bcd422c3:;
	};
	_1ad15b212_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_1ad159188_Data> _38213_len = _1ad1769be_evalExpr(_1ad0ed5d3_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_1ad164803_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1ac50e121_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_1ac50e121_BuiltinMakeCallExprModel>(_1ac50e121_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1ad159188_Data> _39517_cap = _1ad1769be_evalExpr(_1ad0ed5d3_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_1ad164803_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad214d37_builtinCallerAppend(jule::Ptr<_1ad15ac06_Eval>& _40529_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _40544_fc, jule::Ptr<_1ad159188_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_1ad15b212_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1ad15b212_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _41513_t = _1ad1769be_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_1ad1882b6_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_1ad15b212_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ac515831_FnIns> _42513_f = jule::new_ptr<_1ac515831_FnIns>(_1ac515831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1ac514962_ParamIns>>::make({jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_1ac514962_ParamIns>(_1ac514962_ParamIns{._field_Decl=jule::new_ptr<_1ac511343_Param>(_1ac511343_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1ad1882b6_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1ad159188_Data>(jule::Ptr<_1ad15ac06_Eval>&,jule::Ptr<_1ac4537a2_FnCallExpr>&,jule::Ptr<_1ad159188_Data>&)>(_1ad213d69_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50cdcd_CommonIdentExprModel>(_1ac50cdcd_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_1ad213d69_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_1ac50b580_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_1ac50b580_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50e30d_BuiltinAppendCallExprModel>(_1ac50e30d_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad23585d_callerCopySlice(jule::Ptr<_1ad159188_Data>& _46225_dest, jule::Ptr<_1ad15ac06_Eval>& _46243_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _46258_fc, jule::Ptr<_1ad159188_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_1ad15b212_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _46713_src = _1ad1769be_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ad18dde3_Slc> _47113_slc = _1ad1882b6_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _1ad186627_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_1ad15b212_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1ad185934_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_1ad15b212_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1ad189c02_Prim> _48113_dest_prim = _1ad18733c_Prim(_1ad1882b6_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1ad189c02_Prim> _48213_prim = _1ad18733c_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_dest_prim == nullptr) || (_48213_prim == nullptr)) || (!(_1ad18ce36_IsStr(_48213_prim.ptr())))) || (!(_1ad18b50b_IsU8(_48113_dest_prim.ptr()))))) {
			_1ad15b212_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50e4ea_BuiltinCopyCallExprModel>(_1ac50e4ea_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad1ae496_callerCopyStr(jule::Ptr<_1ad159188_Data>& _49623_dest, jule::Ptr<_1ad15ac06_Eval>& _49641_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _49656_fc, jule::Ptr<_1ad159188_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_1ad15b212_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _50113_src = _1ad1769be_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1ad18733c_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd6028b:;
			{
				if (_1ad18ce36_IsStr(_1ad18733c_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1ad1882b6_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd60302:;
			{
				jule::Ptr<_1ad18dde3_Slc> _51117_slc = _1ad1882b6_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_1ad18733c_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _1ad18b50b_IsU8(_1ad18733c_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1bcd60720:;
	};
	_1ad15b212_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_1ad185626_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50e4ea_BuiltinCopyCallExprModel>(_1ac50e4ea_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad2289d8_builtinCallerCopy(jule::Ptr<_1ad15ac06_Eval>& _52627_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _52642_fc, jule::Ptr<_1ad159188_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_1ad15b212_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1ad15b212_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_1ad15b212_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _53913_dest = _1ad1769be_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_1bcd6996b:;
			{
				return nullptr;
			}
		}
		else if ((_1ad1882b6_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcd699d2:;
			{
				return _1ad23585d_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_1ad18733c_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _1ad18ce36_IsStr(_1ad18733c_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1bcd69a48:;
			{
				return _1ad1ae496_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_1bcd69905:;
			{
				_1ad15b212_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1bcd698a0:;
	};
}



inline jule::Ptr<_1ad159188_Data> _1ad2137c5_builtinCallerClone(jule::Ptr<_1ad15ac06_Eval>& _55328_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _55343_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _56213_d = _1ad1763a3_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ad186d64_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1ad1882b6_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1ad188c67_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1ad188052_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1ad1875a1_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1bcd706ca:;
				{
					{
						_1ad15b212_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1ad18878e_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1bcd70741:;
				{
					{
						_1ad15b212_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1bcd70664:;
				{
					{
						_1ad15b212_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1ad185626_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1bcd7029b:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50d86d_BuiltinCloneCallExprModel>(_1ac50d86d_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad1caa45_builtinCallerAssert(jule::Ptr<_1ad15ac06_Eval>& _59529_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _59544_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_1ad15b212_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _60413_expr = _1ad1769be_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1ad18733c_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18cbc2_IsBool(_1ad18733c_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1ad15b212_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac50de34_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_1ac50de34_BuiltinAssertCallExprModel>(_1ac50de34_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1ad159188_Data> _62117_log = _1ad1769be_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1ad159a4b_IsConst(_62117_log.ptr()))) || (_1ad18733c_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1ad18ce36_IsStr(_1ad18733c_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1ad15b212_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1ad185626_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_1ac503ab6_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1ad159188_Data> _63413_d = _1ad181aa6_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad1e6bd7_builtinCallerStdMemSizeOf(jule::Ptr<_1ad15ac06_Eval>& _63935_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _63950_fc, jule::Ptr<_1ad159188_Data>& ) {
	jule::Ptr<_1ad159188_Data> _64013_result = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _65213_d = _1ad1763a3_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50c5d6_SizeofExprModel>(_1ac50c5d6_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_1ad159188_Data> _1ad248365_builtinCallerStdMemAlignOf(jule::Ptr<_1ad15ac06_Eval>& _66136_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _66151_fc, jule::Ptr<_1ad159188_Data>& ) {
	jule::Ptr<_1ad159188_Data> _66213_result = jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _67413_d = _1ad1763a3_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac50ed47_AlignofExprModel>(_1ac50ed47_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_1ad159188_Data> _1ad2486ea_builtinCallerStdMemFree(jule::Ptr<_1ad15ac06_Eval>& _68333_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _68348_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _69213_d = _1ad1763a3_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ad186b00_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_1ad15b212_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _70113_result = _1ad181aa6_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac5105ea_FreeExprModel>(_1ac5105ea_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_1ad159188_Data> _1ad248b29_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ad15ac06_Eval>& _70645_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _70660_fc, jule::Ptr<_1ad159188_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_1ad15b212_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad159188_Data> _71513_d = _1ad1763a3_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ad1a290c_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_1ad15b212_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1ad159188_Data>(_1ad159188_Data{._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(_1ad1a3039_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1ac510221_IntegratedToStrExprModel>(_1ac510221_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_1ad159188_Data> _1ad249047_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ad15ac06_Eval>& _73344_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _73359_fc, jule::Ptr<_1ad159188_Data>& _73381_d) {
	if ((!(_1ad15bb4c_isUnsafe(_73344_e.ptr())))) {
		_1ad15b212_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_1ad15b212_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _74313_argd = _1ad1769be_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1ad18733c_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1ad18ce36_IsStr(_1ad18733c_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1ad15b212_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ad185626_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1ad159a4b_IsConst(_74313_argd.ptr()))) || (!(_1ac505e5e_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_1ad15b212_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ad159188_Data> _75813_r = _1ad181aa6_buildVoidData();;
	jule::Ptr<_1ac515831_FnIns> _76013_f = _1ad18852a_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1ac51040d_BackendEmitExprModel> _76513_model = jule::new_ptr<_1ac51040d_BackendEmitExprModel>(_1ac51040d_BackendEmitExprModel{._field_Code=_1ac503ab6_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1bcd99c65:;
			if (it != expr.end()) {
				jule::Ptr<_1ac44e4d4_Expr> _77121_arg = *it;
				{
					_74313_argd=_1ad1763a3_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_1bcd99c65:;
				++it;
				goto _iter_begin_1bcd99c65;
			}
			_iter_end_1bcd99c65:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_1ad159188_Data> _1ad249487_builtinCallerStdDebugOut(jule::Ptr<_1ad15ac06_Eval>& _78434_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _78449_fc, jule::Ptr<_1ad159188_Data>& _78471_d) {
	_78471_d=_1ad2361aa_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_1ac50d494_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_1ad159188_Data> _1ad249872_builtinCallerStdDebugOutln(jule::Ptr<_1ad15ac06_Eval>& _79336_e, jule::Ptr<_1ac4537a2_FnCallExpr>& _79351_fc, jule::Ptr<_1ad159188_Data>& _79373_d) {
	_79373_d=_1ad238aa3_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_1ac50d681_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _1ac2745c3_FindModuleFile(jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1bcda0188:;
		if (it != expr.end()) {
			jule::Ptr<_1d9e50172_DirEntry> &_1312_d = *it;
			{
				if (((!(_1d9e3de63_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1bcda0188:;
			++it;
			goto _iter_begin_1bcda0188;
		}
		_iter_end_1bcda0188:;
	};
	return false;
}



inline jule::Str _1ac274705_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d9e50172_DirEntry>> _2617_dirents = ({
				auto except = static__1a91d4c40_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bcda0441;
				} jule::Slice<jule::Ptr<_1d9e50172_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1ac2745c3_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1a91d49cb_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1bcda0441;
			};
		}
	_iter_next_1bcda0441:;
	}
	_iter_end_1bcda0441:;;
	return jule::Str();
}



inline jule::Slice<_1a92722b6_Log> _1ac27498b_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d9e39348_Read(_1a91d4503_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a92722b6_Log>::make({_1a92722b6_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _1a91d3865_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1a92722b6_Log>::make({_1a92722b6_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1a9652036_FileInfo> _1ad8be5bd_ParseFile(jule::Ptr<_1a95a04b2_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a9652036_FileInfo> _2713_finf = jule::new_ptr<_1a9652036_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1ad8beaeb_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1ac4107d6_Ast>,jule::Slice<_1a92722b6_Log>> _1ad8beaeb_parseFileset(jule::Ptr<_1a95a04b2_File> _5521_f) {
	jule::Ptr<_1ad8dd4ee_parser> _5613_p = jule::new_ptr<_1ad8dd4ee_parser>();;
	_1ad8ecdc1_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1ac45a2d1_ScopeTree> _1ad8c0503_newScope(void) {
	return jule::new_ptr<_1ac45a2d1_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1ad8c0811_isSt(jule::Ptr<_1a959a127_Token> _509_current, jule::Ptr<_1a959a127_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1ad8c0b52_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a959a127_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1a959a127_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1a959ab1c_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1ad8c0ed7_nextStPos(jule::Slice<jule::Ptr<_1a959a127_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1a959a127_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1bce3b697:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1bce3d347:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1ad8c0b52_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1ad8c0811_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1bce3bec2:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1ad8c0811_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1bce3bd07:;
						};
						goto _iter_next_1bce39cd3;
					}
				}
				_match_end_1bce3b642:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1bce39cd3;
			};
			if ((_7313_i > _7133_start)) {
				if (_1ad8c0b52_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1bce39cd3;
				};
				std::tie(_7517_ok,_7617_terminated) = _1ad8c0811_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1ad8c0811_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1bce39cd3;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1bce39cd3:;
	}
	_iter_end_1bce39cd3:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Bool> _1ad8c1328_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1a959a127_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1ad8c0ed7_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1a959a127_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1ad8c1328_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _1ad8c19bb_splitStmts(jule::Slice<jule::Ptr<_1a959a127_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1ad8c1625_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1ad8c1625_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1a959a127_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1ad8c1328_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1ad8c1625_stmt>(_1ad8c1625_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1bce45ddd:;
	}
	_iter_end_1bce45ddd:;;
	return _15613_stmts;
}



inline jule::Bool _1ad8d810e_isTypeOp(jule::Str& _89314_kind) {
	return (((_89314_kind == jule::Str("&", 1)) || (_89314_kind == jule::Str("&&", 2))) || (_89314_kind == jule::Str("*", 1)));
}



inline jule::Bool _1ad8d83ea_isTypeRange(jule::Slice<jule::Ptr<_1a959a127_Token>>& _90021_tokens) {
	jule::Bool _90113_op = false;;
	{
		auto &expr = _90021_tokens;
		auto it = expr.begin();
		_iter_begin_1bbd96da6:;
		if (it != expr.end()) {
			jule::I64 _9029_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _90212_token = *it;
			{
				if ((_90212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_90212_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_90113_op) {
							return true;
						};
						jule::I64 _90825_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1a959a127_Token>> _90925_lTokens = _90021_tokens.slice(_9029_i);;
						{
							auto &expr = _90925_lTokens;
							auto it = expr.begin();
							_iter_begin_1bbd982d6:;
							if (it != expr.end()) {
								jule::Ptr<_1a959a127_Token> _91024_lToken = *it;
								{
									{
										auto &_match_expr{ _91024_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1bbd99a8a:;
											{
												{
													auto &_match_expr{ _91024_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1bbd9a409:;
														{
															(_90825_rangeN)++;
															goto _iter_next_1bbd982d6;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1bbd9a481:;
														{
															(_90825_rangeN)--;
															goto _iter_next_1bbd982d6;
														}
													}
													_match_end_1bbd9a22d:;
												};
											}
										}
										_match_end_1bbd9986a:;
									};
									if ((_90825_rangeN == 0LL)) {
										return _1ad8d810e_isTypeOp(_91024_lToken.get()._field_Kind);
									};
								}
								_iter_next_1bbd982d6:;
								++it;
								goto _iter_begin_1bbd982d6;
							}
							_iter_end_1bbd982d6:;
						};
						return true;
					};
				};
				if ((!(_1ad8d810e_isTypeOp(_90212_token.get()._field_Kind)))) {
					return false;
				};
				_90113_op=true;
			}
			_iter_next_1bbd96da6:;
			++it;
			_9029_i++;
			goto _iter_begin_1bbd96da6;
		}
		_iter_end_1bbd96da6:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8d8692_getBlockExpr(jule::Slice<jule::Ptr<_1a959a127_Token>>& _93822_tokens) {
	jule::I64 _93913_braceN = 0LL;;
	jule::I64 _94013_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93822_tokens;
		auto it = expr.begin();
		_iter_begin_1bbd9bd34:;
		if (it != expr.end()) {
			jule::I64 _9419_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _94112_tok = *it;
			{
				{
					auto &_match_expr{ _94112_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1bbd9cbc0:;
						{
							(_94013_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1bbd9cc47:;
						{
							{
								auto &_match_expr{ _94112_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1bbd9d9a1:;
									{
										if (((_93913_braceN > 0LL) || (_94013_skipToNextBraceClose > 0LL))) {
											if ((_94013_skipToNextBraceClose > 0LL)) {
												(_94013_skipToNextBraceClose)--;
											};
											(_93913_braceN)++;
											goto _match_end_1bbd9dad3;
										};
										return _93822_tokens.slice(0LL,_9419_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1bbd9e155:;
									{
										(_93913_braceN)++;
									}
								}
								else {
									_case_begin_1bbd9dbe3:;
									{
										(_93913_braceN)--;
									}
								}
								_match_end_1bbd9dad3:;
							};
						}
					}
					_match_end_1bbd9c9e4:;
				};
			}
			_iter_next_1bbd9bd34:;
			++it;
			_9419_i++;
			goto _iter_begin_1bbd9bd34;
		}
		_iter_end_1bbd9bd34:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8d8a27_splitDelim(jule::Slice<jule::Ptr<_1a959a127_Token>>& _96920_tokens, jule::U64 _96938_delim) {
	jule::I64 _97013_rangeN = 0LL;;
	{
		auto &expr = _96920_tokens;
		auto it = expr.begin();
		_iter_begin_1bbda08b5:;
		if (it != expr.end()) {
			jule::I64 _9719_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _97112_token = *it;
			{
				{
					auto &_match_expr{ _97112_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1bbda1498:;
						{
							{
								auto &_match_expr{ _97112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1bbda1ae7:;
									{
										(_97013_rangeN)++;
										goto _iter_next_1bbda08b5;
									}
								}
								else {
									_case_begin_1bbda1d7d:;
									{
										(_97013_rangeN)--;
									}
								}
								_match_end_1bbda1bb3:;
							};
						}
					}
					else if (_match_expr == _96938_delim) {
						_case_begin_1bbda1520:;
						{
							if ((_97013_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1a959a127_Token>> _98525_l = _96920_tokens.slice(0LL,_9719_i);;
								jule::Slice<jule::Ptr<_1a959a127_Token>> _98625_r = _96920_tokens.slice((_9719_i + 1LL));;
								return std::make_tuple(_98525_l,_98625_r);
							};
						}
					}
					_match_end_1bbda1267:;
				};
			}
			_iter_next_1bbda08b5:;
			++it;
			_9719_i++;
			goto _iter_begin_1bbda08b5;
		}
		_iter_end_1bbda08b5:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1ad8d8cbe_findLowestPrecOp(jule::Slice<jule::Ptr<_1a959a127_Token>>& _99622_tokens) {
	jule::U8 _100113_prec = 255LLU;;
	jule::I64 _100213_precPos = -1LL;;
	jule::I64 _100413_braceN = 0LL;;
	jule::Bool _100513_skipToNextBraceOpen = false;;
	{
		auto &expr = _99622_tokens;
		auto it = expr.begin();
		_iter_begin_1bbda4c82:;
		if (it != expr.end()) {
			jule::I64 _10069_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> &_100612_token = *it;
			{
				{
					
					if ((_100612_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1bbda5a96:;
						{
							{
								auto &_match_expr{ _100612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1bbda66ce:;
									{
										_100513_skipToNextBraceOpen=false;
										goto _case_begin_1bbda6e1b;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1bbda6e1b:;
									{
										(_100413_braceN)++;
									}
								}
								else {
									_case_begin_1bbda6965:;
									{
										(_100413_braceN)--;
									}
								}
								_match_end_1bbda679a:;
							};
							goto _iter_next_1bbda4c82;
						}
					}
					else if (_100513_skipToNextBraceOpen) {
						_case_begin_1bbda5b1d:;
						{
							goto _iter_next_1bbda4c82;
						}
					}
					else if ((_100612_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1bbda5b95:;
						{
							_100513_skipToNextBraceOpen=true;
							goto _iter_next_1bbda4c82;
						}
					}
					else if ((_10069_i == 0LL)) {
						_case_begin_1bbda5c1c:;
						{
							goto _iter_next_1bbda4c82;
						}
					}
					else if ((_100612_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1bbda5c94:;
						{
							goto _iter_next_1bbda4c82;
						}
					}
					else if ((_100413_braceN > 0LL)) {
						_case_begin_1bbda5d1b:;
						{
							goto _iter_next_1bbda4c82;
						}
					}
					_match_end_1bbda5931:;
				};
				jule::Ptr<_1a959a127_Token> _103313_left = _99622_tokens[(_10069_i - 1LL)];;
				if (((_103313_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_103313_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1bbda4c82;
				};
				if ((((_10069_i > 1LL) && (_103313_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_103313_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1a959a127_Token> _104117_lleft = _99622_tokens[(_10069_i - 2LL)];;
					if (((_104117_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_104117_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100612_token.get()._field_Kind == jule::Str("&", 1)) || (_100612_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1bbda4c82;
						};
					};
				};
				jule::U8 _105013_p = _1a959a4ce_Prec(_100612_token.ptr());;
				if (((_105013_p != 0LLU) && (_105013_p <= _100113_prec))) {
					_100113_prec=_105013_p;
					_100213_precPos=_10069_i;
				};
			}
			_iter_next_1bbda4c82:;
			++it;
			_10069_i++;
			goto _iter_begin_1bbda4c82;
		}
		_iter_end_1bbda4c82:;
	};
	return _100213_precPos;
}



inline jule::Ptr<_1ac45154c_IdentExpr> _1ad8d9066_buildIdentExpr(jule::Ptr<_1a959a127_Token>& _105924_token) {
	return jule::new_ptr<_1ac45154c_IdentExpr>(_1ac45154c_IdentExpr{._field_Token=_105924_token, ._field_Ident=_105924_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::I64> _1ad8d930d_getRangeExprTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>& _106728_tokens) {
	jule::I64 _106813_rangeN = 0LL;;
	jule::I64 _106913_i = (_106728_tokens.len() - 1LL);;
	for (; (_106913_i >= 0LL); (_106913_i)--) {
		{
			jule::Ptr<_1a959a127_Token> _107113_tok = _106728_tokens[_106913_i];;
			if ((_107113_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _107113_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1bbdae709:;
						{
							(_106813_rangeN)++;
						}
					}
					else {
						_case_begin_1bbdb00bc:;
						{
							(_106813_rangeN)--;
						}
					}
					_match_end_1bbdaedad:;
				};
			};
			if ((_106813_rangeN == 0LL)) {
				return std::make_tuple(_106728_tokens.slice(0LL,_106913_i),_106813_rangeN);
			};
		}
	_iter_next_1bbdae011:;
	}
	_iter_end_1bbdae011:;;
	return std::make_tuple(nullptr,_106813_rangeN);
}



inline jule::Bool _1ad8da067_checkAssignTokens(jule::Slice<jule::Ptr<_1a959a127_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1a959e6c0_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1bd0e2d7b:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd0e39a3:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1bd0e3c7d:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1bd0e3a6e:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1bd0e2d7b;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1a959ec0e_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1bd0e2d7b:;
			++it;
			goto _iter_begin_1bd0e2d7b;
		}
		_iter_end_1bd0e2d7b:;
	};
	return false;
}



inline _1a92722b6_Log _1ad8db288_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1a95a04b2_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_1a9272706_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_1a959a127_Token>> _1ad8db761_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1a959a127_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1a959a127_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_rangeN = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1bd0e9cc8:;
						{
							(_8213_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1bd0e9d50:;
						{
							(_8213_rangeN)--;
						}
					}
					_match_end_1bd0e9a97:;
				};
			};
		}
	_iter_next_1bd0e858a:;
	}
	_iter_end_1bd0e858a:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1a959a127_Token>>,jule::Slice<jule::Ptr<_1a959a127_Token>>> _1ad8dba08_rangeLast(jule::Slice<jule::Ptr<_1a959a127_Token>>& _10619_tokens) {
	jule::Slice<jule::Ptr<_1a959a127_Token>> _10639_cutted = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	jule::Slice<jule::Ptr<_1a959a127_Token>> _10657_cut = jule::Slice<jule::Ptr<_1a959a127_Token>>();
	if ((_10619_tokens.len() == 0LL)) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	} else if ((_10619_tokens[(_10619_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	};
	jule::I64 _11313_braceN = 0LL;;
	jule::I64 _11413_i = (_10619_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_1a959a127_Token> _11613_token = _10619_tokens[_11413_i];;
			if ((_11613_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1bd0ed480:;
						{
							(_11313_braceN)++;
							goto _iter_next_1bd0ead2e;
						}
					}
					else {
						_case_begin_1bd0edd87:;
						{
							(_11313_braceN)--;
						}
					}
					_match_end_1bd0edb78:;
				};
			};
			if ((_11313_braceN == 0LL)) {
				_10639_cutted = _10619_tokens.slice(0LL,_11413_i);
				_10657_cut = _10619_tokens.slice(_11413_i);
				return std::make_tuple(_10639_cutted,_10657_cut);
			};
		}
	_iter_next_1bd0ead2e:;
	}
	_iter_end_1bd0ead2e:;;
	_10639_cutted = _10619_tokens;
	_10657_cut = nullptr;
	return std::make_tuple(_10639_cutted,_10657_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>,jule::Slice<_1a92722b6_Log>> _1ad8dbde3_partsKind(jule::Slice<jule::Ptr<_1a959a127_Token>>& _13819_tokens, jule::Str _13837_kind, jule::Bool _13854_expr_must) {
	if ((_13819_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _14313_parts = nullptr;;
	jule::Slice<_1a92722b6_Log> _14413_errors = nullptr;;
	jule::I64 _14613_rangeN = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13819_tokens;
		auto it = expr.begin();
		_iter_begin_1bd102572:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd1035b7:;
							{
								(_14613_rangeN)++;
								goto _iter_next_1bd102572;
							}
						}
						else {
							_case_begin_1bd103892:;
							{
								(_14613_rangeN)--;
							}
						}
						_match_end_1bd103683:;
					};
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_1bd102572;
				};
				if ((_14812_token.get()._field_Kind == _13837_kind)) {
					if ((_13854_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_1a92722b6_Log _16721_err = _1ad8db288_makeErr(_14812_token.get()._field_Row,_14812_token.get()._field_Column,_14812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1bd102572:;
			++it;
			_1489_i++;
			goto _iter_begin_1bd102572;
		}
		_iter_end_1bd102572:;
	};
	if ((_14713_last < _13819_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last));;
	} else if ((!(_13854_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_1a959a127_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>>,jule::Slice<_1a92722b6_Log>> _1ad8dc2cd_parts(jule::Slice<jule::Ptr<_1a959a127_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a959a127_Token>>> _19513_parts = nullptr;;
	jule::Slice<_1a92722b6_Log> _19613_errors = nullptr;;
	jule::I64 _19813_rangeN = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_1bd109090:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_1a959a127_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1bd10a0d5:;
							{
								(_19813_rangeN)++;
								goto _iter_next_1bd109090;
							}
						}
						else {
							_case_begin_1bd10a3b0:;
							{
								(_19813_rangeN)--;
							}
						}
						_match_end_1bd10a1a1:;
					};
				};
				if ((_19813_rangeN > 0LL)) {
					goto _iter_next_1bd109090;
				};
				if ((_20012_token.get()._field_Id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_1a92722b6_Log _21921_err = _1ad8db288_makeErr(_20012_token.get()._field_Row,_20012_token.get()._field_Column,_20012_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_1bd109090:;
			++it;
			_2009_i++;
			goto _iter_begin_1bd109090;
		}
		_iter_end_1bd109090:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_1a959a127_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _1ad8dc575_getCloseKindOfBrace(jule::Str _23624_left) {
	{
		auto &_match_expr{ _23624_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1bd10db00:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1bd10db66:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1bd10dbcc:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1bd10d5b1:;
			{
				return jule::Str();
			}
		}
		_match_end_1bd10d506:;
	};
}



inline _1a92722b6_Log _1ad8dc960_compilerErr(jule::Ptr<_1a959a127_Token>& _24917_token, jule::Str& _24933_fmt, jule::Slice<jule::Any> _24946_args) {
	return _1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24917_token.get()._field_Row, ._field_Column=_24917_token.get()._field_Column, ._field_Path=_24917_token.get()._field_File.get()._field_Path, ._field_Text=_1a9272706_Logf(_24933_fmt,jule::Any(_24946_args)), ._field_Line=_1a95a168e_GetRow(_24917_token.get()._field_File.ptr(), _24917_token.get()._field_Row), };
}



inline void _1ad8dcd8e_pushSuggestion(_1a92722b6_Log* _26030_log, jule::Str _26041_fmt, jule::Slice<jule::Any> _26054_args) {
	_26030_log->_field_Suggestion=_1a9272706_Logf(_26041_fmt,jule::Any(_26054_args));
}



inline jule::Str _1ad8dd136_tokstoa(jule::Slice<jule::Ptr<_1a959a127_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1bd111d78:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_Kind.len();
			}
			_iter_next_1bd111d78:;
			++it;
			goto _iter_begin_1bd111d78;
		}
		_iter_end_1bd111d78:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1bd112a49:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_Kind;
			}
			_iter_next_1bd112a49:;
			++it;
			goto _iter_begin_1bd112a49;
		}
		_iter_end_1bd112a49:;
	};
	return _26913_s;
}



inline jule::Bool _1ad8ed19b_isPub(jule::Str& _204111_ident) {
	jule::I32 _204210_r;;
	std::tie(_204210_r,std::ignore) = _1dbac7039_DecodeRuneStr(_204111_ident);
	return _1a91d0b70_IsUpper(_204210_r);
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8eda1a_buildVoidType(void) {
	return jule::new_ptr<_1ac449eb3_TypeDecl>();
}



inline jule::Ptr<_1ac449eb3_TypeDecl> _1ad8edc7e_buildPrimType(jule::Ptr<_1a959a127_Token> _2322_t) {
	return jule::new_ptr<_1ac449eb3_TypeDecl>(_1ac449eb3_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1ac44a579_IdentTypeDecl>(_1ac44a579_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _1ad8ee0c0_mapColon(jule::Slice<jule::Ptr<_1a959a127_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_1a959a127_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1bd285095:;
						{
							(_3813_rangeN)++;
							goto _iter_next_1bd28488b;
						}
					}
					else {
						_case_begin_1bd285958:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_1bd285749:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_1bd28488b;
			};
		}
	_iter_next_1bd28488b:;
	}
	_iter_end_1bd28488b:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1ac24e13b_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1bd2d6129:;
			{
				_924_ok=_1a927561b_IsWindows(_1a92aeb72_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1bd2d5c2d:;
			{
				_924_ok=_1a92758c4_IsDarwin(_1a92aeb72_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1bd2d5a0d:;
			{
				_924_ok=_1a9275b6b_IsLinux(_1a92aeb72_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1bd2d5a74:;
			{
				_924_ok=_1a9276771_IsUnix(_1a92aeb72_Os);
			}
		}
		else {
			_case_begin_1bd2d52d2:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1bd2d56de:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1ac249136_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1bd2d82a2:;
			{
				_2826_ok=_1a9275e8a_IsI386(_1a9293408_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1bd2d8082:;
			{
				_2826_ok=_1a9276232_IsAmd64(_1a9293408_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1bd2d80e8:;
			{
				_2826_ok=_1a92764c9_IsArm64(_1a9293408_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1bd2d815e:;
			{
				_2826_ok=_1a9276d8c_Is64Bit(_1a9293408_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1bd2d81c5:;
			{
				_2826_ok=_1a9276ae5_Is32Bit(_1a9293408_Arch);
			}
		}
		else {
			_case_begin_1bd2d7856:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1bd2d7c63:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1ac249268_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a91d4899_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1a91d4635_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1a91d1ae9_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1ac24e13b_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1ac249136_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1a91d1ae9_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1ac24e13b_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1ac249136_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1ac249136_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1ac24e13b_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1ac24e13b_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1ac26389d_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_1a92aeb72_Os);;
	if (_1a9276771_IsUnix(_1a92aeb72_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1ac263b01_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_1a9293408_Arch);;
	if (_1a9276d8c_Is64Bit(_1a9293408_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1a9276ae5_Is32Bit(_1a9293408_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1ac263da9_initVars(jule::Slice<jule::Str>& _5518_vars, _1ac263590_CompileInfo& _5532_info) {
	_1ac26389d_setOsVars(_5518_vars);
	_1ac263b01_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd2e4203:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd2e4401:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1bd2e4cb4:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bd2e5c2c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd2e5974:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd2e59da:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1bd2e5bc7:;
	};
}



inline jule::Slice<jule::U8> _1a944e20c_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d9e39348_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1a92c1a30_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1a92722b6_Log _1a95b1bcc_flatCompilerErr(jule::Str _4120_text) {
	return _1a92722b6_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1a95aedb7_pushPasses(jule::Ptr<_1ad0e0075_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd32d061:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1bd32da45:;
					if (it != expr.end()) {
						_1ac519abb_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1bd32da45;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1bd32e88c:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1bd32da45;
										};
									}
									_iter_next_1bd32e88c:;
									++it;
									goto _iter_begin_1bd32e88c;
								}
								_iter_end_1bd32e88c:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1bd32da45:;
						++it;
						goto _iter_begin_1bd32da45;
					}
					_iter_end_1bd32da45:;
				};
			}
			_iter_next_1bd32d061:;
			++it;
			goto _iter_begin_1bd32d061;
		}
		_iter_end_1bd32d061:;
	};
}



inline jule::Slice<jule::Str> _1a95bb4cd_getAllUniquePasses(jule::Ptr<_1ad0e0075_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1ad0dc11b_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a95aedb7_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1bd330cde:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1a95aedb7_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1bd330cde:;
			++it;
			goto _iter_begin_1bd330cde;
		}
		_iter_end_1bd330cde:;
	};
	return _12913_passes;
}



inline _1ac263590_CompileInfo _1a965b0ea_buildCompileInfo(void) {
	_1ac263590_CompileInfo _14213_info = _1ac263590_CompileInfo{._field_Prod=_1da020d7a_Production, ._field_Test=_1da020341_Test, };;
	{
		auto &_match_expr{ _1da014b3d_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd3325e8:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd332670:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1bd332571:;
	};
	{
		auto &_match_expr{ _1da01e9e4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bd330edc:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd332a49:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd332ab0:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1bd332917:;
	};
	return _14213_info;
}



inline void _1ada24206_EliminateDefines(jule::Ptr<_1ad8ad38c_IR>& _28526_ir) {
	jule::Ptr<_1ad9e3c97_ObjectDeadCode> _28613_ocd = static__1ad9e4270_new(_28526_ir);;
	_1ada23e3c_elimanate(_28613_ocd);
}



inline jule::Ptr<_1ac41195d_Directive> _1ada2458b_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1bd37510d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1bd37510d:;
			++it;
			goto _iter_begin_1bd37510d;
		}
		_iter_end_1bd37510d:;
	};
	return nullptr;
}



inline jule::Bool _1ada248cc_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1ada2458b_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1ada28529_eliminateDeadCodeOfScope(jule::Ptr<_1ad0c4994_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ad0c5bd7_Label>> _2429_labels = jule::Slice<jule::Ptr<_1ad0c5bd7_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1ada25625_scopeDeadCode> _24413_sdc = jule::new_ptr<_1ada25625_scopeDeadCode>(_1ada25625_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5bd7_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ad0c5dc4_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1ada2823d_optimizeStmts(_24413_sdc);
	};
}



inline void _1ada287b0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac512b80_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1bc833ca4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac512b80_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1bc8343ae:;
					if (it != expr.end()) {
						jule::Ptr<_1ac515831_FnIns> _25621_ins = *it;
						{
							_1ada28529_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1bc8343ae:;
						++it;
						goto _iter_begin_1bc8343ae;
					}
					_iter_end_1bc8343ae:;
				};
			}
			_iter_next_1bc833ca4:;
			++it;
			goto _iter_begin_1bc833ca4;
		}
		_iter_end_1bc833ca4:;
	};
}



inline void _1ada28a02_eliminateFunctionsScopePackage(jule::Ptr<_1ad0e0075_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bc834876:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _26317_f = *it;
			{
				_1ada287b0_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1bc834876:;
			++it;
			goto _iter_begin_1bc834876;
		}
		_iter_end_1bc834876:;
	};
}



inline void _1ada28c99_eliminateScopePackage(jule::Ptr<_1ad0e0075_Package>& _26831_pkg) {
	_1ada28a02_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1ada28ea8_EliminateScopes(jule::Ptr<_1ad8ad38c_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1ad0dc11b_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1ada28c99_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1bc836449:;
	}
	_iter_end_1bc836449:;;
	_1ada28c99_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1abe24a7b_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _1a9142ae3_HasPrefix(_39917_f,_1a91d4503_Join(jule::Slice<jule::Str>::make({_1a9293eec_PathStdlib,_39925_p})));
}



inline jule::Bool _1abe3069c_isConstantValidConditionalCase(jule::Ptr<_1ad0c4b81_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd4b8394:;
			{
				jule::Ptr<_1ac49c202_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1ac49c202_Const>();;
				return (_1ac505bea_IsBool(_40613_c.ptr()) && _1ac503852_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1bd4b81da:;
	};
	return false;
}



inline jule::Bool _1abe76d64_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd4b8cce:;
			{
				jule::Ptr<_1ac49c202_Const> _41513_c = _41223_expr.operator jule::Ptr<_1ac49c202_Const>();;
				return (_1ac505bea_IsBool(_41513_c.ptr()) && (!(_1ac503852_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac50a903_BinopExprModel>>()) {
			_case_begin_1bd4b8d45:;
			{
				jule::Ptr<_1ac50a903_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1ac50a903_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1abe76d64_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1abe76d64_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1bd4b92c9:;
	};
	return false;
}



inline jule::Bool _1abe854c1_isConstantValidMatchCase(jule::Ptr<_1ad0c6bc7_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bd4bbd26:;
		if (it != expr.end()) {
			jule::Ptr<_1ad159188_Data> &_42812_expr = *it;
			{
				if (((_1ad159a4b_IsConst(_42812_expr.ptr()) && _1ac505bea_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1ac503852_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1bd4bbd26:;
			++it;
			goto _iter_begin_1bd4bbd26;
		}
		_iter_end_1bd4bbd26:;
	};
	return false;
}



inline jule::Bool _1abdcbe40_isUnreachableConditionalCase(jule::Ptr<_1ad0c4b81_If>& _43634_i) {
	return _1abe76d64_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1abe8dc16_isUnreachableMatchCase(jule::Ptr<_1ad0c6bc7_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1bd4bda2b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad159188_Data> &_44112_expr = *it;
			{
				if ((!(_1abe76d64_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1bd4bda2b:;
			++it;
			goto _iter_begin_1bd4bda2b;
		}
		_iter_end_1bd4bda2b:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1da02a538_checkForBitShiftOpt(jule::Ptr<_1ac50a716_OperandExprModel>& _42725_l, jule::Ptr<_1ac50a716_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_1ad0c42e0_IsInt(_1ad185626_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_1ad0c42e0_IsInt(_1ad185626_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac49c202_Const>>()) {
			_case_begin_1bd50769c:;
			{
				goto _match_end_1bd508170;
			}
		}
		else {
			_case_begin_1bd5082b3:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_1bd508170:;
	};
	_42782_x=static_cast<jule::U64>(_1ac504303_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_1ac49c202_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _1ad092c09_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _1abe8ba6b_PushOptLevel(jule::I64 _3217_level) {
	_1da02a901_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c16a8dab_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c16ba692_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1c16baa6b_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1aa405e1b_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1aa408506_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1aa41859e_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1aa436138_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1ad9b41eb_detectEnabled(void) {
	_1ad930db0_exprEnabled=(((_1aa41859e_Ptr || _1c16baa6b_Math) || _1aa405e1b_Access) || _1aa436138_Cond);
	_1ad932015_scopeEnabled=((_1aa436138_Cond || _1c16ba692_Append) || _1da02a901_Copy);
}



inline void _1ada3605e_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1a92c1a30_Exit(1LL);
}



inline jule::U64 _1badb9506_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1badb9847_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1badb9bcc_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1bd584e33:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bd585087:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bd5850ed:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bd585164:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bd5851ca:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bd585241:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1bd5852a7:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1bd58531d:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bd585384:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1bd5853ea:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bd585472:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1bd584dcd:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1bad3eb0d_isCopyOptimizable(jule::Ptr<_1ad159188_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50c20c_SlicingExprModel>>()) {
			_case_begin_1bd619bdd:;
			{
				return false;
			}
		}
		_match_end_1bd61a20a:;
	};
	return true;
}



inline jule::Bool _1bad3ee93_isIterCopyOptimizable(jule::Ptr<_1ad159188_Data>& _75227_expr, jule::Ptr<_1ad112097_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_1ad186627_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _1bad4d08e_decomposeCommonEsq(jule::U8 _114123_b) {
	{
		auto &_match_expr{ _114123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bd1624c2:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bd162538:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bd16278b:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bd162802:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bd162868:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bd1628ce:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bd162956:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bd1629cd:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bd162a55:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bd162acc:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1bd16235c:;
			{
				return jule::Str();
			}
		}
		_match_end_1bd1622a2:;
	};
}



inline jule::Str _1bad4d37a_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1bad4d08e_decomposeCommonEsq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1ad0c2596_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1bad4d622_cstrBytes(jule::Slice<jule::U8> _118814_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118814_bytes.len());;
	{
		auto &expr = _118814_bytes;
		auto it = expr.begin();
		_iter_begin_1bd168165:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1bad4d37a_sbtoa(_119012_b);
			}
			_iter_next_1bd168165:;
			++it;
			goto _iter_begin_1bd168165;
		}
		_iter_end_1bd168165:;
	};
	return _118913_lit;
}



inline jule::Str _1bad4d941_cstrLit(jule::Slice<jule::U8> _119612_bytes) {
	return ((jule::Str("\"", 1) + _1bad4d622_cstrBytes(_119612_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1bad4dc4e_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1bad4dee6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1bad4e28d_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1aca2a252_FmtFloat(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_1a91d2468_Contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1bad4dee6_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1bd16c2ce:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1bd16c367:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1bd16c1ad:;
	};
	jule::Str _12249_fmt = _1ad0c26c8_FmtInt(_12169_x,10LL);;
	if (_1a9276d8c_Is64Bit(jule::Str("amd64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1bad4e28d_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1bd16e105:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1bd16dee5:;
	};
	jule::Str _12379_fmt = _1ad0c2596_FmtUint(_12319_x,10LL);;
	if (_1a9276d8c_Is64Bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1bad4e645_isForwarded(jule::Ptr<_1ad0c4994_Scope>& _124417_s) {
	jule::Any _12459_last = _124417_s.get()._field_Stmts[(_124417_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1ad159188_Data>>()) {
			_case_begin_1bd1713d2:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1ad159188_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac50e6d7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1bd171ee8:;
						{
							return true;
						}
					}
					else {
						_case_begin_1bd171e82:;
						{
							return false;
						}
					}
					_match_end_1bd171bb8:;
				};
			}
		}
		else {
			_case_begin_1bd171327:;
			{
				return true;
			}
		}
		_match_end_1bd1712c2:;
	};
}



inline jule::Bool _1bad4e90e_isBuiltinCallHasDebuginf(jule::Ptr<_1ac50b580_FnCallExprModel>& _125930_m) {
	if ((!(_1ac516bb7_IsBuiltin(_125930_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125930_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>>()) {
			_case_begin_1bd172d0c:;
			{
				jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel> _126513_csie = _125930_m.get()._field_Expr.operator jule::Ptr<_1ac50d0ba_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1bd172636:;
			{
				return false;
			}
		}
		_match_end_1bd172c74:;
	};
}



inline void _1badbea4a_iterFiles(jule::Ptr<_1ad0e0075_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1ad15442a_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1bd83bedc:;
		if (it != expr.end()) {
			jule::Ptr<_1ad15442a_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1bd83bedc:;
			++it;
			goto _iter_begin_1bd83bedc;
		}
		_iter_end_1bd83bedc:;
	};
}



inline void _1badbec9d_prepareStructure(jule::Ptr<_1ac43a6e0_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1bd83cb03:;
		if (it != expr.end()) {
			jule::Ptr<_1ac466a3a_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1bd83d31d:;
					if (it != expr.end()) {
						jule::Ptr<_1ac512b80_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1bd83d31d;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1bd83e0ee:;
								if (it != expr.end()) {
									jule::Ptr<_1ac515831_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1ac514962_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1ac511bd4_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1badc0c5a_customType>(_1badc0c5a_customType{._field_kind=static__1badc260d_asPtr(static__1badc5b0b_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1ad18522a_TypeKind>(_1ad18522a_TypeKind{._field_Kind=jule::Trait<_1ad184ceb_Kind>(jule::new_ptr<_1badc0c5a_customType>(_1badc0c5a_customType{._field_kind=static__1badc5b0b_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1bd83e0ee:;
									++it;
									goto _iter_begin_1bd83e0ee;
								}
								_iter_end_1bd83e0ee:;
							};
						}
						_iter_next_1bd83d31d:;
						++it;
						goto _iter_begin_1bd83d31d;
					}
					_iter_end_1bd83d31d:;
				};
			}
			_iter_next_1bd83cb03:;
			++it;
			goto _iter_begin_1bd83cb03;
		}
		_iter_end_1bd83cb03:;
	};
}



inline jule::Str _1badc0045_concatAllParts(jule::Slice<jule::Ptr<_1a959a127_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1bd83d120:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1bd83d120:;
			++it;
			goto _iter_begin_1bd83d120;
		}
		_iter_end_1bd83d120:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1bd842ab4:;
		if (it != expr.end()) {
			jule::Ptr<_1a959a127_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1bd842ab4:;
			++it;
			goto _iter_begin_1bd842ab4;
		}
		_iter_end_1bd842ab4:;
	};
	return _104313_s;
}



inline jule::Ptr<_1ac41195d_Directive> _1badc846b_findDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1bd601a93:;
		if (it != expr.end()) {
			jule::Ptr<_1ac41195d_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1bd601a93:;
			++it;
			goto _iter_begin_1bd601a93;
		}
		_iter_end_1bd601a93:;
	};
	return nullptr;
}



inline jule::Bool _1badc8801_hasDirective(jule::Slice<jule::Ptr<_1ac41195d_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1badc846b_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _1a92546a5_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1a9254e03_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1a925d4d3_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _1a925d4d3_HelpMap;
		auto it = expr.begin();
		_iter_begin_1bd72847d:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1bd72847d:;
			++it;
			goto _iter_begin_1bd72847d;
		}
		_iter_end_1bd72847d:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1a925d4d3_HelpMap;
		auto it = expr.begin();
		_iter_begin_1bd72b2c7:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1a9138028_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1bd72b2c7:;
			++it;
			_519_i++;
			goto _iter_begin_1bd72b2c7;
		}
		_iter_end_1bd72b2c7:;
	};
	jule::outln(_4913_s);
}



inline void _1a92567a6_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _1a9257004_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1a9257752_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1a924197d_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1bd7334aa:;
			{
				_1a9257004_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1bd73319c:;
			{
				_1a9257752_toolDistarch();
			}
		}
		else {
			_case_begin_1bd731970:;
			{
				_1a92546a5_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1bd732ed2:;
	};
}



inline void _1a9264110_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _1da014b3d_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1da01e9e4_CppStd));
}



inline void _1a925ca98_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1bd8983cd:;
			{
				({
					auto except = static__1d9e39d2c_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1a92546a5_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bd896c06:;
			{
				_1a92546a5_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1bd897e6b:;
	};
}



inline jule::Bool _1a925828b_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1bd899632:;
			{
				_1a9254e03_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1bd899698:;
			{
				_1a92567a6_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1bd89970e:;
			{
				_1a924197d_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1bd899de6:;
			{
				_1a9264110_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1bd899e5c:;
			{
				_1a925ca98_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bd899555:;
			{
				return false;
			}
		}
		_match_end_1bd899489:;
	};
	return true;
}



inline void _1a9247a61_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1da142870_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1a9247a61_showInfo();
		return;;
	};
	if (_1a925828b_processCommand(_18913_args)) {
		return;;
	};
	_1bae11916_compileCommand(_18913_args);
}



inline void _1a9261d88_enableVtp(void) {
	jule::Uintptr _199_hOut = _1db9dcee9_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_1db9e0c44_GetConsoleMode(_199_hOut,_2413_dwMode)))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_1db9e1085_SetConsoleMode(_199_hOut,_2413_dwMode);
}



inline void _1a9264bc1_init(void) {
	_1a9261d88_enableVtp();
}



inline void _1badd28d7_init(void) {
	_1da014b3d_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1dba012b5_File> _1badd4488_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1a91d49cb_Dir(_4316_path);;
	({
		auto except = static__1a91d52b2_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1a91d4d72_Create(_449_dir);
				if (!except.ok()) {
					_1ada3605e_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d9e387ba_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1ada3605e_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1bade0670_clearObjects(void) {
	({
		auto except = static__1dbb27919_Remove(_1badcd3a5_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a91d4ea4_Remove(_1badd4b4d_OutDir);
}



inline void _1badcbabd_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1a92b103b_Cmd> _7313_cmd = static__1a92b146a_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1a91d2336_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _1a92b16ce_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1bd8a4351:;
					{
						static__1ada3380e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1bd8a3b25:;
					{
						static__1ada3380e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1bd8a3d89:;
					{
						static__1ada3380e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1bd8a3e00:;
					{
						static__1ada3380e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bd8a3c68:;
					{
						static__1ada3380e_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1bd8a3bad:;
			};
			_1ada3605e_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1da014b3d_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ada3380e_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1ada3605e_Throw(jule::Str());
	};
	_1bade0670_clearObjects();
}



inline jule::Bool _1badcb53a_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1a91d1ae9_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _1a9265ae5_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1badd0c48_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1da01e9e4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bd8a8c5c:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd8a8cc3:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd8a8e27:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bd8a8b19:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_1da020d7a_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1badcde22_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1da01e9e4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bd8ab49b:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bd8ab512:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd8ab666:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bd8ab358:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_1da020d7a_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1bae04354_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1ad8ad38c_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _1da01e780_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _1da014b3d_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd8adda5:;
			{
				_1badcde22_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd8ae405:;
			{
				_1badd0c48_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1bd8ae191:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1bd8ae746:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1bd8ae746:;
			++it;
			goto _iter_begin_1bd8ae746;
		}
		_iter_end_1bd8ae746:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1bd8b0b21:;
		if (it != expr.end()) {
			jule::Ptr<_1ad0dc11b_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1badcb53a_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1bd8b0b21:;
			++it;
			goto _iter_begin_1bd8b0b21;
		}
		_iter_end_1bd8b0b21:;
	};
	if ((!(_1badd729e_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1badd729e_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1badcd3a5_getCompilePath(void) {
	return _1a91d4503_Join(jule::Slice<jule::Str>::make({_1badd4b4d_OutDir,_1badd6644_OutName}));
}



inline void _1badcd938_applyTargetIndependentOptimizations(jule::Ptr<_1ad8ad38c_IR>& _20545_ir) {
	jule::Ptr<_1ad9eddd4_Optimizer> _20713_opt = static__1ad95c86a_New(_20545_ir);;
	_1ad9ade60_Optimize(_20713_opt.ptr());
}



inline void _1baddb429_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1da014b3d_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bd8b2507:;
			{
				_1ada3605e_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bd8b332c:;
			{
				if (_1da01e780_CompilerPath.empty()) {
					_1da01e780_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bd8b3393:;
			{
				if (_1da01e780_CompilerPath.empty()) {
					_1da01e780_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bd8b32b6:;
			{
				_1ada3605e_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1da014b3d_Compiler));
			}
		}
		_match_end_1bd8b2eec:;
	};
}



inline void _1badcb13e_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1ada3605e_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1badcee9a_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1ada3605e_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1badd00cc_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1ada3605e_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1a91d2336_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1ada3605e_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1badcee9a_checkTargetOs(_25410_os);
		_1a92aeb72_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1badcb13e_checkTargetArch(_25414_arch);
		_1a9293408_Arch=_25414_arch;
	};
	_1ac91dbe5_UpdateTarget();
}



inline void _1bae110ca_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1ada3605e_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1bd8bae4a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1bd8bb49a:;
			{
				_1abe8ba6b_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1bd8bac2a:;
			{
				_1ada3605e_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1bd8babc5:;
	};
}



inline void _1bae1143d_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1da01e9e4_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bd8bb511:;
			{
				goto _match_end_1bd8bc314;
			}
		}
		else {
			_case_begin_1bd8bbe29:;
			{
				_1ada3605e_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1da01e9e4_CppStd));
			}
		}
		_match_end_1bd8bc314:;
	};
}



inline jule::Slice<jule::Str> _1bae11570_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1bae0c2e6_FlagSet> _29613_fs = static__1bae0c5d2_New();;
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1badd729e_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da01ec58_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da020033_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da014b3d_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da01e780_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da020d7a_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da02064e_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da020a6c_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1bd8be8dd_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1da01e9e4_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1da02a901_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c16a8dab_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c16ba692_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c16baa6b_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa405e1b_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa408506_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa41859e_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1bd8c851d_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1aa436138_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1bae0d3e6_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1ada3605e_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1baddb429_checkCompilerFlag();
	_1bae1143d_checkCppStdFlag();
	_1badd00cc_checkTargetFlag(_29413_target);
	_1bae110ca_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1bae116a2_setupSemaFlags(jule::I64& _33124_flags) {
	if (_1da01ec58_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ad8ad38c_IR> _1bae117d4_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1bae11570_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1bae116a2_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1ada3605e_Throw(_1a9272706_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1ada3605e_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _1a91d4767_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_1ada3605e_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1dba014a2_Status> _3549_inf = ({
		auto except = static__1a91d52b2_Of(_1a9293eec_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ada3605e_Throw(_1a9272706_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1dba014a2_Status>();});
	});;
	if ((!(_1d9e3de63_IsDir(_3549_inf.ptr())))) {
		_1ada3605e_Throw(_1a9272706_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ad8ad38c_IR> _36214_ir;;
	jule::Slice<_1a92722b6_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1ad88c547_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1ada3605e_Throw(_1a9272706_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1ada355e1_PrintLogs(_36218_logs);
		_1ada3605e_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1bae11916_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_1da020341_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1ad8ad38c_IR> _38313_ir = _1bae117d4_buildIr(_37724_args);;
	;
	if ((!(_1da020341_Test))) {
		jule::Ptr<_1ac512b80_Fn> _38817_main = _1ad0e1829_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1ada3605e_Throw(_1a9272706_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1badcd938_applyTargetIndependentOptimizations(_38313_ir);
	_1a96559c9_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1bae04354_genCompileCmd(_1badcd3a5_getCompilePath(),_38313_ir);
	jule::Ptr<_1badba21b_ObjectCoder> _40113_oc = static__1bad9d243_New(_38313_ir,_1badb9d42_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_1da020341_Test) {
		jule::Ptr<_1bad51427_TestCoder> _40617_tc = static__1bad5189a_New(_40113_oc);;
		_1bad52acc_Serialize(_40617_tc);
	} else {
		_1badbe6d7_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1badcd3a5_getCompilePath();;
	jule::Ptr<_1dba012b5_File> _41313_file = _1badd4488_openOutput(_4129_path);;
	({
		auto except = _1dbb27d26_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ada3605e_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1d9e3bdd9_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_1da020033_Transpilation))) {
		_1badcbabd_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a9283ea9_init();
	_1ac92b2a7_init();
	_1a9264bc1_init();
	_1badd28d7_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}