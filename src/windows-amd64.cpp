// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 17/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <fcntl.h>
#include <io.h>
#include <windows.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _21c84dea0_acceptRange;
struct _21c8a17d8_LittleEndian;
struct _21c8bb506_u128;
struct _1ab2ae565_group;
struct _1ab30a88b_group;
struct _1ab2ac266__Map;
struct _1ab30879b__Map;
struct _1ab2b899d_mapIterator;
struct _1ab312ce4_mapIterator;
struct _21ca86171_Builder;
struct _2053644e4_foldPair;
struct _2053649de_CaseRange;
struct _205364e95_Range16;
struct _2053654c3_Range32;
struct _205365946_RangeTable;
struct _205373cc8_lazyBuff;
struct _21cc7d445_cmdAttrs;
struct _21cc83307_File;
struct _21cc858ae_Stat;
struct _21ca95427_Log;
struct _1d979309d_floatInfo;
struct _1d9793b81_decimalSlice;
struct _1d97a5b1b_leftCheat;
struct _1d97a6633_decimal;
struct _2053aa826_AnsiEscape;
struct _1d97ac24e_Logger;
struct _1a81881cd_Token;
struct _1a818dc83_Fileset;
struct _1a81910a4_kindPair;
struct _1a8197044_lex;
struct _1a819bc91_AST;
struct _1a819cbe8_Node;
struct _1a819d116_Directive;
struct _1a819dbe9_TypeDecl;
struct _1a819e304_IdentTypeDecl;
struct _1a819e5bd_SubIdentTypeDecl;
struct _1a819e997_NamespaceTypeDecl;
struct _1a819ec94_SptrTypeDecl;
struct _1a81a0129_SlcTypeDecl;
struct _1a81a0426_TupleTypeDecl;
struct _1a81a0723_PtrTypeDecl;
struct _1a81a0eb5_ArrTypeDecl;
struct _1a81a1713_MapTypeDecl;
struct _1a81a1adc_RetTypeDecl;
struct _1a81a302d_Expr;
struct _1a81a32e7_RangeExpr;
struct _1a81a3902_UseExpr;
struct _1a81a3b22_TupleExpr;
struct _1a81a3eb8_LitExpr;
struct _1a81a4392_UnsafeExpr;
struct _1a81a4848_IdentExpr;
struct _1a81a50da_UnaryExpr;
struct _1a81a54b4_VariadicExpr;
struct _1a81a588d_CastExpr;
struct _1a81a5c67_NamespaceExpr;
struct _1a81a6141_SubIdentExpr;
struct _1a81a65e7_BinaryExpr;
struct _1a81a6c57_FnCallExpr;
struct _1a81a774c_FieldExprPair;
struct _1a81a8077_StructLit;
struct _1a81a852d_BraceLit;
struct _1a81a8d58_KeyValPair;
struct _1a81a9584_SliceExpr;
struct _1a81a9ee1_IndexingExpr;
struct _1a81aa651_SlicingExpr;
struct _1a81aa94d_Constraint;
struct _1a81aae04_GenericDecl;
struct _1a81ab2cd_LabelSt;
struct _1a81ab6a7_GotoSt;
struct _1a81ab9a4_FallSt;
struct _1a81ac114_AssignLeft;
struct _1a81ac697_AssignSt;
struct _1a81ad687_Stmt;
struct _1a81adce7_ScopeTree;
struct _1a81ae534_ParamDecl;
struct _1a81b0986_FnDecl;
struct _1a81b1b41_VarDecl;
struct _1a81b201a_RetSt;
struct _1a81b278a_Iter;
struct _1a81b30b5_WhileKind;
struct _1a81b39bc_RangeKind;
struct _1a81b3d96_BreakSt;
struct _1a81b4270_ContSt;
struct _1a81b4726_If;
struct _1a81b4b00_Else;
struct _1a81b50a6_Conditional;
struct _1a81b57e3_TypeAliasDecl;
struct _1a81b5c99_Case;
struct _1a81b65b3_MatchCase;
struct _1a81b6b46_UseDecl;
struct _1a81b70ec_EnumItemDecl;
struct _1a81b7bad_EnumDecl;
struct _1a81b84d8_TypeEnumItemDecl;
struct _1a81b8b48_TypeEnumDecl;
struct _1a81b8e12_FieldDecl;
struct _1a81b9808_StructDecl;
struct _1a81ba045_TraitDecl;
struct _1a81ba6a5_Impl;
struct _1a82273d2_Const;
struct _1a81bb6d9_Field;
struct _1a81bd6ec_Operators;
struct _1a81be610_Struct;
struct _1a81c18ba_FieldIns;
struct _1a81c246a_StructIns;
struct _1a8289e7d_OperandExprModel;
struct _1a828a478_BinaryExprModel;
struct _1a828a852_UnaryExprModel;
struct _1a828ad80_StructArgExprModel;
struct _1a828b226_StructLitExprModel;
struct _1a828b523_AllocStructLitExprModel;
struct _1a828baa6_CastingExprModel;
struct _1a828c458_FnCallExprModel;
struct _1a828c832_SliceExprModel;
struct _1a828ccd8_IndexingExprModel;
struct _1a828d28e_AnonFnExprModel;
struct _1a828d668_KeyValPairExprModel;
struct _1a828da42_MapExprModel;
struct _1a828e0c5_SlicingExprModel;
struct _1a828e658_TraitSubIdentExprModel;
struct _1a828eee9_StructSubIdentExprModel;
struct _1a8290390_StructStaticIdentExprModel;
struct _1a8290769_ArrayExprModel;
struct _1a8290a66_TupleExprModel;
struct _1a8290d63_BuiltinPrintCallExprModel;
struct _1a8291160_BuiltinPrintlnCallExprModel;
struct _1a8291539_BuiltinNewCallExprModel;
struct _1a8291913_BuiltinPanicCallExprModel;
struct _1a8291db9_BuiltinMakeCallExprModel;
struct _1a8292293_BuiltinAppendCallExprModel;
struct _1a8292590_BuiltinLenCallExprModel;
struct _1a829288c_BuiltinCapCallExprModel;
struct _1a8292c66_BuiltinDeleteCallExprModel;
struct _1a8293140_BuiltinCopyCallExprModel;
struct _1a8293519_BuiltinErrorCallExprModel;
struct _1a8293816_SizeofExprModel;
struct _1a8293eba_AlignofExprModel;
struct _1a82941a7_RuneExprModel;
struct _1a829452b_BackendEmitExprModel;
struct _1a8294828_FreeExprModel;
struct _1a8295609_RetType;
struct _1a8295bc0_Param;
struct _1a8297694_Fn;
struct _1a82995ec_ParamIns;
struct _1a829a752_FnIns;
struct _1a829d997_SymTab;
struct _1a82a2da8_Trait;
struct _1a82a4a03_EnumItem;
struct _1a82a555e_Enum;
struct _1a82a6692_TypeEnumItem;
struct _1a82a6c69_TypeEnum;
struct _1a8327a76_comptimeRange;
struct _1a83285d2_comptimeStructField;
struct _1a8329d75_comptimeStructFields;
struct _1a832b805_comptimeStatic;
struct _1a832d0a9_comptimeStatics;
struct _1a832ea28_comptimeEnumField;
struct _1a8330d37_comptimeEnumFields;
struct _1a833283e_comptimeParam;
struct _1a8334698_comptimeParams;
struct _1a8336007_comptimeTypeInfos;
struct _1a8337976_comptimeTypeInfo;
struct _1a833da7b_comptimeValue;
struct _1a83417d7_comptimeFiles;
struct _1a8343256_comptimeFile;
struct _1a8344d7e_comptimeDecls;
struct _1a834716c_comptimeDecl;
struct _1a834da58_constraintChecker;
struct _1a8350d57_Impl;
struct _1a8355466_Scope;
struct _1a8355884_If;
struct _1a8355b81_Else;
struct _1a835609e_Conditional;
struct _1a835639b_InfIter;
struct _1a8356852_WhileIter;
struct _1a835729d_RangeIter;
struct _1a8357633_ContSt;
struct _1a8357a0c_BreakSt;
struct _1a8357eb3_Label;
struct _1a8358623_GotoSt;
struct _1a83589ec_Postfix;
struct _1a8358ea3_Assign;
struct _1a8359459_MultiAssign;
struct _1a8359b96_Match;
struct _1a835a6be_Case;
struct _1a835adb7_FallSt;
struct _1a835b25d_RetSt;
struct _1a835b714_scopeLabel;
struct _1a835badd_result;
struct _1a835cacd_scopeChecker;
struct _1a83767b7_directiveChecker;
struct _1a83790c2_ReferenceStack;
struct _1a837a623_Pass;
struct _1a83800c8_symBuilder;
struct _1a838b14a_ImportInfo;
struct _1a838d8bc_Package;
struct _1a83a7870_commonSemaMeta;
struct _1a83a8497_sema;
struct _1a83c86c6_missingRetChecker;
struct _1a83cc1ad_Var;
struct _1a83cd038_FuncPattern;
struct _1a84ddb71_typeCompatibilityChecker;
struct _1a84e09ec_assignTypeChecker;
struct _1a84e23c2_dynamicTypeAnnotation;
struct _1a84e722e_fnCallArgChecker;
struct _1a84ea166_structLitChecker;
struct _1a84ebe48_rangeChecker;
struct _1a84ee786_retTypeChecker;
struct _1a85028cc_Data;
struct _1a8503a54_Value;
struct _1a8503e2d_target;
struct _1a850489b_eval;
struct _1a8523b1d_unaryEval;
struct _1a8525aa9_binaryEval;
struct _1a8533e91_InsGeneric;
struct _1a8534a85_TypeAlias;
struct _1a8535877_Type;
struct _1a853d088_TypeSym;
struct _1a853d990_Prim;
struct _1a85424bb_Sptr;
struct _1a8542e8e_Slc;
struct _1a8543a83_Tuple;
struct _1a8544633_Map;
struct _1a85452b0_Arr;
struct _1a8545c83_Ptr;
struct _1a8546c84_referencer;
struct _1a8547c74_typeChecker;
struct _1a8550d37_identTypeLookup;
struct _1a8d4ad07_FileInfo;
struct _1a8d9aa8d_stmt;
struct _1a8d9b42e_scopeParser;
struct _1a8da8d54_exprBuilder;
struct _1a8db6449_assignInfo;
struct _1a8db9639_parser;
struct _1a8dca7e3_typeBuilder;
struct _1a840ea09_CompileInfo;
struct _1a8411247_directiveEval;
struct _1a8dce8e6_Importer;
struct _1a8dd5b83_ExprInspector;
struct _1a8ddd064_MetaStrBuilder;
struct _1a8dddc35_MetaRuntime;
struct _1a8dde708_MetaMathCmplx;
struct _1a8dded13_Meta;
struct _1a8de13a8_OrderedDefines;
struct _1a512adcc_liveTable;
struct _1a512b1da_ObjectDeadCode;
struct _1a5130310_scopeDeadCode;
struct _1a5134897_exprDeadCode;
struct _1a43ddb63_anyData;
struct _1a43e10a5_ExceptionalForwardingExprModel;
struct _1a43e1292_FnCallIgnoreExceptionalExprModel;
struct _1a43e1638_SwapExprModel;
struct _1a43e1a56_EmptyCompareExprModel;
struct _1a43e1d53_RefExprModel;
struct _1a43e2309_StrCompExprModel;
struct _1a43e288c_MutSlicingExprModel;
struct _1a43e2c22_UnsafeBinaryExprModel;
struct _1a43e301e_UnsafeIndexingExprModel;
struct _1a43e33e8_PushToSliceExprModel;
struct _1a43e37c2_AppendToSliceExprModel;
struct _1a43e3b9b_StrRuneIter;
struct _1a43e3e98_UnsafeDerefExprModel;
struct _1a43e4295_UnsafeCastingExprModel;
struct _1a43e4dbc_nilVar;
struct _1a43e520d_nils;
struct _1a43e7d7b_scopeOptimizer;
struct _1a43eea86_exprOptimizer;
struct _1a4405905_dynamicVar;
struct _1a4405c46_dynamic;
struct _1a4408b28_data;
struct _1a440a0be_boundaryVar;
struct _1a440a410_boundary;
struct _1a51359b9_Optimizer;
struct _1a541369d_AbsTime;
struct _1a5413d74_Time;
struct _1a5139ade_scopeCoder;
struct _1a51460d4_exprCoder;
struct _1a5158668_TestCoder;
struct _1a90de5d9_identCoder;
struct _1a541d9a5_SerializationInfo;
struct _1a541ddc3_traitCast;
struct _1a541e29c_anonHash;
struct _1a541e6ba_traitHash;
struct _1a541e9b7_metadata;
struct _1a542125a_ObjectCoder;
struct _1a5430588_customType;
struct _1a54311b0_typeCoder;
struct _1a5438c9a_resultCoder;
struct _1aba54788_Flag;
struct _1aba5811b_Flag;
struct _1aba5b828_Flag;
struct _1aba60079_Flag;
struct _1aba63786_Flag;
struct _1a90e57aa_FlagSet;
struct _1a90e826e_argParser;
struct _21cc3c019_Cmd;
struct _1a4408551_dataCheckpoint;
struct _21cc3b47a_Dir;
struct _1a8dd23cc_IR;
struct _21c84dea0_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _21c84dea0_acceptRange_eq(_21c84dea0_acceptRange *_self_, _21c84dea0_acceptRange _other_);


struct _21c8a17d8_LittleEndian {
};
inline jule::Bool _21c8a17d8_LittleEndian_eq(_21c8a17d8_LittleEndian *_self_, _21c8a17d8_LittleEndian _other_);


struct _21c8bb506_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _21c8bb506_u128_eq(_21c8bb506_u128 *_self_, _21c8bb506_u128 _other_);


struct _1ab2ae565_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1ab2ae565_group_eq(_1ab2ae565_group *_self_, _1ab2ae565_group _other_);

struct _1ab30a88b_group {
	jule::Array<jule::Ptr<_1a829a752_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1ab2ac266__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ab2ae565_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};struct _1ab30879b__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ab30a88b_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
};
struct _1ab2b899d_mapIterator {
	jule::Ptr<_1ab2ac266__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ab2ae565_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};struct _1ab312ce4_mapIterator {
	jule::Ptr<_1ab30879b__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1ab30a88b_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
};
struct _21ca86171_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _2053644e4_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _2053644e4_foldPair_eq(_2053644e4_foldPair *_self_, _2053644e4_foldPair _other_);


struct _2053649de_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _2053649de_CaseRange_eq(_2053649de_CaseRange *_self_, _2053649de_CaseRange _other_);


struct _205364e95_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _205364e95_Range16_eq(_205364e95_Range16 *_self_, _205364e95_Range16 _other_);


struct _2053654c3_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _2053654c3_Range32_eq(_2053654c3_Range32 *_self_, _2053654c3_Range32 _other_);


struct _205365946_RangeTable {
	jule::Slice<_205364e95_Range16> _field_R16;
	jule::Slice<_2053654c3_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
};
struct _205373cc8_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
};
struct _21cc7d445_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
};
inline jule::Bool _21cc7d445_cmdAttrs_eq(_21cc7d445_cmdAttrs *_self_, _21cc7d445_cmdAttrs _other_);


struct _21cc83307_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _21cc83307_File_eq(_21cc83307_File *_self_, _21cc83307_File _other_);


struct _21cc858ae_Stat {
	jule::I64 _field_mode;
	jule::U64 _field_size;
};
inline jule::Bool _21cc858ae_Stat_eq(_21cc858ae_Stat *_self_, _21cc858ae_Stat _other_);


struct _21ca95427_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _21ca95427_Log_eq(_21ca95427_Log *_self_, _21ca95427_Log _other_);


struct _1d979309d_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
};
inline jule::Bool _1d979309d_floatInfo_eq(_1d979309d_floatInfo *_self_, _1d979309d_floatInfo _other_);


struct _1d9793b81_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
};
struct _1d97a5b1b_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1d97a5b1b_leftCheat_eq(_1d97a5b1b_leftCheat *_self_, _1d97a5b1b_leftCheat _other_);


struct _1d97a6633_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1d97a6633_decimal_eq(_1d97a6633_decimal *_self_, _1d97a6633_decimal _other_);


struct _2053aa826_AnsiEscape {
};
inline jule::Bool _2053aa826_AnsiEscape_eq(_2053aa826_AnsiEscape *_self_, _2053aa826_AnsiEscape _other_);


struct _1d97ac24e_Logger {
};
inline jule::Bool _1d97ac24e_Logger_eq(_1d97ac24e_Logger *_self_, _1d97ac24e_Logger _other_);


struct _1a81881cd_Token {
	jule::Ptr<_1a818dc83_Fileset> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
};
inline jule::Bool _1a81881cd_Token_eq(_1a81881cd_Token *_self_, _1a81881cd_Token _other_);


struct _1a818dc83_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_Tokens;
};
struct _1a81910a4_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
};
inline jule::Bool _1a81910a4_kindPair_eq(_1a81910a4_kindPair *_self_, _1a81910a4_kindPair _other_);


struct _1a8197044_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_tokens;
	jule::Ptr<_1a818dc83_Fileset> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_21ca95427_Log> _field_errors;
};
struct _1a819bc91_AST {
	jule::Ptr<_1a818dc83_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a81b6b46_UseDecl>> _field_UseDecls;
	jule::Slice<_1a819cbe8_Node> _field_Nodes;
};
struct _1a819cbe8_Node {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1a819cbe8_Node_eq(_1a819cbe8_Node *_self_, _1a819cbe8_Node _other_);


struct _1a819d116_Directive {
	jule::Ptr<_1a81881cd_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_Args;
};
struct _1a819dbe9_TypeDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1a819dbe9_TypeDecl_eq(_1a819dbe9_TypeDecl *_self_, _1a819dbe9_TypeDecl _other_);


struct _1a819e304_IdentTypeDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _field_Generics;
};
struct _1a819e5bd_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>> _field_Idents;
};
struct _1a819e997_NamespaceTypeDecl {
	jule::Ptr<_1a81881cd_Token> _field_Namespace;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
};
inline jule::Bool _1a819e997_NamespaceTypeDecl_eq(_1a819e997_NamespaceTypeDecl *_self_, _1a819e997_NamespaceTypeDecl _other_);


struct _1a819ec94_SptrTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Elem;
};
inline jule::Bool _1a819ec94_SptrTypeDecl_eq(_1a819ec94_SptrTypeDecl *_self_, _1a819ec94_SptrTypeDecl _other_);


struct _1a81a0129_SlcTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Elem;
};
inline jule::Bool _1a81a0129_SlcTypeDecl_eq(_1a81a0129_SlcTypeDecl *_self_, _1a81a0129_SlcTypeDecl _other_);


struct _1a81a0426_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _field_Types;
};
struct _1a81a0723_PtrTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Elem;
};
inline jule::Bool _1a81a0723_PtrTypeDecl_eq(_1a81a0723_PtrTypeDecl *_self_, _1a81a0723_PtrTypeDecl _other_);


struct _1a81a0eb5_ArrTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Elem;
	jule::Ptr<_1a81a302d_Expr> _field_Size;
};
inline jule::Bool _1a81a0eb5_ArrTypeDecl_eq(_1a81a0eb5_ArrTypeDecl *_self_, _1a81a0eb5_ArrTypeDecl _other_);


struct _1a81a1713_MapTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Key;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Val;
};
inline jule::Bool _1a81a1713_MapTypeDecl_eq(_1a81a1713_MapTypeDecl *_self_, _1a81a1713_MapTypeDecl _other_);


struct _1a81a1adc_RetTypeDecl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_Idents;
};
struct _1a81a302d_Expr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1a81a302d_Expr_eq(_1a81a302d_Expr *_self_, _1a81a302d_Expr _other_);


struct _1a81a32e7_RangeExpr {
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a32e7_RangeExpr_eq(_1a81a32e7_RangeExpr *_self_, _1a81a32e7_RangeExpr _other_);


struct _1a81a3902_UseExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a3902_UseExpr_eq(_1a81a3902_UseExpr *_self_, _1a81a3902_UseExpr _other_);


struct _1a81a3b22_TupleExpr {
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Expr;
};
struct _1a81a3eb8_LitExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1a81a3eb8_LitExpr_eq(_1a81a3eb8_LitExpr *_self_, _1a81a3eb8_LitExpr _other_);


struct _1a81a4392_UnsafeExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a4392_UnsafeExpr_eq(_1a81a4392_UnsafeExpr *_self_, _1a81a4392_UnsafeExpr _other_);


struct _1a81a4848_IdentExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a81a4848_IdentExpr_eq(_1a81a4848_IdentExpr *_self_, _1a81a4848_IdentExpr _other_);


struct _1a81a50da_UnaryExpr {
	jule::Ptr<_1a81881cd_Token> _field_Op;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a50da_UnaryExpr_eq(_1a81a50da_UnaryExpr *_self_, _1a81a50da_UnaryExpr _other_);


struct _1a81a54b4_VariadicExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a54b4_VariadicExpr_eq(_1a81a54b4_VariadicExpr *_self_, _1a81a54b4_VariadicExpr _other_);


struct _1a81a588d_CastExpr {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a588d_CastExpr_eq(_1a81a588d_CastExpr *_self_, _1a81a588d_CastExpr _other_);


struct _1a81a5c67_NamespaceExpr {
	jule::Ptr<_1a81881cd_Token> _field_Namespace;
	jule::Ptr<_1a81881cd_Token> _field_Ident;
};
inline jule::Bool _1a81a5c67_NamespaceExpr_eq(_1a81a5c67_NamespaceExpr *_self_, _1a81a5c67_NamespaceExpr _other_);


struct _1a81a6141_SubIdentExpr {
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a81881cd_Token> _field_Ident;
};
inline jule::Bool _1a81a6141_SubIdentExpr_eq(_1a81a6141_SubIdentExpr *_self_, _1a81a6141_SubIdentExpr _other_);


struct _1a81a65e7_BinaryExpr {
	jule::Ptr<_1a81a302d_Expr> _field_Left;
	jule::Ptr<_1a81a302d_Expr> _field_Right;
	jule::Ptr<_1a81881cd_Token> _field_Op;
};
inline jule::Bool _1a81a65e7_BinaryExpr_eq(_1a81a65e7_BinaryExpr *_self_, _1a81a65e7_BinaryExpr _other_);


struct _1a81a6c57_FnCallExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Args;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1a81a774c_FieldExprPair {
	jule::Ptr<_1a81881cd_Token> _field_Field;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81a774c_FieldExprPair_eq(_1a81a774c_FieldExprPair *_self_, _1a81a774c_FieldExprPair _other_);


struct _1a81a8077_StructLit {
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Exprs;
};
struct _1a81a852d_BraceLit {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Exprs;
};
struct _1a81a8d58_KeyValPair {
	jule::Ptr<_1a81a302d_Expr> _field_Key;
	jule::Ptr<_1a81a302d_Expr> _field_Val;
	jule::Ptr<_1a81881cd_Token> _field_Colon;
};
inline jule::Bool _1a81a8d58_KeyValPair_eq(_1a81a8d58_KeyValPair *_self_, _1a81a8d58_KeyValPair _other_);


struct _1a81a9584_SliceExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Exprs;
};
struct _1a81a9ee1_IndexingExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a81a302d_Expr> _field_Index;
};
inline jule::Bool _1a81a9ee1_IndexingExpr_eq(_1a81a9ee1_IndexingExpr *_self_, _1a81a9ee1_IndexingExpr _other_);


struct _1a81aa651_SlicingExpr {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a81a302d_Expr> _field_Start;
	jule::Ptr<_1a81a302d_Expr> _field_To;
};
inline jule::Bool _1a81aa651_SlicingExpr_eq(_1a81aa651_SlicingExpr *_self_, _1a81aa651_SlicingExpr _other_);


struct _1a81aa94d_Constraint {
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _field_Mask;
};
struct _1a81aae04_GenericDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a81aa94d_Constraint> _field_Constraint;
};
inline jule::Bool _1a81aae04_GenericDecl_eq(_1a81aae04_GenericDecl *_self_, _1a81aae04_GenericDecl _other_);


struct _1a81ab2cd_LabelSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1a81ab2cd_LabelSt_eq(_1a81ab2cd_LabelSt *_self_, _1a81ab2cd_LabelSt _other_);


struct _1a81ab6a7_GotoSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_Label;
};
inline jule::Bool _1a81ab6a7_GotoSt_eq(_1a81ab6a7_GotoSt *_self_, _1a81ab6a7_GotoSt _other_);


struct _1a81ab9a4_FallSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
};
inline jule::Bool _1a81ab9a4_FallSt_eq(_1a81ab9a4_FallSt *_self_, _1a81ab9a4_FallSt _other_);


struct _1a81ac114_AssignLeft {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81ac114_AssignLeft_eq(_1a81ac114_AssignLeft *_self_, _1a81ac114_AssignLeft _other_);


struct _1a81ac697_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1a81881cd_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> _field_Left;
	jule::Ptr<_1a81a302d_Expr> _field_Right;
};
struct _1a81ad687_Stmt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1a81ad687_Stmt_eq(_1a81ad687_Stmt *_self_, _1a81ad687_Stmt _other_);


struct _1a81adce7_ScopeTree {
	jule::Ptr<_1a81adce7_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1a81ad687_Stmt> _field_Stmts;
	jule::Ptr<_1a81881cd_Token> _field_End;
};
struct _1a81ae534_ParamDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1a81ae534_ParamDecl_eq(_1a81ae534_ParamDecl *_self_, _1a81ae534_ParamDecl _other_);


struct _1a81b0986_FnDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_Generics;
	jule::Ptr<_1a81a1adc_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> _field_Params;
};
struct _1a81b1b41_VarDecl {
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
struct _1a81b201a_RetSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81b201a_RetSt_eq(_1a81b201a_RetSt *_self_, _1a81b201a_RetSt _other_);


struct _1a81b278a_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
};
inline jule::Bool _1a81b278a_Iter_eq(_1a81b278a_Iter *_self_, _1a81b278a_Iter _other_);


struct _1a81b30b5_WhileKind {
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1a81881cd_Token> _field_NextToken;
};
inline jule::Bool _1a81b30b5_WhileKind_eq(_1a81b30b5_WhileKind *_self_, _1a81b30b5_WhileKind _other_);


struct _1a81b39bc_RangeKind {
	jule::Ptr<_1a81881cd_Token> _field_InToken;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a81b1b41_VarDecl> _field_KeyA;
	jule::Ptr<_1a81b1b41_VarDecl> _field_KeyB;
};
inline jule::Bool _1a81b39bc_RangeKind_eq(_1a81b39bc_RangeKind *_self_, _1a81b39bc_RangeKind _other_);


struct _1a81b3d96_BreakSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_Label;
};
inline jule::Bool _1a81b3d96_BreakSt_eq(_1a81b3d96_BreakSt *_self_, _1a81b3d96_BreakSt _other_);


struct _1a81b4270_ContSt {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_Label;
};
inline jule::Bool _1a81b4270_ContSt_eq(_1a81b4270_ContSt *_self_, _1a81b4270_ContSt _other_);


struct _1a81b4726_If {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
};
inline jule::Bool _1a81b4726_If_eq(_1a81b4726_If *_self_, _1a81b4726_If _other_);


struct _1a81b4b00_Else {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
};
inline jule::Bool _1a81b4b00_Else_eq(_1a81b4b00_Else *_self_, _1a81b4b00_Else _other_);


struct _1a81b50a6_Conditional {
	jule::Ptr<_1a81b4726_If> _field_Head;
	jule::Slice<jule::Ptr<_1a81b4726_If>> _field_Tail;
	jule::Ptr<_1a81b4b00_Else> _field_Default;
};
struct _1a81b57e3_TypeAliasDecl {
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
};
inline jule::Bool _1a81b57e3_TypeAliasDecl_eq(_1a81b57e3_TypeAliasDecl *_self_, _1a81b57e3_TypeAliasDecl _other_);


struct _1a81b5c99_Case {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_Exprs;
};
struct _1a81b65b3_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a81b5c99_Case>> _field_Cases;
	jule::Ptr<_1a81b4b00_Else> _field_Default;
};
struct _1a81b6b46_UseDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_Path;
	jule::Ptr<_1a81881cd_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1a81b6b46_UseDecl_eq(_1a81b6b46_UseDecl *_self_, _1a81b6b46_UseDecl _other_);


struct _1a81b70ec_EnumItemDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
};
inline jule::Bool _1a81b70ec_EnumItemDecl_eq(_1a81b70ec_EnumItemDecl *_self_, _1a81b70ec_EnumItemDecl _other_);


struct _1a81b7bad_EnumDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a81881cd_Token> _field_End;
};
struct _1a81b84d8_TypeEnumItemDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
};
inline jule::Bool _1a81b84d8_TypeEnumItemDecl_eq(_1a81b84d8_TypeEnumItemDecl *_self_, _1a81b84d8_TypeEnumItemDecl _other_);


struct _1a81b8b48_TypeEnumDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a81881cd_Token> _field_End;
};
struct _1a81b8e12_FieldDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Kind;
	jule::Ptr<_1a81a302d_Expr> _field_Default;
};
inline jule::Bool _1a81b8e12_FieldDecl_eq(_1a81b8e12_FieldDecl *_self_, _1a81b8e12_FieldDecl _other_);


struct _1a81b9808_StructDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_Generics;
};
struct _1a81ba045_TraitDecl {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a81b0986_FnDecl>> _field_Methods;
};
struct _1a81ba6a5_Impl {
	jule::Ptr<_1a81881cd_Token> _field_End;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Base;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a81b0986_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _field_Statics;
};
inline jule::Bool _1a82846c5_Eq(_1a82273d2_Const* _self_, _1a82273d2_Const _25814_x);
inline jule::Bool _1a8284a16_Lt(_1a82273d2_Const* _self_, _1a82273d2_Const _28514_x);
inline jule::Bool _1a8284d57_LtEq(_1a82273d2_Const* _self_, _1a82273d2_Const _30816_x);
inline jule::Bool _1a8285198_Gt(_1a82273d2_Const* _self_, _1a82273d2_Const _33114_x);
inline jule::Bool _1a82854d9_GtEq(_1a82273d2_Const* _self_, _1a82273d2_Const _35416_x);
struct _1a82273d2_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _1a81bb6d9_Field {
	jule::Ptr<_1a81be610_Struct> _field_Owner;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Ptr<_1a81a302d_Expr> _field_Default;
};
inline jule::Bool _1a81bb6d9_Field_eq(_1a81bb6d9_Field *_self_, _1a81bb6d9_Field _other_);


struct _1a81bd6ec_Operators {
	jule::Ptr<_1a829a752_FnIns> _field_Eq;
	jule::Ptr<_1a829a752_FnIns> _field_Gt;
	jule::Ptr<_1a829a752_FnIns> _field_GtEq;
	jule::Ptr<_1a829a752_FnIns> _field_Lt;
	jule::Ptr<_1a829a752_FnIns> _field_LtEq;
	jule::Ptr<_1a829a752_FnIns> _field_Shl;
	jule::Ptr<_1a829a752_FnIns> _field_Shr;
	jule::Ptr<_1a829a752_FnIns> _field_Add;
	jule::Ptr<_1a829a752_FnIns> _field_Sub;
	jule::Ptr<_1a829a752_FnIns> _field_Div;
	jule::Ptr<_1a829a752_FnIns> _field_Mul;
	jule::Ptr<_1a829a752_FnIns> _field_Mod;
	jule::Ptr<_1a829a752_FnIns> _field_BitAnd;
	jule::Ptr<_1a829a752_FnIns> _field_BitOr;
	jule::Ptr<_1a829a752_FnIns> _field_BitXor;
	jule::Ptr<_1a829a752_FnIns> _field_Neg;
	jule::Ptr<_1a829a752_FnIns> _field_Pos;
	jule::Ptr<_1a829a752_FnIns> _field_BitNot;
	jule::Ptr<_1a829a752_FnIns> _field_AddAssign;
	jule::Ptr<_1a829a752_FnIns> _field_SubAssign;
	jule::Ptr<_1a829a752_FnIns> _field_DivAssign;
	jule::Ptr<_1a829a752_FnIns> _field_MulAssign;
	jule::Ptr<_1a829a752_FnIns> _field_ModAssign;
	jule::Ptr<_1a829a752_FnIns> _field_ShlAssign;
	jule::Ptr<_1a829a752_FnIns> _field_ShrAssign;
	jule::Ptr<_1a829a752_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a829a752_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a829a752_FnIns> _field_BitXorAssign;
};
inline jule::Bool _1a81bd6ec_Operators_eq(_1a81bd6ec_Operators *_self_, _1a81bd6ec_Operators _other_);


struct _1a81be610_Struct {
	jule::Ptr<_1a83a8497_sema> _field_sema;
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _field_Uses;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a81bb6d9_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a82a2da8_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a81c246a_StructIns>> _field_Instances;
};
struct _1a81c18ba_FieldIns {
	jule::Ptr<_1a81c246a_StructIns> _field_Owner;
	jule::Ptr<_1a81bb6d9_Field> _field_Decl;
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Ptr<_1a85028cc_Data> _field_Default;
};
inline jule::Bool _1a81c18ba_FieldIns_eq(_1a81c18ba_FieldIns *_self_, _1a81c18ba_FieldIns _other_);


struct _1a81c246a_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1a81be610_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a81c18ba_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1a83790c2_ReferenceStack> _field_Refers;
	_1a81bd6ec_Operators _field_Operators;
};
struct _1a8289e7d_OperandExprModel {
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1a8289e7d_OperandExprModel_eq(_1a8289e7d_OperandExprModel *_self_, _1a8289e7d_OperandExprModel _other_);


struct _1a828a478_BinaryExprModel {
	jule::Ptr<_1a8289e7d_OperandExprModel> _field_Left;
	jule::Ptr<_1a8289e7d_OperandExprModel> _field_Right;
	jule::Ptr<_1a81881cd_Token> _field_Op;
};
inline jule::Bool _1a828a478_BinaryExprModel_eq(_1a828a478_BinaryExprModel *_self_, _1a828a478_BinaryExprModel _other_);


struct _1a828a852_UnaryExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a81881cd_Token> _field_Op;
};
inline jule::Bool _1a828a852_UnaryExprModel_eq(_1a828a852_UnaryExprModel *_self_, _1a828a852_UnaryExprModel _other_);


struct _1a828ad80_StructArgExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a81c18ba_FieldIns> _field_Field;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
};
inline jule::Bool _1a828ad80_StructArgExprModel_eq(_1a828ad80_StructArgExprModel *_self_, _1a828ad80_StructArgExprModel _other_);


struct _1a828b226_StructLitExprModel {
	jule::Ptr<_1a81c246a_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a828ad80_StructArgExprModel>> _field_Args;
};
struct _1a828b523_AllocStructLitExprModel {
	jule::Ptr<_1a828b226_StructLitExprModel> _field_Lit;
};
inline jule::Bool _1a828b523_AllocStructLitExprModel_eq(_1a828b523_AllocStructLitExprModel *_self_, _1a828b523_AllocStructLitExprModel _other_);


struct _1a828baa6_CastingExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Ptr<_1a8535877_Type> _field_ExprType;
};
inline jule::Bool _1a828baa6_CastingExprModel_eq(_1a828baa6_CastingExprModel *_self_, _1a828baa6_CastingExprModel _other_);


struct _1a828c458_FnCallExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a829a752_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a8355466_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1a828c832_SliceExprModel {
	jule::Ptr<_1a8535877_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a828ccd8_IndexingExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a85028cc_Data> _field_Index;
};
inline jule::Bool _1a828ccd8_IndexingExprModel_eq(_1a828ccd8_IndexingExprModel *_self_, _1a828ccd8_IndexingExprModel _other_);


struct _1a828d28e_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Captured;
	jule::Ptr<_1a829a752_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1a828d668_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1a828d668_KeyValPairExprModel_eq(_1a828d668_KeyValPairExprModel *_self_, _1a828d668_KeyValPairExprModel _other_);


struct _1a828da42_MapExprModel {
	jule::Ptr<_1a8544633_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1a828d668_KeyValPairExprModel>> _field_Entries;
};
struct _1a828e0c5_SlicingExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a828e0c5_SlicingExprModel_eq(_1a828e0c5_SlicingExprModel *_self_, _1a828e0c5_SlicingExprModel _other_);


struct _1a828e658_TraitSubIdentExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1a8297694_Fn> _field_Method;
	jule::Ptr<_1a82a2da8_Trait> _field_Trt;
};
inline jule::Bool _1a828e658_TraitSubIdentExprModel_eq(_1a828e658_TraitSubIdentExprModel *_self_, _1a828e658_TraitSubIdentExprModel _other_);


struct _1a828eee9_StructSubIdentExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a829a752_FnIns> _field_Method;
	jule::Ptr<_1a81c18ba_FieldIns> _field_Field;
	jule::Ptr<_1a81c246a_StructIns> _field_Owner;
};
inline jule::Bool _1a828eee9_StructSubIdentExprModel_eq(_1a828eee9_StructSubIdentExprModel *_self_, _1a828eee9_StructSubIdentExprModel _other_);


struct _1a8290390_StructStaticIdentExprModel {
	jule::Ptr<_1a81c246a_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1a829a752_FnIns> _field_Method;
};
inline jule::Bool _1a8290390_StructStaticIdentExprModel_eq(_1a8290390_StructStaticIdentExprModel *_self_, _1a8290390_StructStaticIdentExprModel _other_);


struct _1a8290769_ArrayExprModel {
	jule::Ptr<_1a85452b0_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1a8290a66_TupleExprModel {
	jule::Slice<jule::Ptr<_1a85028cc_Data>> _field_Datas;
};
struct _1a8290d63_BuiltinPrintCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
};
inline jule::Bool _1a8290d63_BuiltinPrintCallExprModel_eq(_1a8290d63_BuiltinPrintCallExprModel *_self_, _1a8290d63_BuiltinPrintCallExprModel _other_);


struct _1a8291160_BuiltinPrintlnCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
};
inline jule::Bool _1a8291160_BuiltinPrintlnCallExprModel_eq(_1a8291160_BuiltinPrintlnCallExprModel *_self_, _1a8291160_BuiltinPrintlnCallExprModel _other_);


struct _1a8291539_BuiltinNewCallExprModel {
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1a8291539_BuiltinNewCallExprModel_eq(_1a8291539_BuiltinNewCallExprModel *_self_, _1a8291539_BuiltinNewCallExprModel _other_);


struct _1a8291913_BuiltinPanicCallExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1a8291913_BuiltinPanicCallExprModel_eq(_1a8291913_BuiltinPanicCallExprModel *_self_, _1a8291913_BuiltinPanicCallExprModel _other_);


struct _1a8291db9_BuiltinMakeCallExprModel {
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1a8291db9_BuiltinMakeCallExprModel_eq(_1a8291db9_BuiltinMakeCallExprModel *_self_, _1a8291db9_BuiltinMakeCallExprModel _other_);


struct _1a8292293_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1a8292293_BuiltinAppendCallExprModel_eq(_1a8292293_BuiltinAppendCallExprModel *_self_, _1a8292293_BuiltinAppendCallExprModel _other_);


struct _1a8292590_BuiltinLenCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
};
inline jule::Bool _1a8292590_BuiltinLenCallExprModel_eq(_1a8292590_BuiltinLenCallExprModel *_self_, _1a8292590_BuiltinLenCallExprModel _other_);


struct _1a829288c_BuiltinCapCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
};
inline jule::Bool _1a829288c_BuiltinCapCallExprModel_eq(_1a829288c_BuiltinCapCallExprModel *_self_, _1a829288c_BuiltinCapCallExprModel _other_);


struct _1a8292c66_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Dest;
	jule::Ptr<_1a85028cc_Data> _field_Key;
};
inline jule::Bool _1a8292c66_BuiltinDeleteCallExprModel_eq(_1a8292c66_BuiltinDeleteCallExprModel *_self_, _1a8292c66_BuiltinDeleteCallExprModel _other_);


struct _1a8293140_BuiltinCopyCallExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Dest;
	jule::Ptr<_1a85028cc_Data> _field_Src;
};
inline jule::Bool _1a8293140_BuiltinCopyCallExprModel_eq(_1a8293140_BuiltinCopyCallExprModel *_self_, _1a8293140_BuiltinCopyCallExprModel _other_);


struct _1a8293519_BuiltinErrorCallExprModel {
	jule::Ptr<_1a829a752_FnIns> _field_Func;
	jule::Ptr<_1a85028cc_Data> _field_Err;
};
inline jule::Bool _1a8293519_BuiltinErrorCallExprModel_eq(_1a8293519_BuiltinErrorCallExprModel *_self_, _1a8293519_BuiltinErrorCallExprModel _other_);


struct _1a8293816_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a8293816_SizeofExprModel_eq(_1a8293816_SizeofExprModel *_self_, _1a8293816_SizeofExprModel _other_);


struct _1a8293eba_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a8293eba_AlignofExprModel_eq(_1a8293eba_AlignofExprModel *_self_, _1a8293eba_AlignofExprModel _other_);


struct _1a82941a7_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _1a82941a7_RuneExprModel_eq(_1a82941a7_RuneExprModel *_self_, _1a82941a7_RuneExprModel _other_);


struct _1a829452b_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1a8294828_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1a8294828_FreeExprModel_eq(_1a8294828_FreeExprModel *_self_, _1a8294828_FreeExprModel _other_);


struct _1a8295609_RetType {
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_Idents;
};
struct _1a8295bc0_Param {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1a8295bc0_Param_eq(_1a8295bc0_Param *_self_, _1a8295bc0_Param _other_);


struct _1a8297694_Fn {
	jule::Ptr<_1a83a8497_sema> _field_sema;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_Generics;
	jule::Ptr<_1a8295609_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a8295bc0_Param>> _field_Params;
	jule::Ptr<_1a81be610_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a829a752_FnIns>> _field_Instances;
};
struct _1a82995ec_ParamIns {
	jule::Ptr<_1a8295bc0_Param> _field_Decl;
	jule::Ptr<_1a8535877_Type> _field_Type;
};
inline jule::Bool _1a82995ec_ParamIns_eq(_1a82995ec_ParamIns *_self_, _1a82995ec_ParamIns _other_);


struct _1a829a752_FnIns {
	jule::Ptr<_1a81c246a_StructIns> _field_Owner;
	jule::Ptr<_1a8297694_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _field_Params;
	jule::Ptr<_1a8535877_Type> _field_Result;
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Ptr<_1a83790c2_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1a829d997_SymTab {
	jule::Ptr<_1a818dc83_Fileset> _field_File;
	jule::Slice<_1a837a623_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a82a2da8_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a82a555e_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a82a6c69_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a8350d57_Impl>> _field_Impls;
};
struct _1a82a2da8_Trait {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a853d088_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _field_Implemented;
};
struct _1a82a4a03_EnumItem {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a8503a54_Value> _field_Value;
};
inline jule::Bool _1a82a4a03_EnumItem_eq(_1a82a4a03_EnumItem *_self_, _1a82a4a03_EnumItem _other_);


struct _1a82a555e_Enum {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _field_Items;
};
struct _1a82a6692_TypeEnumItem {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
};
inline jule::Bool _1a82a6692_TypeEnumItem_eq(_1a82a6692_TypeEnumItem *_self_, _1a82a6692_TypeEnumItem _other_);


struct _1a82a6c69_TypeEnum {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _field_Items;
};
struct _1a8327a76_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1a8327a76_comptimeRange_eq(_1a8327a76_comptimeRange *_self_, _1a8327a76_comptimeRange _other_);


struct _1a83285d2_comptimeStructField {
	jule::Ptr<_1a81c18ba_FieldIns> _field_field;
};
inline jule::Bool _1a83285d2_comptimeStructField_eq(_1a83285d2_comptimeStructField *_self_, _1a83285d2_comptimeStructField _other_);


struct _1a8329d75_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a81c18ba_FieldIns>> _field_fields;
};
struct _1a832b805_comptimeStatic {
	jule::Ptr<_1a83cc1ad_Var> _field_field;
};
inline jule::Bool _1a832b805_comptimeStatic_eq(_1a832b805_comptimeStatic *_self_, _1a832b805_comptimeStatic _other_);


struct _1a832d0a9_comptimeStatics {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_fields;
};
struct _1a832ea28_comptimeEnumField {
	jule::Ptr<_1a82a4a03_EnumItem> _field_field;
};
inline jule::Bool _1a832ea28_comptimeEnumField_eq(_1a832ea28_comptimeEnumField *_self_, _1a832ea28_comptimeEnumField _other_);


struct _1a8330d37_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _field_fields;
};
struct _1a833283e_comptimeParam {
	jule::Ptr<_1a82995ec_ParamIns> _field_param;
};
inline jule::Bool _1a833283e_comptimeParam_eq(_1a833283e_comptimeParam *_self_, _1a833283e_comptimeParam _other_);


struct _1a8334698_comptimeParams {
	jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _field_params;
};
struct _1a8336007_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>> _field_types;
};
struct _1a8337976_comptimeTypeInfo {
	jule::Ptr<_1a8535877_Type> _field_base;
};
inline jule::Bool _1a8337976_comptimeTypeInfo_eq(_1a8337976_comptimeTypeInfo *_self_, _1a8337976_comptimeTypeInfo _other_);


struct _1a833da7b_comptimeValue {
	jule::Ptr<_1a85028cc_Data> _field_data;
};
inline jule::Bool _1a833da7b_comptimeValue_eq(_1a833da7b_comptimeValue *_self_, _1a833da7b_comptimeValue _other_);


struct _1a83417d7_comptimeFiles {
	jule::Slice<jule::Ptr<_1a829d997_SymTab>> _field_files;
};
struct _1a8343256_comptimeFile {
	jule::Ptr<_1a829d997_SymTab> _field_file;
};
inline jule::Bool _1a8343256_comptimeFile_eq(_1a8343256_comptimeFile *_self_, _1a8343256_comptimeFile _other_);


struct _1a8344d7e_comptimeDecls {
	jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>> _field_decls;
};
struct _1a834716c_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1a834716c_comptimeDecl_eq(_1a834716c_comptimeDecl *_self_, _1a834716c_comptimeDecl _other_);


struct _1a834da58_constraintChecker {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a829a752_FnIns> _field_fi;
	jule::Ptr<_1a81c246a_StructIns> _field_si;
	jule::Ptr<_1a81881cd_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1a8350d57_Impl {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Base;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Statics;
};
struct _1a8355466_Scope {
	jule::Ptr<_1a8355466_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
};
struct _1a8355884_If {
	jule::Any _field_Expr;
	jule::Ptr<_1a8355466_Scope> _field_Scope;
};
inline jule::Bool _1a8355884_If_eq(_1a8355884_If *_self_, _1a8355884_If _other_);


struct _1a8355b81_Else {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
};
inline jule::Bool _1a8355b81_Else_eq(_1a8355b81_Else *_self_, _1a8355b81_Else _other_);


struct _1a835609e_Conditional {
	jule::Slice<jule::Ptr<_1a8355884_If>> _field_Elifs;
	jule::Ptr<_1a8355b81_Else> _field_Default;
};
struct _1a835639b_InfIter {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
};
inline jule::Bool _1a835639b_InfIter_eq(_1a835639b_InfIter *_self_, _1a835639b_InfIter _other_);


struct _1a8356852_WhileIter {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1a8356852_WhileIter_eq(_1a8356852_WhileIter *_self_, _1a8356852_WhileIter _other_);


struct _1a835729d_RangeIter {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a83cc1ad_Var> _field_KeyA;
	jule::Ptr<_1a83cc1ad_Var> _field_KeyB;
};
inline jule::Bool _1a835729d_RangeIter_eq(_1a835729d_RangeIter *_self_, _1a835729d_RangeIter _other_);


struct _1a8357633_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1a8357633_ContSt_eq(_1a8357633_ContSt *_self_, _1a8357633_ContSt _other_);


struct _1a8357a0c_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1a8357a0c_BreakSt_eq(_1a8357a0c_BreakSt *_self_, _1a8357a0c_BreakSt _other_);


struct _1a8357eb3_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _1a8357eb3_Label_eq(_1a8357eb3_Label *_self_, _1a8357eb3_Label _other_);


struct _1a8358623_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Ptr<_1a8357eb3_Label> _field_Label;
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::I64 _field_Index;
};
inline jule::Bool _1a8358623_GotoSt_eq(_1a8358623_GotoSt *_self_, _1a8358623_GotoSt _other_);


struct _1a83589ec_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1a83589ec_Postfix_eq(_1a83589ec_Postfix *_self_, _1a83589ec_Postfix _other_);


struct _1a8358ea3_Assign {
	jule::Ptr<_1a8289e7d_OperandExprModel> _field_Left;
	jule::Ptr<_1a8289e7d_OperandExprModel> _field_Right;
	jule::Ptr<_1a81881cd_Token> _field_Op;
};
inline jule::Bool _1a8358ea3_Assign_eq(_1a8358ea3_Assign *_self_, _1a8358ea3_Assign _other_);


struct _1a8359459_MultiAssign {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a85028cc_Data>> _field_Left;
	jule::Any _field_Right;
};
struct _1a8359b96_Match {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1a835a6be_Case>> _field_Cases;
	jule::Ptr<_1a835a6be_Case> _field_Default;
};
struct _1a835a6be_Case {
	jule::Ptr<_1a8359b96_Match> _field_Owner;
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a85028cc_Data>> _field_Exprs;
	jule::Ptr<_1a835a6be_Case> _field_Next;
};
struct _1a835adb7_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1a835adb7_FallSt_eq(_1a835adb7_FallSt *_self_, _1a835adb7_FallSt _other_);


struct _1a835b25d_RetSt {
	jule::Ptr<_1a829a752_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1a835b25d_RetSt_eq(_1a835b25d_RetSt *_self_, _1a835b25d_RetSt _other_);


struct _1a835b714_scopeLabel {
	jule::Ptr<_1a81881cd_Token> _field_token;
	jule::Ptr<_1a8357eb3_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1a835b714_scopeLabel_eq(_1a835b714_scopeLabel *_self_, _1a835b714_scopeLabel _other_);


struct _1a835badd_result {
	jule::Ptr<_1a829a752_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _1a835badd_result_eq(_1a835badd_result *_self_, _1a835badd_result _other_);


struct _1a835cacd_scopeChecker {
	jule::Ptr<_1a81881cd_Token> _field_calledFrom;
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Ptr<_1a829a752_FnIns> _field_owner;
	jule::Ptr<_1a835cacd_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1a829d997_SymTab> _field_table;
	jule::Ptr<_1a8355466_Scope> _field_scope;
	jule::Ptr<_1a81adce7_ScopeTree> _field_tree;
	jule::Ptr<_1a835badd_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1a83cc1ad_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a835b714_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
};
inline jule::Bool _1a835cacd_scopeChecker_eq(_1a835cacd_scopeChecker *_self_, _1a835cacd_scopeChecker _other_);


struct _1a83767b7_directiveChecker {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a819d116_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1a83767b7_directiveChecker_eq(_1a83767b7_directiveChecker *_self_, _1a83767b7_directiveChecker _other_);


struct _1a83790c2_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1a837a623_Pass {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1a837a623_Pass_eq(_1a837a623_Pass *_self_, _1a837a623_Pass _other_);


struct _1a83800c8_symBuilder {
	jule::Ptr<_1a83800c8_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_21ca95427_Log> _field_errors;
	jule::Ptr<_1a819bc91_AST> _field_ast;
	jule::Ptr<_1a829d997_SymTab> _field_table;
};
struct _1a838b14a_ImportInfo {
	jule::Ptr<_1a81b6b46_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1a838d8bc_Package> _field_Package;
	jule::I64 _field_ModId;
};
inline jule::Bool _1a838b14a_ImportInfo_eq(_1a838b14a_ImportInfo *_self_, _1a838b14a_ImportInfo _other_);


struct _1a838d8bc_Package {
	jule::Slice<jule::Ptr<_1a829d997_SymTab>> _field_Files;
};
struct _1a83a7870_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1a838b14a_ImportInfo> _field_runtime;
};
struct _1a83a8497_sema {
	jule::Slice<_21ca95427_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a829d997_SymTab>> _field_files;
	jule::Ptr<_1a829d997_SymTab> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1a83a7870_commonSemaMeta> _field_meta;
};
struct _1a83c86c6_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1a83cc1ad_Var {
	jule::Ptr<_1a8355466_Scope> _field_Scope;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Ptr<_1a8503a54_Value> _field_Value;
	jule::Ptr<_1a83790c2_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Depends;
};
struct _1a83cd038_FuncPattern {
};
struct _1a84ddb71_typeCompatibilityChecker {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Ptr<_1a8535877_Type> _field_dest;
	jule::Ptr<_1a8535877_Type> _field_src;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
};
inline jule::Bool _1a84ddb71_typeCompatibilityChecker_eq(_1a84ddb71_typeCompatibilityChecker *_self_, _1a84ddb71_typeCompatibilityChecker _other_);


struct _1a84e09ec_assignTypeChecker {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Ptr<_1a8535877_Type> _field_dest;
	jule::Ptr<_1a85028cc_Data> _field_d;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Ptr<_1a83790c2_ReferenceStack> _field_refers;
};
inline jule::Bool _1a84e09ec_assignTypeChecker_eq(_1a84e09ec_assignTypeChecker *_self_, _1a84e09ec_assignTypeChecker _other_);


struct _1a84e23c2_dynamicTypeAnnotation {
	jule::Ptr<_1a850489b_eval> _field_e;
	jule::Ptr<_1a829a752_FnIns> _field_f;
	jule::Ptr<_1a82995ec_ParamIns> _field_p;
	jule::Ptr<_1a85028cc_Data> _field_a;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Ptr<_1a8535877_Type>* _field_k;
	jule::Ptr<_1a819dbe9_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_ignored;
};
struct _1a84e722e_fnCallArgChecker {
	jule::Ptr<_1a850489b_eval> _field_e;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_args;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Ptr<_1a829a752_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_ignored;
};
struct _1a84ea166_structLitChecker {
	jule::Ptr<_1a850489b_eval> _field_e;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Ptr<_1a81c246a_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a828ad80_StructArgExprModel>> _field_args;
};
struct _1a84ebe48_rangeChecker {
	jule::Ptr<_1a835cacd_scopeChecker> _field_sc;
	jule::Ptr<_1a81b39bc_RangeKind> _field_rang;
	jule::Ptr<_1a835729d_RangeIter> _field_Kind;
	jule::Ptr<_1a85028cc_Data> _field_d;
};
inline jule::Bool _1a84ebe48_rangeChecker_eq(_1a84ebe48_rangeChecker *_self_, _1a84ebe48_rangeChecker _other_);


struct _1a84ee786_retTypeChecker {
	jule::Ptr<_1a835cacd_scopeChecker> _field_sc;
	jule::Ptr<_1a829a752_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_types;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _field_exprs;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _1a85028cc_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1a82273d2_Const> _field_Constant;
};
inline jule::Bool _1a85028cc_Data_eq(_1a85028cc_Data *_self_, _1a85028cc_Data _other_);


struct _1a8503a54_Value {
	jule::Ptr<_1a81a302d_Expr> _field_Expr;
	jule::Ptr<_1a85028cc_Data> _field_Data;
};
inline jule::Bool _1a8503a54_Value_eq(_1a8503a54_Value *_self_, _1a8503a54_Value _other_);


struct _1a8503e2d_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _1a8503e2d_target_eq(_1a8503e2d_target *_self_, _1a8503e2d_target _other_);


struct _1a850489b_eval {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a8535877_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1a83cc1ad_Var> _field_owner;
	jule::Ptr<_1a81c18ba_FieldIns> _field_field;
	_1a8503e2d_target _field_target;
};
inline jule::Bool _1a850489b_eval_eq(_1a850489b_eval *_self_, _1a850489b_eval _other_);


struct _1a8523b1d_unaryEval {
	jule::Ptr<_1a850489b_eval> _field_e;
	jule::Ptr<_1a85028cc_Data> _field_d;
	jule::Ptr<_1a81a50da_UnaryExpr> _field_u;
};
inline jule::Bool _1a8523b1d_unaryEval_eq(_1a8523b1d_unaryEval *_self_, _1a8523b1d_unaryEval _other_);


struct _1a8525aa9_binaryEval {
	jule::Ptr<_1a850489b_eval> _field_e;
	jule::Ptr<_1a85028cc_Data> _field_l;
	jule::Ptr<_1a85028cc_Data> _field_r;
	jule::Ptr<_1a81881cd_Token> _field_op;
};
inline jule::Bool _1a8525aa9_binaryEval_eq(_1a8525aa9_binaryEval *_self_, _1a8525aa9_binaryEval _other_);


struct _1a8533e91_InsGeneric {
	jule::Ptr<_1a8535877_Type> _field_Type;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_Constraint;
};
struct _1a8534a85_TypeAlias {
	jule::Ptr<_1a81adce7_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a853d088_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _field_Generics;
};
struct _1a8535877_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1a8535877_Type_eq(_1a8535877_Type *_self_, _1a8535877_Type _other_);


struct _1a853d088_TypeSym {
	jule::Ptr<_1a819dbe9_TypeDecl> _field_Decl;
	jule::Ptr<_1a8535877_Type> _field_Type;
};
inline jule::Bool _1a853d088_TypeSym_eq(_1a853d088_TypeSym *_self_, _1a853d088_TypeSym _other_);


struct _1a853d990_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1a853d990_Prim_eq(_1a853d990_Prim *_self_, _1a853d990_Prim _other_);


struct _1a85424bb_Sptr {
	jule::Ptr<_1a8535877_Type> _field_Elem;
};
inline jule::Bool _1a85424bb_Sptr_eq(_1a85424bb_Sptr *_self_, _1a85424bb_Sptr _other_);


struct _1a8542e8e_Slc {
	jule::Ptr<_1a8535877_Type> _field_Elem;
};
inline jule::Bool _1a8542e8e_Slc_eq(_1a8542e8e_Slc *_self_, _1a8542e8e_Slc _other_);


struct _1a8543a83_Tuple {
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_Types;
};
struct _1a8544633_Map {
	jule::Ptr<_1a8535877_Type> _field_Key;
	jule::Ptr<_1a8535877_Type> _field_Val;
};
inline jule::Bool _1a8544633_Map_eq(_1a8544633_Map *_self_, _1a8544633_Map _other_);


struct _1a85452b0_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1a8535877_Type> _field_Elem;
};
inline jule::Bool _1a85452b0_Arr_eq(_1a85452b0_Arr *_self_, _1a85452b0_Arr _other_);


struct _1a8545c83_Ptr {
	jule::Ptr<_1a8535877_Type> _field_Elem;
};
inline jule::Bool _1a8545c83_Ptr_eq(_1a8545c83_Ptr *_self_, _1a8545c83_Ptr _other_);


struct _1a8546c84_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1a8546c84_referencer_eq(_1a8546c84_referencer *_self_, _1a8546c84_referencer _other_);


struct _1a8547c74_typeChecker {
	jule::Ptr<_1a83a8497_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a8546c84_referencer> _field_referencer;
	jule::Ptr<_1a83790c2_ReferenceStack> _field_refers;
	jule::Ptr<_1a81881cd_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a8535877_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1a8534a85_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1a8550d37_identTypeLookup {
};
inline jule::Bool _1a8550d37_identTypeLookup_eq(_1a8550d37_identTypeLookup *_self_, _1a8550d37_identTypeLookup _other_);


struct _1a8d4ad07_FileInfo {
	jule::Ptr<_1a819bc91_AST> _field_Ast;
	jule::Slice<_21ca95427_Log> _field_Errors;
};
struct _1a8d9aa8d_stmt {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1a8d9b42e_scopeParser {
	jule::Ptr<_1a8db9639_parser> _field_p;
	jule::Ptr<_1a81adce7_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _field_stmts;
	jule::I64 _field_pos;
};
struct _1a8da8d54_exprBuilder {
	jule::Ptr<_1a8db9639_parser> _field_p;
};
inline jule::Bool _1a8da8d54_exprBuilder_eq(_1a8da8d54_exprBuilder *_self_, _1a8da8d54_exprBuilder _other_);


struct _1a8db6449_assignInfo {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_r;
	jule::Ptr<_1a81881cd_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1a8db9639_parser {
	jule::Ptr<_1a819bc91_AST> _field_ast;
	jule::Slice<jule::Ptr<_1a819d116_Directive>> _field_directives;
	jule::Slice<_21ca95427_Log> _field_errors;
	jule::Ptr<_1a8da8d54_exprBuilder> _field_ep;
};
struct _1a8dca7e3_typeBuilder {
	jule::Ptr<_1a8db9639_parser> _field_p;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
};
struct _1a840ea09_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1a840ea09_CompileInfo_eq(_1a840ea09_CompileInfo *_self_, _1a840ea09_CompileInfo _other_);


struct _1a8411247_directiveEval {
	jule::Slice<_21ca95427_Log> _field_logs;
	jule::Ptr<_1a819d116_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a8dce8e6_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1a8dd5b83_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1a8ddd064_MetaStrBuilder {
	jule::Ptr<_1a829a752_FnIns> _field_Write;
	jule::Ptr<_1a829a752_FnIns> _field_WriteByte;
	jule::Ptr<_1a829a752_FnIns> _field_WriteRune;
	jule::Ptr<_1a829a752_FnIns> _field_WriteStr;
};
inline jule::Bool _1a8ddd064_MetaStrBuilder_eq(_1a8ddd064_MetaStrBuilder *_self_, _1a8ddd064_MetaStrBuilder _other_);


struct _1a8dddc35_MetaRuntime {
	jule::Ptr<_1a8297694_Fn> _field_ToStr;
	jule::Ptr<_1a8297694_Fn> _field_ArrayCmp;
	jule::Ptr<_1a829a752_FnIns> _field_RCAdd;
	jule::Ptr<_1a829a752_FnIns> _field_RCLoad;
	jule::Ptr<_1a829a752_FnIns> _field_RCDrop;
	jule::Ptr<_1a829a752_FnIns> _field_RCAddAtomic;
	jule::Ptr<_1a829a752_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_1a829a752_FnIns> _field_RCDropAtomic;
	jule::Ptr<_1a829a752_FnIns> _field_RuneCount;
	jule::Ptr<_1a81be610_Struct> _field_Map;
	jule::Ptr<_1a81be610_Struct> _field_MapIterator;
};
inline jule::Bool _1a8dddc35_MetaRuntime_eq(_1a8dddc35_MetaRuntime *_self_, _1a8dddc35_MetaRuntime _other_);


struct _1a8dde708_MetaMathCmplx {
	jule::Ptr<_1a81c246a_StructIns> _field_Cmplx;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxAdd;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxSub;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxMul;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxDiv;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxAddZ;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxSubZ;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxMulZ;
	jule::Ptr<_1a829a752_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _1a8dde708_MetaMathCmplx_eq(_1a8dde708_MetaMathCmplx *_self_, _1a8dde708_MetaMathCmplx _other_);


struct _1a8dded13_Meta {
	jule::Ptr<_1a8dddc35_MetaRuntime> _field_Runtime;
	jule::Ptr<_1a8ddd064_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1a8dde708_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_1a8297694_Fn> _field_EntryPoint;
};
inline jule::Bool _1a8dded13_Meta_eq(_1a8dded13_Meta *_self_, _1a8dded13_Meta _other_);


struct _1a8de13a8_OrderedDefines {
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_Globals;
};
struct _1a512adcc_liveTable {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a829a752_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a81c246a_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a82a2da8_Trait>> _field_traits;
};
struct _1a512b1da_ObjectDeadCode {
	_1a512adcc_liveTable _field_live;
	jule::Ptr<_1a8dd23cc_IR> _field_ir;
};
struct _1a5130310_scopeDeadCode {
	jule::Ptr<_1a5130310_scopeDeadCode> _field_parent;
	jule::Ptr<_1a8355466_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8357eb3_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1a5130310_scopeDeadCode_eq(_1a5130310_scopeDeadCode *_self_, _1a5130310_scopeDeadCode _other_);


struct _1a5134897_exprDeadCode {
	jule::Ptr<_1a5130310_scopeDeadCode> _field_s;
};
inline jule::Bool _1a5134897_exprDeadCode_eq(_1a5134897_exprDeadCode *_self_, _1a5134897_exprDeadCode _other_);


struct _1a43ddb63_anyData {
	jule::Ptr<jule::U64> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _1a43ddb63_anyData_eq(_1a43ddb63_anyData *_self_, _1a43ddb63_anyData _other_);


struct _1a43e10a5_ExceptionalForwardingExprModel {
	jule::Ptr<_1a828c458_FnCallExprModel> _field_Expr;
};
inline jule::Bool _1a43e10a5_ExceptionalForwardingExprModel_eq(_1a43e10a5_ExceptionalForwardingExprModel *_self_, _1a43e10a5_ExceptionalForwardingExprModel _other_);


struct _1a43e1292_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_1a828c458_FnCallExprModel> _field_Base;
};
inline jule::Bool _1a43e1292_FnCallIgnoreExceptionalExprModel_eq(_1a43e1292_FnCallIgnoreExceptionalExprModel *_self_, _1a43e1292_FnCallIgnoreExceptionalExprModel _other_);


struct _1a43e1638_SwapExprModel {
	jule::Ptr<_1a85028cc_Data> _field_Left;
	jule::Ptr<_1a85028cc_Data> _field_Right;
};
inline jule::Bool _1a43e1638_SwapExprModel_eq(_1a43e1638_SwapExprModel *_self_, _1a43e1638_SwapExprModel _other_);


struct _1a43e1a56_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1a43e1a56_EmptyCompareExprModel_eq(_1a43e1a56_EmptyCompareExprModel *_self_, _1a43e1a56_EmptyCompareExprModel _other_);


struct _1a43e1d53_RefExprModel {
	jule::Ptr<_1a83cc1ad_Var> _field_Var;
};
inline jule::Bool _1a43e1d53_RefExprModel_eq(_1a43e1d53_RefExprModel *_self_, _1a43e1d53_RefExprModel _other_);


struct _1a43e2309_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1a82273d2_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1a43e2309_StrCompExprModel_eq(_1a43e2309_StrCompExprModel *_self_, _1a43e2309_StrCompExprModel _other_);


struct _1a43e288c_MutSlicingExprModel {
	jule::Ptr<_1a81881cd_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1a43e288c_MutSlicingExprModel_eq(_1a43e288c_MutSlicingExprModel *_self_, _1a43e288c_MutSlicingExprModel _other_);


struct _1a43e2c22_UnsafeBinaryExprModel {
	jule::Ptr<_1a828a478_BinaryExprModel> _field_Node;
};
inline jule::Bool _1a43e2c22_UnsafeBinaryExprModel_eq(_1a43e2c22_UnsafeBinaryExprModel *_self_, _1a43e2c22_UnsafeBinaryExprModel _other_);


struct _1a43e301e_UnsafeIndexingExprModel {
	jule::Ptr<_1a828ccd8_IndexingExprModel> _field_Node;
};
inline jule::Bool _1a43e301e_UnsafeIndexingExprModel_eq(_1a43e301e_UnsafeIndexingExprModel *_self_, _1a43e301e_UnsafeIndexingExprModel _other_);


struct _1a43e33e8_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1a828c832_SliceExprModel> _field_Elems;
};
inline jule::Bool _1a43e33e8_PushToSliceExprModel_eq(_1a43e33e8_PushToSliceExprModel *_self_, _1a43e33e8_PushToSliceExprModel _other_);


struct _1a43e37c2_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1a43e37c2_AppendToSliceExprModel_eq(_1a43e37c2_AppendToSliceExprModel *_self_, _1a43e37c2_AppendToSliceExprModel _other_);


struct _1a43e3b9b_StrRuneIter {
	jule::Ptr<_1a85028cc_Data> _field_Expr;
	jule::Ptr<_1a835729d_RangeIter> _field_Base;
};
inline jule::Bool _1a43e3b9b_StrRuneIter_eq(_1a43e3b9b_StrRuneIter *_self_, _1a43e3b9b_StrRuneIter _other_);


struct _1a43e3e98_UnsafeDerefExprModel {
	jule::Ptr<_1a828a852_UnaryExprModel> _field_Base;
};
inline jule::Bool _1a43e3e98_UnsafeDerefExprModel_eq(_1a43e3e98_UnsafeDerefExprModel *_self_, _1a43e3e98_UnsafeDerefExprModel _other_);


struct _1a43e4295_UnsafeCastingExprModel {
	jule::Ptr<_1a828baa6_CastingExprModel> _field_Base;
};
inline jule::Bool _1a43e4295_UnsafeCastingExprModel_eq(_1a43e4295_UnsafeCastingExprModel *_self_, _1a43e4295_UnsafeCastingExprModel _other_);


struct _1a43e4dbc_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1a43e4dbc_nilVar_eq(_1a43e4dbc_nilVar *_self_, _1a43e4dbc_nilVar _other_);


struct _1a43e520d_nils {
	jule::Slice<_1a43e4dbc_nilVar> _field_vars;
};
struct _1a43e7d7b_scopeOptimizer {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1a8355466_Scope> _field_scope;
	jule::Ptr<_1a4408b28_data> _field_data;
};
inline jule::Bool _1a43e7d7b_scopeOptimizer_eq(_1a43e7d7b_scopeOptimizer *_self_, _1a43e7d7b_scopeOptimizer _other_);


struct _1a43eea86_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a4408b28_data> _field_data;
	jule::Ptr<_1a8dd5b83_ExprInspector> _field_inspector;
};
inline jule::Bool _1a43eea86_exprOptimizer_eq(_1a43eea86_exprOptimizer *_self_, _1a43eea86_exprOptimizer _other_);


struct _1a4405905_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1a8535877_Type> _field_kind;
};
inline jule::Bool _1a4405905_dynamicVar_eq(_1a4405905_dynamicVar *_self_, _1a4405905_dynamicVar _other_);


struct _1a4405c46_dynamic {
	jule::Slice<_1a4405905_dynamicVar> _field_vars;
};
struct _1a4408b28_data {
	jule::Ptr<_1a440a410_boundary> _field_boundary;
	jule::Ptr<_1a43e520d_nils> _field_nils;
	jule::Ptr<_1a4405c46_dynamic> _field_dynamic;
	jule::I64 _field_flags;
};
inline jule::Bool _1a4408b28_data_eq(_1a4408b28_data *_self_, _1a4408b28_data _other_);


struct _1a440a0be_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1a440a410_boundary {
	jule::Slice<_1a440a0be_boundaryVar> _field_vars;
};
struct _1a51359b9_Optimizer {
	jule::Ptr<_1a8dd23cc_IR> _field_ir;
};
inline jule::Bool _1a51359b9_Optimizer_eq(_1a51359b9_Optimizer *_self_, _1a51359b9_Optimizer _other_);


struct _1a541369d_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1a541369d_AbsTime_eq(_1a541369d_AbsTime *_self_, _1a541369d_AbsTime _other_);


struct _1a5413d74_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1a5413d74_Time_eq(_1a5413d74_Time *_self_, _1a5413d74_Time _other_);


struct _1a5139ade_scopeCoder {
	jule::Ptr<_1a542125a_ObjectCoder> _field_oc;
};
inline jule::Bool _1a5139ade_scopeCoder_eq(_1a5139ade_scopeCoder *_self_, _1a5139ade_scopeCoder _other_);


struct _1a51460d4_exprCoder {
	jule::Ptr<_1a542125a_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a83cc1ad_Var>>> _field_varPrefixes;
};
struct _1a5158668_TestCoder {
	jule::Ptr<_1a81c246a_StructIns> _field_t;
	jule::Ptr<_1a8297694_Fn> _field_tmReset;
	jule::Ptr<_1a8297694_Fn> _field_tmFailed;
	jule::Ptr<_1a8297694_Fn> _field_tmSkipped;
	jule::Ptr<_1a542125a_ObjectCoder> _field_oc;
};
inline jule::Bool _1a5158668_TestCoder_eq(_1a5158668_TestCoder *_self_, _1a5158668_TestCoder _other_);


struct _1a90de5d9_identCoder {
};
inline jule::Bool _1a90de5d9_identCoder_eq(_1a90de5d9_identCoder *_self_, _1a90de5d9_identCoder _other_);


struct _1a541d9a5_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1a541d9a5_SerializationInfo_eq(_1a541d9a5_SerializationInfo *_self_, _1a541d9a5_SerializationInfo _other_);


struct _1a541ddc3_traitCast {
	jule::Ptr<_1a82a2da8_Trait> _field_t1;
	jule::Ptr<_1a82a2da8_Trait> _field_t2;
};
inline jule::Bool _1a541ddc3_traitCast_eq(_1a541ddc3_traitCast *_self_, _1a541ddc3_traitCast _other_);


struct _1a541e29c_anonHash {
	jule::Ptr<_1a828d28e_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1a541e29c_anonHash_eq(_1a541e29c_anonHash *_self_, _1a541e29c_anonHash _other_);


struct _1a541e6ba_traitHash {
	jule::Ptr<_1a82a2da8_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _field_methods;
};
struct _1a541e9b7_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1a541e9b7_metadata_eq(_1a541e9b7_metadata *_self_, _1a541e9b7_metadata _other_);


struct _1a542125a_ObjectCoder {
	_21ca86171_Builder _field_Buf;
	_21ca86171_Builder _field_resultDecls;
	_21ca86171_Builder _field_anyObj;
	_21ca86171_Builder _field_anonObj;
	_21ca86171_Builder _field_deallocObj;
	_21ca86171_Builder _field_coSpawnObj;
	jule::Ptr<_1a8dd23cc_IR> _field_ir;
	_1a541d9a5_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a541e29c_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1ab2ac266__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1a8535877_Type>> _field_anyTypeMap;
	jule::Slice<_1a541ddc3_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1a829a752_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1a541e6ba_traitHash>> _field_traitMap;
	jule::Ptr<_1ab30879b__Map> _field_traitMetMap;
	jule::Ptr<_1a51460d4_exprCoder> _field_ec;
	jule::Ptr<_1a5139ade_scopeCoder> _field_sc;
	jule::Ptr<_1a54311b0_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1a541e9b7_metadata _field_meta;
};
struct _1a5430588_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1a5430588_customType_eq(_1a5430588_customType *_self_, _1a5430588_customType _other_);


struct _1a54311b0_typeCoder {
	jule::Ptr<_1a542125a_ObjectCoder> _field_oc;
	jule::Ptr<_1a5438c9a_resultCoder> _field_rc;
};
inline jule::Bool _1a54311b0_typeCoder_eq(_1a54311b0_typeCoder *_self_, _1a54311b0_typeCoder _other_);


struct _1a5438c9a_resultCoder {
	jule::Ptr<_1a54311b0_typeCoder> _field_tc;
};
inline jule::Bool _1a5438c9a_resultCoder_eq(_1a5438c9a_resultCoder *_self_, _1a5438c9a_resultCoder _other_);


struct _1aba54788_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1aba54788_Flag_eq(_1aba54788_Flag *_self_, _1aba54788_Flag _other_);

struct _1aba5811b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1aba5811b_Flag_eq(_1aba5811b_Flag *_self_, _1aba5811b_Flag _other_);

struct _1aba5b828_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1aba5b828_Flag_eq(_1aba5b828_Flag *_self_, _1aba5b828_Flag _other_);

struct _1aba60079_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1aba60079_Flag_eq(_1aba60079_Flag *_self_, _1aba60079_Flag _other_);

struct _1aba63786_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1aba63786_Flag_eq(_1aba63786_Flag *_self_, _1aba63786_Flag _other_);


struct _1a90e57aa_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1a90e826e_argParser {
	_1a90e57aa_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
};
struct _21cc3c019_Cmd {
	_21cc7d445_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct _1a4408551_dataCheckpoint {
	_1a440a410_boundary _field_boundary;
	_1a43e520d_nils _field_nils;
	_1a4405c46_dynamic _field_dynamic;
};
struct _21cc3b47a_Dir {
	jule::Str _field_Name;
	_21cc858ae_Stat _field_Stat;
};
inline jule::Bool _21cc3b47a_Dir_eq(_21cc3b47a_Dir *_self_, _21cc3b47a_Dir _other_);


struct _1a8dd23cc_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a838d8bc_Package> _field_Main;
	jule::Ptr<_1a838b14a_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _field_Used;
	_1a8de13a8_OrderedDefines _field_Ordered;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1a829a752_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1a829a752_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a85028cc_Data__jule_tuple_x_1a85028cc_Data {
	jule::Ptr<_1a85028cc_Data> __jule_result_arg0;
	jule::Ptr<_1a85028cc_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a85028cc_Data__jule_tuple_bool {
	jule::Ptr<_1a85028cc_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a81a302d_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a81b5c99_Case__jule_tuple_bool {
	jule::Ptr<_1a81b5c99_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a81b5c99_Case__jule_tuple_x_1a81b4b00_Else {
	jule::Slice<jule::Ptr<_1a81b5c99_Case>> __jule_result_arg0;
	jule::Ptr<_1a81b4b00_Else> __jule_result_arg1;
};
struct __jule_tuple__1a81ad357_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a81ac697_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a81ac697_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a819dbe9_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a81a1adc_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log {
	jule::Slice<jule::Ptr<_1a819bc91_AST>> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21ca95427_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a829a752_FnIns__jule_tuple_bool {
	jule::Ptr<_1a829a752_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8dd23cc_IR__jule_tuple_s_21ca95427_Log {
	jule::Ptr<_1a8dd23cc_IR> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__2037eb96c_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__2037eb96c_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__2037eb96c_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log {
	jule::Ptr<_1a829d997_SymTab> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log {
	jule::Ptr<_1a838d8bc_Package> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a819bc91_AST__jule_tuple_s_21ca95427_Log {
	jule::Ptr<_1a819bc91_AST> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a81881cd_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a81881cd_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> __jule_result_arg0;
	jule::Slice<_21ca95427_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__21c8b749c_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__21c8b7dc6_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1ab2ac266__Map> static__1ab2ac82c_make(void);
inline void _1ab2ac981_initData(_1ab2ac266__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1ab2acad5_hash(_1ab2ac266__Map* _self_, jule::Str _14616_k);
inline void _1ab2acc39_rehash(_1ab2ac266__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1ab2acd8d_nextSize(_1ab2ac266__Map* _self_);
inline void _1ab2acee2_lookup(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1ab2ad146_get(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1ab2ad29a_set(_1ab2ac266__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1ab2ad3ee_del(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _27624_k);
inline void _1ab2ad553_clear(jule::Ptr<_1ab2ac266__Map> _self_);
inline jule::I64 _1ab2ad6a7_len(jule::Ptr<_1ab2ac266__Map> _self_);
inline jule::I64 _1ab2ad80b_cap(_1ab2ac266__Map* _self_);
inline _1ab2b899d_mapIterator _1ab2ad960_iterator(jule::Ptr<_1ab2ac266__Map> _self_);
inline jule::Ptr<_1ab30879b__Map> static__1ab308cb8_make(void);
inline void _1ab308e1c_initData(_1ab30879b__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1ab309071_hash(_1ab30879b__Map* _self_, jule::Ptr<_1a829a752_FnIns> _14616_k);
inline void _1ab3091c5_rehash(_1ab30879b__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1ab309329_nextSize(_1ab30879b__Map* _self_);
inline void _1ab30947d_lookup(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1ab3095d2_get(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1ab309736_set(_1ab30879b__Map* _self_, jule::Ptr<_1a829a752_FnIns> _24123_k);
inline jule::Bool _1ab30988a_del(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _27624_k);
inline void _1ab3099de_clear(jule::Ptr<_1ab30879b__Map> _self_);
inline jule::I64 _1ab309b43_len(jule::Ptr<_1ab30879b__Map> _self_);
inline jule::I64 _1ab309c97_cap(_1ab30879b__Map* _self_);
inline _1ab312ce4_mapIterator _1ab309deb_iterator(jule::Ptr<_1ab30879b__Map> _self_);
inline void _1ab2b9031_init(_1ab2b899d_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1ab2b9185_next(_1ab2b899d_mapIterator* _self_);
inline void _1ab313377_init(_1ab312ce4_mapIterator* _self_);
inline __jule_tuple_px_1a829a752_FnIns__jule_tuple_psuintptr _1ab3134cb_next(_1ab312ce4_mapIterator* _self_);
inline _21ca86171_Builder static__21ca869bd_New(jule::I64 _2316_cap);
inline jule::Exceptional<jule::I64> _21ca86d0e_Write(_21ca86171_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I64> _21ca87150_WriteStr(_21ca86171_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _21ca87408_WriteByte(_21ca86171_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I64> _21ca87749_WriteRune(_21ca86171_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _21ca879d0_Str(_21ca86171_Builder* _self_);
inline void _21ca87bcd_Clear(_21ca86171_Builder* _self_);
inline jule::I64 _21ca87e64_Len(_21ca86171_Builder* _self_);
inline jule::Slice<jule::U8> _21ca88481_Buf(_21ca86171_Builder* _self_);
inline void _21ca88739_SetBuf(_21ca86171_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _205374290_index(_205373cc8_lazyBuff* _self_, jule::I64 _5521_i);
inline void _205374548_append(_205373cc8_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _2053747ce_string(_205373cc8_lazyBuff* _self_);
inline jule::Ptr<_21cc83307_File> static__21cc83cdb_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_21cc83307_File>> static__21cc840a5_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21cc8436e_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__21cc84715_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I64 _12443_perm);
inline jule::VoidExceptional _21cc8501d_Close(_21cc83307_File* _self_);
inline jule::Exceptional<jule::Ptr<_21cc83307_File>> static__21cc8710d_Open(jule::Str _1717_path, jule::I64 _1728_flag, jule::I64 _1741_mode);
inline jule::VoidExceptional static__21cc8733e_Remove(jule::Str _2719_path);
inline jule::Exceptional<jule::I64> _21cc877c3_Write(_21cc83307_File* _self_, jule::Slice<jule::U8> _4021_buf);
inline jule::Exceptional<jule::I64> _21cc87b14_Read(_21cc83307_File* _self_, jule::Slice<jule::U8> _6824_buf);
inline jule::Bool _21cc85cbb_IsDir(_21cc858ae_Stat* _self_);
inline jule::Bool _21cc86052_IsReg(_21cc858ae_Stat* _self_);
inline jule::U64 _21cc862d8_Size(_21cc858ae_Stat* _self_);
inline jule::Exceptional<_21cc858ae_Stat> static__20537c980_Of(jule::Str _1015_path);
inline jule::Bool _1d979d0ec_set(_1d97a6633_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1d979d43d_floatBits(_1d97a6633_decimal* _self_, _1d979309d_floatInfo* _33226_flt);
inline void _1d97a6a1d_assign(_1d97a6633_decimal* _self_, jule::U64 _15126_v);
inline void _1d97a6cc6_shift(_1d97a6633_decimal* _self_, jule::I64 _17625_k);
inline void _1d97a707e_roundDown(_1d97a6633_decimal* _self_, jule::I64 _19625_nd);
inline void _1d97a7337_roundUp(_1d97a6633_decimal* _self_, jule::I64 _20523_nd);
inline void _1d97a75e0_round(_1d97a6633_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1d97a7876_roundedInteger(_1d97a6633_decimal* _self_);
inline void static__205389184_Reset(void);
inline void static__2053aaa13_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1d97ac518_LogFlat(_21ca95427_Log* _1421_l);
inline void static__1d97ac727_LogError(_21ca95427_Log* _1922_l);
inline void static__1d97ac958_Log(_21ca95427_Log* _6417_l);
inline void static__1d97acb89_PrintLogs(jule::Slice<_21ca95427_Log>* _7423_logs);
inline jule::U8 _1a8188585_Prec(_1a81881cd_Token* _self_);
inline jule::Ptr<_1a818dc83_Fileset> static__1a818e118_New(jule::Str _2016_path);
inline void _1a818e679_FillMut(_1a818dc83_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _1a818e910_Dir(_1a818dc83_Fileset* _self_);
inline jule::Str _1a818eb96_Name(_1a818dc83_Fileset* _self_);
inline jule::Str _1a819026d_GetRow(_1a818dc83_Fileset* _self_, jule::I64 _5718_row);
inline void _1a819760a_pushErr(_1a8197044_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1a8197b6b_lex(_1a8197044_lex* _self_);
inline jule::Str _1a8197eac_id(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1a8198243_resume(_1a8197044_lex* _self_);
inline void _1a81984eb_lexLineComment(_1a8197044_lex* _self_, jule::Ptr<_1a81881cd_Token>* _52235_token);
inline void _1a81987a4_lexRangeComment(_1a8197044_lex* _self_, jule::Ptr<_1a81881cd_Token>* _53736_token);
inline jule::Str _1a8198ae5_num(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1a8198e36_escapeSeq(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1a8199332_getRune(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1a8199673_lexRune(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1a8199909_lexStr(_1a8197044_lex* _self_);
inline void _1a8199d8d_newLine(_1a8197044_lex* _self_);
inline jule::Bool _1a819a3ee_isOp(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_1a81881cd_Token>* _70858_t);
inline jule::Bool _1a819a7ea_lexBasicOps(_1a8197044_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a81881cd_Token>* _71845_tok);
inline jule::Bool _1a819abe6_lexId(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a81881cd_Token>* _72740_t);
inline jule::Bool _1a819b0e2_lexNum(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a81881cd_Token>* _73741_t);
inline jule::Ptr<_1a81881cd_Token> _1a819b378_token(_1a8197044_lex* _self_);
inline jule::Bool _1a81a0ab9_IsUnsafe(_1a81a0723_PtrTypeDecl* _self_);
inline jule::Bool _1a81a135b_AutoSized(_1a81a0eb5_ArrTypeDecl* _self_);
inline jule::Bool _1a81a710e_Unhandled(_1a81a6c57_FnCallExpr* _self_);
inline jule::Bool _1a81a7395_Ignored(_1a81a6c57_FnCallExpr* _self_);
inline jule::Bool _1a81ae8db_IsSelf(_1a81ae534_ParamDecl* _self_);
inline jule::Bool _1a81b0d2c_IsAnon(_1a81b0986_FnDecl* _self_);
inline jule::Bool _1a81b2b31_IsInf(_1a81b278a_Iter* _self_);
inline jule::Bool _1a81b345b_IsWhileNext(_1a81b30b5_WhileKind* _self_);
inline jule::Ptr<_1a82273d2_Const> static__1a827e0a4_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1a82273d2_Const> static__1a827e329_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1a82273d2_Const> static__1a827e5e3_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1a82273d2_Const> static__1a827e8ac_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1a82273d2_Const> static__1a827eb76_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1a82273d2_Const> static__1a827ed85_NewNil(void);
inline jule::I64 _1a82804e5_ReadI64(_1a82273d2_Const* _self_);
inline jule::U64 _1a828077b_ReadU64(_1a82273d2_Const* _self_);
inline jule::Bool _1a8280a12_ReadBool(_1a82273d2_Const* _self_);
inline jule::Str _1a8280c98_ReadStr(_1a82273d2_Const* _self_);
inline jule::F64 _1a828102e_ReadF64(_1a82273d2_Const* _self_);
inline jule::I64 _1a82812b5_AsI64(_1a82273d2_Const* _self_);
inline jule::U64 _1a828154b_AsU64(_1a82273d2_Const* _self_);
inline jule::F64 _1a82817d2_AsF64(_1a82273d2_Const* _self_);
inline void _1a8281a8a_SetI64(_1a82273d2_Const* _self_, jule::I64 _13622_x);
inline void _1a8281d43_SetU64(_1a82273d2_Const* _self_, jule::U64 _13922_x);
inline void _1a82820eb_SetBool(_1a82273d2_Const* _self_, jule::Bool _14223_x);
inline void _1a82823a4_SetStr(_1a82273d2_Const* _self_, jule::Str _14522_x);
inline void _1a828265c_SetF64(_1a82273d2_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1a8282ae1_IsI64(_1a82273d2_Const* _self_);
inline jule::Bool _1a8282d77_IsU64(_1a82273d2_Const* _self_);
inline jule::Bool _1a828310d_IsBool(_1a82273d2_Const* _self_);
inline jule::Bool _1a8283394_IsStr(_1a82273d2_Const* _self_);
inline jule::Bool _1a828362a_IsF64(_1a82273d2_Const* _self_);
inline jule::Bool _1a82838b1_IsNil(_1a82273d2_Const* _self_);
inline jule::Bool _1a8284043_And(_1a82273d2_Const* _self_, _1a82273d2_Const _23615_x);
inline jule::Bool _1a8284384_Or(_1a82273d2_Const* _self_, _1a82273d2_Const _24714_x);
inline jule::Bool _1a828582a_Add(_1a82273d2_Const* _self_, _1a82273d2_Const _37519_x);
inline jule::Bool _1a8285b6b_Sub(_1a82273d2_Const* _self_, _1a82273d2_Const _40419_x);
inline jule::Bool _1a8285eac_Mul(_1a82273d2_Const* _self_, _1a82273d2_Const _42819_x);
inline jule::Bool _1a82862ed_Div(_1a82273d2_Const* _self_, _1a82273d2_Const _45619_x);
inline jule::Bool _1a828663e_Mod(_1a82273d2_Const* _self_, _1a82273d2_Const _48519_x);
inline jule::Bool _1a8286980_BitwiseAnd(_1a82273d2_Const* _self_, _1a82273d2_Const _50726_x);
inline jule::Bool _1a8286cc1_BitwiseOr(_1a82273d2_Const* _self_, _1a82273d2_Const _52125_x);
inline jule::Bool _1a8287112_Xor(_1a82273d2_Const* _self_, _1a82273d2_Const _53519_x);
inline jule::Bool _1a8287453_Lshift(_1a82273d2_Const* _self_, _1a82273d2_Const _54922_x);
inline jule::Bool _1a8287794_Rshift(_1a82273d2_Const* _self_, _1a82273d2_Const _56922_x);
inline jule::Ptr<_1a81c18ba_FieldIns> _1a81bbac4_instance(jule::Ptr<_1a81bb6d9_Field> _self_);
inline jule::Ptr<_1a81c246a_StructIns> _1a81beaa5_instance(jule::Ptr<_1a81be610_Struct> _self_);
inline jule::Ptr<_1a81c246a_StructIns> _1a81bedb3_appendInstance(_1a81be610_Struct* _self_, jule::Ptr<_1a81c246a_StructIns>* _13535_ins);
inline jule::Ptr<_1a8297694_Fn> _1a81c02ae_FindMethod(_1a81be610_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1a83cc1ad_Var> _1a81c0600_FindStatic(_1a81be610_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1a81bb6d9_Field> _1a81c0941_FindField(_1a81be610_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1a81c0c82_IsImplements(_1a81be610_Struct* _self_, jule::Ptr<_1a82a2da8_Trait> _18524_t);
inline jule::Bool _1a81c10c3_IsUses(_1a81be610_Struct* _self_, jule::Ptr<_1a81be610_Struct> _19518_s);
inline jule::Str _1a81c2822_Str(_1a81c246a_StructIns* _self_);
inline jule::Bool _1a81c2b63_Equal(jule::Ptr<_1a81c246a_StructIns> _self_, jule::Ptr<_1a8535877_Type> _25718_other);
inline jule::Bool _1a81c3119_Same(_1a81c246a_StructIns* _self_, jule::Ptr<_1a81c246a_StructIns> _28516_s);
inline jule::Ptr<_1a8297694_Fn> _1a81c3515_FindMethod(_1a81c246a_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1a81c18ba_FieldIns> _1a81c3856_FindField(_1a81c246a_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a83cc1ad_Var> _1a81c3b97_FindStatic(_1a81c246a_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1a82995ec_ParamIns> _1a8296088_instance(jule::Ptr<_1a8295bc0_Param> _self_);
inline jule::Bool _1a829631e_IsSelf(_1a8295bc0_Param* _self_);
inline jule::Bool _1a82965a5_IsRef(_1a8295bc0_Param* _self_);
inline jule::Bool _1a8297b4a_IsVoid(_1a8297694_Fn* _self_);
inline jule::Bool _1a8297dd1_IsMethod(_1a8297694_Fn* _self_);
inline jule::Bool _1a8298167_IsEntryPoint(_1a8297694_Fn* _self_);
inline jule::Bool _1a82983ed_IsInit(_1a8297694_Fn* _self_);
inline jule::Bool _1a8298684_IsAnon(_1a8297694_Fn* _self_);
inline jule::Bool _1a829891a_AnyVar(_1a8297694_Fn* _self_);
inline jule::Ptr<_1a829a752_FnIns> _1a8298ba1_instanceForce(jule::Ptr<_1a8297694_Fn> _self_);
inline jule::Ptr<_1a829a752_FnIns> _1a8298e37_instance(jule::Ptr<_1a8297694_Fn> _self_);
inline jule::Ptr<_1a829a752_FnIns> _1a8299245_appendInstance(_1a8297694_Fn* _self_, jule::Ptr<_1a829a752_FnIns>* _13835_ins);
inline jule::Str _1a8299993_Str(_1a82995ec_ParamIns* _self_);
inline jule::Str _1a829aac6_Str(_1a829a752_FnIns* _self_);
inline jule::Bool _1a829ae17_Equal(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a8535877_Type> _22918_other);
inline jule::Bool _1a829b3ac_EqualFn(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a829a752_FnIns>* _24021_f);
inline jule::Bool _1a829b6ed_equalTrait(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a829a752_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1a8535877_Type>> _1a829b984_Types(_1a829a752_FnIns* _self_);
inline jule::Bool _1a829bc1a_IsBuiltin(_1a829a752_FnIns* _self_);
inline jule::Bool _1a829bea1_IsAnon(_1a829a752_FnIns* _self_);
inline jule::Bool _1a829c2e2_Same(_1a829a752_FnIns* _self_, jule::Ptr<_1a829a752_FnIns> _34216_f);
inline jule::Str _1a829c633_GetKindStr(_1a829a752_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a829deb4_SelectPackage(_1a829d997_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a83cc1ad_Var> _1a829e3b0_FindVar(_1a829d997_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a829e7ab_FindTypeAlias(_1a829d997_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a81be610_Struct> _1a829eba7_FindStruct(_1a829d997_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a8297694_Fn> _1a82a00a3_FindFn(_1a829d997_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a82a2da8_Trait> _1a82a03e4_FindTrait(_1a829d997_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a82a0735_FindEnum(_1a829d997_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a82a0a76_FindTypeEnum(_1a829d997_SymTab* _self_, jule::Str _9728_ident);
inline jule::I64 _1a82a103d_findVar1(_1a829d997_SymTab* _self_, jule::Ptr<_1a83cc1ad_Var>* _10825_v);
inline jule::Ptr<_1a83cc1ad_Var> _1a82a14e4_findVar(_1a829d997_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a82a199a_findTypeAlias(_1a829d997_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1a82a1d96_defByIdent(_1a829d997_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1a82a234c_isDuplicatedIdent(_1a829d997_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1a82a32a4_Str(_1a82a2da8_Trait* _self_);
inline jule::Bool _1a82a35e5_Equal(jule::Ptr<_1a82a2da8_Trait> _self_, jule::Ptr<_1a8535877_Type> _2518_other);
inline jule::Ptr<_1a8297694_Fn> _1a82a3a8a_FindMethod(_1a82a2da8_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a8297694_Fn> _1a82a421c_findMethodInherit(_1a82a2da8_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a82a4dcc_AutoExpr(_1a82a4a03_EnumItem* _self_);
inline jule::Str _1a82a5916_Str(_1a82a555e_Enum* _self_);
inline jule::Bool _1a82a5c57_Equal(jule::Ptr<_1a82a555e_Enum> _self_, jule::Ptr<_1a8535877_Type> _3818_other);
inline jule::Ptr<_1a82a4a03_EnumItem> _1a82a6186_FindItem(_1a82a555e_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a82a70dd_Str(_1a82a6c69_TypeEnum* _self_);
inline jule::Bool _1a82a742e_Equal(jule::Ptr<_1a82a6c69_TypeEnum> _self_, jule::Ptr<_1a8535877_Type> _8018_other);
inline jule::Ptr<_1a82a6692_TypeEnumItem> _1a82a785d_FindItem(_1a82a6c69_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a8327e72_Str(_1a8327a76_comptimeRange* _self_);
inline jule::Bool _1a83282b3_Equal(jule::Ptr<_1a8327a76_comptimeRange> _self_, jule::Ptr<_1a8535877_Type> _2718_other);
inline jule::Str _1a8328989_Str(_1a83285d2_comptimeStructField* _self_);
inline jule::Bool _1a8328cca_Equal(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a8535877_Type> _3718_other);
inline jule::Ptr<_1a85028cc_Data> _1a83292d6__Decl(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a850489b_eval>* _4127_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83296d2__Type(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a850489b_eval>* _5327_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8329a23_subIdent(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1a832a23d_Str(_1a8329d75_comptimeStructFields* _self_);
inline jule::Bool _1a832a57e_Equal(jule::Ptr<_1a8329d75_comptimeStructFields> _self_, jule::Ptr<_1a8535877_Type> _9018_other);
inline void _1a832aa13_ready(_1a8329d75_comptimeStructFields* _self_, jule::Ptr<_1a83cc1ad_Var>* _9426_keyA, jule::Ptr<_1a83cc1ad_Var>* _9443_keyB);
inline void _1a832ad76_index(_1a8329d75_comptimeStructFields* _self_, jule::Ptr<_1a85028cc_Data>* _11526_d, jule::I64 _11536_i);
inline void _1a832b294_step(_1a8329d75_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1a83cc1ad_Var>* _12633_keyA, jule::Ptr<_1a83cc1ad_Var>* _12650_keyB);
inline jule::I64 _1a832b52a_len(_1a8329d75_comptimeStructFields* _self_);
inline jule::Str _1a832bbac_Str(_1a832b805_comptimeStatic* _self_);
inline jule::Bool _1a832beed_Equal(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a8535877_Type> _15018_other);
inline jule::Ptr<_1a85028cc_Data> _1a832c509__Decl(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a850489b_eval>* _15427_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1a85028cc_Data> _1a832c905__Type(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a850489b_eval>* _16627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1a85028cc_Data> _1a832cc46_subIdent(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1a832d461_Str(_1a832d0a9_comptimeStatics* _self_);
inline jule::Bool _1a832d7a2_Equal(jule::Ptr<_1a832d0a9_comptimeStatics> _self_, jule::Ptr<_1a8535877_Type> _20318_other);
inline void _1a832dc36_ready(_1a832d0a9_comptimeStatics* _self_, jule::Ptr<_1a83cc1ad_Var>* _20726_keyA, jule::Ptr<_1a83cc1ad_Var>* _20743_keyB);
inline void _1a832e099_index(_1a832d0a9_comptimeStatics* _self_, jule::Ptr<_1a85028cc_Data>* _22826_d, jule::I64 _22836_i);
inline void _1a832e4b7_step(_1a832d0a9_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1a83cc1ad_Var>* _23933_keyA, jule::Ptr<_1a83cc1ad_Var>* _23950_keyB);
inline jule::I64 _1a832e74d_len(_1a832d0a9_comptimeStatics* _self_);
inline jule::Str _1a832edd0_Str(_1a832ea28_comptimeEnumField* _self_);
inline jule::Bool _1a8330221_Equal(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Ptr<_1a8535877_Type> _26318_other);
inline jule::Ptr<_1a85028cc_Data> _1a833071b__Decl(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Ptr<_1a850489b_eval>* _26727_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8330a5c_subIdent(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1a83312ee_Str(_1a8330d37_comptimeEnumFields* _self_);
inline jule::Bool _1a8331640_Equal(jule::Ptr<_1a8330d37_comptimeEnumFields> _self_, jule::Ptr<_1a8535877_Type> _30118_other);
inline void _1a8331a4c_ready(_1a8330d37_comptimeEnumFields* _self_, jule::Ptr<_1a83cc1ad_Var>* _30526_keyA, jule::Ptr<_1a83cc1ad_Var>* _30543_keyB);
inline void _1a8331db0_index(_1a8330d37_comptimeEnumFields* _self_, jule::Ptr<_1a85028cc_Data>* _32626_d, jule::I64 _32636_i);
inline void _1a83322cd_step(_1a8330d37_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1a83cc1ad_Var>* _33733_keyA, jule::Ptr<_1a83cc1ad_Var>* _33750_keyB);
inline jule::I64 _1a8332564_len(_1a8330d37_comptimeEnumFields* _self_);
inline jule::Str _1a8332be6_Str(_1a833283e_comptimeParam* _self_);
inline jule::Bool _1a8333037_Equal(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a8535877_Type> _36118_other);
inline jule::Ptr<_1a85028cc_Data> _1a8333554__Decl(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _36527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8333950__Type(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _37727_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8333d4b__Recv(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _38527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833418c_subIdent(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1a8334940_Str(_1a8334698_comptimeParams* _self_);
inline jule::Bool _1a8334c81_Equal(jule::Ptr<_1a8334698_comptimeParams> _self_, jule::Ptr<_1a8535877_Type> _43418_other);
inline void _1a8335215_ready(_1a8334698_comptimeParams* _self_, jule::Ptr<_1a83cc1ad_Var>* _43826_keyA, jule::Ptr<_1a83cc1ad_Var>* _43843_keyB);
inline void _1a8335578_index(_1a8334698_comptimeParams* _self_, jule::Ptr<_1a85028cc_Data>* _45926_d, jule::I64 _45936_i);
inline void _1a8335996_step(_1a8334698_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1a83cc1ad_Var>* _47033_keyA, jule::Ptr<_1a83cc1ad_Var>* _47050_keyB);
inline jule::I64 _1a8335c2c_len(_1a8334698_comptimeParams* _self_);
inline jule::Str _1a83363ae_Str(_1a8336007_comptimeTypeInfos* _self_);
inline jule::Bool _1a8336700_Equal(jule::Ptr<_1a8336007_comptimeTypeInfos> _self_, jule::Ptr<_1a8535877_Type> _49418_other);
inline void _1a8336b84_ready(_1a8336007_comptimeTypeInfos* _self_, jule::Ptr<_1a83cc1ad_Var>* _49826_keyA, jule::Ptr<_1a83cc1ad_Var>* _49843_keyB);
inline void _1a8336ee7_index(_1a8336007_comptimeTypeInfos* _self_, jule::Ptr<_1a85028cc_Data>* _51926_d, jule::I64 _51936_i);
inline void _1a8337415_step(_1a8336007_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1a83cc1ad_Var>* _52833_keyA, jule::Ptr<_1a83cc1ad_Var>* _52850_keyB);
inline jule::I64 _1a833769b_len(_1a8336007_comptimeTypeInfos* _self_);
inline jule::Str _1a8337d2d_Str(_1a8337976_comptimeTypeInfo* _self_);
inline jule::Bool _1a833816e_Equal(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a8535877_Type> _55218_other);
inline jule::Ptr<_1a85028cc_Data> _1a83387ac__Decl(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _55627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8338ba8__Str(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _59322_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83390a4__Kind(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _60627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83394a0__Bits(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _68627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833989b__Elem(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _71027_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8339c97__Size(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _74327_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833a193__Key(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _76226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833a58e__Value(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _77528_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833a98a__Fields(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _78829_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833ad86__Statics(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _81730_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833b282__Binded(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _83629_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833b67d__Ordered(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _84926_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833ba79__Comparable(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _86229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833be75__Mutable(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _87526_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833c371__Types(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _88828_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833c76c__CanNil(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _91129_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833cb68__GC(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _92425_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833d064__Result(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _93729_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833d460__Params(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _95329_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833d7a1_subIdent(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1a833de33_Str(_1a833da7b_comptimeValue* _self_);
inline jule::Bool _1a833e274_Equal(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a8535877_Type> _111818_other);
inline jule::Ptr<_1a85028cc_Data> _1a833e7d5__Unwrap(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _112229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1a85028cc_Data> _1a833ebd1__Type(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _113027_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83400cc__Lvalue(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _113829_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83404c8__Mutable(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _115130_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83408c4__Const(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _116428_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8340cc0__Field(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _117728_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83411bb__Method(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _121229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834150c_subIdent(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1a8341b8e_Str(_1a83417d7_comptimeFiles* _self_);
inline jule::Bool _1a8341ed0_Equal(jule::Ptr<_1a83417d7_comptimeFiles> _self_, jule::Ptr<_1a8535877_Type> _132218_other);
inline void _1a8342464_ready(_1a83417d7_comptimeFiles* _self_, jule::Ptr<_1a83cc1ad_Var>* _132626_keyA, jule::Ptr<_1a83cc1ad_Var>* _132643_keyB);
inline void _1a83427c7_index(_1a83417d7_comptimeFiles* _self_, jule::Ptr<_1a85028cc_Data>* _134726_d, jule::I64 _134736_i);
inline void _1a8342be5_step(_1a83417d7_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1a83cc1ad_Var>* _135833_keyA, jule::Ptr<_1a83cc1ad_Var>* _135850_keyB);
inline jule::I64 _1a8342e7b_len(_1a83417d7_comptimeFiles* _self_);
inline jule::Str _1a834360d_Str(_1a8343256_comptimeFile* _self_);
inline jule::Bool _1a834394e_Equal(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a8535877_Type> _138218_other);
inline jule::Ptr<_1a85028cc_Data> _1a8343e6b__Path(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _138627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8344367__Name(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _139927_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8344763__Dir(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _141226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8344aa4_subIdent(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1a8345467_Str(_1a8344d7e_comptimeDecls* _self_);
inline jule::Bool _1a83457a8_Equal(jule::Ptr<_1a8344d7e_comptimeDecls> _self_, jule::Ptr<_1a8535877_Type> _146118_other);
inline void _1a8345b2c_ready(_1a8344d7e_comptimeDecls* _self_, jule::Ptr<_1a83cc1ad_Var>* _146526_keyA, jule::Ptr<_1a83cc1ad_Var>* _146543_keyB);
inline void _1a8345e90_index(_1a8344d7e_comptimeDecls* _self_, jule::Ptr<_1a85028cc_Data>* _148626_d, jule::I64 _148636_i);
inline void _1a83463ad_step(_1a8344d7e_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1a83cc1ad_Var>* _149533_keyA, jule::Ptr<_1a83cc1ad_Var>* _149550_keyB);
inline jule::I64 _1a8346644_len(_1a8344d7e_comptimeDecls* _self_);
inline jule::Str _1a8347524_Str(_1a834716c_comptimeDecl* _self_);
inline jule::Bool _1a8347865_Equal(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a8535877_Type> _153418_other);
inline jule::Str _1a8347cb6_declAsStr(_1a834716c_comptimeDecl* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a83481b2__Name(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _156527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83485ad__Public(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _160329_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83489a9__Binded(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _164129_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8348da5__Exceptional(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _167534_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1a85028cc_Data> _1a83492a1__Mutable(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _169630_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834969c__Variadic(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _172931_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8349a98__Reference(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _176032_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1a85028cc_Data> _1a8349e94__Params(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _179229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834a390__Fields(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _182729_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834a78b__Statics(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _186830_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834ab87__Methods(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _190430_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1a85028cc_Data> _1a834aec8_subIdent(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*> _1a834de87_readyFn(jule::Ptr<_1a834da58_constraintChecker> _self_);
inline jule::Bool _1a834e21d_readyFi(jule::Ptr<_1a834da58_constraintChecker> _self_);
inline jule::Bool _1a834e4a4_readySi(jule::Ptr<_1a834da58_constraintChecker> _self_);
inline jule::Bool _1a834e73a_ready(jule::Ptr<_1a834da58_constraintChecker> _self_);
inline jule::Bool _1a834e9c1_check(jule::Ptr<_1a834da58_constraintChecker> _self_);
inline jule::Bool _1a8351253_IsTraitImpl(_1a8350d57_Impl* _self_);
inline jule::Bool _1a83514d9_IsStructImpl(_1a8350d57_Impl* _self_);
inline jule::Bool _1a8356be8_IsWhileNext(_1a8356852_WhileIter* _self_);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a835d0a6_SelectPackage(_1a835cacd_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _35429_selector);
inline jule::Ptr<_1a83cc1ad_Var> _1a835d4a2_FindVar(_1a835cacd_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a835d89d_FindTypeAlias(_1a835cacd_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded);
inline jule::Ptr<_1a81be610_Struct> _1a835dc99_FindStruct(_1a835cacd_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded);
inline jule::Ptr<_1a8297694_Fn> _1a835e195_FindFn(_1a835cacd_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded);
inline jule::Ptr<_1a82a2da8_Trait> _1a835e4d6_FindTrait(_1a835cacd_scopeChecker* _self_, jule::Str _42525_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a835e827_FindEnum(_1a835cacd_scopeChecker* _self_, jule::Str _43424_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a835eb68_FindTypeEnum(_1a835cacd_scopeChecker* _self_, jule::Str _44328_ident);
inline jule::Bool _1a835eeba_isUnsafe(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline jule::Bool _1a8360251_isRoot(_1a835cacd_scopeChecker* _self_);
inline void _1a836044e_stop(_1a835cacd_scopeChecker* _self_);
inline jule::Bool _1a83606d5_stopped(_1a835cacd_scopeChecker* _self_);
inline jule::Bool _1a836096b_isDeferred(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline void _1a8360c24_pushCaptured(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a83cc1ad_Var>* _50534_v);
inline jule::Ptr<_1a835cacd_scopeChecker> _1a8360eaa_getRoot(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline jule::Ptr<_1a835cacd_scopeChecker> _1a8361241_getHardRoot(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline jule::Ptr<_1a83790c2_ReferenceStack> _1a83614c7_getOwnerRefers(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline jule::Ptr<_1a83cc1ad_Var> _1a8361818_findVar(_1a835cacd_scopeChecker* _self_, jule::Str _55223_ident);
inline jule::Ptr<_1a8357eb3_Label> _1a8361b59_findLabel(_1a835cacd_scopeChecker* _self_, jule::Str* _57326_ident);
inline jule::Ptr<_1a835b714_scopeLabel> _1a8361e9a_findLabelScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Str* _58932_ident);
inline jule::Ptr<_1a835b714_scopeLabel> _1a83622db_findLabelAll(_1a835cacd_scopeChecker* _self_, jule::Str* _60029_ident);
inline jule::Bool _1a83626d7_isDuplicatedIdent(_1a835cacd_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident);
inline void _1a8362990_checkVarDecl(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b1b41_VarDecl> _63233_decl);
inline void _1a8362c48_checkTypeAlias(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _66336_ta);
inline void _1a8363001_checkTypeAliasDecl(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b57e3_TypeAliasDecl> _67939_decl);
inline jule::Ptr<_1a8355466_Scope> _1a8363287_getChild(_1a835cacd_scopeChecker* _self_);
inline void _1a83636a5_checkChildSsc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _69035_tree, jule::Ptr<_1a8355466_Scope>* _69063_s, jule::Ptr<_1a835cacd_scopeChecker>* _69079_ssc);
inline jule::Ptr<_1a8355466_Scope> _1a8363aa1_checkChildSc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _69734_tree, jule::Ptr<_1a835cacd_scopeChecker>* _69762_ssc);
inline jule::Ptr<_1a8355466_Scope> _1a8363de2_checkChild(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _70332_tree);
inline void _1a836419a_checkAnonScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree> _70835_tree);
inline void _1a836450d_processErrorCall(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8293519_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1a81881cd_Token> _71369_err);
inline void _1a83647b6_checkExpr(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81a302d_Expr> _72630_expr);
inline jule::Ptr<_1a8355884_If> _1a8364b07_checkIf(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4726_If> _75628_i);
inline jule::Ptr<_1a8355b81_Else> _1a8364e48_checkElse(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4b00_Else> _77630_e);
inline void _1a8365201_checkConditional(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b50a6_Conditional> _78237_conditional);
inline void _1a83656c9_checkIterScopeSsc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1a81adce7_ScopeTree> _79851_tree, jule::Ptr<_1a8355466_Scope>* _79879_s, jule::Ptr<_1a835cacd_scopeChecker> _79894_ssc);
inline jule::Ptr<_1a8355466_Scope> _1a8365b80_checkIterScopeSc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1a81adce7_ScopeTree> _80350_tree, jule::Ptr<_1a835cacd_scopeChecker> _80377_ssc);
inline jule::Ptr<_1a8355466_Scope> _1a836607b_checkIterScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1a81adce7_ScopeTree>* _80949_tree);
inline void _1a8366334_checkInfIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _81434_it);
inline void _1a83665dc_checkWhileIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _82036_it);
inline void _1a8366a0a_checkComptimeRangeIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _87044_it, jule::Ptr<_1a835729d_RangeIter>* _87065_kind, jule::Ptr<_1a85028cc_Data>* _87088_d);
inline void _1a8366cb3_checkRangeIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _92736_it);
inline void _1a836706b_checkIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter> _99430_it);
inline jule::Bool _1a83673ac_checkValidContLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _101836_it);
inline jule::Bool _1a83676ed_checkValidBreakLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _103437_ptr);
inline jule::Ptr<_1a8357633_ContSt> _1a8367a3e_checkContValidScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4270_ContSt> _105736_c);
inline void _1a8367ce7_checkCont(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4270_ContSt> _108126_c);
inline void _1a83680a0_checkLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab2cd_LabelSt> _112831_l);
inline void _1a8368358_pushGoto(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab6a7_GotoSt> _114729_gt);
inline void _1a8368611_checkPostfix(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt> _115833_a);
inline jule::Bool _1a8368952_isNewAssignIdent(_1a835cacd_scopeChecker* _self_, jule::Str _119432_ident);
inline void _1a8368c0a_removeInteriorMutRisk(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a85028cc_Data>* _120743_d);
inline jule::Bool _1a836e01d_checkStructureAssignOp(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81c246a_StructIns>* _122144_s, jule::Ptr<_1a81ac697_AssignSt>* _122164_a, jule::Ptr<_1a85028cc_Data>* _122188_r);
inline void _1a836e2c6_checkSingleAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt>* _126039_a);
inline void _1a836e914_processEndPartOfMultiAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359459_MultiAssign>* _134549_st, jule::Ptr<_1a81ac697_AssignSt>* _134572_a, jule::Ptr<_1a81ac114_AssignLeft>* _13468_lexpr, jule::Ptr<_1a85028cc_Data>* _134638_l, jule::Ptr<_1a85028cc_Data>* _134653_r, jule::Bool _134663_strict);
inline void _1a836ebbc_checkMultiAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt>* _142138_a);
inline void _1a836ee75_checkAssignSt(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt> _149234_a);
inline jule::Ptr<_1a8355466_Scope> _1a8370371_checkCaseScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a835a6be_Case>* _150332_c, jule::Ptr<_1a81adce7_ScopeTree>* _150347_tree);
inline jule::Ptr<_1a835a6be_Case> _1a83708d2_checkCase(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match> _150930_m, jule::I64 _150941_i, jule::Ptr<_1a81b5c99_Case> _150953_c, jule::Ptr<_1a85028cc_Data> _150972_expr);
inline void _1a8370d00_checkCases(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _158632_m, jule::Ptr<_1a8359b96_Match> _158656_rm, jule::Ptr<_1a85028cc_Data> _158672_expr);
inline jule::Ptr<_1a835a6be_Case> _1a83711eb_checkDefault(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match> _160733_m, jule::Ptr<_1a81b4b00_Else> _160748_d);
inline void _1a837155e_checkComptimePanic(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81881cd_Token> _161539_callToken, jule::Ptr<_1a8355466_Scope>* _161566_s);
inline void _1a83718c2_processConstMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match>* _164739_tm, jule::Ptr<_1a81b65b3_MatchCase>* _164756_m);
inline void _1a8371b7a_checkTypeMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _167636_m);
inline void _1a8371e33_checkCommonMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _171938_m);
inline void _1a83721db_checkMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase> _177031_m);
inline void _1a8372494_checkFall(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab9a4_FallSt> _177826_f);
inline jule::Ptr<_1a8357a0c_BreakSt> _1a83727d5_checkBreakWithLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _180136_b);
inline jule::Ptr<_1a8357a0c_BreakSt> _1a8372b26_checkPlainBreak(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _185932_b);
inline void _1a8372dce_checkBreak(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _188127_b);
inline void _1a8373187_checkRet(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b201a_RetSt> _189229_r);
inline void _1a8373440_checkUseExpr(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81a3902_UseExpr> _191829_ue);
inline void _1a83736e8_checkNode(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Any* _193431_node);
inline void _1a83738e6_checkResult(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline void _1a8373ae4_checkTree(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline void _1a8373e57_checkGoto(_1a835cacd_scopeChecker* _self_, jule::Ptr<_1a8358623_GotoSt>* _203730_gt, jule::Ptr<_1a835b714_scopeLabel>* _203748_label);
inline void _1a8374155_checkGotos(_1a835cacd_scopeChecker* _self_);
inline void _1a8374353_checkLabels(_1a835cacd_scopeChecker* _self_);
inline void _1a8374551_checkVars(_1a835cacd_scopeChecker* _self_);
inline void _1a837474e_checkAliases(_1a835cacd_scopeChecker* _self_);
inline void _1a8374ab2_check(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _213227_tree, jule::Ptr<_1a8355466_Scope>* _213255_s);
inline jule::Ptr<_1a835cacd_scopeChecker> _1a8374d48_newChildChecker(jule::Ptr<_1a835cacd_scopeChecker> _self_);
inline void _1a8376c18_checkCdef(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _1626_d);
inline void _1a8376ec1_checkTypedef(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _3229_d);
inline void _1a8377279_checkNamespace(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _4835_d);
inline void _1a8377532_checkDeprecated(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _10036_d);
inline void _1a83777da_checkTest(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _14126_d);
inline void _1a8377a93_checkExport(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _16232_d);
inline void _1a8377d4b_checkDirective(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _20035_d);
inline void _1a8378049_check(_1a83767b7_directiveChecker* _self_);
inline jule::Ptr<_1a83790c2_ReferenceStack> static__1a8379435_new(void);
inline jule::I64 _1a8379831_Len(_1a83790c2_ReferenceStack* _self_);
inline jule::Any _1a8379b72_At(_1a83790c2_ReferenceStack* _self_, jule::I64 _4318_i);
inline void _1a8379e2a_Push(_1a83790c2_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _1aa1a2b0d_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a829a752_FnIns> _5320_t);
inline jule::Bool _1aa1b9372_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a83cc1ad_Var> _5320_t);
inline jule::Bool _1aa2a2a54_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a81c246a_StructIns> _5320_t);
inline jule::Bool _1aa71eb2a_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a82a2da8_Trait> _5320_t);
inline void _1a8380ace_pushErr(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81881cd_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args);
inline void _1a8381360_pushSuggestion(_1a83800c8_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args);
inline jule::Bool _1a838175b_checkCppUseDeclPath(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _32036_decl, jule::Str* _32058_path);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a8381a69_buildCppHeaderImport(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _34041_decl);
inline jule::Str _1a8381e65_checkAbsPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1a81b6b46_UseDecl>* _37053_decl);
inline jule::Str _1a8382361_checkStdAbsPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1a81b6b46_UseDecl>* _39956_decl);
inline __jule_tuple_bool__jule_tuple_str _1a83826a2_checkImpPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _42234_decl);
inline void _1a838295a_assignAlias(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo>* _45233_imp);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a8382c9b_buildImport(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _45933_decl);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a83830dc_findUseDecl(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _48628_pkg);
inline jule::Bool _1a838342d_checkDuplicateUseDecl(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _49442_pkg);
inline jule::Str _1a838376e_getAsLinkPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _50434_path);
inline void _1a8383b8c_pushCycleError(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a83800c8_symBuilder>* _52532_sb, jule::Str _52549_path, _21ca86171_Builder* _52565_message);
inline void _1a83840aa_pushCrossCycleError(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a83800c8_symBuilder>* _53837_target, jule::Ptr<_1a838b14a_ImportInfo>* _53859_imp, jule::Ptr<_1a81881cd_Token>* _53878_errorToken);
inline jule::Bool _1a83844a6_checkImportCycles(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo> _56134_imp, jule::Ptr<_1a81b6b46_UseDecl>* _56153_decl);
inline void _1a83848c4_checkPackageAccessibility(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path);
inline jule::Bool _1a8384cc0_importPackage(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo>* _62235_imp, jule::Ptr<_1a81b6b46_UseDecl>* _62258_decl);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a8385111_importUseDecl(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _66835_decl);
inline void _1a838530e_importUseDecls(jule::Ptr<_1a83800c8_symBuilder> _self_);
inline void _1a83855b7_appendNode(_1a83800c8_symBuilder* _self_, _1a819cbe8_Node* _69731_node);
inline void _1a83857b5_appendNodes(_1a83800c8_symBuilder* _self_);
inline void _1a8385a6d_pushDirectivePass(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a819d116_Directive>* _73338_d);
inline void _1a8385c6b_appendTopDirectives(_1a83800c8_symBuilder* _self_);
inline void _1a8385e69_build(jule::Ptr<_1a83800c8_symBuilder> _self_);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a838b667_SelectPackage(_1a838b14a_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> );
inline jule::Ptr<_1a83cc1ad_Var> _1a838ba63_FindVar(_1a838b14a_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a8534a85_TypeAlias> _1a838be5e_FindTypeAlias(_1a838b14a_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a81be610_Struct> _1a838c35a_FindStruct(_1a838b14a_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a8297694_Fn> _1a838c756_FindFn(_1a838b14a_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a82a2da8_Trait> _1a838ca97_FindTrait(_1a838b14a_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a838cdd8_FindEnum(_1a838b14a_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a838d229_FindTypeEnum(_1a838b14a_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a838d5e2_isLookupable(_1a838b14a_ImportInfo* _self_);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a838dd95_SelectPackage(_1a838d8bc_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> );
inline jule::Ptr<_1a83cc1ad_Var> _1a838e291_FindVar(_1a838d8bc_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a838e68c_FindTypeAlias(_1a838d8bc_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1a81be610_Struct> _1a838ea88_FindStruct(_1a838d8bc_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1a8297694_Fn> _1a838ee84_FindFn(_1a838d8bc_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1a82a2da8_Trait> _1a83902c5_FindTrait(_1a838d8bc_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a8390616_FindEnum(_1a838d8bc_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a8390957_FindTypeEnum(_1a838d8bc_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1a8337976_comptimeTypeInfo> _1a83a7d15_pushComptimeTypeInfo(_1a83a7870_commonSemaMeta* _self_, jule::Ptr<_1a8535877_Type>* _21341_t);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a83a8970_SelectPackage(_1a83a8497_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _24229_selector);
inline jule::Ptr<_1a83cc1ad_Var> _1a83a8d6b_FindVar(_1a83a8497_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a83a9267_FindTypeAlias(_1a83a8497_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded);
inline jule::Ptr<_1a81be610_Struct> _1a83a9663_FindStruct(_1a83a8497_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded);
inline jule::Ptr<_1a8297694_Fn> _1a83a9a5e_FindFn(_1a83a8497_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded);
inline jule::Ptr<_1a82a2da8_Trait> _1a83a9da0_FindTrait(_1a83a8497_sema* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a83aa1e1_FindEnum(_1a83a8497_sema* _self_, jule::Str _32724_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a83aa532_FindTypeEnum(_1a83a8497_sema* _self_, jule::Str _34228_ident);
inline jule::Bool _1a83aa93e_isFlag(_1a83a8497_sema* _self_, jule::I64 _35418_flags);
inline jule::Ptr<_1a829d997_SymTab> _1a83aabc5_getCurrentFile(_1a83a8497_sema* _self_);
inline void _1a83aae7d_setCurrentFile(_1a83a8497_sema* _self_, jule::Ptr<_1a829d997_SymTab> _35734_f);
inline void _1a83ab39b_pushErr(_1a83a8497_sema* _self_, jule::Ptr<_1a81881cd_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args);
inline void _1a83ab70e_pushSuggestion(_1a83a8497_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args);
inline jule::Bool _1a83abb0a_isAccessibleDefine(_1a83a8497_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1a81881cd_Token> _37044_token);
inline jule::Bool _1a83ac0b1_isDuplicatedIdent(_1a83a8497_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded);
inline void _1a83ac424_checkDirectives(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a819d116_Directive>>* _40237_d, jule::Any _40263_o);
inline jule::Bool _1a83ac8ca_checkGenericQuantity(_1a83a8497_sema* _self_, jule::I64 _41136_required, jule::I64 _41151_given, jule::Ptr<_1a81881cd_Token> _41163_token);
inline jule::Bool _1a83ad90e_isUseAliasDuplication(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _46938_imp);
inline jule::Bool _1a83adc50_checkAutoAlias(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _48135_imp);
inline jule::Bool _1a83ae091_checkImport(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _49932_imp);
inline void _1a83ae28e_checkImports(_1a83a8497_sema* _self_);
inline void _1a83ae48c_implFileImpls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83ae68a_implImpls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83ae888_checkEnums(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83aea86_checkFileInherits(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83aec84_checkInherits(jule::Ptr<_1a83a8497_sema> _self_);
inline _1a8547c74_typeChecker _1a83b023a_typeChecker(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _59247_generics, jule::Ptr<_1a8546c84_referencer> _5937_referencer);
inline jule::Ptr<_1a8535877_Type> _1a83b079b_buildTypeWithRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6207_generics, jule::Ptr<_1a8546c84_referencer> _62035_referencer);
inline jule::Bool _1a83b0d0c_checkTypeSymWithRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d088_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6277_generics, jule::Ptr<_1a8546c84_referencer> _62735_referencer);
inline jule::Ptr<_1a834da58_constraintChecker> _1a83b1093_constraintChecker(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Bool _1a83b148e_checkTypeSym(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d088_TypeSym>* _64134_t, jule::Trait _64151_l);
inline jule::Ptr<_1a8535877_Type> _1a83b1945_checkTypeSymRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1a83790c2_ReferenceStack> _64678_refers);
inline jule::Ptr<_1a8535877_Type> _1a83b1deb_buildTypeWithGenerics(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6597_generics, jule::Ptr<_1a83790c2_ReferenceStack> _65935_refers);
inline jule::Ptr<_1a8535877_Type> _1a83b257d_selectType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _67632_t);
inline jule::Ptr<_1a850489b_eval> _1a83b2a34_evalpd(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1a8535877_Type> _68842_p, jule::Ptr<_1a83cc1ad_Var> _68856_owner);
inline jule::Ptr<_1a850489b_eval> _1a83b2e30_evalp(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1a8535877_Type> _70341_p);
inline jule::Ptr<_1a850489b_eval> _1a83b3271_eval(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _70825_l);
inline jule::Bool _1a83b388c_checkAssignType(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1a8535877_Type>* _71254_dest, jule::Ptr<_1a85028cc_Data>* _7138_d, jule::Ptr<_1a81881cd_Token> _71322_errorToken, jule::Ptr<_1a83790c2_ReferenceStack> _71353_refers);
inline jule::Bool _1a83b3d43__checkTypeCompatibility(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _75545_dest, jule::Ptr<_1a8535877_Type>* _75563_src, jule::Ptr<_1a81881cd_Token> _7567_errorToken);
inline jule::Bool _1a83b42e9_checkTypeCompatibility(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _77344_dest, jule::Ptr<_1a8535877_Type>* _7748_src, jule::Ptr<_1a81881cd_Token>* _77425_errorToken);
inline void _1a83b4717_pushCompatiblityError(_1a83a8497_sema* _self_, jule::Ptr<_1a8535877_Type>* _78242_dest, jule::Ptr<_1a85028cc_Data>* _78260_src, jule::Ptr<_1a81881cd_Token>* _7838_errorToken);
inline jule::Bool _1a83b4bbd_checkTypeCompatibility1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _80045_dest, jule::Ptr<_1a85028cc_Data>* _80063_src, jule::Ptr<_1a81881cd_Token>* _8018_errorToken);
inline jule::Ptr<_1a8535877_Type> _1a83b5174_buildNonGenericType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1a8535877_Type>>* _81644_ignored);
inline jule::Bool _1a83b5570_buildFnNonGenericTypes(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns> _82743_f, jule::Slice<jule::Ptr<_1a8535877_Type>>* _82759_ignored);
inline jule::Ptr<_1a829a752_FnIns> _1a83b58b1_getTraitCheckFnKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _85041_f);
inline jule::Bool _1a83b5d67_checkConstraintsFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _87940_f, jule::Ptr<_1a81881cd_Token>* _87956_et, jule::Ptr<_1a829a752_FnIns> _87979_exist);
inline jule::Bool _1a83b631d_checkConstraintsStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _89344_s, jule::Ptr<_1a81881cd_Token>* _89364_et, jule::Ptr<_1a81c246a_StructIns> _89387_exist);
inline jule::Bool _1a83b6719_basicFnEnvironment(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*> _91051_algo);
inline jule::Bool _1a83b6b15_fnEnvironment(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*> _93046_algo);
inline void _1a83b6dbd_checkFnParamKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82995ec_ParamIns>* _94238_p);
inline jule::Bool _1a83b720e_reloadFnInsTypes(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns> _94937_f);
inline jule::Bool _1a83b76b5_checkRefValidityForInitExpr(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _98944_leftMut, jule::Ptr<_1a85028cc_Data>* _98964_d, jule::Ptr<_1a81881cd_Token>* _98979_errorToken);
inline jule::Bool _1a83b7a06_isMutRiskyStruct(_1a83a8497_sema* _self_, jule::Ptr<_1a81c246a_StructIns>* _100629_s);
inline jule::Bool _1a83b8122_checkValidityForInitExpr(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _103341_leftMut, jule::Bool _103356_leftRef, jule::Ptr<_1a8535877_Type>* _10344_leftKind, jule::Ptr<_1a85028cc_Data>* _103426_d, jule::Ptr<_1a81881cd_Token>* _103441_errorToken);
inline jule::Bool _1a83b851d_checkTypeAliasDeclKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _106144_ta, jule::Trait _106164_l);
inline void _1a83b8881_checkTypeAliasDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _108440_ta, jule::Trait _108460_l);
inline void _1a83b8b39_checkTypeAliasDeclDup(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _109243_ta);
inline jule::Bool _1a83b8dc0_checkTypeAliasDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a9c86846_checkEnumItemsDup(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _111636_items);
inline void _1a9c949b9_checkEnumItemsDup(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _111636_items);
inline void _1a83b9431_checkEnumItemsStr(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _113639_e);
inline void _1a9c65825_checkEnumItemInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a850489b_eval>* _116343_eval, jule::Ptr<_1a82a555e_Enum>* _116361_e, jule::Ptr<_1a853d990_Prim>* _116372_prim, jule::Ptr<_1a82a4a03_EnumItem>* _116390_item, jule::U64* _1163112_n);
inline void _1a9c76380_checkEnumItemInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a850489b_eval>* _116343_eval, jule::Ptr<_1a82a555e_Enum>* _116361_e, jule::Ptr<_1a853d990_Prim>* _116372_prim, jule::Ptr<_1a82a4a03_EnumItem>* _116390_item, jule::I64* _1163112_n);
inline void _1a9c61986_checkEnumItemsInt1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d990_Prim>* _119941_prim, jule::Ptr<_1a82a555e_Enum>* _119959_e);
inline void _1a9c61c61_checkEnumItemsInt1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d990_Prim>* _119941_prim, jule::Ptr<_1a82a555e_Enum>* _119959_e);
inline void _1a83ba0d0_checkEnumItemsInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _123439_e);
inline void _1a83ba388_checkEnumDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _124435_e);
inline void _1a83ba641_checkTypeEnumDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a6c69_TypeEnum>* _128539_e);
inline jule::Bool _1a83ba8c7_checkEnumDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Bool _1a83bab5d_checkTypeEnumDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Bool _1a83bae9e_checkDeclGenerics(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _134834_generics);
inline jule::Bool _1a83bb2e0_checkFnDeclParamsDup(_1a83a8497_sema* _self_, jule::Ptr<_1a8297694_Fn>* _137537_f);
inline jule::Bool _1a83bb631_checkFnDeclResultDup(_1a83a8497_sema* _self_, jule::Ptr<_1a8297694_Fn>* _141237_f);
inline jule::Bool _1a83bb972_checkFnVariadicParam(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _145742_f);
inline void _1a83bbc2a_checkFnDeclPrototype(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _147042_f);
inline jule::Bool _1a83bc1d1_catchTraitInheritCycle(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait> _149239_t1, jule::Ptr<_1a82a2da8_Trait> _149255_t2, _21ca86171_Builder* _149272_message);
inline jule::Bool _1a83bc522__checkTraitDeclInherits(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _151145_t);
inline void _1a83bc7ca_checkTraitDeclInherits(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _155244_t);
inline void _1a83bca83_checkTraitDeclMethod(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _157742_f);
inline void _1a83bcd3b_checkTraitDeclMethods(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _159143_t);
inline void _1a83bd0e4_checkTraitDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _162736_t);
inline jule::Bool _1a83bd37a_checkTraitDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Bool _1a83bd776_checkTraitImplMethods(_1a83a8497_sema* _self_, jule::Ptr<_1a82a2da8_Trait>* _165142_base, jule::Ptr<_1a8350d57_Impl>* _165157_ipl);
inline jule::Bool _1a83bdb72_implToStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _166234_dest, jule::Ptr<_1a8350d57_Impl>* _166254_ipl);
inline void _1a83bde2a_implTrait(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _170431_decl);
inline void _1a83be1d3_implStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _174732_decl);
inline void _1a83be48b_implImpl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _177130_decl);
inline void _1a83be7ee_checkVarDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _178234_decl, jule::Trait _178250_l);
inline void _1a83beaa7_checkGlobalVarDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _182840_decl);
inline jule::Bool _1a83bed3d_checkGlobalDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Bool _1a83c0239_checkStructTraitImpl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _185642_strct, jule::Ptr<_1a82a2da8_Trait>* _185663_trt);
inline jule::Bool _1a83c057a_checkStructImpls(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _188238_s);
inline jule::Bool _1a83c08bb_checkStructFields(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _189039_st);
inline void _1a83c0b74_checkStructDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _190737_s);
inline jule::Bool _1a83c0e0a_checkStructDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c11b3_checkAnonFuncDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _193739_f);
inline void _1a83c146b_checkFuncDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _194235_f);
inline jule::Bool _1a83c17ac_checkFuncDeclsBy(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a8297694_Fn>>* _196438_funcs);
inline jule::Bool _1a83c1a43_checkFuncDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c1e61_pushCycleError(_1a83a8497_sema* _self_, jule::Str* _198027_st1, jule::Str* _198038_st2, _21ca86171_Builder* _198053_message);
inline void _1a83c2615_checkPackageDecls(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c2978_checkDataForTypeInference(_1a83a8497_sema* _self_, jule::Ptr<_1a85028cc_Data>* _204042_d, jule::Ptr<_1a81881cd_Token>* _204053_errToken);
inline void _1a83c2c31_checkVarValue(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _205235_v);
inline void _1a83c3094_evalVarValue(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _210534_decl, jule::Trait _210550_l);
inline void _1a83c3407_checkVar(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _212230_decl, jule::Trait _212246_l);
inline void _1a83c3605_checkGlobals(jule::Ptr<_1a83a8497_sema> _self_);
inline jule::Ptr<_1a829a752_FnIns> _1a83c3a01_readyToCheckFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _214536_s, jule::Ptr<_1a8297694_Fn>* _214556_f);
inline __jule_tuple_bool__jule_tuple_bool _1a83c3dec_checkGenericFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _216136_f, jule::Ptr<_1a81881cd_Token>* _216152_et);
inline void _1a83c4260_checkTypeMethod(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _218437_s, jule::Ptr<_1a8297694_Fn>* _218457_f);
inline jule::Ptr<_1a829a752_FnIns> _1a83c4716_checkStructInsOp(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _219738_s, jule::Ptr<_1a8297694_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1a8297694_Fn>> _219766_p);
inline jule::Bool _1a83c4b12_checkStructEnv(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _220736_s, jule::Ptr<_1a81881cd_Token> _220755_errorToken);
inline jule::Bool _1a83c500d_precheckStructIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _230539_s, jule::Ptr<_1a81881cd_Token> _230558_errorToken);
inline void _1a83c52b6_checkStructIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _234236_s);
inline void _1a83c556e_checkTypeStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _234837_s);
inline void _1a83c576c_checkStructTypes(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c5a25_checkStructInsOperators(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns> _237244_s);
inline void _1a83c5ccd_precheckStructType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _243640_s);
inline void _1a83c5ecb_precheckStructTypes(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c6284_checkRets(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _246530_f);
inline void _1a83c65e7_checkFnInsSc(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _247633_f, jule::Ptr<_1a835cacd_scopeChecker>* _247649_sc);
inline void _1a83c695a_checkFnInsCaller(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _248938_f, jule::Ptr<_1a81881cd_Token> _248953_caller);
inline void _1a83c6c13_checkFnIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _251132_f);
inline void _1a83c6ebb_checkFunc(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _251531_f);
inline void _1a83c7274_checkTestFn(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _253032_f);
inline void _1a83c752c_precheckFunc(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _256334_f);
inline void _1a83c772a_precheckFuncs(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c7928_checkFuncs(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c7b26_checkPackageTypes(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c7d24_setFileSemaFields(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c8022_setSemaFields(jule::Ptr<_1a83a8497_sema> _self_);
inline void _1a83c82ca_check(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _264127_files);
inline _1a83c86c6_missingRetChecker static__1a83c8ac2_new(void);
inline jule::Bool _1a83c8dd0_checkConditional(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a835609e_Conditional> _268932_c);
inline jule::Bool _1a83c9221_checkMatch(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8359b96_Match> _270126_m);
inline jule::Bool _1a83c961c_checkInfIter(_1a83c86c6_missingRetChecker* _self_, jule::Uintptr _272724_it, jule::Ptr<_1a8355466_Scope>* _272742_s);
inline jule::Bool _1a83c995d_checkScope(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8355466_Scope> _274526_s);
inline jule::Bool _1a83c9c9e_check(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8355466_Scope> _280021_s);
inline jule::Bool _1a83cc5ba_IsInitialized(_1a83cc1ad_Var* _self_);
inline jule::Bool _1a83cc851_IsTypeInferred(_1a83cc1ad_Var* _self_);
inline jule::Bool _1a83ccad7_untypedConstant(_1a83cc1ad_Var* _self_);
inline jule::Bool static__1a83cd676_Str(jule::Ptr<_1a8297694_Fn> _1016_f);
inline jule::Bool static__1a83cd9ea_logical(jule::Ptr<_1a8297694_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__1a83cdcb4_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _5815_f);
inline jule::Bool static__1a83ce07d_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _6315_f);
inline jule::Bool static__1a83ce347_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _6817_f);
inline jule::Bool static__1a83ce611_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _7315_f);
inline jule::Bool static__1a83ce8ca_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _7817_f);
inline jule::Bool static__1a83cec4e_result(jule::Ptr<_1a8297694_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__1a83d0018_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _10416_f);
inline jule::Bool static__1a83d02d2_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _10916_f);
inline jule::Bool static__1a83d059b_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _11416_f);
inline jule::Bool static__1a83d0865_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _11916_f);
inline jule::Bool static__1a83d0b2e_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _12416_f);
inline jule::Bool static__1a83d0de8_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _12916_f);
inline jule::Bool static__1a83d11b2_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _13416_f);
inline jule::Bool static__1a83d147b_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _13919_f);
inline jule::Bool static__1a83d1745_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _14418_f);
inline jule::Bool static__1a83d1a0e_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _14919_f);
inline jule::Bool static__1a83d1d83_unary(jule::Ptr<_1a8297694_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__1a83d214c_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _17316_f);
inline jule::Bool static__1a83d2416_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _17816_f);
inline jule::Bool static__1a83d26d0_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _18319_f);
inline jule::Bool static__1a83d2a54_assign(jule::Ptr<_1a8297694_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__1a83d2d1d_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _20722_f);
inline jule::Bool static__1a83d30d7_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _21222_f);
inline jule::Bool static__1a83d33a1_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _21722_f);
inline jule::Bool static__1a83d366a_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _22222_f);
inline jule::Bool static__1a83d3934_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _22722_f);
inline jule::Bool static__1a83d3bed_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _23222_f);
inline jule::Bool static__1a83d3eb7_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _23722_f);
inline jule::Bool static__1a83d4281_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _24224_f);
inline jule::Bool static__1a83d454a_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _24725_f);
inline jule::Bool static__1a83d4814_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _25225_f);
inline void _1a84de19e_pushErr(_1a84ddb71_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1a84de435_checkTrait(_1a84ddb71_typeCompatibilityChecker* _self_);
inline jule::Bool _1a84de6bb_checkPtr(_1a84ddb71_typeCompatibilityChecker* _self_);
inline jule::Bool _1a84de952_checkPrim(_1a84ddb71_typeCompatibilityChecker* _self_);
inline jule::Bool _1a84ded4d_typeEnum(_1a84ddb71_typeCompatibilityChecker* _self_, jule::Ptr<_1a82a6c69_TypeEnum>* _18725_e, jule::Ptr<_1a8535877_Type>* _18744_t2);
inline jule::Bool _1a84e00d4_checkTypeEnum(_1a84ddb71_typeCompatibilityChecker* _self_);
inline jule::Bool _1a84e036a_check(_1a84ddb71_typeCompatibilityChecker* _self_);
inline void _1a84e0eb4_pushErr(_1a84e09ec_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1a84e124a_checkValidity(_1a84e09ec_assignTypeChecker* _self_);
inline jule::Bool _1a84e14d1_checkConst(_1a84e09ec_assignTypeChecker* _self_);
inline jule::Bool _1a84e1767_checkCompatibility(_1a84e09ec_assignTypeChecker* _self_);
inline jule::Bool _1a84e19ed_check(_1a84e09ec_assignTypeChecker* _self_);
inline jule::Bool _1aa004465_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k);
inline jule::Bool _1aa00470c_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k);
inline jule::Bool _1aa00bb54_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k);
inline jule::Bool _1aa016d90_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k);
inline jule::Bool _1a84e2ceb_annotateConstraintMap(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _36642_k);
inline jule::Bool _1a84e313c_annotateConstraintTup(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _38142_k);
inline jule::Bool _1a84e347d_annotateConstraintFn(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _39841_k);
inline jule::Bool _1a84e37be_annotateConstraintIdent(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _41944_k);
inline jule::Bool _1a84e3b10_annotateConstraint(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _44839_k);
inline void _1a84e3e73_pushGeneric(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _47332_k, jule::I64 _47342_i);
inline jule::Bool _1a84e42b4_annotatePrim(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _48840_k);
inline jule::Bool _1a84e4605_annotateArr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _49239_k);
inline jule::Bool _1a84e4946_annotateSlc(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _50239_k);
inline jule::Bool _1a84e4d42_checkMapKey(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _51238_k, jule::Ptr<_1a8535877_Type>* _51254_ck);
inline jule::Bool _1a84e5183_annotateMap(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _52039_k);
inline jule::Bool _1a84e54c4_annotateFn(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _53038_k);
inline jule::Bool _1a84e5815_annotatePtr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _55939_k);
inline jule::Bool _1a84e5b56_annotateSptr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _56940_k);
inline jule::Bool _1a84e5e97_annotateStruct(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _57942_k);
inline jule::Bool _1a84e62d8_annotateAny(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _60139_k);
inline jule::Bool _1a84e6629_annotateKind(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _62240_k);
inline jule::Bool _1a84e68b0_annotate(_1a84e23c2_dynamicTypeAnnotation* _self_);
inline void _1a84e77c3_pushErrToken(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a81881cd_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1a84e7b36_pushErr(_1a84e722e_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _1a84e7dbc_getParams(_1a84e722e_fnCallArgChecker* _self_);
inline jule::Bool _1a84e820d_checkCounts(_1a84e722e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>* _68428_params);
inline jule::Bool _1a84e86b4_checkArg(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _71629_p, jule::Ptr<_1a85028cc_Data>* _71648_arg, jule::Ptr<_1a81881cd_Token>* _71665_errorToken);
inline jule::Bool _1a84e8ab0_push(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _74525_p, jule::Ptr<_1a81a302d_Expr> _74543_arg);
inline jule::Bool _1a84e8eab_pushVariadic(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _76933_p, jule::I64 _76951_i);
inline jule::Bool _1a84e92ec_checkArgs(_1a84e722e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>* _85030_params);
inline jule::Bool _1a84e9583_checkDynamicTypeAnnotation(_1a84e722e_fnCallArgChecker* _self_);
inline jule::Bool _1a84e9819_check(_1a84e722e_fnCallArgChecker* _self_);
inline void _1a84ea6e9_pushErr(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81881cd_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1a84eaa5c_pushSuggestion(_1a84ea166_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1a84eae7a_pushMatch(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81c18ba_FieldIns>* _93930_f, jule::Ptr<_1a85028cc_Data>* _93949_d, jule::Ptr<_1a81881cd_Token>* _93964_errorToken);
inline void _1a84eb2dd_checkPair(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81a774c_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _95862_exprs);
inline jule::Bool _1a84eb62e_readyExprs(_1a84ea166_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _99731_exprs);
inline void _1a84eb8d7_check(_1a84ea166_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _102126_exprs);
inline jule::Ptr<_1a83cc1ad_Var> _1a84ec465_buildVar(_1a84ebe48_rangeChecker* _self_, jule::Ptr<_1a81b1b41_VarDecl>* _109725_decl);
inline void _1a84ec663_setSizeKey(_1a84ebe48_rangeChecker* _self_);
inline void _1a84eca81_checkRangeExprValidity(_1a84ebe48_rangeChecker* _self_, jule::Ptr<_1a85028cc_Data>* _111643_d, jule::Ptr<_1a83cc1ad_Var>* _111654_key, jule::Ptr<_1a8535877_Type>* _111670_k);
inline void _1a84ecc7e_checkSlice(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ece7c_checkArray(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ed17a_checkMapKeyA(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ed378_checkMapKeyB(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ed576_checkMap(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ed774_checkStr(_1a84ebe48_rangeChecker* _self_);
inline void _1a84ed972_checkComptime(_1a84ebe48_rangeChecker* _self_);
inline jule::Bool _1a84edc08_checkComptimeRange(_1a84ebe48_rangeChecker* _self_);
inline jule::Bool _1a84ede8e_check(_1a84ebe48_rangeChecker* _self_);
inline void _1a84eebe8_prepareTypes(_1a84ee786_retTypeChecker* _self_);
inline void _1a84eeea1_prepareExprs(_1a84ee786_retTypeChecker* _self_, jule::Ptr<_1a81a302d_Expr>* _127633_e);
inline void _1a850019e_checkExprs(_1a84ee786_retTypeChecker* _self_);
inline jule::Bool _1a8500435_tryFuncMultiRetForward(_1a84ee786_retTypeChecker* _self_);
inline jule::Bool _1a8500776_check(_1a84ee786_retTypeChecker* _self_, jule::Ptr<_1a81a302d_Expr>* _137926_e);
inline jule::Bool _1a8502cea_IsNil(_1a85028cc_Data* _self_);
inline jule::Bool _1a8503081_IsVoid(_1a85028cc_Data* _self_);
inline jule::Bool _1a8503317_IsConst(_1a85028cc_Data* _self_);
inline jule::Bool _1a8503658_GoodOperand(_1a85028cc_Data* _self_, jule::Ptr<_1a85028cc_Data>* _6228_other);
inline void _1a8504d74_pushErr(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _1a85051d7_pushSuggestion(_1a850489b_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _1a85053d5_allowBuiltin(_1a850489b_eval* _self_);
inline void _1a85055d3_disallowBuiltin(_1a850489b_eval* _self_);
inline jule::Bool _1a8505869_isUnsafe(_1a850489b_eval* _self_);
inline jule::Bool _1a8505b00_isGlobal(_1a850489b_eval* _self_);
inline jule::Bool _1a8505e41_applyNumericPrefix(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _12939_d);
inline jule::Ptr<_1a85028cc_Data> _1a8506282_litStr(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _16419_l);
inline jule::Ptr<_1a85028cc_Data> _1a85065c3_litRune(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _18120_l);
inline jule::Ptr<_1a85028cc_Data> _1a8506914_litFloat(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _20021_l);
inline jule::Ptr<_1a85028cc_Data> _1a8506c55_litInt(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _21223_l);
inline jule::Ptr<_1a85028cc_Data> _1a8507096_litNum(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _26723_l);
inline jule::Ptr<_1a85028cc_Data> _1a85073d7_evalLit(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr> _27623_lit);
inline jule::Any _1a8507728_findBuiltins(_1a850489b_eval* _self_, jule::Str* _28929_ident);
inline jule::Any _1a8507b24_getDef(_1a850489b_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded);
inline jule::Ptr<_1a83790c2_ReferenceStack> _1a8507daa_getOwnerRefers(_1a850489b_eval* _self_);
inline void _1aa1a0534_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _37437_ref);
inline void _1aa1b702e_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _37437_ref);
inline void _1aa2a0458_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns>* _37437_ref);
inline jule::Ptr<_1a85028cc_Data> _1a85084a4__evalEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _38125_enm);
inline jule::Ptr<_1a85028cc_Data> _1a85088a0_evalEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _39028_enm, jule::Ptr<_1a81881cd_Token> _39040_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a8508be1__evalTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _39929_enm);
inline jule::Ptr<_1a85028cc_Data> _1a85090dc_evalTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _40832_enm, jule::Ptr<_1a81881cd_Token> _40848_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a850942d__evalStruct(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns> _41727_s);
inline jule::Ptr<_1a85028cc_Data> _1a8509829_evalStruct(_1a850489b_eval* _self_, jule::Ptr<_1a81be610_Struct> _43130_s, jule::Ptr<_1a81881cd_Token> _43146_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a8509b6a_evalFnIns(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns> _46025_f);
inline void _1a8509ecd_checkDeprecated(_1a850489b_eval* _self_, jule::Slice<jule::Ptr<_1a819d116_Directive>>* _46936_directives, jule::Ptr<_1a81881cd_Token> _46967_tok);
inline jule::Ptr<_1a85028cc_Data> _1a850a3c9_evalFn(_1a850489b_eval* _self_, jule::Ptr<_1a8297694_Fn> _48526_f, jule::Ptr<_1a81881cd_Token> _48534_errorToken);
inline void _1a850a7e7_pushIllegalCycleError(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _51038_v1, jule::Ptr<_1a83cc1ad_Var>* _51049_v2, _21ca86171_Builder* _51064_message);
inline jule::Bool _1a850abe3_checkCrossCycle(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _52032_v, _21ca86171_Builder* _52046_message);
inline jule::Bool _1a850b0de_checkIllegalCycles(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _53739_v, jule::Ptr<_1a81881cd_Token> _53748_declToken);
inline jule::Ptr<_1a85028cc_Data> _1a850b4da_evalVar(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var> _56527_v, jule::Ptr<_1a81881cd_Token> _56536_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a850b8d6_evalTypeAlias(_1a850489b_eval* _self_, jule::Ptr<_1a8534a85_TypeAlias> _66533_ta, jule::Ptr<_1a81881cd_Token> _66549_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a850bcd2_evalDef(_1a850489b_eval* _self_, jule::Any* _70428_def, jule::Ptr<_1a81881cd_Token> _70442_ident);
inline jule::Ptr<_1a85028cc_Data> _1a850c123_evalIdent(_1a850489b_eval* _self_, jule::Ptr<_1a81a4848_IdentExpr> _72829_ident);
inline jule::Ptr<_1a85028cc_Data> _1a850c464_evalUnary(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a50da_UnaryExpr> _73330_u);
inline jule::Ptr<_1a85028cc_Data> _1a850c7a5_evalVariadic(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a54b4_VariadicExpr> _73833_v);
inline jule::Ptr<_1a85028cc_Data> _1a850cae6_evalUnsafe(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a4392_UnsafeExpr> _76031_u);
inline jule::Ptr<_1a85028cc_Data> _1a850ce37_evalArr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _76828_s);
inline jule::Ptr<_1a85028cc_Data> _1a850d3dd_evalExpSlc(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _84531_s, jule::Ptr<_1a8535877_Type> _84555_t, jule::Any _84569_first);
inline jule::Ptr<_1a85028cc_Data> _1a850d72e_evalSliceExpr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _88334_s);
inline jule::Bool _1a850db2a_checkIntegerIndexingByData(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _91947_d, jule::Ptr<_1a81881cd_Token> _91961_token);
inline void _1a850e048_indexingPtr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _93232_d, jule::Ptr<_1a85028cc_Data>* _93247_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _93266_i);
inline void _1a850e466_indexingArr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _94832_d, jule::Ptr<_1a85028cc_Data>* _94847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _94866_i);
inline void _1a850e884_indexingSlc(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _95832_d, jule::Ptr<_1a85028cc_Data>* _95847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _95866_i);
inline void _1a850eca2_indexingMap(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _98132_d, jule::Ptr<_1a85028cc_Data>* _98147_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _98166_i);
inline void _1a85101c0_indexingStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _99832_d, jule::Ptr<_1a85028cc_Data>* _99847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _99866_i);
inline void _1a85105dd_comptimeRange(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _102634_d, jule::Ptr<_1a85028cc_Data>* _102649_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _102668_i);
inline void _1a8510a0b_toIndexing(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _105131_d, jule::Ptr<_1a85028cc_Data>* _105146_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _105165_i);
inline jule::Bool _1a8510eb2_pushGenericsFromExprSubIdent(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6141_SubIdentExpr>* _107950_sexpr, jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _10808_generics, jule::Ptr<_1a81a302d_Expr>* _108041_expr);
inline jule::Bool _1a85113ad_pushGenericsFromData(jule::Ptr<_1a850489b_eval> _self_, jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _109042_generics, jule::Ptr<_1a81a302d_Expr>* _109075_expr);
inline void _1a8511721_evalIdentDeclFromIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a85028cc_Data>* _116047_d, jule::Ptr<_1a81a9ee1_IndexingExpr>* _116062_i);
inline __jule_tuple_bool__jule_tuple_bool _1a8511bc7_checkGenericFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a829a752_FnIns>* _120336_f, jule::Ptr<_1a81881cd_Token>* _120352_et, jule::Any* _120376_model);
inline void _1a851203a_evalFnGenericFromIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a85028cc_Data>* _121947_d, jule::Ptr<_1a81a9ee1_IndexingExpr>* _121962_i);
inline jule::Ptr<_1a85028cc_Data> _1a851237b_evalIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9ee1_IndexingExpr> _125933_i);
inline __jule_tuple_x_1a85028cc_Data__jule_tuple_x_1a85028cc_Data _1a85126bc_evalSlicingExprs(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81aa651_SlicingExpr>* _131938_s);
inline void _1a8512975_slicingArr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _135527_d);
inline void _1a8512d93_slicingStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _137027_d, jule::Ptr<_1a85028cc_Data>* _137038_l, jule::Ptr<_1a85028cc_Data>* _137049_r);
inline void _1a851336b_checkSlicing(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _140833_d, jule::Ptr<_1a85028cc_Data>* _140844_l, jule::Ptr<_1a85028cc_Data>* _140855_r, jule::Ptr<_1a81aa651_SlicingExpr>* _140866_s);
inline jule::Ptr<_1a85028cc_Data> _1a85136ac_evalSlicing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81aa651_SlicingExpr> _142732_s);
inline void _1a8513aca_castPtr(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _146427_t, jule::Ptr<_1a85028cc_Data> _146441_d, jule::Ptr<_1a81881cd_Token> _146451_errorToken);
inline void _1a8513ee8_castStruct(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _148630_t, jule::Ptr<_1a85028cc_Data> _148644_d, jule::Ptr<_1a81881cd_Token> _148654_errorToken);
inline void _1a8514416_castRef(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _150327_t, jule::Ptr<_1a85028cc_Data> _150341_d, jule::Ptr<_1a81881cd_Token> _150351_errorToken);
inline void _1a8514834_castSlc(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _152627_t, jule::Ptr<_1a85028cc_Data> _152641_d, jule::Ptr<_1a81881cd_Token> _152651_errorToken);
inline void _1a8514b97_castStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _158127_d, jule::Ptr<_1a81881cd_Token> _158137_errorToken);
inline void _1a85150b5_castInt(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _162827_t, jule::Ptr<_1a85028cc_Data> _162841_d, jule::Ptr<_1a81881cd_Token> _162851_errorToken);
inline void _1a85154d3_castNum(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _167427_t, jule::Ptr<_1a85028cc_Data> _167441_d, jule::Ptr<_1a81881cd_Token> _167451_errorToken);
inline void _1a8515901_castPrim(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _170528_t, jule::Ptr<_1a85028cc_Data> _170542_d, jule::Ptr<_1a81881cd_Token> _170552_errorToken);
inline void _1a8515c64_castConstant(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _172133_t, jule::Ptr<_1a85028cc_Data>* _172148_d);
inline void _1a8516182_castTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _173033_t, jule::Ptr<_1a85028cc_Data>* _173048_d, jule::Ptr<_1a81881cd_Token>* _173063_errorToken);
inline void _1a85165a0_castTypeEnumT(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _174034_t, jule::Ptr<_1a85028cc_Data>* _174049_d, jule::Ptr<_1a81881cd_Token>* _174064_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a8516a56_evalCastByTypeNData(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _175039_t, jule::Ptr<_1a85028cc_Data> _175053_d, jule::Ptr<_1a81881cd_Token> _175067_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a851700c_evalCastT(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a8535877_Type>* _183531_t, jule::Ptr<_1a81a302d_Expr>* _183546_e, jule::Ptr<_1a81881cd_Token>* _183566_et);
inline jule::Ptr<_1a85028cc_Data> _1a851734d_evalCast(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a588d_CastExpr> _185229_c);
inline jule::Ptr<_1a85028cc_Data> _1a851768e_evalNamespace(_1a850489b_eval* _self_, jule::Ptr<_1a81a5c67_NamespaceExpr> _186133_s);
inline jule::Ptr<_1a85028cc_Data> _1a8517b45_evalStructLitExplicit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81c246a_StructIns> _188042_s, jule::Slice<jule::Ptr<_1a81a302d_Expr>> _18817_exprs, jule::Ptr<_1a81881cd_Token> _188132_errorToken);
inline jule::Ptr<_1a85028cc_Data> _1a8517e86_evalStructLit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a8077_StructLit> _191834_lit);
inline _1a8547c74_typeChecker _1a851821c_typeChecker(_1a850489b_eval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a851855d_evalType(_1a850489b_eval* _self_, jule::Ptr<_1a819dbe9_TypeDecl> _195028_t);
inline void _1a85188c1_callTypeFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _196332_fc, jule::Ptr<_1a85028cc_Data>* _196359_d);
inline void _1a8518c34_callBuiltinFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _198935_fc, jule::Ptr<_1a85028cc_Data>* _198962_d);
inline void _1a8519097_checkFnOfConcurrentCall(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _200140_f, jule::Ptr<_1a81881cd_Token> _200151_errorToken);
inline void _1a85194b5_processExceptionalHandler(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _202046_f, jule::Ptr<_1a81a6c57_FnCallExpr>* _202062_fc, jule::Ptr<_1a85028cc_Data>* _202089_d);
inline void _1a8519828_callFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _204728_fc, jule::Ptr<_1a85028cc_Data>* _204755_d);
inline jule::Ptr<_1a85028cc_Data> _1a8519b69_evalFnCall(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr> _219631_fc);
inline jule::Ptr<_1a85028cc_Data> _1a851a065_evalEnumStatic(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _222934_enm, jule::Ptr<_1a81881cd_Token> _222950_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851a461_evalTypeEnumStatic(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _223738_enm, jule::Ptr<_1a81881cd_Token> _223754_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851a85c_evalStructStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns> _226036_s, jule::Ptr<_1a81881cd_Token> _226051_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851ad13_evalTraitSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _229537_d, jule::Ptr<_1a82a2da8_Trait> _229551_trt, jule::Ptr<_1a81881cd_Token> _229568_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851b374_evalStructSubIdentField(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _231744_d, jule::Ptr<_1a81c246a_StructIns>* _231759_s, jule::Ptr<_1a81881cd_Token>* _231779_tok, jule::Ptr<_1a81c18ba_FieldIns>* _2317104_f);
inline jule::Ptr<_1a85028cc_Data> _1a851b990_evalStructSubIdentMethod(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _234245_d, jule::Ptr<_1a81c246a_StructIns>* _234260_s, jule::Ptr<_1a81881cd_Token>* _234280_tok, jule::Ptr<_1a8297694_Fn>* _2342105_m, jule::Bool _2342113_ref);
inline jule::Ptr<_1a85028cc_Data> _1a851c001_evalStructSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _236338_d, jule::Ptr<_1a81c246a_StructIns> _236352_s, jule::Ptr<_1a81a6141_SubIdentExpr> _236371_si, jule::Bool _236395_ref);
inline jule::Ptr<_1a85028cc_Data> _1a851c342_evalIntTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _238733_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851c683_evalUintTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _241434_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851c9c4_evalI8TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _243232_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851cd15_evalI16TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _246133_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851d156_evalI32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _249033_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851d497_evalI64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _251933_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851d7d8_evalU8TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _254832_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851db29_evalU16TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _256733_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851de6a_evalU32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _258633_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851e2ab_evalU64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _260533_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851e5ec_evalF32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _262433_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851e93d_evalF64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _266333_ident);
inline jule::Ptr<_1a85028cc_Data> _1a851ed39_evalPrimStatic(_1a850489b_eval* _self_, jule::Str _270230_kind, jule::Ptr<_1a81881cd_Token> _270241_ident);
inline jule::Ptr<_1a85028cc_Data> _1a8520235_evalTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _273434_d, jule::Ptr<_1a81a6141_SubIdentExpr> _273448_si);
inline jule::Ptr<_1a85028cc_Data> _1aa3db51c_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a8337976_comptimeTypeInfo>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa3e0cd5_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a83285d2_comptimeStructField>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa3e5559_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a832ea28_comptimeEnumField>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa3e9d22_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a833283e_comptimeParam>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa3ee81b_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a832b805_comptimeStatic>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa404090_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a833da7b_comptimeValue>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa408814_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a8343256_comptimeFile>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1a85028cc_Data> _1aa40d121_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a834716c_comptimeDecl>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si);
inline __jule_tuple_x_1a85028cc_Data__jule_tuple_bool _1a8520ad7_tryComptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _275843_d, jule::Ptr<_1a81a6141_SubIdentExpr> _275857_si);
inline jule::Ptr<_1a85028cc_Data> _1a8520ed3_evalObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _278935_d, jule::Ptr<_1a81a6141_SubIdentExpr> _278949_si);
inline jule::Ptr<_1a85028cc_Data> _1a8521324_evalSubIdent(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6141_SubIdentExpr> _283133_si);
inline jule::Ptr<_1a85028cc_Data> _1a8521665_evalTuple(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a3b22_TupleExpr> _284530_tup);
inline jule::Ptr<_1a85028cc_Data> _1a8521a61_evalMap(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a8544633_Map> _287428_m, jule::Ptr<_1a81a852d_BraceLit> _287441_lit);
inline jule::Ptr<_1a85028cc_Data> _1a8521da2_evalBraceLit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a852d_BraceLit> _292233_lit);
inline jule::Ptr<_1a85028cc_Data> _1a85221e3_evalAnonFunc(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81b0986_FnDecl> _293733_decl);
inline jule::Ptr<_1a85028cc_Data> _1a8522534_evalBinary(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a65e7_BinaryExpr> _297531_op);
inline jule::Ptr<_1a85028cc_Data> _1a8522875_evalExprKind(jule::Ptr<_1a850489b_eval> _self_, jule::Any _299033_kind);
inline jule::Ptr<_1a85028cc_Data> _1a8522bb6_eval1(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _303826_expr);
inline jule::Ptr<_1a85028cc_Data> _1a8523007_eval(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _308325_expr);
inline jule::Ptr<_1a85028cc_Data> _1a8523348_evalExpr1(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _309830_expr);
inline jule::Ptr<_1a85028cc_Data> _1a8523689_evalExpr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _311429_expr);
inline _1a8523b1d_unaryEval static__1a8524091_new(jule::Ptr<_1a850489b_eval> _313520_e);
inline void _1a852428e_minus(_1a8523b1d_unaryEval* _self_);
inline void _1a852448c_plus(_1a8523b1d_unaryEval* _self_);
inline void _1a852468a_caret(_1a8523b1d_unaryEval* _self_);
inline void _1a8524888_excl(_1a8523b1d_unaryEval* _self_);
inline void _1a8524a86_star(_1a8523b1d_unaryEval* _self_);
inline void _1a8524c84_amper(_1a8523b1d_unaryEval* _self_);
inline void _1a8524e82_typeDecl(_1a8523b1d_unaryEval* _self_);
inline void _1a8525180_evalData(_1a8523b1d_unaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a85254c1_eval(_1a8523b1d_unaryEval* _self_, jule::Ptr<_1a81a50da_UnaryExpr> _342224_u);
inline _1a8525aa9_binaryEval static__1a8526192_newPlain(jule::Ptr<_1a850489b_eval> _347025_e);
inline _1a8525aa9_binaryEval static__1a8526516_new(jule::Ptr<_1a850489b_eval> _347620_e, jule::Ptr<_1a81881cd_Token> _347634_op);
inline jule::Bool _1a852679c_checkTypeCompatibility(_1a8525aa9_binaryEval* _self_);
inline jule::Bool _1a8526a33_checkStructCommonOperatorCompatibility(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8526cb9_evalComptimeTypeInfo(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8527050_evalNil(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a85272d6_evalEnum(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a852756c_evalTypeEnum(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8527803_evalSptr(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8527a89_evalPtr(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8527d20_evalArr(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a85280a6_evalStruct(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a852833c_evalTrait(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a85285c3_evalAny(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8528859_evalBool(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8528ae0_evalStr(_1a8525aa9_binaryEval* _self_);
inline void _1a8528cdd_setTypeToGreater(_1a8525aa9_binaryEval* _self_);
inline void _1a8529096_checkModData(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _387533_d);
inline void _1a8529294_mod(_1a8525aa9_binaryEval* _self_);
inline jule::Bool _1a8529690_numbersAreCompatibile(_1a8525aa9_binaryEval* _self_, jule::Str* _389734_lk, jule::Str* _389744_rk);
inline jule::Ptr<_1a85028cc_Data> _1a8529926_shift(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8529bac_evalFloat(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a8529e43_evalInt(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a852a1c9_evalPrim(_1a8525aa9_binaryEval* _self_);
inline jule::Bool _1a852a460_checkSpecialCases(_1a8525aa9_binaryEval* _self_);
inline jule::Ptr<_1a85028cc_Data> _1a852a6e6_evalOp(_1a8525aa9_binaryEval* _self_);
inline void _1a852a99e_evalConst(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _418730_d);
inline void _1a852ac57_checkData(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _426530_d);
inline void _1a852ae55_checkDatas(_1a8525aa9_binaryEval* _self_);
inline void _1a852b20d_setModel(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _427729_d);
inline void _1a852b4b6_postEval(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _430629_d);
inline jule::Ptr<_1a85028cc_Data> _1a852b8b2_solveExplicit(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _431134_l, jule::Ptr<_1a85028cc_Data>* _431149_r);
inline jule::Ptr<_1a85028cc_Data> _1a852bc03_eval(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a81a65e7_BinaryExpr>* _433125_op);
inline jule::Str _1a8535c73_Str(_1a8535877_Type* _self_);
inline jule::Bool _1a85360b4_Equal(jule::Ptr<_1a8535877_Type> _self_, jule::Ptr<_1a8535877_Type> _7218_other);
inline jule::Bool _1a8536724_Binded(_1a8535877_Type* _self_);
inline jule::Bool _1a85369aa_IsNil(_1a8535877_Type* _self_);
inline jule::Bool _1a8536c41_Void(_1a8535877_Type* _self_);
inline jule::Bool _1a8536ec7_Comparable(_1a8535877_Type* _self_);
inline jule::Bool _1a853725d_Mutable(_1a8535877_Type* _self_);
inline jule::Bool _1a85374e4_Ordered(_1a8535877_Type* _self_);
inline jule::Bool _1a853777a_NilCompatible(_1a8535877_Type* _self_);
inline jule::Bool _1a8537a11_GC(_1a8535877_Type* _self_);
inline jule::Bool _1a8537c97_Variadicable(_1a8535877_Type* _self_);
inline jule::Ptr<_1a853d990_Prim> _1a853802d_Prim(_1a8535877_Type* _self_);
inline jule::Ptr<_1a85424bb_Sptr> _1a85382b4_Sptr(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8545c83_Ptr> _1a853854a_Ptr(_1a8535877_Type* _self_);
inline jule::Ptr<_1a82a555e_Enum> _1a85387d1_Enum(_1a8535877_Type* _self_);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a8538a67_TypeEnum(_1a8535877_Type* _self_);
inline jule::Ptr<_1a85452b0_Arr> _1a8538ced_Arr(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8542e8e_Slc> _1a8539084_Slc(_1a8535877_Type* _self_);
inline jule::Ptr<_1a829a752_FnIns> _1a853931a_Fn(_1a8535877_Type* _self_);
inline jule::Ptr<_1a81c246a_StructIns> _1a85395a1_Struct(_1a8535877_Type* _self_);
inline jule::Ptr<_1a82a2da8_Trait> _1a8539837_Trait(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8544633_Map> _1a8539abd_Map(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8543a83_Tuple> _1a8539d54_Tup(_1a8535877_Type* _self_);
inline jule::Bool _1a853a0da_comptime(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8329d75_comptimeStructFields> _1a853a371_comptimeStructFields(_1a8535877_Type* _self_);
inline jule::Ptr<_1a83285d2_comptimeStructField> _1a853a607_comptimeStructField(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8330d37_comptimeEnumFields> _1a853a88d_comptimeEnumFields(_1a8535877_Type* _self_);
inline jule::Ptr<_1a832ea28_comptimeEnumField> _1a853ab24_comptimeEnumField(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8334698_comptimeParams> _1a853adaa_comptimeParams(_1a8535877_Type* _self_);
inline jule::Ptr<_1a833283e_comptimeParam> _1a853b141_comptimeParam(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8327a76_comptimeRange> _1a853b3c7_comptimeRange(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8336007_comptimeTypeInfos> _1a853b65d_comptimeTypeInfos(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8337976_comptimeTypeInfo> _1a853b8e4_comptimeTypeInfo(_1a8535877_Type* _self_);
inline jule::Ptr<_1a832d0a9_comptimeStatics> _1a853bb7a_comptimeStatics(_1a8535877_Type* _self_);
inline jule::Ptr<_1a832b805_comptimeStatic> _1a853be11_comptimeStatic(_1a8535877_Type* _self_);
inline jule::Ptr<_1a833da7b_comptimeValue> _1a853c197_comptimeValue(_1a8535877_Type* _self_);
inline jule::Ptr<_1a834716c_comptimeDecl> _1a853c42d_comptimeDecl(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8344d7e_comptimeDecls> _1a853c6b4_comptimeDecls(_1a8535877_Type* _self_);
inline jule::Ptr<_1a8343256_comptimeFile> _1a853c94a_comptimeFile(_1a8535877_Type* _self_);
inline jule::Ptr<_1a83417d7_comptimeFiles> _1a853cbd1_comptimeFiles(_1a8535877_Type* _self_);
inline jule::Bool _1a853d440_checked(_1a853d088_TypeSym* _self_);
inline jule::Str _1a853dd14_Str(_1a853d990_Prim* _self_);
inline jule::Bool _1a853e155_Equal(jule::Ptr<_1a853d990_Prim> _self_, jule::Ptr<_1a8535877_Type> _51418_other);
inline jule::Bool _1a853e5ea_IsConstraint(_1a853d990_Prim* _self_);
inline jule::Bool _1a853e881_IsI8(_1a853d990_Prim* _self_);
inline jule::Bool _1a853eb17_IsI16(_1a853d990_Prim* _self_);
inline jule::Bool _1a853ed9d_IsI32(_1a853d990_Prim* _self_);
inline jule::Bool _1a8540134_IsI64(_1a853d990_Prim* _self_);
inline jule::Bool _1a85403ba_IsU8(_1a853d990_Prim* _self_);
inline jule::Bool _1a8540651_IsU16(_1a853d990_Prim* _self_);
inline jule::Bool _1a85408d7_IsU32(_1a853d990_Prim* _self_);
inline jule::Bool _1a8540b6d_IsU64(_1a853d990_Prim* _self_);
inline jule::Bool _1a8540e04_IsF32(_1a853d990_Prim* _self_);
inline jule::Bool _1a854118a_IsF64(_1a853d990_Prim* _self_);
inline jule::Bool _1a8541421_IsInt(_1a853d990_Prim* _self_);
inline jule::Bool _1a85416a7_IsUint(_1a853d990_Prim* _self_);
inline jule::Bool _1a854193d_IsUintptr(_1a853d990_Prim* _self_);
inline jule::Bool _1a8541bc4_IsBool(_1a853d990_Prim* _self_);
inline jule::Bool _1a8541e5a_IsStr(_1a853d990_Prim* _self_);
inline jule::Bool _1a85421e1_IsAny(_1a853d990_Prim* _self_);
inline jule::Str _1a8542873_Str(_1a85424bb_Sptr* _self_);
inline jule::Bool _1a8542bb4_Equal(jule::Ptr<_1a85424bb_Sptr> _self_, jule::Ptr<_1a8535877_Type> _59118_other);
inline jule::Str _1a8543456_Str(_1a8542e8e_Slc* _self_);
inline jule::Bool _1a8543797_Equal(jule::Ptr<_1a8542e8e_Slc> _self_, jule::Ptr<_1a8535877_Type> _61018_other);
inline jule::Str _1a8543e3a_Str(_1a8543a83_Tuple* _self_);
inline jule::Bool _1a854427b_Equal(jule::Ptr<_1a8543a83_Tuple> _self_, jule::Ptr<_1a8535877_Type> _63918_other);
inline jule::Str _1a85449da_Str(_1a8544633_Map* _self_);
inline jule::Bool _1a8544d2b_Equal(jule::Ptr<_1a8544633_Map> _self_, jule::Ptr<_1a8535877_Type> _67618_other);
inline jule::Str _1a8545667_Str(_1a85452b0_Arr* _self_);
inline jule::Bool _1a85459a8_Equal(jule::Ptr<_1a85452b0_Arr> _self_, jule::Ptr<_1a8535877_Type> _70418_other);
inline jule::Str _1a854613a_Str(_1a8545c83_Ptr* _self_);
inline jule::Bool _1a854647b_Equal(jule::Ptr<_1a8545c83_Ptr> _self_, jule::Ptr<_1a8535877_Type> _72818_other);
inline jule::Bool _1a8546800_IsUnsafe(_1a8545c83_Ptr* _self_);
inline void _1a8548505_pushErr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81881cd_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1a8548703_allowBuiltin(_1a8547c74_typeChecker* _self_);
inline void _1a8548901_disallowBuiltin(_1a8547c74_typeChecker* _self_);
inline void _1aa71a450_pushReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _83237_t);
inline void _1aa71ce25_pushReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a82a2da8_Trait>* _83237_t);
inline void _1a8548e62_pushReferenceByKind(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _84240_k);
inline void _1a8549380_pushCycleError(_1a8547c74_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _21ca86171_Builder* _85353_message);
inline jule::Bool _1a854977b_checkCrossCycle(_1a8547c74_typeChecker* _self_, jule::Any _87527_decl, _21ca86171_Builder* _87543_message);
inline jule::Bool _1a8549b77_checkIllegalCycles(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1a854a073_fromTypeAlias(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _95930_decl, jule::Ptr<_1a8534a85_TypeAlias>* _95962_ta);
inline jule::Ptr<_1a82a555e_Enum> _1a854a46e_fromEnum(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _103625_decl, jule::Ptr<_1a82a555e_Enum>* _103657_e);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a854a86a_fromTypeEnum(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _104829_decl, jule::Ptr<_1a82a6c69_TypeEnum>* _104861_e);
inline jule::Ptr<_1a82a2da8_Trait> _1a854ac66_fromTrait(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _106026_decl, jule::Ptr<_1a82a2da8_Trait>* _106058_t);
inline jule::Bool _1a854b162_checkStructIns(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _107335_ins, jule::Ptr<_1a81881cd_Token>* _107357_errorToken);
inline void _1a854b41a_appendUsedStructReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81be610_Struct>* _109446_s);
inline jule::Ptr<_1a81c246a_StructIns> _1a854b816_buildStructInstance(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a81be610_Struct>* _110772_s);
inline jule::Ptr<_1a81c246a_StructIns> _1a854bc12_fromStructIns(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _115534_ins, jule::Ptr<_1a81881cd_Token> _115555_token);
inline jule::Ptr<_1a81c246a_StructIns> _1a854c10d_fromStruct(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a81be610_Struct>* _117363_s);
inline jule::Trait _1a854c44e_getDef(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1a854c790_buildIdent(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl> _127830_decl);
inline jule::Trait _1a854cad1_buildSubIdent(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1a85424bb_Sptr> _1a854ce22_buildSptrFromType(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _131638_elem);
inline jule::Ptr<_1a85424bb_Sptr> _1a854d263_buildSptr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819ec94_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1a8545c83_Ptr> _1a854d5a4_buildPtrFromType(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _134537_elem);
inline jule::Ptr<_1a8545c83_Ptr> _1a854d8e5_buildPtr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0723_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1a8542e8e_Slc> _1a854dc36_buildSlc(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0129_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1a85452b0_Arr> _1a854e077_buildArr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0eb5_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1a8544633_Map> _1a854e3b8_buildMap(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a1713_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1a8543a83_Tuple> _1a854e709_buildTuple(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0426_TupleTypeDecl> _147930_decl);
inline jule::Bool _1a854ea4a_checkFuncTypes(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a829a752_FnIns>* _149235_f);
inline jule::Ptr<_1a829a752_FnIns> _1a854ed8b_buildFunc(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81b0986_FnDecl> _151029_decl);
inline jule::Trait _1a85501cc_buildNamespace(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e997_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1a8535877_Type> _1a855051d_build(_1a8547c74_typeChecker* _self_, jule::Any* _155626_declKind);
inline jule::Ptr<_1a8535877_Type> _1a855085e_checkDecl(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _164430_decl);
inline jule::Bool static__1a85512aa_prim(jule::Str* _167118_ident, jule::Ptr<_1a853d990_Prim> _167130_t);
inline jule::Bool static__1a855162e_exist(jule::Str* _167519_ident, jule::Ptr<_1a8535877_Type>* _167536_k);
inline void _1a8d9bad3_stop(_1a8d9b42e_scopeParser* _self_);
inline jule::Bool _1a8d9bd69_stopped(_1a8d9b42e_scopeParser* _self_);
inline jule::Bool _1a8d9c100_finished(_1a8d9b42e_scopeParser* _self_);
inline jule::Bool _1a8d9c386_isLastSt(_1a8d9b42e_scopeParser* _self_);
inline void _1a8d9c6e9_pushErr(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81881cd_Token> _15423_token, jule::Str _15445_fmt);
inline void _1a8d9ca5c_pushSuggestion(_1a8d9b42e_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1a8d9cd15_insertAsNext(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _16333_tokens);
inline jule::Ptr<_1a8d9aa8d_stmt> _1a8d9d09b_next(_1a8d9b42e_scopeParser* _self_);
inline jule::Ptr<_1a81adce7_ScopeTree> _1a8d9d497_buildScope(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _17331_tokens, jule::Ptr<_1a81881cd_Token> _17360_end);
inline jule::Ptr<_1a81b1b41_VarDecl> _1a8d9d7d8_buildVarSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _18431_tokens);
inline jule::Ptr<_1a81b201a_RetSt> _1a8d9db29_buildRetSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _19230_tokens);
inline jule::Ptr<_1a81b278a_Iter> _1a8d9de6a_buildWhileNextIter(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _20339_s);
inline jule::Ptr<_1a81b30b5_WhileKind> _1a8d9e2ab_buildWhileIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8d9e5ec_getRangeKindKeysTokens(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _25443_toks);
inline jule::Ptr<_1a81b1b41_VarDecl> _1a8d9e93d_buildRangeKindKey(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _1a8d9ec7e_buildRangeKindKeys(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _28639_parts);
inline void _1a8da00e2_setupRangeKindKeysPlain(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _29471_tokens);
inline void _1a8da0455_setupRangeKindKeysExplicit(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _30974_tokens);
inline void _1a8da07b8_setupRangeKindKeys(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _31866_tokens);
inline jule::Ptr<_1a81b39bc_RangeKind> _1a8da0c6e_buildRangeIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3278_exprTokens, jule::Ptr<_1a81881cd_Token>* _32742_inToken);
inline jule::Any _1a8da116a_buildCommonIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _34240_tokens, jule::Ptr<_1a81881cd_Token>* _34266_errTok);
inline jule::Ptr<_1a81b278a_Iter> _1a8da14ab_buildCommonIter(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _36935_tokens);
inline jule::Ptr<_1a81b278a_Iter> _1a8da17ec_buildIterSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _39932_st);
inline jule::Ptr<_1a81b3d96_BreakSt> _1a8da1b3d_buildBreakSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _40633_tokens);
inline jule::Ptr<_1a81b4270_ContSt> _1a8da1e7e_buildContSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _42432_tokens);
inline jule::Ptr<_1a81b4726_If> _1a8da22c0_buildIf(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _44228_tokens);
inline jule::Ptr<_1a81b4b00_Else> _1a8da2611_buildElse(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _47530_tokens);
inline jule::Ptr<_1a81b50a6_Conditional> _1a8da2952_buildIfElseChain(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _49936_tokens);
inline jule::Ptr<_1a81a302d_Expr> _1a8da2c93_buildCoCallSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _52233_tokens);
inline jule::Ptr<_1a81ab6a7_GotoSt> _1a8da30d4_buildGotoSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _53832_tokens);
inline jule::Ptr<_1a81ab9a4_FallSt> _1a8da3425_buildFallSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _55832_tokens);
inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8da3766_buildTypeAliasSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _56837_tokens);
inline void _1a8da3c3e_pushCaseExpr(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _57432_tokens, jule::Ptr<_1a81881cd_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1a81a302d_Expr__jule_tuple_bool _1a8da41e5_buildCaseExprs(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _59735_tokens, jule::Ptr<_1a81881cd_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1a81adce7_ScopeTree> _1a8da4536_buildCaseScope(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _63935_tokens);
inline __jule_tuple_x_1a81b5c99_Case__jule_tuple_bool _1a8da4932_buildCase(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1a81b5c99_Case__jule_tuple_x_1a81b4b00_Else _1a8da4d2d_buildCases(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1a81b65b3_MatchCase> _1a8da516e_buildMatchCase(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _71934_tokens);
inline jule::Ptr<_1a81adce7_ScopeTree> _1a8da54b0_buildScopeSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _75232_tokens);
inline jule::Ptr<_1a81ab2cd_LabelSt> _1a8da5801_buildLabelSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _79533_tokens);
inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da5b42_buildIdSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _81030_tokens);
inline jule::Ptr<_1a8db6449_assignInfo> _1a8da5e83_buildAssignInfo(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _82436_tokens);
inline jule::Ptr<_1a81ac114_AssignLeft> _1a8da62c4_buildAssignL(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> _1a8da6615_buildAssignLs(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _88034_parts);
inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da6956_buildPlainAssign(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _88937_tokens);
inline jule::Bool _1a8da6d52_buildDeclAssign1(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _94337_lefts, jule::Ptr<_1a81ac697_AssignSt>* _94366_assign);
inline __jule_tuple_x_1a81ac697_AssignSt__jule_tuple_bool _1a8da7193_buildDeclAssign(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _99135_tokens);
inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da74d4_buildAssignSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _102534_tokens);
inline jule::Ptr<_1a81a3902_UseExpr> _1a8da7825_buildUseExpr(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _103833_tokens);
inline jule::Any _1a8da7b66_buildConstSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _105133_st);
inline jule::Any _1a8da7ea7_buildSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _107628_st);
inline void _1a8da831a_build(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _114026_tokens, jule::Ptr<_1a81adce7_ScopeTree>* _114056_s);
inline void _1a8da955d_pushErr(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1a8da98c1_pushSuggestion(_1a8da8d54_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1a81a3b22_TupleExpr> _1a8da9c12_buildTuple(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _2331_parts);
inline jule::Ptr<_1a81a3eb8_LitExpr> _1a8daa053_buildLit(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _3324_token);
inline jule::Any _1a8daa6d5_buildSingle(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _4431_token);
inline jule::Ptr<_1a81a4848_IdentExpr> _1a8daaa26_buildBindIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6135_tokens);
inline jule::Ptr<_1a81a50da_UnaryExpr> _1a8daad67_buildUnary(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _8030_tokens);
inline jule::Ptr<_1a81a6141_SubIdentExpr> _1a8dab1a8_buildObjSubIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _10136_tokens);
inline jule::Ptr<_1a81a5c67_NamespaceExpr> _1a8dab4e9_buildNamespace(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _11635_tokens);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dab83a_buildType(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _15030_tokens);
inline jule::Any _1a8dabb7b_buildSubIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _16434_tokens);
inline jule::Ptr<_1a81a54b4_VariadicExpr> _1a8dabebc_buildVariadic(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _18633_tokens);
inline jule::Ptr<_1a81a32e7_RangeExpr> _1a8dac30d_buildBetweenParentheses(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _19543_tokens);
inline jule::Ptr<_1a81a588d_CastExpr> _1a8dac64e_tryBuildCast(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _20733_tokens);
inline void _1a8daca6c_pushArg(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1a81881cd_Token>> _28152_tokens, jule::Ptr<_1a81881cd_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1a81a302d_Expr>> _1a8dacdad_buildArgs(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _29029_tokens);
inline jule::Ptr<_1a81a6c57_FnCallExpr> _1a8dad6a5_buildFnCall(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token>* _35632_token, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _35687_args);
inline jule::Any _1a8dad9e6_buildParenthesesRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _36442_tokens);
inline jule::Ptr<_1a81a4392_UnsafeExpr> _1a8dadd37_buildUnsafeExpr(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _38635_tokens);
inline jule::Ptr<_1a81b0986_FnDecl> _1a8dae178_buildAnonFn(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _40132_tokens);
inline jule::Any _1a8dae4b9_buildUnsafe(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _41032_tokens);
inline void _1a8dae8d7_pushRangeLitPart(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _42036_part, jule::Ptr<_1a81881cd_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8daec28_getBraceRangeLitExprParts(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _43145_tokens);
inline jule::Ptr<_1a81a774c_FieldExprPair> _1a8db0069_buildFieldExprPair(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _47338_tokens);
inline jule::Ptr<_1a81a302d_Expr> _1a8db03aa_buildStructLitExpr(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1a81a302d_Expr>> _1a8db06eb_buildStructLitExprs(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _50140_tokens);
inline jule::Ptr<_1a81a8077_StructLit> _1a8db0a3c_buildTypedStructLiteral(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _51443_tokens);
inline jule::Ptr<_1a81a302d_Expr> _1a8db0d7d_buildBraceLitPart(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _53838_tokens);
inline jule::Ptr<_1a81a852d_BraceLit> _1a8db11be_buildBraceLit(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _55534_tokens);
inline jule::Any _1a8db1510_buildBraceRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8db1851_getEnumerableParts(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _62638_tokens);
inline jule::Ptr<_1a81a9584_SliceExpr> _1a8db1b92_buildSlice(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _63330_tokens);
inline jule::Ptr<_1a81a9ee1_IndexingExpr> _1a8db2148_buildIndexing(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>> _6567_tokens, jule::Ptr<_1a81881cd_Token> _65636_errorToken);
inline jule::Ptr<_1a81aa651_SlicingExpr> _1a8db2764_buildSlicing(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _67967_start, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6808_to, jule::Ptr<_1a81881cd_Token>* _68034_errorToken, jule::Ptr<_1a81881cd_Token> _68065_end);
inline jule::Any _1a8db2aa5_buildBracketRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _69537_tokens);
inline jule::Any _1a8db2de6_buildExclRight(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _72035_tokens);
inline jule::Any _1a8db3237_buildData(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _73830_tokens);
inline jule::Any _1a8db3633_buildBinary(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _80732_tokens, jule::I64 _80757_i);
inline jule::Any _1a8db3974_build(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _83226_tokens);
inline jule::Any _1a8db3cb5_buildKind(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _84330_tokens);
inline jule::Ptr<_1a81a302d_Expr> _1a8db4106_buildFromTokens(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _85435_tokens);
inline void _1a8db9969_stop(_1a8db9639_parser* _self_);
inline jule::Bool _1a8db9c00_stopped(_1a8db9639_parser* _self_);
inline void _1a8dba11d_pushErr(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1a8dba481_pushSuggestion(_1a8db9639_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1a81a302d_Expr> _1a8dba7c2_buildExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _17831_tokens);
inline jule::Ptr<_1a819d116_Directive> _1a8dbab13_buildDirective(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _18234_tokens);
inline void _1a8dbadbb_pushDirective(_1a8db9639_parser* _self_, jule::Ptr<_1a819d116_Directive> _19733_d);
inline jule::Ptr<_1a81adce7_ScopeTree> _1a8dbb2b7_buildScope(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _21032_tokens, jule::Ptr<_1a81881cd_Token> _21061_end);
inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dbb76d__buildType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dbbc24_buildType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8dbc065_buildTypeAliasDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _24240_tokens);
inline void _1a8dbc3c8_buildVarTypeAndExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b1b41_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _28264_tokens);
inline void _1a8dbc73b_buildVarCommon(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b1b41_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1a81881cd_Token>> _31558_tokens);
inline void _1a8dbca9e_buildVarBegin(_1a8db9639_parser* _self_, jule::Ptr<_1a81b1b41_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _33157_tokens);
inline jule::Ptr<_1a81b1b41_VarDecl> _1a8dbcde0_buildVar(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _35929_tokens);
inline jule::Ptr<_1a81aae04_GenericDecl> _1a8dbd231_buildGeneric(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _1a8dbd62c_buildGenerics(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _41535_tokens, jule::Ptr<_1a81881cd_Token>* _41561_errorToken);
inline jule::Ptr<_1a81ae534_ParamDecl> _1a8dbd96d_buildSelfParam(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _43534_tokens);
inline void _1a8dbdd8b_paramTypeBegin(_1a8db9639_parser* _self_, jule::Ptr<_1a81ae534_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _47573_tokens);
inline void _1a8dbe1ee_buildParamType(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ae534_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _49065_tokens);
inline void _1a8dbe562_buildParamBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ae534_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1a81881cd_Token>> _50364_tokens);
inline jule::Ptr<_1a81ae534_ParamDecl> _1a8dbe8a3_buildParam(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _52331_tokens);
inline void _1a8dbeb5b_checkParams(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> _1a8dc0057_buildParams(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool _1a8dc0453_buildMultiRetType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _61639_tokens, jule::I64* _61669_i);
inline __jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool _1a8dc084e_buildRetType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _68734_tokens, jule::I64* _68764_i);
inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc0d05_buildFnPrototype(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc12ab_buildFn(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1a8dc161e_buildBindUseDecl(_1a8db9639_parser* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _83763_tokens);
inline void _1a8dc1982_parseUseDecl(_1a8db9639_parser* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1a81881cd_Token>> _85058_tokens);
inline jule::Ptr<_1a81b6b46_UseDecl> _1a8dc1d7d_buildUseDecl(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dc2279_buildTypeEnumItemKind(jule::Ptr<_1a8db9639_parser> _self_, jule::I64* _89443_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>> _1a8dc25ba_buildTypeEnumItems(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _93140_tokens);
inline jule::Ptr<_1a81b8b48_TypeEnumDecl> _1a8dc290b_buildTypeEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _95539_tokens);
inline jule::Ptr<_1a81a302d_Expr> _1a8dc2d07_buildEnumItemExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::I64* _98239_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> _1a8dc3148_buildEnumItems(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _101436_tokens);
inline jule::Ptr<_1a81b7bad_EnumDecl> _1a8dc3489_buildEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _105135_tokens);
inline jule::Any _1a8dc37ca_buildNodeEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _109639_tokens);
inline jule::Ptr<_1a81b8e12_FieldDecl> _1a8dc3b1b_buildField(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>> _1a8dc3e5c_buildStructDeclFields(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _115442_tokens);
inline jule::Ptr<_1a81b9808_StructDecl> _1a8dc429d_buildStructDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _116537_tokens);
inline void _1a8dc4556_checkMethodReceiver(_1a8db9639_parser* _self_, jule::Ptr<_1a81b0986_FnDecl>* _121336_f);
inline void _1a8dc48b9_buildTraitBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ba045_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1a81881cd_Token>> _123260_tokens);
inline jule::Ptr<_1a81ba045_TraitDecl> _1a8dc4c0a_buildTraitDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _126436_tokens);
inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc504b_buildBindFn(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _129432_tokens);
inline jule::Ptr<_1a81b1b41_VarDecl> _1a8dc538c_buildBindVar(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _130433_tokens);
inline jule::Ptr<_1a81b9808_StructDecl> _1a8dc56cd_buildBindStruct(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _131736_tokens);
inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8dc5a1e_buildBindTypeAlias(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _133139_tokens);
inline jule::Ptr<_1a81b6b46_UseDecl> _1a8dc5d60_buildBindUse(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _134133_tokens);
inline jule::Any _1a8dc61a1_buildBind(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _135231_tokens);
inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc64e2_getMethod(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _137631_tokens);
inline void _1a8dc6855_parseImplBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ba6a5_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _140557_tokens);
inline jule::Ptr<_1a81ba6a5_Impl> _1a8dc6b96_buildImpl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _143830_tokens);
inline jule::Any _1a8dc6ed7_buildNodeData(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _150935_tokens);
inline void _1a8dc7290_applyFnMeta(_1a8db9639_parser* _self_, jule::Ptr<_1a81b0986_FnDecl>* _154232_f);
inline void _1a8dc7548_applyMeta(_1a8db9639_parser* _self_, _1a819cbe8_Node* _154730_node);
inline void _1a8dc7801_pushUseDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _157233_decl);
inline jule::Bool _1a8dc7b42_pushMetaNodes(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _158035_tokens);
inline _1a819cbe8_Node _1a8dc7e83_parseNode(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _160031_st);
inline void _1a8dc823b_appendNode(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _162432_st);
inline void _1a8dc8714_removeRange(_1a8db9639_parser* _self_, jule::I64 _163427_i, jule::U64 _163435_id, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _163451_tokens, jule::Slice<jule::I64>* _163481_ranges);
inline void _1a8dc8b32_pushWrongOrderCloseErr(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token>* _164639_t, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _164658_tokens, jule::Slice<jule::I64>* _164684_ranges);
inline void _1a8dc910a_pushRangeClose(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token> _165730_t, jule::U64 _165748_left, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _165766_tokens, jule::Slice<jule::I64>* _165796_ranges);
inline void _1a8dc93b3_checkRanges(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _167528_tokens);
inline void _1a8dc966b_parse(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a818dc83_Fileset>* _170627_f);
inline void _1a8dcadba_pushErr(_1a8dca7e3_typeBuilder* _self_, jule::Ptr<_1a81881cd_Token> _3123_token, jule::Str _3145_fmt);
inline void _1a8dcb22d_pushSuggestion(_1a8dca7e3_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcb4b4_buildNamespace(_1a8dca7e3_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _1a8dcb74a_buildGenerics(_1a8dca7e3_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8dcb9d1_identGenerics(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcbc67_buildIdent(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcbeed_buildCppLink(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc284_buildFn(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc51a_buildPtr(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc7a1_buildSptr(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcca37_buildSlc(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcccbd_buildArr(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd054_buildMap(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd2da_buildEnumerable(_1a8dca7e3_typeBuilder* _self_);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd571_step(_1a8dca7e3_typeBuilder* _self_);
inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dcd807_build(_1a8dca7e3_typeBuilder* _self_);
inline void _1a84117ca_pushErr(_1a8411247_directiveEval* _self_, jule::Ptr<_1a81881cd_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8411bc6_splitOperans(_1a8411247_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3348_tokens);
inline jule::Bool _1a8412017_evalDirectiveIdent(_1a8411247_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a8412358_evalDirectivePart(_1a8411247_directiveEval* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _7037_part);
inline jule::Bool _1a84125de_eval(_1a8411247_directiveEval* _self_);
inline jule::Bool _1a840da6e_isPassFileAnnotation(_1a8dce8e6_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_1a8dce8e6_Importer> static__1a8dced25_New(_1a840ea09_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _1a8dd00ab_AllPackages(_1a8dce8e6_Importer* _self_);
inline void _1a8dd04eb_SetModPath(_1a8dce8e6_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1a8dd0782_GetModPath(_1a8dce8e6_Importer* _self_);
inline jule::Str _1a8dd0ac3_ModById(_1a8dce8e6_Importer* _self_, jule::I64 _7019_id);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a8dd0e14_GetImport(_1a8dce8e6_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log _1a8dd1310_ImportPackage(_1a8dce8e6_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1a8dd15b8_Imported(_1a8dce8e6_Importer* _self_, jule::Ptr<_1a838b14a_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_21ca95427_Log _1a8dd19e7_isPassBuildDirectives(_1a8dce8e6_Importer* _self_, jule::Ptr<_1a819bc91_AST>* _16842_file);
inline jule::Ptr<_1a8dd5b83_ExprInspector> static__1a8dd5eb3_New(void);
inline void _1a8dd626b_args(_1a8dd5b83_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1a8dd6524_inspect(_1a8dd5b83_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1a8dd6887_Inspect(_1a8dd5b83_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Ptr<_1a8dded13_Meta> static__1a8de01dc_Collect(jule::Ptr<_1a8dd23cc_IR> _7124_ir);
inline jule::Ptr<_1a8dddc35_MetaRuntime> static__1a8de04a6_CollectRuntime(jule::Ptr<_1a8dd23cc_IR>* _8032_ir);
inline jule::Ptr<_1a8ddd064_MetaStrBuilder> static__1a8de0770_CollectStrBuilder(jule::Ptr<_1a8dd23cc_IR>* _10635_ir);
inline jule::Ptr<_1a8dde708_MetaMathCmplx> static__1a8de0a39_CollectMathCmplx(jule::Ptr<_1a8dd23cc_IR>* _12334_ir);
inline jule::Ptr<_1a512b1da_ObjectDeadCode> static__1a512b6c4_new(jule::Ptr<_1a8dd23cc_IR>* _2621_ir);
inline jule::Bool _1aae7d5ec_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns>* _3227_t);
inline jule::Bool _1aae8534b_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829a752_FnIns>* _3227_t);
inline jule::Bool _1aaeaa030_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a82a2da8_Trait>* _3227_t);
inline jule::Bool _1aaeb525a_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83cc1ad_Var>* _3227_t);
inline void _1aae7e07b_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns> _5232_t);
inline void _1aae86539_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829a752_FnIns> _5232_t);
inline void _1aaeaa9ae_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a82a2da8_Trait> _5232_t);
inline void _1aaeb8758_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83cc1ad_Var> _5232_t);
inline void _1a512c076_pushStructAsLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns>* _6538_s);
inline void _1a512c32e_setReferencesAsLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83790c2_ReferenceStack>* _12141_rs);
inline void _1a512c5d7_inits(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _17127_pkg);
inline void _1a512c890_collectLivePackage(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _18540_pkg);
inline void _1a512ca8d_collectLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_);
inline void _1a512cd46_removeDeadGlobals(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _26139_vars);
inline void _1a512d0ee_removeDeadFns(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8297694_Fn>>* _27335_funcs);
inline void _1a512d3a7_removeDeadStructs(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a81be610_Struct>>* _29439_structs);
inline void _1a512d660_removeDeadTraits(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a82a2da8_Trait>>* _31638_traits);
inline void _1a512d918_removeDeadsFile(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829d997_SymTab>* _33737_file);
inline void _1a512dbc1_removeDeadsPackage(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _34440_pkg);
inline void _1a512ddbe_removeDeads(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_);
inline void _1a512e0bc_elimanate(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_);
inline void _1a513082c_optimizeChild(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _1935_s);
inline void _1a5130ad5_optimizeBodyChildExceptional(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _2950_s);
inline void _1a5130d8d_optimizeBodyChild(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _3939_s);
inline void _1a5131146_optimizeExprModel(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1a5131344_eliminateFollowed(_1a5130310_scopeDeadCode* _self_);
inline void _1a51315ec_pushGoto(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8358623_GotoSt> _6929_gt);
inline void _1a51318a5_pushLabel(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8357eb3_Label> _7930_l);
inline void _1a5131b5d_optimizeRangeIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835729d_RangeIter> _9238_it);
inline void _1a5131e16_optimizeWhileIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8356852_WhileIter> _9738_it);
inline void _1a51321be_optimizeInfIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835639b_InfIter> _10536_it);
inline void _1a5132477_optimizeConditional(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835609e_Conditional> _10940_c);
inline void _1a5132730_optimizeMatch(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8359b96_Match> _12734_m);
inline void _1a51329d8_optimizeAssign(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8358ea3_Assign> _14535_assign);
inline void _1a5132c91_optimizeMultiAssign(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8359459_MultiAssign> _15040_assign);
inline void _1a5133049_optimizeStmt(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1a5133247_optimizeStmts(jule::Ptr<_1a5130310_scopeDeadCode> _self_);
inline _1a5134897_exprDeadCode static__1a5134cb5_new(jule::Ptr<_1a5130310_scopeDeadCode>* _1421_s);
inline void _1a513506d_optimize(_1a5134897_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1a43e56a3_pushVar(_1a43e520d_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1a43e59e4_removeVar(_1a43e520d_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1a43e5d35_isSafe(_1a43e520d_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1a43e7d7b_scopeOptimizer> static__1a43e83ed_new(jule::Ptr<_1a8355466_Scope> _2320_scope);
inline void _1a43e86a6_setCurrentStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1a43e88a4_removeCurrent(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_);
inline jule::Bool _1a43e8b3a_isLastStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_);
inline jule::Bool _1a43e8dc1_isIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_);
inline void _1a43e9179_optimizeData(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a85028cc_Data> _6733_d);
inline void _1a43e9432_optimizeVar(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a83cc1ad_Var> _10032_v);
inline void _1a43e96da_optimizeConditional(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835609e_Conditional> _12140_c);
inline void _1a43e9b08_buildDefaultConstantTrueCase(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835a6be_Case> _19549_case, jule::I64* _19573_i, jule::Ptr<_1a8359b96_Match>* _19586_m);
inline void _1a43e9db1_optimizeMatch(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359b96_Match> _22134_m);
inline void _1a43ea169_optimizeRangeIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835729d_RangeIter> _30338_it);
inline void _1a43ea422_optimizeWhileIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8356852_WhileIter> _36038_it);
inline jule::Bool _1a43ea763_substr(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _36627_a);
inline jule::Bool _1a43eaaa4_strAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _38630_a);
inline jule::Bool _1a43eade5_sliceAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _39732_a);
inline void _1a43eb19d_optimizePostfix(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a83589ec_Postfix> _40536_postfix);
inline jule::Bool _1a43eb4de_cmplxAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign>* _41233_assign);
inline void _1a43eb797_optimizeAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _45435_assign);
inline jule::Bool _1a43ebad8_tryOptimizeSwap(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359459_MultiAssign>* _58537_assign);
inline void _1a43ebd91_optimizeMultiAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359459_MultiAssign> _62240_assign);
inline void _1a43ec149_optimizeRet(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835b25d_RetSt> _66832_r);
inline void _1a43ec402_optimizeStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Any _69233_stmt);
inline void _1a43ec6aa_optimizeChild(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8355466_Scope> _72134_child);
inline void _1a43ec8a8_optimize(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_);
inline void static__1a43eee93_optimize(jule::Any* _2226_model);
inline void static__1a440027e_optimizeData(jule::Any* _2630_model, jule::Ptr<_1a4408b28_data>* _2659_d);
inline jule::Bool _1a44005c0_selfCmpCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _3828_m);
inline jule::Bool _1a4400911_boolCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _6725_m);
inline jule::Bool _1a4400c52_arrayCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _12025_m);
inline jule::Bool _1a4401093_strCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _13223_m);
inline jule::Bool _1a4401549_tryNeutralElement1(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _18935_m, jule::Ptr<_1a82273d2_Const> _18966_c, jule::Ptr<_1a8289e7d_OperandExprModel>* _18992_nc);
inline jule::Bool _1a440188a_tryNeutralElement(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _23934_m);
inline void _1a4401b43_checkBinaryForBoundary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _25439_m);
inline void _1a4401deb_checkBinaryForNil(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _30634_m);
inline void _1a44021a4_shift(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _34021_m);
inline void _1a440245c_binary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _35722_m);
inline void _1a4402715_unary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a852_UnaryExprModel> _49521_m);
inline void _1a44029bd_structureLit(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828b226_StructLitExprModel> _53828_m);
inline void _1a4402c76_casting(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828baa6_CastingExprModel> _55423_m);
inline void _1a44030d9_args(_1a43eea86_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _56820_params, jule::Slice<jule::Any>* _56852_args);
inline void _1a4403392_scope(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a8355466_Scope>* _59022_s);
inline void _1a440364a_optimizeStrBuilderCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _59639_m);
inline void _1a4403903_lenCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _61223_m);
inline void _1a4403bab_funcCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828c458_FnCallExprModel> _65524_m);
inline void _1a4403e64_indexing(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828ccd8_IndexingExprModel> _66624_m);
inline void _1a440421c_anonFunc(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _69024_m);
inline void _1a440441a_do(_1a43eea86_exprOptimizer* _self_);
inline void _1a44061db_pushVar(jule::Ptr<_1a4405c46_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a8535877_Type> _2442_kind);
inline jule::Bool _1a440652c_removeVar(_1a4405c46_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1a4406928_isFits(_1a4405c46_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1a8535877_Type> _6136_kind);
inline _1a4408551_dataCheckpoint _1a4408ed0_getCheckpoint(_1a4408b28_data* _self_);
inline void _1a4409288_loadCheckpoint(_1a4408b28_data* _self_, _1a4408551_dataCheckpoint* _4535_c);
inline void _1a440a8a5_pushVar(_1a440a410_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a440b0e2_fitsMaxSize(_1a440a410_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a51359b9_Optimizer> static__1a5135e81_New(jule::Ptr<_1a8dd23cc_IR>* _2121_ir);
inline void _1a5136239_optimizeExpr(_1a51359b9_Optimizer* _self_, jule::Any* _2733_model);
inline void _1a51364e2_optimizeGlobal(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a83cc1ad_Var>* _3135_v);
inline void _1a513679a_optimizeFunction(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a8297694_Fn>* _3737_func);
inline void _1a5136a53_optimizeStruct(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a81be610_Struct>* _4735_s);
inline void _1a5136d0b_optimizeGlobals(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _6336_p);
inline void _1a51370b4_optimizeFunctions(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _7138_p);
inline void _1a513736c_optimizeStructs(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _7936_p);
inline void _1a5137625_optimizePackage(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _8736_p);
inline void _1a5137823_Optimize(_1a51359b9_Optimizer* _self_);
inline _1a5413d74_Time static__1a541425e_Unix(jule::U64 _9117_sec);
inline _1a5413d74_Time static__1a541446d_Now(void);
inline _1a541369d_AbsTime _1a5415b56_Abs(_1a5413d74_Time* _self_);
inline jule::Ptr<_1a5139ade_scopeCoder> static__1a513a2d7_new(jule::Ptr<_1a542125a_ObjectCoder>* _3721_oc);
inline void _1ab3ce685_iterHead(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1a513a9ad_rangeIndexIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _9336_it);
inline void _1a513ac66_rangeHashmapIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _16038_it);
inline void _1a513b01e_strRuneIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e3b9b_StrRuneIter> _24132_it);
inline void _1a513b2c7_ifCase(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355884_If> _35327_i);
inline void _1a513b580_conditional(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835609e_Conditional> _36232_c);
inline void _1a513b838_infIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835639b_InfIter> _38228_it);
inline void _1a513bae1_whileIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8356852_WhileIter> _39930_it);
inline void _1a513bd99_rangeIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter> _43830_it);
inline void _1a513c152_cont(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357633_ContSt> _45121_c);
inline void _1a513c40a_label(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357eb3_Label> _45622_l);
inline void _1a513c6b3_gotoSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358623_GotoSt> _46123_gt);
inline void _1a513c96b_postfix(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a83589ec_Postfix> _46628_p);
inline void _1a513cc24_assignLeft(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Any* _47332_model);
inline void _1a513cecc_shl(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _50424_a);
inline void _1a513d285_shr(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _51024_a);
inline void _1a513d53d_divByZeroAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _51636_a);
inline void _1a513da16_operatorOverloadingAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _52247_s, jule::Ptr<_1a8289e7d_OperandExprModel>* _52273_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _5238_r, jule::U64 _52336_op);
inline void _1a513dcbe_assign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _53727_a);
inline void _1a513e077_mapLookupAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _57037_a);
inline void _1a513e330_multiAssignTup(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _60236_a);
inline void _1a513e5d8_multiAssignFn(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _67235_a);
inline void _1a513e891_multiAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign> _73132_a);
inline jule::Fn<void> _1a513ebd2_matchExpr(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _75730_m);
inline void _1a5140045_case(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _76725_m, jule::Ptr<_1a835a6be_Case> _76746_c);
inline void _1a51402ed_matchSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _83728_m);
inline void _1a51405a6_fallSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835adb7_FallSt> _89223_f);
inline void _1a514085e_breakSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357a0c_BreakSt> _89724_b);
inline void _1a5140b17_setResult(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835b25d_RetSt> _90630_r);
inline void _1a5140dc0_retSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835b25d_RetSt> _93426_r);
inline void _1a5141178_var(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _97024_v);
inline void _1a5141431_mutSlicing(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e288c_MutSlicingExprModel> _97631_m);
inline void _1a51416d9_swap(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e1638_SwapExprModel> _99325_m);
inline void _1a5141992_exceptionalForwarding(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e10a5_ExceptionalForwardingExprModel> _100142_m);
inline void _1a5141c4a_st(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Any _100723_st);
inline void _1a5142003_scopeStmts(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355466_Scope>* _106332_s);
inline void _1a51422ab_scope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355466_Scope> _107226_s);
inline void _1a5142564_commonFuncScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _108737_f);
inline void _1a51428c7_anonFuncScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _112734_m, jule::Str _112761_ident);
inline void _1a5142b80_funcScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a829a752_FnIns> _115930_f);
inline jule::Ptr<_1a51460d4_exprCoder> static__1a51464d0_new(jule::Ptr<_1a542125a_ObjectCoder>* _4821_oc);
inline void _1a5146788_string(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _5424_c);
inline void _1a5146a41_boolean(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Bool _6924_b);
inline void _1a5146c3e_nilLit(jule::Ptr<_1a51460d4_exprCoder> _self_);
inline jule::Bool _1a5147080_ftoaSpecialCases(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::F64* _8134_x);
inline void _1a5147338_float32(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _9525_c);
inline void _1a51475e1_float64(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _11425_c);
inline void _1a5147899_constant(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const> _13229_c);
inline void _1a5147cb7_operatorOverloadingUnary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _15646_s, jule::U64 _15667_op, jule::Any _15686_e);
inline void _1a51481d5_divByZeroBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81881cd_Token>* _16833_op, jule::Ptr<_1a8289e7d_OperandExprModel>* _16857_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _16890_r);
inline void _1a51488cd__unsafeBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, _21ca86171_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1a8535877_Type>* _2088_lk, jule::Ptr<_1a8535877_Type>* _20830_rk, jule::U64 _20847_op, jule::Str _20862_kind);
inline void _1a5148b86_unsafeBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a478_BinaryExprModel> _27733_m);
inline void _1a5148ee9_shl(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8289e7d_OperandExprModel>* _28925_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _28958_r);
inline void _1a514935c_shr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8289e7d_OperandExprModel>* _31725_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _31758_r);
inline void _1a5149615_binary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a478_BinaryExprModel> _34527_m);
inline void _1a51498bd_var(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _36924_m);
inline void _1a5149b76_structureIns(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns> _38533_m);
inline void _1a5149e2e_unary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a852_UnaryExprModel> _38926_m);
inline void _1a514a1d7_structureLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828b226_StructLitExprModel> _42033_m);
inline void _1a514a490_allocStructure(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828b523_AllocStructLitExprModel> _46335_m);
inline void _1a514a748_possibleRefExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _47132_expr);
inline void _1a514ab66_castTraitFromTrait(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828baa6_CastingExprModel>* _48540_m, jule::Ptr<_1a82a2da8_Trait> _48572_t1, jule::Ptr<_1a82a2da8_Trait> _48594_t2);
inline void _1a514ae1e_casting(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828baa6_CastingExprModel> _49828_m);
inline void _1a514b1c7_args(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _64526_m);
inline void _1a514b480_modelForCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _67633_expr);
inline void _1a514b738_pushCallInf(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _69129_m);
inline jule::Bool _1a514ba79_isWrapped(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _71431_m);
inline jule::Bool _1a514bdba_writeReceiver(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _73834_m);
inline void _1a514c173_pureFuncCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _75134_m);
inline void _1a514c42b_coFuncCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _84132_m);
inline void _1a514c78e_writeUseExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _91934_f, jule::Ptr<_1a85028cc_Data> _91955_d);
inline void _1a514cb02_funcCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel> _94029_m, jule::Bool _94056_ignoreExceptional);
inline void _1a514cdaa_slice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c832_SliceExprModel> _102326_m);
inline void _1a514d163_indexing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828ccd8_IndexingExprModel> _105229_m);
inline void _1a514d41b_unsafeIndexing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e301e_UnsafeIndexingExprModel> _110335_m);
inline void _1a514d6c4_anonFunc(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _112029_m);
inline void _1a514d97c_mapExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828da42_MapExprModel> _115128_m);
inline void _1a514dc35_slicing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828e0c5_SlicingExprModel> _118628_m);
inline void _1a514dedd_traitSub(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828e658_TraitSubIdentExprModel> _120229_m);
inline void _1a514e296_structureSub(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828eee9_StructSubIdentExprModel> _121833_m);
inline void _1a514e54e_array(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290769_ArrayExprModel> _122726_m);
inline void _1a514e807_funcInsCommon(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns> _127734_m);
inline void _1a514eab0_funcIns(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns> _128428_m);
inline void _1a514ed68_tuple(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290a66_TupleExprModel> _129526_m);
inline void _1a5150121_newCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291539_BuiltinNewCallExprModel> _130628_m);
inline void _1a51503c9_printCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> _131830_m);
inline void _1a5150682_printlnCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> _132732_m);
inline void _1a515093a_panicCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _133630_m);
inline void _1a5150be3_errorCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _134430_m);
inline void _1a5150e9b_copyCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293140_BuiltinCopyCallExprModel> _137629_m);
inline void _1a5151254_lenCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _138428_m);
inline void _1a515150c_capCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829288c_BuiltinCapCallExprModel> _140028_m);
inline void _1a51517b5_deleteCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _140531_m);
inline void _1a5151a6d_makeCallSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel>* _142935_m);
inline void _1a5151d26_makeCallStr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel>* _145333_m);
inline void _1a51520ce_makeCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _146429_m);
inline void _1a5152387_pushToSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e33e8_PushToSliceExprModel> _147232_m);
inline void _1a5152640_appendToSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e37c2_AppendToSliceExprModel> _153234_m);
inline void _1a51528e8_appendCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _154031_m);
inline void _1a5152ba1_sizeof(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293816_SizeofExprModel> _154827_m);
inline void _1a5152e59_alignof(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293eba_AlignofExprModel> _155428_m);
inline void _1a5153212_runeLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82941a7_RuneExprModel> _156024_m);
inline void _1a51534ba_structureStatic(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290390_StructStaticIdentExprModel> _157436_m);
inline void _1a5153773_backendEmit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829452b_BackendEmitExprModel> _157832_m);
inline void _1a5153a2b_free(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8294828_FreeExprModel> _159425_m);
inline void _1a5153cd4_strComp(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e2309_StrCompExprModel> _160328_m);
inline void _1a515408c_emptyCompare(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e1a56_EmptyCompareExprModel> _161933_m);
inline void _1a5154345_unsafeDeref(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e3e98_UnsafeDerefExprModel> _162832_m);
inline void _1a51545ed_unsafeCasting(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e4295_UnsafeCastingExprModel> _163934_m);
inline void _1a51548a6_model(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _165626_m);
inline jule::Bool _1a5154be7_handleFieldByDefault(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c18ba_FieldIns>* _175842_f);
inline void _1a5154ea0_initStructLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _177935_s);
inline void _1a5155258_fillCollectionByDefault(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type>* _180145_elem);
inline void _1a5155511_initCollection(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type>* _181636_elem);
inline void _1a51557b9_initArray(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a85452b0_Arr>* _183031_arr);
inline void _1a5155a72_initExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type> _184429_t);
inline jule::Ptr<_1a5158668_TestCoder> static__1a5158b1e_New(jule::Ptr<_1a542125a_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a5158da5_findTestingPackage(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void _1a515915d_appendTest(jule::Ptr<_1a5158668_TestCoder> _self_, jule::Ptr<_1a829a752_FnIns> _3531_f);
inline void _1a5159416_appendPackageTests(jule::Ptr<_1a5158668_TestCoder> _self_, jule::Ptr<_1a838d8bc_Package>* _5040_p);
inline jule::Bool _1a515969c_readyTestingPackage(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void _1a515989a_callTmReset(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void _1a5159a98_callTmFailed(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void _1a5159c96_callTmSkipped(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void _1a5159e94_Serialize(jule::Ptr<_1a5158668_TestCoder> _self_);
inline void static__1a90deb28_writeIdentTo(_21ca86171_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1a90deebe_toOut(_21ca86171_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1a90e0420_toLocal(_21ca86171_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident);
inline void static__1a90e070b_func(_21ca86171_Builder* _7722_buf, jule::Ptr<_1a8297694_Fn>* _7750_f);
inline void static__1a90e09e7_funcIns(_21ca86171_Builder* _9525_buf, jule::Ptr<_1a829a752_FnIns>* _9553_f);
inline void static__1a90e0cd3_traitDecl(_21ca86171_Builder* _11027_buf, jule::Ptr<_1a82a2da8_Trait> _11050_t);
inline void static__1a90e10be_param(_21ca86171_Builder* _11423_buf, jule::Ptr<_1a8295bc0_Param>* _11447_p);
inline void static__1a90e13aa_structure(_21ca86171_Builder* _12927_buf, jule::Ptr<_1a81be610_Struct>* _12951_s);
inline void static__1a90e1696_structureIns(_21ca86171_Builder* _14030_buf, jule::Ptr<_1a81c246a_StructIns>* _14054_s);
inline void static__1a9394c35_field(_21ca86171_Builder* _14823_buf, jule::Ptr<_1a81bb6d9_Field>* _14847_f);
inline void static__1a9395021_var(_21ca86171_Builder* _15821_buf, jule::Ptr<_1a83cc1ad_Var> _15848_v);
inline void static__1a939530c_iterBegin(_21ca86171_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1a93955e8_iterEnd(_21ca86171_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1a93958d4_iterNext(_21ca86171_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1a9395bc0_label(_21ca86171_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1a9395eab_matchEnd(_21ca86171_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1a9396297_caseBegin(_21ca86171_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1a542125a_ObjectCoder> static__1a54216bc_New(jule::Ptr<_1a8dd23cc_IR>* _12021_ir, _1a541d9a5_SerializationInfo _12035_info);
inline void _1a5421975_write(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Str _13322_s);
inline void _1a5421c2d_writeBytes(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _1a5421e2b_addIndent(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a5422129_doneIndent(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a5422327_indent(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline jule::I64 _1a5422668_findAnyType(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type>* _15633_t);
inline jule::I64 _1a54229a9_pushCoSpawn(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns> _16532_f);
inline jule::I64 _1a5422cea_pushDealloc(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type> _26832_t);
inline jule::Str _1a542313b_pushAnonFn(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _28432_m);
inline jule::I64 _1a542347c_pushAnyType(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type> _32632_t);
inline void _1a5423735_pushResultIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _42635_f);
inline void _1a54239dd_pushResult(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _44732_f);
inline void _1a5423d51_pushAndWriteMaskMapper(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait> _46043_t1, jule::Ptr<_1a82a2da8_Trait> _46065_t2);
inline void _1a5424109_locInfo(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81881cd_Token>* _51125_t);
inline void _1a5424307_head(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a54245b0_links(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Bool _57822_std);
inline void _1a5424868_prepareStructure(_1a542125a_ObjectCoder* _self_, jule::Ptr<_1a81be610_Struct>* _60137_s);
inline void _1a5424a66_prepareStructures(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a5424d1e_structurePlainDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _63240_s);
inline void _1a542501c_structurePlainDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a54252c5_fieldDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c18ba_FieldIns>* _64831_f);
inline void _1a54256e3_structureOperatorEq(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1a81c246a_StructIns>* _65553_s, jule::Bool _65574_decl);
inline void _1a5425a56_structureOperators(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _72340_s, jule::Bool _72361_decl);
inline void _1a5425d0e_structureInsDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _73238_s);
inline void _1a54260b7_structureDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _75835_s);
inline void _1a54262b5_structureDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a54264b3_structureMethodDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542698b_funcHead(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _79230_buf, jule::Ptr<_1a829a752_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident);
inline void _1a5426cee_funcDeclIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _81133_f, jule::Bool _81150_ptr);
inline void _1a5427162_funcDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _81930_f, jule::Bool _81944_ptr);
inline void _1a542741a_funcDeclTrait(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _82535_f);
inline void _1a5427618_funcDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a54278c1_traitDataTypeMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _84742_hash);
inline void _1a5427abe_traitDataTypes(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a5427e32_paramIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _87530_buf, jule::Ptr<_1a82995ec_ParamIns>* _87558_p);
inline void _1a5428295_paramsIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _88131_buf, jule::Ptr<_1a829a752_FnIns>* _88159_f);
inline void _1a5428608_varInitExpr(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a83cc1ad_Var>* _90233_v, jule::Fn<void> _90248_init);
inline void _1a54288b1_var(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _92024_v);
inline void _1a5428c24_anonFuncInsDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _95137_m, jule::Str _95164_ident);
inline void _1a5429087_anonFuncIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _95733_m, jule::Str _95760_ident);
inline void _1a54293ea_funcIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns> _96728_f, jule::Str _96745_ident);
inline void _1a54296a3_func(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _97726_f);
inline void _1a5429a16_funcTrait(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _98327_s, jule::Ptr<_1a829a752_FnIns>* _98353_f);
inline __jule_tuple_x_1a829a752_FnIns__jule_tuple_bool _1a5429d57_findTraitMetMap(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _99837_m);
inline void _1a542a1ba_traitWrapper(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait>* _101034_t, jule::Ptr<_1a8297694_Fn>* _101056_m);
inline void _1a542a3b8_traitWrappers(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542a72b_traitDataMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _107438_hash, jule::Ptr<_1a81c246a_StructIns> _107456_s);
inline void _1a542ab49_traitData(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _109231_hash, jule::I64 _109249_i, jule::Ptr<_1a81c246a_StructIns>* _109262_s);
inline void _1a542ad47_traitDatas(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542b045_globalDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542b243_decls(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542b4eb_structureMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _115238_s);
inline void _1a542b7a4_structureIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _115934_s);
inline void _1a542ba5c_structure(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _116531_s);
inline void _1a542bc5a_structures(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542be58_funcs(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542c211_pushInit(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a838d8bc_Package>* _120430_pkg);
inline void _1a542c40e_anonHashes(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542c60c_initGlobals(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542c80a_initCaller(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542ca08_end(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542ccb1_buildTraitHash(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait>* _127636_t);
inline void _1a542ceae_buildTraitHashes(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542d322_insertBuf(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _130631_buf, jule::I64 _130654_pos);
inline void _1a542d520_implementRC(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542d71d_serializeHead(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline void _1a542d91b_Serialize(jule::Ptr<_1a542125a_ObjectCoder> _self_);
inline jule::Str _1a5430973_Str(_1a5430588_customType* _self_);
inline jule::Bool _1a5430cb4_Equal(jule::Ptr<_1a5430588_customType> _self_, jule::Ptr<_1a8535877_Type> _2518_k);
inline jule::Ptr<_1a54311b0_typeCoder> static__1a5431710_new(jule::Ptr<_1a542125a_ObjectCoder>* _5021_oc);
inline void _1a5431a73_toType(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _5727_buf, jule::Str _5754_id);
inline void _1a5431dd6_prim(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _7125_buf, jule::Ptr<_1a853d990_Prim> _7148_p);
inline void _1a5432249_tuple(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _7626_buf, jule::Ptr<_1a8543a83_Tuple> _7653_t);
inline void _1a54325ac_asSptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1a5432920_sptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _9525_buf, jule::Ptr<_1a85424bb_Sptr> _9552_sptr);
inline void _1a5432c83_ptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _10224_buf, jule::Ptr<_1a8545c83_Ptr> _10251_p);
inline void _1a54330e6_enumDecl(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _11329_buf, jule::Ptr<_1a82a555e_Enum> _11356_e);
inline void _1a5433459_typeEnumDecl(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _11833_buf, jule::Ptr<_1a82a6c69_TypeEnum> _11860_e);
inline void _1a54337bc_asSlice(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _12228_buf, jule::Ptr<_1a8535877_Type> _12255_elem);
inline void _1a5433b30_slice(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _12926_buf, jule::Ptr<_1a8542e8e_Slc> _12953_s);
inline void _1a5433e93_mapType(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _13428_buf, jule::Ptr<_1a8544633_Map> _13455_m);
inline void _1a5434669_structureIns(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _14733_buf, jule::Ptr<_1a81c246a_StructIns> _14760_s);
inline void _1a54349cc_array(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _17126_buf, jule::Ptr<_1a85452b0_Arr> _17153_a);
inline void _1a54351a3_paramIns(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _19429_buf, jule::Ptr<_1a82995ec_ParamIns>* _19457_p);
inline void _1a5435879_funcInsResult(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _22634_s, jule::Ptr<_1a829a752_FnIns>* _22660_f);
inline void _1a5435bdc_anonFunc(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _24429_buf, jule::Ptr<_1a829a752_FnIns> _24456_f);
inline void _1a5436050_func(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _26525_buf, jule::Ptr<_1a829a752_FnIns> _26552_f);
inline void _1a54363b3_kind(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _27225_buf, jule::Ptr<_1a8535877_Type> _27252_k);
inline jule::Ptr<_1a5438c9a_resultCoder> static__1a54392a6_new(jule::Ptr<_1a54311b0_typeCoder>* _34021_tc);
inline void _1a5439619_ptr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _34424_s, jule::Ptr<_1a8545c83_Ptr> _34449_p);
inline void _1a543997c_sptr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _34925_s, jule::Ptr<_1a85424bb_Sptr> _34950_p);
inline void _1a5439ce0_mapType(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _35428_s, jule::Ptr<_1a8544633_Map> _35453_p);
inline void _1a543a153_slice(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _36026_s, jule::Ptr<_1a8542e8e_Slc> _36051_slc);
inline void _1a543a4b6_arr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _36524_s, jule::Ptr<_1a85452b0_Arr> _36549_arr);
inline void _1a543a829_func(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _37125_s, jule::Ptr<_1a829a752_FnIns> _37150_f);
inline void _1a543ab8c_tup(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _38424_s, jule::Ptr<_1a8543a83_Tuple> _38449_tup);
inline void _1a543b000_codeMut(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _39128_s, jule::Ptr<_1a8535877_Type>* _39154_t);
inline void _1a543b363_codeMut1(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _43129_s, jule::Ptr<_1a8535877_Type>* _43155_t);
inline jule::Slice<jule::U8> _1a543b671_code(_1a5438c9a_resultCoder* _self_, jule::Ptr<_1a8535877_Type>* _44025_t);
inline jule::Str _1aba54a74_Name(_1aba54788_Flag* _self_);
inline jule::Str _1aba54bb7_What(_1aba54788_Flag* _self_);
inline void _1aba54d0a_Reset(_1aba54788_Flag* _self_);
inline jule::I32 _1aba54e4d_Short(_1aba54788_Flag* _self_);
inline jule::Str _1aba57c97_Name(_1aba5811b_Flag* _self_);
inline jule::Str _1aba58407_What(_1aba5811b_Flag* _self_);
inline void _1aba5854a_Reset(_1aba5811b_Flag* _self_);
inline jule::I32 _1aba5868d_Short(_1aba5811b_Flag* _self_);
inline jule::Str _1aba5b4a4_Name(_1aba5b828_Flag* _self_);
inline jule::Str _1aba5bb14_What(_1aba5b828_Flag* _self_);
inline void _1aba5bc57_Reset(_1aba5b828_Flag* _self_);
inline jule::I32 _1aba5bd9a_Short(_1aba5b828_Flag* _self_);
inline jule::Str _1aba5ec05_Name(_1aba60079_Flag* _self_);
inline jule::Str _1aba60365_What(_1aba60079_Flag* _self_);
inline void _1aba604a8_Reset(_1aba60079_Flag* _self_);
inline jule::I32 _1aba605eb_Short(_1aba60079_Flag* _self_);
inline jule::Str _1aba63412_Name(_1aba63786_Flag* _self_);
inline jule::Str _1aba63a72_What(_1aba63786_Flag* _self_);
inline void _1aba63bb5_Reset(_1aba63786_Flag* _self_);
inline jule::I32 _1aba63d08_Short(_1aba63786_Flag* _self_);
inline jule::Ptr<_1a90e57aa_FlagSet> static__1a90e5ac9_New(void);
inline jule::Trait _1a90e6080_FindFlag(_1a90e57aa_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a90e63c1_FindFlagShort(_1a90e57aa_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a90e6998_Parse(_1a90e57aa_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1aba63786_Flag> _1abae74a7_addFlagCommon(_1a90e57aa_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1aba60079_Flag> _1abb0157c_addFlagCommon(_1a90e57aa_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1abae4c79_AddVar(_1a90e57aa_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1abaedd93_AddVar(_1a90e57aa_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1aba76557_parseInteger(_1a90e826e_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1aba7e131_parseInteger(_1a90e826e_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1a90e8abb_getData(_1a90e826e_argParser* _self_);
inline jule::VoidExceptional _1a90e8d41_processFlag(_1a90e826e_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a90e90e9_singleDash(_1a90e826e_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a90e93a2_doubleDash(_1a90e826e_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a90e95a0_tryArg(_1a90e826e_argParser* _self_);
inline jule::VoidExceptional _1a90e979d_parse(_1a90e826e_argParser* _self_);
inline jule::Ptr<_21cc3c019_Cmd> static__21cc3c46a_New(jule::Str _3516_path);
inline jule::VoidExceptional _21cc3c668_Spawn(_21cc3c019_Cmd* _self_);
inline jule::Exceptional<jule::I64> _21cc3caec_Wait(_21cc3c019_Cmd* _self_);
inline jule::VoidExceptional _21cc7d7ec_spawn(_21cc3c019_Cmd* _self_);
inline jule::Exceptional<jule::I64> _21cc7dc81_wait(_21cc3c019_Cmd* _self_);
inline jule::Exceptional<jule::Slice<_21cc3b47a_Dir>> static__2053769ce_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__205376bcc_Create(jule::Str _3319_path);
inline jule::VoidExceptional static__205376e0d_Remove(jule::Str _4519_path);
inline __jule_tuple_x_1a8dd23cc_IR__jule_tuple_s_21ca95427_Log static__1a8dd28a5_Build(jule::Str _3018_path, jule::I64 _3029_flags);
inline void _1a8dd2d8e_appendStructs(_1a8dd23cc_IR* _self_, jule::Ptr<_1a838d8bc_Package>* _6830_p, jule::Slice<jule::Ptr<_1a81be610_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1a81be610_Struct>> _1a8dd3125_GetAllStructures(_1a8dd23cc_IR* _self_);
inline void _1a8dd3488_appendGlobals(_1a8dd23cc_IR* _self_, jule::Ptr<_1a838d8bc_Package>* _9130_p, jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1a8dd371e_GetAllGlobals(_1a8dd23cc_IR* _self_);
inline void _1a8dd391c_Order(_1a8dd23cc_IR* _self_);
inline jule::I32 _21c6e0270_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _21c6e0539_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _21c6e087a_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _21c6e0b11_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _21c6e0e85_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _21c6e121b_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _21c6e1529_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _21c6e17e3_U16PtrToStr(jule::U16* _4623_s);
inline jule::I64 _21c65d5d9_GetLastErrno(void);
inline jule::Uintptr _21c718d37_GetStdHandle(jule::Uintptr _6517_stdh);
inline jule::Bool _21c719101_CloseHandle(jule::Uintptr _6623_stdh);
inline jule::I64 _21c719475_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat);
inline jule::I64 _21c7198a4_Wopen(jule::U16* _7417_path, jule::I64 _7429_flag, jule::I64 _7440_mode);
inline jule::U32 _21c719ab3_GetLastError(void);
inline jule::U32 _21c719e37_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff);
inline jule::Bool _21c71a4ba_DeleteFile(jule::U16* _9422_path);
inline jule::Bool _21c71a784_CreateDirectory(jule::U16* _9927_path);
inline jule::Bool _21c71aa4d_RemoveDirectory(jule::U16* _10427_path);
inline jule::U32 _21c71b037_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname);
inline jule::Bool _21c71b3ab_GetConsoleMode(jule::Uintptr _11519_handle, jule::I64* _11540_mode);
inline jule::Bool _21c71b9b6_SetConsoleMode(jule::Uintptr _12019_handle, jule::I64 _12035_mode);
inline jule::Bool _21c71c016_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved);
inline jule::Bool _21c71c500_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed);
inline jule::Uintptr _21c71ca83_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data);
inline jule::I64 _21c71ce07_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data);
inline jule::I64 _21c71d1c1_FindClose(jule::Uintptr _15514_h);
inline jule::I64 _21c72d38a_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _21c72d764_Close(jule::I64 _2510_handle);
inline jule::I64 _21c72db1b_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _21c72dd4c_Exit(jule::I64 _339_code);
inline jule::Str _21c73e577_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a5539a7c_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _21c7556ae_StrBytes(jule::Str _4013_s);
inline jule::Str _21c755945_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _21c755c0e_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _21c84eb82_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _21c84eec3_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _21c850523_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _21c8507dc_RuneLen(jule::I32 _35212_r);
inline jule::I64 _21c850c71_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _21c85106d_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _21c8513e2_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _21c851975_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _21c851c3e_RuneStart(jule::U8 _51714_b);
inline jule::I64 _21c9a193d_LeadingZeros64(jule::U64 _5919_x);
inline jule::I64 _21c9a2884_TrailingZeros(jule::U64 _8118_x);
inline jule::I64 _21c9a3269_TrailingZeros32(jule::U32 _10320_x);
inline jule::I64 _21c9a3533_TrailingZeros64(jule::U64 _11220_x);
inline jule::I64 _21c9a900b_Len32(jule::U32 _35014_x);
inline jule::I64 _21c9a92c5_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _21c9aa062_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _21c9ab86b_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _21b5547cd_f64bits(jule::F64 _612_f);
inline jule::I64 _21c376c4d_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1a581cc0b_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1a5871127_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1a6857904_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1ab2aeca2_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline void _21c852943__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I64 _21c852cd9_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I64 _21c85315d_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U64 _1a575dc07_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1a575ddc2_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Slice<jule::Str> _21c859818_args(void);
inline jule::Str _21c859cbe_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _21c864d40_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1abab03d7_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1abaa51e0_structToStr(_21ca86171_Builder _17519_x);
inline jule::Str _1a57c5ba3_toStr(jule::Any _21613_x);
inline jule::Str _1a57c7d81_toStr(jule::Str _21613_x);
inline jule::Str _1a57c85ce_toStr(jule::I64 _21613_x);
inline jule::Str _1a57cd33c_toStr(jule::I8 _21613_x);
inline jule::Str _1a57cb071_toStr(jule::I16 _21613_x);
inline jule::Str _1a57d374e_toStr(jule::I32 _21613_x);
inline jule::Str _1a57d6235_toStr(jule::I64 _21613_x);
inline jule::Str _1a57d8c82_toStr(jule::U64 _21613_x);
inline jule::Str _1a57d6796_toStr(jule::Uintptr _21613_x);
inline jule::Str _1a57db966_toStr(jule::U8 _21613_x);
inline jule::Str _1a57ddda8_toStr(jule::U16 _21613_x);
inline jule::Str _1a57e12ea_toStr(jule::U32 _21613_x);
inline jule::Str _1a57e373c_toStr(jule::U64 _21613_x);
inline jule::Str _1a57e6b19_toStr(jule::F32 _21613_x);
inline jule::Str _1a57e6e8d_toStr(jule::F64 _21613_x);
inline jule::Str _1a57d3b28_toStr(jule::Bool _21613_x);
inline jule::Str _1a64ebbd6_toStr(jule::I64 _21613_x);
inline jule::Str _1a6507d24_toStr(jule::I64 _21613_x);
inline jule::Str _1a6540136_toStr(jule::I64 _21613_x);
inline jule::Str _1a68767e1_toStr(jule::I64 _21613_x);
inline jule::Str _1a9631983_toStr(jule::Ptr<_1a83cc1ad_Var> _21613_x);
inline jule::Str _1a9634029_toStr(jule::Ptr<_1a8534a85_TypeAlias> _21613_x);
inline jule::Str _1a96379bc_toStr(jule::Ptr<_1a81be610_Struct> _21613_x);
inline jule::Str _1a6d58e6b_toStr(jule::Ptr<_1a8297694_Fn> _21613_x);
inline jule::Str _1a6d5b754_toStr(jule::Ptr<_1a82a2da8_Trait> _21613_x);
inline jule::Str _1a6d5ee3e_toStr(jule::Ptr<_1a82a555e_Enum> _21613_x);
inline jule::Str _1a6d60307_toStr(jule::Ptr<_1a82a6c69_TypeEnum> _21613_x);
inline jule::Str _1a6d81e83_toStr(jule::Ptr<_1a81bb6d9_Field> _21613_x);
inline jule::Str _1a6d9414e_toStr(jule::Ptr<_1a82273d2_Const> _21613_x);
inline jule::Str _1a6dad377_toStr(jule::Ptr<_1a82a4a03_EnumItem> _21613_x);
inline jule::Str _1a6dbe993_toStr(jule::Ptr<_1a8295bc0_Param> _21613_x);
inline jule::Str _1a96c59b1_toStr(jule::Str _21613_x);
inline jule::Str _1a979db33_toStr(jule::Ptr<_1a819e304_IdentTypeDecl> _21613_x);
inline jule::Str _1a97b5e14_toStr(jule::Ptr<_1a8290a66_TupleExprModel> _21613_x);
inline jule::Str _1a97b8367_toStr(jule::Ptr<_1a81a3b22_TupleExpr> _21613_x);
inline jule::Str _1a97cd06e_toStr(jule::Ptr<_1a81ac697_AssignSt> _21613_x);
inline jule::Str _1a97d111b_toStr(jule::Ptr<_1a81a302d_Expr> _21613_x);
inline jule::Str _1a97d06e2_toStr(jule::Ptr<_1a83589ec_Postfix> _21613_x);
inline jule::Str _1a97d6033_toStr(jule::Ptr<_1a8358ea3_Assign> _21613_x);
inline jule::Str _1a97d3607_toStr(jule::Ptr<_1a8359459_MultiAssign> _21613_x);
inline jule::Str _1a97db720_toStr(jule::Ptr<_1a85028cc_Data> _21613_x);
inline jule::Str _1a97ded72_toStr(jule::Ptr<_1a828c458_FnCallExprModel> _21613_x);
inline jule::Str _1a992ae9c_toStr(jule::Ptr<_1a8357eb3_Label> _21613_x);
inline jule::Str _1a9949570_toStr(jule::Ptr<_1a8355466_Scope> _21613_x);
inline jule::Str _1a98094eb_toStr(jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _1a980db60_toStr(jule::Ptr<_1a829452b_BackendEmitExprModel> _21613_x);
inline jule::Str _1a980e369_toStr(jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _1a9811b85_toStr(jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _1a980dd3b_toStr(jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _1a9817608_toStr(jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _1a981b60c_toStr(jule::Ptr<_1a8293140_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _1a981cc4b_toStr(jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _1a9821ca5_toStr(jule::Ptr<_1a8294828_FreeExprModel> _21613_x);
inline jule::Str _1a982c6a6_toStr(jule::Ptr<_1a835609e_Conditional> _21613_x);
inline jule::Str _1a9838085_toStr(jule::Ptr<_1a835639b_InfIter> _21613_x);
inline jule::Str _1a983dde3_toStr(jule::Ptr<_1a8356852_WhileIter> _21613_x);
inline jule::Str _1a986625b_toStr(jule::Ptr<_1a835729d_RangeIter> _21613_x);
inline jule::Str _1a9875d70_toStr(jule::Ptr<_1a81b30b5_WhileKind> _21613_x);
inline jule::Str _1a98789dd_toStr(jule::Ptr<_1a81b39bc_RangeKind> _21613_x);
inline jule::Str _1a9895356_toStr(jule::Ptr<_1a8357633_ContSt> _21613_x);
inline jule::Str _1a989e1d9_toStr(jule::Ptr<_1a8358623_GotoSt> _21613_x);
inline jule::Str _1a98d660b_toStr(jule::Ptr<_1a81a4848_IdentExpr> _21613_x);
inline jule::Str _1a98eb654_toStr(jule::Ptr<_1a828ccd8_IndexingExprModel> _21613_x);
inline jule::Str _1a9aa549a_toStr(jule::Ptr<_1a8359b96_Match> _21613_x);
inline jule::Str _1a9ab97cd_toStr(jule::Ptr<_1a835adb7_FallSt> _21613_x);
inline jule::Str _1a9ad583d_toStr(jule::Ptr<_1a8357a0c_BreakSt> _21613_x);
inline jule::Str _1a9adbed7_toStr(jule::Ptr<_1a835b25d_RetSt> _21613_x);
inline jule::Str _1a9ae6a6e_toStr(jule::Ptr<_1a81adce7_ScopeTree> _21613_x);
inline jule::Str _1a9ae6d05_toStr(jule::Ptr<_1a81b1b41_VarDecl> _21613_x);
inline jule::Str _1a9aec080_toStr(jule::Ptr<_1a81b57e3_TypeAliasDecl> _21613_x);
inline jule::Str _1a9b008e1_toStr(jule::Ptr<_1a81b50a6_Conditional> _21613_x);
inline jule::Str _1a9b03e66_toStr(jule::Ptr<_1a81b278a_Iter> _21613_x);
inline jule::Str _1a9b07c17_toStr(jule::Ptr<_1a81b4270_ContSt> _21613_x);
inline jule::Str _1a9b001d7_toStr(jule::Ptr<_1a81ab2cd_LabelSt> _21613_x);
inline jule::Str _1a9b0dd83_toStr(jule::Ptr<_1a81ab6a7_GotoSt> _21613_x);
inline jule::Str _1a9b118ad_toStr(jule::Ptr<_1a81b65b3_MatchCase> _21613_x);
inline jule::Str _1a9b14d9a_toStr(jule::Ptr<_1a81ab9a4_FallSt> _21613_x);
inline jule::Str _1a9b18bd4_toStr(jule::Ptr<_1a81b3d96_BreakSt> _21613_x);
inline jule::Str _1a9b1b27a_toStr(jule::Ptr<_1a81b201a_RetSt> _21613_x);
inline jule::Str _1a9b200b4_toStr(jule::Ptr<_1a81a3902_UseExpr> _21613_x);
inline jule::Str _1a99c8c1a_toStr(jule::Ptr<_1a81ba6a5_Impl> _21613_x);
inline jule::Str _1a99cd802_toStr(jule::Ptr<_1a81b9808_StructDecl> _21613_x);
inline jule::Str _1a99d1816_toStr(jule::Ptr<_1a81b0986_FnDecl> _21613_x);
inline jule::Str _1a99d4ece_toStr(jule::Ptr<_1a81ba045_TraitDecl> _21613_x);
inline jule::Str _1a99db0a1_toStr(jule::Ptr<_1a81b7bad_EnumDecl> _21613_x);
inline jule::Str _1a99dd67a_toStr(jule::Ptr<_1a81b8b48_TypeEnumDecl> _21613_x);
inline jule::Str _1a9a167a2_toStr(jule::Ptr<_1a828eee9_StructSubIdentExprModel> _21613_x);
inline jule::Str _1a9a17033_toStr(jule::Ptr<_1a828a852_UnaryExprModel> _21613_x);
inline jule::Str _1a9a49ebc_toStr(jule::Ptr<_1a829a752_FnIns> _21613_x);
inline jule::Str _1a9edc30a_toStr(jule::Ptr<_1a81a1713_MapTypeDecl> _21613_x);
inline jule::Str _1a9ee2b90_toStr(jule::Ptr<_1a81a0426_TupleTypeDecl> _21613_x);
inline jule::Str _1aa00609e_toStr(jule::Ptr<_1a81a0eb5_ArrTypeDecl> _21613_x);
inline jule::Str _1aa00c605_toStr(jule::Ptr<_1a81a0129_SlcTypeDecl> _21613_x);
inline jule::Str _1aa013c27_toStr(jule::Ptr<_1a81a0723_PtrTypeDecl> _21613_x);
inline jule::Str _1aa019de8_toStr(jule::Ptr<_1a819ec94_SptrTypeDecl> _21613_x);
inline jule::Str _1aa065806_toStr(jule::Ptr<_1a81a54b4_VariadicExpr> _21613_x);
inline jule::Str _1aa06b587_toStr(jule::Ptr<_1a828c832_SliceExprModel> _21613_x);
inline jule::Str _1aa0865a2_toStr(jule::Ptr<_1a81a774c_FieldExprPair> _21613_x);
inline jule::Str _1aa0900c2_toStr(jule::Ptr<_1a81a8d58_KeyValPair> _21613_x);
inline jule::Str _1aa0e6d71_toStr(jule::Ptr<_1a81a6c57_FnCallExpr> _21613_x);
inline jule::Str _1aa109a87_toStr(jule::Ptr<_1a828b523_AllocStructLitExprModel> _21613_x);
inline jule::Str _1aa12296d_toStr(jule::Ptr<_1a828baa6_CastingExprModel> _21613_x);
inline jule::Str _1aa13a337_toStr(jule::Ptr<_1a8290390_StructStaticIdentExprModel> _21613_x);
inline jule::Str _1aa13c9ee_toStr(jule::Ptr<_1a81a6141_SubIdentExpr> _21613_x);
inline jule::Str _1aa149742_toStr(jule::Ptr<_1a828b226_StructLitExprModel> _21613_x);
inline jule::Str _1aa16b599_toStr(jule::Ptr<_1a82941a7_RuneExprModel> _21613_x);
inline jule::Str _1aa18e468_toStr(jule::Ptr<_1a81c246a_StructIns> _21613_x);
inline jule::Str _1aa1cb43e_toStr(jule::Ptr<_1a8535877_Type> _21613_x);
inline jule::Str _1aa1ed95b_toStr(jule::Ptr<_1a8290769_ArrayExprModel> _21613_x);
inline jule::Str _1aa237a94_toStr(jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _21613_x);
inline jule::Str _1aa23c1a3_toStr(jule::Ptr<_1a81a50da_UnaryExpr> _21613_x);
inline jule::Str _1aa246355_toStr(jule::Ptr<_1a819dbe9_TypeDecl> _21613_x);
inline jule::Str _1aa24ab2e_toStr(jule::Ptr<_1a81a5c67_NamespaceExpr> _21613_x);
inline jule::Str _1aa252916_toStr(jule::Ptr<_1a819e997_NamespaceTypeDecl> _21613_x);
inline jule::Str _1aa29323c_toStr(jule::Ptr<_1a828e0c5_SlicingExprModel> _21613_x);
inline jule::Str _1aa312355_toStr(jule::Ptr<_1a81a9584_SliceExpr> _21613_x);
inline jule::Str _1aa37d9dc_toStr(jule::Ptr<_1a828e658_TraitSubIdentExprModel> _21613_x);
inline jule::Str _1aa42e1ca_toStr(jule::Ptr<_1a828da42_MapExprModel> _21613_x);
inline jule::Str _1aa43e707_toStr(jule::Ptr<_1a828d28e_AnonFnExprModel> _21613_x);
inline jule::Str _1aa4467b9_toStr(jule::Ptr<_1a81a32e7_RangeExpr> _21613_x);
inline jule::Str _1aa449921_toStr(jule::Ptr<_1a81a3eb8_LitExpr> _21613_x);
inline jule::Str _1a5164850_toStr(jule::Ptr<_1a81a4392_UnsafeExpr> _21613_x);
inline jule::Str _1a5164366_toStr(jule::Ptr<_1a81a9ee1_IndexingExpr> _21613_x);
inline jule::Str _1a516827c_toStr(jule::Ptr<_1a81aa651_SlicingExpr> _21613_x);
inline jule::Str _1a516b4b1_toStr(jule::Ptr<_1a81a588d_CastExpr> _21613_x);
inline jule::Str _1a51726b5_toStr(jule::Ptr<_1a81a8077_StructLit> _21613_x);
inline jule::Str _1aa537613_toStr(jule::Ptr<_1a81a852d_BraceLit> _21613_x);
inline jule::Str _1aa53a5c2_toStr(jule::Ptr<_1a81a65e7_BinaryExpr> _21613_x);
inline jule::Str _1aa6895ab_toStr(jule::Ptr<_1a828a478_BinaryExprModel> _21613_x);
inline jule::Str _1a9d219ad_toStr(jule::Ptr<_1a8291539_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _1a9d3763e_toStr(jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _1aa82203a_toStr(jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _1aa83bd13_toStr(jule::Ptr<_1a829288c_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _1aa883a08_toStr(jule::Ptr<_1a8293816_SizeofExprModel> _21613_x);
inline jule::Str _1aa88ca12_toStr(jule::Ptr<_1a8293eba_AlignofExprModel> _21613_x);
inline jule::Str _1ab09a0ed_toStr(jule::Ptr<_1a43e10a5_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _1ab0d3554_toStr(jule::Ptr<_1a43e3b9b_StrRuneIter> _21613_x);
inline jule::Str _1ab0dda7b_toStr(jule::Ptr<_1a43e288c_MutSlicingExprModel> _21613_x);
inline jule::Str _1ab124012_toStr(jule::Ptr<_1a43e37c2_AppendToSliceExprModel> _21613_x);
inline jule::Str _1ab12683e_toStr(jule::Ptr<_1a43e33e8_PushToSliceExprModel> _21613_x);
inline jule::Str _1ab13441d_toStr(jule::Ptr<_1a43e1638_SwapExprModel> _21613_x);
inline jule::Str _1ab17a19a_toStr(jule::Ptr<_1a43e1a56_EmptyCompareExprModel> _21613_x);
inline jule::Str _1ab17ce28_toStr(jule::Ptr<_1a43e2309_StrCompExprModel> _21613_x);
inline jule::Str _1ab1a8063_toStr(jule::Ptr<_1a43e2c22_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _1ab1cb4e8_toStr(jule::Ptr<_1a43e3e98_UnsafeDerefExprModel> _21613_x);
inline jule::Str _1ab1d2d5c_toStr(jule::Ptr<_1a43e1d53_RefExprModel> _21613_x);
inline jule::Str _1ab1d748d_toStr(jule::Ptr<_1a828ad80_StructArgExprModel> _21613_x);
inline jule::Str _1ab1ddbc0_toStr(jule::Ptr<_1a43e4295_UnsafeCastingExprModel> _21613_x);
inline jule::Str _1ab1eb837_toStr(jule::Ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _1ab20dae1_toStr(jule::Ptr<_1a43e301e_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1ab816726_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1abaa021d_toStr(_21ca86171_Builder _21613_x);
inline jule::Str _1abaabb0e_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1abaae43b_toStr(jule::Str _21613_x);
inline jule::Str _1abab3bd2_toStr(jule::Str _21613_x);
inline void _21c865ed9_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline jule::I64 __jule_runeCount(jule::Str _10514_s);
inline void _21c868cab_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _21c869c57__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _21c8bb8ad_hash128to64(_21c8bb506_u128 _4316_sum);
inline jule::U64 _21c8bbbbb_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _21c8bbe85_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _21c8bc2c6_shiftMix(jule::U64 _5513_z);
inline jule::U64 _21c8bc617_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _21c8bc98b_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _21c8bcdba_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _21c8bd34e_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _21c8bb506_u128 _21c8bd706_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _21c8bb506_u128 _10342_seed);
inline _21c8bb506_u128 _21c8bdd55_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _21c8bb506_u128 _21c8be284_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _21c8bb506_u128 _21c8be6b3_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _21c8bb506_u128 _16048_seed);
inline jule::U64 _21c8be97c_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _21c9b0ee1_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _21c9b12ee_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _21c9b15b8_nextMatch(jule::U64* _6419_b);
inline jule::U64 _21c9b1909_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _21c9b1b90_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _21c9b1e59_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _21c9b2168_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _21c9b2542_splitHash(jule::U64 _9414_h);
inline jule::U32 _21c9b283e_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _21c9b2bb3_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _21cc7993b_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _21cc7a0e0_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _21cc7a464_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _21cc92cc8_Getwd(void);
inline jule::Bool _2052eb2b1_IsLetter(jule::I32 _7613_r);
inline jule::Bool _205366c33_is16(jule::Slice<_205364e95_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _2053670a7_is32(jule::Slice<_2053654c3_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _2053678b0_isExcludingLatin(jule::Ptr<_205365946_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _205367b02_IsUpper(jule::I32 _29512_r);
inline jule::I32 _2053682ea_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_2053649de_CaseRange> _31336_cr);
inline jule::Ptr<_2053649de_CaseRange> _20536866e_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_2053649de_CaseRange> _33329_caseRange);
inline jule::I32 _205368938_SimpleFold(jule::I32 _37015_r);
inline jule::Str _205368dab_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _205369274_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _2053695e8_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _205369a9e_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _205369de0_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _20536a31e_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _20536a693_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _20536be7a_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _20536c2ee_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _20536cc28_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _20536d3bb_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Slice<jule::Str> _20536d740_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _20536dab4_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _20536e631_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I64 _20536e9a5_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _20536ee8e_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n);
inline jule::Str _2053703bd_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _205371149_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _2053714bd_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _205371ac8_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Bool _2053735d0_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _21cd348e7_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _21cd34c05_isSlash(jule::U8 _5312_c);
inline jule::U8 _21cd34ebe_toUpper(jule::U8 _5512_c);
inline jule::I64 _21cd35596_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21cd35860_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _21cd35b29_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _21cd36003_abs(jule::Str _14612_path);
inline jule::Str _21cd36245_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _205374b64_Clean(jule::Str _10914_path);
inline jule::Str _20537523b_FromSlash(jule::Str _21214_path);
inline jule::Str _20537557c_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _205375813_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _205375acc_Abs(jule::Str _2468_path);
inline jule::Str _205375d96_Base(jule::Str _25213_path);
inline jule::Str _205376270_Dir(jule::Str _2838_path);
inline jule::Str _2053764b2_VolumeName(jule::Str _30115_path);
inline void _21cc7e105_appendEscapeArg(_21ca86171_Builder* _10225_s, jule::Str _10246_arg);
inline jule::Str _21cc7e3be_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _21cc7e798_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _21cc7e9da_cmdErrorFromCode(jule::I64 _20221_code);
inline jule::I64 _21cc7ebe9_getLastCmdError(void);
inline jule::I64 _21cc801b1_getLastFsErrorWindows(void);
inline jule::I64 _21cc80744_getLastOsError(void);
inline jule::Bool _21cc87e55_isConsoleHandle(jule::Uintptr _9020_handle);
inline void _21cc9602e_Exit(jule::I64 _119_code);
inline jule::Str _21cc96293_Executable(void);
inline jule::Slice<jule::Str> _21cc9645d_Args(void);
inline jule::Exceptional<jule::Str> _21cc968c0_Getwd(void);
inline jule::I64 _20537c1bb_getLastFsError(void);
inline jule::Bool _21ca4a487_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _21ca4a762_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _21ca4aa2b_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _21ca95889_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _21ca95b97_argToStr(jule::Any _32813_arg);
inline jule::I64 _21ca95e61_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _21ca96329_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _21ca9722b_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _21ca9864a_IsWindows(jule::Str _3714_os);
inline jule::Bool _21ca98958_IsDarwin(jule::Str _4013_os);
inline jule::Bool _21ca98c22_IsLinux(jule::Str _4312_os);
inline jule::Bool _21ca99063_IsI386(jule::Str _4611_arch);
inline jule::Bool _21ca992e9_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _21ca995b3_IsArm64(jule::Str _5212_arch);
inline jule::Bool _21ca9987c_IsUnix(jule::Str _5511_os);
inline jule::Bool _21ca99c56_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _21ca99e98_Is64Bit(jule::Str _6112_arch);
inline void _20537e0ad_init(void);
inline jule::U32 _1d9757172_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1d9757480_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1d9757749_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1d9757a8a_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1d975a0ed_Frexp(jule::F64 _4714_f);
inline jule::F64 _1d9760565_NaN(void);
inline jule::Bool _1d9760873_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1d9760b3c_Inf(jule::I64 _618_sign);
inline jule::Bool _1d9761005_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1d97612be_normalize(jule::F64 _8214_x);
inline jule::F64 _1d9762c93_Log(jule::F64 _1118_x);
inline jule::F64 _1d9763678_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1d976a1eb_Modf(jule::F64 _449_f);
inline jule::F64 _1d976aa04_Log2(jule::F64 _449_x);
inline jule::Str _1d9794214_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1d97947ec_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1d9795006_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1d979309d_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1d97956cc_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1d9793b81_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1d9795aea_roundShortest(_1d97a6633_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1d979309d_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1d979618e_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1d9793b81_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1d9796678_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1d9793b81_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1d9796d2c_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1d979309d_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1d97974ae_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1d979309d_floatInfo* _51232_flt);
inline jule::I64 _1d9797833_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1d9797ba7_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1d9798757_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__2037eb96c_ConvError _1d9798bca_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1d9799109_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1d97995b0_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1d979a24d_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1d979a638_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1d979c360_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d979c66d_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d979c937_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1d979e483_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1d979e8b2_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__2037eb96c_ConvError _1d979ee56_atofHex(_1d979309d_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a0330_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a0572_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a08e6_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1d97a0c6a_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1d97a1595_ryuFtoaFixed32(_1d9793b81_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1d97a1a3a_ryuFtoaFixed64(_1d9793b81_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1d97a2376_formatDecimal(_1d9793b81_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1d97a284e_ryuFtoaShortest(_1d9793b81_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d979309d_floatInfo* _26168_flt);
inline jule::I64 _1d97a2ad5_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1d97a2d9e_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d97a32cd_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d979309d_floatInfo* _3963_flt);
inline void _1d97a392c_ryuDigits(_1d9793b81_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1d97a409d_ryuDigits32(_1d9793b81_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d97a44cc_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d97a490b_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1d97a4c80_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1d97a5049_divmod1e9(jule::U64 _60214_x);
inline void _1d97a7e81_trim(_1d97a6633_decimal* _27414_a);
inline void _1d97a826c_rightShift(_1d97a6633_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1d97a8723_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1d97a89cb_leftShift(_1d97a6633_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1d97a8d50_shouldRoundUp(_1d97a6633_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1d97aa527_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1d97aa8e0_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1d97aaba9_Itoa(jule::I64 _819_i);
inline jule::Str _1d97aaeea_small(jule::I64 _8610_i);
inline jule::Bool _1d97ab281_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1d97ab825_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1d97ad65c_Throw(jule::Str _910_msg);
inline jule::Bool _1a818891a_IsUnaryOp(jule::U64 _33314_id);
inline jule::Bool _1a8188c28_IsBinOp(jule::U64 _34312_id);
inline jule::Bool _1a8189333_IsStr(jule::Str _36310_k);
inline jule::Bool _1a81895b9_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1a8189883_IsRune(jule::Str _37011_k);
inline jule::Bool _1a818a268_IsFloat(jule::Str _37912_k);
inline jule::Bool _1a818a532_IsNum(jule::Str _38710_k);
inline jule::Bool _1a818aab5_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1a818ad7e_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1a818b412_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1a818b90c_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1a818bd80_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1a818c149_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1a818c413_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1a818c6cc_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1a818c996_IsHex(jule::I32 _46710_r);
inline jule::Bool _1a818cc60_IsAssign(jule::U64 _48213_id);
inline jule::Bool _1a818d029_IsPostfixOp(jule::U64 _49416_id);
inline jule::Bool _1a818d2e3_IsAssignOp(jule::U64 _50415_id);
inline _21ca95427_Log _1a8191d0d_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_1a818dc83_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1a81921c6_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1a819254a_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i);
inline jule::Str _1a8192913_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i);
inline jule::Str _1a8192c87_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i);
inline jule::Str _1a819310b_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i);
inline jule::Str _1a8193480_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i);
inline jule::Str _1a8193914_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i);
inline jule::Str _1a8193b56_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1a8193e20_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1a8194294_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i);
inline jule::Bool _1a8194618_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i);
inline jule::Bool _1a819498c_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i);
inline jule::Bool _1a8194d11_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i);
inline jule::Bool _1a8195185_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i);
inline jule::Str _1a8195680_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1a819585b_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1a8195bad_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n);
inline jule::Str _1a8195e77_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1a8196241_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1a819650a_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1a81967c4_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_21ca95427_Log> _1a819b7b8_Lex(jule::Ptr<_1a818dc83_Fileset> _80712_f, jule::I64 _80725_mode);
inline void _1a8287b07_lshiftUnsig(_1a82273d2_Const* _58821_c, _1a82273d2_Const* _58832_x);
inline void _1a8287e37_rshiftUnsig(_1a82273d2_Const* _59421_c, _1a82273d2_Const* _59432_x);
inline jule::Str _1a831cbe2_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1a831ceab_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1a831d2ec_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1a831d583_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1a831d84c_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1a831e452_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1a831e71b_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1a831e9d5_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1a831ec9e_BitSizeOfUint(jule::U64 _19718_x);
inline void _1a831ee47_UpdateTarget(void);
inline void _1a83200bd_init(void);
inline jule::I64 _1a8323b82_MinI(jule::Str _6113_k);
inline jule::I64 _1a8323e90_MaxI(jule::Str _7913_k);
inline jule::U64 _1a8324259_MaxU(jule::Str _9713_k);
inline jule::F64 _1a832459a_Min(jule::Str _11512_k);
inline jule::F64 _1a8324831_Max(jule::Str _13312_k);
inline jule::Bool _1a8325953_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1a8325c61_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1a832602a_IsInt(jule::Str _4610_k);
inline jule::Bool _1a832636b_IsFloat(jule::Str _5112_k);
inline jule::Bool _1a8326602_IsNum(jule::Str _5610_k);
inline jule::Bool _1a83268bb_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1a83a485b_FindModuleFile(jule::Slice<_21cc3b47a_Dir>* _1420_dirents);
inline jule::Str _1a83a4b36_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_21ca95427_Log> _1a83a4e00_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _1a83a5692_IsPub(jule::Str _910_ident);
inline jule::Bool _1a84dab3a_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a84dae15_ToRune(jule::Str _2015_lit);
inline jule::Str _1a84db1ce_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a84db520_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a84db7a6_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a84dbb2a_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1a84dbec1_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1a859cbca_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1a85a4770_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1a85a4a5b_FmtByDefault(_21ca86171_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1a85a4e79_applyFmtByDefault(_21ca86171_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1a85a5397_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _21ca86171_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1a85a571b_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1a85a78b6_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1a8297694_Fn> _1a7d2561d_runtimeFindFn(jule::Ptr<_1a838b14a_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1a81be610_Struct> _1a7d25b6d_runtimeFindStruct(jule::Ptr<_1a838b14a_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1a829ca2e_parameterUsesGenerics(jule::Ptr<_1a82995ec_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1a85028cc_Data> _1a834b65a_buildAsComptimeMethodData(jule::Ptr<_1a829a752_FnIns>* _203035_f);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a834b869_findComptimePackage(jule::Ptr<_1a83a8497_sema>* _203829_s);
inline jule::Ptr<_1a85028cc_Data> _1a834bbdd_buildComptimeTypeInfoData(jule::Ptr<_1a83a8497_sema>* _204435_s, jule::Ptr<_1a8535877_Type>* _204450_t);
inline jule::Ptr<_1a85028cc_Data> _1a834c02e_buildComptimeValue(jule::Ptr<_1a85028cc_Data>* _205228_d);
inline jule::Str _1a834ed56_toStrConstraints(jule::Ptr<_1a8533e91_InsGeneric> _14321_g);
inline jule::Bool _1a835021e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a8535877_Type>* _15434_g);
inline jule::Bool _1a83504d8_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a835cacd_scopeChecker> _1a8352dc0_newScopeCheckerBase(jule::Ptr<_1a83a8497_sema>* _3229_s, jule::Ptr<_1a829a752_FnIns> _3243_owner);
inline jule::Ptr<_1a835cacd_scopeChecker> _1a8353288_newScopeChecker(jule::Ptr<_1a83a8497_sema>* _4025_s, jule::Ptr<_1a829a752_FnIns> _4039_owner);
inline jule::Ptr<_1a835b714_scopeLabel> _1a835360c_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1a835cacd_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1a85028cc_Data>> _1a835394d_getDatasFromTupleData(jule::Ptr<_1a85028cc_Data>* _6231_d);
inline jule::Bool _1a83541bd_checkMut(jule::Ptr<_1a83a8497_sema>* _9718_s, jule::Ptr<_1a85028cc_Data>* _9729_left, jule::Ptr<_1a85028cc_Data> _9746_right, jule::Ptr<_1a81881cd_Token> _9760_op);
inline jule::Bool _1a83546a7_checkAssign(jule::Ptr<_1a83a8497_sema>* _11621_s, jule::Ptr<_1a85028cc_Data>* _11636_left, jule::Ptr<_1a85028cc_Data> _11653_right, jule::Ptr<_1a81881cd_Token> _11667_op);
inline jule::Bool _1a8354a81_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1a8354cc3_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U64 _1a8375189_removeEqFromOp(jule::U64 _216519_op);
inline void _1a83753ba_makeComptimeRange(jule::Ptr<_1a85028cc_Data>* _219427_d);
inline jule::Bool _1a8375684_canComptimeMatch(jule::Ptr<_1a85028cc_Data>* _221726_d);
inline jule::Bool _1a837594d_stmtIsDef(jule::Any* _222515_stmt);
inline jule::I64 _1a8375cc2_countMatchType(jule::Ptr<_1a8359b96_Match>* _223720_m, jule::Ptr<_1a8535877_Type>* _223732_t);
inline jule::Ptr<_1a853d088_TypeSym> _1a837a986_buildType(jule::Ptr<_1a819dbe9_TypeDecl> _6918_t);
inline jule::Ptr<_1a8503a54_Value> _1a837ac94_buildExpr(jule::Ptr<_1a81a302d_Expr> _7818_expr);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a837b05d_buildTypeAlias(jule::Ptr<_1a81b57e3_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_1a81bb6d9_Field> _1a837b39e_buildField(jule::Ptr<_1a81b8e12_FieldDecl> _9819_decl);
inline jule::Slice<jule::Ptr<_1a81bb6d9_Field>> _1a837b635_buildFields(jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>>* _10921_decls);
inline jule::Ptr<_1a81be610_Struct> _1a837b8ee_buildStruct(jule::Ptr<_1a81b9808_StructDecl> _11720_decl);
inline jule::Ptr<_1a8295bc0_Param> _1a837bbb8_buildParam(jule::Ptr<_1a81ae534_ParamDecl> _12919_decl);
inline jule::Slice<jule::Ptr<_1a8295bc0_Param>> _1a837c092_buildParams(jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>>* _14021_decls);
inline jule::Ptr<_1a8295609_RetType> _1a837c2d4_buildRetType(jule::Ptr<_1a81a1adc_RetTypeDecl> _14821_decl);
inline jule::Ptr<_1a8297694_Fn> _1a837c59d_buildFunc(jule::Ptr<_1a81b0986_FnDecl> _15818_decl);
inline jule::Slice<jule::Ptr<_1a8297694_Fn>> _1a837c867_buildMethods(jule::Slice<jule::Ptr<_1a81b0986_FnDecl>>* _17622_decls);
inline jule::Slice<jule::Ptr<_1a853d088_TypeSym>> _1a837cb31_buildTraitInherits(jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _18428_inherits);
inline jule::Ptr<_1a82a2da8_Trait> _1a837cdea_buildTrait(jule::Ptr<_1a81ba045_TraitDecl> _19219_decl);
inline jule::Ptr<_1a82a4a03_EnumItem> _1a837d1b4_buildEnumItem(jule::Ptr<_1a81b70ec_EnumItemDecl> _20222_decl);
inline jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _1a837d47d_buildEnumItems(jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>>* _21024_decls);
inline jule::Ptr<_1a82a555e_Enum> _1a837d978_buildEnum(jule::Ptr<_1a81b7bad_EnumDecl> _21818_decl);
inline jule::Ptr<_1a82a6692_TypeEnumItem> _1a837db54_buildTypeEnumItem(jule::Ptr<_1a81b84d8_TypeEnumItemDecl> _22826_decl);
inline jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _1a837ddeb_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>>* _23628_decls);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a837e1b5_buildTypeEnum(jule::Ptr<_1a81b8b48_TypeEnumDecl> _24422_decl);
inline jule::Ptr<_1a83cc1ad_Var> _1a837e47e_buildVar(jule::Ptr<_1a81b1b41_VarDecl> _25317_decl);
inline jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1a837e748_buildVars(jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _27018_decls);
inline jule::Ptr<_1a8350d57_Impl> _1a837ea12_buildImpl(jule::Ptr<_1a81ba6a5_Impl> _27818_decl);
inline jule::Bool _1a8386332_isImplicitImport(jule::Ptr<_1a838b14a_ImportInfo> _79121_imp);
inline jule::Ptr<_1a829d997_SymTab> _1a8388488_findVarFileInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _4430_files, jule::Ptr<_1a83cc1ad_Var>* _4449_v);
inline jule::Ptr<_1a83cc1ad_Var> _1a838890b_findVarInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a8388d3a_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1a81be610_Struct> _1a83892e1_findStructInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1a8297694_Fn> _1a83896dc_findFnInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1a82a2da8_Trait> _1a8389a61_findTraitInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1a82a555e_Enum> _1a8389dd5_findEnumInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1a82a6c69_TypeEnum> _1a838a369_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1a8390d97_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1a83a5d57_isValidModelForRef(jule::Any* _1528_m);
inline _21ca95427_Log _1a83a6385_compilerErr(jule::Ptr<_1a81881cd_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _1a83a6671_appendRetVars(jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _6323_dest, jule::Ptr<_1a829a752_FnIns>* _6342_f);
inline void _1a83a69a1_appendParamVars(jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _9325_dest, jule::Ptr<_1a829a752_FnIns>* _9344_f);
inline void _1a83a6c8c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _15334_dest, jule::Ptr<_1a829a752_FnIns>* _15359_f);
inline jule::Ptr<_1a829d997_SymTab> _1a83a7111_findFile(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _19418_files, jule::Ptr<_1a818dc83_Fileset>* _19437_handler);
inline void _1a83a74a7_pushSuggestion(_21ca95427_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args);
inline void _1a83ca112_pushImplemented(jule::Ptr<_1a82a2da8_Trait> _280524_t, jule::Ptr<_1a81be610_Struct>* _280540_d);
inline void _1a83ca3ed_pushImplements(jule::Ptr<_1a81be610_Struct>* _282324_s, jule::Ptr<_1a82a2da8_Trait> _282340_t);
inline void _1a83ca84e_pushRuntimeToStr(jule::Ptr<_1a83a8497_sema>* _284126_s, jule::Ptr<_1a8535877_Type>* _284141_t, jule::Ptr<_1a81881cd_Token>* _284156_token, jule::Ptr<_1a83790c2_ReferenceStack> _28426_refers);
inline jule::Bool _1a83cab18_isValidImpAlias(jule::Str _285924_alias);
inline jule::Bool _1a84dc70d_traitHasReferenceReceiver(jule::Ptr<_1a82a2da8_Trait>* _1631_t);
inline jule::Bool _1a84dcac6_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a85028cc_Data>* _3133_d);
inline jule::Bool _1a84dce4a_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a85028cc_Data>* _3630_d);
inline jule::Bool _1a84dd313_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a85028cc_Data>* _5932_d);
inline jule::Bool _1a84dd687_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a85028cc_Data>* _8830_d);
inline void _1a84e9b7c_checkMutRiskOfStructLit(jule::Ptr<_1a83a8497_sema>* _90933_s, jule::Ptr<_1a828b226_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1a8535877_Type> _1a8500a95_lenKind(void);
inline jule::Bool _1a8500de7_isGoodValueToInfer(jule::Ptr<_1a85028cc_Data>* _141424_d);
inline jule::Ptr<_1a819d116_Directive> _1a852c0ee_findDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _436523_directives, jule::Str _436554_d);
inline jule::Any _1a852c4b7_findBuiltinsImport(jule::Str* _437424_ident, jule::Ptr<_1a838b14a_ImportInfo> _437436_imp);
inline void _1a852c6e8_fitBitsize(jule::Ptr<_1a85028cc_Data>* _438320_d);
inline void _1a852ca28_makeStructLitAlloc(jule::Ptr<_1a85028cc_Data>* _441228_d, jule::Ptr<_1a828b226_StructLitExprModel>* _441243_lit);
inline jule::Ptr<_1a83cc1ad_Var> _1a852cd9c_buildErrorVar(jule::Ptr<_1a8355466_Scope>* _442323_s, jule::Ptr<_1a81a6c57_FnCallExpr>* _442339_fc);
inline jule::Any _1a852d221_findBuiltinsSema(jule::Str* _443822_ident, jule::Ptr<_1a83a8497_sema> _443838_s);
inline jule::Bool _1a852d4da_isOkForShifting(jule::Ptr<_1a85028cc_Data>* _445325_d);
inline jule::Bool _1a852d8b4_isInstancedStruct(jule::Ptr<_1a81c246a_StructIns> _447022_s);
inline jule::Bool _1a852dbb1_isPtrArithmeticCompatible(jule::Ptr<_1a85028cc_Data>* _447435_l, jule::Ptr<_1a85028cc_Data>* _447450_r);
inline void _1a852e1bc_applyRuntimeToStr(jule::Ptr<_1a83a8497_sema>* _449527_s, jule::Ptr<_1a8535877_Type>* _449542_from, jule::Ptr<_1a8535877_Type>* _449560_to, jule::Ptr<_1a81881cd_Token>* _44967_token, jule::Ptr<_1a83790c2_ReferenceStack> _449633_refers);
inline void _1a852e6c8_applyCastKindModel(jule::Ptr<_1a83a8497_sema>* _451028_s, jule::Ptr<_1a85028cc_Data>* _451043_d, jule::Ptr<_1a8535877_Type>* _451058_t, jule::Ptr<_1a81881cd_Token>* _45117_token, jule::Ptr<_1a83790c2_ReferenceStack> _451133_refers);
inline void _1a852ebd4_applyCastKind(jule::Ptr<_1a83a8497_sema>* _452123_s, jule::Ptr<_1a85028cc_Data>* _452138_d, jule::Ptr<_1a8535877_Type>* _452153_t, jule::Ptr<_1a81881cd_Token>* _45227_token, jule::Ptr<_1a83790c2_ReferenceStack> _452233_refers);
inline jule::Ptr<_1a85028cc_Data> _1a852ede3_buildVoidData(void);
inline jule::Str _1a85303cc_checkDataForIntegerIndexing(jule::Ptr<_1a83a8497_sema>* _453337_s, jule::Ptr<_1a85028cc_Data>* _453352_d, jule::Ptr<_1a81881cd_Token>* _45347_token, jule::Ptr<_1a83790c2_ReferenceStack> _453433_refers);
inline void _1a85308d8_applyCastModelByEnum(jule::Ptr<_1a83a8497_sema>* _455930_s, jule::Ptr<_1a85028cc_Data>* _455945_d, jule::Ptr<_1a82a555e_Enum> _455959_e, jule::Ptr<_1a81881cd_Token>* _45607_token, jule::Ptr<_1a83790c2_ReferenceStack> _456033_refers);
inline void _1a8530e05_castConstByType(jule::Str* _456721_t, jule::Ptr<_1a85028cc_Data>* _456734_d);
inline void _1a85310d1_updateModelToGenericIns(jule::Any* _460133_m, jule::Ptr<_1a829a752_FnIns>* _460152_f);
inline jule::Bool _1a8531455_pushSubIdentFromExpr(jule::Any _461229_expr, jule::Ptr<_1a819e5bd_SubIdentTypeDecl>* _461255_t);
inline jule::Str _1a853171e_constoa(jule::Ptr<_1a82273d2_Const>* _463513_c);
inline jule::Ptr<_1a85028cc_Data> _1a8531cb3_evalEnumStatic(jule::Ptr<_1a83a8497_sema>* _464624_s, jule::Ptr<_1a82a555e_Enum>* _464639_enm, jule::Ptr<_1a82a4a03_EnumItem>* _464656_item, jule::Ptr<_1a81881cd_Token>* _46477_token, jule::Ptr<_1a83790c2_ReferenceStack> _464733_refers);
inline jule::Ptr<_1a828b226_StructLitExprModel> _1a853207c_isLitBased(jule::Any* _466420_m);
inline void _1a8532368_makeImplicitDeref(jule::Ptr<_1a85028cc_Data>* _468127_d, jule::Ptr<_1a81881cd_Token> _468141_baseToken);
inline void _1aa260dca_updateRefer(jule::Ptr<_1a83790c2_ReferenceStack> _469223_ref, jule::Ptr<_1a829a752_FnIns>* _469246_old, jule::Ptr<_1a829a752_FnIns>* _469259_new);
inline void _1a85329ea_makeVariadic(jule::Ptr<_1a85028cc_Data>* _470022_d, jule::Ptr<_1a8535877_Type> _470036_elem);
inline jule::Bool _1a8532e29_isVarCaptured(jule::Ptr<_1a835cacd_scopeChecker> _471418_r, jule::Ptr<_1a835cacd_scopeChecker> _471440_s, jule::Ptr<_1a83cc1ad_Var> _471458_v);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a853329d_findNamespace(jule::Trait _473122_lookup, jule::Str _473138_namespace);
inline jule::Bool _1a8551a2a_kindUsesGenerics(jule::Ptr<_1a8535877_Type>* _173126_k, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _173137_generics);
inline jule::Bool _1a8551de3_hasDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _174122_directives, jule::Str _174153_tag);
inline jule::Bool _1a85521ac_canGetPtr(jule::Ptr<_1a85028cc_Data>* _175019_d);
inline jule::Bool _1a85524ed_isValidForSptrType(jule::Ptr<_1a8535877_Type>* _175328_t);
inline jule::Bool _1a8552784_isValidForRef(jule::Ptr<_1a8535877_Type>* _176223_t);
inline jule::Bool _1a8552a4d_isBuiltinStrConvertable(jule::Ptr<_1a8535877_Type>* _176533_t);
inline jule::Ptr<_1a853d990_Prim> _1a8552d17_buildPrimType(jule::Str _176918_kind);
inline void _1a8553675_applyImplicitCast(jule::Ptr<_1a83a8497_sema>* _179727_s, jule::Ptr<_1a8535877_Type>* _179742_dest, jule::Ptr<_1a85028cc_Data>* _179760_d, jule::Ptr<_1a81881cd_Token>* _17987_token, jule::Ptr<_1a83790c2_ReferenceStack> _179833_refers);
inline jule::Bool _1a855393e_validTypeForXof(jule::Ptr<_1a8535877_Type>* _182725_t);
inline __jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log _1a8556942_buildSymbols(jule::Ptr<_1a819bc91_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a83800c8_symBuilder> _1667_owner);
inline void _1a8556c72_collectImplicitImports(jule::Ptr<_1a83a8497_sema>* _3132_s, jule::Ptr<_1a829d997_SymTab>* _3147_file);
inline __jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log _1a85571a1_analyzePackage(jule::Slice<jule::Ptr<_1a819bc91_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags);
inline __jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log _1a8557657_AnalyzePackage(jule::Slice<jule::Ptr<_1a819bc91_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags);
inline jule::Ptr<_1a829a752_FnIns> _1a85a8323_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a85a860e_primTypeAlias(jule::Ptr<_1a8535877_Type>* _5723_k);
inline jule::Ptr<_1a83cc1ad_Var> _1a85abeb4_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1a8534a85_TypeAlias> _1a85ac305_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1a85ac58b_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1a85ac855_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _1a85acb1e_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _1a85acee8_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _1a85ad2e5_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_1a85028cc_Data> _1a85ad669_builtinCallerError(jule::Ptr<_1a850489b_eval>* _27328_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _27343_fc);
inline jule::Ptr<_1a85028cc_Data> _1a85ada98_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _30428_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _30443_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85adec7_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _33130_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _33145_fc, jule::Ptr<_1a85028cc_Data>* _33172_d);
inline jule::Ptr<_1a85028cc_Data> _1a85ae406_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _34326_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _34341_fc, jule::Ptr<_1a85028cc_Data>* _34368_d);
inline jule::Ptr<_1a85028cc_Data> _1a85ae835_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40528_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40543_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85aec64_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _43127_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _43142_fc, jule::Ptr<_1a85028cc_Data>* _43169_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b03c4_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _48229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _48244_fc, jule::Ptr<_1a85028cc_Data>* _48271_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b079d_callerCopySlice(jule::Ptr<_1a85028cc_Data>* _60225_dest, jule::Ptr<_1a850489b_eval>* _60243_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _60258_fc, jule::Ptr<_1a85028cc_Data>* _60285_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b0bcc_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _63627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _63642_fc, jule::Ptr<_1a85028cc_Data>* _63669_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b1051_callerLenSlice(jule::Ptr<_1a85028cc_Data>* _66124_expr, jule::Ptr<_1a85028cc_Data>* _66142_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b13c5_callerLenMap(jule::Ptr<_1a85028cc_Data>* _66922_expr, jule::Ptr<_1a85028cc_Data>* _66940_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b1749_callerLenArr(jule::Ptr<_1a85028cc_Data>* _67722_expr, jule::Ptr<_1a85028cc_Data>* _67740_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b1abd_callerLenStr(jule::Ptr<_1a85028cc_Data>* _68422_expr, jule::Ptr<_1a85028cc_Data>* _68440_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b1e42_callerLenComptime(jule::Ptr<_1a85028cc_Data>* _69727_d, jule::I64 _69737_n);
inline jule::Ptr<_1a85028cc_Data> _1a85b2371_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _70426_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _70441_fc, jule::Ptr<_1a85028cc_Data>* _70468_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b26e5_callerCapSlice(jule::Ptr<_1a85028cc_Data>* _74424_expr, jule::Ptr<_1a85028cc_Data>* _74442_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b2b24_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _75226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _75241_fc, jule::Ptr<_1a85028cc_Data>* _75268_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b310d_callerDeleteMap(jule::Ptr<_1a850489b_eval>* _77525_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _77540_fc, jule::Ptr<_1a85028cc_Data>* _77567_expr, jule::Ptr<_1a85028cc_Data>* _77585_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b353c_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _80429_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _80444_fc, jule::Ptr<_1a85028cc_Data>* _80471_d);
inline jule::Ptr<_1a85028cc_Data> _1a85b396b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _82740_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _82755_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b3d9a_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _86341_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _86356_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b42c9_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _88338_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _88353_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b494a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _89538_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _89553_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b4d79_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _90839_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _90854_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b52a8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _92143_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _92158_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b56d7_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98135_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98150_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b5b16_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100636_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100651_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b6045_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103133_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103148_fc, jule::Ptr<_1a85028cc_Data>* );
inline jule::Ptr<_1a85028cc_Data> _1a85b6474_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105444_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105459_fc, jule::Ptr<_1a85028cc_Data>* _105486_d);
inline jule::Ptr<_1a8d4ad07_FileInfo> _1a8d4db1d_ParseFile(jule::Ptr<_1a818dc83_Fileset> _2318_f);
inline __jule_tuple_x_1a819bc91_AST__jule_tuple_s_21ca95427_Log _1a8d98e87_parseFileset(jule::Ptr<_1a818dc83_Fileset> _5521_f);
inline jule::Ptr<_1a81adce7_ScopeTree> _1a8d99817_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a8d99b9c_isSt(jule::Ptr<_1a81881cd_Token> _149_current, jule::Ptr<_1a81881cd_Token> _1433_prev);
inline jule::Bool _1a8d9a021_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _2026_tokens, jule::I64* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1a8d9a3d9_nextStPos(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3415_tokens, jule::I64 _3440_start);
inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_bool _1a8d9a75d_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_1a81881cd_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _1a8d9ae45_splitStmts(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _11720_tokens);
inline jule::Bool _1a8db448b_isTypeOp(jule::U64* _87114_id);
inline jule::Bool _1a8db4799_isTypeRange(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1a81881cd_Token>> _1a8db4a63_getBlockExpr(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _91122_tokens);
inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token _1a8db4e2b_splitDelim(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _94320_tokens, jule::U64 _94345_delim);
inline jule::I64 _1a8db51e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _98222_tokens);
inline jule::Ptr<_1a81a4848_IdentExpr> _1a8db54ae_buildIdentExpr(jule::Ptr<_1a81881cd_Token>* _104724_token);
inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_int _1a8db5778_getRangeExprTokens(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _105528_tokens);
inline jule::Bool _1a8db5b52_isAnonFnHead(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _107818_tokens);
inline jule::Bool _1a8db6801_checkAssignTokens(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _1623_tokens);
inline _21ca95427_Log _1a8db77ad_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1a818dc83_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1a81881cd_Token>> _1a8db7cdb_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3063_tokens);
inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token _1a8db80a5_rangeLast(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log _1a8db855b_parts(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust);
inline jule::U64 _1a8db87e2_getCloseOfBrace(jule::U64 _12820_left);
inline _21ca95427_Log _1a8db8c21_compilerErr(jule::Ptr<_1a81881cd_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1a8db90b7_pushSuggestion(_21ca95427_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dca02e_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a840d3dc_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a840d6b7_checkArch(jule::Str _2814_arg);
inline void _1a840ed28_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a841009d_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a8410389_initVars(jule::Slice<jule::Str>* _5518_vars, _1a840ea09_CompileInfo* _5532_info);
inline jule::I64 _1a8410752_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _1a8dce0ee_readBuff(jule::Str _1713_path);
inline _21ca95427_Log _1a8dce40c_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1a8297694_Fn> _1a85b6793_RuntimeFindFn(jule::Ptr<_1a838b14a_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_1a81be610_Struct> _1a85b6b5b_RuntimeFindStruct(jule::Ptr<_1a838b14a_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline void _1a8dd3c80_pushPasses(jule::Ptr<_1a838d8bc_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1a8dd4148_getAllUniquePasses(jule::Ptr<_1a838d8bc_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _14053_uses);
inline _1a840ea09_CompileInfo _1a8dd4357_buildCompileInfo(void);
inline void _1a8dd4610_pushRuntimeToAST(jule::Ptr<_1a819bc91_AST>* _17926_f);
inline void _1a8dd4d5d_IterPackages(jule::Ptr<_1a8dd23cc_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a838d8bc_Package>*> _731_f);
inline void _1a8dd50d3_IterFiles(jule::Ptr<_1a838d8bc_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a829d997_SymTab>*> _1640_f);
inline void _1a8dd53be_IterTraitMethods(jule::Ptr<_1a82a2da8_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a8297694_Fn>*> _2443_f);
inline jule::Bool _1a8dd7613_IsForwarded(jule::Ptr<_1a8355466_Scope>* _1217_s);
inline jule::Bool _1a8dd77de_IsExprComesFromBind(jule::Ptr<_1a85028cc_Data>* _2825_d);
inline jule::Bool _1a8dd7aa8_IsAny(jule::Ptr<_1a8535877_Type>* _4015_t);
inline jule::Bool _1a8dd7de9_IsClosure(jule::Ptr<_1a828d28e_AnonFnExprModel>* _4915_m);
inline jule::Bool _1a8dd8180_IsOpMethod(jule::Ptr<_1a8297694_Fn>* _5216_m);
inline jule::Bool _1a8dd8504_IsTraitMethod(jule::Ptr<_1a81c246a_StructIns>* _6823_owner, jule::Ptr<_1a829a752_FnIns>* _6849_f);
inline jule::Bool _1a8dd8878_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1a819d116_Directive> _1a8dd9714_FindDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1a8dd9acc_HasDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I64 _1a8dda616_FindTraitTypeOffsetS(jule::Ptr<_1a82a2da8_Trait> _3925_t, jule::Ptr<_1a81c246a_StructIns> _3946_s);
inline jule::I64 _1a8dda98a_FindTraitTypeOffset(jule::Ptr<_1a82a2da8_Trait> _6224_t, jule::Ptr<_1a8535877_Type> _6245_k);
inline jule::Ptr<_1a829a752_FnIns> _1a8ddadb9_FindOperator(jule::Ptr<_1a81c246a_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1a829a752_FnIns> _1a8ddb23d_FindFnGenericInstance(jule::Ptr<_1a8297694_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a8535877_Type>> _14745_generics);
inline jule::Ptr<_1a81c246a_StructIns> _1a8ddb6c2_FindStructGenericInstance(jule::Ptr<_1a81be610_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a8535877_Type>> _16353_generics);
inline jule::Ptr<_1a838b14a_ImportInfo> _1a8ddb9be_SelectImport(jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _1aade0dcd_isOrdered(jule::Ptr<_1a83cc1ad_Var>* _1418_t, jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1425_s);
inline jule::Bool _1aade6b4d_isOrdered(jule::Ptr<_1a81be610_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a81be610_Struct>> _1425_s);
inline void _1aaddd0b7_order(jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _3717_s);
inline void _1aadddb9a_order(jule::Slice<jule::Ptr<_1a81be610_Struct>> _3717_s);
inline void _1a512e3b9_EliminateDefines(jule::Ptr<_1a8dd23cc_IR>* _36526_ir);
inline jule::Bool _1a512e6c7_isAllMethodsLive(jule::Ptr<_1a81be610_Struct> _37121_s);
inline void _1a5133544_eliminateDeadCodeOfScope(jule::Ptr<_1a8355466_Scope> _21833_s);
inline void _1a51337b9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a8297694_Fn>>* _23033_funcs);
inline void _1a51339ea_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a81be610_Struct>>* _23937_structs);
inline void _1a5133ca3_eliminateFunctionsScopePackage(jule::Ptr<_1a838d8bc_Package>* _24740_pkg);
inline void _1a5133ea1_eliminateScopePackage(jule::Ptr<_1a838d8bc_Package>* _25431_pkg);
inline void _1a51341d2_EliminateScopes(jule::Ptr<_1a8dd23cc_IR>* _25925_ir);
inline jule::Uintptr _1a43dddb6_typeData(jule::Any* _1314_m);
inline jule::Bool _1a43de27e_equalConst(jule::Ptr<_1a82273d2_Const> _1715_l, jule::Ptr<_1a82273d2_Const> _1736_r);
inline jule::Bool _1a43de603_equalCasting(jule::Ptr<_1a828baa6_CastingExprModel> _3617_l, jule::Ptr<_1a828baa6_CastingExprModel> _3645_r);
inline jule::Bool _1a43de9bb_equalUnary(jule::Ptr<_1a828a852_UnaryExprModel> _4315_l, jule::Ptr<_1a828a852_UnaryExprModel> _4341_r);
inline jule::Bool _1a43ded40_equalIndexing(jule::Ptr<_1a828ccd8_IndexingExprModel> _5018_l, jule::Ptr<_1a828ccd8_IndexingExprModel> _5047_r);
inline jule::Bool _1a43e01b4_equalBinary(jule::Ptr<_1a828a478_BinaryExprModel> _5516_l, jule::Ptr<_1a828a478_BinaryExprModel> _5543_r);
inline jule::Bool _1a43e0538_equalModels(jule::Any _6616_l, jule::Any _6636_r);
inline void _1a43e61dc_possibleNilRemove(jule::Ptr<_1a43e520d_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1a43e65a5_isGuaranteedNonNilExpr(jule::Ptr<_1a43e520d_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1a43e686e_isNilValidType(jule::Ptr<_1a8535877_Type> _8623_t);
inline jule::Uintptr _1a43e6bb0_getNilVar(jule::Any _8814_m);
inline jule::Bool _1a43ecc3d_isConstantValidConditionalCase(jule::Ptr<_1a8355884_If>* _73736_i);
inline jule::Bool _1a43ed04b_isUnreachableExpr(jule::Any* _74623_expr);
inline jule::Bool _1a43ed315_isConstantValidMatchCase(jule::Ptr<_1a835a6be_Case>* _76130_case);
inline jule::Bool _1a43ed656_isUnreachableConditionalCase(jule::Ptr<_1a8355884_If>* _77034_i);
inline jule::Bool _1a43ed8dc_isUnreachableMatchCase(jule::Ptr<_1a835a6be_Case>* _77428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a440485a_checkForBitShiftOpt(jule::Ptr<_1a8289e7d_OperandExprModel>* _72925_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _72954_r);
inline jule::Bool _1a4404c23_areSameLvalueExprModel(jule::Any* _74628_l, jule::Any* _74649_r);
inline void _1a4406cd0_possibleDynamicRemove(jule::Ptr<_1a4405c46_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1a44070dd_isDynamicValidType(jule::Ptr<_1a8535877_Type> _7927_t);
inline jule::Ptr<_1a8535877_Type> _1a440751c_isTypeGuaranteedDynamicData(jule::Ptr<_1a4405c46_dynamic>* _8137_dy, jule::Ptr<_1a8535877_Type> _8155_t, jule::Any _8175_m);
inline jule::Uintptr _1a440785d_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1a440b477_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1a440b840_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1a440bbb4_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1a440bee4_possibleBoundaryRemove(jule::Ptr<_1a440a410_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a440c2ad_isBoundaryRiskyType(jule::Ptr<_1a8535877_Type> _13628_t);
inline jule::Bool _1a440c577_isBoundaryValidType(jule::Ptr<_1a8535877_Type> _14128_t);
inline jule::Uintptr _1a440c841_getBoundaryVar(jule::Any _14319_m);
inline void _1a5021c3a_PushOptLevel(jule::I64 _4117_level);
inline void _1a5137a87_detectEnabled(void);
inline void _1ab9e4904_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1ab9e3518_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r);
inline void _1ab9de921_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r);
inline jule::Bool _1ab9dd0b2_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::U8> _1ab9d8c17_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7240_v);
inline jule::U64 _1a5415e64_unix(void);
inline jule::Bool _1a5143015_isCopyOptimizable(jule::Ptr<_1a85028cc_Data>* _117223_expr);
inline jule::Bool _1a51433cd_isIterCopyOptimizable(jule::Ptr<_1a85028cc_Data>* _118327_expr, jule::Ptr<_1a83cc1ad_Var>* _118347_v);
inline jule::Bool _1a514380c_captureVarHandling(jule::Ptr<_1a542125a_ObjectCoder>* _119028_oc, jule::Ptr<_1a828d28e_AnonFnExprModel>* _119051_m, jule::Ptr<_1a83cc1ad_Var>* _119083_v);
inline jule::Str _1a5155e07_decomposeCommonEsq(jule::U8 _190923_b);
inline jule::Str _1a5156215_sbtoa(jule::U8 _193610_b);
inline void _1a5156501_cstrBytes(_21ca86171_Builder* _195619_s, jule::Str _195640_ctx);
inline void _1a5156831_cstrLit(_21ca86171_Builder* _196217_s, jule::Str _196238_ctx);
inline void _1a5156bc7_ftoa(_21ca86171_Builder* _196814_s, jule::F64 _196835_f, jule::I64 _196843_bitsize);
inline void _1a5156eb3_itoa(_21ca86171_Builder* _198614_s, jule::I64 _198635_x);
inline void _1a515729e_utoa(_21ca86171_Builder* _200314_s, jule::U64 _200335_x);
inline void _1a51578ed_operatorOverloadingBinary(_21ca86171_Builder* _201735_buf, jule::Ptr<_1a81c246a_StructIns>* _201763_s, jule::Str* _201785_l, jule::Str* _20183_r, jule::U64 _201811_op, jule::Str _201826_kind);
inline jule::Slice<jule::U8> _1a542dca1_concatAllParts(jule::Slice<jule::Ptr<_1a81881cd_Token>> _137519_parts);
inline jule::Bool _1a542e0ae_isHeadDecl(jule::Ptr<_1a8297694_Fn>* _139120_m);
inline jule::Bool _1a542e378_defaultEq(jule::Ptr<_1a81c246a_StructIns>* _139915_s);
inline jule::Bool _1a54430c3_ableToInit(jule::Ptr<_1a8535877_Type>* _44820_t);
inline jule::Bool _1a544339d_shouldInitialized(jule::Ptr<_1a8535877_Type>* _45527_t);
inline void _20538666a_printErrorMessage(jule::Str _3022_msg);
inline void _2053868e0_help(jule::Slice<jule::Str>* _3510_args);
inline void _205386b21_version(jule::Slice<jule::Str>* _6313_args);
inline void _205386d30_toolDistos(void);
inline void _205386e95_toolDistarch(void);
inline void _205387193_tool(jule::Slice<jule::Str>* _9410_args);
inline void _2053873c4_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _205387715_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _205387957_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _205387b00_showInfo(void);
void _205387c76_main(void);
inline void _2053885c3_enableVtp(void);
inline void _20538878d_init(void);
inline void _1a90eacaa_init(void);
inline jule::Ptr<_21cc83307_File> _1a90eb074_openOutput(jule::Str* _3016_path);
inline void _1a90eb21c_clearObjects(void);
inline void _1a90eb52a_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1a90eb7e4_isCppSourceFile(jule::Str _8620_path);
inline void _1a90eba25_pushCompCmdClang(_21ca86171_Builder* _9426_cmd);
inline void _1a90ebc56_pushCompCmdGcc(_21ca86171_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1a90ec1da_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1a8dd23cc_IR>* _14636_ir);
inline jule::Str _1a90ec372_getCompilePath(void);
inline void _1a90ec5a3_applyTargetIndependentOptimizations(jule::Ptr<_1a8dd23cc_IR>* _19245_ir);
inline void _1a90ec74b_checkCompilerFlag(void);
inline void _1a90ec95a_checkTargetArch(jule::Str _21420_arch);
inline void _1a90ecb8b_checkTargetOs(jule::Str _22218_os);
inline void _1a90ecdbc_checkTargetFlag(jule::Str* _23021_target);
inline void _1a90ed0ed_checkOptFlag(jule::Str* _25318_opt);
inline void _1a90ed4b6_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a90ed681_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _1a90ed890_setupSemaFlags(jule::I64* _33024_flags);
inline jule::Ptr<_1a8dd23cc_IR> _1a90edb59_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _1a90edd8a_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _1a8327856_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a8326bda_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1a832704d_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB);
	void(*_1a832746b_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB);
	jule::I64(*_1a8327702_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a8388147_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a8386ec0_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a83871ac_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a83874ed_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1a838b14a_ImportInfo>(*_1a838783e_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log(*_1a8387c3a_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1a8387ee3_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a838b14a_ImportInfo> _4128__0);
};

struct _1a85353c1_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a8534e2b_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a853526c_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other);
};

struct _1a8555c60_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a838b14a_ImportInfo>(*_1a8554049_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector);
	jule::Ptr<_1a83cc1ad_Var>(*_1a8554445_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a8534a85_TypeAlias>(*_1a8554841_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a81be610_Struct>(*_1a8554c3c_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a8297694_Fn>(*_1a8555138_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a82a2da8_Trait>(*_1a8555479_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a82a555e_Enum>(*_1a85557ba_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a82a6c69_TypeEnum>(*_1a8555b0b_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a90e3bd7_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a90e3368_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a90e35ee_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a90e3885_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a90e3a83_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8329d75_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a832d0a9_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8330d37_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8334698_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8336007_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a83417d7_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8344d7e_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8dce8e6_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81c246a_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a829a752_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82a2da8_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82a555e_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82a6c69_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8327a76_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a83285d2_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a832b805_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a832ea28_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a833283e_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8337976_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a833da7b_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8343256_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a834716c_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8535877_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a853d990_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a85424bb_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8542e8e_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8543a83_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8544633_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a85452b0_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8545c83_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5430588_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a829d997_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835cacd_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a838b14a_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a838d8bc_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a83a8497_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba54788_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba5811b_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba5b828_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba60079_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aba63786_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a83cc1ad_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8534a85_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81be610_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8297694_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81bb6d9_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82273d2_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82a4a03_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8295bc0_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8357eb3_Label>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8355466_Scope>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8293519_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a85028cc_Data>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a829452b_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8292293_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8290d63_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8291160_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8291913_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8293140_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8292c66_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8294828_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828c458_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835609e_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835639b_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b30b5_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8356852_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b39bc_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835729d_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8357633_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8358623_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a83589ec_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8358ea3_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a4848_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828ccd8_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8359459_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8359b96_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835adb7_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8357a0c_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a835b25d_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81adce7_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b1b41_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b57e3_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a302d_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b50a6_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b278a_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b4270_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ab2cd_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ab6a7_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ac697_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b65b3_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ab9a4_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b3d96_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b201a_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a3902_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ba6a5_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b9808_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b0986_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81ba045_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b7bad_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81b8b48_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a0eb5_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a0129_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a0723_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a819ec94_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a1713_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a0426_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a819e304_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a54b4_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828c832_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a774c_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a8d58_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a3b22_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8290a66_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a6c57_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a82941a7_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8290769_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a6141_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a819e5bd_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a50da_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a819dbe9_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a5c67_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a819e997_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828e0c5_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828baa6_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a9584_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828b226_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8290390_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828e658_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828eee9_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828da42_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828d28e_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a32e7_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a3eb8_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a4392_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a9ee1_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81aa651_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a588d_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a8077_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a852d_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a81a65e7_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828a852_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828a478_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828b523_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8291539_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8291db9_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8292590_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a829288c_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8293816_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8293eba_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e10a5_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e3b9b_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e288c_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e33e8_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e37c2_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e1638_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e1a56_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e2309_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e2c22_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e3e98_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e1d53_RefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a828ad80_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e4295_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e1292_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a43e301e_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1a950ea09_1a70260e4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a832ad76_index(_self_.as<_1a8329d75_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a703ea7a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a832e099_index(_self_.as<_1a832d0a9_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a702c42a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a8331db0_index(_self_.as<_1a8330d37_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a7032e58(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a8335578_index(_self_.as<_1a8334698_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a703b2a2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a8336ee7_index(_self_.as<_1a8336007_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a705b921(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a83427c7_index(_self_.as<_1a83417d7_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a950ea09_1a7054cb0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a85028cc_Data>* _1426_d, jule::I64 _1436_i) {
	_1a8345e90_index(_self_.as<_1a8344d7e_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1a951009d_1a70260e4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a832aa13_ready(_self_.as<_1a8329d75_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a703ea7a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a832dc36_ready(_self_.as<_1a832d0a9_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a702c42a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a8331a4c_ready(_self_.as<_1a8330d37_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a7032e58(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a8335215_ready(_self_.as<_1a8334698_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a703b2a2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a8336b84_ready(_self_.as<_1a8336007_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a705b921(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a8342464_ready(_self_.as<_1a83417d7_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a951009d_1a7054cb0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a83cc1ad_Var>* _1526_keyA, jule::Ptr<_1a83cc1ad_Var>* _1543_keyB) {
	_1a8345b2c_ready(_self_.as<_1a8344d7e_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1a9510774_1a70260e4(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a832b294_step(_self_.as<_1a8329d75_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a703ea7a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a832e4b7_step(_self_.as<_1a832d0a9_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a702c42a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a83322cd_step(_self_.as<_1a8330d37_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a7032e58(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a8335996_step(_self_.as<_1a8334698_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a703b2a2(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a8337415_step(_self_.as<_1a8336007_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a705b921(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a8342be5_step(_self_.as<_1a83417d7_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1a9510774_1a7054cb0(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1a83cc1ad_Var>* _1633_keyA, jule::Ptr<_1a83cc1ad_Var>* _1650_keyB) {
	_1a83463ad_step(_self_.as<_1a8344d7e_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a70260e4(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832b52a_len(_self_.as<_1a8329d75_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a703ea7a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832e74d_len(_self_.as<_1a832d0a9_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a702c42a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8332564_len(_self_.as<_1a8330d37_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a7032e58(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8335c2c_len(_self_.as<_1a8334698_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a703b2a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a833769b_len(_self_.as<_1a8336007_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a705b921(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8342e7b_len(_self_.as<_1a83417d7_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1a9510e5b_1a7054cb0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8346644_len(_self_.as<_1a8344d7e_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1a951129c_1aad632e5(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a8dd04eb_SetModPath(_self_.as<_1a8dce8e6_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1a95116ed_1aad632e5(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8dd0782_GetModPath(_self_.as<_1a8dce8e6_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1a9511b0a_1aad632e5(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1a8dd0ac3_ModById(_self_.as<_1a8dce8e6_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a95120c2_1aad632e5(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a8dd0e14_GetImport(_self_.as<_1a8dce8e6_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_trait_method_1a95126aa_1aad632e5(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1a8dd1310_ImportPackage(_self_.as<_1a8dce8e6_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1a951306d_1aad632e5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a838b14a_ImportInfo> _4128__0) {
	_1a8dd15b8_Imported(_self_.as<_1a8dce8e6_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1a9513557_1a67121b5(jule::Ptr<jule::Uintptr> _self_) {
	return _1a81c2822_Str(_self_.as<_1a81c246a_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6711538(jule::Ptr<jule::Uintptr> _self_) {
	return _1a829aac6_Str(_self_.as<_1a829a752_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6e1ed9a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a82a32a4_Str(_self_.as<_1a82a2da8_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d4e428(jule::Ptr<jule::Uintptr> _self_) {
	return _1a82a5916_Str(_self_.as<_1a82a555e_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d56474(jule::Ptr<jule::Uintptr> _self_) {
	return _1a82a70dd_Str(_self_.as<_1a82a6c69_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7039ab9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8327e72_Str(_self_.as<_1a8327a76_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a70293b1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8328989_Str(_self_.as<_1a83285d2_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a70260e4(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832a23d_Str(_self_.as<_1a8329d75_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7042d47(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832bbac_Str(_self_.as<_1a832b805_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a703ea7a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832d461_Str(_self_.as<_1a832d0a9_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7030719(jule::Ptr<jule::Uintptr> _self_) {
	return _1a832edd0_Str(_self_.as<_1a832ea28_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a702c42a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a83312ee_Str(_self_.as<_1a8330d37_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7036225(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8332be6_Str(_self_.as<_1a833283e_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7032e58(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8334940_Str(_self_.as<_1a8334698_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a703b2a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a83363ae_Str(_self_.as<_1a8336007_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6e31a38(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8337d2d_Str(_self_.as<_1a8337976_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7045db1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a833de33_Str(_self_.as<_1a833da7b_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a705b921(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8341b8e_Str(_self_.as<_1a83417d7_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a705807c(jule::Ptr<jule::Uintptr> _self_) {
	return _1a834360d_Str(_self_.as<_1a8343256_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a7054cb0(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8345467_Str(_self_.as<_1a8344d7e_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a704ba10(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8347524_Str(_self_.as<_1a834716c_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d40260(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8535c73_Str(_self_.as<_1a8535877_Type>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d445c7(jule::Ptr<jule::Uintptr> _self_) {
	return _1a853dd14_Str(_self_.as<_1a853d990_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d4add6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8542873_Str(_self_.as<_1a85424bb_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a670eba7(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8543456_Str(_self_.as<_1a8542e8e_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6e6cb2e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8543e3a_Str(_self_.as<_1a8543a83_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6e6b0b1(jule::Ptr<jule::Uintptr> _self_) {
	return _1a85449da_Str(_self_.as<_1a8544633_Map>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a670d25a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a8545667_Str(_self_.as<_1a85452b0_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1a6d4c69b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a854613a_Str(_self_.as<_1a8545c83_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1a9513557_1ab3c6748(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5430973_Str(_self_.as<_1a5430588_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a67121b5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a81c2b63_Equal(_self_.as<_1a81c246a_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6711538(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a829ae17_Equal(_self_.as<_1a829a752_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6e1ed9a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a82a35e5_Equal(_self_.as<_1a82a2da8_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d4e428(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a82a5c57_Equal(_self_.as<_1a82a555e_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d56474(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a82a742e_Equal(_self_.as<_1a82a6c69_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7039ab9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a83282b3_Equal(_self_.as<_1a8327a76_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a70293b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8328cca_Equal(_self_.as<_1a83285d2_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a70260e4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a832a57e_Equal(_self_.as<_1a8329d75_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7042d47(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a832beed_Equal(_self_.as<_1a832b805_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a703ea7a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a832d7a2_Equal(_self_.as<_1a832d0a9_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7030719(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8330221_Equal(_self_.as<_1a832ea28_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a702c42a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8331640_Equal(_self_.as<_1a8330d37_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7036225(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8333037_Equal(_self_.as<_1a833283e_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7032e58(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8334c81_Equal(_self_.as<_1a8334698_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a703b2a2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8336700_Equal(_self_.as<_1a8336007_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6e31a38(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a833816e_Equal(_self_.as<_1a8337976_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7045db1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a833e274_Equal(_self_.as<_1a833da7b_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a705b921(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8341ed0_Equal(_self_.as<_1a83417d7_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a705807c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a834394e_Equal(_self_.as<_1a8343256_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a7054cb0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a83457a8_Equal(_self_.as<_1a8344d7e_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a704ba10(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8347865_Equal(_self_.as<_1a834716c_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d40260(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a85360b4_Equal(_self_.as<_1a8535877_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d445c7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a853e155_Equal(_self_.as<_1a853d990_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d4add6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8542bb4_Equal(_self_.as<_1a85424bb_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a670eba7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8543797_Equal(_self_.as<_1a8542e8e_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6e6cb2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a854427b_Equal(_self_.as<_1a8543a83_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6e6b0b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a8544d2b_Equal(_self_.as<_1a8544633_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a670d25a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a85459a8_Equal(_self_.as<_1a85452b0_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1a6d4c69b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a854647b_Equal(_self_.as<_1a8545c83_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1a95138cb_1ab3c6748(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	return _1a5430cb4_Equal(_self_.as<_1a5430588_customType>(), _3818_other);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a9513e4d_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector) {
	return _1a829deb4_SelectPackage(_self_.as<_1a829d997_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a9513e4d_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector) {
	return _1a835d0a6_SelectPackage(_self_.as<_1a835cacd_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a9513e4d_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector) {
	return _1a838b667_SelectPackage(_self_.as<_1a838b14a_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a9513e4d_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector) {
	return _1a838dd95_SelectPackage(_self_.as<_1a838d8bc_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a838b14a_ImportInfo> __jule_trait_method_1a9513e4d_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _929_selector) {
	return _1a83a8970_SelectPackage(_self_.as<_1a83a8497_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a83cc1ad_Var> __jule_trait_method_1a9514cc8_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a829e3b0_FindVar(_self_.as<_1a829d997_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a83cc1ad_Var> __jule_trait_method_1a9514cc8_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a835d4a2_FindVar(_self_.as<_1a835cacd_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a83cc1ad_Var> __jule_trait_method_1a9514cc8_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a838ba63_FindVar(_self_.as<_1a838b14a_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a83cc1ad_Var> __jule_trait_method_1a9514cc8_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a838e291_FindVar(_self_.as<_1a838d8bc_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a83cc1ad_Var> __jule_trait_method_1a9514cc8_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a83a8d6b_FindVar(_self_.as<_1a83a8497_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a8534a85_TypeAlias> __jule_trait_method_1a95153a0_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a829e7ab_FindTypeAlias(_self_.as<_1a829d997_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a8534a85_TypeAlias> __jule_trait_method_1a95153a0_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a835d89d_FindTypeAlias(_self_.as<_1a835cacd_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a8534a85_TypeAlias> __jule_trait_method_1a95153a0_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a838be5e_FindTypeAlias(_self_.as<_1a838b14a_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a8534a85_TypeAlias> __jule_trait_method_1a95153a0_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a838e68c_FindTypeAlias(_self_.as<_1a838d8bc_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a8534a85_TypeAlias> __jule_trait_method_1a95153a0_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a83a9267_FindTypeAlias(_self_.as<_1a83a8497_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a81be610_Struct> __jule_trait_method_1a95159aa_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a829eba7_FindStruct(_self_.as<_1a829d997_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a81be610_Struct> __jule_trait_method_1a95159aa_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a835dc99_FindStruct(_self_.as<_1a835cacd_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a81be610_Struct> __jule_trait_method_1a95159aa_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a838c35a_FindStruct(_self_.as<_1a838b14a_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a81be610_Struct> __jule_trait_method_1a95159aa_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a838ea88_FindStruct(_self_.as<_1a838d8bc_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a81be610_Struct> __jule_trait_method_1a95159aa_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a83a9663_FindStruct(_self_.as<_1a83a8497_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a8297694_Fn> __jule_trait_method_1a95160b5_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a82a00a3_FindFn(_self_.as<_1a829d997_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a8297694_Fn> __jule_trait_method_1a95160b5_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a835e195_FindFn(_self_.as<_1a835cacd_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a8297694_Fn> __jule_trait_method_1a95160b5_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a838c756_FindFn(_self_.as<_1a838b14a_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a8297694_Fn> __jule_trait_method_1a95160b5_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a838ee84_FindFn(_self_.as<_1a838d8bc_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a8297694_Fn> __jule_trait_method_1a95160b5_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a83a9a5e_FindFn(_self_.as<_1a83a8497_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a82a2da8_Trait> __jule_trait_method_1a95166c0_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a82a03e4_FindTrait(_self_.as<_1a829d997_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1a82a2da8_Trait> __jule_trait_method_1a95166c0_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a835e4d6_FindTrait(_self_.as<_1a835cacd_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a82a2da8_Trait> __jule_trait_method_1a95166c0_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a838ca97_FindTrait(_self_.as<_1a838b14a_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a82a2da8_Trait> __jule_trait_method_1a95166c0_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a83902c5_FindTrait(_self_.as<_1a838d8bc_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a82a2da8_Trait> __jule_trait_method_1a95166c0_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a83a9da0_FindTrait(_self_.as<_1a83a8497_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a82a555e_Enum> __jule_trait_method_1a9516c20_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a82a0735_FindEnum(_self_.as<_1a829d997_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1a82a555e_Enum> __jule_trait_method_1a9516c20_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a835e827_FindEnum(_self_.as<_1a835cacd_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a82a555e_Enum> __jule_trait_method_1a9516c20_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a838cdd8_FindEnum(_self_.as<_1a838b14a_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a82a555e_Enum> __jule_trait_method_1a9516c20_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a8390616_FindEnum(_self_.as<_1a838d8bc_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a82a555e_Enum> __jule_trait_method_1a9516c20_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a83aa1e1_FindEnum(_self_.as<_1a83a8497_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a82a6c69_TypeEnum> __jule_trait_method_1a9517270_1a6c99142(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a82a0a76_FindTypeEnum(_self_.as<_1a829d997_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1a82a6c69_TypeEnum> __jule_trait_method_1a9517270_1a6ece94e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a835eb68_FindTypeEnum(_self_.as<_1a835cacd_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a82a6c69_TypeEnum> __jule_trait_method_1a9517270_1a6c9a7b4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a838d229_FindTypeEnum(_self_.as<_1a838b14a_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a82a6c69_TypeEnum> __jule_trait_method_1a9517270_1a6c9b60b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a8390957_FindTypeEnum(_self_.as<_1a838d8bc_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a82a6c69_TypeEnum> __jule_trait_method_1a9517270_1a6c9862a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a83aa532_FindTypeEnum(_self_.as<_1a83a8497_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1aba657aa_1aba54788(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba54a74_Name(_self_.as<_1aba54788_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba657aa_1aba5811b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba57c97_Name(_self_.as<_1aba5811b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba657aa_1aba5b828(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba5b4a4_Name(_self_.as<_1aba5b828_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba657aa_1aba60079(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba5ec05_Name(_self_.as<_1aba60079_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba657aa_1aba63786(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba63412_Name(_self_.as<_1aba63786_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aba65898_1aba54788(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba54e4d_Short(_self_.as<_1aba54788_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aba65898_1aba5811b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba5868d_Short(_self_.as<_1aba5811b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aba65898_1aba5b828(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba5bd9a_Short(_self_.as<_1aba5b828_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aba65898_1aba60079(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba605eb_Short(_self_.as<_1aba60079_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aba65898_1aba63786(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba63d08_Short(_self_.as<_1aba63786_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba6726d_1aba54788(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba54bb7_What(_self_.as<_1aba54788_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba6726d_1aba5811b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba58407_What(_self_.as<_1aba5811b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba6726d_1aba5b828(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba5bb14_What(_self_.as<_1aba5b828_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba6726d_1aba60079(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba60365_What(_self_.as<_1aba60079_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aba6726d_1aba63786(jule::Ptr<jule::Uintptr> _self_) {
	return _1aba63a72_What(_self_.as<_1aba63786_Flag>().alloc);
}
inline void __jule_trait_method_1aba6767a_1aba54788(jule::Ptr<jule::Uintptr> _self_) {
	_1aba54d0a_Reset(_self_.as<_1aba54788_Flag>().alloc);
}
inline void __jule_trait_method_1aba6767a_1aba5811b(jule::Ptr<jule::Uintptr> _self_) {
	_1aba5854a_Reset(_self_.as<_1aba5811b_Flag>().alloc);
}
inline void __jule_trait_method_1aba6767a_1aba5b828(jule::Ptr<jule::Uintptr> _self_) {
	_1aba5bc57_Reset(_self_.as<_1aba5b828_Flag>().alloc);
}
inline void __jule_trait_method_1aba6767a_1aba60079(jule::Ptr<jule::Uintptr> _self_) {
	_1aba604a8_Reset(_self_.as<_1aba60079_Flag>().alloc);
}
inline void __jule_trait_method_1aba6767a_1aba63786(jule::Ptr<jule::Uintptr> _self_) {
	_1aba63bb5_Reset(_self_.as<_1aba63786_Flag>().alloc);
}


static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a70260e4,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a70260e4,
	._1a832746b_step=__jule_trait_method_1a9510774_1a70260e4,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a70260e4,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a703ea7a,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a703ea7a,
	._1a832746b_step=__jule_trait_method_1a9510774_1a703ea7a,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a703ea7a,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a702c42a,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a702c42a,
	._1a832746b_step=__jule_trait_method_1a9510774_1a702c42a,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a702c42a,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a7032e58,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a7032e58,
	._1a832746b_step=__jule_trait_method_1a9510774_1a7032e58,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a7032e58,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a703b2a2,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a703b2a2,
	._1a832746b_step=__jule_trait_method_1a9510774_1a703b2a2,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a703b2a2,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a705b921,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a705b921,
	._1a832746b_step=__jule_trait_method_1a9510774_1a705b921,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a705b921,
};
static _1a8327856_comptimeRangeKindMptrData _1a8327856_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1a8326bda_index=__jule_trait_method_1a950ea09_1a7054cb0,
	._1a832704d_ready=__jule_trait_method_1a951009d_1a7054cb0,
	._1a832746b_step=__jule_trait_method_1a9510774_1a7054cb0,
	._1a8327702_len=__jule_trait_method_1a9510e5b_1a7054cb0,
};
static _1a8388147_ImporterMptrData _1a8388147_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a8386ec0_SetModPath=__jule_trait_method_1a951129c_1aad632e5,
	._1a83871ac_GetModPath=__jule_trait_method_1a95116ed_1aad632e5,
	._1a83874ed_ModById=__jule_trait_method_1a9511b0a_1aad632e5,
	._1a838783e_GetImport=__jule_trait_method_1a95120c2_1aad632e5,
	._1a8387c3a_ImportPackage=__jule_trait_method_1a95126aa_1aad632e5,
	._1a8387ee3_Imported=__jule_trait_method_1a951306d_1aad632e5,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a67121b5,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a67121b5,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6711538,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6711538,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6e1ed9a,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6e1ed9a,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d4e428,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d4e428,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d56474,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d56474,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7039ab9,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7039ab9,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a70293b1,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a70293b1,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a70260e4,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a70260e4,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7042d47,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7042d47,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a703ea7a,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a703ea7a,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7030719,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7030719,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a702c42a,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a702c42a,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7036225,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7036225,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7032e58,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7032e58,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a703b2a2,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a703b2a2,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6e31a38,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6e31a38,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7045db1,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7045db1,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a705b921,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a705b921,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a705807c,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a705807c,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a7054cb0,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a7054cb0,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a704ba10,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a704ba10,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d40260,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d40260,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d445c7,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d445c7,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d4add6,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d4add6,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a670eba7,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a670eba7,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6e6cb2e,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6e6cb2e,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6e6b0b1,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6e6b0b1,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a670d25a,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a670d25a,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1a6d4c69b,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1a6d4c69b,
};
static _1a85353c1_KindMptrData _1a85353c1_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1a8534e2b_Str=__jule_trait_method_1a9513557_1ab3c6748,
	._1a853526c_Equal=__jule_trait_method_1a95138cb_1ab3c6748,
};
static _1a8555c60_LookupMptrData _1a8555c60_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1a8554049_SelectPackage=__jule_trait_method_1a9513e4d_1a6c99142,
	._1a8554445_FindVar=__jule_trait_method_1a9514cc8_1a6c99142,
	._1a8554841_FindTypeAlias=__jule_trait_method_1a95153a0_1a6c99142,
	._1a8554c3c_FindStruct=__jule_trait_method_1a95159aa_1a6c99142,
	._1a8555138_FindFn=__jule_trait_method_1a95160b5_1a6c99142,
	._1a8555479_FindTrait=__jule_trait_method_1a95166c0_1a6c99142,
	._1a85557ba_FindEnum=__jule_trait_method_1a9516c20_1a6c99142,
	._1a8555b0b_FindTypeEnum=__jule_trait_method_1a9517270_1a6c99142,
};
static _1a8555c60_LookupMptrData _1a8555c60_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1a8554049_SelectPackage=__jule_trait_method_1a9513e4d_1a6ece94e,
	._1a8554445_FindVar=__jule_trait_method_1a9514cc8_1a6ece94e,
	._1a8554841_FindTypeAlias=__jule_trait_method_1a95153a0_1a6ece94e,
	._1a8554c3c_FindStruct=__jule_trait_method_1a95159aa_1a6ece94e,
	._1a8555138_FindFn=__jule_trait_method_1a95160b5_1a6ece94e,
	._1a8555479_FindTrait=__jule_trait_method_1a95166c0_1a6ece94e,
	._1a85557ba_FindEnum=__jule_trait_method_1a9516c20_1a6ece94e,
	._1a8555b0b_FindTypeEnum=__jule_trait_method_1a9517270_1a6ece94e,
};
static _1a8555c60_LookupMptrData _1a8555c60_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1a8554049_SelectPackage=__jule_trait_method_1a9513e4d_1a6c9a7b4,
	._1a8554445_FindVar=__jule_trait_method_1a9514cc8_1a6c9a7b4,
	._1a8554841_FindTypeAlias=__jule_trait_method_1a95153a0_1a6c9a7b4,
	._1a8554c3c_FindStruct=__jule_trait_method_1a95159aa_1a6c9a7b4,
	._1a8555138_FindFn=__jule_trait_method_1a95160b5_1a6c9a7b4,
	._1a8555479_FindTrait=__jule_trait_method_1a95166c0_1a6c9a7b4,
	._1a85557ba_FindEnum=__jule_trait_method_1a9516c20_1a6c9a7b4,
	._1a8555b0b_FindTypeEnum=__jule_trait_method_1a9517270_1a6c9a7b4,
};
static _1a8555c60_LookupMptrData _1a8555c60_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1a8554049_SelectPackage=__jule_trait_method_1a9513e4d_1a6c9b60b,
	._1a8554445_FindVar=__jule_trait_method_1a9514cc8_1a6c9b60b,
	._1a8554841_FindTypeAlias=__jule_trait_method_1a95153a0_1a6c9b60b,
	._1a8554c3c_FindStruct=__jule_trait_method_1a95159aa_1a6c9b60b,
	._1a8555138_FindFn=__jule_trait_method_1a95160b5_1a6c9b60b,
	._1a8555479_FindTrait=__jule_trait_method_1a95166c0_1a6c9b60b,
	._1a85557ba_FindEnum=__jule_trait_method_1a9516c20_1a6c9b60b,
	._1a8555b0b_FindTypeEnum=__jule_trait_method_1a9517270_1a6c9b60b,
};
static _1a8555c60_LookupMptrData _1a8555c60_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1a8554049_SelectPackage=__jule_trait_method_1a9513e4d_1a6c9862a,
	._1a8554445_FindVar=__jule_trait_method_1a9514cc8_1a6c9862a,
	._1a8554841_FindTypeAlias=__jule_trait_method_1a95153a0_1a6c9862a,
	._1a8554c3c_FindStruct=__jule_trait_method_1a95159aa_1a6c9862a,
	._1a8555138_FindFn=__jule_trait_method_1a95160b5_1a6c9862a,
	._1a8555479_FindTrait=__jule_trait_method_1a95166c0_1a6c9862a,
	._1a85557ba_FindEnum=__jule_trait_method_1a9516c20_1a6c9862a,
	._1a8555b0b_FindTypeEnum=__jule_trait_method_1a9517270_1a6c9862a,
};
static _1a90e3bd7_CommonFlagMptrData _1a90e3bd7_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1a90e3368_Name=__jule_trait_method_1aba657aa_1aba54788,
	._1a90e35ee_Short=__jule_trait_method_1aba65898_1aba54788,
	._1a90e3885_What=__jule_trait_method_1aba6726d_1aba54788,
	._1a90e3a83_Reset=__jule_trait_method_1aba6767a_1aba54788,
};
static _1a90e3bd7_CommonFlagMptrData _1a90e3bd7_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1a90e3368_Name=__jule_trait_method_1aba657aa_1aba5811b,
	._1a90e35ee_Short=__jule_trait_method_1aba65898_1aba5811b,
	._1a90e3885_What=__jule_trait_method_1aba6726d_1aba5811b,
	._1a90e3a83_Reset=__jule_trait_method_1aba6767a_1aba5811b,
};
static _1a90e3bd7_CommonFlagMptrData _1a90e3bd7_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1a90e3368_Name=__jule_trait_method_1aba657aa_1aba5b828,
	._1a90e35ee_Short=__jule_trait_method_1aba65898_1aba5b828,
	._1a90e3885_What=__jule_trait_method_1aba6726d_1aba5b828,
	._1a90e3a83_Reset=__jule_trait_method_1aba6767a_1aba5b828,
};
static _1a90e3bd7_CommonFlagMptrData _1a90e3bd7_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1a90e3368_Name=__jule_trait_method_1aba657aa_1aba60079,
	._1a90e35ee_Short=__jule_trait_method_1aba65898_1aba60079,
	._1a90e3885_What=__jule_trait_method_1aba6726d_1aba60079,
	._1a90e3a83_Reset=__jule_trait_method_1aba6767a_1aba60079,
};
static _1a90e3bd7_CommonFlagMptrData _1a90e3bd7_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1a90e3368_Name=__jule_trait_method_1aba657aa_1aba63786,
	._1a90e35ee_Short=__jule_trait_method_1aba65898_1aba63786,
	._1a90e3885_What=__jule_trait_method_1aba6726d_1aba63786,
	._1a90e3a83_Reset=__jule_trait_method_1aba6767a_1aba63786,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1a64ebbd6_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1a57d374e_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1a57d6235_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1a57e373c_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1a57d3b28_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1a57c7d81_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1a57e6e8d_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a83cc1ad_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a8534a85_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a81be610_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a8297694_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a82a2da8_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a82a555e_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a82a6c69_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a81bb6d9_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a82273d2_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a82a4a03_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a8295bc0_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type18_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type18_to_str(void *alloc) noexcept { return _1a96c59b1_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_any_type18_eq, .to_str=__jule_any_type18_to_str};
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a8357eb3_Label> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a8355466_Scope> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a85028cc_Data> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a829452b_BackendEmitExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a8293140_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a8294828_FreeExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a828c458_FnCallExprModel> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a835609e_Conditional> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a835639b_InfIter> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a81b30b5_WhileKind> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a8356852_WhileIter> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a81b39bc_RangeKind> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a835729d_RangeIter> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a8357633_ContSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a8358623_GotoSt> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a83589ec_Postfix> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a8358ea3_Assign> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a81a4848_IdentExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a828ccd8_IndexingExprModel> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a8359459_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a8359b96_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a835adb7_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a8357a0c_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a835b25d_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a81adce7_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a81b1b41_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a81b57e3_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a81a302d_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a81b50a6_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a81b278a_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a81b4270_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a81ab2cd_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a81ab6a7_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a81ac697_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a81b65b3_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a81ab9a4_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a81b3d96_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a81b201a_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a81a3902_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a829a752_FnIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a81c246a_StructIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a81ba6a5_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a81b9808_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a81b0986_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a81ba045_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a81b7bad_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a81b8b48_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a81a0eb5_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a81a0129_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a81a0723_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a819ec94_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a81a1713_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a81a0426_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a819e304_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a81a54b4_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a828c832_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a81a774c_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a81a8d58_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a81a3b22_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a8290a66_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a81a6c57_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a82941a7_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a8535877_Type> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a8290769_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a81a6141_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a819e5bd_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a81a50da_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a819dbe9_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a81a5c67_NamespaceExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a819e997_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a828e0c5_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a828baa6_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a81a9584_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a828b226_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a8290390_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a828e658_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a828eee9_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a828da42_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a828d28e_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a81a32e7_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a81a3eb8_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a81a4392_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a81a9ee1_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a81aa651_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a81a588d_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a81a8077_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a81a852d_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a81a65e7_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a828a852_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a828a478_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a828b523_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a8291539_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a8292590_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a829288c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a8293816_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a8293eba_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a43e10a5_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a43e3b9b_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a43e288c_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a43e33e8_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a43e37c2_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a43e1638_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a43e1a56_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a43e2309_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a43e2c22_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a43e3e98_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a43e1d53_RefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a828ad80_StructArgExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1a43e4295_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1a43e301e_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1a6507d24_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1a6540136_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1a57db966_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1a68767e1_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1a57e6b19_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _1a57cd33c_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _1a57cb071_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _1a57ddda8_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _1a57e12ea_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
inline jule::Bool __jule_anon1a9605d0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a82995ec_ParamIns> _25021_p1, jule::Ptr<_1a82995ec_ParamIns> _25036_p2);
struct __jule_anon_1a6d88808_ctx{
	jule::Ptr<_1a83285d2_comptimeStructField> _self_;
};
static void __jule_anon_1a6d88808_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6d88808_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d88808(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _6521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _6536_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6d8a7c7_ctx{
	jule::Ptr<_1a83285d2_comptimeStructField> _self_;
};
static void __jule_anon_1a6d8a7c7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6d8a7c7_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d8a7c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _7221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _7236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6d9e39b_ctx{
	jule::Ptr<_1a832b805_comptimeStatic> _self_;
};
static void __jule_anon_1a6d9e39b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6d9e39b_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d9e39b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _17821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _17836_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6da1326_ctx{
	jule::Ptr<_1a832b805_comptimeStatic> _self_;
};
static void __jule_anon_1a6da1326_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6da1326_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6da1326(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _18521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _18536_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6db27aa_ctx{
	jule::Ptr<_1a832ea28_comptimeEnumField> _self_;
};
static void __jule_anon_1a6db27aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6db27aa_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6db27aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _28321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _28336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6dc9591_ctx{
	jule::Ptr<_1a833283e_comptimeParam> _self_;
};
static void __jule_anon_1a6dc9591_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6dc9591_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dc9591(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6dcb51b_ctx{
	jule::Ptr<_1a833283e_comptimeParam> _self_;
};
static void __jule_anon_1a6dcb51b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6dcb51b_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dcb51b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a6dcd496_ctx{
	jule::Ptr<_1a833283e_comptimeParam> _self_;
};
static void __jule_anon_1a6dcd496_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a6dcd496_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dcd496(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _41621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _41636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a968906d_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a968906d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a968906d_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968906d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _97421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _97436_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a968b03c_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a968b03c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a968b03c_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968b03c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98136_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a968ceb7_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a968ceb7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a968ceb7_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968ceb7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98836_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a968ee42_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a968ee42_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a968ee42_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968ee42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _99521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _99536_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9691dbc_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a9691dbc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9691dbc_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9691dbc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9693d47_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a9693d47_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9693d47_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9693d47(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9695cc2_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a9695cc2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9695cc2_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9695cc2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _101621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _101636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9697c4c_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a9697c4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9697c4c_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9697c4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _102321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _102336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9699e4c_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a9699e4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9699e4c_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9699e4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103036_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a969bdc7_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a969bdc7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a969bdc7_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a969bdc7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103736_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a969dd52_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a969dd52_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a969dd52_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a969dd52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _104421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _104436_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96a0ccc_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96a0ccc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96a0ccc_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a0ccc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105136_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96a2c57_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96a2c57_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96a2c57_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a2c57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105836_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96a4bd2_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96a4bd2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96a4bd2_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a4bd2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _106521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _106536_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96a6b5c_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96a6b5c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96a6b5c_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a6b5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _107221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _107236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96a8ad7_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96a8ad7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96a8ad7_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a8ad7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _107921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _107936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96aaa62_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96aaa62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96aaa62_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96aaa62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _108621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _108636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96ac9dc_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96ac9dc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96ac9dc_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96ac9dc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _109321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _109336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96ae967_ctx{
	jule::Ptr<_1a8337976_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a96ae967_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96ae967_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96ae967(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _110021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _110036_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96daed2_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96daed2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96daed2_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96daed2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _126221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _126236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96dce5c_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96dce5c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96dce5c_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96dce5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _126921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _126936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96dedd7_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96dedd7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96dedd7_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96dedd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _127621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _127636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96e1d62_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96e1d62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96e1d62_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e1d62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _128321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _128336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96e3cdc_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96e3cdc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96e3cdc_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e3cdc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _129021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _129036_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96e5c67_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96e5c67_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96e5c67_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e5c67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _129721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _129736_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a96e7be2_ctx{
	jule::Ptr<_1a833da7b_comptimeValue> _self_;
};
static void __jule_anon_1a96e7be2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96e7be2_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e7be2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _130421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _130436_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a970c971_ctx{
	jule::Ptr<_1a8343256_comptimeFile> _self_;
};
static void __jule_anon_1a970c971_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a970c971_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a970c971(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _142921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _142936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a970e8eb_ctx{
	jule::Ptr<_1a8343256_comptimeFile> _self_;
};
static void __jule_anon_1a970e8eb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a970e8eb_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a970e8eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _143621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _143636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9711876_ctx{
	jule::Ptr<_1a8343256_comptimeFile> _self_;
};
static void __jule_anon_1a9711876_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9711876_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9711876(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _144321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _144336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9776853_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a9776853_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9776853_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9776853(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _194921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _194936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a97787cd_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a97787cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a97787cd_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97787cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _195621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _195636_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a977a758_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a977a758_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a977a758_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977a758(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _196321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _196336_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a977c6d3_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a977c6d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a977c6d3_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977c6d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _197021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _197036_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a977e65d_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a977e65d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a977e65d_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977e65d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _197721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _197736_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a97815d8_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a97815d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a97815d8_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97815d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _198421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _198436_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9783563_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a9783563_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9783563_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9783563(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _199121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _199136_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a97854dd_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a97854dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a97854dd_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97854dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _199821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _199836_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a97876dd_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a97876dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a97876dd_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97876dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _200521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _200536_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a9789668_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a9789668_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9789668_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9789668(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _201221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _201236_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a978b5e3_ctx{
	jule::Ptr<_1a834716c_comptimeDecl> _self_;
};
static void __jule_anon_1a978b5e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a978b5e3_ctx>().dealloc(); }
inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a978b5e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _201921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _201936_fc, jule::Ptr<_1a85028cc_Data>* );
struct __jule_anon_1a97978b8_ctx{
	jule::Ptr<_1a834da58_constraintChecker> _self_;
};
static void __jule_anon_1a97978b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a97978b8_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a97978b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _6433_generics);
struct __jule_anon_1a999d816_ctx{
	jule::Ptr<_1a838b14a_ImportInfo> *_48628_pkg;
};
static void __jule_anon_1a999d816_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a999d816_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a999d816(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _48735_spkg);
struct __jule_anon_1a9c1b237_ctx{
	jule::Ptr<_1a829a752_FnIns> _82743_f;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _82811_generics;
	jule::Slice<jule::Ptr<_1a8535877_Type>> *_82759_ignored;
};
static void __jule_anon_1a9c1b237_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9c1b237_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9c1b237(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _83442_sema);
struct __jule_anon_1a9c3420b_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*> _93046_algo;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _9357_generics;
};
static void __jule_anon_1a9c3420b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9c3420b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9c3420b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _93742_sema);
struct __jule_anon_1a9c389e6_ctx{
	jule::Ptr<_1a829a752_FnIns> _94937_f;
	jule::Ptr<_1a83a8497_sema> _self_;
};
static void __jule_anon_1a9c389e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9c389e6_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9c389e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _95337_sema, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _95355_generics);
inline jule::Str __jule_anon1aa721ee5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1aaebe5a5_ctx{
	jule::Ptr<_1a512b1da_ObjectDeadCode> _self_;
};
static void __jule_anon_1aaebe5a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaebe5a5_ctx>().dealloc(); }
inline void __jule_anon_1aaebe5a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _19031_file);
struct __jule_anon_1ab02a842_ctx{
	_1a5134897_exprDeadCode *_self_;
};
static void __jule_anon_1ab02a842_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab02a842_ctx>().dealloc(); }
inline void __jule_anon_1ab02a842(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1ab21718d_ctx{
	_1a43eea86_exprOptimizer *_self_;
};
static void __jule_anon_1ab21718d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab21718d_ctx>().dealloc(); }
inline void __jule_anon_1ab21718d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _69547_m);
struct __jule_anon_1ab3e019b_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1ab3e019b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab3e019b_ctx>().dealloc(); }
inline void __jule_anon_1ab3e019b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab3e3ba5_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
	jule::Ptr<_1a835729d_RangeIter> *_9336_it;
};
static void __jule_anon_1ab3e3ba5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab3e3ba5_ctx>().dealloc(); }
inline void __jule_anon_1ab3e3ba5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab41804d_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
};
static void __jule_anon_1ab41804d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab41804d_ctx>().dealloc(); }
inline void __jule_anon_1ab41804d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab41a539_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
};
static void __jule_anon_1ab41a539_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab41a539_ctx>().dealloc(); }
inline void __jule_anon_1ab41a539(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab4344ed_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
};
static void __jule_anon_1ab4344ed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab4344ed_ctx>().dealloc(); }
inline void __jule_anon_1ab4344ed(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a8d16aa3_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
};
static void __jule_anon_1a8d16aa3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d16aa3_ctx>().dealloc(); }
inline void __jule_anon_1a8d16aa3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a8d17dd4_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
	jule::Ptr<_1a8359b96_Match> _75730_m;
};
static void __jule_anon_1a8d17dd4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d17dd4_ctx>().dealloc(); }
inline void __jule_anon_1a8d17dd4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab5d2976_ctx{
	jule::Ptr<_1a5139ade_scopeCoder> _self_;
	jule::Ptr<_1a828d28e_AnonFnExprModel> _112734_m;
};
static void __jule_anon_1ab5d2976_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab5d2976_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab5d2976(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83cc1ad_Var> _113367_v);
struct __jule_anon_1ab965699_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab965699_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab965699_ctx>().dealloc(); }
inline void __jule_anon_1ab965699(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _83538_pkg);
struct __jule_anon_1ab97a4c2_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
	jule::Ptr<_1a83cc1ad_Var> _92024_v;
};
static void __jule_anon_1ab97a4c2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab97a4c2_ctx>().dealloc(); }
inline void __jule_anon_1ab97a4c2(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab97c5b2_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
	jule::Ptr<_1a83cc1ad_Var> _92024_v;
};
static void __jule_anon_1ab97c5b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab97c5b2_ctx>().dealloc(); }
inline void __jule_anon_1ab97c5b2(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab984b2a_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab984b2a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab984b2a_ctx>().dealloc(); }
inline void __jule_anon_1ab984b2a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab985cc4_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
	jule::Ptr<_1a83cc1ad_Var> _92024_v;
};
static void __jule_anon_1ab985cc4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab985cc4_ctx>().dealloc(); }
inline void __jule_anon_1ab985cc4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ab9c036e_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9c036e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9c036e_ctx>().dealloc(); }
inline void __jule_anon_1ab9c036e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _118238_pkg);
struct __jule_anon_1ab9c179e_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9c179e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9c179e_ctx>().dealloc(); }
inline void __jule_anon_1ab9c179e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _120531_file);
struct __jule_anon_1ab9ccbd9_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9ccbd9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9ccbd9_ctx>().dealloc(); }
inline void __jule_anon_1ab9ccbd9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _124438_pkg);
struct __jule_anon_1ab9d2e0e_ctx{
	jule::Ptr<_1a541e6ba_traitHash> _12777_hash;
};
static void __jule_anon_1ab9d2e0e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d2e0e_ctx>().dealloc(); }
inline void __jule_anon_1ab9d2e0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn>* _128136_m);
struct __jule_anon_1ab9d54d8_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9d54d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d54d8_ctx>().dealloc(); }
inline void __jule_anon_1ab9d54d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _129538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aba7a094(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aba82c06(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1a6d7c0d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _203925_pkg);
struct __jule_anon_1aa15551c_ctx{
	jule::Str _473138_namespace;
};
static void __jule_anon_1aa15551c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa15551c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aa15551c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _473230_imp);
struct __jule_anon_1ab9665ce_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9665ce_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9665ce_ctx>().dealloc(); }
inline void __jule_anon_1ab9665ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _83632_file);
struct __jule_anon_1ab9c1282_ctx{
	jule::Ptr<_1a838d8bc_Package> *_118238_pkg;
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9c1282_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9c1282_ctx>().dealloc(); }
inline void __jule_anon_1ab9c1282(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _118332_file);
struct __jule_anon_1ab9d63eb_ctx{
	jule::Ptr<_1a542125a_ObjectCoder> _self_;
};
static void __jule_anon_1ab9d63eb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d63eb_ctx>().dealloc(); }
inline void __jule_anon_1ab9d63eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _129632_file);
jule::Array<jule::Array<jule::Str,2>,5> _20538648e_HelpMap;
jule::Str _1a90ea628_OutDir;
jule::Str _1a90ea848_OutName;
jule::Str _1a90eab01_Out;
jule::Uintptr _21c71852e_STDIN;
jule::Uintptr _21c7187c6_STDOUT;
jule::Uintptr _21c718ac3_STDERR;
jule::Array<jule::U8,256> _21c84d8ea_first;
jule::Array<_21c84dea0_acceptRange,16> _21c84e346_acceptRanges;
jule::Array<jule::U8,32> _21c9a2037__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _21c9a2620__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_205365946_RangeTable> _2052ed390__L;
jule::Ptr<_205365946_RangeTable> _2052ee2a3__LU;
jule::Ptr<_205365946_RangeTable> _205305287_Letter;
jule::Ptr<_205365946_RangeTable> _20530b557_Upper;
jule::Slice<_2053649de_CaseRange> _20535daa4__CaseRanges;
jule::Array<jule::U8,256> _20535dd90__PROPERTIES;
jule::Array<jule::U16,128> _205360b72_asciiFold;
jule::Slice<_2053644e4_foldPair> _205360e5d_caseOrbit;
jule::Array<jule::Str,4> _21c9bb7c1_CppHeaderExts;
jule::Array<jule::Str,3> _21c9bb8ae_CppExts;
jule::Array<jule::Str,1> _21ca4a2cd_ObjectiveCppExts;
jule::Str _20537d123_PathStdlib;
jule::Str _20537d376_PathExec;
jule::Str _20537d60c_PathWd;
jule::Str _20537d909_PathApi;
jule::Str _20537dbb2_OS;
jule::Str _20537de6a_Arch;
jule::Str _2053829eb_Compiler;
jule::Str _205383de8_CompilerPath;
jule::Str _205384107_CppStd;
jule::Bool _20538439e_Shadowing;
jule::Bool _205384657_Transpilation;
jule::Bool _205384910_Test;
jule::Bool _205384bb8_RC;
jule::Bool _205385081_Safety;
jule::Bool _2053852c3_Production;
_1d979309d_floatInfo _1d9793400_f32info;
_1d979309d_floatInfo _1d97936ec_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1d979b02e_detailedPowsOfTen;
jule::Slice<jule::I64> _1d979cc89_powtab;
jule::Slice<jule::F64> _1d979d84a_f64pow10;
jule::Slice<jule::F32> _1d979db7a_f32pow10;
jule::Array<jule::U64,20> _1d97a1d7b_u64pow10;
jule::Slice<_1d97a5b1b_leftCheat> _1d97a604a_leftCheats;
jule::Array<jule::I32,5> _1a80d9ea9_Spaces;
jule::Array<jule::U64,6> _1a80da295_UnaryOps;
jule::Array<jule::U64,18> _1a80da5c5_BinOps;
jule::Array<jule::U64,2> _1a81826b1_PostfixOps;
jule::Array<jule::U64,11> _1a818299c_AssignOps;
jule::Array<_1a81910a4_kindPair,28> _1a819148e_keywords;
jule::Array<_1a81910a4_kindPair,46> _1a81917be_basicOps;
jule::I64 _1a831be99_BitSize;
jule::Str _1a831c20d_SysInt;
jule::Str _1a831c4b6_SysUint;
jule::Slice<jule::Str> _1a834d21c_builtinConstraints;
jule::Ptr<_1a8535877_Type> _1a85a891c_primNil;
jule::Ptr<_1a8535877_Type> _1a85a8c19_primVoid;
jule::Ptr<_1a8535877_Type> _1a85a8ec2_primAny;
jule::Ptr<_1a8535877_Type> _1a85a92be_primStr;
jule::Ptr<_1a8535877_Type> _1a85a9577_primBool;
jule::Ptr<_1a8535877_Type> _1a85a9830_primUintptr;
jule::Ptr<_1a8535877_Type> _1a85a9ad8_primUint;
jule::Ptr<_1a8535877_Type> _1a85a9ea1_primInt;
jule::Ptr<_1a8535877_Type> _1a85aa1e3_primI8;
jule::Ptr<_1a8535877_Type> _1a85aa48a_primI16;
jule::Ptr<_1a8535877_Type> _1a85aa743_primI32;
jule::Ptr<_1a8535877_Type> _1a85aa9eb_primI64;
jule::Ptr<_1a8535877_Type> _1a85aaca4_primU8;
jule::Ptr<_1a8535877_Type> _1a85ab05c_primU16;
jule::Ptr<_1a8535877_Type> _1a85ab315_primU32;
jule::Ptr<_1a8535877_Type> _1a85ab7ee_primU64;
jule::Ptr<_1a8535877_Type> _1a85aba41_primF32;
jule::Ptr<_1a8535877_Type> _1a85abc50_primF64;
jule::Ptr<_1a8dded13_Meta> _1a8ddcad0_ProgramMeta;
jule::Ptr<_1a4408b28_data> _1a4408166_emptyData;
jule::Bool _1a440d116_Copy;
jule::Bool _1a440d413_Deadcode;
jule::Bool _1a440d6bb_Append;
jule::Bool _1a440d9b8_Math;
jule::Bool _1a440dc71_Access;
jule::Bool _1a440e029_Inline;
jule::Bool _1a440e2d2_Ptr;
jule::Bool _1a501ecb0_Cond;
jule::Bool _1a5020002_Str;
jule::Bool _1a5020299_Slice;
jule::Bool _1a5020552_Assign;
jule::Bool _1a502080a_Exceptional;
jule::Bool _1a5020ab3_Iter;
jule::Bool _1a5020d6b_Dynamic;
jule::Bool _1a5021124_Array;
jule::Bool _1a502160d_Len;
jule::Bool _1a5021850_StdStrings;
jule::Bool _1a5021a5e_StdMathCmplx;
jule::Bool _1a5135623_exprEnabled;
jule::Bool _1a5135832_scopeEnabled;
jule::Array<jule::U64,12> _1a5412b0e_mdays;
jule::Str _1a5139380_assignArgName;
jule::Ptr<_1a8535877_Type> _1a541d6ca_generalGCPtr;
jule::Slice<_2053649de_CaseRange> _20535d7b8_CaseRanges;


inline jule::Bool _21c84dea0_acceptRange_eq(_21c84dea0_acceptRange *_self_, _21c84dea0_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _21c8a17d8_LittleEndian_eq(_21c8a17d8_LittleEndian *_self_, _21c8a17d8_LittleEndian _other_) { return true; }

inline jule::U32 static__21c8b749c_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__21c8b7dc6_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _21c8bb506_u128_eq(_21c8bb506_u128 *_self_, _21c8bb506_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1ab2ae565_group_eq(_1ab2ae565_group *_self_, _1ab2ae565_group _other_) {
	return 
		_1a581cc0b_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1ab2aeca2_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1ab2ac266__Map> static__1ab2ac82c_make(void) {
	return jule::new_ptr<_1ab2ac266__Map>(_1ab2ac266__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ab2ae565_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1ab2ac981_initData(_1ab2ac266__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _21c9b1e59_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ab2ae565_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ab2ae565_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cba8d:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_21c9b2168_newEmptyMetadata();
			}
			_iter_next_1ab2cba8d:;
			++it;
			_1407_i++;
			goto _iter_begin_1ab2cba8d;
		}
		_iter_end_1ab2cba8d:;
	};
}



inline jule::U64 _1ab2acad5_hash(_1ab2ac266__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1a57c7d81_toStr(_14616_k);;
	return _21c8be97c_hash(_21c7556ae_StrBytes(_1473_bytes));;
}



inline void _1ab2acc39_rehash(_1ab2ac266__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1ab2ac981_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1ab2ae565_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1ab2ae565_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ab2ae565_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ab2ae565_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2d0179:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_21c9b2168_newEmptyMetadata();
			}
			_iter_next_1ab2d0179:;
			++it;
			_1617_i++;
			goto _iter_begin_1ab2d0179;
		}
		_iter_end_1ab2d0179:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cecd3:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2d1be7:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1ab2d1be7;
							};
							{
								(*(_1ab2ad29a_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1ab2d1be7:;
						++it;
						_1678_s++;
						goto _iter_begin_1ab2d1be7;
					}
					_iter_end_1ab2d1be7:;
				};
			}
			_iter_next_1ab2cecd3:;
			++it;
			_1667_g++;
			goto _iter_begin_1ab2cecd3;
		}
		_iter_end_1ab2cecd3:;
	};
}



inline jule::I64 _1ab2acd8d_nextSize(_1ab2ac266__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1ab2acee2_lookup(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab2acad5_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _21c9b283e_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _21c9b15b8_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1ab2d834c:;
			}
			_iter_end_1ab2d834c:;;
			_2018_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1ab2d504c:;
	}
	_iter_end_1ab2d504c:;;
}



inline jule::Bool _1ab2ad146_get(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1ab2acee2_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1ab2ad29a_set(_1ab2ac266__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1ab2acc39_rehash(_self_, _1ab2acd8d_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab2acad5_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _21c9b283e_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _21c9b15b8_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1ab2e118a:;
			}
			_iter_end_1ab2e118a:;;
			_2488_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _21c9b15b8_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1ab2de5ea:;
	}
	_iter_end_1ab2de5ea:;;
}



inline jule::Bool _1ab2ad3ee_del(jule::Ptr<_1ab2ac266__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab2acad5_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _21c9b283e_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _21c9b15b8_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1ab2e8d74:;
			}
			_iter_end_1ab2e8d74:;;
			_2838_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1ab2e7b64:;
	}
	_iter_end_1ab2e7b64:;;
}



inline void _1ab2ad553_clear(jule::Ptr<_1ab2ac266__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab30061c:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab301123:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1ab301123:;
						++it;
						_3298_j++;
						goto _iter_begin_1ab301123;
					}
					_iter_end_1ab301123:;
				};
			}
			_iter_next_1ab30061c:;
			++it;
			_3287_i++;
			goto _iter_begin_1ab30061c;
		}
		_iter_end_1ab30061c:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3004a7:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1ab2ae565_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab303774:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1ab303774:;
							++it;
							_3389_j++;
							goto _iter_begin_1ab303774;
						}
						_iter_end_1ab303774:;
					};
				};
			}
			_iter_next_1ab3004a7:;
			++it;
			_3357_i++;
			goto _iter_begin_1ab3004a7;
		}
		_iter_end_1ab3004a7:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1ab2ad6a7_len(jule::Ptr<_1ab2ac266__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1ab2ad80b_cap(_1ab2ac266__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1ab2b899d_mapIterator _1ab2ad960_iterator(jule::Ptr<_1ab2ac266__Map> _self_) {
	_1ab2b899d_mapIterator _3607_iterator = _1ab2b899d_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ab2ae565_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1ab2b9031_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1ab30879b__Map> static__1ab308cb8_make(void) {
	return jule::new_ptr<_1ab30879b__Map>(_1ab30879b__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ab30a88b_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1ab308e1c_initData(_1ab30879b__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _21c9b1e59_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ab30a88b_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ab30a88b_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a829a752_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a829a752_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab325e28:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_21c9b2168_newEmptyMetadata();
			}
			_iter_next_1ab325e28:;
			++it;
			_1407_i++;
			goto _iter_begin_1ab325e28;
		}
		_iter_end_1ab325e28:;
	};
}



inline jule::U64 _1ab309071_hash(_1ab30879b__Map* _self_, jule::Ptr<_1a829a752_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1a9a49ebc_toStr(_14616_k);;
	return _21c8be97c_hash(_21c7556ae_StrBytes(_1473_bytes));;
}



inline void _1ab3091c5_rehash(_1ab30879b__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1ab308e1c_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1ab30a88b_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1ab30a88b_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1ab30a88b_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ab30a88b_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1a829a752_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a829a752_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab329514:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_21c9b2168_newEmptyMetadata();
			}
			_iter_next_1ab329514:;
			++it;
			_1617_i++;
			goto _iter_begin_1ab329514;
		}
		_iter_end_1ab329514:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab32916d:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab32b082:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1ab32b082;
							};
							{
								(*(_1ab309736_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1ab32b082:;
						++it;
						_1678_s++;
						goto _iter_begin_1ab32b082;
					}
					_iter_end_1ab32b082:;
				};
			}
			_iter_next_1ab32916d:;
			++it;
			_1667_g++;
			goto _iter_begin_1ab32916d;
		}
		_iter_end_1ab32916d:;
	};
}



inline jule::I64 _1ab309329_nextSize(_1ab30879b__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1ab30947d_lookup(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab309071_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _21c9b283e_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _21c9b15b8_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1ab3326d7:;
			}
			_iter_end_1ab3326d7:;;
			_2018_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1ab32e3d7:;
	}
	_iter_end_1ab32e3d7:;;
}



inline jule::Slice<jule::Uintptr> _1ab3095d2_get(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1ab30947d_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1ab309736_set(_1ab30879b__Map* _self_, jule::Ptr<_1a829a752_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1ab3091c5_rehash(_self_, _1ab309329_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab309071_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _21c9b283e_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _21c9b15b8_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1ab33a525:;
			}
			_iter_end_1ab33a525:;;
			_2488_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _21c9b15b8_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1ab338985:;
	}
	_iter_end_1ab338985:;;
}



inline jule::Bool _1ab30988a_del(jule::Ptr<_1ab30879b__Map> _self_, jule::Ptr<_1a829a752_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _21c9b2542_splitHash(_1ab309071_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _21c9b283e_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _21c9b0ee1_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _21c9b15b8_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1a829a752_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1ab34320e:;
			}
			_iter_end_1ab34320e:;;
			_2838_matches=_21c9b12ee_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1ab341eee:;
	}
	_iter_end_1ab341eee:;;
}



inline void _1ab3099de_clear(jule::Ptr<_1ab30879b__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3499a7:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab34a4ad:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1ab34a4ad:;
						++it;
						_3298_j++;
						goto _iter_begin_1ab34a4ad;
					}
					_iter_end_1ab34a4ad:;
				};
			}
			_iter_next_1ab3499a7:;
			++it;
			_3287_i++;
			goto _iter_begin_1ab3499a7;
		}
		_iter_end_1ab3499a7:;
	};
	jule::Ptr<_1a829a752_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab349842:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1ab30a88b_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab34cb0e:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1ab34cb0e:;
							++it;
							_3389_j++;
							goto _iter_begin_1ab34cb0e;
						}
						_iter_end_1ab34cb0e:;
					};
				};
			}
			_iter_next_1ab349842:;
			++it;
			_3357_i++;
			goto _iter_begin_1ab349842;
		}
		_iter_end_1ab349842:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1ab309b43_len(jule::Ptr<_1ab30879b__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1ab309c97_cap(_1ab30879b__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1ab312ce4_mapIterator _1ab309deb_iterator(jule::Ptr<_1ab30879b__Map> _self_) {
	_1ab312ce4_mapIterator _3607_iterator = _1ab312ce4_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1ab30a88b_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1ab313377_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1ab2b9031_init(_1ab2b899d_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1ab2ae565_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1ab2ad6a7_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_21c376c4d_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1ab2b9185_next(_1ab2b899d_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1ab2c1ac7;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1ab2c1ac7:;
			}
			_iter_end_1ab2c1ac7:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1ab2c0d5c:;
	}
	_iter_end_1ab2c0d5c:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1ab313377_init(_1ab312ce4_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1ab30a88b_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1ab309b43_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_21c376c4d_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1a829a752_FnIns__jule_tuple_psuintptr _1ab3134cb_next(_1ab312ce4_mapIterator* _self_) {
	__jule_tuple_px_1a829a752_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1ab31ae62;
					};
					jule::Ptr<_1a829a752_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1ab31ae62:;
			}
			_iter_end_1ab31ae62:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1ab31a1e7:;
	}
	_iter_end_1ab31a1e7:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _21ca86171_Builder static__21ca869bd_New(jule::I64 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _21ca86171_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I64> _21ca86d0e_Write(_21ca86171_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21ca87150_WriteStr(_21ca86171_Builder* _self_, jule::Str _4124_s) {
	jule::I64 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _21ca87408_WriteByte(_21ca86171_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21ca87749_WriteRune(_21ca86171_Builder* _self_, jule::I32 _5525_r) {
	jule::I64 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_21c85106d_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Str _21ca879d0_Str(_21ca86171_Builder* _self_) {
	jule::Str _687_s = _21c755c0e_StrFromBytes((*(_self_))._field_buf);;
	_21ca87bcd_Clear(_self_);
	return _687_s;;
}



inline void _21ca87bcd_Clear(_21ca86171_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _21ca87e64_Len(_21ca86171_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _21ca88481_Buf(_21ca86171_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _21ca88739_SetBuf(_21ca86171_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _2053644e4_foldPair_eq(_2053644e4_foldPair *_self_, _2053644e4_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _2053649de_CaseRange_eq(_2053649de_CaseRange *_self_, _2053649de_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1a5871127_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _205364e95_Range16_eq(_205364e95_Range16 *_self_, _205364e95_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _2053654c3_Range32_eq(_2053654c3_Range32 *_self_, _2053654c3_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _205374290_index(_205373cc8_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _205374548_append(_205373cc8_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2053747ce_string(_205373cc8_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _21c755945_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _21cc7d445_cmdAttrs_eq(_21cc7d445_cmdAttrs *_self_, _21cc7d445_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _21cc83307_File_eq(_21cc83307_File *_self_, _21cc83307_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_21cc83307_File> static__21cc83cdb_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_21cc83307_File>(_21cc83307_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_21cc83307_File>> static__21cc840a5_Create(jule::Str _7819_path) {
	return static__21cc8710d_Open(_7819_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21cc8436e_Read(jule::Str _8517_path) {
	_21cc858ae_Stat _863_s = ({
		auto except = static__20537c980_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21cc86052_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _917_sz = static_cast<jule::I64>(_21cc862d8_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I64>(_21cc862d8_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_21cc83307_File> _1047_f = ({
		auto except = static__21cc8710d_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_21cc83307_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I64 _1084_rn = ({
				auto except = _21cc87b14_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_1a6527030;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_1a6527030:;
	}
	_iter_end_1a6527030:;;
	({
		auto except = _21cc8501d_Close(_1047_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__21cc84715_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I64 _12443_perm) {
	jule::Ptr<_21cc83307_File> _1257_f = ({
		auto except = static__21cc8710d_Open(_12418_path, static_cast<jule::I64>(769LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_21cc83307_File>(nullptr);});
	});;
	jule::I64 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _21cc877c3_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1a652c1cd:;
	}
	_iter_end_1a652c1cd:;;
	return _21cc8501d_Close(_1257_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _21cc8501d_Close(_21cc83307_File* _self_) {
	if ((_21c72d764_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_21cc83307_File>> static__21cc8710d_Open(jule::Str _1717_path, jule::I64 _1728_flag, jule::I64 _1741_mode) {
	jule::Slice<jule::U16> _183_utf16Path = _21c6e121b_UTF16FromStr(_1717_path);;
	jule::I64 _193_handle = _21c7198a4_Wopen((&(_183_utf16Path[0LL])), _1728_flag, _1741_mode);;
	if ((_193_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21cc83307_File>>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_21cc83307_File>>{.result=static__21cc83cdb_New(static_cast<jule::Uintptr>(_193_handle))};;
}



inline jule::VoidExceptional static__21cc8733e_Remove(jule::Str _2719_path) {
	jule::Slice<jule::U16> _283_utf16Path = _21c6e121b_UTF16FromStr(_2719_path);;
	if ((!(_21c71a4ba_DeleteFile((&(_283_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21cc801b1_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21cc877c3_Write(_21cc83307_File* _self_, jule::Slice<jule::U8> _4021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21c868cab_handleRW(&(_4021_buf));
	if (_21cc87e55_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_21c852cd9_writeConsole((*(_self_))._field_handle, _4021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_21c72db1b_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4021_buf[0LL])), static_cast<jule::U64>(_4021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21cc87b14_Read(_21cc83307_File* _self_, jule::Slice<jule::U8> _6824_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6824_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21c868cab_handleRW(&(_6824_buf));
	if (_21cc87e55_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_21c85315d_readConsole((*(_self_))._field_handle, _6824_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_21c72d38a_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6824_buf[0LL])), static_cast<jule::U64>(_6824_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}








inline jule::Bool _21cc858ae_Stat_eq(_21cc858ae_Stat *_self_, _21cc858ae_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _21cc85cbb_IsDir(_21cc858ae_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _21cc86052_IsReg(_21cc858ae_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _21cc862d8_Size(_21cc858ae_Stat* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<_21cc858ae_Stat> static__20537c980_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_21cc858ae_Stat>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _143_utf16Path = _21c6e121b_UTF16FromStr(_1015_path);;
	struct _stat _157_handle = (struct _stat){};;
	jule::I64 _163_code = _21c719475_Wstat((&(_143_utf16Path[0LL])), (&(_157_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_21cc858ae_Stat>{.error=jule::Any(_20537c1bb_getLastFsError(), &__jule_any_type0)};
	};
	_21cc858ae_Stat _207_stat = _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U64>(_157_handle.st_size);
	if (((_157_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_157_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<_21cc858ae_Stat>{.result=_207_stat};;
}








inline jule::Bool _21ca95427_Log_eq(_21ca95427_Log *_self_, _21ca95427_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1d979309d_floatInfo_eq(_1d979309d_floatInfo *_self_, _1d979309d_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1d97a5b1b_leftCheat_eq(_1d97a5b1b_leftCheat *_self_, _1d97a5b1b_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1d97a6633_decimal_eq(_1d97a6633_decimal *_self_, _1d97a6633_decimal _other_) {
	return 
		_1a6857904_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1d979d0ec_set(_1d97a6633_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1a6b33394:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1a6b3352b:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1a6b3332d:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1a6b34e78:;
					{
						goto _iter_next_1a6b34708;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1a6b35022:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a6b34708;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1a6b35088:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a6b34708;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a6b34708;
					}
				}
				_match_end_1a6b34d46:;
			};
			goto _iter_end_1a6b34708;
		}
	_iter_next_1a6b34708:;
	}
	_iter_end_1a6b34708:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1d9798757_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1a6b3ada2;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1a6b3ada2:;
		}
		_iter_end_1a6b3ada2:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1d979d43d_floatBits(_1d97a6633_decimal* _self_, _1d979309d_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a6b498e9;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a6b4894d;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a6b498e9;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1d979cc89_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1d979cc89_powtab[(*(_self_))._field_dp];
			};
			_1d97a6cc6_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1a6b4125e:;
	}
	_iter_end_1a6b4125e:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1d979cc89_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1d979cc89_powtab[(-((*(_self_))._field_dp))];
			};
			_1d97a6cc6_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1a6b3e7ac:;
	}
	_iter_end_1a6b3e7ac:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1d97a6cc6_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1a6b4894d;
	};
	_1d97a6cc6_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1d97a7876_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1a6b4894d;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1a6b498e9;
	_julec_label_1a6b4894d:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a6b498e9:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1d97a6a1d_assign(_1d97a6633_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1a6b4c16b:;
	}
	_iter_end_1a6b4c16b:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a6b4c468:;
	}
	_iter_end_1a6b4c468:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1d97a7e81_trim(_self_);
}



inline void _1d97a6cc6_shift(_1d97a6633_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a6b4ea64:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1a6b4eb0d:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1d97a89cb_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1a6b50713:;
				}
				_iter_end_1a6b50713:;;
				_1d97a89cb_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1a6b4eb74:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1d97a826c_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1a6b50636:;
				}
				_iter_end_1a6b50636:;;
				_1d97a826c_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1a6b4e8ee:;
	};
}



inline void _1d97a707e_roundDown(_1d97a6633_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1d97a7e81_trim(_self_);
}



inline void _1d97a7337_roundUp(_1d97a6633_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1a6b5894c:;
	}
	_iter_end_1a6b5894c:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1d97a75e0_round(_1d97a6633_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1d97a8d50_shouldRoundUp(_self_, _23221_nd)) {
		_1d97a7337_roundUp(_self_, _23221_nd);
	} else {
		_1d97a707e_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1d97a7876_roundedInteger(_1d97a6633_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1a6b5b884:;
	}
	_iter_end_1a6b5b884:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1a6b5d314:;
	}
	_iter_end_1a6b5d314:;;
	if (_1d97a8d50_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _2053aa826_AnsiEscape_eq(_2053aa826_AnsiEscape *_self_, _2053aa826_AnsiEscape _other_) { return true; }

inline void static__205389184_Reset(void) {
	jule::print(_1a57c7d81_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__2053aaa13_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1a57c7d81_toStr(_1918_escape));
	jule::print(_1a57c7d81_toStr(_1931_text));
	static__205389184_Reset();
}








inline jule::Bool _1d97ac24e_Logger_eq(_1d97ac24e_Logger *_self_, _1d97ac24e_Logger _other_) { return true; }

inline void static__1d97ac518_LogFlat(_21ca95427_Log* _1421_l) {
	jule::println(_1a57c7d81_toStr((*(_1421_l))._field_Text));
}



inline void static__1d97ac727_LogError(_21ca95427_Log* _1922_l) {
	jule::print(_1a57c7d81_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1a57c7d81_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1a57c7d81_toStr((*(_1922_l))._field_Text));
	static__205389184_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1a57c7d81_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1a57c7d81_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1a57c7d81_toStr(jule::Str::lit(":", 1)));
		jule::print(_1a57c7d81_toStr(_1d97aaba9_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1a57c7d81_toStr(jule::Str::lit(":", 1)));
		jule::print(_1a57c7d81_toStr(_1d97aaba9_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _205371ac8_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_2053703bd_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1a57c7d81_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1d97aaba9_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1a57c7d81_toStr(_434_row));
		jule::print(_1a57c7d81_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1a57c7d81_toStr(_388_line));
		jule::print(_1a57c7d81_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1a57c7d81_toStr(_205368dab_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1a57c7d81_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1a57c7d81_toStr(_205368dab_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1a57c7d81_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1a57c7d81_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1a57c7d81_toStr(_205368dab_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1a57c7d81_toStr(jule::Str::lit(" | ", 3)));
			static__2053aaa13_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1a57c7d81_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1a57c7d81_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1d97ac958_Log(_21ca95427_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a6b81535:;
			{
				static__1d97ac518_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a6b817dd:;
			{
				static__1d97ac727_LogError(_6417_l);
			}
		}
		_match_end_1a6b816de:;
	};
}



inline void static__1d97acb89_PrintLogs(jule::Slice<_21ca95427_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6b822b1:;
		if (it != expr_end) {
			_21ca95427_Log *_7510_l = it;
			{
				static__1d97ac958_Log(_7510_l);
			}
			_iter_next_1a6b822b1:;
			++it;
			goto _iter_begin_1a6b822b1;
		}
		_iter_end_1a6b822b1:;
	};
	jule::print(_1a57c7d81_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1a57c7d81_toStr(_1d97aaba9_Itoa((*(_7423_logs)).len())));
	jule::println(_1a57c7d81_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1a81881cd_Token_eq(_1a81881cd_Token *_self_, _1a81881cd_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1a8188585_Prec(_1a81881cd_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a6be308b:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a6be3ab4:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a6be3b3b:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a6be3113:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a6be318a:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a6be3883:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6be2ec0:;
	};
}







inline jule::Ptr<_1a818dc83_Fileset> static__1a818e118_New(jule::Str _2016_path) {
	return jule::new_ptr<_1a818dc83_Fileset>(_1a818dc83_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr)});;
}



inline void _1a818e679_FillMut(_1a818dc83_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _1a818e910_Dir(_1a818dc83_Fileset* _self_) {
	return _205376270_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a818eb96_Name(_1a818dc83_Fileset* _self_) {
	return _205375d96_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a819026d_GetRow(_1a818dc83_Fileset* _self_, jule::I64 _5718_row) {
	jule::I64 _587_n = 0LL;;
	jule::I64 _597_lineStart = 0LL;;
	jule::I64 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_1a6be9bb9;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _21c755c0e_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_1a6be9bb9:;
	}
	_iter_end_1a6be9bb9:;;
	return jule::Str();;
}








inline jule::Bool _1a81910a4_kindPair_eq(_1a81910a4_kindPair *_self_, _1a81910a4_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1a819760a_pushErr(_1a8197044_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_21ca95427_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8191d0d_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1a8197b6b_lex(_1a8197044_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a8199d8d_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_1a81881cd_Token> _4638_token = _1a819b378_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a81881cd_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1a6c288c9:;
	}
	_iter_end_1a6c288c9:;;
}



inline jule::Str _1a8197eac_id(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I64 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1a818b90c_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I64 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1a818c149_IsDecimal(_4824_pr)))) && (!(_1a818b90c_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _21c755c0e_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1a6c2bb41:;
	}
	_iter_end_1a6c2bb41:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _21c755c0e_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1a8198243_resume(_1a8197044_lex* _self_) {
	jule::I64 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_data[_4977_i]);;
			if (_1a818b412_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a6c30b67:;
						{
							_1a8199d8d_newLine(_self_);
						}
					}
					else {
						_case_begin_1a6c30529:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a6c307b0:;
				};
				goto _iter_next_1a6c2e380;
			};
			jule::I64 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_1a6c300d9;
					};
				}
			_iter_next_1a6c300d9:;
			}
			_iter_end_1a6c300d9:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1a6c2e380:;
	}
	_iter_end_1a6c2e380:;;
	return nullptr;;
}



inline void _1a81984eb_lexLineComment(_1a8197044_lex* _self_, jule::Ptr<_1a81881cd_Token>* _52235_token) {
	jule::I64 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1a6c3320d;
			};
		}
	_iter_next_1a6c3320d:;
	}
	_iter_end_1a6c3320d:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52235_token))))._field_Kind=_21c755c0e_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1a81987a4_lexRangeComment(_1a8197044_lex* _self_, jule::Ptr<_1a81881cd_Token>* _53736_token) {
	jule::I64 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1a6c36871;
			};
			if ((_5414_r == '\n')) {
				_1a8199d8d_newLine(_self_);
				goto _iter_next_1a6c36871;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53736_token))))._field_Kind=_21c755c0e_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a6c36871:;
	}
	_iter_end_1a6c36871:;;
	_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1a8198ae5_num(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a819585b_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a6c3d625;
	};
	__jule_func_result=_1a8195680_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a6c3d625;
	};
	__jule_func_result=_1a8193e20_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a6c3d625;
	};
	__jule_func_result=_1a8193b56_commonNum(_56520_txt);
	_julec_label_1a6c3d625:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a8198e36_escapeSeq(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1a6c423d7;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a6c402c5:;
			{
				(*(_self_))._field_pos+=2LL;
				return _21c755c0e_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a6c40182:;
			{
				_5887_seq=_1a8195e77_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a6c401e8:;
			{
				_5887_seq=_1a8196241_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a6c3ed63:;
			{
				_5887_seq=_1a819650a_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1a6c3e637:;
			{
				_5887_seq=_1a81967c4_byteEscape(_58726_txt);
			}
		}
		_match_end_1a6c3ebdc:;
	};
	_julec_label_1a6c423d7:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1a8199332_getRune(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1a8198e36_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I64 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1a8199673_lexRune(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_21ca86171_Builder _6277_run = static__21ca869bd_New(8LL);;
	({
		auto except = _21ca87408_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I64 _6307_n = 0LL;;
	jule::I64 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1a6c461dd;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a8199d8d_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1a8199332_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _21ca87150_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_21c851975_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a6c461dd;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1a6c461dd:;
	}
	_iter_end_1a6c461dd:;;
	if ((_6307_n == 0LL)) {
		_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _21ca879d0_Str(&_6277_run);;
}



inline jule::Str _1a8199909_lexStr(_1a8197044_lex* _self_) {
	_21ca86171_Builder _6677_s = static__21ca869bd_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _21ca87408_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1a6c4bc1b;
			};
			if ((_6754_ch == '\n')) {
				_1a8199d8d_newLine(_self_);
				if ((!(_6703_raw))) {
					_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1a8199332_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _21ca87150_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_21c851975_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1a6c4bc1b;
			};
		}
	_iter_next_1a6c4bc1b:;
	}
	_iter_end_1a6c4bc1b:;;
	return _21ca879d0_Str(&_6677_s);;
}



inline void _1a8199d8d_newLine(_1a8197044_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a819a3ee_isOp(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U64 _70845_id, jule::Ptr<_1a81881cd_Token>* _70858_t) {
	if ((!(_1a81921c6_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1a819a7ea_lexBasicOps(_1a8197044_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1a81881cd_Token>* _71845_tok) {
	{
		auto expr = &(_1a81917be_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6c536d4:;
		if (it != expr_end) {
			_1a81910a4_kindPair *_71910_pair = it;
			{
				if (_1a819a3ee_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1a6c536d4:;
			++it;
			goto _iter_begin_1a6c536d4;
		}
		_iter_end_1a6c536d4:;
	};
	return false;;
}



inline jule::Bool _1a819abe6_lexId(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1a81881cd_Token>* _72740_t) {
	jule::Str _7283_lex = _1a8197eac_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a819b0e2_lexNum(_1a8197044_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1a81881cd_Token>* _73741_t) {
	jule::Str _7383_lex = _1a8198ae5_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a81881cd_Token> _1a819b378_token(_1a8197044_lex* _self_) {
	jule::Ptr<_1a81881cd_Token> _7497_t = jule::new_ptr<_1a81881cd_Token>(_1a81881cd_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1a8198243_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a819b0e2_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1a6c5972e:;
			{
				goto _match_end_1a6c59135;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1a6c59498:;
			{
				(*_7497_t.alloc)._field_Kind=_1a8199673_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1a6c5950e:;
			{
				(*_7497_t.alloc)._field_Kind=_1a8199909_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1a81921c6_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1a6c59575:;
			{
				_1a81984eb_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a81921c6_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1a6c595db:;
			{
				_1a81987a4_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1a819a7ea_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1a6c59652:;
			{
				goto _match_end_1a6c59135;
			}
		}
		else if (_1a819abe6_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1a6c5aa4e:;
			{
				{
					auto expr = &(_1a819148e_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6c5e8bb:;
					if (it != expr_end) {
						_1a81910a4_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1a6c5e8bb;
							};
						}
						_iter_next_1a6c5e8bb:;
						++it;
						goto _iter_begin_1a6c5e8bb;
					}
					_iter_end_1a6c5e8bb:;
				};
			}
		}
		else {
			_case_begin_1a6c59399:;
			{
				jule::I32 _7934_r;
				jule::I64 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a819760a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1a6c59135:;
	};
	(*(_self_))._field_column+=_21c851975_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1a819cbe8_Node_eq(_1a819cbe8_Node *_self_, _1a819cbe8_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a819dbe9_TypeDecl_eq(_1a819dbe9_TypeDecl *_self_, _1a819dbe9_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a819e997_NamespaceTypeDecl_eq(_1a819e997_NamespaceTypeDecl *_self_, _1a819e997_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a819ec94_SptrTypeDecl_eq(_1a819ec94_SptrTypeDecl *_self_, _1a819ec94_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1a81a0129_SlcTypeDecl_eq(_1a81a0129_SlcTypeDecl *_self_, _1a81a0129_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1a81a0723_PtrTypeDecl_eq(_1a81a0723_PtrTypeDecl *_self_, _1a81a0723_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1a81a0ab9_IsUnsafe(_1a81a0723_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a81a0eb5_ArrTypeDecl_eq(_1a81a0eb5_ArrTypeDecl *_self_, _1a81a0eb5_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1a81a135b_AutoSized(_1a81a0eb5_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1a81a1713_MapTypeDecl_eq(_1a81a1713_MapTypeDecl *_self_, _1a81a1713_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a81a302d_Expr_eq(_1a81a302d_Expr *_self_, _1a81a302d_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1a81a32e7_RangeExpr_eq(_1a81a32e7_RangeExpr *_self_, _1a81a32e7_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a81a3902_UseExpr_eq(_1a81a3902_UseExpr *_self_, _1a81a3902_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a81a3eb8_LitExpr_eq(_1a81a3eb8_LitExpr *_self_, _1a81a3eb8_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1a81a4392_UnsafeExpr_eq(_1a81a4392_UnsafeExpr *_self_, _1a81a4392_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a81a4848_IdentExpr_eq(_1a81a4848_IdentExpr *_self_, _1a81a4848_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a81a50da_UnaryExpr_eq(_1a81a50da_UnaryExpr *_self_, _1a81a50da_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a81a54b4_VariadicExpr_eq(_1a81a54b4_VariadicExpr *_self_, _1a81a54b4_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a81a588d_CastExpr_eq(_1a81a588d_CastExpr *_self_, _1a81a588d_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a81a5c67_NamespaceExpr_eq(_1a81a5c67_NamespaceExpr *_self_, _1a81a5c67_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a81a6141_SubIdentExpr_eq(_1a81a6141_SubIdentExpr *_self_, _1a81a6141_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a81a65e7_BinaryExpr_eq(_1a81a65e7_BinaryExpr *_self_, _1a81a65e7_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1a81a710e_Unhandled(_1a81a6c57_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a81a7395_Ignored(_1a81a6c57_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1a81a774c_FieldExprPair_eq(_1a81a774c_FieldExprPair *_self_, _1a81a774c_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1a81a8d58_KeyValPair_eq(_1a81a8d58_KeyValPair *_self_, _1a81a8d58_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1a81a9ee1_IndexingExpr_eq(_1a81a9ee1_IndexingExpr *_self_, _1a81a9ee1_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a81aa651_SlicingExpr_eq(_1a81aa651_SlicingExpr *_self_, _1a81aa651_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1a81aae04_GenericDecl_eq(_1a81aae04_GenericDecl *_self_, _1a81aae04_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1a81ab2cd_LabelSt_eq(_1a81ab2cd_LabelSt *_self_, _1a81ab2cd_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1a81ab6a7_GotoSt_eq(_1a81ab6a7_GotoSt *_self_, _1a81ab6a7_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a81ab9a4_FallSt_eq(_1a81ab9a4_FallSt *_self_, _1a81ab9a4_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1a81ac114_AssignLeft_eq(_1a81ac114_AssignLeft *_self_, _1a81ac114_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a81ad687_Stmt_eq(_1a81ad687_Stmt *_self_, _1a81ad687_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1a81ae534_ParamDecl_eq(_1a81ae534_ParamDecl *_self_, _1a81ae534_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a81ae8db_IsSelf(_1a81ae534_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1a81b0d2c_IsAnon(_1a81b0986_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1a81b201a_RetSt_eq(_1a81b201a_RetSt *_self_, _1a81b201a_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a81b278a_Iter_eq(_1a81b278a_Iter *_self_, _1a81b278a_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a81b2b31_IsInf(_1a81b278a_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1a81b30b5_WhileKind_eq(_1a81b30b5_WhileKind *_self_, _1a81b30b5_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a81b345b_IsWhileNext(_1a81b30b5_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a81b39bc_RangeKind_eq(_1a81b39bc_RangeKind *_self_, _1a81b39bc_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a81b3d96_BreakSt_eq(_1a81b3d96_BreakSt *_self_, _1a81b3d96_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a81b4270_ContSt_eq(_1a81b4270_ContSt *_self_, _1a81b4270_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1a81b4726_If_eq(_1a81b4726_If *_self_, _1a81b4726_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a81b4b00_Else_eq(_1a81b4b00_Else *_self_, _1a81b4b00_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1a81b57e3_TypeAliasDecl_eq(_1a81b57e3_TypeAliasDecl *_self_, _1a81b57e3_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1a81b6b46_UseDecl_eq(_1a81b6b46_UseDecl *_self_, _1a81b6b46_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1a81b70ec_EnumItemDecl_eq(_1a81b70ec_EnumItemDecl *_self_, _1a81b70ec_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a81b84d8_TypeEnumItemDecl_eq(_1a81b84d8_TypeEnumItemDecl *_self_, _1a81b84d8_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1a81b8e12_FieldDecl_eq(_1a81b8e12_FieldDecl *_self_, _1a81b8e12_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1a82273d2_Const> static__1a827e0a4_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a82273d2_Const> static__1a827e329_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a82273d2_Const> static__1a827e5e3_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a82273d2_Const> static__1a827e8ac_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a82273d2_Const> static__1a827eb76_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1a82273d2_Const> static__1a827ed85_NewNil(void) {
	return jule::new_ptr<_1a82273d2_Const>(_1a82273d2_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1a82804e5_ReadI64(_1a82273d2_Const* _self_) {
	if ((!(_1a8282ae1_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1a828077b_ReadU64(_1a82273d2_Const* _self_) {
	if ((!(_1a8282d77_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1a8280a12_ReadBool(_1a82273d2_Const* _self_) {
	if ((!(_1a828310d_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1a8280c98_ReadStr(_1a82273d2_Const* _self_) {
	if ((!(_1a8283394_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1a828102e_ReadF64(_1a82273d2_Const* _self_) {
	if ((!(_1a828362a_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1a82812b5_AsI64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a62c386a:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a62c42b6:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a62c432c:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a62c3d21:;
			{
				return 0LL;;
			}
		}
		_match_end_1a62c3b78:;
	};
}



inline jule::U64 _1a828154b_AsU64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a62c4e10:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a62c5b36:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a62c5b9c:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a62c53d8:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a62c5372:;
	};
}



inline jule::F64 _1a82817d2_AsF64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a62c7693:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a62c676e:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a62c7484:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1a62c6c36:;
			{
				return 0LL;;
			}
		}
		_match_end_1a62c6bc0:;
	};
}



inline void _1a8281a8a_SetI64(_1a82273d2_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1a8281d43_SetU64(_1a82273d2_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1a82820eb_SetBool(_1a82273d2_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1a82823a4_SetStr(_1a82273d2_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1a828265c_SetF64(_1a82273d2_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1a8282ae1_IsI64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a62cb08c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a62cb2bd:;
			{
				return false;;
			}
		}
		_match_end_1a62cb257:;
	};
}



inline jule::Bool _1a8282d77_IsU64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a62cbb2b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a62cb400:;
			{
				return false;;
			}
		}
		_match_end_1a62cb389:;
	};
}



inline jule::Bool _1a828310d_IsBool(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a62cc06b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a62cc555:;
			{
				return false;;
			}
		}
		_match_end_1a62cc4de:;
	};
}



inline jule::Bool _1a8283394_IsStr(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a62cc9ea:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a62cced4:;
			{
				return false;;
			}
		}
		_match_end_1a62cce6d:;
	};
}



inline jule::Bool _1a828362a_IsF64(_1a82273d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a62cd479:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a62cd963:;
			{
				return false;;
			}
		}
		_match_end_1a62cd8ec:;
	};
}



inline jule::Bool _1a82838b1_IsNil(_1a82273d2_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a8284043_And(_1a82273d2_Const* _self_, _1a82273d2_Const _23615_x) {
	{
		
		if ((_1a828310d_IsBool(_self_) && _1a828310d_IsBool(&_23615_x))) {
			_case_begin_1a62d2e0c:;
			{
				return (_1a8280a12_ReadBool(_self_) && _1a8280a12_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1a62d2d96:;
			{
				return false;;
			}
		}
		_match_end_1a62d2956:;
	};
}



inline jule::Bool _1a8284384_Or(_1a82273d2_Const* _self_, _1a82273d2_Const _24714_x) {
	{
		
		if ((_1a828310d_IsBool(_self_) && _1a828310d_IsBool(&_24714_x))) {
			_case_begin_1a62d420a:;
			{
				return (_1a8280a12_ReadBool(_self_) || _1a8280a12_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1a62d38e1:;
			{
				return false;;
			}
		}
		_match_end_1a62d3803:;
	};
}



inline jule::Bool _1a82846c5_Eq(_1a82273d2_Const* _self_, _1a82273d2_Const _25814_x) {
	{
		
		if (_1a82838b1_IsNil(_self_)) {
			_case_begin_1a62d556e:;
			{
				return _1a82838b1_IsNil(&_25814_x);;
			}
		}
		else if (_1a828310d_IsBool(_self_)) {
			_case_begin_1a62d55d5:;
			{
				return (_1a828310d_IsBool(&_25814_x) && (_1a8280a12_ReadBool(_self_) == _1a8280a12_ReadBool(&_25814_x)));;
			}
		}
		else if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62d564b:;
			{
				return (_1a8283394_IsStr(&_25814_x) && (_1a8280c98_ReadStr(_self_) == _1a8280c98_ReadStr(&_25814_x)));;
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62d56c3:;
			{
				return (_1a82804e5_ReadI64(_self_) == _1a82812b5_AsI64(&_25814_x));;
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62d574a:;
			{
				return (_1a828077b_ReadU64(_self_) == _1a828154b_AsU64(&_25814_x));;
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62d58e3:;
			{
				return (_1a828102e_ReadF64(_self_) == _1a82817d2_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1a62d4bcd:;
			{
				return false;;
			}
		}
		_match_end_1a62d4ae0:;
	};
}



inline jule::Bool _1a8284a16_Lt(_1a82273d2_Const* _self_, _1a82273d2_Const _28514_x) {
	{
		
		if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62d9298:;
			{
				return (_1a8283394_IsStr(&_28514_x) && (_1a8280c98_ReadStr(_self_) < _1a8280c98_ReadStr(&_28514_x)));;
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62d930e:;
			{
				return (_1a82804e5_ReadI64(_self_) < _1a82812b5_AsI64(&_28514_x));;
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62d9375:;
			{
				return (_1a828077b_ReadU64(_self_) < _1a828154b_AsU64(&_28514_x));;
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62d93ec:;
			{
				return (_1a828102e_ReadF64(_self_) < _1a82817d2_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1a62d6031:;
			{
				return false;;
			}
		}
		_match_end_1a62d5e54:;
	};
}



inline jule::Bool _1a8284d57_LtEq(_1a82273d2_Const* _self_, _1a82273d2_Const _30816_x) {
	{
		
		if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62dbe9e:;
			{
				return (_1a8283394_IsStr(&_30816_x) && (_1a8280c98_ReadStr(_self_) <= _1a8280c98_ReadStr(&_30816_x)));;
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62dc015:;
			{
				return (_1a82804e5_ReadI64(_self_) <= _1a82812b5_AsI64(&_30816_x));;
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62dc07b:;
			{
				return (_1a828077b_ReadU64(_self_) <= _1a828154b_AsU64(&_30816_x));;
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62dc103:;
			{
				return (_1a828102e_ReadF64(_self_) <= _1a82817d2_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1a62d9b5b:;
			{
				return false;;
			}
		}
		_match_end_1a62d9a7e:;
	};
}



inline jule::Bool _1a8285198_Gt(_1a82273d2_Const* _self_, _1a82273d2_Const _33114_x) {
	{
		
		if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62deba5:;
			{
				return (_1a8283394_IsStr(&_33114_x) && (_1a8280c98_ReadStr(_self_) > _1a8280c98_ReadStr(&_33114_x)));;
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62dec1b:;
			{
				return (_1a82804e5_ReadI64(_self_) > _1a82812b5_AsI64(&_33114_x));;
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62dec82:;
			{
				return (_1a828077b_ReadU64(_self_) > _1a828154b_AsU64(&_33114_x));;
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62ded09:;
			{
				return (_1a828102e_ReadF64(_self_) > _1a82817d2_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1a62dc862:;
			{
				return false;;
			}
		}
		_match_end_1a62dc785:;
	};
}



inline jule::Bool _1a82854d9_GtEq(_1a82273d2_Const* _self_, _1a82273d2_Const _35416_x) {
	{
		
		if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62e28ab:;
			{
				return (_1a8283394_IsStr(&_35416_x) && (_1a8280c98_ReadStr(_self_) >= _1a8280c98_ReadStr(&_35416_x)));;
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62e2922:;
			{
				return (_1a82804e5_ReadI64(_self_) >= _1a82812b5_AsI64(&_35416_x));;
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62e2988:;
			{
				return (_1a828077b_ReadU64(_self_) >= _1a828154b_AsU64(&_35416_x));;
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62e2a10:;
			{
				return (_1a828102e_ReadF64(_self_) >= _1a82817d2_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1a62e0568:;
			{
				return false;;
			}
		}
		_match_end_1a62e048b:;
	};
}



inline jule::Bool _1a828582a_Add(_1a82273d2_Const* _self_, _1a82273d2_Const _37519_x) {
	{
		
		if (_1a8283394_IsStr(_self_)) {
			_case_begin_1a62e55b2:;
			{
				if ((!(_1a8283394_IsStr(&_37519_x)))) {
					return false;;
				};
				_1a82823a4_SetStr(_self_, (_1a8280c98_ReadStr(_self_) + _1a8280c98_ReadStr(&_37519_x)));
			}
		}
		else if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62e5628:;
			{
				_1a828265c_SetF64(_self_, (_1a828102e_ReadF64(_self_) + _1a82817d2_AsF64(&_37519_x)));
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62e568e:;
			{
				if (_1a828362a_IsF64(&_37519_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) + _1a828102e_ReadF64(&_37519_x)));
				} else {
					_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) + _1a82812b5_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62e5716:;
			{
				if (_1a828362a_IsF64(&_37519_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) + _1a828102e_ReadF64(&_37519_x)));
				} else {
					_1a8281d43_SetU64(_self_, (jule::U64)(_1a828077b_ReadU64(_self_) + _1a828154b_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1a62e326e:;
			{
				return false;;
			}
		}
		_match_end_1a62e3192:;
	};
	return true;;
}



inline jule::Bool _1a8285b6b_Sub(_1a82273d2_Const* _self_, _1a82273d2_Const _40419_x) {
	{
		
		if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62ea3db:;
			{
				_1a828265c_SetF64(_self_, (_1a828102e_ReadF64(_self_) - _1a82817d2_AsF64(&_40419_x)));
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62ea452:;
			{
				if (_1a828362a_IsF64(&_40419_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) - _1a828102e_ReadF64(&_40419_x)));
				} else {
					_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) - _1a82812b5_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62ea4b8:;
			{
				if (_1a828362a_IsF64(&_40419_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) - _1a828102e_ReadF64(&_40419_x)));
				} else {
					_1a8281d43_SetU64(_self_, (jule::U64)(_1a828077b_ReadU64(_self_) - _1a828154b_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1a62e9b27:;
			{
				return false;;
			}
		}
		_match_end_1a62e9a28:;
	};
	return true;;
}



inline jule::Bool _1a8285eac_Mul(_1a82273d2_Const* _self_, _1a82273d2_Const _42819_x) {
	{
		
		if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a62ee302:;
			{
				_1a828265c_SetF64(_self_, (_1a828102e_ReadF64(_self_) * _1a82817d2_AsF64(&_42819_x)));
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a62ee368:;
			{
				if (_1a828362a_IsF64(&_42819_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) * _1a828102e_ReadF64(&_42819_x)));
				} else {
					_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) * _1a82812b5_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a62ee3ce:;
			{
				if (_1a828362a_IsF64(&_42819_x)) {
					_1a828265c_SetF64(_self_, (_1a82817d2_AsF64(_self_) * _1a828102e_ReadF64(&_42819_x)));
				} else {
					_1a8281d43_SetU64(_self_, (jule::U64)(_1a828077b_ReadU64(_self_) * _1a828154b_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1a62ed8c8:;
			{
				return false;;
			}
		}
		_match_end_1a62ed7da:;
	};
	return true;;
}



inline jule::Bool _1a82862ed_Div(_1a82273d2_Const* _self_, _1a82273d2_Const _45619_x) {
	{
		
		if (_1a828362a_IsF64(_self_)) {
			_case_begin_1a6303207:;
			{
				jule::F64 _4594_l = _1a82817d2_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1a828265c_SetF64(_self_, ({ jule::F64 __jule_x = _1a828102e_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a630326d:;
			{
				jule::F64 _4654_l = _1a82817d2_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1a828265c_SetF64(_self_, ({ jule::F64 __jule_x = _1a82817d2_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a63032d4:;
			{
				jule::F64 _4714_l = _1a82817d2_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1a828265c_SetF64(_self_, ({ jule::F64 __jule_x = _1a82817d2_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1a63027cd:;
			{
				return false;;
			}
		}
		_match_end_1a63026e0:;
	};
	return true;;
}



inline jule::Bool _1a828663e_Mod(_1a82273d2_Const* _self_, _1a82273d2_Const _48519_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a63070da:;
			{
				jule::I64 _4884_l = _1a82812b5_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1a8281a8a_SetI64(_self_, ({ jule::I64 __jule_x = _1a82804e5_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a63074e7:;
			{
				jule::U64 _4944_l = _1a828154b_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1a8281d43_SetU64(_self_, ({ jule::U64 __jule_x = _1a828077b_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1a6307063:;
			{
				return false;;
			}
		}
		_match_end_1a6306e53:;
	};
	return true;;
}



inline jule::Bool _1a8286980_BitwiseAnd(_1a82273d2_Const* _self_, _1a82273d2_Const _50726_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a6309e56:;
			{
				_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) & _1a82812b5_AsI64(&_50726_x)));
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a630a363:;
			{
				_1a8281d43_SetU64(_self_, (_1a828077b_ReadU64(_self_) & _1a828154b_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1a6309dce:;
			{
				return false;;
			}
		}
		_match_end_1a6309cbe:;
	};
	return true;;
}



inline jule::Bool _1a8286cc1_BitwiseOr(_1a82273d2_Const* _self_, _1a82273d2_Const _52125_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a630bc27:;
			{
				_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) | _1a82812b5_AsI64(&_52125_x)));
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a630c134:;
			{
				_1a8281d43_SetU64(_self_, (_1a828077b_ReadU64(_self_) | _1a828154b_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1a630bba0:;
			{
				return false;;
			}
		}
		_match_end_1a630ba90:;
	};
	return true;;
}



inline jule::Bool _1a8287112_Xor(_1a82273d2_Const* _self_, _1a82273d2_Const _53519_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a630d9d7:;
			{
				_1a8281a8a_SetI64(_self_, (_1a82804e5_ReadI64(_self_) ^ _1a82812b5_AsI64(&_53519_x)));
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a6cb39ca:;
			{
				_1a8281d43_SetU64(_self_, (_1a828077b_ReadU64(_self_) ^ _1a828154b_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1a630d971:;
			{
				return false;;
			}
		}
		_match_end_1a630d861:;
	};
	return true;;
}



inline jule::Bool _1a8287453_Lshift(_1a82273d2_Const* _self_, _1a82273d2_Const _54922_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a6cb537d:;
			{
				jule::I64 _5524_l = _1a82812b5_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1a828154b_AsU64(&_54922_x);;
					_1a8281a8a_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1a8287b07_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a6cb578a:;
			{
				_1a8287b07_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1a6cb5306:;
			{
				return false;;
			}
		}
		_match_end_1a6cb51e6:;
	};
	return true;;
}



inline jule::Bool _1a8287794_Rshift(_1a82273d2_Const* _self_, _1a82273d2_Const _56922_x) {
	{
		
		if (_1a8282ae1_IsI64(_self_)) {
			_case_begin_1a6cb7913:;
			{
				jule::I64 _5724_l = _1a82812b5_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1a828154b_AsU64(&_56922_x);;
					_1a8281a8a_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1a8287e37_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1a8282d77_IsU64(_self_)) {
			_case_begin_1a6cb7d20:;
			{
				_1a8287e37_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1a6cb788b:;
			{
				return false;;
			}
		}
		_match_end_1a6cb778c:;
	};
	return true;;
}








inline jule::Bool _1a81bb6d9_Field_eq(_1a81bb6d9_Field *_self_, _1a81bb6d9_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a81c18ba_FieldIns> _1a81bbac4_instance(jule::Ptr<_1a81bb6d9_Field> _self_) {
	return jule::new_ptr<_1a81c18ba_FieldIns>(_1a81c18ba_FieldIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Default=jule::Ptr<_1a85028cc_Data>(nullptr)});;
}








inline jule::Bool _1a81bd6ec_Operators_eq(_1a81bd6ec_Operators *_self_, _1a81bd6ec_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1a81c246a_StructIns> _1a81beaa5_instance(jule::Ptr<_1a81be610_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a81c246a_StructIns> _997_ins = jule::new_ptr<_1a81c246a_StructIns>(_1a81c246a_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81c18ba_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81c18ba_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a83cc1ad_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1a8297694_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1a8379435_new(), ._field_Operators=_1a81bd6ec_Operators{._field_Eq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a829a752_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95be3c1:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a83cc1ad_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1a95be3c1:;
			++it;
			goto _iter_begin_1a95be3c1;
		}
		_iter_end_1a95be3c1:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95c02a1:;
		if (it != expr_end) {
			jule::Ptr<_1a81bb6d9_Field> _11015_f = *it;
			{
				jule::Ptr<_1a81c18ba_FieldIns> _1118_f2 = _1a81bbac4_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81c18ba_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1a853725d_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1a95c02a1:;
			++it;
			goto _iter_begin_1a95c02a1;
		}
		_iter_end_1a95c02a1:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8297694_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a95c45c4:;
			if (it != expr_end) {
				jule::Ptr<_1a8297694_Fn> _12316_f = *it;
				{
					jule::Ptr<_1a8297694_Fn> _1249_fins = jule::new_ptr<_1a8297694_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1a95c45c4:;
				++it;
				goto _iter_begin_1a95c45c4;
			}
			_iter_end_1a95c45c4:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1a81c246a_StructIns> _1a81bedb3_appendInstance(_1a81be610_Struct* _self_, jule::Ptr<_1a81c246a_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95c694a:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _14115_ains = *it;
			{
				if (_1a81c3119_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1a95c694a:;
			++it;
			goto _iter_begin_1a95c694a;
		}
		_iter_end_1a95c694a:;
	};
	{ jule::Slice<jule::Ptr<_1a81c246a_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a8297694_Fn> _1a81c02ae_FindMethod(_1a81be610_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95c7ebd:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1a95c7ebd:;
			++it;
			goto _iter_begin_1a95c7ebd;
		}
		_iter_end_1a95c7ebd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a81c0600_FindStatic(_1a81be610_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95c9310:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1a95c9310:;
			++it;
			goto _iter_begin_1a95c9310;
		}
		_iter_end_1a95c9310:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a81bb6d9_Field> _1a81c0941_FindField(_1a81be610_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95ca2de:;
		if (it != expr_end) {
			jule::Ptr<_1a81bb6d9_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1a95ca2de:;
			++it;
			goto _iter_begin_1a95ca2de;
		}
		_iter_end_1a95ca2de:;
	};
	return nullptr;;
}



inline jule::Bool _1a81c0c82_IsImplements(_1a81be610_Struct* _self_, jule::Ptr<_1a82a2da8_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95cb2ce:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1a95cb2ce:;
			++it;
			goto _iter_begin_1a95cb2ce;
		}
		_iter_end_1a95cb2ce:;
	};
	return false;;
}



inline jule::Bool _1a81c10c3_IsUses(_1a81be610_Struct* _self_, jule::Ptr<_1a81be610_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95cbc80:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1a95cc830:;
				}
				_iter_end_1a95cc830:;;
			}
			_iter_next_1a95cbc80:;
			++it;
			goto _iter_begin_1a95cbc80;
		}
		_iter_end_1a95cbc80:;
	};
	return false;;
}








inline jule::Bool _1a81c18ba_FieldIns_eq(_1a81c18ba_FieldIns *_self_, _1a81c18ba_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1a81c2822_Str(_1a81c246a_StructIns* _self_) {
	_21ca86171_Builder _2417_kind = static__21ca869bd_New(32LL);;
	({
		auto except = _21ca87150_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _21ca87408_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a95d04e2:;
			if (it != expr_end) {
				jule::I64 _2458_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _21ca87150_WriteStr(&_2417_kind, _1a8535c73_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _21ca87408_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_1a95d04e2:;
				++it;
				_2458_i++;
				goto _iter_begin_1a95d04e2;
			}
			_iter_end_1a95d04e2:;
		};
		({
			auto except = _21ca87408_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _21ca879d0_Str(&_2417_kind);;
}



inline jule::Bool _1a81c2b63_Equal(jule::Ptr<_1a81c246a_StructIns> _self_, jule::Ptr<_1a8535877_Type> _25718_other) {
	jule::Ptr<_1a81c246a_StructIns> _2583_s = _1a85395a1_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1a85360b4_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1a95d4859:;
	}
	_iter_end_1a95d4859:;;
	return true;;
}



inline jule::Bool _1a81c3119_Same(_1a81c246a_StructIns* _self_, jule::Ptr<_1a81c246a_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d732e:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1a8533e91_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1a8533e91_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_1a85360b4_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1a95d732e:;
			++it;
			_2897_i++;
			goto _iter_begin_1a95d732e;
		}
		_iter_end_1a95d732e:;
	};
	return true;;
}



inline jule::Ptr<_1a8297694_Fn> _1a81c3515_FindMethod(_1a81c246a_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d9d48:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1a95d9d48:;
			++it;
			goto _iter_begin_1a95d9d48;
		}
		_iter_end_1a95d9d48:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a81c18ba_FieldIns> _1a81c3856_FindField(_1a81c246a_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95db18a:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1a95db18a:;
			++it;
			goto _iter_begin_1a95db18a;
		}
		_iter_end_1a95db18a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a81c3b97_FindStatic(_1a81c246a_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95dc378:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1a95dc378:;
			++it;
			goto _iter_begin_1a95dc378;
		}
		_iter_end_1a95dc378:;
	};
	return nullptr;;
}








inline jule::Bool _1a8289e7d_OperandExprModel_eq(_1a8289e7d_OperandExprModel *_self_, _1a8289e7d_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1a828a478_BinaryExprModel_eq(_1a828a478_BinaryExprModel *_self_, _1a828a478_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a828a852_UnaryExprModel_eq(_1a828a852_UnaryExprModel *_self_, _1a828a852_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a828ad80_StructArgExprModel_eq(_1a828ad80_StructArgExprModel *_self_, _1a828ad80_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1a828b523_AllocStructLitExprModel_eq(_1a828b523_AllocStructLitExprModel *_self_, _1a828b523_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1a828baa6_CastingExprModel_eq(_1a828baa6_CastingExprModel *_self_, _1a828baa6_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1a828ccd8_IndexingExprModel_eq(_1a828ccd8_IndexingExprModel *_self_, _1a828ccd8_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1a828d668_KeyValPairExprModel_eq(_1a828d668_KeyValPairExprModel *_self_, _1a828d668_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1a828e0c5_SlicingExprModel_eq(_1a828e0c5_SlicingExprModel *_self_, _1a828e0c5_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a828e658_TraitSubIdentExprModel_eq(_1a828e658_TraitSubIdentExprModel *_self_, _1a828e658_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1a828eee9_StructSubIdentExprModel_eq(_1a828eee9_StructSubIdentExprModel *_self_, _1a828eee9_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1a8290390_StructStaticIdentExprModel_eq(_1a8290390_StructStaticIdentExprModel *_self_, _1a8290390_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1a8290d63_BuiltinPrintCallExprModel_eq(_1a8290d63_BuiltinPrintCallExprModel *_self_, _1a8290d63_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a8291160_BuiltinPrintlnCallExprModel_eq(_1a8291160_BuiltinPrintlnCallExprModel *_self_, _1a8291160_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a8291539_BuiltinNewCallExprModel_eq(_1a8291539_BuiltinNewCallExprModel *_self_, _1a8291539_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1a8291913_BuiltinPanicCallExprModel_eq(_1a8291913_BuiltinPanicCallExprModel *_self_, _1a8291913_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a8291db9_BuiltinMakeCallExprModel_eq(_1a8291db9_BuiltinMakeCallExprModel *_self_, _1a8291db9_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1a8292293_BuiltinAppendCallExprModel_eq(_1a8292293_BuiltinAppendCallExprModel *_self_, _1a8292293_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1a8292590_BuiltinLenCallExprModel_eq(_1a8292590_BuiltinLenCallExprModel *_self_, _1a8292590_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a829288c_BuiltinCapCallExprModel_eq(_1a829288c_BuiltinCapCallExprModel *_self_, _1a829288c_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a8292c66_BuiltinDeleteCallExprModel_eq(_1a8292c66_BuiltinDeleteCallExprModel *_self_, _1a8292c66_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1a8293140_BuiltinCopyCallExprModel_eq(_1a8293140_BuiltinCopyCallExprModel *_self_, _1a8293140_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1a8293519_BuiltinErrorCallExprModel_eq(_1a8293519_BuiltinErrorCallExprModel *_self_, _1a8293519_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1a8293816_SizeofExprModel_eq(_1a8293816_SizeofExprModel *_self_, _1a8293816_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a8293eba_AlignofExprModel_eq(_1a8293eba_AlignofExprModel *_self_, _1a8293eba_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a82941a7_RuneExprModel_eq(_1a82941a7_RuneExprModel *_self_, _1a82941a7_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1a8294828_FreeExprModel_eq(_1a8294828_FreeExprModel *_self_, _1a8294828_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1a8295bc0_Param_eq(_1a8295bc0_Param *_self_, _1a8295bc0_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1a82995ec_ParamIns> _1a8296088_instance(jule::Ptr<_1a8295bc0_Param> _self_) {
	return jule::new_ptr<_1a82995ec_ParamIns>(_1a82995ec_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr)});;
}



inline jule::Bool _1a829631e_IsSelf(_1a8295bc0_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a82965a5_IsRef(_1a8295bc0_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1a8297b4a_IsVoid(_1a8297694_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a8297dd1_IsMethod(_1a8297694_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1a8295bc0_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1a829631e_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a8298167_IsEntryPoint(_1a8297694_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a82983ed_IsInit(_1a8297694_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a8298684_IsAnon(_1a8297694_Fn* _self_) {
	return _1a818ad7e_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a829891a_AnyVar(_1a8297694_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a829a752_FnIns> _1a8298ba1_instanceForce(jule::Ptr<_1a8297694_Fn> _self_) {
	jule::Ptr<_1a829a752_FnIns> _1107_ins = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::new_ptr<_1a8355466_Scope>(_1a8355466_Scope{._field_Parent=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1a8379435_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a82995ec_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95e5705:;
		if (it != expr_end) {
			jule::Ptr<_1a8295bc0_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8296088_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1a95e5705:;
			++it;
			goto _iter_begin_1a95e5705;
		}
		_iter_end_1a95e5705:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1a829a752_FnIns> _1a8298e37_instance(jule::Ptr<_1a8297694_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a8298ba1_instanceForce(_self_);;
}



inline jule::Ptr<_1a829a752_FnIns> _1a8299245_appendInstance(_1a8297694_Fn* _self_, jule::Ptr<_1a829a752_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a829a752_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a829a752_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95eaebe:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _15415_ains = *it;
			{
				if (_1a829c2e2_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1a95eaebe:;
			++it;
			goto _iter_begin_1a95eaebe;
		}
		_iter_end_1a95eaebe:;
	};
	{ jule::Slice<jule::Ptr<_1a829a752_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1a82995ec_ParamIns_eq(_1a82995ec_ParamIns *_self_, _1a82995ec_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1a8299993_Str(_1a82995ec_ParamIns* _self_) {
	_21ca86171_Builder _1767_s = static__21ca869bd_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _21ca87150_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		({
			auto except = _21ca87150_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_1a829631e_IsSelf((*(_self_))._field_Decl)) {
		if (_1a82965a5_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _21ca87408_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _21ca87150_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _21ca879d0_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		({
			auto except = _21ca87150_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _21ca87150_WriteStr(&_1767_s, _1a8535c73_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _21ca879d0_Str(&_1767_s);;
}







inline jule::Str _1a829aac6_Str(_1a829a752_FnIns* _self_) {
	;
	return _1a829c633_GetKindStr(_self_, false);;
}



inline jule::Bool _1a829ae17_Equal(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a8535877_Type> _22918_other) {
	jule::Ptr<_1a829a752_FnIns> _2303_f = _1a853931a_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1a829b3ac_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1a829b3ac_EqualFn(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a829a752_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a8297b4a_IsVoid((*(_self_))._field_Decl) != _1a8297b4a_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a82995ec_ParamIns>,jule::Ptr<_1a82995ec_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a82995ec_ParamIns>,jule::Ptr<_1a82995ec_ParamIns>>((void*)__jule_anon1a9605d0e, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1a960bb6c:;
	}
	_iter_end_1a960bb6c:;;
	if ((!(_1a8297b4a_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a85360b4_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a829b6ed_equalTrait(jule::Ptr<_1a829a752_FnIns> _self_, jule::Ptr<_1a829a752_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a829b3ac_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a8535877_Type>> _1a829b984_Types(_1a829a752_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a9612810:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8539d54_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a9612876:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1a961238c:;
			{
				return (*(_1a8539d54_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1a961227c:;
	};
}



inline jule::Bool _1a829bc1a_IsBuiltin(_1a829a752_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a829bea1_IsAnon(_1a829a752_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a8298684_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a829c2e2_Same(_1a829a752_FnIns* _self_, jule::Ptr<_1a829a752_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9615cca:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1a8533e91_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1a8533e91_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_1a85360b4_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1a9615cca:;
			++it;
			_3477_i++;
			goto _iter_begin_1a9615cca;
		}
		_iter_end_1a9615cca:;
	};
	return true;;
}



inline jule::Str _1a829c633_GetKindStr(_1a829a752_FnIns* _self_, jule::Bool _35922_ident) {
	_21ca86171_Builder _3607_s = static__21ca869bd_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _21ca87150_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _21ca87150_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _21ca87408_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _21ca87150_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _21ca87408_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a961b440:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1a82995ec_ParamIns> *_37611_p = it;
				{
					({
						auto except = _21ca87150_WriteStr(&_3607_s, _1a8299993_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _21ca87408_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_1a961b440:;
				++it;
				_3768_i++;
				goto _iter_begin_1a961b440;
			}
			_iter_end_1a961b440:;
		};
	};
	({
		auto except = _21ca87408_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _21ca87408_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1a8297b4a_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _21ca87408_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _21ca87150_WriteStr(&_3607_s, _1a8535c73_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _21ca879d0_Str(&_3607_s);;
}







inline jule::Ptr<_1a838b14a_ImportInfo> _1a829deb4_SelectPackage(_1a829d997_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96201e1:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1a96201e1:;
			++it;
			goto _iter_begin_1a96201e1;
		}
		_iter_end_1a96201e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a829e3b0_FindVar(_1a829d997_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a82a14e4_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a829e7ab_FindTypeAlias(_1a829d997_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a82a199a_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a81be610_Struct> _1a829eba7_FindStruct(_1a829d997_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9622622:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1a9622622:;
			++it;
			goto _iter_begin_1a9622622;
		}
		_iter_end_1a9622622:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8297694_Fn> _1a82a00a3_FindFn(_1a829d997_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9623b84:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1a9623b84:;
			++it;
			goto _iter_begin_1a9623b84;
		}
		_iter_end_1a9623b84:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a82a03e4_FindTrait(_1a829d997_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9624ed7:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1a9624ed7:;
			++it;
			goto _iter_begin_1a9624ed7;
		}
		_iter_end_1a9624ed7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a555e_Enum> _1a82a0735_FindEnum(_1a829d997_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9625ea5:;
		if (it != expr_end) {
			jule::Ptr<_1a82a555e_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1a9625ea5:;
			++it;
			goto _iter_begin_1a9625ea5;
		}
		_iter_end_1a9625ea5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a82a0a76_FindTypeEnum(_1a829d997_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9626e95:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6c69_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1a9626e95:;
			++it;
			goto _iter_begin_1a9626e95;
		}
		_iter_end_1a9626e95:;
	};
	return nullptr;;
}



inline jule::I64 _1a82a103d_findVar1(_1a829d997_SymTab* _self_, jule::Ptr<_1a83cc1ad_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9627e85:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1a9627e85:;
			++it;
			_1097_i++;
			goto _iter_begin_1a9627e85;
		}
		_iter_end_1a9627e85:;
	};
	return -1LL;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a82a14e4_findVar(_1a829d997_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1a83cc1ad_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1a9629d11:;
		}
		_iter_end_1a9629d11:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a962b296:;
			if (it != expr_end) {
				jule::Ptr<_1a83cc1ad_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1a962b296:;
				++it;
				goto _iter_begin_1a962b296;
			}
			_iter_end_1a962b296:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a82a199a_findTypeAlias(_1a829d997_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1a8534a85_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1a962d155:;
		}
		_iter_end_1a962d155:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a962e5da:;
			if (it != expr_end) {
				jule::Ptr<_1a8534a85_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1a962e5da:;
				++it;
				goto _iter_begin_1a962e5da;
			}
			_iter_end_1a962e5da:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a82a1d96_defByIdent(_1a829d997_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a963082d:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1a963082d:;
			++it;
			goto _iter_begin_1a963082d;
		}
		_iter_end_1a963082d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9631620:;
		if (it != expr_end) {
			jule::Ptr<_1a8534a85_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1a9631620:;
			++it;
			goto _iter_begin_1a9631620;
		}
		_iter_end_1a9631620:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96349a8:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1a96349a8:;
			++it;
			goto _iter_begin_1a96349a8;
		}
		_iter_end_1a96349a8:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d57db0:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1a6d57db0:;
			++it;
			goto _iter_begin_1a6d57db0;
		}
		_iter_end_1a6d57db0:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d593ab:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1a6d593ab:;
			++it;
			goto _iter_begin_1a6d593ab;
		}
		_iter_end_1a6d593ab:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5d190:;
		if (it != expr_end) {
			jule::Ptr<_1a82a555e_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1a6d5d190:;
			++it;
			goto _iter_begin_1a6d5d190;
		}
		_iter_end_1a6d5d190:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d5ba40:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6c69_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1a6d5ba40:;
			++it;
			goto _iter_begin_1a6d5ba40;
		}
		_iter_end_1a6d5ba40:;
	};
	return nullptr;;
}



inline jule::Bool _1a82a234c_isDuplicatedIdent(_1a829d997_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d63b02:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a6d63b02:;
			++it;
			goto _iter_begin_1a6d63b02;
		}
		_iter_end_1a6d63b02:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d66c26:;
		if (it != expr_end) {
			jule::Ptr<_1a8534a85_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a6d66c26:;
			++it;
			goto _iter_begin_1a6d66c26;
		}
		_iter_end_1a6d66c26:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d692cd:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a6d692cd:;
			++it;
			goto _iter_begin_1a6d692cd;
		}
		_iter_end_1a6d692cd:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6a0e2:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1a6d6a0e2:;
			++it;
			goto _iter_begin_1a6d6a0e2;
		}
		_iter_end_1a6d6a0e2:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6b225:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a6d6b225:;
			++it;
			goto _iter_begin_1a6d6b225;
		}
		_iter_end_1a6d6b225:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6c600:;
		if (it != expr_end) {
			jule::Ptr<_1a82a555e_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a6d6c600:;
			++it;
			goto _iter_begin_1a6d6c600;
		}
		_iter_end_1a6d6c600:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d6d9a8:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6c69_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1a6d6d9a8:;
			++it;
			goto _iter_begin_1a6d6d9a8;
		}
		_iter_end_1a6d6d9a8:;
	};
	return false;;
}







inline jule::Str _1a82a32a4_Str(_1a82a2da8_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a82a35e5_Equal(jule::Ptr<_1a82a2da8_Trait> _self_, jule::Ptr<_1a8535877_Type> _2518_other) {
	jule::Ptr<_1a82a2da8_Trait> _263_trt = _1a8539837_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a8297694_Fn> _1a82a3a8a_FindMethod(_1a82a2da8_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d71527:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1a6d71527:;
			++it;
			goto _iter_begin_1a6d71527;
		}
		_iter_end_1a6d71527:;
	};
	return _1a82a421c_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a8297694_Fn> _1a82a421c_findMethodInherit(_1a82a2da8_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d741b7:;
		if (it != expr_end) {
			jule::Ptr<_1a853d088_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1a6d741b7;
				};
				jule::Ptr<_1a82a2da8_Trait> _608_t = _1a8539837_Trait((*_5615_i.alloc)._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a8297694_Fn> _629_f2 = _1a82a3a8a_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1a6d741b7:;
			++it;
			goto _iter_begin_1a6d741b7;
		}
		_iter_end_1a6d741b7:;
	};
	return nullptr;;
}








inline jule::Bool _1a82a4a03_EnumItem_eq(_1a82a4a03_EnumItem *_self_, _1a82a4a03_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1a82a4dcc_AutoExpr(_1a82a4a03_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1a82a5916_Str(_1a82a555e_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a82a5c57_Equal(jule::Ptr<_1a82a555e_Enum> _self_, jule::Ptr<_1a8535877_Type> _3818_other) {
	jule::Ptr<_1a82a555e_Enum> _393_enm = _1a85387d1_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a82a4a03_EnumItem> _1a82a6186_FindItem(_1a82a555e_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d78001:;
		if (it != expr_end) {
			jule::Ptr<_1a82a4a03_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1a6d78001:;
			++it;
			goto _iter_begin_1a6d78001;
		}
		_iter_end_1a6d78001:;
	};
	return nullptr;;
}








inline jule::Bool _1a82a6692_TypeEnumItem_eq(_1a82a6692_TypeEnumItem *_self_, _1a82a6692_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1a82a70dd_Str(_1a82a6c69_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a82a742e_Equal(jule::Ptr<_1a82a6c69_TypeEnum> _self_, jule::Ptr<_1a8535877_Type> _8018_other) {
	jule::Ptr<_1a82a6c69_TypeEnum> _813_tenm = _1a8538a67_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a82a6692_TypeEnumItem> _1a82a785d_FindItem(_1a82a6c69_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d7a29a:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6692_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1a6d7a29a:;
			++it;
			goto _iter_begin_1a6d7a29a;
		}
		_iter_end_1a6d7a29a:;
	};
	return nullptr;;
}








inline jule::Bool _1a8327a76_comptimeRange_eq(_1a8327a76_comptimeRange *_self_, _1a8327a76_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a8327e72_Str(_1a8327a76_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a83282b3_Equal(jule::Ptr<_1a8327a76_comptimeRange> _self_, jule::Ptr<_1a8535877_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1a83285d2_comptimeStructField_eq(_1a83285d2_comptimeStructField *_self_, _1a83285d2_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a8328989_Str(_1a83285d2_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a8328cca_Equal(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a8535877_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a83292d6__Decl(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a850489b_eval>* _4127_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83296d2__Type(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Ptr<_1a850489b_eval>* _5327_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1a85028cc_Data> _1a8329a23_subIdent(jule::Ptr<_1a83285d2_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a6d87560:;
			{
				jule::Ptr<_1a829a752_FnIns> _648_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6d88808, jule::Ptr<__jule_anon_1a6d88808_ctx>::make(__jule_anon_1a6d88808_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6d88808_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6d875e8:;
			{
				jule::Ptr<_1a829a752_FnIns> _718_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6d8a7c7, jule::Ptr<__jule_anon_1a6d8a7c7_ctx>::make(__jule_anon_1a6d8a7c7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6d8a7c7_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1a6d87395:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6d874a5:;
	};
}







inline jule::Str _1a832a23d_Str(_1a8329d75_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a832a57e_Equal(jule::Ptr<_1a8329d75_comptimeStructFields> _self_, jule::Ptr<_1a8535877_Type> _9018_other) {
	return false;;
}



inline void _1a832aa13_ready(_1a8329d75_comptimeStructFields* _self_, jule::Ptr<_1a83cc1ad_Var>* _9426_keyA, jule::Ptr<_1a83cc1ad_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a83285d2_comptimeStructField>(_1a83285d2_comptimeStructField{._field_field=jule::Ptr<_1a81c18ba_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data6)})});
	};
}



inline void _1a832ad76_index(_1a8329d75_comptimeStructFields* _self_, jule::Ptr<_1a85028cc_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a83285d2_comptimeStructField>(_1a83285d2_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data6)});
}



inline void _1a832b294_step(_1a8329d75_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1a83cc1ad_Var>* _12633_keyA, jule::Ptr<_1a83cc1ad_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1a853a607_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1a832b52a_len(_1a8329d75_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a832b805_comptimeStatic_eq(_1a832b805_comptimeStatic *_self_, _1a832b805_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a832bbac_Str(_1a832b805_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a832beed_Equal(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a8535877_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a832c509__Decl(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a850489b_eval>* _15427_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a832c905__Type(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Ptr<_1a850489b_eval>* _16627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1a85028cc_Data> _1a832cc46_subIdent(jule::Ptr<_1a832b805_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a6d9d125:;
			{
				jule::Ptr<_1a829a752_FnIns> _1778_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6d9e39b, jule::Ptr<__jule_anon_1a6d9e39b_ctx>::make(__jule_anon_1a6d9e39b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6d9e39b_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6d9d1ad:;
			{
				jule::Ptr<_1a829a752_FnIns> _1848_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6da1326, jule::Ptr<__jule_anon_1a6da1326_ctx>::make(__jule_anon_1a6da1326_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6da1326_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1a6d9ce5a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6d9d06a:;
	};
}







inline jule::Str _1a832d461_Str(_1a832d0a9_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a832d7a2_Equal(jule::Ptr<_1a832d0a9_comptimeStatics> _self_, jule::Ptr<_1a8535877_Type> _20318_other) {
	return false;;
}



inline void _1a832dc36_ready(_1a832d0a9_comptimeStatics* _self_, jule::Ptr<_1a83cc1ad_Var>* _20726_keyA, jule::Ptr<_1a83cc1ad_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a832b805_comptimeStatic>(_1a832b805_comptimeStatic{._field_field=jule::Ptr<_1a83cc1ad_Var>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data8)})});
	};
}



inline void _1a832e099_index(_1a832d0a9_comptimeStatics* _self_, jule::Ptr<_1a85028cc_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a832b805_comptimeStatic>(_1a832b805_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data8)});
}



inline void _1a832e4b7_step(_1a832d0a9_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1a83cc1ad_Var>* _23933_keyA, jule::Ptr<_1a83cc1ad_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1a853be11_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1a832e74d_len(_1a832d0a9_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a832ea28_comptimeEnumField_eq(_1a832ea28_comptimeEnumField *_self_, _1a832ea28_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a832edd0_Str(_1a832ea28_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a8330221_Equal(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Ptr<_1a8535877_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a833071b__Decl(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Ptr<_1a850489b_eval>* _26727_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8330a5c_subIdent(jule::Ptr<_1a832ea28_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a6dad652:;
			{
				jule::Ptr<_1a829a752_FnIns> _2828_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6db27aa, jule::Ptr<__jule_anon_1a6db27aa_ctx>::make(__jule_anon_1a6db27aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6db27aa_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1a6dadc18:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6dacb7e:;
	};
}







inline jule::Str _1a83312ee_Str(_1a8330d37_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a8331640_Equal(jule::Ptr<_1a8330d37_comptimeEnumFields> _self_, jule::Ptr<_1a8535877_Type> _30118_other) {
	return false;;
}



inline void _1a8331a4c_ready(_1a8330d37_comptimeEnumFields* _self_, jule::Ptr<_1a83cc1ad_Var>* _30526_keyA, jule::Ptr<_1a83cc1ad_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a832ea28_comptimeEnumField>(_1a832ea28_comptimeEnumField{._field_field=jule::Ptr<_1a82a4a03_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data10)})});
	};
}



inline void _1a8331db0_index(_1a8330d37_comptimeEnumFields* _self_, jule::Ptr<_1a85028cc_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a832ea28_comptimeEnumField>(_1a832ea28_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data10)});
}



inline void _1a83322cd_step(_1a8330d37_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1a83cc1ad_Var>* _33733_keyA, jule::Ptr<_1a83cc1ad_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1a853ab24_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1a8332564_len(_1a8330d37_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1a833283e_comptimeParam_eq(_1a833283e_comptimeParam *_self_, _1a833283e_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1a8332be6_Str(_1a833283e_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a8333037_Equal(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a8535877_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8333554__Decl(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _36527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8333950__Type(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _37727_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1a85028cc_Data> _1a8333d4b__Recv(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Ptr<_1a850489b_eval>* _38527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _3907_constant = static__1a827e5e3_NewBool(_1a829631e_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833418c_subIdent(jule::Ptr<_1a833283e_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a6dc8271:;
			{
				jule::Ptr<_1a829a752_FnIns> _4018_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6dc9591, jule::Ptr<__jule_anon_1a6dc9591_ctx>::make(__jule_anon_1a6dc9591_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6dc9591_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1a6dc831a:;
			{
				jule::Ptr<_1a829a752_FnIns> _4088_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6dcb51b, jule::Ptr<__jule_anon_1a6dcb51b_ctx>::make(__jule_anon_1a6dcb51b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6dcb51b_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a6dc8392:;
			{
				jule::Ptr<_1a829a752_FnIns> _4158_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a6dcd496, jule::Ptr<__jule_anon_1a6dcd496_ctx>::make(__jule_anon_1a6dcd496_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a6dcd496_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1a6dc7e63:;
			{
				return nullptr;;
			}
		}
		_match_end_1a6dc8183:;
	};
}







inline jule::Str _1a8334940_Str(_1a8334698_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a8334c81_Equal(jule::Ptr<_1a8334698_comptimeParams> _self_, jule::Ptr<_1a8535877_Type> _43418_other) {
	return false;;
}



inline void _1a8335215_ready(_1a8334698_comptimeParams* _self_, jule::Ptr<_1a83cc1ad_Var>* _43826_keyA, jule::Ptr<_1a83cc1ad_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a833283e_comptimeParam>(_1a833283e_comptimeParam{._field_param=jule::Ptr<_1a82995ec_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data12)})});
	};
}



inline void _1a8335578_index(_1a8334698_comptimeParams* _self_, jule::Ptr<_1a85028cc_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a833283e_comptimeParam>(_1a833283e_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data12)});
}



inline void _1a8335996_step(_1a8334698_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1a83cc1ad_Var>* _47033_keyA, jule::Ptr<_1a83cc1ad_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1a853b141_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1a8335c2c_len(_1a8334698_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1a83363ae_Str(_1a8336007_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a8336700_Equal(jule::Ptr<_1a8336007_comptimeTypeInfos> _self_, jule::Ptr<_1a8535877_Type> _49418_other) {
	return false;;
}



inline void _1a8336b84_ready(_1a8336007_comptimeTypeInfos* _self_, jule::Ptr<_1a83cc1ad_Var>* _49826_keyA, jule::Ptr<_1a83cc1ad_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8337976_comptimeTypeInfo>(_1a8337976_comptimeTypeInfo{._field_base=jule::Ptr<_1a8535877_Type>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15)})});
	};
}



inline void _1a8336ee7_index(_1a8336007_comptimeTypeInfos* _self_, jule::Ptr<_1a85028cc_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15)});
}



inline void _1a8337415_step(_1a8336007_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1a83cc1ad_Var>* _52833_keyA, jule::Ptr<_1a83cc1ad_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15);
	};
}



inline jule::I64 _1a833769b_len(_1a8336007_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1a8337976_comptimeTypeInfo_eq(_1a8337976_comptimeTypeInfo *_self_, _1a8337976_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1a8337d2d_Str(_1a8337976_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a8535c73_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a833816e_Equal(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a8535877_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a83387ac__Decl(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _55627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1a85395a1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6de54be:;
			{
				_5617_decl=jule::Any((*(_1a85395a1_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1a8539837_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6de5535:;
			{
				_5617_decl=jule::Any(_1a8539837_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1a85387d1_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6de4006:;
			{
				_5617_decl=jule::Any(_1a85387d1_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1a8538a67_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6de406c:;
			{
				_5617_decl=jule::Any(_1a8538a67_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1a853931a_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a6de40d3:;
			{
				jule::Ptr<_1a829a752_FnIns> _5728_f = _1a853931a_Fn((*(_self_))._field_base);;
				{
					
					if (_1a829bc1a_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1a6dea68e:;
						{
							_1a8504d74_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1a829bea1_IsAnon(_5728_f.ptr())) {
						_case_begin_1a6dea738:;
						{
							_1a8504d74_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1a6dea606:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1a6de3e90:;
			{
				_1a8504d74_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a6de3d6e:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8338ba8__Str(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _59322_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _5987_constant = static__1a827e8ac_NewStr(_1a8535c73_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83390a4__Kind(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _60627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82a555e_Enum> _6117_enm = _1a838cdd8_FindEnum(_1a834b869_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a82a4a03_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1a8536c41_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1a555954c:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a85395a1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a555945e:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a8539837_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a555920b:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a853854a_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559272:;
			{
				if (_1a8546800_IsUnsafe(_1a853854a_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a85382b4_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a55592d8:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a85387d1_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a555934e:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a8538a67_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559cab:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1a8539abd_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559d22:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a8539084_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559d88:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a8538ced_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559dee:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a853931a_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559e76:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a8539d54_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a5559eed:;
			{
				_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a853802d_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a555a075:;
			{
				jule::Ptr<_1a853d990_Prim> _6434_prim = _1a853802d_Prim((*(_self_))._field_base);;
				{
					
					if (_1a85421e1_IsAny(_6434_prim.ptr())) {
						_case_begin_1a5566b0e:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a8541bc4_IsBool(_6434_prim.ptr())) {
						_case_begin_1a5566a21:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a8541e5a_IsStr(_6434_prim.ptr())) {
						_case_begin_1a5566801:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a8540e04_IsF32(_6434_prim.ptr())) {
						_case_begin_1a5566867:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a854118a_IsF64(_6434_prim.ptr())) {
						_case_begin_1a55668cd:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a853e881_IsI8(_6434_prim.ptr())) {
						_case_begin_1a5566944:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a853eb17_IsI16(_6434_prim.ptr())) {
						_case_begin_1a556736d:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a853ed9d_IsI32(_6434_prim.ptr())) {
						_case_begin_1a55673e5:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a8540134_IsI64(_6434_prim.ptr())) {
						_case_begin_1a556746c:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a85403ba_IsU8(_6434_prim.ptr())) {
						_case_begin_1a55674e4:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a8540651_IsU16(_6434_prim.ptr())) {
						_case_begin_1a556756b:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a85408d7_IsU32(_6434_prim.ptr())) {
						_case_begin_1a55675e3:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a8540b6d_IsU64(_6434_prim.ptr())) {
						_case_begin_1a556766a:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a8541421_IsInt(_6434_prim.ptr())) {
						_case_begin_1a55676e2:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a85416a7_IsUint(_6434_prim.ptr())) {
						_case_begin_1a5567769:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a854193d_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1a55677e1:;
						{
							_61211_item=_1a82a6186_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a5566658:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a8535c73_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1a55665d1:;
				};
			}
		}
		else {
			_case_begin_1a5559096:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1a8535c73_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1a5558edb:;
	};
	return _1a8531cb3_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1a8507daa_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1a85028cc_Data> _1a83394a0__Bits(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _68627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a853d990_Prim> _6913_prim = _1a853802d_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1a8504d74_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1a831ceab_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1a8504d74_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _7017_constant = static__1a827e0a4_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833989b__Elem(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _71027_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8545c83_Ptr> _7157_ptr = _1a853854a_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1a8546800_IsUnsafe(_7157_ptr)) {
			_1a8504d74_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a85424bb_Sptr> _7237_sptr = _1a85382b4_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a8542e8e_Slc> _7277_slice = _1a8539084_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a85452b0_Arr> _7317_array = _1a8538ced_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a82a555e_Enum> _7357_enm = _1a85387d1_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1a8504d74_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8339c97__Size(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _74327_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a85452b0_Arr> _7487_arr = _1a8538ced_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1a8504d74_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _7537_constant = static__1a827e0a4_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833a193__Key(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _76226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8544633_Map> _7677_m = _1a8539abd_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1a8504d74_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1a85028cc_Data> _1a833a58e__Value(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _77528_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8544633_Map> _7807_m = _1a8539abd_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1a8504d74_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1a85028cc_Data> _1a833a98a__Fields(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _78829_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81c246a_StructIns> _7937_s = _1a85395a1_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8329d75_comptimeStructFields>(_1a8329d75_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	};
	jule::Ptr<_1a82a555e_Enum> _8037_enm = _1a85387d1_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8330d37_comptimeEnumFields>(_1a8330d37_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	};
	_1a8504d74_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a85028cc_Data> _1a833ad86__Statics(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _81730_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81c246a_StructIns> _8227_s = _1a85395a1_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1a8504d74_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a832d0a9_comptimeStatics>(_1a832d0a9_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833b282__Binded(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _83629_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _8417_constant = static__1a827e5e3_NewBool(_1a8536724_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833b67d__Ordered(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _84926_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _8547_constant = static__1a827e5e3_NewBool(_1a85374e4_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833ba79__Comparable(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _86229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _8677_constant = static__1a827e5e3_NewBool(_1a8536ec7_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833be75__Mutable(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _87526_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _8807_constant = static__1a827e5e3_NewBool(_1a853725d_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833c371__Types(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _88828_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8543a83_Tuple> _8937_tup = _1a8539d54_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1a8504d74_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8336007_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1a8336007_comptimeTypeInfos>(_1a8336007_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8337976_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9676049:;
		if (it != expr_end) {
			jule::Ptr<_1a8535877_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a83a7d15_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1a9676049:;
			++it;
			goto _iter_begin_1a9676049;
		}
		_iter_end_1a9676049:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833c76c__CanNil(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _91129_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _9167_constant = static__1a827e5e3_NewBool(_1a853777a_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833cb68__GC(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _92425_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _9297_constant = static__1a827e5e3_NewBool(_1a8537a11_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833d064__Result(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _93729_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a829a752_FnIns> _9427_f = _1a853931a_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1a8504d74_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1a85a8c19_primVoid));;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1a85028cc_Data> _1a833d460__Params(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Ptr<_1a850489b_eval>* _95329_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a829a752_FnIns> _9587_f = _1a853931a_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1a8504d74_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8334698_comptimeParams>(_1a8334698_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a833d7a1_subIdent(jule::Ptr<_1a8337976_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1a9687489:;
			{
				jule::Ptr<_1a829a752_FnIns> _9738_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a968906d, jule::Ptr<__jule_anon_1a968906d_ctx>::make(__jule_anon_1a968906d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a968906d_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1a9687500:;
			{
				jule::Ptr<_1a829a752_FnIns> _9808_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a968b03c, jule::Ptr<__jule_anon_1a968b03c_ctx>::make(__jule_anon_1a968b03c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a968b03c_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1a9687566:;
			{
				jule::Ptr<_1a829a752_FnIns> _9878_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a968ceb7, jule::Ptr<__jule_anon_1a968ceb7_ctx>::make(__jule_anon_1a968ceb7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a968ceb7_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1a96876ed:;
			{
				jule::Ptr<_1a829a752_FnIns> _9948_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a968ee42, jule::Ptr<__jule_anon_1a968ee42_ctx>::make(__jule_anon_1a968ee42_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a968ee42_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1a9687775:;
			{
				jule::Ptr<_1a829a752_FnIns> _10018_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9691dbc, jule::Ptr<__jule_anon_1a9691dbc_ctx>::make(__jule_anon_1a9691dbc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9691dbc_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1a96877ec:;
			{
				jule::Ptr<_1a829a752_FnIns> _10088_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9693d47, jule::Ptr<__jule_anon_1a9693d47_ctx>::make(__jule_anon_1a9693d47_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9693d47_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1a9687874:;
			{
				jule::Ptr<_1a829a752_FnIns> _10158_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9695cc2, jule::Ptr<__jule_anon_1a9695cc2_ctx>::make(__jule_anon_1a9695cc2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9695cc2_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a9687984:;
			{
				jule::Ptr<_1a829a752_FnIns> _10228_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9697c4c, jule::Ptr<__jule_anon_1a9697c4c_ctx>::make(__jule_anon_1a9697c4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9697c4c_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a96879ea:;
			{
				jule::Ptr<_1a829a752_FnIns> _10298_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9699e4c, jule::Ptr<__jule_anon_1a9699e4c_ctx>::make(__jule_anon_1a9699e4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9699e4c_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a9687a61:;
			{
				jule::Ptr<_1a829a752_FnIns> _10368_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a969bdc7, jule::Ptr<__jule_anon_1a969bdc7_ctx>::make(__jule_anon_1a969bdc7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a969bdc7_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1a9687ac7:;
			{
				jule::Ptr<_1a829a752_FnIns> _10438_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a969dd52, jule::Ptr<__jule_anon_1a969dd52_ctx>::make(__jule_anon_1a969dd52_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a969dd52_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a9687b4e:;
			{
				jule::Ptr<_1a829a752_FnIns> _10508_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96a0ccc, jule::Ptr<__jule_anon_1a96a0ccc_ctx>::make(__jule_anon_1a96a0ccc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96a0ccc_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1a9687bc6:;
			{
				jule::Ptr<_1a829a752_FnIns> _10578_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96a2c57, jule::Ptr<__jule_anon_1a96a2c57_ctx>::make(__jule_anon_1a96a2c57_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96a2c57_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1a9687c4d:;
			{
				jule::Ptr<_1a829a752_FnIns> _10648_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96a4bd2, jule::Ptr<__jule_anon_1a96a4bd2_ctx>::make(__jule_anon_1a96a4bd2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96a4bd2_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a9687cc5:;
			{
				jule::Ptr<_1a829a752_FnIns> _10718_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96a6b5c, jule::Ptr<__jule_anon_1a96a6b5c_ctx>::make(__jule_anon_1a96a6b5c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96a6b5c_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1a9687d4c:;
			{
				jule::Ptr<_1a829a752_FnIns> _10788_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96a8ad7, jule::Ptr<__jule_anon_1a96a8ad7_ctx>::make(__jule_anon_1a96a8ad7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96a8ad7_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1a9687dc4:;
			{
				jule::Ptr<_1a829a752_FnIns> _10858_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96aaa62, jule::Ptr<__jule_anon_1a96aaa62_ctx>::make(__jule_anon_1a96aaa62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96aaa62_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1a9687e4b:;
			{
				jule::Ptr<_1a829a752_FnIns> _10928_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96ac9dc, jule::Ptr<__jule_anon_1a96ac9dc_ctx>::make(__jule_anon_1a96ac9dc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96ac9dc_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1a9687ec3:;
			{
				jule::Ptr<_1a829a752_FnIns> _10998_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96ae967, jule::Ptr<__jule_anon_1a96ae967_ctx>::make(__jule_anon_1a96ae967_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96ae967_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1a9684ce4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9687269:;
	};
}








inline jule::Bool _1a833da7b_comptimeValue_eq(_1a833da7b_comptimeValue *_self_, _1a833da7b_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1a833de33_Str(_1a833da7b_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a833e274_Equal(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a8535877_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a833e7d5__Unwrap(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _112229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a85028cc_Data> _1a833ebd1__Type(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _113027_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1a85028cc_Data> _1a83400cc__Lvalue(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _113829_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _11437_constant = static__1a827e5e3_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83404c8__Mutable(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _115130_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _11567_constant = static__1a827e5e3_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83408c4__Const(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _116428_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _11697_constant = static__1a827e5e3_NewBool(_1a8503317_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8340cc0__Field(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _117728_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81c246a_StructIns> _11827_s = _1a85395a1_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1a8504d74_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1a85028cc_Data> _11887_d = _1a8523689_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8503317_IsConst(_11887_d.ptr())))) {
		_1a8504d74_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a853d990_Prim> _11963_prim = _1a853802d_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1a8541e5a_IsStr(_11963_prim.ptr()))))) {
		_1a8504d74_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1a8280c98_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1a81c18ba_FieldIns> _12027_f = _1a81c3856_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1a8504d74_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1a851b374_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1a834c02e_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a83411bb__Method(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Ptr<_1a850489b_eval>* _121229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1a81c246a_StructIns> _12187_s = static_cast<jule::Ptr<_1a81c246a_StructIns>>(nullptr);;
	if ((_1a85382b4_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_1a85395a1_Struct((*(_1a85382b4_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1a85395a1_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1a8504d74_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a85028cc_Data> _12307_d = _1a8523689_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8503317_IsConst(_12307_d.ptr())))) {
		_1a8504d74_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a853d990_Prim> _12383_prim = _1a853802d_Prim((*(_12307_d))._field_Type);;
	if (((_12383_prim == nullptr) || (!(_1a8541e5a_IsStr(_12383_prim.ptr()))))) {
		_1a8504d74_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1a8280c98_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1a8297694_Fn> _12457_m = _1a81c3515_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1a8504d74_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1a8532368_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1a851b990_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1a834c02e_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a834150c_subIdent(jule::Ptr<_1a833da7b_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1a96d9a19:;
			{
				jule::Ptr<_1a829a752_FnIns> _12618_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96daed2, jule::Ptr<__jule_anon_1a96daed2_ctx>::make(__jule_anon_1a96daed2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96daed2_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a96d9a80:;
			{
				jule::Ptr<_1a829a752_FnIns> _12688_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96dce5c, jule::Ptr<__jule_anon_1a96dce5c_ctx>::make(__jule_anon_1a96dce5c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96dce5c_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1a96d9ae6:;
			{
				jule::Ptr<_1a829a752_FnIns> _12758_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96dedd7, jule::Ptr<__jule_anon_1a96dedd7_ctx>::make(__jule_anon_1a96dedd7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96dedd7_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a96d9b6d:;
			{
				jule::Ptr<_1a829a752_FnIns> _12828_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96e1d62, jule::Ptr<__jule_anon_1a96e1d62_ctx>::make(__jule_anon_1a96e1d62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96e1d62_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1a96d9d5a:;
			{
				jule::Ptr<_1a829a752_FnIns> _12898_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96e3cdc, jule::Ptr<__jule_anon_1a96e3cdc_ctx>::make(__jule_anon_1a96e3cdc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96e3cdc_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1a96d9dc1:;
			{
				jule::Ptr<_1a829a752_FnIns> _12968_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96e5c67, jule::Ptr<__jule_anon_1a96e5c67_ctx>::make(__jule_anon_1a96e5c67_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96e5c67_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1a96d9e37:;
			{
				jule::Ptr<_1a829a752_FnIns> _13038_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a96e7be2, jule::Ptr<__jule_anon_1a96e7be2_ctx>::make(__jule_anon_1a96e7be2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a96e7be2_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1a96d94db:;
			{
				return nullptr;;
			}
		}
		_match_end_1a96d98c6:;
	};
}







inline jule::Str _1a8341b8e_Str(_1a83417d7_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a8341ed0_Equal(jule::Ptr<_1a83417d7_comptimeFiles> _self_, jule::Ptr<_1a8535877_Type> _132218_other) {
	return false;;
}



inline void _1a8342464_ready(_1a83417d7_comptimeFiles* _self_, jule::Ptr<_1a83cc1ad_Var>* _132626_keyA, jule::Ptr<_1a83cc1ad_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8343256_comptimeFile>(_1a8343256_comptimeFile{._field_file=jule::Ptr<_1a829d997_SymTab>(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18)})});
	};
}



inline void _1a83427c7_index(_1a83417d7_comptimeFiles* _self_, jule::Ptr<_1a85028cc_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8343256_comptimeFile>(_1a8343256_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18)});
}



inline void _1a8342be5_step(_1a83417d7_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1a83cc1ad_Var>* _135833_keyA, jule::Ptr<_1a83cc1ad_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a8343256_comptimeFile>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1a8342e7b_len(_1a83417d7_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1a8343256_comptimeFile_eq(_1a8343256_comptimeFile *_self_, _1a8343256_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1a834360d_Str(_1a8343256_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a834394e_Equal(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a8535877_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8343e6b__Path(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _138627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _13917_constant = static__1a827e8ac_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8344367__Name(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _139927_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _14047_constant = static__1a827e8ac_NewStr(_1a818eb96_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8344763__Dir(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Ptr<_1a850489b_eval>* _141226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a82273d2_Const> _14177_constant = static__1a827e8ac_NewStr(_1a818e910_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8344aa4_subIdent(jule::Ptr<_1a8343256_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1a970b651:;
			{
				jule::Ptr<_1a829a752_FnIns> _14288_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a970c971, jule::Ptr<__jule_anon_1a970c971_ctx>::make(__jule_anon_1a970c971_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a970c971_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a970b6ea:;
			{
				jule::Ptr<_1a829a752_FnIns> _14358_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a970e8eb, jule::Ptr<__jule_anon_1a970e8eb_ctx>::make(__jule_anon_1a970e8eb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a970e8eb_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1a970b772:;
			{
				jule::Ptr<_1a829a752_FnIns> _14428_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9711876, jule::Ptr<__jule_anon_1a9711876_ctx>::make(__jule_anon_1a9711876_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9711876_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1a970b343:;
			{
				return nullptr;;
			}
		}
		_match_end_1a970b563:;
	};
}







inline jule::Str _1a8345467_Str(_1a8344d7e_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1a83457a8_Equal(jule::Ptr<_1a8344d7e_comptimeDecls> _self_, jule::Ptr<_1a8535877_Type> _146118_other) {
	return false;;
}



inline void _1a8345b2c_ready(_1a8344d7e_comptimeDecls* _self_, jule::Ptr<_1a83cc1ad_Var>* _146526_keyA, jule::Ptr<_1a83cc1ad_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)})});
	};
}



inline void _1a8345e90_index(_1a8344d7e_comptimeDecls* _self_, jule::Ptr<_1a85028cc_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)});
}



inline void _1a83463ad_step(_1a8344d7e_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1a83cc1ad_Var>* _149533_keyA, jule::Ptr<_1a83cc1ad_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1a834716c_comptimeDecl>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1a8346644_len(_1a8344d7e_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1a834716c_comptimeDecl_eq(_1a834716c_comptimeDecl *_self_, _1a834716c_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1a8347524_Str(_1a834716c_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1a8347865_Equal(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a8535877_Type> _153418_other) {
	return false;;
}



inline jule::Str _1a8347cb6_declAsStr(_1a834716c_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a971b96e:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a971b41e:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a971b82b:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a971b8a3:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a971bb28:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a971bba0:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a971be25:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a971be8b:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a971c002:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a971c068:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1a971b7b5:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1a971b551:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a83481b2__Name(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _156527_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a97218ca:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9721c82:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8297694_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a9721ce8:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a555e_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a9721d70:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a6c69_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a9721de7:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a2da8_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a9721e6e:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81bb6d9_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9722326:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8534a85_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a972238c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a9722403:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a4a03_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a9722469:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8295bc0_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1a9721c1b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1a9721ba5:;
	};
	jule::Ptr<_1a82273d2_Const> _15957_constant = static__1a827e8ac_NewStr(_15707_name);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83485ad__Public(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _160329_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a972ade0:;
			{
				_1a8504d74_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a972b286:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a972b2ec:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8297694_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a972b363:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a555e_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a972b3da:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a6c69_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a972b462:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a82a2da8_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a972b4d9:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81bb6d9_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a972b83b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8534a85_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a972b8b3:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1a972b220:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1a972b1a9:;
	};
	jule::Ptr<_1a82273d2_Const> _16337_constant = static__1a827e5e3_NewBool(_16087_public);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83489a9__Binded(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _164129_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a97359ee:;
			{
				_1a8504d74_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a97356d0:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9735746:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8297694_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a97357ac:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8534a85_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9735823:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1a9735669:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1a9735603:;
	};
	jule::Ptr<_1a82273d2_Const> _16677_constant = static__1a827e5e3_NewBool(_16467_binded);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8348da5__Exceptional(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _167534_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a973b0ed:;
			{
				goto _match_end_1a973c484;
			}
		}
		else {
			_case_begin_1a973c4ea:;
			{
				_1a8504d74_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1a973c484:;
	};
	jule::Ptr<_1a8297694_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1a8297694_Fn>(&__jule_any_type10);;
	jule::Ptr<_1a82273d2_Const> _16887_constant = static__1a827e5e3_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a83492a1__Mutable(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _169630_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1a9742621:;
			{
				_1a8504d74_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a9742302:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8295bc0_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a9742368:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a81bb6d9_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a97423ce:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1a974228b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1a9742225:;
	};
	jule::Ptr<_1a82273d2_Const> _17217_constant = static__1a827e5e3_NewBool(_17017_mutable);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a834969c__Variadic(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _172931_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1a9749095:;
			{
				_1a8504d74_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a9748c76:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8295bc0_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1a9748c10:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1a9748b99:;
	};
	jule::Ptr<_1a82273d2_Const> _17527_constant = static__1a827e5e3_NewBool(_17347_variadic);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8349a98__Reference(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _176032_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1a974e92a:;
			{
				_1a8504d74_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a974e60b:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a974e672:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a8295bc0_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1a974e595:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1a974e52e:;
	};
	jule::Ptr<_1a82273d2_Const> _17847_constant = static__1a827e5e3_NewBool(_17657_ref);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8349e94__Params(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _179229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1a9753e3a:;
			{
				_1a8504d74_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9755733:;
			{
				jule::Ptr<_1a8297694_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1a8297694_Fn>();;
				jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9758da7:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1a8295bc0_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1a9758da7:;
						++it;
						_18129_i++;
						goto _iter_begin_1a9758da7;
					}
					_iter_end_1a9758da7:;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8344d7e_comptimeDecls>(_1a8344d7e_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1a9755337:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1a97552c1:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a834a390__Fields(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _182729_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1a975c8d3:;
			{
				_1a8504d74_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a975c5b4:;
			{
				jule::Ptr<_1a82a555e_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1a82a555e_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9760c27:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1a82a4a03_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1a9760c27:;
						++it;
						_18479_i++;
						goto _iter_begin_1a9760c27;
					}
					_iter_end_1a9760c27:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a975c62a:;
			{
				jule::Ptr<_1a81be610_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9762b3b:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1a81bb6d9_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1a9762b3b:;
						++it;
						_18539_i++;
						goto _iter_begin_1a9762b3b;
					}
					_iter_end_1a9762b3b:;
				};
			}
		}
		else {
			_case_begin_1a975c54d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1a975c4d7:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8344d7e_comptimeDecls>(_1a8344d7e_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a834a78b__Statics(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _186830_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1a97666ab:;
			{
				_1a8504d74_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a976638c:;
			{
				jule::Ptr<_1a81be610_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9769add:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1a83cc1ad_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1a9769add:;
						++it;
						_18899_i++;
						goto _iter_begin_1a9769add;
					}
					_iter_end_1a9769add:;
				};
			}
		}
		else {
			_case_begin_1a9766326:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1a97662b0:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8344d7e_comptimeDecls>(_1a8344d7e_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a834ab87__Methods(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Ptr<_1a850489b_eval>* _190430_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1a976d65d:;
			{
				_1a8504d74_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8347cb6_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a976d33e:;
			{
				jule::Ptr<_1a82a2da8_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1a82a2da8_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a97719a2:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1a8297694_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1a97719a2:;
						++it;
						_19249_i++;
						goto _iter_begin_1a97719a2;
					}
					_iter_end_1a97719a2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a976d3a5:;
			{
				jule::Ptr<_1a81be610_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1a81be610_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a834716c_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a834716c_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a97738b6:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1a8297694_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1a834716c_comptimeDecl>(_1a834716c_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1a97738b6:;
						++it;
						_19309_i++;
						goto _iter_begin_1a97738b6;
					}
					_iter_end_1a97738b6:;
				};
			}
		}
		else {
			_case_begin_1a976d2c8:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1a976d262:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8344d7e_comptimeDecls>(_1a8344d7e_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a834aec8_subIdent(jule::Ptr<_1a834716c_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a977516a:;
			{
				jule::Ptr<_1a829a752_FnIns> _19488_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9776853, jule::Ptr<__jule_anon_1a9776853_ctx>::make(__jule_anon_1a9776853_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9776853_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a97751d1:;
			{
				jule::Ptr<_1a829a752_FnIns> _19558_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a97787cd, jule::Ptr<__jule_anon_1a97787cd_ctx>::make(__jule_anon_1a97787cd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a97787cd_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a9775258:;
			{
				jule::Ptr<_1a829a752_FnIns> _19628_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a977a758, jule::Ptr<__jule_anon_1a977a758_ctx>::make(__jule_anon_1a977a758_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a977a758_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1a97752d0:;
			{
				jule::Ptr<_1a829a752_FnIns> _19698_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a977c6d3, jule::Ptr<__jule_anon_1a977c6d3_ctx>::make(__jule_anon_1a977c6d3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a977c6d3_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a9775489:;
			{
				jule::Ptr<_1a829a752_FnIns> _19768_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a977e65d, jule::Ptr<__jule_anon_1a977e65d_ctx>::make(__jule_anon_1a977e65d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a977e65d_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1a9775500:;
			{
				jule::Ptr<_1a829a752_FnIns> _19838_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a97815d8, jule::Ptr<__jule_anon_1a97815d8_ctx>::make(__jule_anon_1a97815d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a97815d8_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1a9775577:;
			{
				jule::Ptr<_1a829a752_FnIns> _19908_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9783563, jule::Ptr<__jule_anon_1a9783563_ctx>::make(__jule_anon_1a9783563_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9783563_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a97755ee:;
			{
				jule::Ptr<_1a829a752_FnIns> _19978_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a97854dd, jule::Ptr<__jule_anon_1a97854dd_ctx>::make(__jule_anon_1a97854dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a97854dd_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a9775720:;
			{
				jule::Ptr<_1a829a752_FnIns> _20048_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a97876dd, jule::Ptr<__jule_anon_1a97876dd_ctx>::make(__jule_anon_1a97876dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a97876dd_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a9775786:;
			{
				jule::Ptr<_1a829a752_FnIns> _20118_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a9789668, jule::Ptr<__jule_anon_1a9789668_ctx>::make(__jule_anon_1a9789668_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9789668_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1a97757ec:;
			{
				jule::Ptr<_1a829a752_FnIns> _20188_method = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>((void*)__jule_anon_1a978b5e3, jule::Ptr<__jule_anon_1a978b5e3_ctx>::make(__jule_anon_1a978b5e3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a978b5e3_ctx_handler), ._field_reloaded=false});;
				return _1a834b65a_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1a9770929:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9774ec2:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*> _1a834de87_readyFn(jule::Ptr<_1a834da58_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*>((void*)__jule_anon_1a97978b8, jule::Ptr<__jule_anon_1a97978b8_ctx>::make(__jule_anon_1a97978b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a97978b8_ctx_handler);;
}



inline jule::Bool _1a834e21d_readyFi(jule::Ptr<_1a834da58_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a83b6b15_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a834de87_readyFn(_self_)));;
}



inline jule::Bool _1a834e4a4_readySi(jule::Ptr<_1a834da58_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a834de87_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a834e73a_ready(jule::Ptr<_1a834da58_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a834e21d_readyFi(_self_);;
	};
	return _1a834e4a4_readySi(_self_);;
}



inline jule::Bool _1a834e9c1_check(jule::Ptr<_1a834da58_constraintChecker> _self_) {
	if ((!(_1a834e73a_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a97a8511:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97a89b7:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1a8533e91_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1a97a89b7;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a97a9c60:;
					if (it != expr_end) {
						jule::Ptr<_1a8535877_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1a853d990_Prim> _1259_prim = _1a853802d_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a853e5ea_IsConstraint(_1259_prim))) {
								if (_1a835021e_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Type))) {
									goto _iter_next_1a97a89b7;
								};
								goto _iter_next_1a97a9c60;
							};
							if (_1a85360b4_Equal(_12416_c2, (*_12015_g.alloc)._field_Type)) {
								goto _iter_next_1a97a89b7;
							};
						}
						_iter_next_1a97a9c60:;
						++it;
						goto _iter_begin_1a97a9c60;
					}
					_iter_end_1a97a9c60:;
				};
				_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a834ed56_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1a97a89b7:;
			++it;
			_1208_i++;
			goto _iter_begin_1a97a89b7;
		}
		_iter_end_1a97a89b7:;
	};
	return true;;
}







inline jule::Bool _1a8351253_IsTraitImpl(_1a8350d57_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a83514d9_IsStructImpl(_1a8350d57_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1a8355884_If_eq(_1a8355884_If *_self_, _1a8355884_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1a8355b81_Else_eq(_1a8355b81_Else *_self_, _1a8355b81_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1a835639b_InfIter_eq(_1a835639b_InfIter *_self_, _1a835639b_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1a8356852_WhileIter_eq(_1a8356852_WhileIter *_self_, _1a8356852_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1a8356be8_IsWhileNext(_1a8356852_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1a835729d_RangeIter_eq(_1a835729d_RangeIter *_self_, _1a835729d_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1a8357633_ContSt_eq(_1a8357633_ContSt *_self_, _1a8357633_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1a8357a0c_BreakSt_eq(_1a8357a0c_BreakSt *_self_, _1a8357a0c_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1a8357eb3_Label_eq(_1a8357eb3_Label *_self_, _1a8357eb3_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a8358623_GotoSt_eq(_1a8358623_GotoSt *_self_, _1a8358623_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1a83589ec_Postfix_eq(_1a83589ec_Postfix *_self_, _1a83589ec_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1a8358ea3_Assign_eq(_1a8358ea3_Assign *_self_, _1a8358ea3_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1a835adb7_FallSt_eq(_1a835adb7_FallSt *_self_, _1a835adb7_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1a835b25d_RetSt_eq(_1a835b25d_RetSt *_self_, _1a835b25d_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1a835b714_scopeLabel_eq(_1a835b714_scopeLabel *_self_, _1a835b714_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1a835badd_result_eq(_1a835badd_result *_self_, _1a835badd_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1a835cacd_scopeChecker_eq(_1a835cacd_scopeChecker *_self_, _1a835cacd_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1a838b14a_ImportInfo> _1a835d0a6_SelectPackage(_1a835cacd_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _35429_selector) {
	return _1a83a8970_SelectPackage((*(_self_))._field_s.ptr(), _35429_selector);;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a835d4a2_FindVar(_1a835cacd_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded) {
	if ((!(_36535_binded))) {
		jule::Ptr<_1a83cc1ad_Var> _3678_v = _1a8361818_findVar(_self_, _36523_ident);;
		if ((_3678_v != nullptr)) {
			return _3678_v;;
		};
	};
	return _1a83a8d6b_FindVar((*(_self_))._field_s.ptr(), _36523_ident, _36535_binded);;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a835d89d_FindTypeAlias(_1a835cacd_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded) {
	;
	jule::Ptr<_1a8534a85_TypeAlias> _3857_ta = _1a82a199a_findTypeAlias((*(_self_))._field_table.ptr(), &(_38229_ident), _38241_binded, true);;
	if ((_3857_ta != nullptr)) {
		return _3857_ta;;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _3907_parent = (*(_self_))._field_parent;;
	while ((_3907_parent != nullptr)) {
		{
			_3857_ta=_1a82a199a_findTypeAlias((*(_3907_parent))._field_table, &(_38229_ident), _38241_binded, true);
			if ((_3857_ta != nullptr)) {
				return _3857_ta;;
			};
			_3907_parent=(*_3907_parent.alloc)._field_parent;
		}
	_iter_next_1a6e0702a:;
	}
	_iter_end_1a6e0702a:;;
	return _1a83a9267_FindTypeAlias((*(_self_))._field_s.ptr(), _38229_ident, _38241_binded);;
}



inline jule::Ptr<_1a81be610_Struct> _1a835dc99_FindStruct(_1a835cacd_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded) {
	return _1a83a9663_FindStruct((*(_self_))._field_s.ptr(), _40726_ident, _40738_binded);;
}



inline jule::Ptr<_1a8297694_Fn> _1a835e195_FindFn(_1a835cacd_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded) {
	return _1a83a9a5e_FindFn((*(_self_))._field_s.ptr(), _41622_ident, _41634_binded);;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a835e4d6_FindTrait(_1a835cacd_scopeChecker* _self_, jule::Str _42525_ident) {
	return _1a83a9da0_FindTrait((*(_self_))._field_s.ptr(), _42525_ident);;
}



inline jule::Ptr<_1a82a555e_Enum> _1a835e827_FindEnum(_1a835cacd_scopeChecker* _self_, jule::Str _43424_ident) {
	return _1a83aa1e1_FindEnum((*(_self_))._field_s.ptr(), _43424_ident);;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a835eb68_FindTypeEnum(_1a835cacd_scopeChecker* _self_, jule::Str _44328_ident) {
	return _1a83aa532_FindTypeEnum((*(_self_))._field_s.ptr(), _44328_ident);;
}



inline jule::Bool _1a835eeba_isUnsafe(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	jule::Ptr<_1a835cacd_scopeChecker> _4517_scope = _self_;;
	_julec_label_1a6e0c2e9:;
	if ((*((*(_4517_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4517_scope.alloc)._field_parent != nullptr)) {
		_4517_scope=(*_4517_scope.alloc)._field_parent;
		goto _julec_label_1a6e0c2e9;
	};
	return false;;
}



inline jule::Bool _1a8360251_isRoot(_1a835cacd_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a836044e_stop(_1a835cacd_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a83606d5_stopped(_1a835cacd_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a836096b_isDeferred(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	jule::Ptr<_1a835cacd_scopeChecker> _4847_scope = _self_;;
	_julec_label_1a6e0edbd:;
	if ((*((*(_4847_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4847_scope.alloc)._field_parent != nullptr)) {
		_4847_scope=(*_4847_scope.alloc)._field_parent;
		goto _julec_label_1a6e0edbd;
	};
	return false;;
}



inline void _1a8360c24_pushCaptured(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a83cc1ad_Var>* _50534_v) {
	jule::Ptr<_1a835cacd_scopeChecker> _5067_sc = _self_;;
	for (;;) {
		{
			if (((*(_5067_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5067_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e124ec:;
					if (it != expr_end) {
						jule::Ptr<_1a83cc1ad_Var> _50912_cv = *it;
						{
							if ((_50912_cv == (*(_50534_v)))) {
								goto _julec_label_1a6e13443;
							};
						}
						_iter_next_1a6e124ec:;
						++it;
						goto _iter_begin_1a6e124ec;
					}
					_iter_end_1a6e124ec:;
				};
				(*(*(_5067_sc))._field_captured.alloc)=jule::append((*(*(_5067_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_50534_v)); __jule_collection; }));
				_julec_label_1a6e13443:;
			};
			if (((*_5067_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1a6e11793;
			};
			_5067_sc=(*_5067_sc.alloc)._field_parent;
			if ((!(_1a8532e29_isVarCaptured(_5067_sc, _5067_sc, (*(_50534_v)))))) {
				goto _iter_end_1a6e11793;
			};
		}
	_iter_next_1a6e11793:;
	}
	_iter_end_1a6e11793:;;
}



inline jule::Ptr<_1a835cacd_scopeChecker> _1a8360eaa_getRoot(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	jule::Ptr<_1a835cacd_scopeChecker> _5307_root = _self_;;
	while ((((*(_5307_root))._field_parent != nullptr) && ((*_5307_root.alloc)._field_owner == nullptr))) {
		{
			_5307_root=(*_5307_root.alloc)._field_parent;
		}
	_iter_next_1a6e14521:;
	}
	_iter_end_1a6e14521:;;
	return _5307_root;;
}



inline jule::Ptr<_1a835cacd_scopeChecker> _1a8361241_getHardRoot(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	jule::Ptr<_1a835cacd_scopeChecker> _5407_root = _self_;;
	while (((*(_5407_root))._field_parent != nullptr)) {
		{
			_5407_root=(*_5407_root.alloc)._field_parent;
		}
	_iter_next_1a6e157a8:;
	}
	_iter_end_1a6e157a8:;;
	return _5407_root;;
}



inline jule::Ptr<_1a83790c2_ReferenceStack> _1a83614c7_getOwnerRefers(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	return (*((*(_1a8361241_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a8361818_findVar(_1a835cacd_scopeChecker* _self_, jule::Str _55223_ident) {
	;
	;
	jule::Ptr<_1a83cc1ad_Var> _5557_v = _1a82a14e4_findVar((*(_self_))._field_table.ptr(), &(_55223_ident), false, true);;
	if ((_5557_v != nullptr)) {
		return _5557_v;;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _5597_parent = (*(_self_))._field_parent;;
	while ((_5597_parent != nullptr)) {
		{
			_5557_v=_1a82a14e4_findVar((*(_5597_parent))._field_table, &(_55223_ident), false, true);
			if ((_5557_v != nullptr)) {
				return _5557_v;;
			};
			_5597_parent=(*_5597_parent.alloc)._field_parent;
		}
	_iter_next_1a6e18338:;
	}
	_iter_end_1a6e18338:;;
	return nullptr;;
}



inline jule::Ptr<_1a8357eb3_Label> _1a8361b59_findLabel(_1a835cacd_scopeChecker* _self_, jule::Str* _57326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a992a1aa:;
		if (it != expr_end) {
			jule::Any _57415_st = *it;
			{
				{
					auto &_match_expr{ _57415_st };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a992aa29:;
						{
							jule::Ptr<_1a8357eb3_Label> _5779_label = _57415_st.unsafe_cast_ptr<_1a8357eb3_Label>();;
							if (((*(_5779_label))._field_Ident == (*(_57326_ident)))) {
								return _5779_label;;
							};
						}
					}
					_match_end_1a992a9b3:;
				};
			}
			_iter_next_1a992a1aa:;
			++it;
			goto _iter_begin_1a992a1aa;
		}
		_iter_end_1a992a1aa:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a835b714_scopeLabel> _1a8361e9a_findLabelScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Str* _58932_ident) {
	jule::Ptr<_1a835b714_scopeLabel> _5907_label = _1a83622db_findLabelAll(_self_.ptr(), _58932_ident);;
	if (((_5907_label != nullptr) && ((*((*_5907_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5907_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a835b714_scopeLabel> _1a83622db_findLabelAll(_1a835cacd_scopeChecker* _self_, jule::Str* _60029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9930dc5:;
		if (it != expr_end) {
			jule::Ptr<_1a835b714_scopeLabel> _60115_lbl = *it;
			{
				if (((*((*(_60115_lbl))._field_node))._field_Ident == (*(_60029_ident)))) {
					return _60115_lbl;;
				};
			}
			_iter_next_1a9930dc5:;
			++it;
			goto _iter_begin_1a9930dc5;
		}
		_iter_end_1a9930dc5:;
	};
	return nullptr;;
}



inline jule::Bool _1a83626d7_isDuplicatedIdent(_1a835cacd_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident) {
	jule::Ptr<_1a83cc1ad_Var> _6133_v = _1a835d4a2_FindVar(_self_, (*(_61251_ident)), false);;
	if (((_6133_v != nullptr) && (static_cast<jule::Uintptr>(_6133_v) != _61233_itself))) {
		if (((*_6133_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6133_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a83aa93e_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a8534a85_TypeAlias> _6213_ta = _1a835d89d_FindTypeAlias(_self_, (*(_61251_ident)), false);;
	if (((_6213_ta != nullptr) && (static_cast<jule::Uintptr>(_6213_ta) != _61233_itself))) {
		if (((*_6213_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6213_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a83aa93e_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a8362990_checkVarDecl(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b1b41_VarDecl> _63233_decl) {
	jule::Ptr<_1a83cc1ad_Var> _6337_v = _1a837e47e_buildVar(_63233_decl);;
	(*(_6337_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6337_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6337_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1a83626d7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6337_v), &((*_6337_v.alloc)._field_Ident))) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_6337_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6337_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a836044e_stop(_self_);
		return;;
	};
	_1a83be7ee_checkVarDecl((*(_self_))._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
	if (((!(_1a83cc851_IsTypeInferred(_6337_v))) && (((*_6337_v.alloc)._field_TypeSym == nullptr) || ((*((*_6337_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1a83c3094_evalVarValue((*(_self_))._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
	if (((!(_1a83cc5ba_IsInitialized(_6337_v))) || ((*((*_6337_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a8368c0a_removeInteriorMutRisk(_self_, &((*(*(_6337_v))._field_Value.alloc)._field_Data));
	_1a83c2c31_checkVarValue((*(_self_))._field_s, &(_6337_v));
}



inline void _1a8362c48_checkTypeAlias(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _66336_ta) {
	if (_1a83626d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_66336_ta))), &((*((*(_66336_ta))))._field_Ident))) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_66336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_66336_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1a836044e_stop(_self_);
		return;;
	};
	_1a83b8881_checkTypeAliasDecl((*(_self_))._field_s, _66336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_66336_ta)); __jule_collection; }));
	if (((*((*((*(_66336_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1a836044e_stop(_self_);
	};
}



inline void _1a8363001_checkTypeAliasDecl(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b57e3_TypeAliasDecl> _67939_decl) {
	jule::Ptr<_1a8534a85_TypeAlias> _6807_ta = _1a837b05d_buildTypeAlias(_67939_decl);;
	_1a8362c48_checkTypeAlias(_self_, &(_6807_ta));
}



inline jule::Ptr<_1a8355466_Scope> _1a8363287_getChild(_1a835cacd_scopeChecker* _self_) {
	return jule::new_ptr<_1a8355466_Scope>(_1a8355466_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1a83636a5_checkChildSsc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _69035_tree, jule::Ptr<_1a8355466_Scope>* _69063_s, jule::Ptr<_1a835cacd_scopeChecker>* _69079_ssc) {
	(*((*(_69063_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_69063_s))))._field_ChildIndex=(*((*(_69079_ssc))))._field_childIndex;
	(*((*(_69079_ssc))))._field_parent=_self_;
	_1a8374ab2_check((*(_69079_ssc)), _69035_tree, _69063_s);
}



inline jule::Ptr<_1a8355466_Scope> _1a8363aa1_checkChildSc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _69734_tree, jule::Ptr<_1a835cacd_scopeChecker>* _69762_ssc) {
	jule::Ptr<_1a8355466_Scope> _6987_s = _1a8363287_getChild(_self_.ptr());;
	_1a83636a5_checkChildSsc(_self_, _69734_tree, &(_6987_s), _69762_ssc);
	return _6987_s;;
}



inline jule::Ptr<_1a8355466_Scope> _1a8363de2_checkChild(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _70332_tree) {
	jule::Ptr<_1a835cacd_scopeChecker> _7047_ssc = _1a8374d48_newChildChecker(_self_);;
	return _1a8363aa1_checkChildSc(_self_, _70332_tree, &(_7047_ssc));;
}



inline void _1a836419a_checkAnonScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree> _70835_tree) {
	jule::Ptr<_1a8355466_Scope> _7097_s = _1a8363de2_checkChild(_self_, &(_70835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7097_s, &__jule_any_type20); __jule_collection; }));
}



inline void _1a836450d_processErrorCall(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8293519_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1a81881cd_Token> _71369_err) {
	if (_1a836096b_isDeferred(_self_)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), _71369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a835cacd_scopeChecker> _7187_root = _1a8360eaa_getRoot(_self_);;
	if ((!((*((*((*(_7187_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _71369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_71338_m))))._field_Func=(*_7187_root.alloc)._field_owner;
}



inline void _1a83647b6_checkExpr(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81a302d_Expr> _72630_expr) {
	jule::Ptr<_1a850489b_eval> _7277_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	(*(_7277_eval))._field_target._field_ignored=true;
	jule::Ptr<_1a85028cc_Data> _7297_d = _1a8523689_evalExpr(_7277_eval, _72630_expr);;
	if (((_7297_d == nullptr) || ((*(_7297_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7297_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a9807d46:;
			{
				jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _7388_m = (*(_7297_d))._field_Model.unsafe_cast_ptr<_1a8293519_BuiltinErrorCallExprModel>();;
				_1a836450d_processErrorCall(_self_, &(_7388_m), (*(_72630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31) {
			_case_begin_1a9808462:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else {
			_case_begin_1a98083eb:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s, (*(_72630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9808385:;
	};
}



inline jule::Ptr<_1a8355884_If> _1a8364b07_checkIf(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4726_If> _75628_i) {
	jule::Ptr<_1a8355466_Scope> _7577_s = _1a8363de2_checkChild(_self_, &((*(_75628_i))._field_Scope));;
	jule::Ptr<_1a85028cc_Data> _7597_d = _1a8523689_evalExpr(_1a83b3271_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), (*_75628_i.alloc)._field_Expr);;
	if ((_7597_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a853d990_Prim> _7647_prim = _1a853802d_Prim((*(_7597_d))._field_Type.ptr());;
	if (((_7647_prim == nullptr) || (!(_1a8541bc4_IsBool(_7647_prim.ptr()))))) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*_75628_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a8355884_If>(_1a8355884_If{._field_Expr=(*(_7597_d))._field_Model, ._field_Scope=_7577_s});;
}



inline jule::Ptr<_1a8355b81_Else> _1a8364e48_checkElse(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4b00_Else> _77630_e) {
	return jule::new_ptr<_1a8355b81_Else>(_1a8355b81_Else{._field_Scope=_1a8363de2_checkChild(_self_, &((*(_77630_e))._field_Scope))});;
}



inline void _1a8365201_checkConditional(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b50a6_Conditional> _78237_conditional) {
	jule::Ptr<_1a835609e_Conditional> _7837_c = jule::new_ptr<_1a835609e_Conditional>(_1a835609e_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1a8355884_If>>(nullptr), ._field_Default=jule::Ptr<_1a8355b81_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7837_c, &__jule_any_type32); __jule_collection; }));
	(*_7837_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8355884_If>>::alloc(0LL, ((*(_78237_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8355884_If>(nullptr); __jule_collection; });
	(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8355884_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8364b07_checkIf(_self_, (*_78237_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_78237_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a982eb5e:;
		if (it != expr_end) {
			jule::Ptr<_1a81b4726_If> _78915_elif = *it;
			{
				(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8355884_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8364b07_checkIf(_self_, _78915_elif); __jule_collection; }));
			}
			_iter_next_1a982eb5e:;
			++it;
			goto _iter_begin_1a982eb5e;
		}
		_iter_end_1a982eb5e:;
	};
	if (((*_78237_conditional.alloc)._field_Default != nullptr)) {
		(*_7837_c.alloc)._field_Default=_1a8364e48_checkElse(_self_, (*_78237_conditional.alloc)._field_Default);
	};
}



inline void _1a83656c9_checkIterScopeSsc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1a81adce7_ScopeTree> _79851_tree, jule::Ptr<_1a8355466_Scope>* _79879_s, jule::Ptr<_1a835cacd_scopeChecker> _79894_ssc) {
	(*(_79894_ssc))._field_it=_79834_it;
	_1a83636a5_checkChildSsc(_self_, &(_79851_tree), _79879_s, &(_79894_ssc));
}



inline jule::Ptr<_1a8355466_Scope> _1a8365b80_checkIterScopeSc(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1a81adce7_ScopeTree> _80350_tree, jule::Ptr<_1a835cacd_scopeChecker> _80377_ssc) {
	jule::Ptr<_1a8355466_Scope> _8047_scope = _1a8363287_getChild(_self_.ptr());;
	_1a83656c9_checkIterScopeSsc(_self_, _80333_it, _80350_tree, &(_8047_scope), _80377_ssc);
	return _8047_scope;;
}



inline jule::Ptr<_1a8355466_Scope> _1a836607b_checkIterScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1a81adce7_ScopeTree>* _80949_tree) {
	jule::Ptr<_1a835cacd_scopeChecker> _8107_ssc = _1a8374d48_newChildChecker(_self_);;
	return _1a8365b80_checkIterScopeSc(_self_, _80931_it, (*(_80949_tree)), _8107_ssc);;
}



inline void _1a8366334_checkInfIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _81434_it) {
	jule::Ptr<_1a835639b_InfIter> _8157_kind = jule::new_ptr<_1a835639b_InfIter>(_1a835639b_InfIter{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8157_kind, &__jule_any_type33); __jule_collection; }));
	(*_8157_kind.alloc)._field_Scope=_1a836607b_checkIterScope(_self_, static_cast<jule::Uintptr>(_8157_kind), &((*((*(_81434_it))))._field_Scope));
}



inline void _1a83665dc_checkWhileIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _82036_it) {
	jule::Ptr<_1a81b30b5_WhileKind> _8217_wh = (*((*(_82036_it))))._field_Kind.cast_ptr<_1a81b30b5_WhileKind>(&__jule_any_type34);;
	if ((((*(_8217_wh))._field_Expr == nullptr) && ((*_8217_wh.alloc)._field_Next == nullptr))) {
		_1a8366334_checkInfIter(_self_, _82036_it);
		return;;
	};
	jule::Ptr<_1a8356852_WhileIter> _8277_kind = jule::new_ptr<_1a8356852_WhileIter>(_1a8356852_WhileIter{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8277_kind, &__jule_any_type35); __jule_collection; }));
	(*_8277_kind.alloc)._field_Scope=_1a836607b_checkIterScope(_self_, static_cast<jule::Uintptr>(_8277_kind), &((*((*(_82036_it))))._field_Scope));
	if (((*_8217_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a85028cc_Data> _8328_d = _1a8523689_evalExpr(_1a83b3271_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), (*_8217_wh.alloc)._field_Expr);;
		if ((_8328_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a853d990_Prim> _8374_prim = _1a853802d_Prim((*(_8328_d))._field_Type.ptr());;
		if ((_8374_prim == nullptr)) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a8541bc4_IsBool(_8374_prim.ptr())))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8277_kind.alloc)._field_Expr=(*(_8328_d))._field_Model;
	};
	if (_1a81b345b_IsWhileNext(_8217_wh)) {
		if ((!(_1a8354a81_isValidAstStForNextSt(&((*_8217_wh.alloc)._field_Next))))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8574_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a83736e8_checkNode(_self_, &((*_8217_wh.alloc)._field_Next));
		if ((_8574_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8609_st = (*((*(_self_))._field_scope))._field_Stmts[_8574_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8574_n);;
			if ((!(_1a8354cc3_isValidStForNextSt(&(_8609_st))))) {
				_1a83ab39b_pushErr((*(_self_))._field_s, (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8277_kind.alloc)._field_Next=_8609_st;
		};
	};
}



inline void _1a8366a0a_checkComptimeRangeIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _87044_it, jule::Ptr<_1a835729d_RangeIter>* _87065_kind, jule::Ptr<_1a85028cc_Data>* _87088_d) {
	if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a83aa93e_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a83626d7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a83aa93e_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a83626d7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a81b39bc_RangeKind> _8847_rang = (*((*(_87044_it))))._field_Kind.cast_ptr<_1a81b39bc_RangeKind>(&__jule_any_type36);;
	_1a83753ba_makeComptimeRange(_87088_d);
	if ((*((*(_87088_d))))._field_Decl) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_8847_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_87088_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a84ebe48_rangeChecker _8917_rc = _1a84ebe48_rangeChecker{._field_sc=_self_, ._field_rang=_8847_rang, ._field_Kind=(*(_87065_kind)), ._field_d=(*(_87088_d))};;
	jule::Bool _8973_ok = _1a84ede8e_check(&_8917_rc);;
	if ((!(_8973_ok))) {
		return;;
	};
	jule::Ptr<_1a8327a76_comptimeRange> _9027_comptime = _1a853b3c7_comptimeRange((*((*(_87088_d))))._field_Type);;
	((_1a8327856_comptimeRangeKindMptrData*)(*(_9027_comptime))._field_kind.safe_type())->_1a832704d_ready((*(_9027_comptime))._field_kind.data, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
	jule::I64 _9047_i = 0LL;;
	jule::I64 _9053_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9047_i < ((_1a8327856_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1a8327702_len((*_9027_comptime.alloc)._field_kind.data)); (_9047_i)++) {
		{
			jule::Ptr<_1a835cacd_scopeChecker> _9078_ssc = _1a8374d48_newChildChecker(_self_);;
			jule::Ptr<_1a8355466_Scope> _9088_scope = _1a8363287_getChild(_self_);;
			if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Scope=_9088_scope;
				(*((*(_9078_ssc))._field_table))._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Scope=_9088_scope;
				(*(*(_9078_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1a8327856_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1a832746b_step((*_9027_comptime.alloc)._field_kind.data, _9047_i, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
			_1a83636a5_checkChildSsc(_self_, &((*((*(_87044_it))))._field_Scope), &(_9088_scope), &(_9078_ssc));
			if ((_9053_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1a985799a;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9088_scope, &__jule_any_type20); __jule_collection; }));
		}
	_iter_next_1a985799a:;
	}
	_iter_end_1a985799a:;;
}



inline void _1a8366cb3_checkRangeIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter>* _92736_it) {
	jule::Ptr<_1a81b39bc_RangeKind> _9287_rang = (*((*(_92736_it))))._field_Kind.cast_ptr<_1a81b39bc_RangeKind>(&__jule_any_type36);;
	jule::Ptr<_1a850489b_eval> _9347_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	(*(_9347_eval))._field_target._field_mutable=true;
	jule::Ptr<_1a85028cc_Data> _9377_d = _1a8523348_evalExpr1(_9347_eval, (*(_9287_rang))._field_Expr);;
	if ((_9377_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a835729d_RangeIter> _9427_kind = jule::new_ptr<_1a835729d_RangeIter>(_1a835729d_RangeIter{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Expr=_9377_d, ._field_KeyA=jule::Ptr<_1a83cc1ad_Var>(nullptr), ._field_KeyB=jule::Ptr<_1a83cc1ad_Var>(nullptr)});;
	if ((*((*(_92736_it))))._field_Comptime) {
		_1a8366a0a_checkComptimeRangeIter(_self_, _92736_it, &(_9427_kind), &(_9377_d));
		return;;
	};
	if (_1a853a0da_comptime((*(_9377_d))._field_Type.ptr())) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*_9287_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1a84ebe48_rangeChecker _9567_rc = _1a84ebe48_rangeChecker{._field_sc=_self_, ._field_rang=_9287_rang, ._field_Kind=_9427_kind, ._field_d=_9377_d};;
	jule::Bool _9623_ok = _1a84ede8e_check(&_9567_rc);;
	if ((!(_9623_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9427_kind, &__jule_any_type37); __jule_collection; }));
	jule::Ptr<_1a835cacd_scopeChecker> _9697_ssc = _1a8374d48_newChildChecker(_self_);;
	jule::Ptr<_1a8355466_Scope> _9707_scope = _1a8363287_getChild(_self_);;
	if (((*(_9427_kind))._field_KeyA != nullptr)) {
		if (((!(_1a83aa93e_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a83626d7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyA.alloc)._field_Scope=_9707_scope;
		(*((*(_9697_ssc))._field_table))._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9427_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a83aa93e_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a83626d7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyB.alloc)._field_Scope=_9707_scope;
		(*(*(_9697_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1a83656c9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9427_kind), (*((*(_92736_it))))._field_Scope, &(_9707_scope), _9697_ssc);
	(*_9427_kind.alloc)._field_Scope=_9707_scope;
}



inline void _1a836706b_checkIter(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b278a_Iter> _99430_it) {
	if (_1a81b2b31_IsInf(_99430_it.ptr())) {
		if ((*_99430_it.alloc)._field_Comptime) {
			_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1a8366334_checkInfIter(_self_, &(_99430_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_99430_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9874445:;
			{
				if ((*_99430_it.alloc)._field_Comptime) {
					_1a83ab39b_pushErr((*(_self_))._field_s, (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1a83665dc_checkWhileIter(_self_, &(_99430_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a9875611:;
			{
				_1a8366cb3_checkRangeIter(_self_, &(_99430_it));
			}
		}
		else {
			_case_begin_1a987559a:;
			{
				jule::println(_1a57c7d81_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1a9875534:;
	};
}



inline jule::Bool _1a83673ac_checkValidContLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _101836_it) {
	jule::Ptr<_1a835cacd_scopeChecker> _10197_scope = _self_;;
	_julec_label_1a987cb35:;
	if (((*(_10197_scope))._field_it == _101836_it)) {
		return true;;
	};
	if (((*_10197_scope.alloc)._field_parent != nullptr)) {
		_10197_scope=(*_10197_scope.alloc)._field_parent;
		goto _julec_label_1a987cb35;
	};
	return false;;
}



inline jule::Bool _1a83676ed_checkValidBreakLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Uintptr _103437_ptr) {
	jule::Ptr<_1a835cacd_scopeChecker> _10357_scope = _self_;;
	_julec_label_1a987ec03:;
	if (((*(_10357_scope))._field_it == _103437_ptr)) {
		return true;;
	};
	if (((*_10357_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10434_mtch = static_cast<jule::Uintptr>((*(((_1a835a6be_Case*)((*_10357_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10434_mtch == _103437_ptr)) {
			return true;;
		};
	};
	if (((*_10357_scope.alloc)._field_parent != nullptr)) {
		_10357_scope=(*_10357_scope.alloc)._field_parent;
		goto _julec_label_1a987ec03;
	};
	return false;;
}



inline jule::Ptr<_1a8357633_ContSt> _1a8367a3e_checkContValidScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4270_ContSt> _105736_c) {
	if (_1a836096b_isDeferred(_self_)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_105736_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_105736_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a8357633_ContSt>(_1a8357633_ContSt{._field_It=0});;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _10677_scope = _self_;;
	_julec_label_1a98824b9:;
	{
		
		if (((((*_10677_scope.alloc)._field_it == 0LLU) && ((*_10677_scope.alloc)._field_parent != nullptr)) && ((*_10677_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a9884169:;
			{
				_10677_scope=(*_10677_scope.alloc)._field_parent;
				goto _julec_label_1a98824b9;
			}
		}
		else if (((*_10677_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a9884202:;
			{
				return jule::new_ptr<_1a8357633_ContSt>(_1a8357633_ContSt{._field_It=(*_10677_scope.alloc)._field_it});;
			}
		}
		_match_end_1a98840ae:;
	};
	_1a83ab39b_pushErr((*(_self_))._field_s, (*_105736_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a8367ce7_checkCont(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b4270_ContSt> _108126_c) {
	jule::Ptr<_1a8357633_ContSt> _10827_cont = _1a8367a3e_checkContValidScope(_self_, _108126_c);;
	if ((_10827_cont == nullptr)) {
		return;;
	};
	if (((*(_108126_c))._field_Label != nullptr)) {
		jule::Ptr<_1a835b714_scopeLabel> _10888_label = _1a835360c_findLabelParent(&((*(*(_108126_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10888_label == nullptr)) {
			_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10888_label))._field_used=true;
		if ((((*((*(_10888_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10888_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I64 _11014_i = ((*(*(_10888_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11014_i >= (*(*((*(_10888_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11059_st = (*(*((*(_10888_label))._field_node))._field_Scope.alloc)._field_Stmts[_11014_i];;
			{
				auto &_match_expr{ _11059_st };
				
				if (_match_expr.type == &__jule_any_type33) {
					_case_begin_1a9890dce:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1a835639b_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1a988ea48:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1a835729d_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1a988ec35:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1a8356852_WhileIter>());
					}
				}
				else {
					_case_begin_1a988ebbe:;
					{
						_1a83ab39b_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1a988eb58:;
			};
		};
	};
	if (((*(_10827_cont))._field_It != 0LLU)) {
		if ((!(_1a83673ac_checkValidContLabel(_self_, (*(_10827_cont))._field_It)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10827_cont, &__jule_any_type38); __jule_collection; }));
}



inline void _1a83680a0_checkLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab2cd_LabelSt> _112831_l) {
	if ((_1a8361b59_findLabel(_self_.ptr(), &((*(_112831_l))._field_Ident)) != nullptr)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_112831_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_112831_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a8357eb3_Label> _11347_label = jule::new_ptr<_1a8357eb3_Label>(_1a8357eb3_Label{._field_Ident=(*_112831_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11347_label, &__jule_any_type19); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a835b714_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a835b714_scopeLabel>(_1a835b714_scopeLabel{._field_token=(*_112831_l.alloc)._field_Token, ._field_node=_11347_label, ._field_used=false}); __jule_collection; }));
}



inline void _1a8368358_pushGoto(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab6a7_GotoSt> _114729_gt) {
	jule::Ptr<_1a8358623_GotoSt> _11487_st = jule::new_ptr<_1a8358623_GotoSt>(_1a8358623_GotoSt{._field_Ident=(*((*_114729_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_114729_gt))._field_Label, ._field_Label=jule::Ptr<_1a8357eb3_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11487_st, &__jule_any_type39); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8358623_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11487_st; __jule_collection; }));
}



inline void _1a8368611_checkPostfix(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt> _115833_a) {
	if (((*(_115833_a))._field_Left.len() > 1LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a850489b_eval> _11647_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	(*(_11647_eval))._field_target._field_mutable=true;
	jule::Ptr<_1a81a302d_Expr> _11677_expr = (*((*(_115833_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a85028cc_Data> _11687_d = _1a8523689_evalExpr(_11647_eval, _11677_expr);;
	if ((_11687_d == nullptr)) {
		return;;
	};
	_1a83546a7_checkAssign(&((*_self_.alloc)._field_s), &(_11687_d), nullptr, (*_115833_a.alloc)._field_Setter);
	if ((_1a853854a_Ptr((*(_11687_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a8545c83_Ptr> _11768_ptr = _1a853854a_Ptr((*(_11687_d))._field_Type);;
		if (_1a8546800_IsUnsafe(_11768_ptr.ptr())) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1a853802d_Prim((*(_11687_d))._field_Type.ptr()) == nullptr) || (!(_1a8326602_IsNum((*(_1a853802d_Prim((*(_11687_d))._field_Type)))._field_Kind))))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a83589ec_Postfix>(_1a83589ec_Postfix{._field_Expr=(*(_11687_d))._field_Model, ._field_Op=(*((*_115833_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type40); __jule_collection; }));
}



inline jule::Bool _1a8368952_isNewAssignIdent(_1a835cacd_scopeChecker* _self_, jule::Str _119432_ident) {
	if ((_1a818aab5_IsIgnoreIdent(_119432_ident) || (_119432_ident).empty())) {
		return false;;
	};
	return (_1a82a1d96_defByIdent((*(_self_))._field_table.ptr(), &(_119432_ident), false) == nullptr);;
}



inline void _1a8368c0a_removeInteriorMutRisk(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a85028cc_Data>* _120743_d) {
	jule::Ptr<_1a81c246a_StructIns> _12083_s = _1a85395a1_Struct((*((*(_120743_d))))._field_Type.ptr());;
	if ((_12083_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _12123_root = _1a8361241_getHardRoot(_self_);;
	if (((*((*(_12123_root))._field_owner))._field_Owner != _12083_s)) {
		return;;
	};
	(*((*(_120743_d))))._field_Mutable=true;
}



inline jule::Bool _1a836e01d_checkStructureAssignOp(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81c246a_StructIns>* _122144_s, jule::Ptr<_1a81ac697_AssignSt>* _122164_a, jule::Ptr<_1a85028cc_Data>* _122188_r) {
	jule::Ptr<_1a829a752_FnIns> _122411_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122164_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a98b241c:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a98b20ba:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a98b2131:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a98b2197:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a98b220d:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a98b2274:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a98b22da:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a98b3a8e:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a98b3b05:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a98b3b6b:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a98b18c2:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a81c2822_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1a98b2043:;
	};
	if ((_122411_overload == nullptr)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a81c2822_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a82995ec_ParamIns> _12567_p = (*(_122411_overload))._field_Params[1LL];;
	return _1a83b388c_checkAssignType((*(_self_))._field_s, (*((*(_12567_p))._field_Decl))._field_Reference, &((*_12567_p.alloc)._field_Type), _122188_r, (*((*(_122164_a))))._field_Setter, _1a83614c7_getOwnerRefers(_self_));;
}



inline void _1a836e2c6_checkSingleAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt>* _126039_a) {
	jule::Ptr<_1a85028cc_Data> _126111_l = nullptr;;
	if ((!(_1a818aab5_IsIgnoreIdent((*((*((*(_126039_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a81a302d_Expr> _12648_expr = (*((*((*(_126039_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_1a850489b_eval> _12658_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
		(*(_12658_eval))._field_target._field_mutable=true;
		_126111_l=_1a8523689_evalExpr(_12658_eval, _12648_expr);
		if ((_126111_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a850489b_eval> _12737_eval = static_cast<jule::Ptr<_1a850489b_eval>>(nullptr);;
	if ((_126111_l != nullptr)) {
		_12737_eval=_1a83b2e30_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1), (*(_126111_l))._field_Type);
	} else {
		_12737_eval=_1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
	};
	(*(_12737_eval))._field_target._field_mutable=true;
	(*_12737_eval.alloc)._field_unsafety=_1a835eeba_isUnsafe(_self_);
	jule::Ptr<_1a85028cc_Data> _12817_r = _1a8523689_evalExpr(_12737_eval, (*((*(_126039_a))))._field_Right);;
	if ((_12817_r == nullptr)) {
		return;;
	};
	_1a8368c0a_removeInteriorMutRisk(_self_, &(_12817_r));
	if ((_126111_l == nullptr)) {
		if (_1a8536c41_Void((*(_12817_r))._field_Type.ptr())) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*((*(_126039_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_126039_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12817_r, &__jule_any_type22); __jule_collection; }));
		return;;
	};
	if ((!(_1a83546a7_checkAssign(&((*_self_.alloc)._field_s), &(_126111_l), _12817_r, (*((*(_126039_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a8539d54_Tup((*(_12817_r))._field_Type) != nullptr)) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8289e7d_OperandExprModel> _13087_lm = jule::new_ptr<_1a8289e7d_OperandExprModel>(_1a8289e7d_OperandExprModel{._field_Type=(*(_126111_l))._field_Type, ._field_Model=(*(_126111_l))._field_Model});;
	jule::Ptr<_1a8289e7d_OperandExprModel> _13127_rm = jule::new_ptr<_1a8289e7d_OperandExprModel>(_1a8289e7d_OperandExprModel{._field_Type=(*(_12817_r))._field_Type, ._field_Model=(*(_12817_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a8358ea3_Assign>(_1a8358ea3_Assign{._field_Left=_13087_lm, ._field_Right=_13127_rm, ._field_Op=(*((*(_126039_a))))._field_Setter}), &__jule_any_type41); __jule_collection; }));
	if (((*(*((*(_126039_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a84e09ec_assignTypeChecker _13198_checker = _1a84e09ec_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_126111_l))._field_Type, ._field_d=_12817_r, ._field_errorToken=(*((*(_126039_a))))._field_Setter, ._field_refers=_1a83614c7_getOwnerRefers(_self_)};;
		if (_1a84e19ed_check(&_13198_checker)) {
			(*(_13127_rm))._field_Model=(*(_12817_r))._field_Model;
			(*(_13087_lm))._field_Model=(*(_126111_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _13327_strct = _1a85395a1_Struct((*(_126111_l))._field_Type);;
	if ((_13327_strct != nullptr)) {
		_1a836e01d_checkStructureAssignOp(_self_, &(_13327_strct), _126039_a, &(_12817_r));
		return;;
	};
	jule::U64 _13373_id = (*(*((*(_126039_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_1a8375189_removeEqFromOp((*(*((*(_126039_a))))._field_Setter.alloc)._field_Id);
	_1a8525aa9_binaryEval _13397_solver = static__1a8526516_new(_12737_eval, (*((*(_126039_a))))._field_Setter);;
	({
		jule::Ptr<_1a85028cc_Data> ___jule_assign_arg = _126111_l;
		jule::Ptr<_1a85028cc_Data> _1___jule_assign_arg = _12817_r;
		_13397_solver._field_l = ___jule_assign_arg;
		_13397_solver._field_r = _1___jule_assign_arg;
	});
	_1a852a6e6_evalOp(&_13397_solver);
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_13373_id;
}



inline void _1a836e914_processEndPartOfMultiAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359459_MultiAssign>* _134549_st, jule::Ptr<_1a81ac697_AssignSt>* _134572_a, jule::Ptr<_1a81ac114_AssignLeft>* _13468_lexpr, jule::Ptr<_1a85028cc_Data>* _134638_l, jule::Ptr<_1a85028cc_Data>* _134653_r, jule::Bool _134663_strict) {
	if (((!((*((*(_13468_lexpr))))._field_Reference)) && _1a818aab5_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident))) {
		if (_1a8536c41_Void((*((*(_134653_r))))._field_Type.ptr())) {
			_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_134572_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a85028cc_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_134572_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13468_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1a98d4d9b:;
				{
					if ((!(_1a8368952_isNewAssignIdent(_self_, (*((*(_13468_lexpr))))._field_Ident)))) {
						goto _julec_label_1a98e089b;
					};
				}
			}
			else {
				_case_begin_1a98d4d35:;
				{
					if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
						_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1a98e089b;
				}
			}
			_match_end_1a98d4cbe:;
		};
		if (_1a83626d7_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13468_lexpr))))._field_Ident))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1a836044e_stop(_self_);
			return;;
		};
		if (_1a818aab5_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident)) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a83cc1ad_Var> _13788_v = jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13468_lexpr))))._field_Token, ._field_Ident=(*((*(_13468_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13468_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13468_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1a853d088_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=(*((*(_134572_a))))._field_Right, ._field_Data=(*(_134653_r))}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
		_1a83c2c31_checkVarValue((*(_self_))._field_s, &(_13788_v));
		{ jule::Slice<jule::Ptr<_1a85028cc_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*((*_13788_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13788_v.alloc)._field_Mutable, ._field_Reference=(*_13788_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13788_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13788_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*((*(_134549_st))))._field_Decls; __jule_push_dest.push(_13788_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13788_v; __jule_collection; }));
		return;;
	};
	_julec_label_1a98e089b:;
	if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1a83546a7_checkAssign(&((*_self_.alloc)._field_s), _134638_l, (*(_134653_r)), (*((*(_13468_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14137_reference = false;;
	if (_1a83b8122_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_134638_l))))._field_Mutable, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, &((*((*(_13468_lexpr))))._field_Token))) {
		_14137_reference=_134663_strict;
		_1a83b388c_checkAssignType((*(_self_))._field_s, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, (*((*(_13468_lexpr))))._field_Token, _1a83614c7_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1a85028cc_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push((*(_134638_l))); };
}



inline void _1a836ebbc_checkMultiAssign(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt>* _142138_a) {
	if ((((*((*((*(_142138_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_142138_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a850489b_eval> _14267_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	jule::Ptr<_1a85028cc_Data> _14277_rd = _1a8523689_evalExpr(_14267_eval, (*((*(_142138_a))))._field_Right);;
	if ((_14277_rd == nullptr)) {
		return;;
	};
	jule::Bool _14317_strict = false;;
	jule::Slice<jule::Ptr<_1a85028cc_Data>> _14327_right = _1a835394d_getDatasFromTupleData(&(_14277_rd));;
	if ((_14327_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14327_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1a98eb1d1:;
				{
					jule::Ptr<_1a828ccd8_IndexingExprModel> _14369_iem = (*(_14327_right[0LL]))._field_Model.unsafe_cast_ptr<_1a828ccd8_IndexingExprModel>();;
					if ((_1a8539abd_Map((*((*(_14369_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14317_strict=true;
						_14327_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*(_1a8539abd_Map((*((*(_14369_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14327_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)}); (*it++) = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1a98eb126:;
		};
	};
	{
		
		if (((*((*(_142138_a))))._field_Left.len() > _14327_right.len())) {
			_case_begin_1a98ee8cc:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142138_a))))._field_Left.len() < _14327_right.len())) {
			_case_begin_1a98ee943:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a98eb27a:;
	};
	(*_14267_eval.alloc)._field_target._field_mutable=true;
	jule::Ptr<_1a8359459_MultiAssign> _14597_st = jule::new_ptr<_1a8359459_MultiAssign>(_1a8359459_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a85028cc_Data>>(nullptr), ._field_Right=(*(_14277_rd))._field_Model});;
	{
		auto expr = &((*((*(_142138_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9904b8a:;
		if (it != expr_end) {
			jule::I64 _14627_i = it - expr->begin();
			{
				jule::Ptr<_1a81ac114_AssignLeft> _14638_lexpr = (*((*(_142138_a))))._field_Left[_14627_i];;
				jule::Ptr<_1a85028cc_Data> _146412_l = nullptr;;
				if ((!(_1a818aab5_IsIgnoreIdent((*(_14638_lexpr))._field_Ident)))) {
					if ((!((*((*(_142138_a))))._field_Declarative))) {
						goto _julec_label_1a99064a5;
					};
					if (((*_14638_lexpr.alloc)._field_Mutable && (*_14638_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1a9908c16;
					};
					{
						auto &_match_expr{ (*((*(_14638_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type42) {
							_case_begin_1a99076b5:;
							{
								if (_1a8368952_isNewAssignIdent(_self_, (*_14638_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1a9908c16;
								};
							}
						}
						_match_end_1a990763d:;
					};
					_julec_label_1a99064a5:;
					_146412_l=_1a8523689_evalExpr(_14267_eval, (*_14638_lexpr.alloc)._field_Expr);
					if ((_146412_l == nullptr)) {
						goto _iter_next_1a9904b8a;
					};
					_julec_label_1a9908c16:;
				};
				jule::Ptr<_1a85028cc_Data> _14858_r = _14327_right[_14627_i];;
				_1a8368c0a_removeInteriorMutRisk(_self_, &(_14858_r));
				_1a836e914_processEndPartOfMultiAssign(_self_, &(_14597_st), _142138_a, &(_14638_lexpr), &(_146412_l), &(_14858_r), _14317_strict);
			}
			_iter_next_1a9904b8a:;
			++it;
			_14627_i++;
			goto _iter_begin_1a9904b8a;
		}
		_iter_end_1a9904b8a:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14597_st, &__jule_any_type44); __jule_collection; }));
}



inline void _1a836ee75_checkAssignSt(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ac697_AssignSt> _149234_a) {
	{
		
		if (_1a818d029_IsPostfixOp((*((*(_149234_a))._field_Setter))._field_Id)) {
			_case_begin_1a990a993:;
			{
				_1a8368611_checkPostfix(_self_, _149234_a);
			}
		}
		else if (((*(_149234_a))._field_Left.len() == 1LL)) {
			_case_begin_1a990a641:;
			{
				_1a836e2c6_checkSingleAssign(_self_, &(_149234_a));
			}
		}
		else {
			_case_begin_1a990a5ca:;
			{
				_1a836ebbc_checkMultiAssign(_self_, &(_149234_a));
			}
		}
		_match_end_1a990a4dc:;
	};
}



inline jule::Ptr<_1a8355466_Scope> _1a8370371_checkCaseScope(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a835a6be_Case>* _150332_c, jule::Ptr<_1a81adce7_ScopeTree>* _150347_tree) {
	jule::Ptr<_1a835cacd_scopeChecker> _15047_ssc = _1a8374d48_newChildChecker(_self_);;
	(*(_15047_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150332_c)));
	return _1a8363aa1_checkChildSc(_self_, _150347_tree, &(_15047_ssc));;
}



inline jule::Ptr<_1a835a6be_Case> _1a83708d2_checkCase(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match> _150930_m, jule::I64 _150941_i, jule::Ptr<_1a81b5c99_Case> _150953_c, jule::Ptr<_1a85028cc_Data> _150972_expr) {
	jule::Ptr<_1a835a6be_Case> _15107_case = (*(_150930_m))._field_Cases[_150941_i];;
	(*(_15107_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(0LL, (*(_150953_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a85028cc_Data>(nullptr); __jule_collection; });
	jule::Bool _15127_constMatched = false;;
	jule::Ptr<_1a850489b_eval> _15137_eval = _1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	{
		auto expr = &((*_150953_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a991124b:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _151415_e = *it;
			{
				jule::Ptr<_1a85028cc_Data> _15158_d = _1a8522875_evalExprKind(_15137_eval, (*(_151415_e))._field_Kind);;
				if ((_15158_d == nullptr)) {
					goto _iter_next_1a991124b;
				};
				if ((*_150930_m.alloc)._field_TypeMatch) {
					(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
					if ((_1a8375cc2_countMatchType(&(_150930_m), &((*(_15158_d))._field_Type)) > 1LL)) {
						_1a83ab39b_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_15158_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_150930_m.alloc)._field_Comptime) {
						_15127_constMatched=(_15127_constMatched || _1a85360b4_Equal((*(_150972_expr))._field_Type, (*(_15158_d))._field_Type));
					} else {
						if ((_1a8538a67_TypeEnum((*(_150972_expr))._field_Type) != nullptr)) {
							_1a83b42e9_checkTypeCompatibility((*(_self_))._field_s, &((*(_150972_expr))._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a82a2da8_Trait> _15347_trt = _1a8539837_Trait((*(_150972_expr))._field_Type);;
							if ((_15347_trt != nullptr)) {
								_1a83b42e9_checkTypeCompatibility((*(_self_))._field_s, &((*(_150972_expr))._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
							};
						};
					};
					_1a852e1bc_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15158_d))._field_Type), &((*((*_150930_m.alloc)._field_Expr))._field_Type), &((*_151415_e.alloc)._field_Token), _1a83614c7_getOwnerRefers(_self_));
					goto _iter_next_1a991124b;
				};
				if ((*(_15158_d))._field_Decl) {
					_1a83ab39b_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1a991124b;
				};
				if ((*_150930_m.alloc)._field_Comptime) {
					if (((!(_1a8503317_IsConst(_15158_d.ptr()))) && (_1a853b8e4_comptimeTypeInfo((*(_15158_d))._field_Type) == nullptr))) {
						_1a83ab39b_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1a991124b;
					};
					if ((!(_15127_constMatched))) {
						if (_1a8503317_IsConst(_15158_d.ptr())) {
							_15127_constMatched=(_1a8503317_IsConst(_150972_expr.ptr()) && _1a82846c5_Eq((*(_15158_d))._field_Constant.ptr(), (*((*(_150972_expr))._field_Constant))));
						} else {
							jule::Ptr<_1a8337976_comptimeTypeInfo> _15607_exprCti = _1a853b8e4_comptimeTypeInfo((*(_150972_expr))._field_Type);;
							_15127_constMatched=((_15607_exprCti != nullptr) && _1a85360b4_Equal((*(_1a853b8e4_comptimeTypeInfo((*(_15158_d))._field_Type)))._field_base, (*_15607_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
				if ((((!((*_150930_m.alloc)._field_Comptime)) || (_1a853b8e4_comptimeTypeInfo((*(_150972_expr))._field_Type) == nullptr)) || (_1a853b8e4_comptimeTypeInfo((*(_15158_d))._field_Type) == nullptr))) {
					_1a84e09ec_assignTypeChecker _15709_checker = _1a84e09ec_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_150972_expr))._field_Type, ._field_d=_15158_d, ._field_errorToken=(*_151415_e.alloc)._field_Token, ._field_refers=_1a83614c7_getOwnerRefers(_self_)};;
					_1a84e19ed_check(&_15709_checker);
				};
			}
			_iter_next_1a991124b:;
			++it;
			goto _iter_begin_1a991124b;
		}
		_iter_end_1a991124b:;
	};
	if (((!((*_150930_m.alloc)._field_Comptime)) || _15127_constMatched)) {
		(*_15107_case.alloc)._field_Scope=_1a8370371_checkCaseScope(_self_, &(_15107_case), &((*_150953_c.alloc)._field_Scope));
	};
	return _15107_case;;
}



inline void _1a8370d00_checkCases(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _158632_m, jule::Ptr<_1a8359b96_Match> _158656_rm, jule::Ptr<_1a85028cc_Data> _158672_expr) {
	(*(_158656_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a835a6be_Case>>::alloc(0LL, (*((*(_158632_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a835a6be_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a85a52:;
		if (it != expr_end) {
			jule::I64 _15887_i = it - expr->begin();
			{
				jule::Ptr<_1a835a6be_Case> _15898_case = jule::new_ptr<_1a835a6be_Case>(_1a835a6be_Case{._field_Owner=_158656_rm, ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a85028cc_Data>>(nullptr), ._field_Next=jule::Ptr<_1a835a6be_Case>(nullptr)});;
				if ((_15887_i > 0LL)) {
					(*((*_158656_rm.alloc)._field_Cases[(_15887_i - 1LL)]))._field_Next=_15898_case;
				};
				(*_158656_rm.alloc)._field_Cases=jule::append((*_158656_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a835a6be_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15898_case; __jule_collection; }));
			}
			_iter_next_1a9a85a52:;
			++it;
			_15887_i++;
			goto _iter_begin_1a9a85a52;
		}
		_iter_end_1a9a85a52:;
	};
	if ((((*_158656_rm.alloc)._field_Default != nullptr) && ((*((*(_158632_m))))._field_Cases.len() > 0LL))) {
		(*((*_158656_rm.alloc)._field_Cases[((*_158656_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158656_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a89094:;
		if (it != expr_end) {
			jule::I64 _16028_i = it - expr->begin();
			jule::Ptr<_1a81b5c99_Case> _160215_c = *it;
			{
				_1a83708d2_checkCase(_self_, _158656_rm, _16028_i, _160215_c, _158672_expr);
			}
			_iter_next_1a9a89094:;
			++it;
			_16028_i++;
			goto _iter_begin_1a9a89094;
		}
		_iter_end_1a9a89094:;
	};
}



inline jule::Ptr<_1a835a6be_Case> _1a83711eb_checkDefault(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match> _160733_m, jule::Ptr<_1a81b4b00_Else> _160748_d) {
	jule::Ptr<_1a835a6be_Case> _16087_def = jule::new_ptr<_1a835a6be_Case>(_1a835a6be_Case{._field_Owner=_160733_m, ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a85028cc_Data>>(nullptr), ._field_Next=jule::Ptr<_1a835a6be_Case>(nullptr)});;
	(*(_16087_def))._field_Scope=_1a8370371_checkCaseScope(_self_, &(_16087_def), &((*(_160748_d))._field_Scope));
	return _16087_def;;
}



inline void _1a837155e_checkComptimePanic(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81881cd_Token> _161539_callToken, jule::Ptr<_1a8355466_Scope>* _161566_s) {
	if (((*((*(_161566_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16193_stmt = (*((*(_161566_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16193_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a9a8c790:;
			{
				jule::Ptr<_1a85028cc_Data> _16224_d = _16193_stmt.unsafe_cast_ptr<_1a85028cc_Data>();;
				{
					auto &_match_expr{ (*(_16224_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1a9a8d76e:;
						{
							jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _16259_m = (*(_16224_d))._field_Model.unsafe_cast_ptr<_1a8291913_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16259_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1a9a8e93a:;
									{
										jule::Ptr<_1a82273d2_Const> _16286_c = (*(_16259_m))._field_Expr.unsafe_cast_ptr<_1a82273d2_Const>();;
										if ((!(_1a8283394_IsStr(_16286_c.ptr())))) {
											goto _match_end_1a9a8e8b3;
										};
										if ((_161539_callToken == nullptr)) {
											jule::Ptr<_1a835cacd_scopeChecker> _163311_root = _1a8361241_getHardRoot(_self_);;
											if (((*(_163311_root))._field_calledFrom == nullptr)) {
												_161539_callToken=(*(_16259_m))._field_Token;
											} else {
												_161539_callToken=(*(_163311_root))._field_calledFrom;
											};
										};
										_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), _161539_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8280c98_ReadStr(_16286_c), &__jule_any_type5); __jule_collection; }));
										_1a836044e_stop(_self_);
									}
								}
								_match_end_1a9a8e8b3:;
							};
						}
					}
					_match_end_1a9a8d708:;
				};
			}
		}
		_match_end_1a9a8bccd:;
	};
}



inline void _1a83718c2_processConstMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a8359b96_Match>* _164739_tm, jule::Ptr<_1a81b65b3_MatchCase>* _164756_m) {
	{
		auto expr = &((*((*(_164739_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a8edbe:;
		if (it != expr_end) {
			jule::I64 _16488_i = it - expr->begin();
			jule::Ptr<_1a835a6be_Case> _164815_c = *it;
			{
				if (((*(_164815_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a81881cd_Token> _165013_token = nullptr;;
					if (((!((*((*(_164739_tm))))._field_TypeMatch)) && ((*(*(_164815_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165013_token=(*((*((*((*(_164756_m))))._field_Cases[_16488_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a837155e_checkComptimePanic(_self_, _165013_token, &((*_164815_c.alloc)._field_Scope));
					(*((*(_164739_tm))))._field_Default=_164815_c;
					(*((*(_164739_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a9a8edbe:;
			++it;
			_16488_i++;
			goto _iter_begin_1a9a8edbe;
		}
		_iter_end_1a9a8edbe:;
	};
	if (((*((*(_164756_m))))._field_Default != nullptr)) {
		(*((*(_164739_tm))))._field_Cases=nullptr;
		(*((*(_164739_tm))))._field_Default=_1a83711eb_checkDefault(_self_, (*(_164739_tm)), (*((*(_164756_m))))._field_Default);
		if (((*((*(_164739_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a81881cd_Token> _166413_token = nullptr;;
			if ((!((*((*(_164739_tm))))._field_TypeMatch))) {
				_166413_token=(*((*((*((*(_164756_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a837155e_checkComptimePanic(_self_, _166413_token, &((*(*((*(_164739_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_164739_tm))))._field_Cases=nullptr;
	};
}



inline void _1a8371b7a_checkTypeMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _167636_m) {
	jule::Ptr<_1a85028cc_Data> _16777_d = _1a8522bb6_eval1(_1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), (*((*(_167636_m))))._field_Expr);;
	if ((_16777_d == nullptr)) {
		return;;
	};
	if ((*((*(_167636_m))))._field_Comptime) {
		jule::Ptr<_1a8337976_comptimeTypeInfo> _16838_cti = _1a853b8e4_comptimeTypeInfo((*(_16777_d))._field_Type.ptr());;
		if ((_16838_cti == nullptr)) {
			if ((!((*(_16777_d))._field_Decl))) {
				_1a83ab39b_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16777_d))._field_Type=(*(_16838_cti))._field_base;
		};
	} else if (((*(_16777_d))._field_Decl || (!(((((_1a853802d_Prim((*(_16777_d))._field_Type.ptr()) != nullptr) && _1a85421e1_IsAny(_1a853802d_Prim((*(_16777_d))._field_Type).ptr())) || (_1a8539837_Trait((*(_16777_d))._field_Type) != nullptr)) || (_1a8538a67_TypeEnum((*(_16777_d))._field_Type) != nullptr)))))) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8359b96_Match> _16977_tm = jule::new_ptr<_1a8359b96_Match>(_1a8359b96_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16777_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167636_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a835a6be_Case>>(nullptr), ._field_Default=jule::Ptr<_1a835a6be_Case>(nullptr)});;
	if (((!((*(_16977_tm))._field_Comptime)) && ((*((*(_167636_m))))._field_Default != nullptr))) {
		(*_16977_tm.alloc)._field_Default=_1a83711eb_checkDefault(_self_, _16977_tm, (*((*(_167636_m))))._field_Default);
	};
	_1a8370d00_checkCases(_self_, _167636_m, _16977_tm, _16777_d);
	if ((*_16977_tm.alloc)._field_Comptime) {
		_1a83718c2_processConstMatch(_self_, &(_16977_tm), _167636_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16977_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _1a8371e33_checkCommonMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase>* _171938_m) {
	jule::Ptr<_1a85028cc_Data> _172011_d = nullptr;;
	if (((*((*(_171938_m))))._field_Expr == nullptr)) {
		_172011_d=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e5e3_NewBool(true)});
		(*(_172011_d))._field_Model=jule::Any((*_172011_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_172011_d=_1a8523348_evalExpr1(_1a83b3271_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), (*((*(_171938_m))))._field_Expr);
		if ((_172011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_171938_m))))._field_Comptime) {
		if ((!(_1a8375684_canComptimeMatch(&(_172011_d))))) {
			_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a853a0da_comptime((*(_172011_d))._field_Type.ptr())) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8359b96_Match> _17467_mc = jule::new_ptr<_1a8359b96_Match>(_1a8359b96_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172011_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_171938_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1a835a6be_Case>>(nullptr), ._field_Default=jule::Ptr<_1a835a6be_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17467_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_17467_mc))._field_Comptime)) && ((*((*(_171938_m))))._field_Default != nullptr))) {
		(*_17467_mc.alloc)._field_Default=_1a83711eb_checkDefault(_self_, _17467_mc, (*((*(_171938_m))))._field_Default);
	};
	_1a8370d00_checkCases(_self_, _171938_m, _17467_mc, _172011_d);
	if ((*_17467_mc.alloc)._field_Comptime) {
		_1a83718c2_processConstMatch(_self_, &(_17467_mc), _171938_m);
	};
}



inline void _1a83721db_checkMatch(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b65b3_MatchCase> _177031_m) {
	if ((*(_177031_m))._field_TypeMatch) {
		_1a8371b7a_checkTypeMatch(_self_, &(_177031_m));
		return;;
	};
	_1a8371e33_checkCommonMatch(_self_, &(_177031_m));
}



inline void _1a8372494_checkFall(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81ab9a4_FallSt> _177826_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a836096b_isDeferred(_self_))) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177826_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1a835a6be_Case* _17867_case = ((_1a835a6be_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17867_case))._field_Owner))._field_Comptime) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_177826_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17867_case))._field_Next == nullptr)) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_177826_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1a835adb7_FallSt>(_1a835adb7_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17867_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_1a8357a0c_BreakSt> _1a83727d5_checkBreakWithLabel(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _180136_b) {
	jule::Ptr<_1a8357a0c_BreakSt> _18027_brk = _1a8372b26_checkPlainBreak(_self_, _180136_b);;
	if ((_18027_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18027_brk))._field_It=0LLU;
	(*(_18027_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a835b714_scopeLabel> _18127_label = _1a835360c_findLabelParent(&((*((*(_180136_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18127_label == nullptr)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_18127_label))._field_used=true;
	if ((((*((*(_18127_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18127_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18253_i = ((*(*(_18127_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18253_i >= (*(*((*(_18127_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18298_st = (*(*((*(_18127_label))._field_node))._field_Scope.alloc)._field_Stmts[_18253_i];;
		{
			auto &_match_expr{ _18298_st };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1a9ac7643:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1a835639b_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1a9ac62ac:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1a835729d_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1a9ac6499:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1a8356852_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1a9ac6510:;
				{
					(*(_18027_brk))._field_Mtch=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1a8359b96_Match>());
				}
			}
			else {
				_case_begin_1a9ac6433:;
				{
					_1a83ab39b_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1a9ac63bc:;
		};
	};
	if (((*(_18027_brk))._field_It != 0LLU)) {
		if ((!(_1a83676ed_checkValidBreakLabel(_self_, (*(_18027_brk))._field_It)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_18027_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a83676ed_checkValidBreakLabel(_self_, (*(_18027_brk))._field_Mtch)))) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _18027_brk;;
}



inline jule::Ptr<_1a8357a0c_BreakSt> _1a8372b26_checkPlainBreak(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _185932_b) {
	if (_1a836096b_isDeferred(_self_)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185932_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _18657_scope = _self_;;
	_julec_label_1a9acda56:;
	{
		
		if ((((((*_18657_scope.alloc)._field_it == 0LLU) && ((*_18657_scope.alloc)._field_cse == 0LLU)) && ((*_18657_scope.alloc)._field_parent != nullptr)) && ((*_18657_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a9ad001e:;
			{
				_18657_scope=(*_18657_scope.alloc)._field_parent;
				goto _julec_label_1a9acda56;
			}
		}
		else if (((*_18657_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a9ad00a7:;
			{
				return jule::new_ptr<_1a8357a0c_BreakSt>(_1a8357a0c_BreakSt{._field_It=(*_18657_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18657_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1a9ad011d:;
			{
				return jule::new_ptr<_1a8357a0c_BreakSt>(_1a8357a0c_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1a835a6be_Case*)((*_18657_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1a9acee20:;
	};
	_1a83ab39b_pushErr((*(_self_))._field_s, (*_185932_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a8372dce_checkBreak(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b3d96_BreakSt> _188127_b) {
	if (((*(_188127_b))._field_Label != nullptr)) {
		jule::Ptr<_1a8357a0c_BreakSt> _18838_brk = _1a83727d5_checkBreakWithLabel(_self_, _188127_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18838_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a8357a0c_BreakSt> _18887_brk = _1a8372b26_checkPlainBreak(_self_, _188127_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18887_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _1a8373187_checkRet(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81b201a_RetSt> _189229_r) {
	if (_1a836096b_isDeferred(_self_)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189229_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a835b25d_RetSt> _18977_rt = jule::new_ptr<_1a835b25d_RetSt>(_1a835b25d_RetSt{._field_Func=(*(_1a8360eaa_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18977_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_1a84ee786_retTypeChecker> _19027_rtc = jule::new_ptr<_1a84ee786_retTypeChecker>(_1a84ee786_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18977_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1a81a302d_Expr>>(nullptr), ._field_errorToken=(*_189229_r.alloc)._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _19083_ok = _1a8500776_check(_19027_rtc.ptr(), &((*_189229_r.alloc)._field_Expr));;
	if ((!(_19083_ok))) {
		return;;
	};
	if (((*_189229_r.alloc)._field_Expr != nullptr)) {
		(*_18977_rt.alloc)._field_Expr=(*_19027_rtc.alloc)._field_model;
	};
}



inline void _1a8373440_checkUseExpr(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81a3902_UseExpr> _191829_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191829_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a836096b_isDeferred(_self_)) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_191829_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*_191829_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1a83736e8_checkNode(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Any* _193431_node) {
	{
		auto &_match_expr{ (*(_193431_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a9ae585e:;
			{
				_1a836419a_checkAnonScope(_self_, (*(_193431_node)).cast_ptr<_1a81adce7_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a9ae5bc2:;
			{
				_1a8362990_checkVarDecl(_self_, (*(_193431_node)).cast_ptr<_1a81b1b41_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a9ae5c38:;
			{
				_1a8363001_checkTypeAliasDecl(_self_, (*(_193431_node)).cast_ptr<_1a81b57e3_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a9ae5c9e:;
			{
				_1a83647b6_checkExpr(_self_, (*(_193431_node)).cast_ptr<_1a81a302d_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a9ae6101:;
			{
				_1a8365201_checkConditional(_self_, (*(_193431_node)).cast_ptr<_1a81b50a6_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a9ae6167:;
			{
				_1a836706b_checkIter(_self_, (*(_193431_node)).cast_ptr<_1a81b278a_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a9ae61cd:;
			{
				_1a8367ce7_checkCont(_self_, (*(_193431_node)).cast_ptr<_1a81b4270_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a9ae6244:;
			{
				_1a83680a0_checkLabel(_self_, (*(_193431_node)).cast_ptr<_1a81ab2cd_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a9ae62aa:;
			{
				_1a8368358_pushGoto(_self_, (*(_193431_node)).cast_ptr<_1a81ab6a7_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a9ae6321:;
			{
				_1a836ee75_checkAssignSt(_self_, (*(_193431_node)).cast_ptr<_1a81ac697_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a9ae6387:;
			{
				_1a83721db_checkMatch(_self_, (*(_193431_node)).cast_ptr<_1a81b65b3_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a9ae63ed:;
			{
				_1a8372494_checkFall(_self_, (*(_193431_node)).cast_ptr<_1a81ab9a4_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a9ae6475:;
			{
				_1a8372dce_checkBreak(_self_, (*(_193431_node)).cast_ptr<_1a81b3d96_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a9ae64ec:;
			{
				_1a8373187_checkRet(_self_, (*(_193431_node)).cast_ptr<_1a81b201a_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a9ae6574:;
			{
				_1a8373440_checkUseExpr(_self_, (*(_193431_node)).cast_ptr<_1a81a3902_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1a9ae5a3a:;
			{
				jule::println(_1a57c7d81_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1a9ae59c4:;
	};
}



inline void _1a83738e6_checkResult(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	_1a81ad687_Stmt _19727_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19727_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a9b23150:;
			{
				jule::Ptr<_1a81a3902_UseExpr> _19758_ue = _19727_stmt._field_Data.unsafe_cast_ptr<_1a81a3902_UseExpr>();;
				jule::Ptr<_1a85028cc_Data> _19768_d = _1a8523689_evalExpr(_1a83b3271_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), (*(_19758_ue))._field_Expr);;
				if ((_19768_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19768_d, &__jule_any_type22); __jule_collection; }));
				jule::Ptr<_1a84ee786_retTypeChecker> _19818_rtc = jule::new_ptr<_1a84ee786_retTypeChecker>(_1a84ee786_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_types=_1a829b984_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1a81a302d_Expr>>(nullptr), ._field_errorToken=(*((*_19758_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_1a8500776_check(_19818_rtc.ptr(), &((*_19758_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a9b25075:;
			{
				jule::Ptr<_1a81a302d_Expr> _19898_expr = _19727_stmt._field_Data.unsafe_cast_ptr<_1a81a302d_Expr>();;
				jule::Ptr<_1a85028cc_Data> _19908_d = _1a8523689_evalExpr(_1a83b3271_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)), _19898_expr);;
				if ((_19908_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19908_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a9b2b39a:;
						{
							jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _19969_m = (*(_19908_d))._field_Model.unsafe_cast_ptr<_1a8293519_BuiltinErrorCallExprModel>();;
							_1a836450d_processErrorCall(_self_, &(_19969_m), (*(_19898_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19908_d, &__jule_any_type22); __jule_collection; }));
						}
					}
					else {
						_case_begin_1a9b2b576:;
						{
							return;;
						}
					}
					_match_end_1a9b2b510:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1a9b246d4:;
			{
				_1a83736e8_checkNode(_self_, &(_19727_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a9b2466d:;
			{
				_1a83736e8_checkNode(_self_, &(_19727_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a9b24607:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a8373ae4_checkTree(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20187_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20187_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20187_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a81ad687_Stmt _20268_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a83736e8_checkNode(_self_, &(_20268_stmt._field_Data));
			if (_1a83606d5_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1a9b301e5:;
	}
	_iter_end_1a9b301e5:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a83738e6_checkResult(_self_);
	};
}



inline void _1a8373e57_checkGoto(_1a835cacd_scopeChecker* _self_, jule::Ptr<_1a8358623_GotoSt>* _203730_gt, jule::Ptr<_1a835b714_scopeLabel>* _203748_label) {
	jule::I64 _20387_n = 0LL;;
	if (((*((*(_203730_gt))))._field_Scope == (*((*((*(_203748_label))))._field_node))._field_Scope)) {
		if (((*((*(_203730_gt))))._field_Index > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*((*(_203730_gt))))._field_Index;
	} else if (((*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203748_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1a8355466_Scope> _20518_gtsc = (*((*(_203730_gt))))._field_Scope;;
		while ((((*_20518_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203748_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20518_gtsc=(*_20518_gtsc.alloc)._field_Parent;
			}
		_iter_next_1a9b3564b:;
		}
		_iter_end_1a9b3564b:;;
		if (((*_20518_gtsc.alloc)._field_StmtIndex > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*_20518_gtsc.alloc)._field_StmtIndex;
	} else {
		_20387_n=0LL;
	};
	jule::Ptr<_1a8355466_Scope> _20737_s = (*((*((*(_203748_label))))._field_node))._field_Scope;;
	jule::I64 _20747_i = ((*(*((*(_203748_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20747_i >= _20387_n); (_20747_i)--) {
				{
					jule::Any _20779_stmt = (*(_20737_s))._field_Stmts[_20747_i];;
					if (_1a837594d_stmtIsDef(&(_20779_stmt))) {
						_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_203730_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203730_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1a9b39155:;
			}
			_iter_end_1a9b39155:;;
			if (((*_20737_s.alloc)._field_ChildIndex > (*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex)) {
				_20737_s=(*_20737_s.alloc)._field_Parent;
				_20747_i=((*_20737_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1a9b38cd1;
			};
			goto _iter_end_1a9b38cd1;
		}
	_iter_next_1a9b38cd1:;
	}
	_iter_end_1a9b38cd1:;;
}



inline void _1a8374155_checkGotos(_1a835cacd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b3bd17:;
		if (it != expr_end) {
			jule::Ptr<_1a8358623_GotoSt> _209515_gt = *it;
			{
				jule::Ptr<_1a835b714_scopeLabel> _20968_label = _1a83622db_findLabelAll(_self_, &((*(_209515_gt))._field_Ident));;
				if ((_20968_label == nullptr)) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_209515_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1a9b3bd17;
				};
				(*_209515_gt.alloc)._field_Label=(*(_20968_label))._field_node;
				(*(_20968_label))._field_used=true;
				_1a8373e57_checkGoto(_self_, &(_209515_gt), &(_20968_label));
			}
			_iter_next_1a9b3bd17:;
			++it;
			goto _iter_begin_1a9b3bd17;
		}
		_iter_end_1a9b3bd17:;
	};
}



inline void _1a8374353_checkLabels(_1a835cacd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b3e930:;
		if (it != expr_end) {
			jule::Ptr<_1a835b714_scopeLabel> _210810_l = *it;
			{
				if ((!((*(_210810_l))._field_used))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_210810_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_210810_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a9b3e930:;
			++it;
			goto _iter_begin_1a9b3e930;
		}
		_iter_end_1a9b3e930:;
	};
}



inline void _1a8374551_checkVars(_1a835cacd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b416ac:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _211610_v = *it;
			{
				if (((((!((*(_211610_v))._field_Used)) && (!((*_211610_v.alloc)._field_Constant))) && (!(_1a818aab5_IsIgnoreIdent((*_211610_v.alloc)._field_Ident)))) && (!(_1a818ad7e_IsAnonIdent((*_211610_v.alloc)._field_Ident))))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_211610_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211610_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a9b416ac:;
			++it;
			goto _iter_begin_1a9b416ac;
		}
		_iter_end_1a9b416ac:;
	};
}



inline void _1a837474e_checkAliases(_1a835cacd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b43eb7:;
		if (it != expr_end) {
			jule::Ptr<_1a8534a85_TypeAlias> _212410_a = *it;
			{
				if ((((!((*(_212410_a))._field_Used)) && (!(_1a818aab5_IsIgnoreIdent((*_212410_a.alloc)._field_Ident)))) && (!(_1a818ad7e_IsAnonIdent((*_212410_a.alloc)._field_Ident))))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_212410_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212410_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a9b43eb7:;
			++it;
			goto _iter_begin_1a9b43eb7;
		}
		_iter_end_1a9b43eb7:;
	};
}



inline void _1a8374ab2_check(jule::Ptr<_1a835cacd_scopeChecker> _self_, jule::Ptr<_1a81adce7_ScopeTree>* _213227_tree, jule::Ptr<_1a8355466_Scope>* _213255_s) {
	(*((*(_213255_s))))._field_Deferred=(*((*(_213227_tree))))._field_Deferred;
	(*((*(_213255_s))))._field_Unsafety=(*((*(_213227_tree))))._field_Unsafety;
	jule::I64 _21363_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213227_tree));
	(*_self_.alloc)._field_scope=(*(_213255_s));
	_1a8373ae4_checkTree(_self_);
	if ((_21363_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a8374551_checkVars(_self_);
		_1a837474e_checkAliases(_self_);
		if (_1a8360251_isRoot(_self_)) {
			_1a8374155_checkGotos(_self_);
			_1a8374353_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a835cacd_scopeChecker> _1a8374d48_newChildChecker(jule::Ptr<_1a835cacd_scopeChecker> _self_) {
	jule::Ptr<_1a835cacd_scopeChecker> _21567_base = _1a8352dc0_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21567_base))._field_parent=_self_;
	(*_21567_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21567_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21567_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21567_base;;
}








inline jule::Bool _1a83767b7_directiveChecker_eq(_1a83767b7_directiveChecker *_self_, _1a83767b7_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1a8376c18_checkCdef(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9b4d224:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8297694_Fn>()))._field_Binded) {
					goto _match_end_1a9b4c07a;
				};
				goto _case_begin_1a9b4c0e1;
			}
		}
		else {
			_case_begin_1a9b4c0e1:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9b4c07a:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a8376ec1_checkTypedef(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9b51425:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Binded) {
					goto _match_end_1a9b5027b;
				};
				goto _case_begin_1a9b502e2;
			}
		}
		else {
			_case_begin_1a9b502e2:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9b5027b:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a8377279_checkNamespace(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9b54626:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Binded))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9b5324b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a8297694_Fn>()))._field_Binded))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b53559:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Binded))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a9b534e3:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9b5347c:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a81881cd_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9b5ecc4:;
			{
				if ((_1a852c0ee_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1a819d116_Directive> _919_typedef = jule::new_ptr<_1a819d116_Directive>(_1a819d116_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819d116_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1a9b5ec5d:;
	};
}



inline void _1a8377532_checkDeprecated(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a9b63503:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Binded) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9b621a0:;
			{
				jule::Ptr<_1a8297694_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a8297694_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1a8298167_IsEntryPoint(_1078_f)) || _1a82983ed_IsInit(_1078_f))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b62436:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Binded) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a9b623c0:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9b62359:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a81881cd_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a83777da_checkTest(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9b70301:;
			{
				jule::Ptr<_1a8297694_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a8297694_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1a82983ed_IsInit(_1444_f)))) && (!(_1a8298167_IsEntryPoint(_1444_f))))) {
					goto _match_end_1a9b6e157;
				};
				if (_1a8297dd1_IsMethod(_1444_f)) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1a9b6e157;
				};
				goto _case_begin_1a9b6e1bd;
			}
		}
		else {
			_case_begin_1a9b6e1bd:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9b6e157:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a8377a93_checkExport(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1a9b7504d:;
			{
				jule::Ptr<_1a8297694_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a8297694_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1a82983ed_IsInit(_1654_f)) || _1a8298167_IsEntryPoint(_1654_f)) || _1a8297dd1_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9b73b73:;
			{
				jule::Ptr<_1a83cc1ad_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1a83cc1ad_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1a9b73e1a:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1a9b73da4:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a81881cd_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a83ab39b_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a8377d4b_checkDirective(_1a83767b7_directiveChecker* _self_, jule::Ptr<_1a819d116_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1a995326b:;
			{
				_1a8376c18_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1a9952116:;
			{
				_1a8376ec1_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1a995217c:;
			{
				_1a8377279_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1a99521e3:;
			{
				_1a8377532_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1a9952259:;
			{
				_1a83777da_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1a99522c0:;
			{
				_1a8377a93_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1a9952336:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1a994d871:;
			{
				_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1a9952039:;
	};
}



inline void _1a8378049_check(_1a83767b7_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a995603d:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _22315_d = *it;
			{
				_1a8377d4b_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1a995603d:;
			++it;
			goto _iter_begin_1a995603d;
		}
		_iter_end_1a995603d:;
	};
}







inline jule::Ptr<_1a83790c2_ReferenceStack> static__1a8379435_new(void) {
	return jule::new_ptr<_1a83790c2_ReferenceStack>(_1a83790c2_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1a8379831_Len(_1a83790c2_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a8379b72_At(_1a83790c2_ReferenceStack* _self_, jule::I64 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _1a8379e2a_Push(_1a83790c2_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _1aa1a2b0d_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a829a752_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1a3e72:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1aa1a3e72:;
			++it;
			goto _iter_begin_1aa1a3e72;
		}
		_iter_end_1aa1a3e72:;
	};
	return false;;
}

inline jule::Bool _1aa1b9372_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a83cc1ad_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1ba692:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1aa1ba692:;
			++it;
			goto _iter_begin_1aa1ba692;
		}
		_iter_end_1aa1ba692:;
	};
	return false;;
}

inline jule::Bool _1aa2a2a54_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a81c246a_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2a3db8:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1aa2a3db8:;
			++it;
			goto _iter_begin_1aa2a3db8;
		}
		_iter_end_1aa2a3db8:;
	};
	return false;;
}

inline jule::Bool _1aa71eb2a_Exist(_1a83790c2_ReferenceStack* _self_, jule::Ptr<_1a82a2da8_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa720e39:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1aa720e39:;
			++it;
			goto _iter_begin_1aa720e39;
		}
		_iter_end_1aa720e39:;
	};
	return false;;
}








inline jule::Bool _1a837a623_Pass_eq(_1a837a623_Pass *_self_, _1a837a623_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1a8380ace_pushErr(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81881cd_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args) {
	{ jule::Slice<_21ca95427_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a83a6385_compilerErr(_30724_token, true, _30746_fmt, _30766_args)); };
}



inline void _1a8381360_pushSuggestion(_1a83800c8_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args) {
	{
		_1a83a74a7_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31630_fmt, _31650_args);
	};
}



inline jule::Bool _1a838175b_checkCppUseDeclPath(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _32036_decl, jule::Str* _32058_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3213_ext = _205375813_Ext((*(_32058_path)));;
	if (((!(_21ca4a762_IsValidHeaderExt(_3213_ext))) && (!(_21ca4aa2b_IsValidCppExt(_3213_ext))))) {
		_1a8380ace_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3213_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21cc858ae_Stat _3283_info = ({
		auto except = static__20537c980_Of((*(_32058_path)));
		(except.ok()) ? (except.result) : ({{
			_1a8380ace_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_21cc85cbb_IsDir(&_3283_info)) {
		_1a8380ace_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_32036_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a8381a69_buildCppHeaderImport(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _34041_decl) {
	jule::Str _3417_path = (*((*((*(_34041_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_21ca4a487_IsStdHeaderPath(_3417_path)))) {
		_3417_path=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a818e910_Dir((*((*((*(_34041_decl))))._field_Token))._field_File.ptr()); (*it++) = _3417_path; __jule_collection; }));
		jule::Bool _3458_ok = _1a838175b_checkCppUseDeclPath(_self_, _34041_decl, &(_3417_path));;
		if ((!(_3458_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _205375acc_Abs(_3417_path);
			_3417_path = __jule_assign_result.__jule_result_arg0;
			_3458_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3458_ok))) {
			_1a8380ace_pushErr(_self_, &((*((*(_34041_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1a838b14a_ImportInfo>(_1a838b14a_ImportInfo{._field_Decl=(*(_34041_decl)), ._field_Path=_3417_path, ._field_LinkPath=(*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1a8381e65_checkAbsPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1a81b6b46_UseDecl>* _37053_decl) {
	jule::Str _3713_modPath = ((_1a8388147_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a83871ac_GetModPath((*(_self_))._field_importer.data);;
	if ((_3713_modPath.len() == 0LL)) {
		_1a8380ace_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1a8381360_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37033_filepath=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3713_modPath; (*it++) = _37033_filepath; __jule_collection; }));
	jule::Bool _37913_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _205375acc_Abs(_37033_filepath);
		_37033_filepath = __jule_assign_result.__jule_result_arg0;
		_37913_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37913_ok))) {
		_1a8380ace_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_21cc858ae_Stat _3863_info = ({
		auto except = static__20537c980_Of(_37033_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a8380ace_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_37053_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21cc85cbb_IsDir(&_3863_info)))) {
		_1a8380ace_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_37053_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37033_filepath;;
}



inline jule::Str _1a8382361_checkStdAbsPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1a81b6b46_UseDecl>* _39956_decl) {
	(_39936_filepath).mut_slice(4LL);;
	_39936_filepath=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20537d123_PathStdlib; (*it++) = _39936_filepath; __jule_collection; }));
	jule::Bool _40213_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _205375acc_Abs(_39936_filepath);
		_39936_filepath = __jule_assign_result.__jule_result_arg0;
		_40213_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40213_ok))) {
		_1a8380ace_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_21cc858ae_Stat _4093_info = ({
		auto except = static__20537c980_Of(_39936_filepath);
		(except.ok()) ? (except.result) : ({{
			_1a8380ace_pushErr(_self_, &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39956_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21cc85cbb_IsDir(&_4093_info)))) {
		_1a8380ace_pushErr(_self_, &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39956_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39936_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1a83826a2_checkImpPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _42234_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4233_path = (*((*((*(_42234_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_2053695e8_HasSuffix(_4233_path, jule::Str::lit("/", 1))) {
		_1a8380ace_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4283_parts = _20536d740_SplitAll(_4233_path, jule::Str::lit("/", 1));;
	if ((_4283_parts.len() == 0LL)) {
		_1a8380ace_pushErr(_self_, &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4283_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4283_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9993223:;
		if (it != expr_end) {
			jule::Str *_43410_part = it;
			{
				if ((((*(_43410_part))).empty() || _1a818aab5_IsIgnoreIdent((*(_43410_part))))) {
					_1a8380ace_pushErr(_self_, &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43410_part)); __jule_collection; }));
			}
			_iter_next_1a9993223:;
			++it;
			goto _iter_begin_1a9993223;
		}
		_iter_end_1a9993223:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1a8382361_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1a8381e65_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	};
	return __jule_func_result;;
}



inline void _1a838295a_assignAlias(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo>* _45233_imp) {
	jule::I64 _4537_i = _20536a693_FindLast((*((*(_45233_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4537_i)++;
	jule::Str _4553_path = (*((*(_45233_imp))))._field_LinkPath.slice(_4537_i);;
	(*((*(_45233_imp))))._field_Alias=_4553_path;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a8382c9b_buildImport(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _45933_decl) {
	if ((*((*(_45933_decl))))._field_Binded) {
		return _1a8381a69_buildCppHeaderImport(_self_.ptr(), _45933_decl);;
	};
	jule::Bool _4633_std;
	jule::Str _4638_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1a83826a2_checkImpPath(_self_, _45933_decl);
		_4633_std = __jule_assign_result.__jule_result_arg0;
		_4638_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4638_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1a838b14a_ImportInfo> _4687_imp = jule::new_ptr<_1a838b14a_ImportInfo>(_1a838b14a_ImportInfo{._field_Decl=(*(_45933_decl)), ._field_Path=_4638_filepath, ._field_LinkPath=(*((*((*(_45933_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45933_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4633_std, ._field_Package=jule::new_ptr<_1a838d8bc_Package>(_1a838d8bc_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45933_decl))))._field_Alias != nullptr)) {
		(*(_4687_imp))._field_Alias=(*(*((*(_45933_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1a8386332_isImplicitImport(_4687_imp)))) {
		_1a838295a_assignAlias(_self_, &(_4687_imp));
	};
	return _4687_imp;;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a83830dc_findUseDecl(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _48628_pkg) {
	return _1a829deb4_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>>((void*)__jule_anon_1a999d816, jule::Ptr<__jule_anon_1a999d816_ctx>::make(__jule_anon_1a999d816_ctx{._48628_pkg=_48628_pkg}).as<jule::Uintptr>(), __jule_anon_1a999d816_ctx_handler));;
}



inline jule::Bool _1a838342d_checkDuplicateUseDecl(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _49442_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a838b14a_ImportInfo> _4957_lpkg = _1a83830dc_findUseDecl(_self_, _49442_pkg);;
	if ((_4957_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a8380ace_pushErr(_self_, &((*((*((*(_49442_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49442_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1a8381360_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1a838376e_getAsLinkPath(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Str _50434_path) {
	_21ca86171_Builder _5057_sb = static__21ca869bd_New(_50434_path.len());;
	if (_205369274_HasPrefix(_50434_path, _20537d123_PathStdlib)) {
		(_50434_path).mut_slice(_20537d123_PathStdlib.len());;
		({
			auto except = _21ca87150_WriteStr(&_5057_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&_5057_sb, _2053703bd_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _21ca87408_WriteByte(&_5057_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
		});
		return _21ca879d0_Str(&_5057_sb);;
	};
	jule::Str _5143_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _205375acc_Abs(((_1a8388147_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a83871ac_GetModPath((*(_self_))._field_importer.data));
		_5143_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50434_path).mut_slice(_5143_root.len());;
	if ((_50434_path[0LL] == 92LLU)) {
		(_50434_path).mut_slice(1LL);;
	};
	({
		auto except = _21ca87408_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&_5057_sb, _2053703bd_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
	});
	return _21ca879d0_Str(&_5057_sb);;
}



inline void _1a8383b8c_pushCycleError(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a83800c8_symBuilder>* _52532_sb, jule::Str _52549_path, _21ca86171_Builder* _52565_message) {
	;
	jule::Str _5273_refersTo = _21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a838376e_getAsLinkPath(_self_, _1a818e910_Dir((*((*((*(_52532_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1a838376e_getAsLinkPath(_self_, _52549_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5313_m = _21ca879d0_Str(_52565_message);;
	({
		auto except = _21ca87150_WriteStr(_52565_message, _205368dab_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_52565_message, _5273_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_52565_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_52565_message, _5313_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
		(except.result);
	});
}



inline void _1a83840aa_pushCrossCycleError(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a83800c8_symBuilder>* _53837_target, jule::Ptr<_1a838b14a_ImportInfo>* _53859_imp, jule::Ptr<_1a81881cd_Token>* _53878_errorToken) {
	_21ca86171_Builder _5397_message = static__21ca869bd_New(32LL);;
	_1a8383b8c_pushCycleError(_self_, &(_self_), (*((*(_53859_imp))))._field_Path, &(_5397_message));
	jule::Ptr<_1a83800c8_symBuilder> _5437_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a83800c8_symBuilder> _5447_old = _self_;;
	while (((*(_5437_owner))._field_owner != nullptr)) {
		{
			_1a8383b8c_pushCycleError(_self_, &((*_5447_old.alloc)._field_owner), _1a818e910_Dir((*((*_5447_old.alloc)._field_table))._field_File.ptr()), &(_5397_message));
			if (((*_5437_owner.alloc)._field_owner == (*(_53837_target)))) {
				_1a8383b8c_pushCycleError(_self_, _53837_target, _1a818e910_Dir((*((*(_5437_owner))._field_table))._field_File), &(_5397_message));
				goto _iter_end_1a99a9954;
			};
			_5447_old=_5437_owner;
			_5437_owner=(*_5437_owner.alloc)._field_owner;
		}
	_iter_next_1a99a9954:;
	}
	_iter_end_1a99a9954:;;
	_1a8380ace_pushErr(_self_, _53878_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21ca879d0_Str(&_5397_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a83844a6_checkImportCycles(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo> _56134_imp, jule::Ptr<_1a81b6b46_UseDecl>* _56153_decl) {
	if (((*(_56134_imp))._field_Path == _1a818e910_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a8380ace_pushErr(_self_, &((*((*(_56153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a838376e_getAsLinkPath(_self_, (*_56134_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a83800c8_symBuilder> _5717_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1a99adddc:;
	if ((_1a818e910_Dir((*((*(_5717_owner))._field_table))._field_File) == (*_56134_imp.alloc)._field_Path)) {
		_1a83840aa_pushCrossCycleError(_self_, &(_5717_owner), &(_56134_imp), &((*((*(_56153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5717_owner))._field_owner != nullptr)) {
		_5717_owner=(*_5717_owner.alloc)._field_owner;
		goto _julec_label_1a99adddc;
	};
	return true;;
}



inline void _1a83848c4_checkPackageAccessibility(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path) {
	if ((((_1a8388147_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a83871ac_GetModPath((*(_self_))._field_importer.data) == (*(_59264_mod)))) {
		return;;
	};
	;
	jule::I64 _5973_i = _205369de0_Find((*(_59275_path)), jule::Str::lit("internal", 8));;
	if ((_5973_i == -1LL)) {
		return;;
	};
	if ((_5973_i == 0LL)) {
		if (((((*(_59275_path)).len() - 8LL) == 0LL) || _205369274_HasPrefix((*(_59275_path)), jule::Str::lit("internal/", 9)))) {
			_1a8380ace_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59275_path)).slice((_5973_i - 1LL)).equal("/internal", 9)) {
		_1a8380ace_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _6153_n = ((_5973_i + 8LL) + 1LL);;
	if (((_6153_n < (*(_59275_path)).len()) && (*(_59275_path)).slice((_5973_i - 1LL), _6153_n).equal("/internal/", 10))) {
		_1a8380ace_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1a8384cc0_importPackage(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a838b14a_ImportInfo>* _62235_imp, jule::Ptr<_1a81b6b46_UseDecl>* _62258_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62235_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a838b14a_ImportInfo> _6277_port = ((_1a8388147_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a838783e_GetImport((*(_self_))._field_importer.data, (*((*(_62235_imp))))._field_Path);;
	if ((_6277_port != nullptr)) {
		(*((*(_62235_imp))))._field_Package=(*_6277_port.alloc)._field_Package;
		(*((*(_62235_imp))))._field_Duplicate=true;
		jule::Str _6324_oldMod = ((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a83871ac_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8386ec0_SetModPath((*_self_.alloc)._field_importer.data, ((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a83874ed_ModById((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_ModId));
		_1a83848c4_checkPackageAccessibility(_self_, _62258_decl, &(_6324_oldMod), &((*_6277_port.alloc)._field_Path));
		((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8386ec0_SetModPath((*_self_.alloc)._field_importer.data, _6324_oldMod);
	} else {
		if ((!(_1a83844a6_checkImportCycles(_self_, (*(_62235_imp)), _62258_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6414_oldMod = ((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a83871ac_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8386ec0_SetModPath((*_self_.alloc)._field_importer.data, _6414_oldMod);
		});;
		if ((*((*(_62235_imp))))._field_Std) {
			((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8386ec0_SetModPath((*_self_.alloc)._field_importer.data, _20537d123_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a819bc91_AST>> _6468_asts;
		jule::Slice<_21ca95427_Log> _64618_errors;
		({
			__jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_assign_result = ((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8387c3a_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_Path, (!((*((*(_62235_imp))))._field_Std)));
			_6468_asts = __jule_assign_result.__jule_result_arg0;
			_64618_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64618_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a83848c4_checkPackageAccessibility(_self_, _62258_decl, &(_6414_oldMod), &((*((*(_62235_imp))))._field_Path));
		{
			auto expr = &(_6468_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a99c0d44:;
			if (it != expr_end) {
				jule::Ptr<_1a819bc91_AST> _65416_ast = *it;
				{
					jule::Ptr<_1a829d997_SymTab> _6559_table = static_cast<jule::Ptr<_1a829d997_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8556942_buildSymbols(&(_65416_ast), &((*_self_.alloc)._field_importer), _self_);
						_6559_table = __jule_assign_result.__jule_result_arg0;
						_64618_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64618_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62235_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62235_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a829d997_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6559_table; __jule_collection; }));
				}
				_iter_next_1a99c0d44:;
				++it;
				goto _iter_begin_1a99c0d44;
			}
			_iter_end_1a99c0d44:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a8385111_importUseDecl(jule::Ptr<_1a83800c8_symBuilder> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _66835_decl) {
	jule::Ptr<_1a838b14a_ImportInfo> _6697_imp = _1a8382c9b_buildImport(_self_, _66835_decl);;
	if ((_6697_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6747_ok = _1a838342d_checkDuplicateUseDecl(_self_, &(_6697_imp));;
	if ((!(_6747_ok))) {
		return nullptr;;
	};
	_6747_ok=_1a8384cc0_importPackage(_self_, &(_6697_imp), _66835_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6697_imp; __jule_collection; }));
	if (_6747_ok) {
		((_1a8388147_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a8387ee3_Imported((*_self_.alloc)._field_importer.data, _6697_imp);
		return _6697_imp;;
	};
	return nullptr;;
}



inline void _1a838530e_importUseDecls(jule::Ptr<_1a83800c8_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99c6773:;
		if (it != expr_end) {
			jule::Ptr<_1a81b6b46_UseDecl> _68815_decl = *it;
			{
				_1a8385111_importUseDecl(_self_, &(_68815_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1a99c6773;
				};
			}
			_iter_next_1a99c6773:;
			++it;
			goto _iter_begin_1a99c6773;
		}
		_iter_end_1a99c6773:;
	};
}



inline void _1a83855b7_appendNode(_1a83800c8_symBuilder* _self_, _1a819cbe8_Node* _69731_node) {
	{
		auto &_match_expr{ (*(_69731_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a99c7c4c:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8350d57_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a837ea12_buildImpl((*(_69731_node))._field_Data.cast_ptr<_1a81ba6a5_Impl>(&__jule_any_type66)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a99c7cb3:;
			{
				jule::Ptr<_1a8534a85_TypeAlias> _7028_ta = _1a837b05d_buildTypeAlias((*(_69731_node))._field_Data.cast_ptr<_1a81b57e3_TypeAliasDecl>(&__jule_any_type51));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a99c7d29:;
			{
				jule::Ptr<_1a81be610_Struct> _7058_srct = _1a837b8ee_buildStruct((*(_69731_node))._field_Data.cast_ptr<_1a81b9808_StructDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81be610_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a99c7d90:;
			{
				jule::Ptr<_1a8297694_Fn> _7088_f = _1a837c59d_buildFunc((*(_69731_node))._field_Data.cast_ptr<_1a81b0986_FnDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a99c7e06:;
			{
				jule::Ptr<_1a82a2da8_Trait> _7118_t = _1a837cdea_buildTrait((*(_69731_node))._field_Data.cast_ptr<_1a81ba045_TraitDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a2da8_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a99c7e6c:;
			{
				jule::Ptr<_1a83cc1ad_Var> _7148_v = _1a837e47e_buildVar((*(_69731_node))._field_Data.cast_ptr<_1a81b1b41_VarDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a99c8720:;
			{
				jule::Ptr<_1a82a555e_Enum> _7178_e = _1a837d978_buildEnum((*(_69731_node))._field_Data.cast_ptr<_1a81b7bad_EnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a555e_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a99c8786:;
			{
				jule::Ptr<_1a82a6c69_TypeEnum> _7208_e = _1a837e1b5_buildTypeEnum((*(_69731_node))._field_Data.cast_ptr<_1a81b8b48_TypeEnumDecl>(&__jule_any_type71));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a6c69_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7208_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1a99c7bd6:;
			{
				_1a8380ace_pushErr(_self_, &((*(_69731_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a99c7b70:;
	};
}



inline void _1a83857b5_appendNodes(_1a83800c8_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99e2371:;
		if (it != expr_end) {
			_1a819cbe8_Node _72815_node = *it;
			{
				_1a83855b7_appendNode(_self_, &(_72815_node));
			}
			_iter_next_1a99e2371:;
			++it;
			goto _iter_begin_1a99e2371;
		}
		_iter_end_1a99e2371:;
	};
}



inline void _1a8385a6d_pushDirectivePass(_1a83800c8_symBuilder* _self_, jule::Ptr<_1a819d116_Directive>* _73338_d) {
	if (((*((*(_73338_d))))._field_Args.len() == 0LL)) {
		_1a8380ace_pushErr(_self_, &((*((*(_73338_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73338_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a81881cd_Token> _7384_arg = (*((*(_73338_d))))._field_Args[1LL];;
		_1a8380ace_pushErr(_self_, &(_7384_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73338_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a81881cd_Token> _7423_arg = (*((*(_73338_d))))._field_Args[0LL];;
	if (((*(_7423_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a8380ace_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7423_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a8380ace_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1a837a623_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a837a623_Pass{._field_Token=(*((*(_73338_d))))._field_Tag, ._field_Text=(*_7423_arg.alloc)._field_Kind.slice(1LL, ((*_7423_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1a8385c6b_appendTopDirectives(_1a83800c8_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99e9a60:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _76015_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76015_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1a99eace7:;
						{
							_1a8385a6d_pushDirectivePass(_self_, &(_76015_d));
						}
					}
					_match_end_1a99eac1a:;
				};
			}
			_iter_next_1a99e9a60:;
			++it;
			goto _iter_begin_1a99e9a60;
		}
		_iter_end_1a99e9a60:;
	};
}



inline void _1a8385e69_build(jule::Ptr<_1a83800c8_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a829d997_SymTab>(_1a829d997_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1a837a623_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a8297694_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a82a2da8_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a82a555e_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a82a6c69_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a8350d57_Impl>>(nullptr)});
	_1a8385c6b_appendTopDirectives(_self_);
	_1a838530e_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a83857b5_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1a838b14a_ImportInfo_eq(_1a838b14a_ImportInfo *_self_, _1a838b14a_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1a838b14a_ImportInfo> _1a838b667_SelectPackage(_1a838b14a_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a838ba63_FindVar(_1a838b14a_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a838890b_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a838be5e_FindTypeAlias(_1a838b14a_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a8388d3a_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a81be610_Struct> _1a838c35a_FindStruct(_1a838b14a_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a83892e1_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a8297694_Fn> _1a838c756_FindFn(_1a838b14a_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a83896dc_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a838ca97_FindTrait(_1a838b14a_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a8389a61_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a82a555e_Enum> _1a838cdd8_FindEnum(_1a838b14a_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a8389dd5_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a838d229_FindTypeEnum(_1a838b14a_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a838d5e2_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1a838a369_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a838d5e2_isLookupable(_1a838b14a_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1a838b14a_ImportInfo> _1a838dd95_SelectPackage(_1a838d8bc_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a838e291_FindVar(_1a838d8bc_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1a838890b_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a838e68c_FindTypeAlias(_1a838d8bc_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1a8388d3a_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1a81be610_Struct> _1a838ea88_FindStruct(_1a838d8bc_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1a83892e1_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1a8297694_Fn> _1a838ee84_FindFn(_1a838d8bc_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1a83896dc_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a83902c5_FindTrait(_1a838d8bc_Package* _self_, jule::Str _31125_ident) {
	return _1a8389a61_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1a82a555e_Enum> _1a8390616_FindEnum(_1a838d8bc_Package* _self_, jule::Str _31724_ident) {
	return _1a8389dd5_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a8390957_FindTypeEnum(_1a838d8bc_Package* _self_, jule::Str _32328_ident) {
	return _1a838a369_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1a8337976_comptimeTypeInfo> _1a83a7d15_pushComptimeTypeInfo(_1a83a7870_commonSemaMeta* _self_, jule::Ptr<_1a8535877_Type>* _21341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a4e488:;
		if (it != expr_end) {
			jule::Ptr<_1a8337976_comptimeTypeInfo> _21415_t2 = *it;
			{
				if ((((*((*(_21415_t2))._field_base))._field_BindIdent == (*((*(_21341_t))))._field_BindIdent) && _1a85360b4_Equal((*(_21415_t2))._field_base, (*(_21341_t))))) {
					return _21415_t2;;
				};
			}
			_iter_next_1a9a4e488:;
			++it;
			goto _iter_begin_1a9a4e488;
		}
		_iter_end_1a9a4e488:;
	};
	jule::Ptr<_1a8337976_comptimeTypeInfo> _2197_t1 = jule::new_ptr<_1a8337976_comptimeTypeInfo>(_1a8337976_comptimeTypeInfo{._field_base=(*(_21341_t))});;
	{ jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2197_t1); };
	return _2197_t1;;
}







inline jule::Ptr<_1a838b14a_ImportInfo> _1a83a8970_SelectPackage(_1a83a8497_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>> _24229_selector) {
	return _1a829deb4_SelectPackage((*(_self_))._field_file.ptr(), _24229_selector);;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a83a8d6b_FindVar(_1a83a8497_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded) {
	jule::Ptr<_1a83cc1ad_Var> _2547_v = _1a838890b_findVarInPackage(&((*(_self_))._field_files), &(_25223_ident), _25235_binded);;
	if ((_2547_v != nullptr)) {
		return _2547_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a83a9267_FindTypeAlias(_1a83a8497_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded) {
	jule::Ptr<_1a8534a85_TypeAlias> _2697_ta = _1a8388d3a_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26729_ident), _26741_binded);;
	if ((_2697_ta != nullptr)) {
		return _2697_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a81be610_Struct> _1a83a9663_FindStruct(_1a83a8497_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded) {
	jule::Ptr<_1a81be610_Struct> _2847_s = _1a83892e1_findStructInPackage(&((*(_self_))._field_files), &(_28226_ident), _28238_binded);;
	if ((_2847_s != nullptr)) {
		return _2847_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8297694_Fn> _1a83a9a5e_FindFn(_1a83a8497_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded) {
	jule::Ptr<_1a8297694_Fn> _2997_f = _1a83896dc_findFnInPackage(&((*(_self_))._field_files), &(_29722_ident), _29734_binded);;
	if ((_2997_f != nullptr)) {
		return _2997_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a83a9da0_FindTrait(_1a83a8497_sema* _self_, jule::Str _31225_ident) {
	jule::Ptr<_1a82a2da8_Trait> _3147_t = _1a8389a61_findTraitInPackage(&((*(_self_))._field_files), &(_31225_ident));;
	if ((_3147_t != nullptr)) {
		return _3147_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a555e_Enum> _1a83aa1e1_FindEnum(_1a83a8497_sema* _self_, jule::Str _32724_ident) {
	jule::Ptr<_1a82a555e_Enum> _3297_e = _1a8389dd5_findEnumInPackage(&((*(_self_))._field_files), &(_32724_ident));;
	if ((_3297_e != nullptr)) {
		return _3297_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a83aa532_FindTypeEnum(_1a83a8497_sema* _self_, jule::Str _34228_ident) {
	jule::Ptr<_1a82a6c69_TypeEnum> _3447_e = _1a838a369_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34228_ident));;
	if ((_3447_e != nullptr)) {
		return _3447_e;;
	};
	return nullptr;;
}



inline jule::Bool _1a83aa93e_isFlag(_1a83a8497_sema* _self_, jule::I64 _35418_flags) {
	return (((*(_self_))._field_flags & _35418_flags) == _35418_flags);;
}



inline jule::Ptr<_1a829d997_SymTab> _1a83aabc5_getCurrentFile(_1a83a8497_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1a83aae7d_setCurrentFile(_1a83a8497_sema* _self_, jule::Ptr<_1a829d997_SymTab> _35734_f) {
	(*(_self_))._field_file=_35734_f;
}



inline void _1a83ab39b_pushErr(_1a83a8497_sema* _self_, jule::Ptr<_1a81881cd_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args) {
	{ jule::Slice<_21ca95427_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a83a6385_compilerErr(&(_35923_token), true, _35945_fmt, _35965_args)); };
}



inline void _1a83ab70e_pushSuggestion(_1a83a8497_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args) {
	{
		_1a83a74a7_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36430_fmt, _36450_args);
	};
}



inline jule::Bool _1a83abb0a_isAccessibleDefine(_1a83a8497_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1a81881cd_Token> _37044_token) {
	if ((_37030_public || ((*(_37044_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3753_selfDir = _1a818e910_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3763_tokenDir = _1a818e910_Dir((*_37044_token.alloc)._field_File.ptr());;
	if ((_3753_selfDir == _3763_tokenDir)) {
		return true;;
	};
	if ((_1a8390d97_isStdPackage(&(_3763_tokenDir), jule::Str::lit("runtime", 7)) && _1a8390d97_isStdPackage(&(_3753_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1a83ac0b1_isDuplicatedIdent(_1a83a8497_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a61b0a:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> *_39410_f = it;
			{
				if (_1a82a234c_isDuplicatedIdent((*(_39410_f)).ptr(), _39329_itself, _39347_ident, _39359_binded)) {
					return true;;
				};
			}
			_iter_next_1a9a61b0a:;
			++it;
			goto _iter_begin_1a9a61b0a;
		}
		_iter_end_1a9a61b0a:;
	};
	return false;;
}



inline void _1a83ac424_checkDirectives(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a819d116_Directive>>* _40237_d, jule::Any _40263_o) {
	_1a83767b7_directiveChecker _4037_dc = _1a83767b7_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a819d116_Directive>>>)(_40237_d)), ._field_o=_40263_o};;
	_1a8378049_check(&_4037_dc);
}



inline jule::Bool _1a83ac8ca_checkGenericQuantity(_1a83a8497_sema* _self_, jule::I64 _41136_required, jule::I64 _41151_given, jule::Ptr<_1a81881cd_Token> _41163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41136_required == 0LL) && (_41151_given > 0LL))) {
			_case_begin_1a9a64811:;
			{
				_1a83ab39b_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41136_required > 0LL) && (_41151_given == 0LL))) {
			_case_begin_1a9a64888:;
			{
				_1a83ab39b_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required < _41151_given)) {
			_case_begin_1a9a64910:;
			{
				_1a83ab39b_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required > _41151_given)) {
			_case_begin_1a9a64987:;
			{
				_1a83ab39b_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a9a64745:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9a64668:;
	};
}



inline jule::Bool _1a83ad90e_isUseAliasDuplication(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _46938_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a6898b:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _47015_imp2 = *it;
			{
				if ((_47015_imp2 == (*(_46938_imp)))) {
					goto _iter_end_1a9a6898b;
				};
				if (((*(_47015_imp2))._field_Alias == (*((*(_46938_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1a9a6898b:;
			++it;
			goto _iter_begin_1a9a6898b;
		}
		_iter_end_1a9a6898b:;
	};
	return false;;
}



inline jule::Bool _1a83adc50_checkAutoAlias(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _48135_imp) {
	if ((*((*(_48135_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4863_valid = _1a83cab18_isValidImpAlias((*((*(_48135_imp))))._field_Alias);;
	if (_4863_valid) {
		if (_1a83ad90e_isUseAliasDuplication(_self_, _48135_imp)) {
			_1a83ab39b_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48135_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1a83ab39b_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48135_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4863_valid;;
}



inline jule::Bool _1a83ae091_checkImport(_1a83a8497_sema* _self_, jule::Ptr<_1a838b14a_ImportInfo>* _49932_imp) {
	if ((*((*(_49932_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49932_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1a818aab5_IsIgnoreIdent((*((*(_49932_imp))))._field_Alias)) {
			_1a83ab39b_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1a83ad90e_isUseAliasDuplication(_self_, _49932_imp)) {
			_1a83ab39b_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49932_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49932_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1a83ab39b_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1a8386332_isImplicitImport((*(_49932_imp))))) && (!(_1a83adc50_checkAutoAlias(_self_, _49932_imp))))) {
		return false;;
	};
	if (((*((*((*(_49932_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49932_imp))))._field_Duplicate))) {
		jule::Ptr<_1a83a8497_sema> _5268_sema = jule::new_ptr<_1a83a8497_sema>(_1a83a8497_sema{._field_errors=jule::Slice<_21ca95427_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a829d997_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a829d997_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a83c82ca_check(_5268_sema, &((*(*((*(_49932_imp))))._field_Package.alloc)._field_Files));
		if (((*_5268_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5268_sema.alloc)._field_errors);;
			(*_5268_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1a83ae28e_checkImports(_1a83a8497_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a78d75:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _54115_file = *it;
			{
				_1a83aae7d_setCurrentFile(_self_, _54115_file);
				{
					auto expr = &((*(_54115_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9a79ae0:;
					if (it != expr_end) {
						jule::Ptr<_1a838b14a_ImportInfo> _54316_imp = *it;
						{
							jule::Bool _5445_ok = _1a83ae091_checkImport(_self_, &(_54316_imp));;
							if ((!(_5445_ok))) {
								return;;
							};
						}
						_iter_next_1a9a79ae0:;
						++it;
						goto _iter_begin_1a9a79ae0;
					}
					_iter_end_1a9a79ae0:;
				};
			}
			_iter_next_1a9a78d75:;
			++it;
			goto _iter_begin_1a9a78d75;
		}
		_iter_end_1a9a78d75:;
	};
}



inline void _1a83ae48c_implFileImpls(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a79e75:;
		if (it != expr_end) {
			jule::Ptr<_1a8350d57_Impl> _55415_imp = *it;
			{
				_1a83be48b_implImpl(_self_, &(_55415_imp));
			}
			_iter_next_1a9a79e75:;
			++it;
			goto _iter_begin_1a9a79e75;
		}
		_iter_end_1a9a79e75:;
	};
}



inline void _1a83ae68a_implImpls(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a7b8b1:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _56015_file = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _56015_file);
				_1a83ae48c_implFileImpls(_self_);
			}
			_iter_next_1a9a7b8b1:;
			++it;
			goto _iter_begin_1a9a7b8b1;
		}
		_iter_end_1a9a7b8b1:;
	};
}



inline void _1a83ae888_checkEnums(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a7c96c:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _56715_file = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _56715_file);
				{
					
					if ((!(_1a83ba8c7_checkEnumDecls(_self_)))) {
						_case_begin_1a9a7d154:;
					}
					else if ((!(_1a83bab5d_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a9a7d72b:;
					}
					_match_end_1a9a7d64e:;
				};
			}
			_iter_next_1a9a7c96c:;
			++it;
			goto _iter_begin_1a9a7c96c;
		}
		_iter_end_1a9a7c96c:;
	};
}



inline void _1a83aea86_checkFileInherits(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a7e551:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _57715_t = *it;
			{
				jule::Bool _5784_ok = _1a83bc522__checkTraitDeclInherits(_self_, &(_57715_t));;
				if ((!(_5784_ok))) {
					return;;
				};
			}
			_iter_next_1a9a7e551:;
			++it;
			goto _iter_begin_1a9a7e551;
		}
		_iter_end_1a9a7e551:;
	};
}



inline void _1a83aec84_checkInherits(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a7eac3:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _58615_file = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _58615_file);
				_1a83aea86_checkFileInherits(_self_);
			}
			_iter_next_1a9a7eac3:;
			++it;
			goto _iter_begin_1a9a7eac3;
		}
		_iter_end_1a9a7eac3:;
	};
}



inline _1a8547c74_typeChecker _1a83b023a_typeChecker(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _59247_generics, jule::Ptr<_1a8546c84_referencer> _5937_referencer) {
	_1a8547c74_typeChecker _5947_tc = _1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=_59232_l, ._field_lookup=_59232_l, ._field_referencer=_5937_referencer, ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59247_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59232_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1a9be3154:;
			{
				jule::Ptr<_1a835cacd_scopeChecker> _6038_hard = _1a8361241_getHardRoot(_59232_l.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
				_5947_tc._field_refers=(*((*(_6038_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1a9be30dd:;
	};
	if (((_5937_referencer != nullptr) && ((*_5937_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5937_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a9be49e6:;
				{
					_5947_tc._field_ownerAlias=(*(_5937_referencer))._field_owner.unsafe_cast_ptr<_1a8534a85_TypeAlias>();
				}
			}
			_match_end_1a9be4980:;
		};
	};
	return _5947_tc;;
}



inline jule::Ptr<_1a8535877_Type> _1a83b079b_buildTypeWithRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6207_generics, jule::Ptr<_1a8546c84_referencer> _62035_referencer) {
	return ({ auto _wrap_copy = _1a83b023a_typeChecker(_self_, _61964_l, _6207_generics, _62035_referencer); _1a855085e_checkDecl(&_wrap_copy, _61941_t); });;
}



inline jule::Bool _1a83b0d0c_checkTypeSymWithRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d088_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6277_generics, jule::Ptr<_1a8546c84_referencer> _62735_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a853d440_checked((*(_62644_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62644_t))))._field_Type=_1a83b079b_buildTypeWithRefers(_self_, &((*((*(_62644_t))))._field_Decl), _62661_l, _6277_generics, _62735_referencer);
	__jule_func_result = _1a853d440_checked((*(_62644_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a834da58_constraintChecker> _1a83b1093_constraintChecker(jule::Ptr<_1a83a8497_sema> _self_) {
	return jule::new_ptr<_1a834da58_constraintChecker>(_1a834da58_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_si=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_et=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1a83b148e_checkTypeSym(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d088_TypeSym>* _64134_t, jule::Trait _64151_l) {
	return _1a83b0d0c_checkTypeSymWithRefers(_self_, _64134_t, _64151_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a8535877_Type> _1a83b1945_checkTypeSymRefers(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1a83790c2_ReferenceStack> _64678_refers) {
	jule::Ptr<_1a8547c74_typeChecker> _6477_tc = jule::new_ptr<_1a8547c74_typeChecker>(_1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=_64663_l, ._field_lookup=_64663_l, ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=_64678_refers, ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a855085e_checkDecl(_6477_tc.ptr(), _64640_t);;
}



inline jule::Ptr<_1a8535877_Type> _1a83b1deb_buildTypeWithGenerics(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _6597_generics, jule::Ptr<_1a83790c2_ReferenceStack> _65935_refers) {
	jule::Ptr<_1a8547c74_typeChecker> _6607_tc = jule::new_ptr<_1a8547c74_typeChecker>(_1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=_65935_refers, ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6597_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a855085e_checkDecl(_6607_tc.ptr(), _65843_t);;
}



inline jule::Ptr<_1a8535877_Type> _1a83b257d_selectType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _67632_t) {
	jule::Ptr<_1a8547c74_typeChecker> _6777_tc = jule::new_ptr<_1a8547c74_typeChecker>(_1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a855085e_checkDecl(_6777_tc.ptr(), _67632_t);;
}



inline jule::Ptr<_1a850489b_eval> _1a83b2a34_evalpd(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1a8535877_Type> _68842_p, jule::Ptr<_1a83cc1ad_Var> _68856_owner) {
	jule::Ptr<_1a850489b_eval> _6897_e = jule::new_ptr<_1a850489b_eval>(_1a850489b_eval{._field_s=_self_, ._field_lookup=_68827_l, ._field_prefix=jule::Ptr<_1a8535877_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_68856_owner, ._field_field=jule::Ptr<_1a81c18ba_FieldIns>(nullptr), ._field_target=_1a8503e2d_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _68827_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1a9c003a3:;
			{
				(*(_6897_e))._field_unsafety=_1a835eeba_isUnsafe(_68827_l.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
			}
		}
		_match_end_1a9c0033c:;
	};
	(*_6897_e.alloc)._field_prefix=_68842_p;
	return _6897_e;;
}



inline jule::Ptr<_1a850489b_eval> _1a83b2e30_evalp(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1a8535877_Type> _70341_p) {
	return _1a83b2a34_evalpd(_self_, _70326_l, _70341_p, nullptr);;
}



inline jule::Ptr<_1a850489b_eval> _1a83b3271_eval(jule::Ptr<_1a83a8497_sema> _self_, jule::Trait _70825_l) {
	return _1a83b2e30_evalp(_self_, _70825_l, nullptr);;
}



inline jule::Bool _1a83b388c_checkAssignType(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1a8535877_Type>* _71254_dest, jule::Ptr<_1a85028cc_Data>* _7138_d, jule::Ptr<_1a81881cd_Token> _71322_errorToken, jule::Ptr<_1a83790c2_ReferenceStack> _71353_refers) {
	if ((*((*(_7138_d))))._field_Decl) {
		_1a83ab39b_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71232_destIsRef) {
		if ((!(_1a85360b4_Equal((*(_71254_dest)), (*((*(_7138_d))))._field_Type)))) {
			_1a83ab39b_pushErr(_self_, _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_71254_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_7138_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1a84e09ec_assignTypeChecker> _7248_atc = jule::new_ptr<_1a84e09ec_assignTypeChecker>(_1a84e09ec_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71254_dest)), ._field_d=(*(_7138_d)), ._field_errorToken=_71322_errorToken, ._field_refers=_71353_refers});;
		jule::Bool _7314_ok = _1a84e19ed_check(_7248_atc.ptr());;
		if ((!(_7314_ok))) {
			return false;;
		};
	};
	if (((!(_1a8503317_IsConst((*(_7138_d)).ptr()))) || (_1a853802d_Prim((*(_71254_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7417_kind = (*(_1a853802d_Prim((*(_71254_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a8325953_IsSigInt(_7417_kind)) {
			_case_begin_1a9c08554:;
			{
				_1a8281a8a_SetI64((*((*(_7138_d))))._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1a8325c61_IsUnsigInt(_7417_kind)) {
			_case_begin_1a9c085dc:;
			{
				_1a8281d43_SetU64((*((*(_7138_d))))._field_Constant.ptr(), _1a828154b_AsU64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1a832636b_IsFloat(_7417_kind)) {
			_case_begin_1a9c08653:;
			{
				_1a828265c_SetF64((*((*(_7138_d))))._field_Constant.ptr(), _1a82817d2_AsF64((*((*(_7138_d))))._field_Constant));
			}
		}
		_match_end_1a9c08499:;
	};
	return true;;
}



inline jule::Bool _1a83b3d43__checkTypeCompatibility(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _75545_dest, jule::Ptr<_1a8535877_Type>* _75563_src, jule::Ptr<_1a81881cd_Token> _7567_errorToken) {
	if (((*(_75563_src)) == nullptr)) {
		return false;;
	};
	if ((_1a8539d54_Tup((*(_75563_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a84ddb71_typeCompatibilityChecker _7647_tcc = _1a84ddb71_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75545_dest)), ._field_src=(*(_75563_src)), ._field_errorToken=_7567_errorToken};;
	return _1a84e036a_check(&_7647_tcc);;
}



inline jule::Bool _1a83b42e9_checkTypeCompatibility(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _77344_dest, jule::Ptr<_1a8535877_Type>* _7748_src, jule::Ptr<_1a81881cd_Token>* _77425_errorToken) {
	if (_1a83b3d43__checkTypeCompatibility(_self_, _77344_dest, _7748_src, (*(_77425_errorToken)))) {
		return true;;
	};
	_1a83ab39b_pushErr(_self_, (*(_77425_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_77344_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_7748_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1a83b4717_pushCompatiblityError(_1a83a8497_sema* _self_, jule::Ptr<_1a8535877_Type>* _78242_dest, jule::Ptr<_1a85028cc_Data>* _78260_src, jule::Ptr<_1a81881cd_Token>* _7838_errorToken) {
	if ((*((*(_78260_src))))._field_untyped) {
		{
			
			if (_1a8282ae1_IsI64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1a9c10979:;
				{
					_1a83ab39b_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a8282d77_IsU64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1a9c10a23:;
				{
					_1a83ab39b_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1a828362a_IsF64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1a9c10a89:;
				{
					_1a83ab39b_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1a9c10847:;
		};
	};
	_1a83ab39b_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_78260_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a83b4bbd_checkTypeCompatibility1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8535877_Type>* _80045_dest, jule::Ptr<_1a85028cc_Data>* _80063_src, jule::Ptr<_1a81881cd_Token>* _8018_errorToken) {
	if (_1a83b3d43__checkTypeCompatibility(_self_, _80045_dest, &((*((*(_80063_src))))._field_Type), (*(_8018_errorToken)))) {
		return true;;
	};
	_1a83b4717_pushCompatiblityError(_self_, _80045_dest, _80063_src, _8018_errorToken);
	return false;;
}



inline jule::Ptr<_1a8535877_Type> _1a83b5174_buildNonGenericType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1a8535877_Type>>* _81644_ignored) {
	jule::Ptr<_1a8547c74_typeChecker> _8177_tc = jule::new_ptr<_1a8547c74_typeChecker>(_1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=(*(_8168_generics)), ._field_ignoredGenerics=_81644_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a855085e_checkDecl(_8177_tc.ptr(), _81541_ast);;
}



inline jule::Bool _1a83b5570_buildFnNonGenericTypes(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns> _82743_f, jule::Slice<jule::Ptr<_1a8535877_Type>>* _82759_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _82811_generics = nullptr;;
	if (_1a8297dd1_IsMethod((*(_82743_f))._field_Decl.ptr())) {
		_82811_generics=jule::append((*(*(_82743_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82743_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82811_generics=(*((*(_82743_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1a83b6719_basicFnEnvironment(_self_, &(_82743_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a83a8497_sema>*>((void*)__jule_anon_1a9c1b237, jule::Ptr<__jule_anon_1a9c1b237_ctx>::make(__jule_anon_1a9c1b237_ctx{._82743_f=_82743_f,._82811_generics=_82811_generics,._82759_ignored=_82759_ignored}).as<jule::Uintptr>(), __jule_anon_1a9c1b237_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1a829a752_FnIns> _1a83b58b1_getTraitCheckFnKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _85041_f) {
	if (((*((*(_85041_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85041_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a829a752_FnIns> _8547_ins = _1a8298ba1_instanceForce((*(_85041_f)));;
	jule::Ptr<_1a8547c74_typeChecker> _8567_tc = jule::new_ptr<_1a8547c74_typeChecker>(_1a8547c74_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8547_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c22639:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _86115_p = *it;
			{
				if ((!(_1a829631e_IsSelf((*(_86115_p))._field_Decl.ptr())))) {
					(*_86115_p.alloc)._field_Type=_1a855085e_checkDecl(_8567_tc.ptr(), &((*((*(*(_86115_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86115_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1a9c22639:;
			++it;
			goto _iter_begin_1a9c22639;
		}
		_iter_end_1a9c22639:;
	};
	if ((!(_1a8297b4a_IsVoid((*(_85041_f)).ptr())))) {
		(*_8547_ins.alloc)._field_Result=_1a855085e_checkDecl(_8567_tc, &((*((*((*((*(_85041_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8547_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8547_ins;;
}



inline jule::Bool _1a83b5d67_checkConstraintsFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _87940_f, jule::Ptr<_1a81881cd_Token>* _87956_et, jule::Ptr<_1a829a752_FnIns> _87979_exist) {
	jule::Ptr<_1a834da58_constraintChecker> _8807_cc = _1a83b1093_constraintChecker(_self_);;
	(*(_8807_cc))._field_et=(*(_87956_et));
	(*_8807_cc.alloc)._field_fi=(*(_87940_f));
	if ((_87979_exist != nullptr)) {
		{
			auto expr = &((*_87979_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9c277b5:;
			if (it != expr_end) {
				jule::I64 _8849_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> _88416_g = *it;
				{
					(*((*((*(_87940_f))))._field_Generics[_8849_i]))._field_Constraint=(*(_88416_g))._field_Constraint;
				}
				_iter_next_1a9c277b5:;
				++it;
				_8849_i++;
				goto _iter_begin_1a9c277b5;
			}
			_iter_end_1a9c277b5:;
		};
	} else {
		(*_8807_cc.alloc)._field_uniq=true;
	};
	return _1a834e9c1_check(_8807_cc);;
}



inline jule::Bool _1a83b631d_checkConstraintsStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _89344_s, jule::Ptr<_1a81881cd_Token>* _89364_et, jule::Ptr<_1a81c246a_StructIns> _89387_exist) {
	jule::Ptr<_1a834da58_constraintChecker> _8947_cc = _1a83b1093_constraintChecker(_self_);;
	(*(_8947_cc))._field_et=(*(_89364_et));
	(*_8947_cc.alloc)._field_si=(*(_89344_s));
	if ((_89387_exist != nullptr)) {
		{
			auto expr = &((*_89387_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9c2a983:;
			if (it != expr_end) {
				jule::I64 _8989_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> _89816_g = *it;
				{
					(*((*((*(_89344_s))))._field_Generics[_8989_i]))._field_Constraint=(*(_89816_g))._field_Constraint;
				}
				_iter_next_1a9c2a983:;
				++it;
				_8989_i++;
				goto _iter_begin_1a9c2a983;
			}
			_iter_end_1a9c2a983:;
		};
	} else {
		(*_8947_cc.alloc)._field_uniq=true;
	};
	return _1a834e9c1_check(_8947_cc);;
}



inline jule::Bool _1a83b6719_basicFnEnvironment(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*> _91051_algo) {
	jule::Ptr<_1a83a8497_sema> _9117_sema = (*((*((*(_91040_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a829d997_SymTab> _9127_old = _1a83aabc5_getCurrentFile(_9117_sema.ptr());;
	jule::Ptr<_1a829d997_SymTab> _9137_file = _1a83a7111_findFile(&((*_9117_sema.alloc)._field_files), &((*((*(*((*(_91040_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9137_file != nullptr)) {
		_1a83aae7d_setCurrentFile(_9117_sema, _9137_file);
	};
	jule::Bool _9183_ok = _91051_algo(&(_9117_sema));;
	if ((_9117_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9117_sema.alloc)._field_errors);
		(*_9117_sema.alloc)._field_errors=nullptr;
	};
	_1a83aae7d_setCurrentFile(_9117_sema, _9127_old);
	return _9183_ok;;
}



inline jule::Bool _1a83b6b15_fnEnvironment(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*> _93046_algo) {
	jule::I64 _9317_size = (*((*(_93035_f))))._field_Generics.len();;
	if ((((*((*(_93035_f))))._field_Decl != nullptr) && ((*(*((*(_93035_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9317_size+=(*(*((*((*(_93035_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _9357_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>::alloc(0LL, _9317_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8534a85_TypeAlias>(nullptr); __jule_collection; });;
	_1a83a6c8c_appendGenericTypeAliases(&(_9357_generics), _93035_f);
	return _1a83b6719_basicFnEnvironment(_self_, _93035_f, jule::__new_closure<jule::Bool,jule::Ptr<_1a83a8497_sema>*>((void*)__jule_anon_1a9c3420b, jule::Ptr<__jule_anon_1a9c3420b_ctx>::make(__jule_anon_1a9c3420b_ctx{._93046_algo=_93046_algo,._9357_generics=_9357_generics}).as<jule::Uintptr>(), __jule_anon_1a9c3420b_ctx_handler));;
}



inline void _1a83b6dbd_checkFnParamKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82995ec_ParamIns>* _94238_p) {
	(*((*((*(_94238_p))))._field_Type))._field_Variadic=(*((*((*(_94238_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94238_p))))._field_Decl.alloc)._field_Reference && (!(_1a8552784_isValidForRef(&((*((*(_94238_p))))._field_Type)))))) {
		_1a83ab39b_pushErr(_self_.ptr(), (*(*((*(_94238_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_94238_p))))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1a83b720e_reloadFnInsTypes(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns> _94937_f) {
	if ((_1a829bc1a_IsBuiltin(_94937_f.ptr()) || _1a829bea1_IsAnon(_94937_f))) {
		return true;;
	};
	return _1a83b6b15_fnEnvironment(_self_, &(_94937_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a83a8497_sema>*,jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>*>((void*)__jule_anon_1a9c389e6, jule::Ptr<__jule_anon_1a9c389e6_ctx>::make(__jule_anon_1a9c389e6_ctx{._94937_f=_94937_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9c389e6_ctx_handler));;
}



inline jule::Bool _1a83b76b5_checkRefValidityForInitExpr(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _98944_leftMut, jule::Ptr<_1a85028cc_Data>* _98964_d, jule::Ptr<_1a81881cd_Token>* _98979_errorToken) {
	if ((!(_1a83a5d57_isValidModelForRef(&((*((*(_98964_d))))._field_Model))))) {
		_1a83ab39b_pushErr(_self_.ptr(), (*(_98979_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98944_leftMut && (!((*((*(_98964_d))))._field_Mutable)))) {
		_1a83ab39b_pushErr(_self_, (*(_98979_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a83b7a06_isMutRiskyStruct(_1a83a8497_sema* _self_, jule::Ptr<_1a81c246a_StructIns>* _100629_s) {
	{
		auto expr = &((*((*(_100629_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c43c21:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> *_100710_f = it;
			{
				if ((((*((*((*(_100710_f))))._field_Decl))._field_Mutable && _1a853725d_Mutable((*(*(_100710_f)).alloc)._field_Type.ptr())) && _1a83abb0a_isAccessibleDefine(_self_, (*(*((*(_100710_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100710_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1a9c43c21:;
			++it;
			goto _iter_begin_1a9c43c21;
		}
		_iter_end_1a9c43c21:;
	};
	return false;;
}



inline jule::Bool _1a83b8122_checkValidityForInitExpr(jule::Ptr<_1a83a8497_sema> _self_, jule::Bool _103341_leftMut, jule::Bool _103356_leftRef, jule::Ptr<_1a8535877_Type>* _10344_leftKind, jule::Ptr<_1a85028cc_Data>* _103426_d, jule::Ptr<_1a81881cd_Token>* _103441_errorToken) {
	if ((_103341_leftMut && (!((*((*(_103426_d))))._field_Mutable)))) {
		if ((_1a853725d_Mutable((*((*(_103426_d))))._field_Type.ptr()) || (*(*((*(_103426_d))))._field_Type.alloc)._field_Variadic)) {
			_1a83ab39b_pushErr(_self_.ptr(), (*(_103441_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_103426_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1a81c246a_StructIns> _10424_s = _1a85395a1_Struct((*((*(_103426_d))))._field_Type);;
		if (((_10424_s != nullptr) && _1a83b7a06_isMutRiskyStruct(_self_, &(_10424_s)))) {
			_1a83ab39b_pushErr(_self_, (*(_103441_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_103426_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103356_leftRef) {
		if ((!(_1a83b76b5_checkRefValidityForInitExpr(_self_, _103341_leftMut, _103426_d, _103441_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a84e09ec_assignTypeChecker> _10537_atc = jule::new_ptr<_1a84e09ec_assignTypeChecker>(_1a84e09ec_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1a8535877_Type>(nullptr), ._field_d=(*(_103426_d)), ._field_errorToken=(*(_103441_errorToken)), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr)});;
	return _1a84e124a_checkValidity(_10537_atc.ptr());;
}



inline jule::Bool _1a83b851d_checkTypeAliasDeclKind(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _106144_ta, jule::Trait _106164_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a829d997_SymTab> _10627_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a83aae7d_setCurrentFile(_self_, _10627_old);
	});;
	if (((*((*(_106144_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a829d997_SymTab> _10678_file = _1a83a7111_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106144_ta))))._field_Token.alloc)._field_File));;
		if ((_10678_file != nullptr)) {
			_1a83aae7d_setCurrentFile(_self_, _10678_file);
		};
	};
	__jule_func_result=_1a83b0d0c_checkTypeSymWithRefers(_self_, &((*((*(_106144_ta))))._field_TypeSym), _106164_l, nullptr, jule::new_ptr<_1a8546c84_referencer>(_1a8546c84_referencer{._field_ident=(*((*(_106144_ta))))._field_Ident, ._field_owner=jule::Any((*(_106144_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106144_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a8538ced_Arr((*((*((*(_106144_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1a8538ced_Arr((*((*((*(_106144_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1a83ab39b_pushErr(_self_, (*((*(*((*(_106144_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a83b8881_checkTypeAliasDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _108440_ta, jule::Trait _108460_l) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_108440_ta))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_108440_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1a83b851d_checkTypeAliasDeclKind(_self_, _108440_ta, _108460_l);
}



inline void _1a83b8b39_checkTypeAliasDeclDup(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8534a85_TypeAlias>* _109243_ta) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_109243_ta))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_109243_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a83ac0b1_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109243_ta))), &((*((*(_109243_ta))))._field_Ident), (*((*(_109243_ta))))._field_Binded)) {
		_1a83ab39b_pushErr(_self_, (*((*(_109243_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109243_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a83b851d_checkTypeAliasDeclKind(_self_, _109243_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
}



inline jule::Bool _1a83b8dc0_checkTypeAliasDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c57806:;
		if (it != expr_end) {
			jule::Ptr<_1a8534a85_TypeAlias> _110515_ta = *it;
			{
				_1a83b8b39_checkTypeAliasDeclDup(_self_, &(_110515_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9c57806:;
			++it;
			goto _iter_begin_1a9c57806;
		}
		_iter_end_1a9c57806:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a9c86846_checkEnumItemsDup(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _111636_items) {
	{
		auto expr = &(_111636_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c870b6:;
		if (it != expr_end) {
			jule::Ptr<_1a82a4a03_EnumItem> *_111710_item = it;
			{
				if (((*((*(_111710_item))))._field_Ident).empty()) {
					goto _iter_next_1a9c870b6;
				} else if (_1a818aab5_IsIgnoreIdent((*((*(_111710_item))))._field_Ident)) {
					_1a83ab39b_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111636_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9c88cee:;
						if (it != expr_end) {
							jule::Ptr<_1a82a4a03_EnumItem> *_112312_citem = it;
							{
								if (((*(_111710_item)) == (*(_112312_citem)))) {
									goto _iter_end_1a9c88cee;
								} else if (((*((*(_111710_item))))._field_Ident == (*((*(_112312_citem))))._field_Ident)) {
									_1a83ab39b_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111710_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1a9c88cee;
								};
							}
							_iter_next_1a9c88cee:;
							++it;
							goto _iter_begin_1a9c88cee;
						}
						_iter_end_1a9c88cee:;
					};
				};
			}
			_iter_next_1a9c870b6:;
			++it;
			goto _iter_begin_1a9c870b6;
		}
		_iter_end_1a9c870b6:;
	};
}

inline void _1a9c949b9_checkEnumItemsDup(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _111636_items) {
	{
		auto expr = &(_111636_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c95239:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6692_TypeEnumItem> *_111710_item = it;
			{
				if (((*((*(_111710_item))))._field_Ident).empty()) {
					goto _iter_next_1a9c95239;
				} else if (_1a818aab5_IsIgnoreIdent((*((*(_111710_item))))._field_Ident)) {
					_1a83ab39b_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111636_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9c96e2d:;
						if (it != expr_end) {
							jule::Ptr<_1a82a6692_TypeEnumItem> *_112312_citem = it;
							{
								if (((*(_111710_item)) == (*(_112312_citem)))) {
									goto _iter_end_1a9c96e2d;
								} else if (((*((*(_111710_item))))._field_Ident == (*((*(_112312_citem))))._field_Ident)) {
									_1a83ab39b_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111710_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1a9c96e2d;
								};
							}
							_iter_next_1a9c96e2d:;
							++it;
							goto _iter_begin_1a9c96e2d;
						}
						_iter_end_1a9c96e2d:;
					};
				};
			}
			_iter_next_1a9c95239:;
			++it;
			goto _iter_begin_1a9c95239;
		}
		_iter_end_1a9c95239:;
	};
}



inline void _1a83b9431_checkEnumItemsStr(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _113639_e) {
	jule::Ptr<_1a850489b_eval> _11377_eval = _1a83b3271_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113639_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c59594:;
		if (it != expr_end) {
			jule::Ptr<_1a82a4a03_EnumItem> _113815_item = *it;
			{
				if (_1a82a4dcc_AutoExpr(_113815_item.ptr())) {
					(*_113815_item.alloc)._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e8ac_NewStr((*_113815_item.alloc)._field_Ident)})});
					(*((*((*_113815_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113815_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1a85028cc_Data> _11479_d = _1a8523689_evalExpr(_11377_eval, (*((*(_113815_item))._field_Value))._field_Expr);;
					if ((_11479_d == nullptr)) {
						goto _iter_next_1a9c59594;
					};
					if ((!(_1a8503317_IsConst(_11479_d.ptr())))) {
						_1a83ab39b_pushErr(_self_, (*((*(*(_113815_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1a83790c2_ReferenceStack> _11569_refers = static_cast<jule::Ptr<_1a83790c2_ReferenceStack>>(nullptr);;
					_1a83b388c_checkAssignType(_self_, false, &((*((*((*(_113639_e))))._field_TypeSym))._field_Type), &(_11479_d), (*_113815_item.alloc)._field_Token, _11569_refers);
					(*(*(_113815_item))._field_Value.alloc)._field_Data=_11479_d;
				};
			}
			_iter_next_1a9c59594:;
			++it;
			goto _iter_begin_1a9c59594;
		}
		_iter_end_1a9c59594:;
	};
}



inline void _1a9c65825_checkEnumItemInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a850489b_eval>* _116343_eval, jule::Ptr<_1a82a555e_Enum>* _116361_e, jule::Ptr<_1a853d990_Prim>* _116372_prim, jule::Ptr<_1a82a4a03_EnumItem>* _116390_item, jule::U64* _1163112_n) {
	if (_1a82a4dcc_AutoExpr((*(_116390_item)).ptr())) {
		(*((*(_116390_item))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		{
			
{
				_case_begin_1a9c67c12:;
				{
					(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Constant=static__1a827e329_NewU64((*(_1163112_n)));
				}
			}
			_match_end_1a9c685c5:;
		};
		(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116390_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a85028cc_Data> _11788_d = _1a8523689_evalExpr((*(_116343_eval)), (*((*((*(_116390_item))))._field_Value))._field_Expr);;
		if ((_11788_d == nullptr)) {
			return;;
		};
		if ((!(_1a8503317_IsConst(_11788_d.ptr())))) {
			_1a83ab39b_pushErr(_self_.ptr(), (*((*(*((*(_116390_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a83790c2_ReferenceStack> _11858_refers = static_cast<jule::Ptr<_1a83790c2_ReferenceStack>>(nullptr);;
		_1a83b388c_checkAssignType(_self_, false, &((*((*((*(_116361_e))))._field_TypeSym))._field_Type), &(_11788_d), (*((*(_116390_item))))._field_Token, _11858_refers);
		(*(*((*(_116390_item))))._field_Value.alloc)._field_Data=_11788_d;
		{
			
{
				_case_begin_1a9c6c783:;
				{
					(*(_1163112_n))=_1a828077b_ReadU64((*((*(*((*(_116390_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a9c6daa3:;
		};
	};
}

inline void _1a9c76380_checkEnumItemInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a850489b_eval>* _116343_eval, jule::Ptr<_1a82a555e_Enum>* _116361_e, jule::Ptr<_1a853d990_Prim>* _116372_prim, jule::Ptr<_1a82a4a03_EnumItem>* _116390_item, jule::I64* _1163112_n) {
	if (_1a82a4dcc_AutoExpr((*(_116390_item)).ptr())) {
		(*((*(_116390_item))))._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})});
		{
			
{
				_case_begin_1a9c79152:;
				{
					(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Constant=static__1a827e0a4_NewI64((*(_1163112_n)));
				}
			}
			_match_end_1a9c790db:;
		};
		(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116390_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1a85028cc_Data> _11788_d = _1a8523689_evalExpr((*(_116343_eval)), (*((*((*(_116390_item))))._field_Value))._field_Expr);;
		if ((_11788_d == nullptr)) {
			return;;
		};
		if ((!(_1a8503317_IsConst(_11788_d.ptr())))) {
			_1a83ab39b_pushErr(_self_.ptr(), (*((*(*((*(_116390_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a83790c2_ReferenceStack> _11858_refers = static_cast<jule::Ptr<_1a83790c2_ReferenceStack>>(nullptr);;
		_1a83b388c_checkAssignType(_self_, false, &((*((*((*(_116361_e))))._field_TypeSym))._field_Type), &(_11788_d), (*((*(_116390_item))))._field_Token, _11858_refers);
		(*(*((*(_116390_item))))._field_Value.alloc)._field_Data=_11788_d;
		{
			
{
				_case_begin_1a9c7e7c8:;
				{
					(*(_1163112_n))=_1a82804e5_ReadI64((*((*(*((*(_116390_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a9c7e751:;
		};
	};
}



inline void _1a9c61986_checkEnumItemsInt1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d990_Prim>* _119941_prim, jule::Ptr<_1a82a555e_Enum>* _119959_e) {
	jule::U64 _12007_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1a9c6368b:;
			{
				_12007_max=_1a8324259_MaxU(_1a853dd14_Str((*(_119941_prim)).ptr()));
			}
		}
		_match_end_1a9c63801:;
	};
	jule::Ptr<_1a850489b_eval> _12107_eval = _1a83b3271_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
	jule::U64 _12117_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a82a4a03_EnumItem> _12127_first = (*((*(_119959_e))))._field_Items[0LL];;
	_1a9c65825_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_12127_first), &(_12117_n));
	if (((*((*(_12127_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a9c62eb5:;
				{
					_12117_n=_1a828154b_AsU64((*(*((*(_12127_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a9c6e378:;
		};
	};
	{
		auto expr = (*((*(_119959_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9c6a30d:;
		if (it != expr_end) {
			jule::Ptr<_1a82a4a03_EnumItem> _122415_item = *it;
			{
				if (((_1a82a4dcc_AutoExpr(_122415_item.ptr()) && (_12117_n > 0LLU)) && ((jule::U64)(_12007_max - _12117_n) <= 0LLU))) {
					_1a83ab39b_pushErr(_self_, (*_122415_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1a9c6a30d;
				};
				(_12117_n)++;
				_1a9c65825_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_122415_item), &(_12117_n));
			}
			_iter_next_1a9c6a30d:;
			++it;
			goto _iter_begin_1a9c6a30d;
		}
		_iter_end_1a9c6a30d:;
	};
}

inline void _1a9c61c61_checkEnumItemsInt1(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a853d990_Prim>* _119941_prim, jule::Ptr<_1a82a555e_Enum>* _119959_e) {
	jule::I64 _12007_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1a9c7423a:;
			{
				_12007_max=_1a8323e90_MaxI(_1a853dd14_Str((*(_119941_prim)).ptr()));
			}
		}
		_match_end_1a9c741c4:;
	};
	jule::Ptr<_1a850489b_eval> _12107_eval = _1a83b3271_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
	jule::I64 _12117_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a82a4a03_EnumItem> _12127_first = (*((*(_119959_e))))._field_Items[0LL];;
	_1a9c76380_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_12127_first), &(_12117_n));
	if (((*((*(_12127_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a9c76c43:;
				{
					_12117_n=_1a82812b5_AsI64((*(*((*(_12127_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a9c7bc7b:;
		};
	};
	{
		auto expr = (*((*(_119959_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9c81610:;
		if (it != expr_end) {
			jule::Ptr<_1a82a4a03_EnumItem> _122415_item = *it;
			{
				if (((_1a82a4dcc_AutoExpr(_122415_item.ptr()) && (_12117_n > 0LL)) && ((_12007_max - _12117_n) <= 0LL))) {
					_1a83ab39b_pushErr(_self_, (*_122415_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1a9c81610;
				};
				(_12117_n)++;
				_1a9c76380_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_122415_item), &(_12117_n));
			}
			_iter_next_1a9c81610:;
			++it;
			goto _iter_begin_1a9c81610;
		}
		_iter_end_1a9c81610:;
	};
}



inline void _1a83ba0d0_checkEnumItemsInt(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _123439_e) {
	jule::Ptr<_1a853d990_Prim> _12353_prim = _1a853802d_Prim((*((*((*(_123439_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1a8325953_IsSigInt((*(_12353_prim))._field_Kind)) {
			_case_begin_1a9c66826:;
			{
				_1a9c61c61_checkEnumItemsInt1(_self_, &(_12353_prim), _123439_e);
			}
		}
		else {
			_case_begin_1a9c611d3:;
			{
				_1a9c61986_checkEnumItemsInt1(_self_, &(_12353_prim), _123439_e);
			}
		}
		_match_end_1a9c6115b:;
	};
}



inline void _1a83ba388_checkEnumDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a555e_Enum>* _124435_e) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_124435_e))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a83ac0b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124435_e))), &((*((*(_124435_e))))._field_Ident), false)) {
		_1a83ab39b_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124435_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124435_e))))._field_Items.len() == 0LL)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124435_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a9c86846_checkEnumItemsDup(_self_, (*((*(_124435_e))))._field_Items);
	if (((*((*(_124435_e))))._field_TypeSym != nullptr)) {
		if ((!(_1a83b148e_checkTypeSym(_self_, &((*((*(_124435_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124435_e))))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1a853d990_Prim> _12687_t = _1a853802d_Prim((*((*((*(_124435_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12687_t == nullptr)) {
		_1a83ab39b_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a8541e5a_IsStr(_12687_t.ptr())) {
			_case_begin_1a9c8e134:;
			{
				_1a83b9431_checkEnumItemsStr(_self_, _124435_e);
			}
		}
		else if (_1a832602a_IsInt(_1a853dd14_Str(_12687_t.ptr()))) {
			_case_begin_1a9c8dd15:;
			{
				_1a83ba0d0_checkEnumItemsInt(_self_, _124435_e);
			}
		}
		else {
			_case_begin_1a9c8d1cc:;
			{
				_1a83ab39b_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9c8d2ba:;
	};
}



inline void _1a83ba641_checkTypeEnumDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a6c69_TypeEnum>* _128539_e) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_128539_e))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a83ac0b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128539_e))), &((*((*(_128539_e))))._field_Ident), false)) {
		_1a83ab39b_pushErr(_self_, (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128539_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128539_e))))._field_Items.len() == 0LL)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128539_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1a9c949b9_checkEnumItemsDup(_self_, (*((*(_128539_e))))._field_Items);
	{
		auto expr = &((*((*(_128539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c952b1:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6692_TypeEnumItem> _129915_item = *it;
			{
				if (((*(_129915_item))._field_TypeSym == nullptr)) {
					_1a83ab39b_pushErr(_self_, (*_129915_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1a9c952b1;
				};
				jule::Bool _13044_ok = _1a83b148e_checkTypeSym(_self_, &((*_129915_item.alloc)._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
				if ((!(_13044_ok))) {
					goto _iter_next_1a9c952b1;
				};
				jule::Ptr<_1a853d990_Prim> _13084_p = _1a853802d_Prim((*((*_129915_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13084_p != nullptr) && _1a85421e1_IsAny(_13084_p))) {
					_1a83ab39b_pushErr(_self_, (*_129915_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a9c952b1:;
			++it;
			goto _iter_begin_1a9c952b1;
		}
		_iter_end_1a9c952b1:;
	};
	if (((*((*(_128539_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a82a6692_TypeEnumItem> _13148_item = (*((*(_128539_e))))._field_Items[0LL];;
		_1a8535877_Type _13154_tk = _1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128539_e)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)};;
		if ((((*((*(_13148_item))._field_TypeSym))._field_Type != nullptr) && _1a85360b4_Equal((*((*(_13148_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1a8535877_Type>)((&(_13154_tk))))))) {
			_1a83ab39b_pushErr(_self_, (*_13148_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a82a70dd_Str((*(_128539_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1a83ba8c7_checkEnumDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ca1575:;
		if (it != expr_end) {
			jule::Ptr<_1a82a555e_Enum> _132615_e = *it;
			{
				_1a83ba388_checkEnumDecl(_self_, &(_132615_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9ca1575:;
			++it;
			goto _iter_begin_1a9ca1575;
		}
		_iter_end_1a9ca1575:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a83bab5d_checkTypeEnumDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ca2c4c:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6c69_TypeEnum> _133815_e = *it;
			{
				_1a83ba641_checkTypeEnumDecl(_self_, &(_133815_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9ca2c4c:;
			++it;
			goto _iter_begin_1a9ca2c4c;
		}
		_iter_end_1a9ca2c4c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a83bae9e_checkDeclGenerics(_1a83a8497_sema* _self_, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _134834_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134834_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ca4226:;
		if (it != expr_end) {
			jule::I64 _13507_i = it - expr->begin();
			jule::Ptr<_1a81aae04_GenericDecl> *_135010_g = it;
			{
				if (_1a818aab5_IsIgnoreIdent((*((*(_135010_g))))._field_Ident)) {
					_1a83ab39b_pushErr(_self_, (*(*(_135010_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a9ca4226;
				};
				_julec_label_1a9ca5304:;
				{
					auto expr = _134834_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9ca5cd8:;
					if (it != expr_end) {
						jule::I64 _13598_j = it - expr->begin();
						jule::Ptr<_1a81aae04_GenericDecl> *_135911_ct = it;
						{
							{
								
								if ((_13598_j >= _13507_i)) {
									_case_begin_1a9ca6943:;
									{
										goto _iter_end_1a9ca5cd8;
									}
								}
								else if (((*(*(_135010_g)).alloc)._field_Ident == (*((*(_135911_ct))))._field_Ident)) {
									_case_begin_1a9ca69cb:;
									{
										_1a83ab39b_pushErr(_self_, (*(*(_135010_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_135010_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a9ca5cd8;
									}
								}
								_match_end_1a9ca6833:;
							};
						}
						_iter_next_1a9ca5cd8:;
						++it;
						_13598_j++;
						goto _iter_begin_1a9ca5cd8;
					}
					_iter_end_1a9ca5cd8:;
				};
			}
			_iter_next_1a9ca4226:;
			++it;
			_13507_i++;
			goto _iter_begin_1a9ca4226;
		}
		_iter_end_1a9ca4226:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83bb2e0_checkFnDeclParamsDup(_1a83a8497_sema* _self_, jule::Ptr<_1a8297694_Fn>* _137537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1a671453b:;
	{
		auto expr = &((*((*(_137537_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a671488d:;
		if (it != expr_end) {
			jule::I64 _13787_i = it - expr->begin();
			jule::Ptr<_1a8295bc0_Param> *_137810_p = it;
			{
				{
					auto expr = &((*((*(_137537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6715619:;
					if (it != expr_end) {
						jule::Ptr<_1a81aae04_GenericDecl> *_138011_g = it;
						{
							if (((*((*(_137810_p))))._field_Ident == (*((*(_138011_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a83ab39b_pushErr(_self_, (*(*(_137810_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137810_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1a671488d;
							};
						}
						_iter_next_1a6715619:;
						++it;
						goto _iter_begin_1a6715619;
					}
					_iter_end_1a6715619:;
				};
				_julec_label_1a67176a4:;
				{
					auto expr = &((*((*(_137537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6715ae2:;
					if (it != expr_end) {
						jule::I64 _13908_j = it - expr->begin();
						jule::Ptr<_1a8295bc0_Param> *_139011_jp = it;
						{
							{
								
								if ((_13908_j >= _13787_i)) {
									_case_begin_1a6718265:;
									{
										goto _iter_end_1a6715ae2;
									}
								}
								else if (_1a818aab5_IsIgnoreIdent((*(*(_137810_p)).alloc)._field_Ident) || _1a818aab5_IsIgnoreIdent((*((*(_139011_jp))))._field_Ident) || _1a818ad7e_IsAnonIdent((*(*(_137810_p)).alloc)._field_Ident) || _1a818ad7e_IsAnonIdent((*(*(_139011_jp)).alloc)._field_Ident)) {
									_case_begin_1a67182ed:;
									{
										goto _iter_end_1a6715ae2;
									}
								}
								else if (((*(*(_137810_p)).alloc)._field_Ident == (*((*(_139011_jp))))._field_Ident)) {
									_case_begin_1a6718364:;
									{
										__jule_func_result=false;
										_1a83ab39b_pushErr(_self_, (*(*(_137810_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137810_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1a671488d;
									}
								}
								_match_end_1a6718111:;
							};
						}
						_iter_next_1a6715ae2:;
						++it;
						_13908_j++;
						goto _iter_begin_1a6715ae2;
					}
					_iter_end_1a6715ae2:;
				};
			}
			_iter_next_1a671488d:;
			++it;
			_13787_i++;
			goto _iter_begin_1a671488d;
		}
		_iter_end_1a671488d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83bb631_checkFnDeclResultDup(_1a83a8497_sema* _self_, jule::Ptr<_1a8297694_Fn>* _141237_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a8297b4a_IsVoid((*(_141237_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141237_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a671b6ca:;
		if (it != expr_end) {
			jule::I64 _14197_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> *_141910_v = it;
			{
				if ((_1a818aab5_IsIgnoreIdent((*((*(_141910_v))))._field_Kind) || _1a818ad7e_IsAnonIdent((*(*(_141910_v)).alloc)._field_Kind))) {
					goto _iter_next_1a671b6ca;
				};
				{
					auto expr = &((*((*(_141237_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a671cd3b:;
					if (it != expr_end) {
						jule::Ptr<_1a81aae04_GenericDecl> *_142411_g = it;
						{
							if (((*(*(_141910_v)).alloc)._field_Kind == (*((*(_142411_g))))._field_Ident)) {
								goto _julec_label_1a671c269;
							};
						}
						_iter_next_1a671cd3b:;
						++it;
						goto _iter_begin_1a671cd3b;
					}
					_iter_end_1a671cd3b:;
				};
				{
					auto expr = &((*((*(_141237_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a671d215:;
					if (it != expr_end) {
						jule::Ptr<_1a8295bc0_Param> *_143011_p = it;
						{
							if (((*(*(_141910_v)).alloc)._field_Kind == (*((*(_143011_p))))._field_Ident)) {
								goto _julec_label_1a671c269;
							};
						}
						_iter_next_1a671d215:;
						++it;
						goto _iter_begin_1a671d215;
					}
					_iter_end_1a671d215:;
				};
				_julec_label_1a671e942:;
				{
					auto expr = &((*((*((*(_141237_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a671ecb6:;
					if (it != expr_end) {
						jule::I64 _14388_j = it - expr->begin();
						jule::Ptr<_1a81881cd_Token> *_143811_jv = it;
						{
							{
								
								if ((_14388_j >= _14197_i)) {
									_case_begin_1a67208cc:;
									{
										goto _iter_end_1a671ecb6;
									}
								}
								else if (((*((*(_143811_jv))))._field_Kind == (*(*(_141910_v)).alloc)._field_Kind)) {
									_case_begin_1a6720965:;
									{
										goto _julec_label_1a671c269;
									}
								}
								_match_end_1a67207bc:;
							};
						}
						_iter_next_1a671ecb6:;
						++it;
						_14388_j++;
						goto _iter_begin_1a671ecb6;
					}
					_iter_end_1a671ecb6:;
				};
				goto _iter_next_1a671b6ca;
				_julec_label_1a671c269:;
				_1a83ab39b_pushErr(_self_, (*(_141910_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141910_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a671b6ca:;
			++it;
			_14197_i++;
			goto _iter_begin_1a671b6ca;
		}
		_iter_end_1a671b6ca:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83bb972_checkFnVariadicParam(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _145742_f) {
	if (((*((*(_145742_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a8295bc0_Param> _14617_param = (*((*(_145742_f))))._field_Params[((*((*(_145742_f))))._field_Params.len() - 1LL)];;
	if (((*(_14617_param))._field_Variadic && (*_14617_param.alloc)._field_Reference)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*_14617_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a83bbc2a_checkFnDeclPrototype(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _147042_f) {
	if (((*((*(_147042_f))))._field_Exceptional && (*((*(_147042_f))))._field_Binded)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_147042_f))))._field_Exceptional) {
		if (_1a8298167_IsEntryPoint((*(_147042_f)).ptr())) {
			_1a83ab39b_pushErr(_self_, (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1a82983ed_IsInit((*(_147042_f)).ptr())) {
			_1a83ab39b_pushErr(_self_, (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a83bae9e_checkDeclGenerics(_self_, &((*((*(_147042_f))))._field_Generics))))) {
			_case_begin_1a672761a:;
		}
		else if ((!(_1a83bb2e0_checkFnDeclParamsDup(_self_, _147042_f)))) {
			_case_begin_1a6727681:;
		}
		else if ((!(_1a83bb631_checkFnDeclResultDup(_self_, _147042_f)))) {
			_case_begin_1a67276e7:;
		}
		else if ((!(_1a83bb972_checkFnVariadicParam(_self_, _147042_f)))) {
			_case_begin_1a672775d:;
		}
		_match_end_1a672586b:;
	};
}



inline jule::Bool _1a83bc1d1_catchTraitInheritCycle(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait> _149239_t1, jule::Ptr<_1a82a2da8_Trait> _149255_t2, _21ca86171_Builder* _149272_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149255_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6729ce3:;
		if (it != expr_end) {
			jule::Ptr<_1a853d088_TypeSym> _149415_i = *it;
			{
				if (((*(_149415_i))._field_Type == nullptr)) {
					goto _iter_next_1a6729ce3;
				};
				jule::Ptr<_1a82a2da8_Trait> _14988_t3 = _1a8539837_Trait((*_149415_i.alloc)._field_Type.ptr());;
				if ((_149239_t1 == _14988_t3)) {
					_1a83c1e61_pushCycleError(_self_.ptr(), &((*(_149255_t2))._field_Ident), &((*(_14988_t3))._field_Ident), _149272_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a83bc1d1_catchTraitInheritCycle(_self_, _149239_t1, _14988_t3, _149272_message)))) {
					_1a83c1e61_pushCycleError(_self_, &((*_149255_t2.alloc)._field_Ident), &((*_14988_t3.alloc)._field_Ident), _149272_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a6729ce3:;
			++it;
			goto _iter_begin_1a6729ce3;
		}
		_iter_end_1a6729ce3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83bc522__checkTraitDeclInherits(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _151145_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151145_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a672d5aa:;
		if (it != expr_end) {
			jule::I64 _15138_i = it - expr->begin();
			jule::Ptr<_1a853d088_TypeSym> _151315_it = *it;
			{
				if ((!(_1a83b148e_checkTypeSym(_self_, &(_151315_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1a672d5aa;
				};
				jule::Ptr<_1a82a2da8_Trait> _15188_t2 = _1a8539837_Trait((*(_151315_it))._field_Type.ptr());;
				if ((_15188_t2 == nullptr)) {
					_1a83ab39b_pushErr(_self_, (*((*_151315_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151145_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_151315_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a672d5aa;
				};
				{
					auto expr = &((*((*(_151145_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a67304ad:;
					if (it != expr_end) {
						jule::I64 _15248_j = it - expr->begin();
						jule::Ptr<_1a853d088_TypeSym> _152411_it2 = *it;
						{
							if ((_15248_j >= _15138_i)) {
								goto _iter_end_1a67304ad;
							};
							if ((((*(_152411_it2))._field_Type != nullptr) && _1a85360b4_Equal((*(_151315_it))._field_Type, (*_152411_it2.alloc)._field_Type))) {
								_1a83ab39b_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15188_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1a67304ad;
							};
						}
						_iter_next_1a67304ad:;
						++it;
						_15248_j++;
						goto _iter_begin_1a67304ad;
					}
					_iter_end_1a67304ad:;
				};
				if (((*(_151145_t)) == _15188_t2)) {
					_1a83ab39b_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151145_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_21ca86171_Builder _15389_message = static__21ca869bd_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a83bc1d1_catchTraitInheritCycle(_self_, (*(_151145_t)), _15188_t2, &(_15389_message)));
					if ((_21ca87e64_Len(&_15389_message) > 0LL)) {
						jule::Str _154110_errMsg = _21ca879d0_Str(&_15389_message);;
						_21ca87bcd_Clear(&_15389_message);
						_1a83c1e61_pushCycleError(_self_, &((*((*(_151145_t))))._field_Ident), &((*(_15188_t2))._field_Ident), &(_15389_message));
						_154110_errMsg+=_21ca879d0_Str(&_15389_message);
						_1a83ab39b_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154110_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1a672d5aa:;
			++it;
			_15138_i++;
			goto _iter_begin_1a672d5aa;
		}
		_iter_end_1a672d5aa:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a83bc7ca_checkTraitDeclInherits(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _155244_t) {
	{
		auto expr = &((*((*(_155244_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a672dd6e:;
		if (it != expr_end) {
			jule::I64 _15538_i = it - expr->begin();
			jule::Ptr<_1a853d088_TypeSym> _155315_it = *it;
			{
				jule::Ptr<_1a82a2da8_Trait> _15548_t1 = _1a8539837_Trait((*(_155315_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_155244_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9d55728:;
					if (it != expr_end) {
						jule::I64 _15559_j = it - expr->begin();
						jule::Ptr<_1a853d088_TypeSym> _155516_it2 = *it;
						{
							if ((_15559_j == _15538_i)) {
								goto _iter_next_1a9d55728;
							};
							jule::Ptr<_1a82a2da8_Trait> _15599_t2 = _1a8539837_Trait((*(_155516_it2))._field_Type);;
							{
								auto expr = &((*(_15548_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9d57054:;
								if (it != expr_end) {
									jule::Ptr<_1a8297694_Fn> _156017_t1m = *it;
									{
										jule::Ptr<_1a8297694_Fn> _156110_t2m = _1a82a3a8a_FindMethod(_15599_t2.ptr(), (*(_156017_t1m))._field_Ident);;
										if ((_156110_t2m == nullptr)) {
											goto _iter_next_1a9d57054;
										};
										jule::Ptr<_1a829a752_FnIns> _15656_t1f = _1a83b58b1_getTraitCheckFnKind(_self_, &(_156017_t1m));;
										jule::Ptr<_1a829a752_FnIns> _15666_t2f = _1a83b58b1_getTraitCheckFnKind(_self_, &(_156110_t2m));;
										if ((!(_1a829b6ed_equalTrait(_15656_t1f, &(_15666_t2f))))) {
											_1a83ab39b_pushErr(_self_, (*((*_155315_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155244_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15599_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a829c633_GetKindStr(_15656_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1a829c633_GetKindStr(_15666_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1a9d57054:;
									++it;
									goto _iter_begin_1a9d57054;
								}
								_iter_end_1a9d57054:;
							};
						}
						_iter_next_1a9d55728:;
						++it;
						_15559_j++;
						goto _iter_begin_1a9d55728;
					}
					_iter_end_1a9d55728:;
				};
			}
			_iter_next_1a672dd6e:;
			++it;
			_15538_i++;
			goto _iter_begin_1a672dd6e;
		}
		_iter_end_1a672dd6e:;
	};
}



inline void _1a83bca83_checkTraitDeclMethod(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _157742_f) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_157742_f))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_157742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a818ad7e_IsAnonIdent((*((*(_157742_f))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_157742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157742_f))))._field_sema=_self_;
	_1a83bbc2a_checkFnDeclPrototype(_self_, _157742_f);
	jule::Ptr<_1a829a752_FnIns> _15857_ins = _1a8298e37_instance((*(_157742_f)));;
	_1a83b720e_reloadFnInsTypes(_self_, _15857_ins);
	(*(_15857_ins))._field_reloaded=true;
	_1a8299245_appendInstance((*(_157742_f)).ptr(), &(_15857_ins));
}



inline void _1a83bcd3b_checkTraitDeclMethods(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _159143_t) {
	{
		auto expr = &((*((*(_159143_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d5e6cc:;
		if (it != expr_end) {
			jule::I64 _15928_i = it - expr->begin();
			jule::Ptr<_1a8297694_Fn> _159215_f = *it;
			{
				_1a83bca83_checkTraitDeclMethod(_self_, &(_159215_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a82a421c_findMethodInherit((*(_159143_t)).ptr(), &((*(_159215_f))._field_Ident)) != nullptr)) {
					_1a83ab39b_pushErr(_self_, (*_159215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1a9d5e6cc;
				};
				_julec_label_1a9d625d1:;
				{
					auto expr = &((*((*(_159143_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9d62a21:;
					if (it != expr_end) {
						jule::I64 _16088_j = it - expr->begin();
						jule::Ptr<_1a8297694_Fn> _160811_jf = *it;
						{
							{
								
								if ((_16088_j >= _15928_i)) {
									_case_begin_1a9d63637:;
									{
										goto _iter_end_1a9d62a21;
									}
								}
								else if (((*_159215_f.alloc)._field_Ident == (*(_160811_jf))._field_Ident)) {
									_case_begin_1a9d636c0:;
									{
										_1a83ab39b_pushErr(_self_, (*_159215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1a9d62a21;
									}
								}
								_match_end_1a9d63527:;
							};
						}
						_iter_next_1a9d62a21:;
						++it;
						_16088_j++;
						goto _iter_begin_1a9d62a21;
					}
					_iter_end_1a9d62a21:;
				};
			}
			_iter_next_1a9d5e6cc:;
			++it;
			_15928_i++;
			goto _iter_begin_1a9d5e6cc;
		}
		_iter_end_1a9d5e6cc:;
	};
}



inline void _1a83bd0e4_checkTraitDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a82a2da8_Trait>* _162736_t) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_162736_t))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_162736_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a83ac0b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162736_t))), &((*((*(_162736_t))))._field_Ident), false)) {
		_1a83ab39b_pushErr(_self_, (*((*(_162736_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162736_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a83bc7ca_checkTraitDeclInherits(_self_, _162736_t);
	_1a83bcd3b_checkTraitDeclMethods(_self_, _162736_t);
}



inline jule::Bool _1a83bd37a_checkTraitDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d687d5:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _164115_t = *it;
			{
				_1a83bd0e4_checkTraitDecl(_self_, &(_164115_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9d687d5:;
			++it;
			goto _iter_begin_1a9d687d5;
		}
		_iter_end_1a9d687d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a83bd776_checkTraitImplMethods(_1a83a8497_sema* _self_, jule::Ptr<_1a82a2da8_Trait>* _165142_base, jule::Ptr<_1a8350d57_Impl>* _165157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d6a2ba:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> *_165310_f = it;
			{
				if ((_1a82a3a8a_FindMethod((*(_165142_base)).ptr(), (*((*(_165310_f))))._field_Ident) == nullptr)) {
					_1a83ab39b_pushErr(_self_, (*(*(_165310_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165142_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165310_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1a9d6a2ba:;
			++it;
			goto _iter_begin_1a9d6a2ba;
		}
		_iter_end_1a9d6a2ba:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83bdb72_implToStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _166234_dest, jule::Ptr<_1a8350d57_Impl>* _166254_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166254_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d6cb3b:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _166615_f = *it;
			{
				if (((_1a81c02ae_FindMethod((*(_166234_dest)).ptr(), (*(_166615_f))._field_Ident, (*_166615_f.alloc)._field_Statically) != nullptr) || (_1a81c0941_FindField((*(_166234_dest)).ptr(), (*_166615_f.alloc)._field_Ident) != nullptr))) {
					_1a83ab39b_pushErr(_self_.ptr(), (*_166615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166234_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a9d6cb3b;
				};
				if ((((*((*(_166234_dest))))._field_Generics.len() > 0LL) && ((*_166615_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166615_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9d70c60:;
						if (it != expr_end) {
							jule::Ptr<_1a81aae04_GenericDecl> _167412_fg = *it;
							{
								{
									auto expr = &((*((*(_166234_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a9d71755:;
									if (it != expr_end) {
										jule::Ptr<_1a81aae04_GenericDecl> _167513_dg = *it;
										{
											if (((*(_167412_fg))._field_Ident == (*(_167513_dg))._field_Ident)) {
												_1a83ab39b_pushErr(_self_, (*_167412_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a9d71755:;
										++it;
										goto _iter_begin_1a9d71755;
									}
									_iter_end_1a9d71755:;
								};
							}
							_iter_next_1a9d70c60:;
							++it;
							goto _iter_begin_1a9d70c60;
						}
						_iter_end_1a9d70c60:;
					};
				};
				_1a83ac424_checkDirectives(_self_, &((*_166615_f.alloc)._field_Directives), jule::Any(_166615_f, &__jule_any_type10));
				(*_166615_f.alloc)._field_sema=_self_;
				(*_166615_f.alloc)._field_Owner=(*(_166234_dest));
				{ jule::Slice<jule::Ptr<_1a8297694_Fn>> &__jule_push_dest = (*((*(_166234_dest))))._field_Methods; __jule_push_dest.push(_166615_f); };
			}
			_iter_next_1a9d6cb3b:;
			++it;
			goto _iter_begin_1a9d6cb3b;
		}
		_iter_end_1a9d6cb3b:;
	};
	{
		auto expr = &((*((*(_166254_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d6cec1:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _169115_v = *it;
			{
				;
				if (((_1a81c02ae_FindMethod((*(_166234_dest)).ptr(), (*(_169115_v))._field_Ident, true) != nullptr) || (_1a81c0600_FindStatic((*(_166234_dest)).ptr(), (*_169115_v.alloc)._field_Ident) != nullptr))) {
					_1a83ab39b_pushErr(_self_, (*_169115_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166234_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169115_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1a9d6cec1;
				};
				{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*((*(_166234_dest))))._field_Statics; __jule_push_dest.push(_169115_v); };
			}
			_iter_next_1a9d6cec1:;
			++it;
			goto _iter_begin_1a9d6cec1;
		}
		_iter_end_1a9d6cec1:;
	};
	return __jule_func_result;;
}



inline void _1a83bde2a_implTrait(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _170431_decl) {
	jule::Ptr<_1a8535877_Type> _17057_base_t = _1a83b257d_selectType(_self_, &((*((*(_170431_decl))))._field_Base));;
	if ((_17057_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a82a2da8_Trait> _17097_base = _1a8539837_Trait(_17057_base_t.ptr());;
	if ((_17097_base == nullptr)) {
		_1a83ab39b_pushErr(_self_, (*((*((*(_170431_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str(_17057_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8535877_Type> _17167_destT = _1a83b257d_selectType(_self_, &((*((*(_170431_decl))))._field_Dest));;
	if ((_17167_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _17207_destS = _1a85395a1_Struct(_17167_destT.ptr());;
	if ((_17207_destS == nullptr)) {
		_1a83ab39b_pushErr(_self_, (*((*((*(_170431_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str(_17167_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a81be610_Struct> _17277_dest = (*(_17207_destS))._field_Decl;;
	if ((_1a818e910_Dir((*((*(_17277_dest))._field_Token))._field_File.ptr()) != _1a818e910_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_170431_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1a83ca112_pushImplemented(_17097_base, &(_17277_dest));
	_1a83ca3ed_pushImplements(&(_17277_dest), _17097_base);
	if (((*((*(_170431_decl))))._field_Statics.len() > 0LL)) {
		_1a83ab39b_pushErr(_self_, (*((*((*(_170431_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a83bd776_checkTraitImplMethods(_self_, &(_17097_base), _170431_decl)))) {
			_case_begin_1a9d81820:;
		}
		else if ((!(_1a83bdb72_implToStruct(_self_, &(_17277_dest), _170431_decl)))) {
			_case_begin_1a9d81886:;
		}
		_match_end_1a9d80874:;
	};
}



inline void _1a83be1d3_implStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _174732_decl) {
	jule::Ptr<_1a8535877_Type> _17487_destT = _1a83b257d_selectType(_self_, &((*((*(_174732_decl))))._field_Dest));;
	if ((_17487_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _17527_destS = _1a85395a1_Struct(_17487_destT.ptr());;
	if ((_17527_destS == nullptr)) {
		_1a83ab39b_pushErr(_self_, (*((*((*(_174732_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str(_17487_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a81be610_Struct> _17597_dest = (*(_17527_destS))._field_Decl;;
	if ((_1a818e910_Dir((*((*(_17597_dest))._field_Token))._field_File.ptr()) != _1a818e910_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_174732_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a83bdb72_implToStruct(_self_, &(_17597_dest), _174732_decl)))) {
			_case_begin_1a9d8768e:;
		}
		_match_end_1a9d85c53:;
	};
}



inline void _1a83be48b_implImpl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8350d57_Impl>* _177130_decl) {
	{
		
		if (_1a8351253_IsTraitImpl((*(_177130_decl)).ptr())) {
			_case_begin_1a9d8822d:;
			{
				_1a83bde2a_implTrait(_self_, _177130_decl);
			}
		}
		else if (_1a83514d9_IsStructImpl((*(_177130_decl)).ptr())) {
			_case_begin_1a9d882c7:;
			{
				_1a83be1d3_implStruct(_self_, _177130_decl);
			}
		}
		_match_end_1a9d8810c:;
	};
}



inline void _1a83be7ee_checkVarDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _178234_decl, jule::Trait _178250_l) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_178234_decl))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1a83cc851_IsTypeInferred((*(_178234_decl)).ptr())) {
		if ((!(_1a83cc5ba_IsInitialized((*(_178234_decl)).ptr())))) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1a83790c2_ReferenceStack> _17928_refers = static_cast<jule::Ptr<_1a83790c2_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178250_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4)) {
				_case_begin_1a9d8c41e:;
				{
					_17928_refers=(*((*(_178234_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
				_case_begin_1a9d8c8e7:;
				{
					_17928_refers=_1a83614c7_getOwnerRefers(_178250_l.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1a9d8c50c:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1799:5"));;
				}
			}
			_match_end_1a9d8c496:;
		};
		(*((*((*(_178234_decl))))._field_TypeSym))._field_Type=_1a83b1945_checkTypeSymRefers(_self_, &((*(*((*(_178234_decl))))._field_TypeSym.alloc)._field_Decl), _178250_l, _17928_refers);
	};
	if ((*((*(_178234_decl))))._field_Reference) {
		if ((*((*(_178234_decl))))._field_Constant) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Statically) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a83cc5ba_IsInitialized((*(_178234_decl)).ptr())))) {
		if ((*((*(_178234_decl))))._field_Constant) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Statically) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Reference) {
			_1a83ab39b_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a83beaa7_checkGlobalVarDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _182840_decl) {
	if (_1a83ac0b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182840_decl))), &((*((*(_182840_decl))))._field_Ident), (*((*(_182840_decl))))._field_Binded)) {
		_1a83ab39b_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182840_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182840_decl))))._field_Binded && (*((*(_182840_decl))))._field_Constant)) {
		_1a83ab39b_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182840_decl))))._field_Binded)) && (!((*((*(_182840_decl))))._field_Constant))) && (!((*((*(_182840_decl))))._field_Statically)))) {
		_1a83ab39b_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1a83ac424_checkDirectives(_self_, &((*((*(_182840_decl))))._field_Directives), jule::Any((*(_182840_decl)), &__jule_any_type7));
	_1a83be7ee_checkVarDecl(_self_, _182840_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
}



inline jule::Bool _1a83bed3d_checkGlobalDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d9975b:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _184615_decl = *it;
			{
				_1a83beaa7_checkGlobalVarDecl(_self_, &(_184615_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9d9975b:;
			++it;
			goto _iter_begin_1a9d9975b;
		}
		_iter_end_1a9d9975b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a83c0239_checkStructTraitImpl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _185642_strct, jule::Ptr<_1a82a2da8_Trait>* _185663_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185663_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d9b142:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _185715_tf = *it;
			{
				jule::Bool _18588_exist = false;;
				jule::Ptr<_1a8297694_Fn> _18598_sf = _1a81c02ae_FindMethod((*(_185642_strct)).ptr(), (*(_185715_tf))._field_Ident, (*_185715_tf.alloc)._field_Statically);;
				jule::Ptr<_1a829a752_FnIns> _18604_tfK = _1a83b58b1_getTraitCheckFnKind(_self_, &(_185715_tf));;
				if ((_18598_sf != nullptr)) {
					jule::Ptr<_1a829a752_FnIns> _18629_sfK = _1a83b58b1_getTraitCheckFnKind(_self_, &(_18598_sf));;
					if ((_18629_sfK != nullptr)) {
						_18588_exist=_1a829b6ed_equalTrait(_18604_tfK, &(_18629_sfK));
					};
				};
				if (_18588_exist) {
					jule::Ptr<_1a819d116_Directive> _18685_d = _1a852c0ee_findDirective(&((*_18598_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18685_d != nullptr)) {
						_1a83ab39b_pushErr(_self_, (*_18685_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a83ab39b_pushErr(_self_, (*((*(_185642_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185663_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a829c633_GetKindStr(_18604_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1a9d9b142:;
			++it;
			goto _iter_begin_1a9d9b142;
		}
		_iter_end_1a9d9b142:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83c057a_checkStructImpls(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _188238_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188238_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9da2555:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _188415_trt = *it;
			{
				__jule_func_result=(_1a83c0239_checkStructTraitImpl(_self_, _188238_s, &(_188415_trt)) && __jule_func_result);
			}
			_iter_next_1a9da2555:;
			++it;
			goto _iter_begin_1a9da2555;
		}
		_iter_end_1a9da2555:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a83c08bb_checkStructFields(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _189039_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_189039_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9da39eb:;
		if (it != expr_end) {
			jule::Ptr<_1a81bb6d9_Field> _189215_f = *it;
			{
				(*(_189215_f))._field_Owner=(*(_189039_st));
				{
					auto expr = &((*((*(_189039_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9da47aa:;
					if (it != expr_end) {
						jule::Ptr<_1a81bb6d9_Field> _189411_cf = *it;
						{
							if ((_189215_f == _189411_cf)) {
								goto _iter_end_1a9da47aa;
							} else if (((*_189215_f.alloc)._field_Ident == (*(_189411_cf))._field_Ident)) {
								_1a83ab39b_pushErr(_self_.ptr(), (*_189215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a9da47aa:;
						++it;
						goto _iter_begin_1a9da47aa;
					}
					_iter_end_1a9da47aa:;
				};
			}
			_iter_next_1a9da39eb:;
			++it;
			goto _iter_begin_1a9da39eb;
		}
		_iter_end_1a9da39eb:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a83c0b74_checkStructDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _190737_s) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_190737_s))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_190737_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a83ac0b1_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190737_s))), &((*((*(_190737_s))))._field_Ident), (*((*(_190737_s))))._field_Binded)) {
		_1a83ab39b_pushErr(_self_, (*((*(_190737_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190737_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1a83ac424_checkDirectives(_self_, &((*((*(_190737_s))))._field_Directives), jule::Any((*(_190737_s)), &__jule_any_type9));
	{
		
		if ((!(_1a83bae9e_checkDeclGenerics(_self_, &((*((*(_190737_s))))._field_Generics))))) {
			_case_begin_1a9da9ae0:;
		}
		else if ((!(_1a83c08bb_checkStructFields(_self_, _190737_s)))) {
			_case_begin_1a9da9b56:;
		}
		else if ((!(_1a83c057a_checkStructImpls(_self_, _190737_s)))) {
			_case_begin_1a9da9bbc:;
		}
		else if ((!(_1a83c17ac_checkFuncDeclsBy(_self_, &((*((*(_190737_s))))._field_Methods))))) {
			_case_begin_1a9da9c33:;
		}
		_match_end_1a9da99ad:;
	};
}



inline jule::Bool _1a83c0e0a_checkStructDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dac1ca:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _192715_s = *it;
			{
				_1a83c0b74_checkStructDecl(_self_, &(_192715_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9dac1ca:;
			++it;
			goto _iter_begin_1a9dac1ca;
		}
		_iter_end_1a9dac1ca:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a83c11b3_checkAnonFuncDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _193739_f) {
	(*((*(_193739_f))))._field_sema=_self_;
	_1a83bbc2a_checkFnDeclPrototype(_self_, _193739_f);
}



inline void _1a83c146b_checkFuncDecl(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _194235_f) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_194235_f))))._field_Ident)) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1a8298684_IsAnon((*(_194235_f)).ptr())) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1a83ac424_checkDirectives(_self_, &((*((*(_194235_f))))._field_Directives), jule::Any((*(_194235_f)), &__jule_any_type10));
	_1a83c11b3_checkAnonFuncDecl(_self_, _194235_f);
	if ((((*((*(_194235_f))))._field_Owner == nullptr) && _1a83ac0b1_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194235_f))), &((*((*(_194235_f))))._field_Ident), (*((*(_194235_f))))._field_Binded))) {
		if ((*((*(_194235_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a8297694_Fn> _19545_init = _1a83a9a5e_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19545_init != nullptr)) {
				return;;
			};
		};
		_1a83ab39b_pushErr(_self_, (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194235_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a83c17ac_checkFuncDeclsBy(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a8297694_Fn>>* _196438_funcs) {
	{
		auto expr = _196438_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9db4ca4:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _196515_f = *it;
			{
				_1a83c146b_checkFuncDecl(_self_, &(_196515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a9db4ca4:;
			++it;
			goto _iter_begin_1a9db4ca4;
		}
		_iter_end_1a9db4ca4:;
	};
	return true;;
}



inline jule::Bool _1a83c1a43_checkFuncDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a83c17ac_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a83c1e61_pushCycleError(_1a83a8497_sema* _self_, jule::Str* _198027_st1, jule::Str* _198038_st2, _21ca86171_Builder* _198053_message) {
	;
	jule::Str _19823_refersTo = _21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_198027_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_198038_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19833_m = _21ca879d0_Str(_198053_message);;
	({
		auto except = _21ca87150_WriteStr(_198053_message, _205368dab_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_198053_message, _19823_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1985:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_198053_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1986:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_198053_message, _19833_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1987:3"));
		(except.result);
	});
}



inline void _1a83c2615_checkPackageDecls(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dbb9c0:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _200715_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _200715_f);
				if ((!(_1a83b8dc0_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9dbb9c0:;
			++it;
			goto _iter_begin_1a9dbb9c0;
		}
		_iter_end_1a9dbb9c0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dbbe98:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _201415_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_, _201415_f);
				if ((!(_1a83bd37a_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9dbbe98:;
			++it;
			goto _iter_begin_1a9dbbe98;
		}
		_iter_end_1a9dbbe98:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dbce66:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _202115_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_, _202115_f);
				if ((!(_1a83bed3d_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9dbce66:;
			++it;
			goto _iter_begin_1a9dbce66;
		}
		_iter_end_1a9dbce66:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dbdeab:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _202815_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_, _202815_f);
				{
					
					if ((!(_1a83c1a43_checkFuncDecls(_self_)))) {
						_case_begin_1a9dc06c7:;
					}
					else if ((!(_1a83c0e0a_checkStructDecls(_self_)))) {
						_case_begin_1a9dc0771:;
					}
					else {
						_case_begin_1a9dc0122:;
						{
							goto _iter_next_1a9dbdeab;
						}
					}
					_match_end_1a9dc062d:;
				};
				return;;
			}
			_iter_next_1a9dbdeab:;
			++it;
			goto _iter_begin_1a9dbdeab;
		}
		_iter_end_1a9dbdeab:;
	};
}



inline void _1a83c2978_checkDataForTypeInference(_1a83a8497_sema* _self_, jule::Ptr<_1a85028cc_Data>* _204042_d, jule::Ptr<_1a81881cd_Token>* _204053_errToken) {
	{
		
		if (_1a8502cea_IsNil((*(_204042_d)).ptr())) {
			_case_begin_1a9dc17d8:;
			{
				_1a83ab39b_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1a8503081_IsVoid((*(_204042_d)).ptr())) {
			_case_begin_1a9dc1882:;
			{
				_1a83ab39b_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_204042_d))))._field_Type))._field_Variadic) {
			_case_begin_1a9dc18e8:;
			{
				_1a83ab39b_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9dc16a6:;
	};
}



inline void _1a83c2c31_checkVarValue(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _205235_v) {
	if (_1a83cc851_IsTypeInferred((*(_205235_v)).ptr())) {
		(*((*(_205235_v))))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Type});
		_1a83c2978_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a83b8122_checkValidityForInitExpr(_self_, (*((*(_205235_v))))._field_Mutable, (*((*(_205235_v))))._field_Reference, &((*((*((*(_205235_v))))._field_TypeSym))._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205235_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a85452b0_Arr> _20658_arr = _1a8538ced_Arr((*((*((*(_205235_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20658_arr != nullptr)) {
			if ((*_20658_arr.alloc)._field_Auto) {
				jule::Ptr<_1a85452b0_Arr> _20686_dataArr = _1a8538ced_Arr((*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20686_dataArr != nullptr)) {
					(*_20658_arr.alloc)._field_N=(*_20686_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a83b388c_checkAssignType(_self_, (*((*(_205235_v))))._field_Reference, &((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205235_v))))._field_Refers)) {
			_1a83b8122_checkValidityForInitExpr(_self_, (*((*(_205235_v))))._field_Mutable, (*((*(_205235_v))))._field_Reference, &((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205235_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205235_v))))._field_Reference && (!(_1a8552784_isValidForRef(&((*((*((*(_205235_v))))._field_TypeSym))._field_Type)))))) {
		_1a83ab39b_pushErr(_self_.ptr(), (*((*(_205235_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205235_v))))._field_Constant) {
		if (((!(_1a8503317_IsConst((*((*((*(_205235_v))))._field_Value))._field_Data.ptr()))) && (!(_1a853a0da_comptime((*(*((*((*(_205235_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1a83ab39b_pushErr(_self_, (*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205235_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a8539d54_Tup((*((*((*(_205235_v))))._field_TypeSym))._field_Type) != nullptr)) {
		(*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1a83c3094_evalVarValue(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _210534_decl, jule::Trait _210550_l) {
	if ((!(_1a83cc5ba_IsInitialized((*(_210534_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a850489b_eval> _21107_eval = static_cast<jule::Ptr<_1a850489b_eval>>(nullptr);;
	if (((*((*(_210534_decl))))._field_TypeSym != nullptr)) {
		_21107_eval=_1a83b2a34_evalpd(_self_, _210550_l, (*(*((*(_210534_decl))))._field_TypeSym.alloc)._field_Type, (*(_210534_decl)));
	} else {
		_21107_eval=_1a83b2a34_evalpd(_self_, _210550_l, nullptr, (*(_210534_decl)));
	};
	(*(_21107_eval))._field_target._field_mutable=(*((*(_210534_decl))))._field_Mutable;
	(*((*((*(_210534_decl))))._field_Value))._field_Data=_1a8523689_evalExpr(_21107_eval, (*(*((*(_210534_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a83c3407_checkVar(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a83cc1ad_Var>* _212230_decl, jule::Trait _212246_l) {
	_1a83c3094_evalVarValue(_self_, _212230_decl, _212246_l);
	if (((*((*((*(_212230_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a83c2c31_checkVarValue(_self_, _212230_decl);
}



inline void _1a83c3605_checkGlobals(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dd8e0a:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _213215_decl = *it;
			{
				if (((*(_213215_decl))._field_Binded || (*_213215_decl.alloc)._field_Used)) {
					goto _iter_next_1a9dd8e0a;
				};
				_1a83c3407_checkVar(_self_, &(_213215_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
			}
			_iter_next_1a9dd8e0a:;
			++it;
			goto _iter_begin_1a9dd8e0a;
		}
		_iter_end_1a9dd8e0a:;
	};
}



inline jule::Ptr<_1a829a752_FnIns> _1a83c3a01_readyToCheckFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _214536_s, jule::Ptr<_1a8297694_Fn>* _214556_f) {
	jule::Ptr<_1a829a752_FnIns> _21467_ins = _1a8298e37_instance((*(_214556_f)));;
	if (((*((*(_214556_f))))._field_Instances.len() != 0LL)) {
		return _21467_ins;;
	};
	(*(_21467_ins))._field_Owner=(*(_214536_s));
	_1a8299245_appendInstance((*(_214556_f)).ptr(), &(_21467_ins));
	(*_21467_ins.alloc)._field_reloaded=true;
	if (_1a83b720e_reloadFnInsTypes(_self_, _21467_ins)) {
		return _21467_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a83c3dec_checkGenericFn(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _216136_f, jule::Ptr<_1a81881cd_Token>* _216152_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1a83b720e_reloadFnInsTypes(_self_, (*(_216136_f)));
	(*((*(_216136_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a829a752_FnIns> _21677_existInstance = _1a8299245_appendInstance((*((*(_216136_f))))._field_Decl.ptr(), _216136_f);;
	if ((!(_1a83b5d67_checkConstraintsFn(_self_, _216136_f, _216152_et, _21677_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21677_existInstance != nullptr)) {
		(*(_216136_f))=_21677_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1a83c695a_checkFnInsCaller(_self_, _216136_f, (*(_216152_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1a83c4260_checkTypeMethod(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _218437_s, jule::Ptr<_1a8297694_Fn>* _218457_f) {
	if (((*((*(_218457_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a829a752_FnIns> _21897_ins = (*((*(_218457_f))))._field_Instances[0LL];;
	if (((*((*(_21897_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a83c6c13_checkFnIns(_self_, &(_21897_ins));
}



inline jule::Ptr<_1a829a752_FnIns> _1a83c4716_checkStructInsOp(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _219738_s, jule::Ptr<_1a8297694_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1a8297694_Fn>> _219766_p) {
	if (((((*(_219758_f)) == nullptr) || ((*((*(_219758_f))))._field_Generics.len() > 0LL)) || (!(_219766_p((*(_219758_f))))))) {
		return nullptr;;
	};
	return (*((*(_219758_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a83c4b12_checkStructEnv(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _220736_s, jule::Ptr<_1a81881cd_Token> _220755_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a8547c74_typeChecker _22087_tc = _1a8547c74_typeChecker{._field_s=(*((*((*(_220736_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1a8546c84_referencer>(_1a8546c84_referencer{._field_ident=(*(*((*(_220736_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220736_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220736_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		_22087_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>::alloc(0LL, (*((*(_220736_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8534a85_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220736_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9de7963:;
			if (it != expr_end) {
				jule::I64 _22219_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> _222116_g = *it;
				{
					jule::Ptr<_1a81aae04_GenericDecl> _22229_decl = (*(*((*(_220736_s))))._field_Decl.alloc)._field_Generics[_22219_i];;
					{ jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> &__jule_push_dest = _22087_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22229_decl.alloc)._field_Token, ._field_Ident=(*(_22229_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_222116_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1a9de7963:;
				++it;
				_22219_i++;
				goto _iter_begin_1a9de7963;
			}
			_iter_end_1a9de7963:;
		};
	};
	jule::Ptr<_1a829d997_SymTab> _22317_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a83aae7d_setCurrentFile(_self_, _22317_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220736_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a829d997_SymTab> _22358_file = _1a83a7111_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220736_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22358_file != nullptr)) {
			_1a83aae7d_setCurrentFile(_self_, _22358_file);
		};
	};
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a834da58_constraintChecker> _22428_cc = _1a83b1093_constraintChecker(_self_);;
		(*(_22428_cc))._field_et=_220755_errorToken;
		(*_22428_cc.alloc)._field_si=(*(_220736_s));
		(*_22428_cc.alloc)._field_genericsA=_22087_tc._field_useGenerics;
		(*_22428_cc.alloc)._field_uniq=true;
		if ((!(_1a834e9c1_check(_22428_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220736_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _22558_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22087_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220736_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9e01582:;
			if (it != expr_end) {
				jule::Ptr<_1a83cc1ad_Var> _225716_v = *it;
				{
					_1a83be7ee_checkVarDecl(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
					_1a83c3407_checkVar(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22558_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a9e01582:;
				++it;
				goto _iter_begin_1a9e01582;
			}
			_iter_end_1a9e01582:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22087_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a850489b_eval> _22687_eval = _1a83b3271_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
	(*((*(_220736_s))))._field_Comparable=(!((*(*((*(_220736_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220736_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e05047:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _227015_f = *it;
			{
				jule::Ptr<_1a8535877_Type> _22718_kind = _1a855085e_checkDecl(&_22087_tc, &((*((*((*(_227015_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22718_kind != nullptr) && __jule_func_result);
				if ((_22718_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220736_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1a9e05047;
				};
				(*_227015_f.alloc)._field_Type=_22718_kind;
				(*((*(_220736_s))))._field_Mutable=((*((*(_220736_s))))._field_Mutable || ((!((*(*(_227015_f))._field_Decl.alloc)._field_Mutable)) && _1a853725d_Mutable((*(_227015_f))._field_Type)));
				(*((*(_220736_s))))._field_Comparable=((*((*(_220736_s))))._field_Comparable && _1a8536ec7_Comparable((*(_227015_f))._field_Type));
				if (((*(*(_227015_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a9e05047;
				};
				(*(_22687_eval))._field_prefix=(*_227015_f.alloc)._field_Type;
				(*_22687_eval.alloc)._field_field=_227015_f;
				(*_22687_eval.alloc)._field_target._field_mutable=true;
				(*_227015_f.alloc)._field_Default=_1a8523689_evalExpr(_22687_eval, (*(*(_227015_f))._field_Decl.alloc)._field_Default);
				if (((*_227015_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a9e05047;
				};
				;
				_1a83b388c_checkAssignType(_self_, false, &((*_227015_f.alloc)._field_Type), &((*_227015_f.alloc)._field_Default), (*((*(*(_227015_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220736_s))))._field_Refers);
			}
			_iter_next_1a9e05047:;
			++it;
			goto _iter_begin_1a9e05047;
		}
		_iter_end_1a9e05047:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a83c500d_precheckStructIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _230539_s, jule::Ptr<_1a81881cd_Token> _230558_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a83c4b12_checkStructEnv(_self_, _230539_s, _230558_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230539_s))))._field_Comparable && ((*((*(_230539_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1a8297694_Fn> _23168_decl = _1a7d2561d_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230539_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9e112d9:;
			if (it != expr_end) {
				jule::Ptr<_1a81c18ba_FieldIns> _231716_field = *it;
				{
					jule::Ptr<_1a85452b0_Arr> _23189_arr = _1a8538ced_Arr((*(_231716_field))._field_Type.ptr());;
					if ((_23189_arr == nullptr)) {
						goto _iter_next_1a9e112d9;
					};
					jule::Ptr<_1a829a752_FnIns> _23229_f = _1a8298ba1_instanceForce(_23168_decl);;
					(*(_23229_f))._field_Generics=jule::append((*_23229_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=(*(_23189_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a83c3dec_checkGenericFn(_self_, &(_23229_f), &((*((*_231716_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2326:6"));;
					};
					_1a8379e2a_Push((*((*(_230539_s))))._field_Refers.ptr(), jule::Any(_23229_f, &__jule_any_type64));
				}
				_iter_next_1a9e112d9:;
				++it;
				goto _iter_begin_1a9e112d9;
			}
			_iter_end_1a9e112d9:;
		};
	};
	{
		auto expr = &((*((*(_230539_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e15376:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _233215_f = *it;
			{
				if (((*(_233215_f))._field_Generics.len() == 0LL)) {
					if ((_1a83c3a01_readyToCheckFn(_self_, _230539_s, &(_233215_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a9e15376:;
			++it;
			goto _iter_begin_1a9e15376;
		}
		_iter_end_1a9e15376:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a83c52b6_checkStructIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns>* _234236_s) {
	{
		auto expr = &((*((*(_234236_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e16e6b:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _234315_f = *it;
			{
				_1a83c4260_checkTypeMethod(_self_, _234236_s, &(_234315_f));
			}
			_iter_next_1a9e16e6b:;
			++it;
			goto _iter_begin_1a9e16e6b;
		}
		_iter_end_1a9e16e6b:;
	};
}



inline void _1a83c556e_checkTypeStruct(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _234837_s) {
	if ((*((*(_234837_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234837_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e18962:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _236115_ins = *it;
			{
				_1a83c52b6_checkStructIns(_self_, &(_236115_ins));
			}
			_iter_next_1a9e18962:;
			++it;
			goto _iter_begin_1a9e18962;
		}
		_iter_end_1a9e18962:;
	};
}



inline void _1a83c576c_checkStructTypes(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e1991e:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _236715_s = *it;
			{
				_1a83c556e_checkTypeStruct(_self_, &(_236715_s));
			}
			_iter_next_1a9e1991e:;
			++it;
			goto _iter_begin_1a9e1991e;
		}
		_iter_end_1a9e1991e:;
	};
}



inline void _1a83c5a25_checkStructInsOperators(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81c246a_StructIns> _237244_s) {
	{
		auto expr = &((*(_237244_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e1a8a9:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _237315_m = *it;
			{
				{
					auto &_match_expr{ (*(_237315_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1a9e1b0b3:;
						{
							(*(_237244_s))._field_Operators._field_Eq=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83cdcb4_Eq);
							(*_237244_s.alloc)._field_Comparable=((*_237244_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1a9e1b6ac:;
						{
							(*(_237244_s))._field_Operators._field_Gt=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83ce07d_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1a9e1b723:;
						{
							(*(_237244_s))._field_Operators._field_GtEq=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83ce347_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1a9e1b789:;
						{
							(*(_237244_s))._field_Operators._field_Lt=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83ce611_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1a9e1b800:;
						{
							(*(_237244_s))._field_Operators._field_LtEq=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83ce8ca_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1a9e1b877:;
						{
							(*(_237244_s))._field_Operators._field_Shl=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d0018_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1a9e1b8ee:;
						{
							(*(_237244_s))._field_Operators._field_Shr=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d02d2_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1a9e1b976:;
						{
							(*(_237244_s))._field_Operators._field_Add=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d059b_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1a9e1b9ed:;
						{
							(*(_237244_s))._field_Operators._field_Sub=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d0865_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1a9e1ba75:;
						{
							(*(_237244_s))._field_Operators._field_Div=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d0b2e_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1a9e1baec:;
						{
							(*(_237244_s))._field_Operators._field_Mul=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d0de8_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1a9e1bb74:;
						{
							(*(_237244_s))._field_Operators._field_Mod=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d11b2_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1a9e1bbeb:;
						{
							(*(_237244_s))._field_Operators._field_BitAnd=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d147b_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1a9e1bc73:;
						{
							(*(_237244_s))._field_Operators._field_BitOr=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d1745_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1a9e1bcea:;
						{
							(*(_237244_s))._field_Operators._field_BitXor=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d1a0e_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1a9e1bd72:;
						{
							(*(_237244_s))._field_Operators._field_Neg=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d214c_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1a9e1bde9:;
						{
							(*(_237244_s))._field_Operators._field_Pos=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d2416_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1a9e1be71:;
						{
							(*(_237244_s))._field_Operators._field_BitNot=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d26d0_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1a9e1bee8:;
						{
							(*(_237244_s))._field_Operators._field_AddAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d2d1d_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1a9e1c070:;
						{
							(*(_237244_s))._field_Operators._field_SubAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d30d7_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1a9e1c0e7:;
						{
							(*(_237244_s))._field_Operators._field_DivAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d33a1_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1a9e1c16e:;
						{
							(*(_237244_s))._field_Operators._field_MulAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d366a_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1a9e1c1e6:;
						{
							(*(_237244_s))._field_Operators._field_ModAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d3934_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1a9e1c26d:;
						{
							(*(_237244_s))._field_Operators._field_ShlAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d3bed_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1a9e1c2e5:;
						{
							(*(_237244_s))._field_Operators._field_ShrAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d3eb7_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1a9e1c36c:;
						{
							(*(_237244_s))._field_Operators._field_BitOrAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d4281_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1a9e1c3e4:;
						{
							(*(_237244_s))._field_Operators._field_BitAndAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d454a_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1a9e1c46b:;
						{
							(*(_237244_s))._field_Operators._field_BitXorAssign=_1a83c4716_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1a83d4814_BitXorAssign);
						}
					}
					_match_end_1a9e1b38d:;
				};
			}
			_iter_next_1a9e1a8a9:;
			++it;
			goto _iter_begin_1a9e1a8a9;
		}
		_iter_end_1a9e1a8a9:;
	};
}



inline void _1a83c5ccd_precheckStructType(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a81be610_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a81c246a_StructIns> _24478_ins = _1a81beaa5_instance((*(_243640_s)));;
		(*(_24478_ins))._field_Checked=true;
		_1a81bedb3_appendInstance((*(_243640_s)).ptr(), &(_24478_ins));
		jule::Bool _24504_ok = _1a83c500d_precheckStructIns(_self_, &(_24478_ins), nullptr);;
		if ((!(_24504_ok))) {
			return;;
		};
	};
	_1a83c5a25_checkStructInsOperators(_self_, (*((*(_243640_s))))._field_Instances[0LL]);
}



inline void _1a83c5ecb_precheckStructTypes(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e33bd0:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _246015_s = *it;
			{
				_1a83c5ccd_precheckStructType(_self_, &(_246015_s));
			}
			_iter_next_1a9e33bd0:;
			++it;
			goto _iter_begin_1a9e33bd0;
		}
		_iter_end_1a9e33bd0:;
	};
}



inline void _1a83c6284_checkRets(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _246530_f) {
	if (_1a8297b4a_IsVoid((*((*(_246530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a83c86c6_missingRetChecker _24693_mrc = static__1a83c8ac2_new();;
	jule::Bool _24703_ok = _1a83c9c9e_check(&_24693_mrc, (*((*(_246530_f))))._field_Scope);;
	if ((!(_24703_ok))) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_246530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1a83c65e7_checkFnInsSc(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _247633_f, jule::Ptr<_1a835cacd_scopeChecker>* _247649_sc) {
	_1a83a6671_appendRetVars(&((*((*((*(_247649_sc))))._field_table))._field_Vars), _247633_f);
	_1a83a69a1_appendParamVars(&((*(*((*(_247649_sc))))._field_table.alloc)._field_Vars), _247633_f);
	_1a83a6c8c_appendGenericTypeAliases(&((*(*((*(_247649_sc))))._field_table.alloc)._field_TypeAliases), _247633_f);
	_1a8374ab2_check((*(_247649_sc)), &((*((*((*(_247633_f))))._field_Decl))._field_Scope), &((*((*(_247633_f))))._field_Scope));
	if ((!(_1a83606d5_stopped((*(_247649_sc)).ptr())))) {
		_1a83c6284_checkRets(_self_, _247633_f);
	};
}



inline void _1a83c695a_checkFnInsCaller(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _248938_f, jule::Ptr<_1a81881cd_Token> _248953_caller) {
	if ((*((*((*(_248938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a829d997_SymTab> _24947_old = (*((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a83aae7d_setCurrentFile((*((*((*(_248938_f))))._field_Decl))._field_sema, _24947_old);
	});;
	jule::Ptr<_1a829d997_SymTab> _24967_file = _1a83a7111_findFile(&((*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24967_file != nullptr)) {
		_1a83aae7d_setCurrentFile((*((*((*(_248938_f))))._field_Decl))._field_sema, _24967_file);
	};
	jule::Ptr<_1a835cacd_scopeChecker> _25017_sc = _1a8353288_newScopeChecker(&((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema), (*(_248938_f)));;
	(*(_25017_sc))._field_calledFrom=_248953_caller;
	_1a83c65e7_checkFnInsSc(_self_.ptr(), _248938_f, &(_25017_sc));
	if (((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a83c6c13_checkFnIns(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a829a752_FnIns>* _251132_f) {
	_1a83c695a_checkFnInsCaller(_self_, _251132_f, nullptr);
}



inline void _1a83c6ebb_checkFunc(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _251531_f) {
	if ((*((*(_251531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e42309:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _252515_ins = *it;
			{
				_1a83c6c13_checkFnIns(_self_, &(_252515_ins));
			}
			_iter_next_1a9e42309:;
			++it;
			goto _iter_begin_1a9e42309;
		}
		_iter_end_1a9e42309:;
	};
}



inline void _1a83c7274_checkTestFn(_1a83a8497_sema* _self_, jule::Ptr<_1a829a752_FnIns>* _253032_f) {
	if ((*((*((*(_253032_f))))._field_Decl))._field_Public) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_253032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a8297b4a_IsVoid((*((*(_253032_f))))._field_Decl)))) || ((*(*((*(_253032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_253032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_253032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_253032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a85424bb_Sptr> _25487_sptr = _1a85382b4_Sptr((*((*((*(_253032_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25487_sptr == nullptr)) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _25553_s = _1a85395a1_Struct((*(_25487_sptr))._field_Elem.ptr());;
	if (((_25553_s == nullptr) || (!(_1a8390d97_isStdPackage(&((*((*((*((*(_25553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a83ab39b_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1a83ab70e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a83c752c_precheckFunc(jule::Ptr<_1a83a8497_sema> _self_, jule::Ptr<_1a8297694_Fn>* _256334_f) {
	if ((*((*(_256334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_256334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_256334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a829a752_FnIns> _25748_ins = _1a8298ba1_instanceForce((*(_256334_f)));;
		{ jule::Slice<jule::Ptr<_1a829a752_FnIns>> &__jule_push_dest = (*((*(_256334_f))))._field_Instances; __jule_push_dest.push(_25748_ins); };
		jule::Bool _25764_ok = _1a83b720e_reloadFnInsTypes(_self_, _25748_ins);;
		(*(_25748_ins))._field_reloaded=true;
		if ((_25764_ok && _1a8551de3_hasDirective(&((*((*(_256334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1a83c7274_checkTestFn(_self_, &(_25748_ins));
		};
	};
}



inline void _1a83c772a_precheckFuncs(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e51060:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _258715_decl = *it;
			{
				{
					auto expr = &((*(_258715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9e51a55:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _258816_m = *it;
						{
							_1a83c752c_precheckFunc(_self_, &(_258816_m));
						}
						_iter_next_1a9e51a55:;
						++it;
						goto _iter_begin_1a9e51a55;
					}
					_iter_end_1a9e51a55:;
				};
			}
			_iter_next_1a9e51060:;
			++it;
			goto _iter_begin_1a9e51060;
		}
		_iter_end_1a9e51060:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e51615:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _259215_decl = *it;
			{
				_1a83c752c_precheckFunc(_self_, &(_259215_decl));
			}
			_iter_next_1a9e51615:;
			++it;
			goto _iter_begin_1a9e51615;
		}
		_iter_end_1a9e51615:;
	};
}



inline void _1a83c7928_checkFuncs(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e532a4:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _259915_decl = *it;
			{
				_1a83c6ebb_checkFunc(_self_, &(_259915_decl));
			}
			_iter_next_1a9e532a4:;
			++it;
			goto _iter_begin_1a9e532a4;
		}
		_iter_end_1a9e532a4:;
	};
}



inline void _1a83c7b26_checkPackageTypes(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e54085:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _260715_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _260715_f);
				_1a83c3605_checkGlobals(_self_);
				_1a83c772a_precheckFuncs(_self_);
				_1a83c5ecb_precheckStructTypes(_self_);
			}
			_iter_next_1a9e54085:;
			++it;
			goto _iter_begin_1a9e54085;
		}
		_iter_end_1a9e54085:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e55b14:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _261815_f = *it;
			{
				_1a83aae7d_setCurrentFile(_self_, _261815_f);
				_1a83c7928_checkFuncs(_self_);
				_1a83c576c_checkStructTypes(_self_);
			}
			_iter_next_1a9e55b14:;
			++it;
			goto _iter_begin_1a9e55b14;
		}
		_iter_end_1a9e55b14:;
	};
}



inline void _1a83c7d24_setFileSemaFields(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e571ed:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _262615_f = *it;
			{
				(*(_262615_f))._field_sema=_self_;
			}
			_iter_next_1a9e571ed:;
			++it;
			goto _iter_begin_1a9e571ed;
		}
		_iter_end_1a9e571ed:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e5782a:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _262915_st = *it;
			{
				(*(_262915_st))._field_sema=_self_;
			}
			_iter_next_1a9e5782a:;
			++it;
			goto _iter_begin_1a9e5782a;
		}
		_iter_end_1a9e5782a:;
	};
}



inline void _1a83c8022_setSemaFields(jule::Ptr<_1a83a8497_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e58a29:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _263515_file = *it;
			{
				_1a83aae7d_setCurrentFile(_self_.ptr(), _263515_file);
				_1a83c7d24_setFileSemaFields(_self_);
			}
			_iter_next_1a9e58a29:;
			++it;
			goto _iter_begin_1a9e58a29;
		}
		_iter_end_1a9e58a29:;
	};
}



inline void _1a83c82ca_check(jule::Ptr<_1a83a8497_sema> _self_, jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _264127_files) {
	(*(_self_))._field_files=(*(_264127_files));
	_1a83c8022_setSemaFields(_self_);
	_1a83ae28e_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a83aec84_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a83ae68a_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a83ae888_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a83c2615_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a83c7b26_checkPackageTypes(_self_);
}







inline _1a83c86c6_missingRetChecker static__1a83c8ac2_new(void) {
	return _1a83c86c6_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1a83c8dd0_checkConditional(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a835609e_Conditional> _268932_c) {
	{
		auto expr = &((*(_268932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e5e1e4:;
		if (it != expr_end) {
			jule::Ptr<_1a8355884_If> _269015_elif = *it;
			{
				if ((_269015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a83c995d_checkScope(_self_, (*(_269015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a9e5e1e4:;
			++it;
			goto _iter_begin_1a9e5e1e4;
		}
		_iter_end_1a9e5e1e4:;
	};
	return (((*_268932_c.alloc)._field_Default != nullptr) && _1a83c995d_checkScope(_self_, (*(*(_268932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a83c9221_checkMatch(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8359b96_Match> _270126_m) {
	{
		auto expr = &((*(_270126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e612b2:;
		if (it != expr_end) {
			jule::Ptr<_1a835a6be_Case> _270215_c = *it;
			{
				if ((_270215_c == nullptr)) {
					return false;;
				};
				jule::I64 _27064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27074_ok = _1a83c995d_checkScope(_self_, (*(_270215_c))._field_Scope);;
				{
					
					if ((_27064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a9e62d0d:;
						{
							return false;;
						}
					}
					else if ((!(_27074_ok))) {
						_case_begin_1a9e62d96:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a9e62e0c;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a9e62e0c:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_270215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a9e612b2;
						}
					}
					_match_end_1a9e62c97:;
				};
			}
			_iter_next_1a9e612b2:;
			++it;
			goto _iter_begin_1a9e612b2;
		}
		_iter_end_1a9e612b2:;
	};
	return (((*_270126_m.alloc)._field_Default != nullptr) && _1a83c995d_checkScope(_self_, (*(*(_270126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a83c961c_checkInfIter(_1a83c86c6_missingRetChecker* _self_, jule::Uintptr _272724_it, jule::Ptr<_1a8355466_Scope>* _272742_s) {
	jule::I64 _27283_n = (*(_self_))._field_breaked.len();;
	if (_1a83c995d_checkScope(_self_, (*(_272742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
		return true;;
	};
	if ((_27283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a9e6677e:;
			if (it != expr_end) {
				jule::Uintptr _273411_addr = *it;
				{
					if ((_272724_it == _273411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
						return false;;
					};
				}
				_iter_next_1a9e6677e:;
				++it;
				goto _iter_begin_1a9e6677e;
			}
			_iter_end_1a9e6677e:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
	};
	return true;;
}



inline jule::Bool _1a83c995d_checkScope(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8355466_Scope> _274526_s) {
	if ((_274526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e67ce1:;
		if (it != expr_end) {
			jule::Any _274915_st = *it;
			{
				{
					auto &_match_expr{ _274915_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1a9e68a5b:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a9e68819:;
						{
							jule::Uintptr _27555_addr = (*(_274915_st.unsafe_cast_ptr<_1a8357a0c_BreakSt>()))._field_It;;
							if ((_27555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_1a9e68ad3:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1a9e68b5a:;
						{
							jule::Ptr<_1a835639b_InfIter> _27639_ii = _274915_st.unsafe_cast_ptr<_1a835639b_InfIter>();;
							if (_1a83c961c_checkInfIter(_self_, static_cast<jule::Uintptr>(_27639_ii), &((*(_27639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a9e68bd2:;
						{
							jule::Ptr<_1a8356852_WhileIter> _27689_wn = _274915_st.unsafe_cast_ptr<_1a8356852_WhileIter>();;
							if ((_1a8356be8_IsWhileNext(_27689_wn.ptr()) && ((*_27689_wn.alloc)._field_Expr == nullptr))) {
								if (_1a83c961c_checkInfIter(_self_, static_cast<jule::Uintptr>(_27689_wn), &((*_27689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a9e68c59:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a9e68cd1:;
						{
							if (_1a83c995d_checkScope(_self_, _274915_st.cast_ptr<_1a8355466_Scope>(&__jule_any_type20))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a9e68d58:;
						{
							{
								auto &_match_expr{ (*(_274915_st.cast_ptr<_1a85028cc_Data>(&__jule_any_type22)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
									_case_begin_1a9e6ede7:;
									{
										return true;;
									}
								}
								_match_end_1a9e6ed4d:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1a9e68dd0:;
						{
							if (_1a83c8dd0_checkConditional(_self_, _274915_st.cast_ptr<_1a835609e_Conditional>(&__jule_any_type32))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1a9e68e57:;
						{
							if (_1a83c9221_checkMatch(_self_, _274915_st.cast_ptr<_1a8359b96_Match>(&__jule_any_type45))) {
								return true;;
							};
						}
					}
					_match_end_1a9e68929:;
				};
			}
			_iter_next_1a9e67ce1:;
			++it;
			goto _iter_begin_1a9e67ce1;
		}
		_iter_end_1a9e67ce1:;
	};
	return false;;
}



inline jule::Bool _1a83c9c9e_check(_1a83c86c6_missingRetChecker* _self_, jule::Ptr<_1a8355466_Scope> _280021_s) {
	return _1a83c995d_checkScope(_self_, _280021_s);;
}







inline jule::Bool _1a83cc5ba_IsInitialized(_1a83cc1ad_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a83cc851_IsTypeInferred(_1a83cc1ad_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1a83ccad7_untypedConstant(_1a83cc1ad_Var* _self_) {
	return (_1a83cc851_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1a83cd676_Str(jule::Ptr<_1a8297694_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1a8297b4a_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1a82965a5_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a829a752_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1a853d990_Prim> _253_prim = _1a853802d_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1a8541e5a_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__1a83cd9ea_logical(jule::Ptr<_1a8297694_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _1a8297b4a_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _1a82965a5_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a829a752_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_1a853d990_Prim> _503_prim = _1a853802d_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_1a8541bc4_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _1a85395a1_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__1a83cdcb4_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _5815_f) {
	return static__1a83cd9ea_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a83ce07d_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _6315_f) {
	return static__1a83cd9ea_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a83ce347_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _6817_f) {
	return static__1a83cd9ea_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a83ce611_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _7315_f) {
	return static__1a83cd9ea_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a83ce8ca_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _7817_f) {
	return static__1a83cd9ea_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a83cec4e_result(jule::Ptr<_1a8297694_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _1a8297b4a_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _1a82965a5_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a829a752_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_1a85395a1_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a83d0018_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _10416_f) {
	return static__1a83cec4e_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a83d02d2_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _10916_f) {
	return static__1a83cec4e_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a83d059b_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _11416_f) {
	return static__1a83cec4e_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a83d0865_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _11916_f) {
	return static__1a83cec4e_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a83d0b2e_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _12416_f) {
	return static__1a83cec4e_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a83d0de8_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _12916_f) {
	return static__1a83cec4e_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a83d11b2_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _13416_f) {
	return static__1a83cec4e_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a83d147b_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _13919_f) {
	return static__1a83cec4e_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a83d1745_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _14418_f) {
	return static__1a83cec4e_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a83d1a0e_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _14919_f) {
	return static__1a83cec4e_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a83d1d83_unary(jule::Ptr<_1a8297694_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _1a8297b4a_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _1a82965a5_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a829a752_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_1a85395a1_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a83d214c_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _17316_f) {
	return static__1a83d1d83_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a83d2416_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _17816_f) {
	return static__1a83d1d83_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a83d26d0_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _18319_f) {
	return static__1a83d1d83_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a83d2a54_assign(jule::Ptr<_1a8297694_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_1a8297b4a_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _1a82965a5_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a83d2d1d_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _20722_f) {
	return static__1a83d2a54_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a83d30d7_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _21222_f) {
	return static__1a83d2a54_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a83d33a1_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _21722_f) {
	return static__1a83d2a54_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a83d366a_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _22222_f) {
	return static__1a83d2a54_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a83d3934_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _22722_f) {
	return static__1a83d2a54_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a83d3bed_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _23222_f) {
	return static__1a83d2a54_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a83d3eb7_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _23722_f) {
	return static__1a83d2a54_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a83d4281_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _24224_f) {
	return static__1a83d2a54_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a83d454a_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _24725_f) {
	return static__1a83d2a54_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a83d4814_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn> _25225_f) {
	return static__1a83d2a54_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1a84ddb71_typeCompatibilityChecker_eq(_1a84ddb71_typeCompatibilityChecker *_self_, _1a84ddb71_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a84de19e_pushErr(_1a84ddb71_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1a84de435_checkTrait(_1a84ddb71_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a85369aa_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a82a2da8_Trait> _1157_trt = _1a8539837_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1a85382b4_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a9eb339c:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1a85382b4_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a85395a1_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a9eb3446;
			}
		}
		else if ((_1a85395a1_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a9eb3446:;
			{
				jule::Ptr<_1a81c246a_StructIns> _1264_s = _1a85395a1_Struct((*(_self_))._field_src);;
				if ((!(_1a81c0c82_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1a84dc70d_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1a84de19e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a8539837_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a9eb34bd:;
			{
				jule::Ptr<_1a82a2da8_Trait> _1368_base = _1a8539837_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a9eb857d:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9eb8825:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9eb92b5:;
								if (it != expr_end) {
									jule::Ptr<_1a81be610_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1a9eb8825;
										};
									}
									_iter_next_1a9eb92b5:;
									++it;
									goto _iter_begin_1a9eb92b5;
								}
								_iter_end_1a9eb92b5:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a9eb8825:;
						++it;
						goto _iter_begin_1a9eb8825;
					}
					_iter_end_1a9eb8825:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9eb967d:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1a8297694_Fn> _1509_m2 = _1a82a3a8a_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a829a752_FnIns> _1545_m1k = _1a83b58b1_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1a829a752_FnIns> _1555_m2k = _1a83b58b1_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1a829b6ed_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a9eb967d:;
						++it;
						goto _iter_begin_1a9eb967d;
					}
					_iter_end_1a9eb967d:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a9eb3314:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a9eb328c:;
	};
}



inline jule::Bool _1a84de6bb_checkPtr(_1a84ddb71_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a85369aa_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8545c83_Ptr> _1707_dest = _1a853854a_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a8546800_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a85360b4_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a84de952_checkPrim(_1a84ddb71_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a853d990_Prim> _1794_prim = _1a853802d_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1a85421e1_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a85360b4_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a84ded4d_typeEnum(_1a84ddb71_typeCompatibilityChecker* _self_, jule::Ptr<_1a82a6c69_TypeEnum>* _18725_e, jule::Ptr<_1a8535877_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ec0ad5:;
		if (it != expr_end) {
			jule::Ptr<_1a82a6692_TypeEnumItem> _18815_item = *it;
			{
				if (_1a85360b4_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a82a6c69_TypeEnum> _1928_ke = _1a8538a67_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1a9ec0ad5;
				};
				if (_1a84ded4d_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9ec0ad5:;
			++it;
			goto _iter_begin_1a9ec0ad5;
		}
		_iter_end_1a9ec0ad5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e00d4_checkTypeEnum(_1a84ddb71_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a85360b4_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a82a6c69_TypeEnum> _2077_e = _1a8538a67_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a84ded4d_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a84e036a_check(_1a84ddb71_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a853854a_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a84de6bb_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a853777a_NilCompatible((*(_self_))._field_dest)) {
		if (_1a85369aa_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a853802d_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a9ec63d2:;
			{
				__jule_func_result = _1a84de952_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a8538a67_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a9ec646a:;
			{
				__jule_func_result = _1a84e00d4_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a8539837_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a9ec5d60:;
			{
				__jule_func_result = _1a84de435_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a9ec5997:;
			{
				__jule_func_result = _1a85360b4_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a9ec5018:;
	};
}








inline jule::Bool _1a84e09ec_assignTypeChecker_eq(_1a84e09ec_assignTypeChecker *_self_, _1a84e09ec_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1a84e0eb4_pushErr(_1a84e09ec_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1a84e124a_checkValidity(_1a84e09ec_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1a853931a_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9ec91d7:;
			{
				jule::Ptr<_1a829a752_FnIns> _2524_f = _1a853931a_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1a829bc1a_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1a9ecaa57:;
						{
							_1a84e0eb4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1a9ecab01:;
						{
							_1a84e0eb4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1a8297dd1_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1a9ecab67:;
						{
							_1a84e0eb4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1a9ecabcd:;
						{
							_1a84e0eb4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1a83ab70e_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1a9eca969:;
				};
			}
		}
		else if ((_1a8539d54_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9ec9281:;
			{
				_1a84e0eb4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1a9ec914e:;
	};
	return _2497_valid;;
}



inline jule::Bool _1a84e14d1_checkConst(_1a84e09ec_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a853802d_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1a853802d_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1a832636b_IsFloat(_2813_kind)) {
			_case_begin_1a9ed2421:;
			{
				if ((!(_1a84dcac6_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1a832602a_IsInt(_2813_kind)) {
			_case_begin_1a9ed24a9:;
			{
				if ((!(_1a84dd687_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1a9ed23aa:;
			{
				return false;;
			}
		}
		_match_end_1a9ed2278:;
	};
	return true;;
}



inline jule::Bool _1a84e1767_checkCompatibility(_1a84e09ec_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a9ed4742:;
			{
				return false;;
			}
		}
		else if ((!(_1a84e124a_checkValidity(_self_)))) {
			_case_begin_1a9ed47b9:;
			{
				return false;;
			}
		}
		else if (_1a84e14d1_checkConst(_self_)) {
			_case_begin_1a9ed4830:;
			{
				return true;;
			}
		}
		else if ((_1a85387d1_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a9ed4896:;
			{
				jule::Ptr<_1a8535877_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1a85387d1_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1a85387d1_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1a853d990_Prim> _3144_prim = _1a853802d_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1a85421e1_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1a9ed2b08;
				};
				jule::Ptr<_1a8535877_Type> _3198_dest = (*(*(_1a85387d1_Enum((*((*(_self_))._field_d))._field_Type.ptr())))._field_TypeSym.alloc)._field_Type;;
				return _1a83b42e9_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1a9ed2b08:;
	};
	return _1a83b4bbd_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a84e19ed_check(_1a84e09ec_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1a84e1767_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1a8553675_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1aa004465_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aa005b5e:;
			{
				jule::Ptr<_1a8535877_Type> _3498_elem = static_cast<jule::Ptr<_1a8535877_Type>>(nullptr);;
				{
					
{
						_case_begin_1aa006434:;
						{
							_3498_elem=(*(_1a8538ced_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aa006368:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81a0eb5_ArrTypeDecl>()))._field_Elem;
				return _1a84e3b10_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1aa005ad7:;
	};
	return false;;
}

inline jule::Bool _1aa00470c_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aa00c1b5:;
			{
				jule::Ptr<_1a8535877_Type> _3498_elem = static_cast<jule::Ptr<_1a8535877_Type>>(nullptr);;
				{
					
{
						_case_begin_1aa01055e:;
						{
							_3498_elem=(*(_1a8539084_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aa00c8be:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81a0129_SlcTypeDecl>()))._field_Elem;
				return _1a84e3b10_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1aa00c13d:;
	};
	return false;;
}

inline jule::Bool _1aa00bb54_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aa0137d7:;
			{
				jule::Ptr<_1a8535877_Type> _3498_elem = static_cast<jule::Ptr<_1a8535877_Type>>(nullptr);;
				{
					
{
						_case_begin_1aa014123:;
						{
							_3498_elem=(*(_1a853854a_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aa013ee1:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81a0723_PtrTypeDecl>()))._field_Elem;
				return _1a84e3b10_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1aa013760:;
	};
	return false;;
}

inline jule::Bool _1aa016d90_annotateConstraintElem(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1aa0199a8:;
			{
				jule::Ptr<_1a8535877_Type> _3498_elem = static_cast<jule::Ptr<_1a8535877_Type>>(nullptr);;
				{
					
{
						_case_begin_1aa01a35a:;
						{
							_3498_elem=(*(_1a85382b4_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aa01a1b2:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a819ec94_SptrTypeDecl>()))._field_Elem;
				return _1a84e3b10_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1aa019931:;
	};
	return false;;
}



inline jule::Bool _1a84e2ceb_annotateConstraintMap(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a9edbd87:;
			{
				jule::Ptr<_1a8544633_Map> _3698_m = _1a8539abd_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1a81a1713_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81a1713_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1a84e3b10_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1a84e3b10_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a9edbd10:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e313c_annotateConstraintTup(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a9ee271c:;
			{
				jule::Ptr<_1a81a0426_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81a0426_TupleTypeDecl>();;
				jule::Ptr<_1a8543a83_Tuple> _3858_tup2 = _1a8539d54_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9ee56ba:;
					if (it != expr_end) {
						jule::Ptr<_1a8535877_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9ee749c:;
								if (it != expr_end) {
									jule::Ptr<_1a819dbe9_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1a84e3b10_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a9ee749c:;
									++it;
									goto _iter_begin_1a9ee749c;
								}
								_iter_end_1a9ee749c:;
							};
						}
						_iter_next_1a9ee56ba:;
						++it;
						goto _iter_begin_1a9ee56ba;
					}
					_iter_end_1a9ee56ba:;
				};
			}
		}
		_match_end_1a9ee2695:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e347d_annotateConstraintFn(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a9ee79db:;
			{
				jule::Ptr<_1a81b0986_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a81b0986_FnDecl>();;
				jule::Ptr<_1a829a752_FnIns> _4028_f = _1a853931a_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9ee9922:;
					if (it != expr_end) {
						jule::I64 _4039_i = it - expr->begin();
						jule::Ptr<_1a82995ec_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1a84e3b10_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a9ee9922:;
						++it;
						_4039_i++;
						goto _iter_begin_1a9ee9922;
					}
					_iter_end_1a9ee9922:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1a84e3b10_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a9ee7975:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e37be_annotateConstraintIdent(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _41944_k) {
	jule::Ptr<_1a819e304_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a819e304_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1a81c246a_StructIns> _4217_s = _1a85395a1_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9eed3d7:;
		if (it != expr_end) {
			jule::I64 _4227_i = it - expr->begin();
			jule::Ptr<_1a81aae04_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1a8533e91_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1a84e3e73_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1a9eed3d7;
				};
				jule::Ptr<_1a819dbe9_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa001011:;
					if (it != expr_end) {
						jule::Ptr<_1a819dbe9_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa001bb0:;
								if (it != expr_end) {
									jule::Ptr<_1a8533e91_InsGeneric> _43717_sg = *it;
									{
										if (_1a84e3b10_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1aa001bb0:;
									++it;
									goto _iter_begin_1aa001bb0;
								}
								_iter_end_1aa001bb0:;
							};
						}
						_iter_next_1aa001011:;
						++it;
						goto _iter_begin_1aa001011;
					}
					_iter_end_1aa001011:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1a9eed3d7:;
			++it;
			_4227_i++;
			goto _iter_begin_1a9eed3d7;
		}
		_iter_end_1a9eed3d7:;
	};
	return false;;
}



inline jule::Bool _1a84e3b10_annotateConstraint(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1aa001ee0:;
			{
				return _1a84e37be_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1aa001561:;
	};
	{
		
		if ((_1a8538ced_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa002d9d:;
			{
				return _1aa004465_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a8539084_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa002e14:;
			{
				return _1aa00470c_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a853854a_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa002e7a:;
			{
				return _1aa00bb54_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a85382b4_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa002ee1:;
			{
				return _1aa016d90_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1a8539abd_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa003068:;
			{
				return _1a84e2ceb_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1a853931a_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa0034b9:;
			{
				return _1a84e347d_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1a8539d54_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1aa003541:;
			{
				return _1a84e313c_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1aa002c9e:;
			{
				return false;;
			}
		}
		_match_end_1aa002c38:;
	};
}



inline void _1a84e3e73_pushGeneric(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _47332_k, jule::I64 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)});
	jule::Ptr<_1a81aae04_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa02175c:;
		if (it != expr_end) {
			jule::Ptr<_1a8535877_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1a8535c73_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1aa02175c:;
			++it;
			goto _iter_begin_1aa02175c;
		}
		_iter_end_1aa02175c:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a84e3b10_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1a84e42b4_annotatePrim(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a84e62d8_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1a84e4605_annotateArr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a85452b0_Arr> _4937_parr = _1a8538ced_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a85452b0_Arr> _4977_arr = _1a8538ced_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1a84e6629_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a84e4946_annotateSlc(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8542e8e_Slc> _5037_pslc = _1a8539084_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8542e8e_Slc> _5077_slc = _1a8539084_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1a84e6629_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a84e4d42_checkMapKey(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _51238_k, jule::Ptr<_1a8535877_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8535877_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1a84e6629_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a84e5183_annotateMap(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8544633_Map> _5217_pmap = _1a8539abd_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8544633_Map> _5257_m = _1a8539abd_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1a84e4d42_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1a84e4d42_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a84e54c4_annotateFn(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a829a752_FnIns> _5317_pf = _1a853931a_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a829a752_FnIns> _5357_f = _1a853931a_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1aa02dcb9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a8297b4a_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1a8297b4a_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1aa02dd52:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aa02dc20:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a8535877_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa030c00:;
		if (it != expr_end) {
			jule::I64 _5458_i = it - expr->begin();
			jule::Ptr<_1a82995ec_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_1a84e6629_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1aa030c00:;
			++it;
			_5458_i++;
			goto _iter_begin_1aa030c00;
		}
		_iter_end_1aa030c00:;
	};
	if ((!(_1a8297b4a_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1a84e6629_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a84e5815_annotatePtr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8545c83_Ptr> _5607_pptr = _1a853854a_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8545c83_Ptr> _5647_ptr = _1a853854a_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1a84e6629_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a84e5b56_annotateSptr(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a85424bb_Sptr> _5707_ssptr = _1a85382b4_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a85424bb_Sptr> _5747_sptr = _1a85382b4_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1a84e6629_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a84e5e97_annotateStruct(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a81c246a_StructIns> _5807_s = _1a85395a1_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a81c246a_StructIns> _5847_s2 = _1a85395a1_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa039bb5:;
		if (it != expr_end) {
			jule::I64 _5888_i = it - expr->begin();
			jule::Ptr<_1a8533e91_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1a8533e91_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1a85360b4_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_1aa039bb5;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Type));
				if ((!(_1a84e6629_annotateKind(_self_, &((*_5898_g2.alloc)._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa039bb5:;
			++it;
			_5888_i++;
			goto _iter_begin_1aa039bb5;
		}
		_iter_end_1aa039bb5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a84e62d8_annotateAny(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1a8535c73_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa03d290:;
		if (it != expr_end) {
			jule::I64 _6037_i = it - expr->begin();
			jule::Ptr<_1a81aae04_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1aa03d290;
				};
				jule::Ptr<_1a8533e91_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_1aa03eb65:;
						{
							_1a84e3e73_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1a85360b4_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_1aa03ec0e:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1aa03ea22:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1aa03d290:;
			++it;
			_6037_i++;
			goto _iter_begin_1aa03d290;
		}
		_iter_end_1aa03d290:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e6629_annotateKind(_1a84e23c2_dynamicTypeAnnotation* _self_, jule::Ptr<_1a8535877_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a84e62d8_annotateAny(_self_, _62240_k)) {
			_case_begin_1aa04221c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853802d_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa042283:;
			{
				__jule_func_result = _1a84e42b4_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8538ced_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa0422e9:;
			{
				__jule_func_result = _1a84e4605_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8539084_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa042371:;
			{
				__jule_func_result = _1a84e4946_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a8539abd_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa04252a:;
			{
				__jule_func_result = _1a84e5183_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a853931a_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa042591:;
			{
				__jule_func_result = _1a84e54c4_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a853854a_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa042607:;
			{
				__jule_func_result = _1a84e5815_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a85382b4_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa04266d:;
			{
				__jule_func_result = _1a84e5b56_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a85395a1_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1aa0426e5:;
			{
				__jule_func_result = _1a84e5e97_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa0420eb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aa041b78:;
	};
}



inline jule::Bool _1a84e68b0_annotate(_1a84e23c2_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1a84e6629_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1a84e77c3_pushErrToken(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a81881cd_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1a83ab39b_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1a84e7b36_pushErr(_1a84e722e_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1a84e77c3_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _1a84e7dbc_getParams(_1a84e722e_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a829631e_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a84e820d_checkCounts(_1a84e722e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1a829631e_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I64 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1aa04e427:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1aa04e290:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1aa04de60:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1aa04dde9:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1aa04dd83:;
	};
	_21ca86171_Builder _7027_err = static__21ca869bd_New(32LL);;
	({
		auto except = _21ca87150_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa051ddb:;
		if (it != expr_end) {
			jule::I64 _7057_i = it - expr->begin();
			jule::Ptr<_1a82995ec_ParamIns> *_70510_p = it;
			{
				({
					auto except = _21ca87150_WriteStr(&_7027_err, _1a8535c73_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_1aa051ddb:;
			++it;
			_7057_i++;
			goto _iter_begin_1aa051ddb;
		}
		_iter_end_1aa051ddb:;
	};
	({
		auto except = _21ca87408_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_1a84e7b36_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21ca879d0_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e86b4_checkArg(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _71629_p, jule::Ptr<_1a85028cc_Data>* _71648_arg, jule::Ptr<_1a81881cd_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a829ca2e_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1a8500de7_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1a84e23c2_dynamicTypeAnnotation _7219_dta = _1a84e23c2_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a84e68b0_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1a84e77c3_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a83b8122_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1a83b388c_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _1a8507daa_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a84e8ab0_push(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _74525_p, jule::Ptr<_1a81a302d_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a8535877_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_74525_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a85028cc_Data> _7557_d = _1a8523689_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7473_oldMut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a84e86b4_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a84e8eab_pushVariadic(_1a84e722e_fnCallArgChecker* _self_, jule::Ptr<_1a82995ec_ParamIns>* _76933_p, jule::I64 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a828c832_SliceExprModel> _7737_model = jule::new_ptr<_1a828c832_SliceExprModel>(_1a828c832_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1a8535877_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a8535877_Type> _7847_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_1a8535877_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1a81a302d_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1aa064827:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8542e8e_Slc>(_1a8542e8e_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1aa064b24:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_1aa064aad:;
			};
			jule::Ptr<_1a85028cc_Data> _8068_d = _1a8523007_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1aa063caa;
			};
			if ((*((*(_8068_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a84e86b4_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1aa068584:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1a828c832_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_1aa06b39a:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1aa06b334:;
				};
				(_76951_i)++;
				goto _iter_end_1aa063caa;
			};
			__jule_func_result=(__jule_func_result && _1a84e86b4_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1aa063caa:;
	}
	_iter_end_1aa063caa:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1a84e77c3_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a84e92ec_checkArgs(_1a84e722e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	_1a8503e2d_target _8513_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I64 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1a829631e_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1aa0747e3:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1a82995ec_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1aa076295:;
					{
						__jule_func_result=(_1a84e8eab_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1aa0749be;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1aa076383:;
					{
						__jule_func_result=false;
						goto _iter_end_1aa0749be;
					}
				}
				else {
					_case_begin_1aa075dcc:;
					{
						__jule_func_result=(_1a84e8ab0_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1aa075d55:;
			};
			(_8557_i)++;
		}
	_iter_next_1aa0749be:;
	}
	_iter_end_1aa0749be:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8513_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a84e9583_checkDynamicTypeAnnotation(_1a84e722e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0780dd:;
		if (it != expr_end) {
			jule::Ptr<_1a8533e91_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1a84e7b36_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa0780dd:;
			++it;
			goto _iter_begin_1aa0780dd;
		}
		_iter_end_1aa0780dd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a84e9819_check(_1a84e722e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _8927_params = _1a84e7dbc_getParams(_self_);;
	__jule_func_result=_1a84e820d_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a84e92ec_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a84e9583_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1a84ea6e9_pushErr(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81881cd_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1a8504d74_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1a84eaa5c_pushSuggestion(_1a84ea166_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1a85051d7_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1a84eae7a_pushMatch(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81c18ba_FieldIns>* _93930_f, jule::Ptr<_1a85028cc_Data>* _93949_d, jule::Ptr<_1a81881cd_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a83b8122_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Type), _93949_d, _93964_errorToken)) {
		_1a83b388c_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Type), _93949_d, (*(_93964_errorToken)), _1a8507daa_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1a828ad80_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a828ad80_StructArgExprModel>(_1a828ad80_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1a84eb2dd_checkPair(_1a84ea166_structLitChecker* _self_, jule::Ptr<_1a81a774c_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _95862_exprs) {
	jule::Ptr<_1a81c18ba_FieldIns> _9607_f = _1a81c3856_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1a84ea6e9_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1a83abb0a_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1a84ea6e9_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1a84eaa5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1aa0845d3:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0855d4:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1aa08612e:;
						{
							jule::Ptr<_1a81a774c_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1a81a774c_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1aa0869d1:;
									{
										goto _iter_end_1aa0855d4;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1aa08885c:;
									{
										_1a84ea6e9_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1aa0855d4;
									}
								}
								_match_end_1aa086948:;
							};
						}
					}
					_match_end_1aa0860a7:;
				};
			}
			_iter_next_1aa0855d4:;
			++it;
			goto _iter_begin_1aa0855d4;
		}
		_iter_end_1aa0855d4:;
	};
	jule::Ptr<_1a8535877_Type> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Type;
	jule::Ptr<_1a85028cc_Data> _9907_d = _1a8523689_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1a84eae7a_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1a84eb62e_readyExprs(_1a84ea166_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa08ddc3:;
		if (it != expr_end) {
			jule::I64 _9998_i = it - expr->begin();
			jule::Ptr<_1a81a302d_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1aa08eb4e:;
						{
							jule::Ptr<_1a81a8d58_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1a81a8d58_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type42) {
									_case_begin_1aa092a64:;
									{
										goto _match_end_1aa092635;
									}
								}
								else {
									_case_begin_1aa09269b:;
									{
										_1a84ea6e9_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1aa08ddc3;
									}
								}
								_match_end_1aa092635:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1a81a774c_FieldExprPair>(_1a81a774c_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1aa08eac7:;
				};
			}
			_iter_next_1aa08ddc3:;
			++it;
			_9998_i++;
			goto _iter_begin_1aa08ddc3;
		}
		_iter_end_1aa08ddc3:;
	};
	return _9987_ok;;
}



inline void _1a84eb8d7_check(_1a84ea166_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a84eb62e_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa095d20:;
		if (it != expr_end) {
			jule::I64 _10298_i = it - expr->begin();
			jule::Ptr<_1a81a302d_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1aa09bc49:;
						{
							jule::Ptr<_1a81a774c_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1a81a774c_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1a84ea6e9_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1a84eb2dd_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1aa097041:;
						{
							if (_10287_paired) {
								_1a84ea6e9_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a84ea6e9_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1aa095d20;
							};
							jule::Ptr<_1a81c18ba_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1a83abb0a_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1a84ea6e9_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1a84eaa5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a8535877_Type> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Type;
							jule::Ptr<_1a85028cc_Data> _10599_d = _1a8523689_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1aa095d20;
							};
							_1a84eae7a_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1aa096eca:;
				};
			}
			_iter_next_1aa095d20:;
			++it;
			_10298_i++;
			goto _iter_begin_1aa095d20;
		}
		_iter_end_1aa095d20:;
	};
	if ((!(_10287_paired))) {
		jule::I64 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1aa0a07ca:;
				{
					return;;
				}
			}
			_match_end_1aa0a06a9:;
		};
		_21ca86171_Builder _10778_idents = static__21ca869bd_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				({
					auto except = _21ca87150_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1079:5"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1080:5"));
					(except.result);
				});
			}
		_iter_next_1aa0a1039:;
		}
		_iter_end_1aa0a1039:;;
		_1a84ea6e9_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_21ca88481_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1a84ebe48_rangeChecker_eq(_1a84ebe48_rangeChecker *_self_, _1a84ebe48_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1a83cc1ad_Var> _1a84ec465_buildVar(_1a84ebe48_rangeChecker* _self_, jule::Ptr<_1a81b1b41_VarDecl>* _109725_decl) {
	jule::Ptr<_1a83cc1ad_Var> _10987_v = _1a837e47e_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1a84ec663_setSizeKey(_1a84ebe48_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1a84eca81_checkRangeExprValidity(_1a84ebe48_rangeChecker* _self_, jule::Ptr<_1a85028cc_Data>* _111643_d, jule::Ptr<_1a83cc1ad_Var>* _111654_key, jule::Ptr<_1a8535877_Type>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1a853725d_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1a83b8122_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_TypeSym))._field_Type), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a84ecc7e_checkSlice(_1a84ebe48_rangeChecker* _self_) {
	_1a84ec663_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8542e8e_Slc> _11357_slc = _1a8539084_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_11357_slc))._field_Elem});
	_1a84eca81_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1a84ece7c_checkArray(_1a84ebe48_rangeChecker* _self_) {
	_1a84ec663_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a85452b0_Arr> _11487_arr = _1a8538ced_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_11487_arr))._field_Elem});
	_1a84eca81_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1a84ed17a_checkMapKeyA(_1a84ebe48_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8544633_Map> _11607_m = _1a8539abd_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_11607_m))._field_Key});
	jule::Ptr<_1a85028cc_Data> _11647_d = jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Type=(*_11607_m.alloc)._field_Key;
	_1a84eca81_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1a84ed378_checkMapKeyB(_1a84ebe48_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a8544633_Map> _11757_m = _1a8539abd_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_11757_m))._field_Val});
	jule::Ptr<_1a85028cc_Data> _11797_d = jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Type=(*_11757_m.alloc)._field_Val;
	_1a84eca81_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1a84ed576_checkMap(_1a84ebe48_rangeChecker* _self_) {
	_1a84ed17a_checkMapKeyA(_self_);
	_1a84ed378_checkMapKeyB(_self_);
}



inline void _1a84ed774_checkStr(_1a84ebe48_rangeChecker* _self_) {
	_1a84ec663_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a818aab5_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _1a84ed972_checkComptime(_1a84ebe48_rangeChecker* _self_) {
	_1a84ec663_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a818aab5_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a84ec465_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a84edc08_checkComptimeRange(_1a84ebe48_rangeChecker* _self_) {
	jule::Ptr<_1a8327a76_comptimeRange> _12147_range = _1a853b3c7_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data6)) {
			_case_begin_1aa0c2951:;
			{
				_1a84ed972_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1aa0c2c5e:;
			{
				_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aa0c2be8:;
	};
}



inline jule::Bool _1a84ede8e_check(_1a84ebe48_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1aa0c61d5:;
		}
		else if ((_1a8539084_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa0c4a85:;
			{
				_1a84ecc7e_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a8538ced_Arr((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa0c4aeb:;
			{
				_1a84ece7c_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a8539abd_Map((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa0c515c:;
			{
				_1a84ed576_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a853b3c7_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa0c51c3:;
			{
				return _1a84edc08_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1aa0c49ec:;
			{
				jule::Ptr<_1a853d990_Prim> _12474_prim = _1a853802d_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
				if (((_12474_prim != nullptr) && _1a8541e5a_IsStr(_12474_prim))) {
					_1a84ed774_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1aa0c490e:;
	};
	_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1a84eebe8_prepareTypes(_1a84ee786_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a829b984_Types((*(_self_))._field_f);
	};
}



inline void _1a84eeea1_prepareExprs(_1a84ee786_retTypeChecker* _self_, jule::Ptr<_1a81a302d_Expr>* _127633_e) {
	if (((*(_127633_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa0cc6d6:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127633_e))))._field_Kind.unsafe_cast_ptr<_1a81a3b22_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1aa0cc065:;
			{
				{ jule::Slice<jule::Ptr<_1a81a302d_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127633_e))); };
			}
		}
		_match_end_1aa0cbad1:;
	};
}



inline void _1a850019e_checkExprs(_1a84ee786_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a85028cc_Data>> _12927_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a85028cc_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1a850489b_eval> _12937_eval = _1a83b3271_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	(*(_12937_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0d0321:;
		if (it != expr_end) {
			jule::I64 _12958_i = it - expr->begin();
			jule::Ptr<_1a81a302d_Expr> _129515_expr = *it;
			{
				if ((_12958_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1aa0d0321;
				};
				jule::Ptr<_1a8535877_Type> _13008_t = (*(_self_))._field_types[_12958_i];;
				(*_12937_eval.alloc)._field_prefix=_13008_t;
				jule::Ptr<_1a85028cc_Data> _13038_d = _1a8523689_evalExpr(_12937_eval, _129515_expr);;
				if ((_13038_d == nullptr)) {
					goto _iter_next_1aa0d0321;
				};
				{ jule::Slice<jule::Ptr<_1a85028cc_Data>> &__jule_push_dest = _12927_datas; __jule_push_dest.push(_13038_d); };
				if ((((*(_self_))._field_mutable && (!((*(_13038_d))._field_Mutable))) && _1a853725d_Mutable((*(_13038_d))._field_Type.ptr()))) {
					_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1a84e09ec_assignTypeChecker _13158_ac = _1a84e09ec_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13008_t, ._field_d=_13038_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1a8361241_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1a84e19ed_check(&_13158_ac);
			}
			_iter_next_1aa0d0321:;
			++it;
			_12958_i++;
			goto _iter_begin_1aa0d0321;
		}
		_iter_end_1aa0d0321:;
	};
	if ((_12927_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a8290a66_TupleExprModel>(_1a8290a66_TupleExprModel{._field_Datas=_12927_datas}), &__jule_any_type84);
	} else if ((_12927_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12927_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a8500435_tryFuncMultiRetForward(_1a84ee786_retTypeChecker* _self_) {
	jule::Ptr<_1a850489b_eval> _13377_eval = _1a83b3271_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
	jule::Ptr<_1a85028cc_Data> _13387_d = _1a8523689_evalExpr(_13377_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13387_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a8543a83_Tuple> _13447_tup = _1a8539d54_Tup((*(_13387_d))._field_Type.ptr());;
	if ((_13447_tup == nullptr)) {
		return false;;
	};
	if (((*(_13447_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1aa0db67e;
	};
	(*(_self_))._field_model=(*(_13387_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0d9726:;
		if (it != expr_end) {
			jule::I64 _13527_i = it - expr->begin();
			{
				jule::Ptr<_1a8535877_Type> _13538_t1 = (*(_self_))._field_types[_13527_i];;
				jule::Ptr<_1a8535877_Type> _13548_t2 = (*(_13447_tup))._field_Types[_13527_i];;
				if ((!(_1a83b3d43__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13538_t1), &(_13548_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1aa0db67e;
				};
			}
			_iter_next_1aa0d9726:;
			++it;
			_13527_i++;
			goto _iter_begin_1aa0d9726;
		}
		_iter_end_1aa0d9726:;
	};
	return true;;
	_julec_label_1aa0db67e:;
	_21ca86171_Builder _13617_wanted = static__21ca869bd_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0dbc89:;
		if (it != expr_end) {
			jule::I64 _13627_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _136210_t = *it;
			{
				({
					auto except = _21ca87150_WriteStr(&_13617_wanted, _1a8535c73_Str(_136210_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1363:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13627_i) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(&_13617_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1365:5"));
						(except.result);
					});
				};
			}
			_iter_next_1aa0dbc89:;
			++it;
			_13627_i++;
			goto _iter_begin_1aa0dbc89;
		}
		_iter_end_1aa0dbc89:;
	};
	_21ca86171_Builder _13687_given = static__21ca869bd_New(32LL);;
	{
		auto expr = &((*(_13447_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0dd9c2:;
		if (it != expr_end) {
			jule::I64 _13697_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _136910_t = *it;
			{
				({
					auto except = _21ca87150_WriteStr(&_13687_given, _1a8535c73_Str(_136910_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1370:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13697_i) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(&_13687_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1372:5"));
						(except.result);
					});
				};
			}
			_iter_next_1aa0dd9c2:;
			++it;
			_13697_i++;
			goto _iter_begin_1aa0dd9c2;
		}
		_iter_end_1aa0dd9c2:;
	};
	_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_21ca879d0_Str(&_13617_wanted), &__jule_any_type5); (*it++) = jule::Any(_21ca879d0_Str(&_13687_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1a8500776_check(_1a84ee786_retTypeChecker* _self_, jule::Ptr<_1a81a302d_Expr>* _137926_e) {
	_1a84eebe8_prepareTypes(_self_);
	_1a84eeea1_prepareExprs(_self_, _137926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1aa0e1d9e:;
			{
				if ((!(_1a829891a_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a8297b4a_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1aa0e1e15:;
			{
				_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1aa0e1e7b:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1aa0e68ed:;
						{
							if (_1a8500435_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1aa0e6843:;
				};
				_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1aa0e1ee2:;
			{
				_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1aa0e2058:;
			{
				_1a83ab39b_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa0e1c39:;
	};
	_1a850019e_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1a85028cc_Data_eq(_1a85028cc_Data *_self_, _1a85028cc_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1a8502cea_IsNil(_1a85028cc_Data* _self_) {
	return _1a85369aa_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a8503081_IsVoid(_1a85028cc_Data* _self_) {
	return _1a8536c41_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1a8503317_IsConst(_1a85028cc_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a8503658_GoodOperand(_1a85028cc_Data* _self_, jule::Ptr<_1a85028cc_Data>* _6228_other) {
	if ((_1a8538a67_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a853802d_Prim((*((*(_6228_other))))._field_Type) == nullptr) || (!(_1a85421e1_IsAny(_1a853802d_Prim((*((*(_6228_other))))._field_Type).ptr())))) && (_1a8539837_Trait((*((*(_6228_other))))._field_Type) == nullptr)) && (!(_1a85369aa_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1a8503a54_Value_eq(_1a8503a54_Value *_self_, _1a8503a54_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1a8503e2d_target_eq(_1a8503e2d_target *_self_, _1a8503e2d_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1a850489b_eval_eq(_1a850489b_eval *_self_, _1a850489b_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_1a8503e2d_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _1a8504d74_pushErr(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _1a85051d7_pushSuggestion(_1a850489b_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_1a83ab70e_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _1a85053d5_allowBuiltin(_1a850489b_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a85055d3_disallowBuiltin(_1a850489b_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a8505869_isUnsafe(_1a850489b_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a8505b00_isGlobal(_1a850489b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4)) {
			_case_begin_1aa15c4e1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa15c8ed:;
			{
				return false;;
			}
		}
		_match_end_1aa15c887:;
	};
}



inline jule::Bool _1a8505e41_applyNumericPrefix(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_1a8503317_IsConst((*(_12939_d)).ptr())))) || (_1a853802d_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a853d990_Prim> _1363_prim = _1a853802d_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a832636b_IsFloat(_1a853dd14_Str(_1363_prim.ptr()))) {
			_case_begin_1aa160060:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a8535877_Type>((*((*(_self_))._field_prefix)));
				_1a828265c_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _1a82817d2_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		else if (_1a8325953_IsSigInt(_1a853dd14_Str(_1363_prim.ptr()))) {
			_case_begin_1aa1600c6:;
			{
				if ((!(_1a84dce4a_sigAssignable(_1a853dd14_Str(_1363_prim.ptr()), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a8535877_Type>((*((*(_self_))._field_prefix)));
				_1a8281a8a_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		else if (_1a8325c61_IsUnsigInt(_1a853dd14_Str(_1363_prim.ptr()))) {
			_case_begin_1aa16013c:;
			{
				if ((!(_1a84dd313_unsigAssignable(_1a853dd14_Str(_1363_prim.ptr()), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1a8535877_Type>((*((*(_self_))._field_prefix)));
				_1a8281d43_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _1a828154b_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		_match_end_1aa15ee72:;
	};
	return true;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8506282_litStr(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_1a81895b9_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_1a84db1ce_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_1a84db520_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_1a82273d2_Const> _1717_constant = static__1a827e8ac_NewStr(_1657_s);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a92be_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85065c3_litRune(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _18120_l) {
	jule::I32 _1823_r = _1a84dae15_ToRune((*((*(_18120_l))))._field_Value);;
	jule::Ptr<_1a85028cc_Data> _1837_data = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_1823_r))});;
	if ((_1823_r <= 255LL)) {
		(*(_1837_data))._field_Type=_1a85aaca4_primU8;
	} else {
		(*(_1837_data))._field_Type=_1a85aa743_primI32;
	};
	(*(_1837_data))._field_Model=jule::Any(jule::new_ptr<_1a82941a7_RuneExprModel>(_1a82941a7_RuneExprModel{._field_Code=_1823_r}), &__jule_any_type86);
	(*_1837_data.alloc)._field_Mutable=true;
	(*_1837_data.alloc)._field_IsRune=true;
	(*_1837_data.alloc)._field_untyped=true;
	return _1837_data;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8506914_litFloat(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _20021_l) {
	jule::F64 _2013_f = ({
		auto except = _1d97a0c6a_ParseFloat((*((*(_20021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a82273d2_Const> _2027_constant = static__1a827eb76_NewF64(_2013_f);;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85abc50_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2027_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2027_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8506c55_litInt(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _21223_l) {
	;
	jule::Str _2157_lit = (*((*(_21223_l))))._field_Value;;
	jule::I64 _2167_base = 0LL;;
	{
		
		if (_205369274_HasPrefix(_2157_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1aa172605:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=16LLU;
			}
		}
		else if (_205369274_HasPrefix(_2157_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1aa1726e3:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=2LLU;
			}
		}
		else if (_205369274_HasPrefix(_2157_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1aa1722a3:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=8LLU;
			}
		}
		else if (((_2157_lit[0LL] == '0') && (_2157_lit.len() > 1LL))) {
			_case_begin_1aa172319:;
			{
				(_2157_lit).mut_slice(1LL);;
				_2167_base=8LLU;
			}
		}
		else {
			_case_begin_1aa17223c:;
			{
				_2167_base=10LLU;
			}
		}
		_match_end_1aa1721b5:;
	};
	jule::Ptr<_1a85028cc_Data> _2367_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	jule::Bool _2387_ok = true;;
	jule::I64 _2393_sig = ({
		auto except = _1d97995b0_ParseInt(_2157_lit, _2167_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2387_ok=false;

			0LL;
		});
	});;
	if (_2387_ok) {
		(*_2367_d.alloc)._field_Constant=static__1a827e0a4_NewI64(_2393_sig);
		(*_2367_d.alloc)._field_Type=_1a85a9ea1_primInt;
	} else {
		jule::U64 _2474_unsig = ({
			auto except = _1d9799109_ParseUint(_2157_lit, _2167_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a8504d74_pushErr(_self_, (*((*(_21223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2367_d.alloc)._field_Constant=static__1a827e329_NewU64(_2474_unsig);
		(*_2367_d.alloc)._field_Type=_1a85a9ad8_primUint;
	};
	(*_2367_d.alloc)._field_Model=jule::Any((*_2367_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2367_d.alloc)._field_untyped=true;
	if ((!(_1a8505e41_applyNumericPrefix(_self_, &(_2367_d))))) {
		_1a852c6e8_fitBitsize(&(_2367_d));
	};
	return _2367_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8507096_litNum(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr>* _26723_l) {
	{
		
		if (_1a818a268_IsFloat((*((*(_26723_l))))._field_Value)) {
			_case_begin_1aa1798a4:;
			{
				return _1a8506914_litFloat(_self_, _26723_l);;
			}
		}
		else {
			_case_begin_1aa17983d:;
			{
				return _1a8506c55_litInt(_self_, _26723_l);;
			}
		}
		_match_end_1aa17972d:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85073d7_evalLit(_1a850489b_eval* _self_, jule::Ptr<_1a81a3eb8_LitExpr> _27623_lit) {
	{
		
		if (_1a8189333_IsStr((*(_27623_lit))._field_Value)) {
			_case_begin_1aa17aac5:;
			{
				return _1a8506282_litStr(_self_, &(_27623_lit));;
			}
		}
		else if (_1a8189883_IsRune((*(_27623_lit))._field_Value)) {
			_case_begin_1aa17ab3b:;
			{
				return _1a85065c3_litRune(_self_, &(_27623_lit));;
			}
		}
		else if (_1a818a532_IsNum((*(_27623_lit))._field_Value)) {
			_case_begin_1aa17aba2:;
			{
				return _1a8507096_litNum(_self_, &(_27623_lit));;
			}
		}
		else {
			_case_begin_1aa17a4ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa17a3aa:;
	};
}



inline jule::Any _1a8507728_findBuiltins(_1a850489b_eval* _self_, jule::Str* _28929_ident) {
	if (_1a83a5692_IsPub((*(_28929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data2)) {
				_case_begin_1aa17ce3a:;
				{
					jule::Any _2939_def = _1a852c4b7_findBuiltinsImport(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1a838b14a_ImportInfo>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data2));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4)) {
				_case_begin_1aa17cb82:;
				{
					jule::Any _2989_def = _1a852d221_findBuiltinsSema(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1a83a8497_sema>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
				_case_begin_1aa17cea1:;
				{
					jule::Any _3039_def = _1a852d221_findBuiltinsSema(_28929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)))._field_s);;
					if ((_3039_def != nullptr)) {
						return _3039_def;;
					};
				}
			}
			_match_end_1aa17cd80:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a85ac58b_findBuiltinDef(_28929_ident);;
}



inline jule::Any _1a8507b24_getDef(_1a850489b_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded) {
	jule::Ptr<_1a83cc1ad_Var> _3217_v = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8554445_FindVar((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3217_v != nullptr)) {
		return jule::Any(_3217_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a8534a85_TypeAlias> _3267_ta = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8554841_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3267_ta != nullptr)) {
		return jule::Any(_3267_ta, &__jule_any_type8);;
	};
	if ((!(_31635_binded))) {
		jule::Ptr<_1a82a555e_Enum> _3328_enm = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a85557ba_FindEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3328_enm != nullptr)) {
			return jule::Any(_3328_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1a82a6c69_TypeEnum> _3378_tenm = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8555b0b_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3378_tenm != nullptr)) {
			return jule::Any(_3378_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1a8297694_Fn> _3437_f = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8555138_FindFn((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3437_f != nullptr)) {
		return jule::Any(_3437_f, &__jule_any_type10);;
	};
	jule::Ptr<_1a81be610_Struct> _3487_s = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8554c3c_FindStruct((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3487_s != nullptr)) {
		return jule::Any(_3487_s, &__jule_any_type9);;
	};
	return _1a8507728_findBuiltins(_self_, _31623_ident);;
}



inline jule::Ptr<_1a83790c2_ReferenceStack> _1a8507daa_getOwnerRefers(_1a850489b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1aa187461:;
			{
				return _1a83614c7_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1aa185d00:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1aa185c89:;
	};
	return nullptr;;
}



inline void _1aa1a0534_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _37437_ref) {
	jule::Ptr<_1a83790c2_ReferenceStack> _3757_refers = _1a8507daa_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1aa1a2b0d_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1a8379e2a_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type64));
	};
}

inline void _1aa1b702e_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _37437_ref) {
	jule::Ptr<_1a83790c2_ReferenceStack> _3757_refers = _1a8507daa_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1aa1b9372_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1a8379e2a_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type7));
	};
}

inline void _1aa2a0458_pushReference(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns>* _37437_ref) {
	jule::Ptr<_1a83790c2_ReferenceStack> _3757_refers = _1a8507daa_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1aa2a2a54_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1a8379e2a_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type65));
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85084a4__evalEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _38125_enm) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38125_enm, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85088a0_evalEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _39028_enm, jule::Ptr<_1a81881cd_Token> _39040_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39028_enm))._field_Public, (*_39028_enm.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _39040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39028_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a85084a4__evalEnum(_self_, _39028_enm);;
}



inline jule::Ptr<_1a85028cc_Data> _1a8508be1__evalTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _39929_enm) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39929_enm, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85090dc_evalTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _40832_enm, jule::Ptr<_1a81881cd_Token> _40848_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40832_enm))._field_Public, (*_40832_enm.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _40848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40832_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8508be1__evalTypeEnum(_self_, _40832_enm);;
}



inline jule::Ptr<_1a85028cc_Data> _1a850942d__evalStruct(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns> _41727_s) {
	jule::Ptr<_1a85028cc_Data> _4187_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41727_s, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41727_s, &__jule_any_type65), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if ((((*(_41727_s))._field_Decl != nullptr) && (*(*(_41727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4187_d))._field_Type))._field_BindIdent=(*(*(_41727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4187_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8509829_evalStruct(_1a850489b_eval* _self_, jule::Ptr<_1a81be610_Struct> _43130_s, jule::Ptr<_1a81881cd_Token> _43146_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43130_s))._field_Public, (*_43130_s.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _43146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43130_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8509ecd_checkDeprecated(_self_, &((*_43130_s.alloc)._field_Directives), _43146_errorToken);
	jule::Ptr<_1a81c246a_StructIns> _4407_ins = _1a81beaa5_instance(_43130_s);;
	if (((*_43130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a81c246a_StructIns> _4478_exist = _1a81bedb3_appendInstance(_43130_s, &(_4407_ins));;
		if ((_4478_exist != nullptr)) {
			_4407_ins=_4478_exist;
		} else {
			if ((!(_1a83c500d_precheckStructIns((*(_self_))._field_s, &(_4407_ins), _43146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1a850942d__evalStruct(_self_, _4407_ins);;
}



inline jule::Ptr<_1a85028cc_Data> _1a8509b6a_evalFnIns(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns> _46025_f) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_46025_f, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_46025_f, &__jule_any_type64), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline void _1a8509ecd_checkDeprecated(_1a850489b_eval* _self_, jule::Slice<jule::Ptr<_1a819d116_Directive>>* _46936_directives, jule::Ptr<_1a81881cd_Token> _46967_tok) {
	if (_1a8505869_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a819d116_Directive> _4743_d = _1a852c0ee_findDirective(_46936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4743_d != nullptr)) {
		if (((*_4743_d.alloc)._field_Args.len() == 0LL)) {
			_1a8504d74_pushErr(_self_, _46967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1a8504d74_pushErr(_self_, _46967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4743_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a850a3c9_evalFn(_1a850489b_eval* _self_, jule::Ptr<_1a8297694_Fn> _48526_f, jule::Ptr<_1a81881cd_Token> _48534_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48526_f))._field_Public, (*_48526_f.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _48534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48526_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8509ecd_checkDeprecated(_self_, &((*_48526_f.alloc)._field_Directives), _48534_errorToken);
	jule::Ptr<_1a829a752_FnIns> _4947_ins = _1a8298e37_instance(_48526_f);;
	if (((*_48526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1a829a752_FnIns> _5018_exist = _1a8299245_appendInstance(_48526_f, &(_4947_ins));;
		if ((_5018_exist != nullptr)) {
			_4947_ins=_5018_exist;
		};
	};
	_1aa1a0534_pushReference(_self_, &(_4947_ins));
	return _1a8509b6a_evalFnIns(_self_, _4947_ins);;
}



inline void _1a850a7e7_pushIllegalCycleError(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _51038_v1, jule::Ptr<_1a83cc1ad_Var>* _51049_v2, _21ca86171_Builder* _51064_message) {
	;
	jule::Str _5123_refersTo = _21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51038_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_51049_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5133_buf = _21ca88481_Buf(_51064_message);;
	({
		auto except = _21ca87150_WriteStr(_51064_message, _205368dab_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:514:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_51064_message, _5123_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_51064_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
	});
	({
		auto except = _21ca86d0e_Write(_51064_message, _5133_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:517:3"));
		(except.result);
	});
}



inline jule::Bool _1a850abe3_checkCrossCycle(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _52032_v, _21ca86171_Builder* _52046_message) {
	{
		auto expr = &((*((*(_52032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1a6edb:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> *_52110_d = it;
			{
				if (((*(_52110_d)) == (*(_self_))._field_owner)) {
					_1a850a7e7_pushIllegalCycleError(_self_, _52032_v, _52110_d, _52046_message);
					return false;;
				};
				if ((!(_1a850abe3_checkCrossCycle(_self_, _52110_d, _52046_message)))) {
					_1a850a7e7_pushIllegalCycleError(_self_, _52032_v, _52110_d, _52046_message);
					return false;;
				};
			}
			_iter_next_1aa1a6edb:;
			++it;
			goto _iter_begin_1aa1a6edb;
		}
		_iter_end_1aa1a6edb:;
	};
	return true;;
}



inline jule::Bool _1a850b0de_checkIllegalCycles(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var>* _53739_v, jule::Ptr<_1a81881cd_Token> _53748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53739_v)))) {
		_1a8504d74_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21ca86171_Builder _5507_message = static__21ca869bd_New(32LL);;
	if ((!(_1a850abe3_checkCrossCycle(_self_, _53739_v, &(_5507_message))))) {
		jule::Str _5538_errMsg = _21ca879d0_Str(&_5507_message);;
		_21ca87bcd_Clear(&_5507_message);
		_1a850a7e7_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53739_v, &(_5507_message));
		_5538_errMsg+=_21ca879d0_Str(&_5507_message);
		_1a8504d74_pushErr(_self_, _53748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5538_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850b4da_evalVar(_1a850489b_eval* _self_, jule::Ptr<_1a83cc1ad_Var> _56527_v, jule::Ptr<_1a81881cd_Token> _56536_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56527_v))._field_Public, (*_56527_v.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _56536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56527_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8509ecd_checkDeprecated(_self_, &((*_56527_v.alloc)._field_Directives), _56536_errorToken);
	if (((*_56527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1aa1be179;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4)) {
			_case_begin_1aa1b0940:;
			{
				jule::Bool _5824_ok = _1a850b0de_checkIllegalCycles(_self_, &(_56527_v), _56536_errorToken);;
				if ((!(_5824_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1aa1b0313:;
			{
				jule::Ptr<_1a835cacd_scopeChecker> _5878_s = (*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1);;
				jule::Ptr<_1a835cacd_scopeChecker> _5888_root = _1a8360eaa_getRoot(_5878_s);;
				if ((((((*_56527_v.alloc)._field_Scope != nullptr) && (!((*_56527_v.alloc)._field_Constant))) && ((*(_5888_root))._field_captured != nullptr)) && _1a8532e29_isVarCaptured(_5888_root, _5878_s, _56527_v))) {
					_1a8360c24_pushCaptured(_5888_root, &(_56527_v));
				};
				if (((!((*_56527_v.alloc)._field_Reference)) || _1a8505869_isUnsafe(_self_))) {
					goto _match_end_1aa1b0753;
				};
				while ((((*_5878_s.alloc)._field_owner == nullptr) && ((*_5878_s.alloc)._field_parent != nullptr))) {
					{
						_5878_s=(*_5878_s.alloc)._field_parent;
					}
				_iter_next_1aa1b45e2:;
				}
				_iter_end_1aa1b45e2:;;
				if (((((*_5878_s.alloc)._field_owner != nullptr) && (*((*_5878_s.alloc)._field_owner))._field_Anon) && ((*_56527_v.alloc)._field_Scope != (*((*_5878_s.alloc)._field_owner))._field_Scope))) {
					_1a8504d74_pushErr(_self_, _56536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56527_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1aa1b0753:;
	};
	if (((*_56527_v.alloc)._field_Scope == nullptr)) {
		_1aa1b702e_pushReference(_self_, &(_56527_v));
	};
	if (((((!((*_56527_v.alloc)._field_Used)) && (!((*_56527_v.alloc)._field_Binded))) && ((*_56527_v.alloc)._field_Scope == nullptr)) && (((*_56527_v.alloc)._field_Value == nullptr) || ((*((*_56527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1a829d997_SymTab> _6218_varfile = _1a8388488_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56527_v));;
		jule::Ptr<_1a829d997_SymTab> _6228_file = _1a83aabc5_getCurrentFile((*(_self_))._field_s);;
		_1a83aae7d_setCurrentFile((*(_self_))._field_s, _6218_varfile);
		_1a83c3407_checkVar((*(_self_))._field_s, &(_56527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4));
		_1a83aae7d_setCurrentFile((*(_self_))._field_s, _6228_file);
	};
	(*_56527_v.alloc)._field_Used=true;
	if ((((*_56527_v.alloc)._field_TypeSym == nullptr) || ((*((*_56527_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1aa1be179:;
	jule::Ptr<_1a85028cc_Data> _6417_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*((*_56527_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56527_v.alloc)._field_Mutable, ._field_Reference=(*_56527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56527_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if ((((*_56527_v.alloc)._field_Value != nullptr) && ((*((*_56527_v.alloc)._field_Value))._field_Data != nullptr))) {
		if (((!((*_56527_v.alloc)._field_Binded)) && _1a83cc5ba_IsInitialized(_56527_v))) {
			(*(_6417_d))._field_IsRune=(*((*((*_56527_v.alloc)._field_Value))._field_Data))._field_IsRune;
		};
		if (((*_56527_v.alloc)._field_Constant && ((*((*((*_56527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
			(*_6417_d.alloc)._field_Constant=jule::new_ptr<_1a82273d2_Const>((*(*((*((*(_56527_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6417_d.alloc)._field_Model=jule::Any((*_6417_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1a83ccad7_untypedConstant(_56527_v)) {
				_1a8505e41_applyNumericPrefix(_self_, &(_6417_d));
				(*_6417_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6417_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850b8d6_evalTypeAlias(_1a850489b_eval* _self_, jule::Ptr<_1a8534a85_TypeAlias> _66533_ta, jule::Ptr<_1a81881cd_Token> _66549_errorToken) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66533_ta))._field_Public, (*_66533_ta.alloc)._field_Token)))) {
		_1a8504d74_pushErr(_self_, _66549_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66533_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66533_ta.alloc)._field_Used=true;
	jule::Trait _6747_kind = (*((*((*_66533_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1a85028cc_Data> _67511_d = nullptr;;
	{
		auto &_match_expr{ _6747_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)) {
			_case_begin_1aa1c988d:;
			{
				_67511_d=_1a850942d__evalStruct(_self_, _6747_kind.cast_ptr<_1a81c246a_StructIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3)) {
			_case_begin_1aa1cc660:;
			{
				_67511_d=_1a85084a4__evalEnum(_self_, _6747_kind.cast_ptr<_1a82a555e_Enum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)) {
			_case_begin_1aa1cd30e:;
			{
				_67511_d=_1a8508be1__evalTypeEnum(_self_, _6747_kind.cast_ptr<_1a82a6c69_TypeEnum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1aa1c8293:;
			{
				_67511_d=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66533_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});
				if ((*_66533_ta.alloc)._field_Binded) {
					(*((*(_67511_d))._field_Type))._field_BindIdent=(*_66533_ta.alloc)._field_Ident;
				} else {
					(*((*(_67511_d))._field_Type))._field_BindIdent=(*(*((*(_66533_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67511_d))._field_Model=jule::Any((*_67511_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		_match_end_1aa1c811c:;
	};
	(*((*(_67511_d))._field_Type))._field_Generic=(*_66533_ta.alloc)._field_Generic;
	return _67511_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850bcd2_evalDef(_1a850489b_eval* _self_, jule::Any* _70428_def, jule::Ptr<_1a81881cd_Token> _70442_ident) {
	{
		auto &_match_expr{ (*(_70428_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa1d1444:;
			{
				return _1a850b4da_evalVar(_self_, (*(_70428_def)).cast_ptr<_1a83cc1ad_Var>(&__jule_any_type7), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1aa1d1213:;
			{
				return _1a85088a0_evalEnum(_self_, (*(_70428_def)).cast_ptr<_1a82a555e_Enum>(&__jule_any_type12), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aa1d14aa:;
			{
				return _1a85090dc_evalTypeEnum(_self_, (*(_70428_def)).cast_ptr<_1a82a6c69_TypeEnum>(&__jule_any_type13), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa1d1521:;
			{
				return _1a8509829_evalStruct(_self_, (*(_70428_def)).cast_ptr<_1a81be610_Struct>(&__jule_any_type9), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aa1d1587:;
			{
				jule::Ptr<_1a8297694_Fn> _7158_f = (*(_70428_def)).cast_ptr<_1a8297694_Fn>(&__jule_any_type10);;
				if ((!(*(_7158_f))._field_Ident.equal("init", 4))) {
					return _1a850a3c9_evalFn(_self_, _7158_f, _70442_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa1d160e:;
			{
				return _1a8509b6a_evalFnIns(_self_, (*(_70428_def)).cast_ptr<_1a829a752_FnIns>(&__jule_any_type64));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa1d1686:;
			{
				return _1a850b8d6_evalTypeAlias(_self_, (*(_70428_def)).cast_ptr<_1a8534a85_TypeAlias>(&__jule_any_type8), _70442_ident);;
			}
		}
		_match_end_1aa1d1345:;
	};
	_1a8504d74_pushErr(_self_, _70442_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_70442_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850c123_evalIdent(_1a850489b_eval* _self_, jule::Ptr<_1a81a4848_IdentExpr> _72829_ident) {
	jule::Any _7297_def = _1a8507b24_getDef(_self_, &((*(_72829_ident))._field_Ident), (*_72829_ident.alloc)._field_Binded);;
	return _1a850bcd2_evalDef(_self_, &(_7297_def), (*_72829_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a85028cc_Data> _1a850c464_evalUnary(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a50da_UnaryExpr> _73330_u) {
	_1a8523b1d_unaryEval _7347_unary = static__1a8524091_new(_self_);;
	return _1a85254c1_eval(&_7347_unary, _73330_u);;
}



inline jule::Ptr<_1a85028cc_Data> _1a850c7a5_evalVariadic(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a54b4_VariadicExpr> _73833_v) {
	if (((*(_73833_v))._field_Expr == nullptr)) {
		_1a8504d74_pushErr(_self_.ptr(), (*_73833_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8535877_Type> _7447_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7447_prefix;
	});;
	jule::Ptr<_1a85028cc_Data> _7487_d = _1a8523689_evalExpr(_self_, (*_73833_v.alloc)._field_Expr);;
	if ((_7487_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8537c97_Variadicable((*(_7487_d))._field_Type.ptr())))) {
		_1a8504d74_pushErr(_self_, (*_73833_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_7487_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a85329ea_makeVariadic(&(_7487_d), (*(_1a8539084_Slc((*(_7487_d))._field_Type)))._field_Elem);
	return _7487_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850cae6_evalUnsafe(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a4392_UnsafeExpr> _76031_u) {
	jule::Bool _7613_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a85028cc_Data> _7637_d = _1a8523689_evalExpr(_self_, (*(_76031_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7613_unsafety;
	return _7637_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a850ce37_evalArr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _76828_s) {
	jule::Ptr<_1a85452b0_Arr> _7707_pt = _1a8538ced_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a85452b0_Arr> _7727_arr = jule::new_ptr<_1a85452b0_Arr>(_1a85452b0_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7707_pt))._field_Elem});;
	jule::Bool _7787_filled = false;;
	if (((*(_76828_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76828_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1aa1e19e8:;
				{
					if (((*((*((*(_76828_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a81a54b4_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1aa1e193d;
					};
					if ((*_7707_pt.alloc)._field_Auto) {
						_1a8504d74_pushErr(_self_, (*_76828_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7787_filled=true;
					((*(_76828_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1aa1e193d:;
		};
	};
	(*(_7727_arr))._field_N=(*_76828_s.alloc)._field_Exprs.len();
	if ((!((*_7707_pt.alloc)._field_Auto))) {
		if (((*_7727_arr.alloc)._field_N > (*_7707_pt.alloc)._field_N)) {
			_1a8504d74_pushErr(_self_, (*_76828_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7727_arr.alloc)._field_N < (*_7707_pt.alloc)._field_N)) {
			(*_7727_arr.alloc)._field_N=(*_7707_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a8290769_ArrayExprModel> _8077_model = jule::new_ptr<_1a8290769_ArrayExprModel>(_1a8290769_ArrayExprModel{._field_Kind=_7727_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7787_filled) {
		(*(_8077_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8077_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76828_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1a8535877_Type> _8167_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7727_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76828_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1e8a22:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _81815_elem = *it;
			{
				jule::Ptr<_1a85028cc_Data> _8198_d = _1a8523689_evalExpr(_self_, _81815_elem);;
				if ((_8198_d == nullptr)) {
					goto _iter_next_1aa1e8a22;
				};
				;
				if (_1a83b8122_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7727_arr.alloc)._field_Elem), &(_8198_d), &((*(_81815_elem))._field_Token))) {
					_1a83b388c_checkAssignType((*(_self_))._field_s, false, &((*_7727_arr.alloc)._field_Elem), &(_8198_d), (*_81815_elem.alloc)._field_Token, _1a8507daa_getOwnerRefers(_self_));
				};
				(*(_8077_model))._field_Elems=jule::append((*_8077_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8198_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1aa1e8a22:;
			++it;
			goto _iter_begin_1aa1e8a22;
		}
		_iter_end_1aa1e8a22:;
	};
	(*_self_.alloc)._field_prefix=_8167_prefix;
	if (_7787_filled) {
		(*_8077_model.alloc)._field_Elems=jule::append((*_8077_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7727_arr, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8077_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a850d3dd_evalExpSlc(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _84531_s, jule::Ptr<_1a8535877_Type> _84555_t, jule::Any _84569_first) {
	jule::Ptr<_1a8542e8e_Slc> _8467_slc = jule::new_ptr<_1a8542e8e_Slc>(_1a8542e8e_Slc{._field_Elem=_84555_t});;
	jule::I64 _8507_i = 0LL;;
	jule::Ptr<_1a828c832_SliceExprModel> _8517_model = jule::new_ptr<_1a828c832_SliceExprModel>(_1a828c832_SliceExprModel{._field_ElemType=_84555_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84531_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84569_first != nullptr)) {
		(*(_8517_model))._field_Elems=jule::append((*_8517_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84569_first; __jule_collection; }));
		_8507_i=1LL;
	};
	jule::Ptr<_1a8535877_Type> _8607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8467_slc))._field_Elem;
	{
		auto expr = (*_84531_s.alloc)._field_Exprs.slice(_8507_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa204984:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _86215_elem = *it;
			{
				jule::Ptr<_1a85028cc_Data> _8638_d = _1a8523689_evalExpr(_self_, _86215_elem);;
				if ((_8638_d != nullptr)) {
					;
					if (_1a83b8122_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8467_slc.alloc)._field_Elem), &(_8638_d), &((*(_86215_elem))._field_Token))) {
						_1a83b388c_checkAssignType((*(_self_))._field_s, false, &((*_8467_slc.alloc)._field_Elem), &(_8638_d), (*_86215_elem.alloc)._field_Token, _1a8507daa_getOwnerRefers(_self_));
					};
					(*_8517_model.alloc)._field_Elems=jule::append((*_8517_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8638_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1aa204984:;
			++it;
			goto _iter_begin_1aa204984;
		}
		_iter_end_1aa204984:;
	};
	(*_self_.alloc)._field_prefix=_8607_prefix;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8467_slc, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8517_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a850d72e_evalSliceExpr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9584_SliceExpr> _88334_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a8538ced_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1aa209604:;
				{
					return _1a850ce37_evalArr(_self_, _88334_s);;
				}
			}
			else if ((_1a8539084_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1aa20969d:;
				{
					jule::Ptr<_1a8542e8e_Slc> _8899_pt = _1a8539084_Slc((*(_self_))._field_prefix);;
					return _1a850d3dd_evalExpSlc(_self_, _88334_s, (*(_8899_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1aa209549:;
		};
	};
	jule::Ptr<_1a8535877_Type> _8947_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88334_s))._field_Exprs.len() == 0LL)) {
		_1a8504d74_pushErr(_self_, (*_88334_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _9027_firstExpr = (*_88334_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1a85028cc_Data> _9037_firstElem = _1a8523689_evalExpr(_self_, _9027_firstExpr);;
	if ((_9037_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a83b8122_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9037_firstElem))._field_Type), &(_9037_firstElem), &((*(_9027_firstExpr))._field_Token));
	jule::Ptr<_1a85028cc_Data> _9137_d = _1a850d3dd_evalExpSlc(_self_, _88334_s, (*(_9037_firstElem))._field_Type, (*(_9037_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8947_prefix;
	return _9137_d;;
}



inline jule::Bool _1a850db2a_checkIntegerIndexingByData(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _91947_d, jule::Ptr<_1a81881cd_Token> _91961_token) {
	jule::Str _9203_errKey = _1a85303cc_checkDataForIntegerIndexing(&((*(_self_))._field_s), _91947_d, &(_91961_token), _1a8507daa_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9203_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1aa212794:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1aa212475:;
			{
				_1a8504d74_pushErr(_self_, _91961_token, _9203_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_91947_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1aa211cc1:;
			{
				_1a8504d74_pushErr(_self_, _91961_token, _9203_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa21240e:;
	};
	return false;;
}



inline void _1a850e048_indexingPtr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _93232_d, jule::Ptr<_1a85028cc_Data>* _93247_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _93266_i) {
	_1a850db2a_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1a8545c83_Ptr> _9367_ptr = _1a853854a_Ptr((*((*(_93232_d))))._field_Type.ptr());;
	{
		
		if (_1a8546800_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1aa215665:;
			{
				_1a8504d74_pushErr(_self_, (*((*(_93266_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a8505869_isUnsafe(_self_)))) {
			_case_begin_1aa2156ed:;
			{
				_1a8504d74_pushErr(_self_, (*((*(_93266_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa2155bb:;
	};
	(*((*(_93232_d))))._field_Type=(*(_9367_ptr))._field_Elem;
}



inline void _1a850e466_indexingArr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _94832_d, jule::Ptr<_1a85028cc_Data>* _94847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _94866_i) {
	jule::Ptr<_1a85452b0_Arr> _9497_arr = _1a8538ced_Arr((*((*(_94832_d))))._field_Type.ptr());;
	(*((*(_94832_d))))._field_Type=(*(_9497_arr))._field_Elem;
	_1a850db2a_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1a8503317_IsConst((*(_94847_index)).ptr()) && (_1a82817d2_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1a8504d74_pushErr(_self_, (*((*(_94866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1a850e884_indexingSlc(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _95832_d, jule::Ptr<_1a85028cc_Data>* _95847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _95866_i) {
	jule::Ptr<_1a8542e8e_Slc> _9597_slc = _1a8539084_Slc((*((*(_95832_d))))._field_Type.ptr());;
	(*((*(_95832_d))))._field_Type=(*(_9597_slc))._field_Elem;
	_1a850db2a_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1a8503317_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1aa21cd87:;
			{
				jule::Ptr<_1a828c832_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1a828c832_SliceExprModel>();;
				jule::F64 _9714_indx = _1a82817d2_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1a8504d74_pushErr(_self_, (*((*(_95866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1aa21cd21:;
	};
}



inline void _1a850eca2_indexingMap(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _98132_d, jule::Ptr<_1a85028cc_Data>* _98147_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8544633_Map> _9867_m = _1a8539abd_Map((*((*(_98132_d))))._field_Type.ptr());;
	_1a84e09ec_assignTypeChecker _9877_atc = _1a84e09ec_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token, ._field_refers=_1a8507daa_getOwnerRefers(_self_)};;
	_1a84e19ed_check(&_9877_atc);
	(*((*(_98132_d))))._field_Type=(*_9867_m.alloc)._field_Val;
}



inline void _1a85101c0_indexingStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _99832_d, jule::Ptr<_1a85028cc_Data>* _99847_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _99866_i) {
	(*((*(_99832_d))))._field_Type=_1a85aaca4_primU8;
	(*((*(_99832_d))))._field_Mutable=false;
	(*((*(_99832_d))))._field_Lvalue=true;
	if (((*(_99847_index)) == nullptr)) {
		return;;
	};
	_1a850db2a_checkIntegerIndexingByData(_self_, _99847_index, (*((*(_99866_i))))._field_Token);
	if ((!(_1a8503317_IsConst((*(_99847_index)).ptr())))) {
		(*((*(_99832_d))))._field_Constant=nullptr;
		(*((*(_99832_d))))._field_untyped=false;
		return;;
	};
	if (_1a8503317_IsConst((*(_99832_d)).ptr())) {
		jule::I64 _10164_j = _1a82812b5_AsI64((*((*(_99847_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1a8280c98_ReadStr((*((*(_99832_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10164_j) >= _10174_s.len())) {
			_1a8504d74_pushErr(_self_, (*((*(_99866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1a8281d43_SetU64((*((*(_99832_d))))._field_Constant, static_cast<jule::U64>(_10174_s[_10164_j]));
		};
	};
}



inline void _1a85105dd_comptimeRange(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _102634_d, jule::Ptr<_1a85028cc_Data>* _102649_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _102668_i) {
	if (((*(_102649_index)) == nullptr)) {
		(*(_102634_d))=nullptr;
		return;;
	};
	if ((!(_1a850db2a_checkIntegerIndexingByData(_self_, _102649_index, (*((*((*(_102668_i))))._field_Index))._field_Token)))) {
		(*(_102634_d))=nullptr;
		return;;
	};
	if ((!(_1a8503317_IsConst((*(_102649_index)).ptr())))) {
		(*(_102634_d))=nullptr;
		_1a8504d74_pushErr(_self_, (*(*((*(_102668_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _10413_j = static_cast<jule::I64>(_1a82812b5_AsI64((*((*(_102649_index))))._field_Constant.ptr()));;
	jule::Ptr<_1a8327a76_comptimeRange> _10427_ci = _1a853b3c7_comptimeRange((*((*(_102634_d))))._field_Type.ptr());;
	if ((_10413_j >= ((_1a8327856_comptimeRangeKindMptrData*)(*(_10427_ci))._field_kind.safe_type())->_1a8327702_len((*(_10427_ci))._field_kind.data))) {
		(*(_102634_d))=nullptr;
		_1a8504d74_pushErr(_self_, (*(*((*(_102668_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1a8327856_comptimeRangeKindMptrData*)(*_10427_ci.alloc)._field_kind.safe_type())->_1a8326bda_index((*_10427_ci.alloc)._field_kind.data, _102634_d, _10413_j);
}



inline void _1a8510a0b_toIndexing(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _105131_d, jule::Ptr<_1a85028cc_Data>* _105146_index, jule::Ptr<_1a81a9ee1_IndexingExpr>* _105165_i) {
	{
		
		if ((_1a853854a_Ptr((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e728:;
			{
				_1a850e048_indexingPtr(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1a8538ced_Arr((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e7c2:;
			{
				_1a850e466_indexingArr(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1a8539084_Slc((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e838:;
			{
				_1a850e884_indexingSlc(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1a8539abd_Map((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e89e:;
			{
				_1a850eca2_indexingMap(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1a853802d_Prim((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e915:;
			{
				jule::Ptr<_1a853d990_Prim> _10664_prim = _1a853802d_Prim((*((*(_105131_d))))._field_Type);;
				{
					
					if (_1a8541e5a_IsStr(_10664_prim.ptr())) {
						_case_begin_1aa233d59:;
						{
							_1a85101c0_indexingStr(_self_, _105131_d, _105146_index, _105165_i);
							return;;
						}
					}
					_match_end_1aa233c9e:;
				};
			}
		}
		else if ((_1a853b3c7_comptimeRange((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa22e98c:;
			{
				_1a85105dd_comptimeRange(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		_match_end_1aa22e5b3:;
	};
	_1a8504d74_pushErr(_self_, (*((*(_105165_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_105131_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1a8510eb2_pushGenericsFromExprSubIdent(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6141_SubIdentExpr>* _107950_sexpr, jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _10808_generics, jule::Ptr<_1a81a302d_Expr>* _108041_expr) {
	jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _10817_t = jule::new_ptr<_1a819e5bd_SubIdentTypeDecl>(_1a819e5bd_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>>(nullptr)});;
	if ((!(_1a8531455_pushSubIdentFromExpr(jule::Any((*(_107950_sexpr)), &__jule_any_type89), &(_10817_t))))) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*(_108041_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_10808_generics)); __jule_push_dest.push(jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Kind=jule::Any(_10817_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1a85113ad_pushGenericsFromData(jule::Ptr<_1a850489b_eval> _self_, jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _109042_generics, jule::Ptr<_1a81a302d_Expr>* _109075_expr) {
	{
		auto &_match_expr{ (*((*(_109075_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1aa23bc74:;
			{
				jule::Ptr<_1a81a50da_UnaryExpr> _10938_u = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1a81a50da_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10938_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1aa2417a1:;
						{
							jule::Ptr<_1a81a0723_PtrTypeDecl> _10969_kind = jule::new_ptr<_1a81a0723_PtrTypeDecl>(_1a81a0723_PtrTypeDecl{._field_Elem=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _10979__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; });;
							_1a85113ad_pushGenericsFromData(_self_, &(_10979__generics), &((*(_10938_u))._field_Expr));
							(*_10969_kind.alloc)._field_Elem=_10979__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*((*(_109075_expr))))._field_Token, ._field_Kind=jule::Any(_10969_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1aa241817:;
						{
							jule::Ptr<_1a819ec94_SptrTypeDecl> _11059_kind = jule::new_ptr<_1a819ec94_SptrTypeDecl>(_1a819ec94_SptrTypeDecl{._field_Elem=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _11069__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; });;
							_1a85113ad_pushGenericsFromData(_self_, &(_11069__generics), &((*(_10938_u))._field_Expr));
							(*_11059_kind.alloc)._field_Elem=_11069__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*((*(_109075_expr))))._field_Token, ._field_Kind=jule::Any(_11059_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1aa23c4a0:;
						{
							_1a8504d74_pushErr(_self_.ptr(), (*(_10938_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1aa23e716:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa23bcda:;
			{
				{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push((*((*(_109075_expr))))._field_Kind.cast_ptr<_1a819dbe9_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1aa237eb2:;
			{
				jule::Ptr<_1a81a6141_SubIdentExpr> _11208_sexpr = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1a81a6141_SubIdentExpr>();;
				return _1a8510eb2_pushGenericsFromExprSubIdent(_self_, &(_11208_sexpr), _109042_generics, _109075_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa238028:;
			{
				jule::Ptr<_1a81a4848_IdentExpr> _11238_ident = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1a81a4848_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*_11238_ident.alloc)._field_Token, ._field_Ident=(*_11238_ident.alloc)._field_Ident, ._field_Binded=(*(_11238_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa239d82:;
			{
				{
					auto expr = &((*((*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1a81a3b22_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa24a755:;
					if (it != expr_end) {
						jule::Ptr<_1a81a302d_Expr> _113216_texpr = *it;
						{
							if ((!(_1a85113ad_pushGenericsFromData(_self_, _109042_generics, &(_113216_texpr))))) {
								return false;;
							};
						}
						_iter_next_1aa24a755:;
						++it;
						goto _iter_begin_1aa24a755;
					}
					_iter_end_1aa24a755:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa239de8:;
			{
				jule::Ptr<_1a81a5c67_NamespaceExpr> _11388_ns = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1a81a5c67_NamespaceExpr>();;
				jule::Ptr<_1a819e304_IdentTypeDecl> _11398_decl = jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*(_11388_ns))._field_Ident, ._field_Ident=(*((*_11388_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*(_11398_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a819e997_NamespaceTypeDecl>(_1a819e997_NamespaceTypeDecl{._field_Namespace=(*_11388_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*_11398_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11398_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1aa237e4b:;
			{
				_1a8504d74_pushErr(_self_.ptr(), (*((*(_109075_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aa237dd5:;
	};
	return true;;
}



inline void _1a8511721_evalIdentDeclFromIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a85028cc_Data>* _116047_d, jule::Ptr<_1a81a9ee1_IndexingExpr>* _116062_i) {
	jule::Ptr<_1a81c246a_StructIns> _11617_s = _1a85395a1_Struct((*((*(_116047_d))))._field_Type.ptr());;
	if ((_11617_s == nullptr)) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*((*(_116062_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_116047_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_116047_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a819e304_IdentTypeDecl> _116811_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_116062_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa257b91:;
			{
				jule::Ptr<_1a81a4848_IdentExpr> _11718_expr = (*((*((*(_116062_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a81a4848_IdentExpr>();;
				_116811_decl=jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*_11718_expr.alloc)._field_Token, ._field_Ident=(*_11718_expr.alloc)._field_Ident, ._field_Binded=(*(_11718_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa2590c1:;
			{
				jule::Ptr<_1a81a5c67_NamespaceExpr> _11788_expr = (*((*((*(_116062_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a81a5c67_NamespaceExpr>();;
				_116811_decl=jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*(_11788_expr))._field_Ident, ._field_Ident=(*((*_11788_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1aa258114:;
			{
				_1a8504d74_pushErr(_self_, (*((*(_116062_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_116047_d))=nullptr;
				return;;
			}
		}
		_match_end_1aa25809d:;
	};
	if ((!(_1a85113ad_pushGenericsFromData(_self_, &((*(_116811_decl))._field_Generics), &((*((*(_116062_i))))._field_Index))))) {
		(*(_116047_d))=nullptr;
		return;;
	};
	_11617_s=({ auto _wrap_copy = _1a851821c_typeChecker(_self_); _1a854c10d_fromStruct(&_wrap_copy, &(_116811_decl), &((*(_11617_s))._field_Decl)); });
	if ((_11617_s == nullptr)) {
		(*(_116047_d))=nullptr;
		return;;
	};
	(*(*((*(_116047_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11617_s, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1a8511bc7_checkGenericFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a829a752_FnIns>* _120336_f, jule::Ptr<_1a81881cd_Token>* _120352_et, jule::Any* _120376_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a829a752_FnIns> _12047_old = (*(_120336_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a83c3dec_checkGenericFn((*(_self_))._field_s, _120336_f, _120352_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a85310d1_updateModelToGenericIns(_120376_model, _120336_f);
		_1aa260dca_updateRefer(_1a8507daa_getOwnerRefers(_self_), &(_12047_old), _120336_f);
	};
	return __jule_func_result;;
}



inline void _1a851203a_evalFnGenericFromIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a85028cc_Data>* _121947_d, jule::Ptr<_1a81a9ee1_IndexingExpr>* _121962_i) {
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _12207_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1a85113ad_pushGenericsFromData(_self_, &(_12207_generics), &((*((*(_121962_i))))._field_Index))))) {
		(*(_121947_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a829a752_FnIns> _12267_f = _1a853931a_Fn((*((*(_121947_d))))._field_Type.ptr());;
	jule::I64 _12277_genericsLen = 0LL;;
	if (((*(_12267_f))._field_Decl != nullptr)) {
		_12277_genericsLen=(*(*(_12267_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a83ac8ca_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12277_genericsLen, _12207_generics.len(), (*((*((*(_121962_i))))._field_Expr))._field_Token)))) {
		(*(_121947_d))=nullptr;
		return;;
	};
	(*_12267_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(0LL, (*(*(_12267_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8533e91_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12207_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2669d5:;
		if (it != expr_end) {
			jule::Ptr<_1a819dbe9_TypeDecl> _123815_g = *it;
			{
				jule::Ptr<_1a85028cc_Data> _12398_k = _1a851855d_evalType(_self_, _123815_g);;
				if ((_12398_k == nullptr)) {
					(*(_121947_d))=nullptr;
					return;;
				};
				(*_12267_f.alloc)._field_Generics=jule::append((*_12267_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=(*(_12398_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1aa2669d5:;
			++it;
			goto _iter_begin_1aa2669d5;
		}
		_iter_end_1aa2669d5:;
	};
	if (_1a829bc1a_IsBuiltin(_12267_f)) {
		return;;
	};
	jule::Bool _12513_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8511bc7_checkGenericFn(_self_, &(_12267_f), &((*(*((*(_121962_i))))._field_Expr.alloc)._field_Token), &((*((*(_121947_d))))._field_Model));
		_12513_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12513_ok) {
		(*(*((*(_121947_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12267_f, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1);
	} else {
		(*(_121947_d))=nullptr;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851237b_evalIndexing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a9ee1_IndexingExpr> _125933_i) {
	jule::Ptr<_1a8535877_Type> _12607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12607_prefix;
	});;
	jule::Ptr<_1a85028cc_Data> _12647_d = _1a8522875_evalExprKind(_self_, (*((*(_125933_i))._field_Expr))._field_Kind);;
	if ((_12647_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12647_d))._field_Decl) {
		_1a8511721_evalIdentDeclFromIndexing(_self_, &(_12647_d), &(_125933_i));
		return _12647_d;;
	};
	if ((_1a853931a_Fn((*(_12647_d))._field_Type.ptr()) != nullptr)) {
		_1a851203a_evalFnGenericFromIndexing(_self_, &(_12647_d), &(_125933_i));
		return _12647_d;;
	};
	_1a85028cc_Data _12807_oldData = (*(_12647_d));;
	jule::Ptr<_1a85028cc_Data> _12827_index = _1a8523689_evalExpr(_self_, (*_125933_i.alloc)._field_Index);;
	if ((_12827_index == nullptr)) {
		return nullptr;;
	};
	_1a83753ba_makeComptimeRange(&(_12647_d));
	(*(_12647_d))._field_Decl=false;
	_1a8510a0b_toIndexing(_self_, &(_12647_d), &(_12827_index), &(_125933_i));
	if ((_12647_d == nullptr)) {
		return nullptr;;
	};
	if (_1a8503317_IsConst(_12647_d.ptr())) {
		(*(_12647_d))._field_Decl=false;
		(*(_12647_d))._field_Model=jule::Any((*(_12647_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12647_d))._field_Decl) {
		(*(_12647_d))._field_Decl=false;
	} else {
		(*(_12647_d))._field_Model=jule::Any(jule::new_ptr<_1a828ccd8_IndexingExprModel>(_1a828ccd8_IndexingExprModel{._field_Token=(*_125933_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a85028cc_Data>(_12807_oldData), ._field_Index=_12827_index}), &__jule_any_type43);
	};
	return _12647_d;;
}



inline __jule_tuple_x_1a85028cc_Data__jule_tuple_x_1a85028cc_Data _1a85126bc_evalSlicingExprs(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81aa651_SlicingExpr>* _131938_s) {
	__jule_tuple_x_1a85028cc_Data__jule_tuple_x_1a85028cc_Data __jule_func_result;
	jule::Ptr<_1a8535877_Type> _13207_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13207_prefix;
	});;
	jule::Ptr<_1a85028cc_Data> _132411_l = nullptr;;
	jule::Ptr<_1a85028cc_Data> _132511_r = nullptr;;
	if (((*((*(_131938_s))))._field_Start != nullptr)) {
		_132411_l=_1a8523689_evalExpr(_self_, (*((*(_131938_s))))._field_Start);
		if ((_132411_l != nullptr)) {
			_1a850db2a_checkIntegerIndexingByData(_self_, &(_132411_l), (*((*(_131938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_132411_l=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e0a4_NewI64(0LL)});
		(*((*(_132411_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_132411_l.alloc)._field_Model=jule::Any((*_132411_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_131938_s))))._field_To != nullptr)) {
		_132511_r=_1a8523689_evalExpr(_self_, (*((*(_131938_s))))._field_To);
		if ((_132511_r != nullptr)) {
			_1a850db2a_checkIntegerIndexingByData(_self_, &(_132511_r), (*((*(_131938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _132411_l;
	__jule_func_result.__jule_result_arg1 = _132511_r;
	return __jule_func_result;;
}



inline void _1a8512975_slicingArr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _135527_d) {
	jule::Ptr<_1a8535877_Type> _13567_elemType = (*(_1a8538ced_Arr((*((*(_135527_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135527_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8542e8e_Slc>(_1a8542e8e_Slc{._field_Elem=_13567_elemType}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)});
	(*((*(_135527_d))))._field_Lvalue=false;
	(*((*(_135527_d))))._field_Mutable=((*((*(_135527_d))))._field_Mutable || (!(_1a853725d_Mutable(_13567_elemType.ptr()))));
}



inline void _1a8512d93_slicingStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _137027_d, jule::Ptr<_1a85028cc_Data>* _137038_l, jule::Ptr<_1a85028cc_Data>* _137049_r) {
	(*((*(_137027_d))))._field_Lvalue=false;
	(*((*(_137027_d))))._field_Mutable=true;
	if ((!(_1a8503317_IsConst((*(_137027_d)).ptr())))) {
		return;;
	};
	if ((((*(_137038_l)) == nullptr) || ((*(_137049_r)) == nullptr))) {
		(*((*(_137027_d))))._field_Constant=nullptr;
		(*((*(_137027_d))))._field_untyped=false;
		return;;
	};
	if ((_1a8503317_IsConst((*(_137038_l)).ptr()) && _1a8503317_IsConst((*(_137049_r)).ptr()))) {
		jule::I64 _13844_left = _1a82812b5_AsI64((*((*(_137038_l))))._field_Constant.ptr());;
		if ((_13844_left < 0LL)) {
			return;;
		};
		jule::Str _13894_s = _1a8280c98_ReadStr((*((*(_137027_d))))._field_Constant);;
		jule::I64 _13908_right = static_cast<jule::I64>(0LL);;
		if (((*(_137049_r)) == nullptr)) {
			_13908_right=static_cast<jule::I64>(_13894_s.len());
		} else {
			_13908_right=_1a82812b5_AsI64((*((*(_137049_r))))._field_Constant);
		};
		if ((_13844_left > _13908_right)) {
			return;;
		};
		_1a82823a4_SetStr((*((*(_137027_d))))._field_Constant, _13894_s.slice(_13844_left, _13908_right));
		(*((*(_137027_d))))._field_Decl=true;
	} else {
		(*((*(_137027_d))))._field_Constant=nullptr;
		(*((*(_137027_d))))._field_untyped=false;
	};
}



inline void _1a851336b_checkSlicing(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _140833_d, jule::Ptr<_1a85028cc_Data>* _140844_l, jule::Ptr<_1a85028cc_Data>* _140855_r, jule::Ptr<_1a81aa651_SlicingExpr>* _140866_s) {
	{
		
		if ((_1a8538ced_Arr((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa28874e:;
			{
				_1a8512975_slicingArr(_self_, _140833_d);
				return;;
			}
		}
		else if ((_1a8539084_Slc((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa2887e8:;
			{
				return;;
			}
		}
		else if ((_1a853802d_Prim((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa28885e:;
			{
				jule::Ptr<_1a853d990_Prim> _14164_prim = _1a853802d_Prim((*((*(_140833_d))))._field_Type);;
				{
					
					if (_1a8541e5a_IsStr(_14164_prim.ptr())) {
						_case_begin_1aa28b136:;
						{
							_1a8512d93_slicingStr(_self_, _140833_d, _140844_l, _140855_r);
							return;;
						}
					}
					_match_end_1aa28b07b:;
				};
			}
		}
		_match_end_1aa28861c:;
	};
	_1a8504d74_pushErr(_self_, (*((*(_140866_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_140833_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1a85028cc_Data> _1a85136ac_evalSlicing(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81aa651_SlicingExpr> _142732_s) {
	jule::Ptr<_1a85028cc_Data> _14287_d = _1a8523689_evalExpr(_self_, (*(_142732_s))._field_Expr);;
	if ((_14287_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a85028cc_Data> _14337_l;
	jule::Ptr<_1a85028cc_Data> _143314_r;
	({
		__jule_tuple_x_1a85028cc_Data__jule_tuple_x_1a85028cc_Data __jule_assign_result = _1a85126bc_evalSlicingExprs(_self_, &(_142732_s));
		_14337_l = __jule_assign_result.__jule_result_arg0;
		_143314_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14337_l == nullptr)) {
		return _14287_d;;
	};
	(*(_14287_d))._field_Decl=false;
	_1a851336b_checkSlicing(_self_, &(_14287_d), &(_14337_l), &(_143314_r), &(_142732_s));
	if (_1a8503317_IsConst(_14287_d.ptr())) {
		(*(_14287_d))._field_Decl=false;
		(*(_14287_d))._field_Model=jule::Any((*(_14287_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14287_d))._field_Decl) {
		(*(_14287_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a828e0c5_SlicingExprModel> _14518_model = jule::new_ptr<_1a828e0c5_SlicingExprModel>(_1a828e0c5_SlicingExprModel{._field_Token=(*_142732_s.alloc)._field_Token, ._field_Expr=(*(_14287_d))._field_Model, ._field_Left=(*(_14337_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_143314_r != nullptr)) {
			(*(_14518_model))._field_Right=(*_143314_r.alloc)._field_Model;
		};
		(*(_14287_d))._field_Model=jule::Any(_14518_model, &__jule_any_type95);
	};
	return _14287_d;;
}



inline void _1a8513aca_castPtr(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _146427_t, jule::Ptr<_1a85028cc_Data> _146441_d, jule::Ptr<_1a81881cd_Token> _146451_errorToken) {
	(*(_146441_d))._field_Constant=nullptr;
	(*_146441_d.alloc)._field_untyped=false;
	jule::Ptr<_1a85424bb_Sptr> _14673_sptr = _1a85382b4_Sptr((*_146441_d.alloc)._field_Type.ptr());;
	if ((_14673_sptr != nullptr)) {
		if ((!(_1a85360b4_Equal((*(_1a853854a_Ptr(_146427_t.ptr())))._field_Elem, (*_14673_sptr.alloc)._field_Elem)))) {
			_1a8504d74_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_146441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_146427_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1a8505869_isUnsafe(_self_)))) {
		_1a8504d74_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _14803_prim = _1a853802d_Prim((*(_146441_d))._field_Type);;
	if (((_1a853854a_Ptr((*(_146441_d))._field_Type) == nullptr) && ((_14803_prim == nullptr) || (!(_1a832602a_IsInt(_1a853dd14_Str(_14803_prim.ptr()))))))) {
		_1a8504d74_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_146441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_146427_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a8513ee8_castStruct(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _148630_t, jule::Ptr<_1a85028cc_Data> _148644_d, jule::Ptr<_1a81881cd_Token> _148654_errorToken) {
	(*(_148644_d))._field_Constant=nullptr;
	(*_148644_d.alloc)._field_untyped=false;
	jule::Ptr<_1a82a2da8_Trait> _14897_tr = _1a8539837_Trait((*_148644_d.alloc)._field_Type.ptr());;
	if ((_14897_tr == nullptr)) {
		_1a8504d74_pushErr(_self_, _148654_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_148644_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_148630_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _14957_s = _1a85395a1_Struct(_148630_t);;
	_1aa2a0458_pushReference(_self_, &(_14957_s));
	if ((!(_1a81c0c82_IsImplements((*(_14957_s))._field_Decl.ptr(), _14897_tr)))) {
		_1a8504d74_pushErr(_self_, _148654_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_148644_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_148630_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1a8514416_castRef(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _150327_t, jule::Ptr<_1a85028cc_Data> _150341_d, jule::Ptr<_1a81881cd_Token> _150351_errorToken) {
	(*(_150341_d))._field_Constant=nullptr;
	(*_150341_d.alloc)._field_untyped=false;
	jule::Ptr<_1a85424bb_Sptr> _15067_sptr = _1a85382b4_Sptr(_150327_t.ptr());;
	jule::Ptr<_1a8545c83_Ptr> _15087_ptr = _1a853854a_Ptr((*_150341_d.alloc)._field_Type.ptr());;
	if (((_15087_ptr != nullptr) && _1a85360b4_Equal((*(_15067_sptr))._field_Elem, (*_15087_ptr.alloc)._field_Elem))) {
		if ((!(_1a8505869_isUnsafe(_self_)))) {
			_1a8504d74_pushErr(_self_, _150351_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a85395a1_Struct((*(_15067_sptr))._field_Elem) != nullptr)) {
		_1a8513ee8_castStruct(_self_, (*_15067_sptr.alloc)._field_Elem, _150341_d, _150351_errorToken);
		return;;
	};
	_1a8504d74_pushErr(_self_, _150351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_150341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_150327_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1a8514834_castSlc(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _152627_t, jule::Ptr<_1a85028cc_Data> _152641_d, jule::Ptr<_1a81881cd_Token> _152651_errorToken) {
	jule::Ptr<_1a82273d2_Const> _15273_c = (*(_152641_d))._field_Constant;;
	(*_152641_d.alloc)._field_Constant=nullptr;
	(*_152641_d.alloc)._field_untyped=false;
	if ((_1a85387d1_Enum((*_152641_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1a853802d_Prim((*((*(_1a85387d1_Enum((*(_152641_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1a8541e5a_IsStr(_1a853802d_Prim((*((*(_1a85387d1_Enum((*(_152641_d))._field_Type.ptr())))._field_TypeSym))._field_Type).ptr()))))) {
			_1a8504d74_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_152641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_152627_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1a853802d_Prim((*_152641_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1a8541e5a_IsStr(_1a853802d_Prim((*(_152641_d))._field_Type).ptr()))))) {
		_1a8504d74_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_152641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_152627_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152627_t=(*(_1a8539084_Slc(_152627_t.ptr())))._field_Elem;
	jule::Ptr<_1a853d990_Prim> _15423_prim = _1a853802d_Prim(_152627_t);;
	if (((_15423_prim == nullptr) || ((!(_1a85403ba_IsU8(_15423_prim.ptr()))) && (!(_1a853ed9d_IsI32(_15423_prim.ptr())))))) {
		_1a8504d74_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*_152641_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_152627_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15273_c != nullptr)) {
		{
			
			if (_1a85403ba_IsU8(_15423_prim.ptr())) {
				_case_begin_1aa2b4da7:;
				{
					jule::Str _15525_s = _1a8280c98_ReadStr(_15273_c);;
					jule::Ptr<_1a828c832_SliceExprModel> _15539_model = jule::new_ptr<_1a828c832_SliceExprModel>(_1a828c832_SliceExprModel{._field_ElemType=_152627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15525_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15525_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa2b689d:;
						if (it != expr_end) {
							jule::U8 *_155712_b = it;
							{
								jule::Ptr<_1a82273d2_Const> _155810_bc = static__1a827e329_NewU64(static_cast<jule::U64>((*(_155712_b))));;
								(*(_155810_bc))._field_Kind=(*(_15423_prim))._field_Kind;
								(*(_15539_model))._field_Elems=jule::append((*_15539_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155810_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1aa2b689d:;
							++it;
							goto _iter_begin_1aa2b689d;
						}
						_iter_end_1aa2b689d:;
					};
					(*_152641_d.alloc)._field_Model=jule::Any(_15539_model, &__jule_any_type80);
					(*_152641_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a853ed9d_IsI32(_15423_prim.ptr())) {
				_case_begin_1aa2b4e51:;
				{
					jule::Slice<jule::I32> _15655_runes = __jule_strToRunes(_1a8280c98_ReadStr(_15273_c));;
					jule::Ptr<_1a828c832_SliceExprModel> _15669_model = jule::new_ptr<_1a828c832_SliceExprModel>(_1a828c832_SliceExprModel{._field_ElemType=_152627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15655_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15655_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa2b9cd0:;
						if (it != expr_end) {
							jule::I32 *_157012_r = it;
							{
								jule::Ptr<_1a82273d2_Const> _157110_rc = static__1a827e0a4_NewI64(static_cast<jule::I64>((*(_157012_r))));;
								(*(_157110_rc))._field_Kind=(*(_15423_prim))._field_Kind;
								(*(_15669_model))._field_Elems=jule::append((*_15669_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157110_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1aa2b9cd0:;
							++it;
							goto _iter_begin_1aa2b9cd0;
						}
						_iter_end_1aa2b9cd0:;
					};
					(*_152641_d.alloc)._field_Model=jule::Any(_15669_model, &__jule_any_type80);
					(*_152641_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1aa2b4cb9:;
		};
	};
}



inline void _1a8514b97_castStr(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _158127_d, jule::Ptr<_1a81881cd_Token> _158137_errorToken) {
	if ((_1a85387d1_Enum((*(_158127_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a82a555e_Enum> _15838_e = _1a85387d1_Enum((*(_158127_d))._field_Type);;
		if (((_1a853802d_Prim((*((*(_15838_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1a8541e5a_IsStr(_1a853802d_Prim((*((*(_15838_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a82273d2_Const> _15893_c = (*_158127_d.alloc)._field_Constant;;
	(*_158127_d.alloc)._field_Constant=nullptr;
	(*_158127_d.alloc)._field_untyped=false;
	if ((_1a853802d_Prim((*(_158127_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a853d990_Prim> _15934_prim = _1a853802d_Prim((*(_158127_d))._field_Type);;
		if (((!(_1a85403ba_IsU8(_15934_prim.ptr()))) && (!(_1a853ed9d_IsI32(_15934_prim))))) {
			_1a8504d74_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15893_c != nullptr)) {
			{
				
				if (_1a85403ba_IsU8(_15934_prim)) {
					_case_begin_1aa2c2920:;
					{
						(*_158127_d.alloc)._field_Constant=static__1a827e8ac_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1a828154b_AsU64(_15893_c))));
						(*_158127_d.alloc)._field_Model=jule::Any((*_158127_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158127_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a853ed9d_IsI32(_15934_prim)) {
					_case_begin_1aa2c29b9:;
					{
						(*_158127_d.alloc)._field_Constant=static__1a827e8ac_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1a82812b5_AsI64(_15893_c))));
						(*_158127_d.alloc)._field_Model=jule::Any((*_158127_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158127_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1aa2c27ee:;
			};
		};
		return;;
	};
	jule::Ptr<_1a8542e8e_Slc> _16147_s = _1a8539084_Slc((*(_158127_d))._field_Type);;
	if ((_16147_s == nullptr)) {
		_1a8504d74_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a8535877_Type> _16207_t = (*(_16147_s))._field_Elem;;
	jule::Ptr<_1a853d990_Prim> _16213_prim = _1a853802d_Prim(_16207_t.ptr());;
	if (((_16213_prim == nullptr) || ((!(_1a85403ba_IsU8(_16213_prim.ptr()))) && (!(_1a853ed9d_IsI32(_16213_prim.ptr())))))) {
		_1a8504d74_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1a85150b5_castInt(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _162827_t, jule::Ptr<_1a85028cc_Data> _162841_d, jule::Ptr<_1a81881cd_Token> _162851_errorToken) {
	if (_1a8503317_IsConst(_162841_d.ptr())) {
		jule::Ptr<_1a853d990_Prim> _16304_prim = _1a853802d_Prim(_162827_t.ptr());;
		{
			
			if (_1a8325953_IsSigInt((*(_16304_prim))._field_Kind)) {
				_case_begin_1aa2cb154:;
				{
					_1a8281a8a_SetI64((*_162841_d.alloc)._field_Constant.ptr(), _1a82812b5_AsI64((*(_162841_d))._field_Constant));
				}
			}
			else if (_1a8325c61_IsUnsigInt((*(_16304_prim))._field_Kind)) {
				_case_begin_1aa2cb1ed:;
				{
					_1a8281d43_SetU64((*_162841_d.alloc)._field_Constant.ptr(), _1a828154b_AsU64((*(_162841_d))._field_Constant));
				}
			}
			_match_end_1aa2cb0bb:;
		};
	} else {
		(*(_162841_d))._field_Constant=nullptr;
		(*_162841_d.alloc)._field_untyped=false;
	};
	if ((_1a85387d1_Enum((*(_162841_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a82a555e_Enum> _16434_e = _1a85387d1_Enum((*(_162841_d))._field_Type);;
		if (_1a8326602_IsNum(_1a8535c73_Str((*((*(_16434_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_1a85382b4_Sptr((*(_162841_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a853d990_Prim> _16504_prim = _1a853802d_Prim(_162827_t.ptr());;
		if ((!(_1a854193d_IsUintptr(_16504_prim.ptr())))) {
			_1a8504d74_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_162841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_162827_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1a853854a_Ptr((*(_162841_d))._field_Type) != nullptr)) {
		jule::Ptr<_1a853d990_Prim> _16574_prim = _1a853802d_Prim(_162827_t);;
		if (_1a854193d_IsUintptr(_16574_prim.ptr())) {
		} else if ((!(_1a8505869_isUnsafe(_self_)))) {
			_1a8504d74_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _16663_prim = _1a853802d_Prim((*(_162841_d))._field_Type);;
	if (((_16663_prim != nullptr) && _1a8326602_IsNum(_1a853dd14_Str(_16663_prim)))) {
		return;;
	};
	_1a8504d74_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_162841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_162827_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1a85154d3_castNum(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _167427_t, jule::Ptr<_1a85028cc_Data> _167441_d, jule::Ptr<_1a81881cd_Token> _167451_errorToken) {
	if (_1a8503317_IsConst(_167441_d.ptr())) {
		jule::Ptr<_1a853d990_Prim> _16764_prim = _1a853802d_Prim(_167427_t.ptr());;
		{
			
			if (_1a832636b_IsFloat((*(_16764_prim))._field_Kind)) {
				_case_begin_1aa2d768d:;
				{
					_1a828265c_SetF64((*_167441_d.alloc)._field_Constant.ptr(), _1a82817d2_AsF64((*(_167441_d))._field_Constant));
				}
			}
			else if (_1a8325953_IsSigInt((*(_16764_prim))._field_Kind)) {
				_case_begin_1aa2d7737:;
				{
					_1a8281a8a_SetI64((*_167441_d.alloc)._field_Constant.ptr(), _1a82812b5_AsI64((*(_167441_d))._field_Constant));
				}
			}
			else if (_1a8325c61_IsUnsigInt((*(_16764_prim))._field_Kind)) {
				_case_begin_1aa2d779d:;
				{
					_1a8281d43_SetU64((*_167441_d.alloc)._field_Constant.ptr(), _1a828154b_AsU64((*(_167441_d))._field_Constant));
				}
			}
			_match_end_1aa2d75b1:;
		};
	} else {
		(*(_167441_d))._field_Constant=nullptr;
		(*_167441_d.alloc)._field_untyped=false;
	};
	if ((_1a85387d1_Enum((*(_167441_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a82a555e_Enum> _16914_e = _1a85387d1_Enum((*(_167441_d))._field_Type);;
		if (_1a8326602_IsNum(_1a8535c73_Str((*((*(_16914_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a853d990_Prim> _16973_prim = _1a853802d_Prim((*(_167441_d))._field_Type);;
	if (((_16973_prim != nullptr) && _1a8326602_IsNum(_1a853dd14_Str(_16973_prim)))) {
		return;;
	};
	_1a8504d74_pushErr(_self_, _167451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_167441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_167427_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1a8515901_castPrim(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _170528_t, jule::Ptr<_1a85028cc_Data> _170542_d, jule::Ptr<_1a81881cd_Token> _170552_errorToken) {
	jule::Ptr<_1a853d990_Prim> _17063_prim = _1a853802d_Prim(_170528_t.ptr());;
	{
		
		if (_1a85421e1_IsAny(_17063_prim.ptr())) {
			_case_begin_1aa2e0ce5:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1709:4"));;
			}
		}
		else if (_1a8541e5a_IsStr(_17063_prim.ptr())) {
			_case_begin_1aa2e0993:;
			{
				_1a8514b97_castStr(_self_, _170542_d, _170552_errorToken);
			}
		}
		else if (_1a832602a_IsInt(_1a853dd14_Str(_17063_prim.ptr()))) {
			_case_begin_1aa2e0a09:;
			{
				_1a85150b5_castInt(_self_, _170528_t, _170542_d, _170552_errorToken);
			}
		}
		else if (_1a8326602_IsNum(_1a853dd14_Str(_17063_prim.ptr()))) {
			_case_begin_1aa2e0a70:;
			{
				_1a85154d3_castNum(_self_, _170528_t, _170542_d, _170552_errorToken);
			}
		}
		else {
			_case_begin_1aa2e092c:;
			{
				_1a8504d74_pushErr(_self_, _170552_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str(_170528_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1aa2e08a5:;
	};
}



inline void _1a8515c64_castConstant(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _172133_t, jule::Ptr<_1a85028cc_Data>* _172148_d) {
	if ((((*(_172148_d)) == nullptr) || (!(_1a8503317_IsConst((*(_172148_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _17253_prim = _1a853802d_Prim((*(_172133_t)).ptr());;
	_1a8530e05_castConstByType(&((*(_17253_prim))._field_Kind), _172148_d);
	(*((*(_172148_d))))._field_Model=jule::Any((*((*(_172148_d))))._field_Constant, &__jule_any_type15);
}



inline void _1a8516182_castTypeEnum(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _173033_t, jule::Ptr<_1a85028cc_Data>* _173048_d, jule::Ptr<_1a81881cd_Token>* _173063_errorToken) {
	jule::I64 _17313_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a83b42e9_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_173048_d))))._field_Type), _173033_t, _173063_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17313_n);;
		_1a8504d74_pushErr(_self_, (*(_173063_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_173048_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_173033_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173048_d))))._field_Constant=nullptr;
	(*((*(_173048_d))))._field_untyped=false;
}



inline void _1a85165a0_castTypeEnumT(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type>* _174034_t, jule::Ptr<_1a85028cc_Data>* _174049_d, jule::Ptr<_1a81881cd_Token>* _174064_errorToken) {
	jule::I64 _17413_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a83b42e9_checkTypeCompatibility((*(_self_))._field_s, _174034_t, &((*((*(_174049_d))))._field_Type), _174064_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17413_n);;
		_1a8504d74_pushErr(_self_, (*(_174064_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_174049_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_174034_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174049_d))))._field_Constant=nullptr;
	(*((*(_174049_d))))._field_untyped=false;
}



inline jule::Ptr<_1a85028cc_Data> _1a8516a56_evalCastByTypeNData(_1a850489b_eval* _self_, jule::Ptr<_1a8535877_Type> _175039_t, jule::Ptr<_1a85028cc_Data> _175053_d, jule::Ptr<_1a81881cd_Token> _175067_errorToken) {
	if (((_175053_d != nullptr) && (*_175053_d.alloc)._field_Decl)) {
		_1a8504d74_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a8502cea_IsNil(_175053_d)) {
			_case_begin_1aa2ed94b:;
			{
				if ((!(_1a853777a_NilCompatible(_175039_t.ptr())))) {
					_1a8504d74_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_175039_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a853802d_Prim((*_175053_d.alloc)._field_Type.ptr()) != nullptr) && _1a85421e1_IsAny(_1a853802d_Prim((*(_175053_d))._field_Type).ptr()))) {
			_case_begin_1aa2ed6e8:;
			{
				if ((_1a8538a67_TypeEnum(_175039_t.ptr()) != nullptr)) {
					_1a8504d74_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
				};
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a853802d_Prim(_175039_t.ptr()) != nullptr) && _1a85421e1_IsAny(_1a853802d_Prim(_175039_t).ptr()))) {
			_case_begin_1aa2ed75e:;
			{
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a8538a67_TypeEnum((*_175053_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa2ed7c5:;
			{
				_1a8516182_castTypeEnum(_self_, &(_175039_t), &(_175053_d), &(_175067_errorToken));
			}
		}
		else if ((_1a8538a67_TypeEnum(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ed83b:;
			{
				_1a85165a0_castTypeEnumT(_self_, &(_175039_t), &(_175053_d), &(_175067_errorToken));
			}
		}
		else if ((_1a853854a_Ptr(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ee61c:;
			{
				_1a8513aca_castPtr(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1a85382b4_Sptr(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ee683:;
			{
				_1a8514416_castRef(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1a8539084_Slc(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ee6e9:;
			{
				_1a8514834_castSlc(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1a85395a1_Struct(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ee760:;
			{
				_1a8513ee8_castStruct(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1a853802d_Prim(_175039_t.ptr()) != nullptr)) {
			_case_begin_1aa2ee7c6:;
			{
				_1a8515901_castPrim(_self_, _175039_t, _175053_d, _175067_errorToken);
				_1a8515c64_castConstant(_self_, &(_175039_t), &(_175053_d));
			}
		}
		else {
			_case_begin_1aa2ed5b6:;
			{
				_1a8504d74_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str(_175039_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_175053_d=nullptr;
			}
		}
		_match_end_1aa2ed550:;
	};
	if ((_175053_d == nullptr)) {
		return nullptr;;
	};
	if ((_1a8536724_Binded(_175039_t.ptr()) || _1a8536724_Binded((*_175053_d.alloc)._field_Type.ptr()))) {
		if ((!(_1a8505869_isUnsafe(_self_)))) {
			_1a8504d74_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*_175053_d.alloc)._field_Mutable=((*_175053_d.alloc)._field_Mutable || (!(_1a853725d_Mutable((*(_175053_d))._field_Type))));
	if (((!((*_175053_d.alloc)._field_Decl)) && ((_1a85387d1_Enum((*(_175053_d))._field_Type) == nullptr) || (!(_1a85360b4_Equal((*((*(_1a85387d1_Enum((*(_175053_d))._field_Type)))._field_TypeSym))._field_Type, _175039_t)))))) {
		_1a852ebd4_applyCastKind(&((*(_self_))._field_s), &(_175053_d), &(_175039_t), &(_175067_errorToken), _1a8507daa_getOwnerRefers(_self_));
		(*((*_175053_d.alloc)._field_Model.cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96)))._field_Token=_175067_errorToken;
	} else {
		(*_175053_d.alloc)._field_Type=_175039_t;
	};
	(*_175053_d.alloc)._field_Decl=false;
	(*_175053_d.alloc)._field_Lvalue=false;
	(*_175053_d.alloc)._field_untyped=false;
	if (_1a8503317_IsConst(_175053_d)) {
		(*((*_175053_d.alloc)._field_Constant))._field_Kind=(*(_1a853802d_Prim(_175039_t)))._field_Kind;
	};
	return _175053_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a851700c_evalCastT(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a8535877_Type>* _183531_t, jule::Ptr<_1a81a302d_Expr>* _183546_e, jule::Ptr<_1a81881cd_Token>* _183566_et) {
	jule::Ptr<_1a8535877_Type> _18367_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18367_prefix;
	});;
	if ((_1a8539084_Slc((*(_183531_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_183546_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1aa311dd2:;
				{
					(*_self_.alloc)._field_prefix=(*(_183531_t));
				}
			}
			_match_end_1aa311d5a:;
		};
	};
	jule::Ptr<_1a85028cc_Data> _18457_d = _1a8523689_evalExpr(_self_, (*(_183546_e)));;
	if (((_18457_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18457_d;;
	};
	return _1a8516a56_evalCastByTypeNData(_self_, (*(_183531_t)), _18457_d, (*(_183566_et)));;
}



inline jule::Ptr<_1a85028cc_Data> _1a851734d_evalCast(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a588d_CastExpr> _185229_c) {
	jule::Ptr<_1a853d088_TypeSym> _18537_t = _1a837a986_buildType((*(_185229_c))._field_Kind);;
	jule::Bool _18543_ok = _1a83b148e_checkTypeSym((*(_self_))._field_s, &(_18537_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18543_ok))) {
		return nullptr;;
	};
	return _1a851700c_evalCastT(_self_, &((*(_18537_t))._field_Type), &((*_185229_c.alloc)._field_Expr), &((*((*_185229_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a85028cc_Data> _1a851768e_evalNamespace(_1a850489b_eval* _self_, jule::Ptr<_1a81a5c67_NamespaceExpr> _186133_s) {
	jule::Ptr<_1a838b14a_ImportInfo> _18627_imp = _1a853329d_findNamespace((*(_self_))._field_lookup, (*((*(_186133_s))._field_Namespace))._field_Kind);;
	if ((_18627_imp == nullptr)) {
		_1a8504d74_pushErr(_self_, (*_186133_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186133_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18687_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18627_imp, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data2);
	;
	_1a85055d3_disallowBuiltin(_self_);
	jule::Any _18737_def = _1a8507b24_getDef(_self_, &((*((*_186133_s.alloc)._field_Ident))._field_Kind), false);;
	_1a85053d5_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18687_lookup;
	jule::Ptr<_1a85028cc_Data> _18767_d = _1a850bcd2_evalDef(_self_, &(_18737_def), (*_186133_s.alloc)._field_Ident);;
	return _18767_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8517b45_evalStructLitExplicit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81c246a_StructIns> _188042_s, jule::Slice<jule::Ptr<_1a81a302d_Expr>> _18817_exprs, jule::Ptr<_1a81881cd_Token> _188132_errorToken) {
	jule::Bool _18823_ok = _1a83ac8ca_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_188042_s))._field_Decl))._field_Generics.len(), (*_188042_s.alloc)._field_Generics.len(), _188132_errorToken);;
	if ((!(_18823_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_188042_s.alloc)._field_Decl))) {
		_1a8504d74_pushErr(_self_, _188132_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188042_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1aa2a0458_pushReference(_self_, &(_188042_s));
	_1a8509ecd_checkDeprecated(_self_, &((*(*(_188042_s))._field_Decl.alloc)._field_Directives), _188132_errorToken);
	_1a84ea166_structLitChecker _18957_slc = _1a84ea166_structLitChecker{._field_e=_self_, ._field_errorToken=_188132_errorToken, ._field_s=_188042_s, ._field_args=jule::Slice<jule::Ptr<_1a828ad80_StructArgExprModel>>(nullptr)};;
	_1a84eb8d7_check(&_18957_slc, &(_18817_exprs));
	jule::Ptr<_1a85028cc_Data> _19027_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_188042_s, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)}), ._field_Mutable=(*_self_.alloc)._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a828b226_StructLitExprModel>(_1a828b226_StructLitExprModel{._field_Strct=_188042_s, ._field_Args=_18957_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if ((*(*(_188042_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19027_d))._field_Type))._field_BindIdent=(*(*(_188042_s))._field_Decl.alloc)._field_Ident;
	};
	return _19027_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8517e86_evalStructLit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a8077_StructLit> _191834_lit) {
	jule::Ptr<_1a853d088_TypeSym> _19197_t = _1a837a986_buildType((*(_191834_lit))._field_Kind);;
	jule::Bool _19203_ok = _1a83b148e_checkTypeSym((*(_self_))._field_s, &(_19197_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19203_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a81c246a_StructIns> _19257_s = _1a85395a1_Struct((*(_19197_t))._field_Type.ptr());;
	if ((_19257_s == nullptr)) {
		if ((_1a85382b4_Sptr((*(_19197_t))._field_Type) != nullptr)) {
			_19257_s=_1a85395a1_Struct((*(_1a85382b4_Sptr((*(_19197_t))._field_Type)))._field_Elem.ptr());
			if ((_19257_s != nullptr)) {
				goto _julec_label_1aa329aba;
			};
		};
		_1a8504d74_pushErr(_self_, (*((*_191834_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1aa329aba:;
	jule::Ptr<_1a85028cc_Data> _19387_d = _1a8517b45_evalStructLitExplicit(_self_, _19257_s, (*_191834_lit.alloc)._field_Exprs, (*(*(_191834_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a85382b4_Sptr((*(_19197_t))._field_Type) != nullptr)) {
		jule::Ptr<_1a828b226_StructLitExprModel> _19408_model = (*(_19387_d))._field_Model.cast_ptr<_1a828b226_StructLitExprModel>(&__jule_any_type98);;
		_1a852ca28_makeStructLitAlloc(&(_19387_d), &(_19408_model));
	};
	return _19387_d;;
}



inline _1a8547c74_typeChecker _1a851821c_typeChecker(_1a850489b_eval* _self_) {
	return _1a83b023a_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a85028cc_Data> _1a851855d_evalType(_1a850489b_eval* _self_, jule::Ptr<_1a819dbe9_TypeDecl> _195028_t) {
	jule::Ptr<_1a853d088_TypeSym> _19517_tk = _1a837a986_buildType(_195028_t);;
	jule::Bool _19523_ok = _1a83b148e_checkTypeSym((*(_self_))._field_s, &(_19517_tk), (*(_self_))._field_lookup);;
	if ((!(_19523_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*(_19517_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19517_tk.alloc)._field_Type, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline void _1a85188c1_callTypeFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _196332_fc, jule::Ptr<_1a85028cc_Data>* _196359_d) {
	if (((*((*(_196332_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_196332_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*((*(_196332_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_196359_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_196332_fc))))._field_IsCo) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_196359_d))=nullptr;
		return;;
	} else if (((*((*(_196332_fc))))._field_Exception != nullptr)) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_196359_d))=nullptr;
		return;;
	};
	if (((*((*(_196332_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a81a302d_Expr> _19798_arg = (*((*(_196332_fc))))._field_Args[0LL];;
		(*(_196359_d))=_1a851700c_evalCastT(_self_, &((*((*(_196359_d))))._field_Type), &(_19798_arg), &((*(_19798_arg))._field_Token));
		return;;
	};
	if (((*(_196359_d)) != nullptr)) {
		(*((*(_196359_d))))._field_Decl=false;
	};
}



inline void _1a8518c34_callBuiltinFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _198935_fc, jule::Ptr<_1a85028cc_Data>* _198962_d) {
	if ((!(_1a81a710e_Unhandled((*(_198935_fc)).ptr())))) {
		_1a8504d74_pushErr(_self_.ptr(), (*((*(_198935_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_198962_d))=(*(_1a853931a_Fn((*((*(_198962_d))))._field_Type.ptr())))._field_caller(&(_self_), _198935_fc, _198962_d);
	if (((*(_198962_d)) == nullptr)) {
		return;;
	};
	(*((*(_198962_d))))._field_Mutable=true;
}



inline void _1a8519097_checkFnOfConcurrentCall(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _200140_f, jule::Ptr<_1a81881cd_Token> _200151_errorToken) {
	if (_1a8505869_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_200140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa338b0c:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> *_200510_p = it;
			{
				if (_1a829631e_IsSelf((*((*(_200510_p))))._field_Decl.ptr())) {
					if ((!(_1a82965a5_IsRef((*((*(_200510_p))))._field_Decl)))) {
						_1a8504d74_pushErr(_self_, _200151_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_200510_p))))._field_Decl.alloc)._field_Reference) {
					_1a8504d74_pushErr(_self_, _200151_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1aa338b0c:;
			++it;
			goto _iter_begin_1aa338b0c;
		}
		_iter_end_1aa338b0c:;
	};
}



inline void _1a85194b5_processExceptionalHandler(_1a850489b_eval* _self_, jule::Ptr<_1a829a752_FnIns>* _202046_f, jule::Ptr<_1a81a6c57_FnCallExpr>* _202062_fc, jule::Ptr<_1a85028cc_Data>* _202089_d) {
	jule::Bool _20213_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_1a8297b4a_IsVoid((*((*(_202046_f))))._field_Decl.ptr()))));;
	jule::Ptr<_1a835cacd_scopeChecker> _202211_csc = nullptr;;
	jule::Ptr<_1a8355466_Scope> _202311_ch = nullptr;;
	jule::Ptr<_1a828c458_FnCallExprModel> _20257_model = (*((*(_202089_d))))._field_Model.cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
	jule::Ptr<_1a835cacd_scopeChecker> _20297_sc = (*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1);;
	_202211_csc=_1a8374d48_newChildChecker(_20297_sc);
	if (_20213_resultNeeded) {
		(*(_202211_csc))._field_result=jule::new_ptr<_1a835badd_result>(_1a835badd_result{._field_func=(*(_202046_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_202311_ch=_1a8363287_getChild(_20297_sc);
	(*((*((*(_202062_fc))))._field_Exception))._field_Parent=(*_20297_sc.alloc)._field_tree;
	(*((*_202211_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_202211_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a852cd9c_buildErrorVar(&(_202311_ch), _202062_fc); __jule_collection; }));
	_1a83636a5_checkChildSsc(_20297_sc, &((*((*(_202062_fc))))._field_Exception), &(_202311_ch), &(_202211_csc));
	(*(_20257_model))._field_Assigned=_20213_resultNeeded;
	(*_20257_model.alloc)._field_Except=_202311_ch;
	if ((_20213_resultNeeded && ((*_202211_csc.alloc)._field_result != nullptr))) {
		_1a8504d74_pushErr(_self_, (*((*(_202062_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1a8519828_callFn(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr>* _204728_fc, jule::Ptr<_1a85028cc_Data>* _204755_d) {
	jule::Ptr<_1a829a752_FnIns> _20487_f = _1a853931a_Fn((*((*(_204755_d))))._field_Type.ptr());;
	if (_1a829bc1a_IsBuiltin(_20487_f.ptr())) {
		_1a8518c34_callBuiltinFn(_self_, _204728_fc, _204755_d);
		return;;
	};
	if (((!(_1a8297dd1_IsMethod((*_20487_f.alloc)._field_Decl.ptr()))) && _1a8551de3_hasDirective(&((*(*(_20487_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_204755_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_204755_d))))._field_Mutable)) && _1a8297dd1_IsMethod((*(_20487_f))._field_Decl)) && (!((*(*(_20487_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20487_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*_self_.alloc)._field_target._field_mutable) {
			_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a828b226_StructLitExprModel> _20685_lit = _1a853207c_isLitBased(&((*((*(_204755_d))))._field_Model));;
			if ((_20685_lit == nullptr)) {
				_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1a84e9b7c_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20685_lit));
			};
		};
	} else if (((!(_1a8505869_isUnsafe(_self_))) && (*(*(_20487_f))._field_Decl.alloc)._field_Unsafety)) {
		_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20807_dynamicAnnotation = ((((*(*(_20487_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20487_f.alloc)._field_Generics.len() == 0LL)) && ((*_20487_f.alloc)._field_Params.len() > 0LL));;
	if (_20807_dynamicAnnotation) {
		(*_20487_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc((*(*(_20487_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8533e91_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20487_f.alloc)._field_Generics.len() != (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a83ac8ca_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len(), (*_20487_f.alloc)._field_Generics.len(), (*((*(_204728_fc))))._field_Token);
		(*(_204755_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a83a8497_sema> _20897_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20487_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20487_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20897_old != (*_self_.alloc)._field_s)) {
			(*(_20897_old))._field_errors=jule::append((*_20897_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20897_old;
	});;
	_1a84e722e_fnCallArgChecker _21027_fcac = _1a84e722e_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_204728_fc))))._field_Args, ._field_errorToken=(*((*(_204728_fc))))._field_Token, ._field_f=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_dynamicAnnotation=_20807_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)};;
	if ((!(_20807_dynamicAnnotation))) {
		if ((!((*_20487_f.alloc)._field_reloaded))) {
			jule::Bool _21115_ok = _1a83b720e_reloadFnInsTypes((*(_self_))._field_s, _20487_f);;
			(*_20487_f.alloc)._field_reloaded=true;
			if ((!(_21115_ok))) {
				(*(_204755_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a829a752_FnIns> _21188_existInstance = _1a8299245_appendInstance((*(_20487_f))._field_Decl, &(_20487_f));;
		if ((_21188_existInstance != nullptr)) {
			_20487_f=_21188_existInstance;
		};
	} else if ((!(_1a83b5570_buildFnNonGenericTypes((*(_self_))._field_s, _20487_f, &(_21027_fcac._field_ignored))))) {
		(*(_204755_d))=nullptr;
		return;;
	};
	_21027_fcac._field_f=_20487_f;
	jule::Bool _21297_ok = false;;
	if (((*(*(_20487_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20897_old, (*_self_.alloc)._field_s);
		_21297_ok=_1a84e9819_check(&_21027_fcac);
		std::swap(_20897_old, (*_self_.alloc)._field_s);
	} else {
		_21297_ok=_1a84e9819_check(&_21027_fcac);
	};
	if (_20807_dynamicAnnotation) {
		if ((!(_21297_ok))) {
			(*(_204755_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8511bc7_checkGenericFn(_self_, &(_20487_f), &((*((*(_204728_fc))))._field_Token), &((*((*(_204755_d))))._field_Model));
			_21297_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21297_ok))) {
			(*(_204755_d))=nullptr;
			return;;
		};
	};
	jule::Any _21507_callModel = (*((*(_204755_d))))._field_Model;;
	if (_1a8297b4a_IsVoid((*(_20487_f))._field_Decl)) {
		(*(_204755_d))=_1a852ede3_buildVoidData();
	} else {
		(*((*(_204755_d))))._field_Type=(*_20487_f.alloc)._field_Result;
		(*((*(_204755_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a828c458_FnCallExprModel> _21597_model = jule::new_ptr<_1a828c458_FnCallExprModel>(_1a828c458_FnCallExprModel{._field_Token=(*((*(_204728_fc))))._field_Token, ._field_Func=_20487_f, ._field_IsCo=(*((*(_204728_fc))))._field_IsCo, ._field_Expr=_21507_callModel, ._field_Args=_21027_fcac._field_argModels, ._field_Except=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_204755_d))))._field_Model=jule::Any(_21597_model, &__jule_any_type31);
	(*((*(_204755_d))))._field_Mutable=true;
	if ((*(*(_20487_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_204728_fc))))._field_IsCo) {
			_1a83ab39b_pushErr((*(_self_))._field_s, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1a83ab70e_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a81a710e_Unhandled((*(_204728_fc)).ptr())) {
				_case_begin_1aa35ec76:;
				{
					_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1a81a7395_Ignored((*(_204728_fc)).ptr())) {
				_case_begin_1aa35e957:;
				{
					goto _match_end_1aa35d33a;
				}
			}
			else {
				_case_begin_1aa35d3d4:;
				{
					_1a85194b5_processExceptionalHandler(_self_, &(_20487_f), _204728_fc, _204755_d);
				}
			}
			_match_end_1aa35d33a:;
		};
	} else if ((!(_1a81a710e_Unhandled((*(_204728_fc)).ptr())))) {
		_1a8504d74_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_204728_fc))))._field_IsCo) {
		(*((*(_21597_model))._field_Func))._field_AsAnon=true;
		(*(*(_21597_model))._field_Func.alloc)._field_CalledCo=true;
		_1a8519097_checkFnOfConcurrentCall(_self_, &((*_21597_model.alloc)._field_Func), (*((*(_204728_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8519b69_evalFnCall(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6c57_FnCallExpr> _219631_fc) {
	jule::Ptr<_1a8535877_Type> _21977_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21977_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_219631_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa365210:;
			{
				if (((*((*((*(_219631_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1a85ad669_builtinCallerError(&(_self_), &(_219631_fc));;
				};
			}
		}
		_match_end_1aa365188:;
	};
	jule::Ptr<_1a85028cc_Data> _22107_d = _1a8522875_evalExprKind(_self_, (*(*(_219631_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22107_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22107_d))._field_Decl) {
		_1a85188c1_callTypeFn(_self_, &(_219631_fc), &(_22107_d));
		return _22107_d;;
	};
	if ((_1a853931a_Fn((*(_22107_d))._field_Type.ptr()) == nullptr)) {
		_1a8504d74_pushErr(_self_, (*_219631_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8519828_callFn(_self_, &(_219631_fc), &(_22107_d));
	return _22107_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a851a065_evalEnumStatic(_1a850489b_eval* _self_, jule::Ptr<_1a82a555e_Enum> _222934_enm, jule::Ptr<_1a81881cd_Token> _222950_ident) {
	jule::Ptr<_1a82a4a03_EnumItem> _22307_item = _1a82a6186_FindItem(_222934_enm.ptr(), (*(_222950_ident))._field_Kind);;
	if ((_22307_item == nullptr)) {
		_1a8504d74_pushErr(_self_, _222950_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_222934_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_222950_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1a8531cb3_evalEnumStatic(&((*(_self_))._field_s), &(_222934_enm), &(_22307_item), &(_222950_ident), _1a8507daa_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1a85028cc_Data> _1a851a461_evalTypeEnumStatic(_1a850489b_eval* _self_, jule::Ptr<_1a82a6c69_TypeEnum> _223738_enm, jule::Ptr<_1a81881cd_Token> _223754_ident) {
	jule::Ptr<_1a82a6692_TypeEnumItem> _22387_item = _1a82a785d_FindItem(_223738_enm.ptr(), (*(_223754_ident))._field_Kind);;
	if ((_22387_item == nullptr)) {
		_1a8504d74_pushErr(_self_, _223754_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223738_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223754_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1a85387d1_Enum((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa36e01b:;
			{
				return _1a85084a4__evalEnum(_self_, _1a85387d1_Enum((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a8538a67_TypeEnum((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa36c190:;
			{
				return _1a8508be1__evalTypeEnum(_self_, _1a8538a67_TypeEnum((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1a85395a1_Struct((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa36c206:;
			{
				return _1a850942d__evalStruct(_self_, _1a85395a1_Struct((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1aa36c129:;
			{
				jule::Ptr<_1a85028cc_Data> _22518_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*((*(_22387_item))._field_TypeSym))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
				(*(_22518_d))._field_Model=jule::Any((*_22518_d.alloc)._field_Type, &__jule_any_type87);
				return _22518_d;;
			}
		}
		_match_end_1aa36c2e4:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851a85c_evalStructStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81c246a_StructIns> _226036_s, jule::Ptr<_1a81881cd_Token> _226051_ident) {
	jule::Ptr<_1a85028cc_Data> _22617_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	;
	jule::Ptr<_1a8297694_Fn> _22657_method = _1a81c3515_FindMethod(_226036_s.ptr(), (*(_226051_ident))._field_Kind, true);;
	if ((_22657_method != nullptr)) {
		if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22657_method.alloc)._field_Public, (*_22657_method.alloc)._field_Token)))) {
			_1a8504d74_pushErr(_self_, _226051_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226051_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a829a752_FnIns> _22728_ins = _1a8298e37_instance(_22657_method);;
		(*(_22728_ins))._field_Owner=_226036_s;
		_1aa1a0534_pushReference(_self_, &(_22728_ins));
		(*_22617_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8290390_StructStaticIdentExprModel>(_1a8290390_StructStaticIdentExprModel{._field_Structure=_226036_s, ._field_Expr=(*_22617_d.alloc)._field_Model, ._field_Method=_22728_ins}), &__jule_any_type99);
		(*_22617_d.alloc)._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22728_ins, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)});
		return _22617_d;;
	};
	jule::Ptr<_1a83cc1ad_Var> _22867_sttc = _1a81c3b97_FindStatic(_226036_s, (*_226051_ident.alloc)._field_Kind);;
	if ((_22867_sttc != nullptr)) {
		return _1a850b4da_evalVar(_self_, _22867_sttc, _226051_ident);;
	};
	_1a8504d74_pushErr(_self_, _226051_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_226036_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_226051_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a85028cc_Data> _1a851ad13_evalTraitSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _229537_d, jule::Ptr<_1a82a2da8_Trait> _229551_trt, jule::Ptr<_1a81881cd_Token> _229568_ident) {
	jule::Ptr<_1a8297694_Fn> _22967_f = _1a82a3a8a_FindMethod(_229551_trt.ptr(), (*(_229568_ident))._field_Kind);;
	if ((_22967_f == nullptr)) {
		_1a8504d74_pushErr(_self_, _229568_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229551_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_229568_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8298e37_instance(_22967_f), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)}), ._field_Mutable=(*(_229537_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a828e658_TraitSubIdentExprModel>(_1a828e658_TraitSubIdentExprModel{._field_Token=_229568_ident, ._field_Expr=(*_229537_d.alloc)._field_Model, ._field_Method=_22967_f, ._field_Trt=_229551_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a851b374_evalStructSubIdentField(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _231744_d, jule::Ptr<_1a81c246a_StructIns>* _231759_s, jule::Ptr<_1a81881cd_Token>* _231779_tok, jule::Ptr<_1a81c18ba_FieldIns>* _2317104_f) {
	jule::Ptr<_1a828eee9_StructSubIdentExprModel> _23187_model = jule::new_ptr<_1a828eee9_StructSubIdentExprModel>(_1a828eee9_StructSubIdentExprModel{._field_Token=(*(_231779_tok)), ._field_Expr=jule::new_ptr<_1a85028cc_Data>((*((*(_231744_d))))), ._field_Method=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Field=(*(_2317104_f)), ._field_Owner=(*(_231759_s))});;
	(*((*(_231744_d))))._field_Model=jule::Any(_23187_model, &__jule_any_type101);
	(*((*(_231744_d))))._field_Type=(*((*(_2317104_f))))._field_Type;
	(*((*(_231744_d))))._field_Lvalue=true;
	if (((*((*((*(_2317104_f))))._field_Decl))._field_Mutable && (!((*((*(_231744_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
				_case_begin_1aa383c34:;
				{
					jule::Ptr<_1a835cacd_scopeChecker> _23335_scope = _1a8361241_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1));;
					(*((*(_231744_d))))._field_Mutable=(((*(_23335_scope))._field_owner != nullptr) && ((*(*(_23335_scope))._field_owner.alloc)._field_Owner == (*(_231759_s))));
				}
			}
			_match_end_1aa383bbd:;
		};
	};
	return (*(_231744_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a851b990_evalStructSubIdentMethod(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _234245_d, jule::Ptr<_1a81c246a_StructIns>* _234260_s, jule::Ptr<_1a81881cd_Token>* _234280_tok, jule::Ptr<_1a8297694_Fn>* _2342105_m, jule::Bool _2342113_ref) {
	if ((_1a82965a5_IsRef((*((*(_2342105_m))))._field_Params[0LL].ptr()) && (!(_2342113_ref)))) {
		_1a8504d74_pushErr(_self_, (*(_234280_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1a8509ecd_checkDeprecated(_self_, &((*((*(_2342105_m))))._field_Directives), (*(_234280_tok)));
	jule::Ptr<_1a829a752_FnIns> _23497_ins = _1a8298e37_instance((*(_2342105_m)));;
	(*(_23497_ins))._field_Owner=(*(_234260_s));
	_1aa1a0534_pushReference(_self_, &(_23497_ins));
	jule::Ptr<_1a85028cc_Data> _23527_model = jule::new_ptr<_1a85028cc_Data>((*((*(_234245_d)))));;
	(*((*(_234245_d))))._field_Model=jule::Any(jule::new_ptr<_1a828eee9_StructSubIdentExprModel>(_1a828eee9_StructSubIdentExprModel{._field_Token=(*(_234280_tok)), ._field_Expr=_23527_model, ._field_Method=_23497_ins, ._field_Field=jule::Ptr<_1a81c18ba_FieldIns>(nullptr), ._field_Owner=(*(_234260_s))}), &__jule_any_type101);
	(*((*(_234245_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23497_ins, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)});
	return (*(_234245_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a851c001_evalStructSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _236338_d, jule::Ptr<_1a81c246a_StructIns> _236352_s, jule::Ptr<_1a81a6141_SubIdentExpr> _236371_si, jule::Bool _236395_ref) {
	jule::Ptr<_1a81c18ba_FieldIns> _23647_f = _1a81c3856_FindField(_236352_s.ptr(), (*((*(_236371_si))._field_Ident))._field_Kind);;
	if ((_23647_f != nullptr)) {
		if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23647_f.alloc)._field_Decl))._field_Public, (*(*(_23647_f))._field_Decl.alloc)._field_Token)))) {
			_1a8504d74_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23647_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1a851b374_evalStructSubIdentField(_self_, &(_236338_d), &(_236352_s), &((*_236371_si.alloc)._field_Ident), &(_23647_f));;
	};
	;
	jule::Ptr<_1a8297694_Fn> _23747_m = _1a81c3515_FindMethod(_236352_s, (*(*(_236371_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23747_m == nullptr)) {
		_1a8504d74_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_236352_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_236371_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s, (*(_23747_m))._field_Public, (*(_23747_m))._field_Token)))) {
		_1a8504d74_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23747_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1a85051d7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1a851b990_evalStructSubIdentMethod(_self_, &(_236338_d), &(_236352_s), &((*_236371_si.alloc)._field_Ident), &(_23747_m), _236395_ref);;
}



inline jule::Ptr<_1a85028cc_Data> _1a851c342_evalIntTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _238733_ident) {
	;
	{
		auto &_match_expr{ (*(_238733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3944c5:;
			{
				jule::Ptr<_1a82273d2_Const> _23918_c = static__1a827e0a4_NewI64(_1a8323e90_MaxI(jule::Str::lit("int", 3)));;
				(*(_23918_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23918_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23918_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3950db:;
			{
				jule::Ptr<_1a82273d2_Const> _24008_c = static__1a827e0a4_NewI64(static_cast<jule::I64>(_1a832459a_Min(jule::Str::lit("int", 3))));;
				(*(_24008_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24008_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24008_c});;
			}
		}
		else {
			_case_begin_1aa391901:;
			{
				_1a8504d74_pushErr(_self_, _238733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_238733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3940eb:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851c683_evalUintTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _241434_ident) {
	;
	{
		auto &_match_expr{ (*(_241434_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa398771:;
			{
				jule::Ptr<_1a82273d2_Const> _24188_c = static__1a827e329_NewU64(_1a8324259_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24188_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85a9ad8_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24188_c});;
			}
		}
		else {
			_case_begin_1aa3973da:;
			{
				_1a8504d74_pushErr(_self_, _241434_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_241434_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa398397:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851c9c4_evalI8TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _243232_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243232_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa39bbb4:;
			{
				jule::Ptr<_1a82273d2_Const> _24388_c = static__1a827e0a4_NewI64(127LL);;
				(*(_24388_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa1e3_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa39c7ca:;
			{
				jule::Ptr<_1a82273d2_Const> _24478_c = static__1a827e0a4_NewI64(-128LL);;
				(*(_24478_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa1e3_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24478_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24478_c});;
			}
		}
		else {
			_case_begin_1aa39b5ed:;
			{
				_1a8504d74_pushErr(_self_, _243232_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_243232_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa39b7da:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851cd15_evalI16TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _246133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3a1449:;
			{
				jule::Ptr<_1a82273d2_Const> _24678_c = static__1a827e0a4_NewI64(32767LL);;
				(*(_24678_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa48a_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24678_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24678_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3a2060:;
			{
				jule::Ptr<_1a82273d2_Const> _24768_c = static__1a827e0a4_NewI64(-32768LL);;
				(*(_24768_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa48a_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24768_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24768_c});;
			}
		}
		else {
			_case_begin_1aa3a0d83:;
			{
				_1a8504d74_pushErr(_self_, _246133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_246133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3a1070:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851d156_evalI32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _249033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3a5bce:;
			{
				jule::Ptr<_1a82273d2_Const> _24968_c = static__1a827e0a4_NewI64(2147483647LL);;
				(*(_24968_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa743_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24968_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24968_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3a67e5:;
			{
				jule::Ptr<_1a82273d2_Const> _25058_c = static__1a827e0a4_NewI64(-2147483648LL);;
				(*(_25058_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa743_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25058_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25058_c});;
			}
		}
		else {
			_case_begin_1aa3a5618:;
			{
				_1a8504d74_pushErr(_self_, _249033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_249033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3a5805:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851d497_evalI64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _251933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_251933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3aa464:;
			{
				jule::Ptr<_1a82273d2_Const> _25258_c = static__1a827e0a4_NewI64(jule::MAX_I64);;
				(*(_25258_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa9eb_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25258_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25258_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3ab07a:;
			{
				jule::Ptr<_1a82273d2_Const> _25348_c = static__1a827e0a4_NewI64(jule::MIN_I64);;
				(*(_25348_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aa9eb_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25348_c});;
			}
		}
		else {
			_case_begin_1aa3a9d9d:;
			{
				_1a8504d74_pushErr(_self_, _251933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_251933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3aa08a:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851d7d8_evalU8TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _254832_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254832_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3ae864:;
			{
				jule::Ptr<_1a82273d2_Const> _25538_c = static__1a827e329_NewU64(255LLU);;
				(*(_25538_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aaca4_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25538_c});;
			}
		}
		else {
			_case_begin_1aa3ae1c1:;
			{
				_1a8504d74_pushErr(_self_, _254832_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_254832_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3ae402:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851db29_evalU16TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _256733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3b2823:;
			{
				jule::Ptr<_1a82273d2_Const> _25728_c = static__1a827e329_NewU64(65535LLU);;
				(*(_25728_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85ab05c_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25728_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25728_c});;
			}
		}
		else {
			_case_begin_1aa3b2180:;
			{
				_1a8504d74_pushErr(_self_, _256733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_256733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3b23b1:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851de6a_evalU32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _258633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3b57d2:;
			{
				jule::Ptr<_1a82273d2_Const> _25918_c = static__1a827e329_NewU64(4294967295LLU);;
				(*(_25918_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85ab315_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25918_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25918_c});;
			}
		}
		else {
			_case_begin_1aa3b513e:;
			{
				_1a8504d74_pushErr(_self_, _258633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3b5370:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851e2ab_evalU64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _260533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_260533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3b8791:;
			{
				jule::Ptr<_1a82273d2_Const> _26108_c = static__1a827e329_NewU64(jule::MAX_U64);;
				(*(_26108_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85ab7ee_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26108_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26108_c});;
			}
		}
		else {
			_case_begin_1aa3b80ed:;
			{
				_1a8504d74_pushErr(_self_, _260533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_260533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3b832e:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851e5ec_evalF32TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _262433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3bbe26:;
			{
				jule::Ptr<_1a82273d2_Const> _26318_c = static__1a827eb76_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26318_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aba41_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26318_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26318_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3bca3c:;
			{
				jule::Ptr<_1a82273d2_Const> _26408_c = static__1a827eb76_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26408_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aba41_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26408_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26408_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1aa3bcaa3:;
			{
				jule::Ptr<_1a82273d2_Const> _26498_c = static__1a827eb76_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26498_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85aba41_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26498_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26498_c});;
			}
		}
		else {
			_case_begin_1aa3bb6b7:;
			{
				_1a8504d74_pushErr(_self_, _262433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type18); (*it++) = jule::Any((*(_262433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3bba4c:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851e93d_evalF64TypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a81881cd_Token> _266333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_266333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1aa3c2b96:;
			{
				jule::Ptr<_1a82273d2_Const> _26708_c = static__1a827eb76_NewF64(jule::MAX_F64);;
				(*(_26708_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85abc50_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26708_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26708_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1aa3c37ac:;
			{
				jule::Ptr<_1a82273d2_Const> _26798_c = static__1a827eb76_NewF64(jule::MIN_F64);;
				(*(_26798_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85abc50_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26798_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26798_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1aa3c3823:;
			{
				jule::Ptr<_1a82273d2_Const> _26888_c = static__1a827eb76_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26888_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=true, ._field_Type=_1a85abc50_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26888_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26888_c});;
			}
		}
		else {
			_case_begin_1aa3c2437:;
			{
				_1a8504d74_pushErr(_self_, _266333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type18); (*it++) = jule::Any((*(_266333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3c27bc:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a851ed39_evalPrimStatic(_1a850489b_eval* _self_, jule::Str _270230_kind, jule::Ptr<_1a81881cd_Token> _270241_ident) {
	{
		auto &_match_expr{ _270230_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1aa3cc5eb:;
			{
				return _1a851c342_evalIntTypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1aa3cd1ac:;
			{
				return _1a851c683_evalUintTypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1aa3cd223:;
			{
				return _1a851c9c4_evalI8TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1aa3cc2aa:;
			{
				return _1a851cd15_evalI16TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1aa3cc321:;
			{
				return _1a851d156_evalI32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1aa3cc387:;
			{
				return _1a851d497_evalI64TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1aa3cc3ed:;
			{
				return _1a851d7d8_evalU8TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1aa3cd311:;
			{
				return _1a851db29_evalU16TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1aa3cd377:;
			{
				return _1a851de6a_evalU32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1aa3cd3dd:;
			{
				return _1a851e2ab_evalU64TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1aa3cd454:;
			{
				return _1a851e5ec_evalF32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1aa3cd4ba:;
			{
				return _1a851e93d_evalF64TypeStatic(_self_, _270241_ident);;
			}
		}
		else {
			_case_begin_1aa3c39ee:;
			{
				_1a8504d74_pushErr(_self_, _270241_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_270230_kind, &__jule_any_type5); (*it++) = jule::Any((*(_270241_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3c3a76:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8520235_evalTypeStatic(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _273434_d, jule::Ptr<_1a81a6141_SubIdentExpr> _273448_si) {
	{
		
		if ((_1a853802d_Prim((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d3569:;
			{
				return _1a851ed39_evalPrimStatic(_self_, _1a853dd14_Str(_1a853802d_Prim((*(_273434_d))._field_Type).ptr()), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1a85387d1_Enum((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d4504:;
			{
				return _1a851a065_evalEnumStatic(_self_, _1a85387d1_Enum((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1a8538a67_TypeEnum((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d456a:;
			{
				return _1a851a461_evalTypeEnumStatic(_self_, _1a8538a67_TypeEnum((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1a85395a1_Struct((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d3206:;
			{
				return _1a851a85c_evalStructStatic(_self_, _1a85395a1_Struct((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1aa3d3190:;
			{
				_1a8504d74_pushErr(_self_, (*(_273448_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_273434_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa3d30d5:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1aa3db51c_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a8337976_comptimeTypeInfo>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a833d7a1_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa3e0cd5_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a83285d2_comptimeStructField>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a8329a23_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa3e5559_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a832ea28_comptimeEnumField>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a8330a5c_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa3e9d22_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a833283e_comptimeParam>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a833418c_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa3ee81b_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a832b805_comptimeStatic>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a832cc46_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa404090_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a833da7b_comptimeValue>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a834150c_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa408814_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a8343256_comptimeFile>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a8344aa4_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1a85028cc_Data> _1aa40d121_comptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a834716c_comptimeDecl>* _275054_ct, jule::Ptr<_1a85028cc_Data>* _275074_d, jule::Ptr<_1a81a6141_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1a85028cc_Data> _27517_cd = _1a834aec8_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1a8504d74_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}



inline __jule_tuple_x_1a85028cc_Data__jule_tuple_bool _1a8520ad7_tryComptimeObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data>* _275843_d, jule::Ptr<_1a81a6141_SubIdentExpr> _275857_si) {
	__jule_tuple_x_1a85028cc_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a853b8e4_comptimeTypeInfo((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d9927:;
			{
				jule::Ptr<_1a8337976_comptimeTypeInfo> _27618_ct = _1a853b8e4_comptimeTypeInfo((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa3db51c_comptimeObjSubIdent(_self_, &(_27618_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853a607_comptimeStructField((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d9460:;
			{
				jule::Ptr<_1a83285d2_comptimeStructField> _27648_ct = _1a853a607_comptimeStructField((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa3e0cd5_comptimeObjSubIdent(_self_, &(_27648_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853ab24_comptimeEnumField((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d94d7:;
			{
				jule::Ptr<_1a832ea28_comptimeEnumField> _27678_ct = _1a853ab24_comptimeEnumField((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa3e5559_comptimeObjSubIdent(_self_, &(_27678_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853b141_comptimeParam((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d955e:;
			{
				jule::Ptr<_1a833283e_comptimeParam> _27708_ct = _1a853b141_comptimeParam((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa3e9d22_comptimeObjSubIdent(_self_, &(_27708_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853be11_comptimeStatic((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d95d6:;
			{
				jule::Ptr<_1a832b805_comptimeStatic> _27738_ct = _1a853be11_comptimeStatic((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa3ee81b_comptimeObjSubIdent(_self_, &(_27738_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853c197_comptimeValue((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d965d:;
			{
				jule::Ptr<_1a833da7b_comptimeValue> _27768_ct = _1a853c197_comptimeValue((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa404090_comptimeObjSubIdent(_self_, &(_27768_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853c94a_comptimeFile((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d9b8b:;
			{
				jule::Ptr<_1a8343256_comptimeFile> _27798_ct = _1a853c94a_comptimeFile((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa408814_comptimeObjSubIdent(_self_, &(_27798_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a853c42d_comptimeDecl((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa3d9c02:;
			{
				jule::Ptr<_1a834716c_comptimeDecl> _27828_ct = _1a853c42d_comptimeDecl((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1aa40d121_comptimeObjSubIdent(_self_, &(_27828_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa3d93e9:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aa3d933e:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8520ed3_evalObjSubIdent(_1a850489b_eval* _self_, jule::Ptr<_1a85028cc_Data> _278935_d, jule::Ptr<_1a81a6141_SubIdentExpr> _278949_si) {
	if (_1a818aab5_IsIgnoreIdent((*((*(_278949_si))._field_Ident))._field_Kind)) {
		_1a8504d74_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a85028cc_Data> _27958_compData;
		jule::Bool _279518_ok;
		({
			__jule_tuple_x_1a85028cc_Data__jule_tuple_bool __jule_assign_result = _1a8520ad7_tryComptimeObjSubIdent(_self_, &(_278935_d), _278949_si);
			_27958_compData = __jule_assign_result.__jule_result_arg0;
			_279518_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_279518_ok) {
			return _27958_compData;;
		};
	};
	jule::Ptr<_1a8535877_Type> _28007_kind = (*(_278935_d))._field_Type;;
	{
		
		if ((_1a853854a_Ptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa41291c:;
			{
				jule::Ptr<_1a8545c83_Ptr> _28034_ptr = _1a853854a_Ptr((*(_278935_d))._field_Type);;
				if (_1a8546800_IsUnsafe(_28034_ptr.ptr())) {
					goto _match_end_1aa412895;
				};
				if ((!(_1a8505869_isUnsafe(_self_)))) {
					_1a8504d74_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28007_kind=(*(_1a853854a_Ptr((*(_278935_d))._field_Type)))._field_Elem;
				_1a8532368_makeImplicitDeref(&(_278935_d), (*_278949_si.alloc)._field_Ident);
			}
		}
		else if ((_1a85382b4_Sptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa4129b6:;
			{
				_28007_kind=(*(_1a85382b4_Sptr((*(_278935_d))._field_Type)))._field_Elem;
				_1a8532368_makeImplicitDeref(&(_278935_d), (*_278949_si.alloc)._field_Ident);
			}
		}
		_match_end_1aa412895:;
	};
	{
		
		if ((_1a8539837_Trait((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa4139b7:;
			{
				return _1a851ad13_evalTraitSubIdent(_self_, _278935_d, _1a8539837_Trait((*(_278935_d))._field_Type), (*_278949_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a85395a1_Struct(_28007_kind.ptr()) != nullptr)) {
			_case_begin_1aa416cd9:;
			{
				jule::Ptr<_1a81c246a_StructIns> _28214_s = _1a85395a1_Struct(_28007_kind);;
				if (_1a852d8b4_isInstancedStruct(_28214_s)) {
					jule::Bool _28239_usedReferenceElem = (_1a85382b4_Sptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr);;
					return _1a851c001_evalStructSubIdent(_self_, _278935_d, _1a85395a1_Struct(_28007_kind), _278949_si, _28239_usedReferenceElem);;
				};
			}
		}
		_match_end_1aa416c73:;
	};
	_1a8504d74_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*_278935_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8521324_evalSubIdent(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a6141_SubIdentExpr> _283133_si) {
	jule::Ptr<_1a8535877_Type> _28327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28327_prefix;
	});;
	jule::Ptr<_1a85028cc_Data> _28357_d = _1a8522875_evalExprKind(_self_, (*((*(_283133_si))._field_Expr))._field_Kind);;
	if ((_28357_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28357_d))._field_Decl) {
		return _1a8520235_evalTypeStatic(_self_, _28357_d, _283133_si);;
	};
	return _1a8520ed3_evalObjSubIdent(_self_, _28357_d, _283133_si);;
}



inline jule::Ptr<_1a85028cc_Data> _1a8521665_evalTuple(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a3b22_TupleExpr> _284530_tup) {
	jule::Ptr<_1a8543a83_Tuple> _28467_tupT = jule::new_ptr<_1a8543a83_Tuple>(_1a8543a83_Tuple{._field_Types=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)});;
	(*_28467_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(0LL, (*(_284530_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8535877_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1a8290a66_TupleExprModel> _28497_model = jule::new_ptr<_1a8290a66_TupleExprModel>(_1a8290a66_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(0LL, (*_284530_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a85028cc_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28537_ok = true;;
	{
		auto expr = &((*_284530_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa421cd3:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _285415_expr = *it;
			{
				jule::Ptr<_1a85028cc_Data> _28558_d = _1a8523689_evalExpr(_self_, _285415_expr);;
				if ((_28558_d == nullptr)) {
					_28537_ok=false;
					goto _iter_next_1aa421cd3;
				};
				(*_28467_tupT.alloc)._field_Types=jule::append((*_28467_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28558_d))._field_Type; __jule_collection; }));
				(*(_28497_model))._field_Datas=jule::append((*_28497_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28558_d; __jule_collection; }));
			}
			_iter_next_1aa421cd3:;
			++it;
			goto _iter_begin_1aa421cd3;
		}
		_iter_end_1aa421cd3:;
	};
	if ((!(_28537_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28467_tupT, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28497_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8521a61_evalMap(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a8544633_Map> _287428_m, jule::Ptr<_1a81a852d_BraceLit> _287441_lit) {
	jule::Ptr<_1a828da42_MapExprModel> _28757_model = jule::new_ptr<_1a828da42_MapExprModel>(_1a828da42_MapExprModel{._field_Kind=_287428_m, ._field_Entries=jule::Slice<jule::Ptr<_1a828d668_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_287441_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa425644:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _287915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_287915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1aa425cd7:;
						{
							goto _match_end_1aa4260c3;
						}
					}
					else {
						_case_begin_1aa426139:;
						{
							_1a8504d74_pushErr(_self_.ptr(), (*(_287441_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1aa4260c3:;
				};
				jule::Ptr<_1a81a8d58_KeyValPair> _28898_pair = (*(_287915_expr))._field_Kind.cast_ptr<_1a81a8d58_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1a85028cc_Data> _28918_key = _1a8523689_evalExpr(_self_, (*(_28898_pair))._field_Key);;
				if ((_28918_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a85028cc_Data> _28968_val = _1a8523689_evalExpr(_self_, (*_28898_pair.alloc)._field_Val);;
				if ((_28968_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a83b8122_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287428_m))._field_Key), &(_28918_key), &((*((*_28898_pair.alloc)._field_Key))._field_Token))) {
					_1a83b388c_checkAssignType((*(_self_))._field_s, false, &((*_287428_m.alloc)._field_Key), &(_28918_key), (*(*(_28898_pair))._field_Key.alloc)._field_Token, _1a8507daa_getOwnerRefers(_self_));
				};
				if (_1a83b8122_checkValidityForInitExpr((*(_self_))._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_287428_m.alloc)._field_Val), &(_28968_val), &((*((*_28898_pair.alloc)._field_Val))._field_Token))) {
					_1a83b388c_checkAssignType((*(_self_))._field_s, false, &((*_287428_m.alloc)._field_Val), &(_28968_val), (*(*(_28898_pair))._field_Val.alloc)._field_Token, _1a8507daa_getOwnerRefers(_self_));
				};
				(*(_28757_model))._field_Entries=jule::append((*_28757_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a828d668_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a828d668_KeyValPairExprModel>(_1a828d668_KeyValPairExprModel{._field_Key=(*(_28918_key))._field_Model, ._field_Val=(*(_28968_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1aa425644:;
			++it;
			goto _iter_begin_1aa425644;
		}
		_iter_end_1aa425644:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_287428_m, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28757_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8521da2_evalBraceLit(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a852d_BraceLit> _292233_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1aa42e53d:;
			{
				_1a8504d74_pushErr(_self_, (*(_292233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8539abd_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa4316b6:;
			{
				return _1a8521a61_evalMap(_self_, _1a8539abd_Map((*(_self_))._field_prefix), _292233_lit);;
			}
		}
		else if ((_1a85395a1_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa43172c:;
			{
				return _1a8517b45_evalStructLitExplicit(_self_, _1a85395a1_Struct((*(_self_))._field_prefix), (*(_292233_lit))._field_Exprs, (*_292233_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1aa42e4b6:;
			{
				_1a8504d74_pushErr(_self_.ptr(), (*(_292233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa431375:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85221e3_evalAnonFunc(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81b0986_FnDecl> _293733_decl) {
	_1a8547c74_typeChecker _29387_tc = _1a8547c74_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1a829a752_FnIns> _29437_ins = _1a854ed8b_buildFunc(&_29387_tc, _293733_decl);;
	if ((_29437_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29437_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _29487_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a83cc1ad_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1aa438569:;
			{
				jule::Ptr<_1a835cacd_scopeChecker> _29518_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1);;
				jule::Ptr<_1a835cacd_scopeChecker> _29528_scc = _1a8374d48_newChildChecker(_29518_sc);;
				(*(_29528_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a835b714_scopeLabel>>>(nullptr);
				(*_29528_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>>(nullptr);
				(*_29528_scc.alloc)._field_owner=_29437_ins;
				(*_29528_scc.alloc)._field_childIndex=0LL;
				(*_29528_scc.alloc)._field_it=0LLU;
				(*_29528_scc.alloc)._field_cse=0LLU;
				(*_29528_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a83cc1ad_Var>>>)((&(_29487_captured))));
				_1a83c65e7_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29437_ins), &(_29528_scc));
			}
		}
		else {
			_case_begin_1aa43914c:;
			{
				_1a83c6c13_checkFnIns((*_self_.alloc)._field_s, &(_29437_ins));
			}
		}
		_match_end_1aa4390d6:;
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29437_ins, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1a828d28e_AnonFnExprModel>(_1a828d28e_AnonFnExprModel{._field_Captured=_29487_captured, ._field_Func=_29437_ins, ._field_Global=_1a8505b00_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a8522534_evalBinary(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a65e7_BinaryExpr> _297531_op) {
	_1a8525aa9_binaryEval _29767_bs = static__1a8526192_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a853d990_Prim> _29794_prim = _1a853802d_Prim((*(_self_))._field_prefix);;
		if (((_29794_prim == nullptr) || (!(_1a8326602_IsNum(_1a853dd14_Str(_29794_prim.ptr())))))) {
			jule::Ptr<_1a8535877_Type> _29819_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29819_prefix;
			});;
			return _1a852bc03_eval(&_29767_bs, &(_297531_op));;
		};
	};
	return _1a852bc03_eval(&_29767_bs, &(_297531_op));;
}



inline jule::Ptr<_1a85028cc_Data> _1a8522875_evalExprKind(jule::Ptr<_1a850489b_eval> _self_, jule::Any _299033_kind) {
	{
		auto &_match_expr{ _299033_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1aa445356:;
			{
				jule::Ptr<_1a81a32e7_RangeExpr> _29938_e = _299033_kind.unsafe_cast_ptr<_1a81a32e7_RangeExpr>();;
				return _1a8522875_evalExprKind(_self_, (*((*(_29938_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1aa445686:;
			{
				return _1a85073d7_evalLit(_self_.ptr(), _299033_kind.cast_ptr<_1a81a3eb8_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa4456ec:;
			{
				return _1a850c123_evalIdent(_self_.ptr(), _299033_kind.cast_ptr<_1a81a4848_IdentExpr>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1aa445763:;
			{
				return _1a850c464_evalUnary(_self_, _299033_kind.cast_ptr<_1a81a50da_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1aa4457c9:;
			{
				return _1a850c7a5_evalVariadic(_self_, _299033_kind.cast_ptr<_1a81a54b4_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1aa445840:;
			{
				return _1a850cae6_evalUnsafe(_self_, _299033_kind.cast_ptr<_1a81a4392_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa4458a6:;
			{
				return _1a850d72e_evalSliceExpr(_self_, _299033_kind.cast_ptr<_1a81a9584_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1aa445ca2:;
			{
				return _1a851237b_evalIndexing(_self_, _299033_kind.cast_ptr<_1a81a9ee1_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1aa445d18:;
			{
				return _1a85136ac_evalSlicing(_self_, _299033_kind.cast_ptr<_1a81aa651_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1aa445d7e:;
			{
				return _1a851734d_evalCast(_self_, _299033_kind.cast_ptr<_1a81a588d_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa445de5:;
			{
				return _1a851768e_evalNamespace(_self_.ptr(), _299033_kind.cast_ptr<_1a81a5c67_NamespaceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa445e6c:;
			{
				return _1a8517e86_evalStructLit(_self_, _299033_kind.cast_ptr<_1a81a8077_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa445ee4:;
			{
				return _1a851855d_evalType(_self_.ptr(), _299033_kind.cast_ptr<_1a819dbe9_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa44606b:;
			{
				return _1a8519b69_evalFnCall(_self_, _299033_kind.cast_ptr<_1a81a6c57_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1aa4460e3:;
			{
				return _1a8521324_evalSubIdent(_self_, _299033_kind.cast_ptr<_1a81a6141_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa44616a:;
			{
				return _1a8521665_evalTuple(_self_, _299033_kind.cast_ptr<_1a81a3b22_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa4461e2:;
			{
				return _1a8521da2_evalBraceLit(_self_, _299033_kind.cast_ptr<_1a81a852d_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aa446269:;
			{
				return _1a85221e3_evalAnonFunc(_self_, _299033_kind.cast_ptr<_1a81b0986_FnDecl>(&__jule_any_type68));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa4462e1:;
			{
				return _1a8522534_evalBinary(_self_, _299033_kind.cast_ptr<_1a81a65e7_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1aa445620:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa4455a9:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8522bb6_eval1(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _303826_expr) {
	jule::Ptr<_1a85028cc_Data> _30397_d = _1a8522875_evalExprKind(_self_, (*(_303826_expr))._field_Kind);;
	if (((_30397_d == nullptr) || ((*(_30397_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a853931a_Fn((*(_30397_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa541650:;
			{
				jule::Ptr<_1a829a752_FnIns> _30478_f = _1a853931a_Fn((*(_30397_d))._field_Type.ptr());;
				if (_1a829bc1a_IsBuiltin(_30478_f.ptr())) {
					_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1aa540ce2;
				};
				jule::I64 _30524_required = (*((*_30478_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _30534_given = (*_30478_f.alloc)._field_Generics.len();;
				if ((!(_1a83ac8ca_checkGenericQuantity((*(_self_))._field_s, _30524_required, _30534_given, (*_303826_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30478_f))._field_Decl.alloc)._field_Statically)) && _1a8297dd1_IsMethod((*(_30478_f))._field_Decl))) {
					_1a83ab39b_pushErr((*(_self_))._field_s, (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1a852c0ee_findDirective(&((*(*(_30478_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1a83ab39b_pushErr((*(_self_))._field_s, (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30478_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30478_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30397_d))._field_Decl) {
			_case_begin_1aa5416b6:;
			{
				jule::Ptr<_1a81c246a_StructIns> _30668_s = _1a85395a1_Struct((*(_30397_d))._field_Type.ptr());;
				if ((_30668_s == nullptr)) {
					goto _match_end_1aa540ce2;
				};
				jule::I64 _30704_required = (*((*(_30668_s))._field_Decl))._field_Generics.len();;
				jule::I64 _30714_given = (*(_30668_s))._field_Generics.len();;
				if ((!(_1a83ac8ca_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30704_required, _30714_given, (*_303826_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1aa540ce2:;
	};
	return _30397_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8523007_eval(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _308325_expr) {
	jule::Ptr<_1a85028cc_Data> _30847_d = _1a8522bb6_eval1(_self_, _308325_expr);;
	if ((_30847_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a853a0da_comptime((*(_30847_d))._field_Type.ptr()))) {
		_1a83ab39b_pushErr((*_self_.alloc)._field_s.ptr(), (*(_308325_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30847_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8523348_evalExpr1(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _309830_expr) {
	jule::Ptr<_1a85028cc_Data> _30997_d = _1a8522bb6_eval1(_self_, _309830_expr);;
	{
		
		if ((_30997_d == nullptr)) {
			_case_begin_1aa54e905:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30997_d))._field_Decl) {
			_case_begin_1aa54e99e:;
			{
				_1a8504d74_pushErr(_self_, (*(_309830_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aa54e87d:;
			{
				return _30997_d;;
			}
		}
		_match_end_1aa54e806:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8523689_evalExpr(jule::Ptr<_1a850489b_eval> _self_, jule::Ptr<_1a81a302d_Expr> _311429_expr) {
	jule::Ptr<_1a85028cc_Data> _31157_d = _1a8523007_eval(_self_, _311429_expr);;
	{
		
		if ((_31157_d == nullptr)) {
			_case_begin_1aa55196d:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31157_d))._field_Decl) {
			_case_begin_1aa551a17:;
			{
				_1a8504d74_pushErr(_self_, (*(_311429_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aa5518e6:;
			{
				return _31157_d;;
			}
		}
		_match_end_1aa55186e:;
	};
}








inline jule::Bool _1a8523b1d_unaryEval_eq(_1a8523b1d_unaryEval *_self_, _1a8523b1d_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1a8523b1d_unaryEval static__1a8524091_new(jule::Ptr<_1a850489b_eval> _313520_e) {
	return _1a8523b1d_unaryEval{._field_e=_313520_e, ._field_d=jule::Ptr<_1a85028cc_Data>(nullptr), ._field_u=jule::Ptr<_1a81a50da_UnaryExpr>(nullptr)};;
}



inline void _1a852428e_minus(_1a8523b1d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa55382c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a853802d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa553c17:;
			{
				if ((!(_1a8326602_IsNum(_1a8535c73_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa5534ca:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa553464:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa553398:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8503317_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a828362a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa5580e5:;
				{
					_1a828265c_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1a828102e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a8282ae1_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa5581d3:;
				{
					_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a8282d77_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa557c93:;
				{
					_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a82812b5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa557c1b:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3173:5"));;
				}
			}
			_match_end_1aa557b3e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a852448c_plus(_1a8523b1d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa55d77c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a853802d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa55db67:;
			{
				if ((!(_1a8326602_IsNum(_1a8535c73_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa55d42a:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa55d3b4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa55d2a4:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8503317_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a828362a_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa563045:;
				{
					_1a828265c_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1a828102e_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a8282ae1_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa563133:;
				{
					_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a8282d77_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa562be3:;
				{
					_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a82812b5_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa562b6b:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3218:5"));;
				}
			}
			_match_end_1aa562a8e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a852468a_caret(_1a8523b1d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa5686aa:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a853802d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa568a95:;
			{
				if ((!(_1a832602a_IsInt(_1a8535c73_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa568358:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa5682e2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa5681d2:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8503317_IsConst((*(_self_))._field_d)) {
		jule::I64 _32594_sz = _1a831ceab_BitSizeOf((*(_1a853802d_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1a8282ae1_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa56db44:;
				{
					{
						auto &_match_expr{ _32594_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1aa56ec22:;
							{
								_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1aa56e815:;
							{
								_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1aa56e87b:;
							{
								_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1aa56e8e2:;
							{
								_1a8281a8a_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1a82804e5_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1aa56e64a:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3272:6"));;
							}
						}
						_match_end_1aa56e6c2:;
					};
				}
			}
			else if (_1a8282d77_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa56dc21:;
				{
					{
						auto &_match_expr{ _32594_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1aa574d15:;
							{
								_1a8281d43_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1a828077b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1aa574908:;
							{
								_1a8281d43_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1a828077b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1aa57496e:;
							{
								_1a8281d43_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1a828077b_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1aa5749d5:;
							{
								_1a8281d43_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1a828077b_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1aa57472c:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3285:6"));;
							}
						}
						_match_end_1aa5747a4:;
					};
				}
			}
			else {
				_case_begin_1aa56d7ae:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3288:5"));;
				}
			}
			_match_end_1aa56d748:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a8524888_excl(_1a8523b1d_unaryEval* _self_) {
	jule::Ptr<_1a853d990_Prim> _33023_t = _1a853802d_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33023_t == nullptr) || (!(_1a8541bc4_IsBool(_33023_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a8503317_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a828310d_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa57c878:;
				{
					_1a82820eb_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1a8280a12_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa57c4b0:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3316:5"));;
				}
			}
			_match_end_1aa57c3d3:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1a8524a86_star(_1a8523b1d_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1a853854a_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa5811c8:;
			{
				if ((!(_1a8505869_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a8504d74_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a8545c83_Ptr> _33418_t = _1a853854a_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1a8546800_IsUnsafe(_33418_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Type=(*_33418_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a85382b4_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa581250:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1a85382b4_Sptr((*((*(_self_))._field_d))._field_Type)))._field_Elem;
			}
		}
		else {
			_case_begin_1aa580d21:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa57ed0e:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a8524c84_amper(_1a8523b1d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa589995:;
			{
				jule::Ptr<_1a828b226_StructLitExprModel> _33638_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a828b226_StructLitExprModel>();;
				_1a852ca28_makeStructLitAlloc(&((*(_self_))._field_d), &(_33638_lit));
			}
		}
		else {
			_case_begin_1aa586db0:;
			{
				{
					
					if (_1a85521ac_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1aa5877a6:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8545c83_Ptr>(_1a8545c83_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1aa5869a3:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1aa587355:;
				};
			}
		}
		_match_end_1aa586d49:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a8524e82_typeDecl(_1a8523b1d_unaryEval* _self_) {
	_1a8547c74_typeChecker _33887_tc = _1a8547c74_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a8546c84_referencer>(nullptr), ._field_refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a8534a85_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa58d526:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a854d5a4_buildPtrFromType(&_33887_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa58d1d5:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a854ce22_buildSptrFromType(&_33887_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1aa58cb1e:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa58d15d:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a8525180_evalData(_1a8523b1d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa593d34:;
			{
				jule::Ptr<_1a8535877_Type> _34138_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a8523007_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34138_prefix;
			}
		}
		else {
			_case_begin_1aa58d24b:;
			{
				(*(_self_))._field_d=_1a8523007_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1aa593916:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85254c1_eval(_1a8523b1d_unaryEval* _self_, jule::Ptr<_1a81a50da_UnaryExpr> _342224_u) {
	(*(_self_))._field_u=_342224_u;
	_1a8525180_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a8524e82_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a8535877_Type> _34333_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa5984ed:;
			{
				_1a852428e_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa598564:;
			{
				_1a852448c_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa5985ca:;
			{
				_1a852468a_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aa598641:;
			{
				_1a8524888_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa5986a7:;
			{
				_1a8524a86_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa59871d:;
			{
				_1a8524c84_amper(_self_);
			}
		}
		else {
			_case_begin_1aa597eae:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1aa598476:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1aa598c29:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str(_34333_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1a8503317_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1aa596b7d:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1aa59a6cb:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1a8525aa9_binaryEval_eq(_1a8525aa9_binaryEval *_self_, _1a8525aa9_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1a8525aa9_binaryEval static__1a8526192_newPlain(jule::Ptr<_1a850489b_eval> _347025_e) {
	return _1a8525aa9_binaryEval{._field_e=_347025_e, ._field_l=jule::Ptr<_1a85028cc_Data>(nullptr), ._field_r=jule::Ptr<_1a85028cc_Data>(nullptr), ._field_op=jule::Ptr<_1a81881cd_Token>(nullptr)};;
}



inline _1a8525aa9_binaryEval static__1a8526516_new(jule::Ptr<_1a850489b_eval> _347620_e, jule::Ptr<_1a81881cd_Token> _347634_op) {
	return _1a8525aa9_binaryEval{._field_e=_347620_e, ._field_l=jule::Ptr<_1a85028cc_Data>(nullptr), ._field_r=jule::Ptr<_1a85028cc_Data>(nullptr), ._field_op=_347634_op};;
}



inline jule::Bool _1a852679c_checkTypeCompatibility(_1a8525aa9_binaryEval* _self_) {
	return _1a83b4bbd_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a8526a33_checkStructCommonOperatorCompatibility(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a829a752_FnIns> _349011_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aa5a11a4:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa5a0d52:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa5a0db8:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa5a0e2e:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa5a0e95:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa5a100b:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa5a1072:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa5a27b0:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1aa5a2826:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa5a288c:;
			{
				_349011_overload=(*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1aa5a0912:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1aa5a0cca:;
	};
	if ((_349011_overload == nullptr)) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1a82995ec_ParamIns> _35227_p = (*(_349011_overload))._field_Params[1LL];;
	return _1a83b388c_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35227_p))._field_Decl))._field_Reference, &((*_35227_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _1a8507daa_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1a85028cc_Data> _1a8526cb9_evalComptimeTypeInfo(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a8337976_comptimeTypeInfo> _35277_r = _1a853b8e4_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35277_r == nullptr)) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a8337976_comptimeTypeInfo> _35327_l = _1a853b8e4_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aa5b1b32:;
			{
				jule::Ptr<_1a82273d2_Const> _35358_constant = static__1a827e5e3_NewBool(_1a85360b4_Equal((*(_35327_l))._field_base, (*(_35277_r))._field_base));;
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35358_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35358_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5b30c8:;
			{
				jule::Ptr<_1a82273d2_Const> _35428_constant = static__1a827e5e3_NewBool((!(_1a85360b4_Equal((*(_35327_l))._field_base, (*(_35277_r))._field_base))));;
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35428_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35428_constant});;
			}
		}
		else {
			_case_begin_1aa5ae943:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5b1758:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8527050_evalNil(_1a8525aa9_binaryEval* _self_) {
	if ((!(_1a853777a_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5b7cd1:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa5b60ba:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5b7907:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85272d6_evalEnum(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a82a555e_Enum> _35737_enm = _1a85387d1_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5ba212:;
			{
				jule::Ptr<_1a8535877_Type> _35778_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1a85387d1_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35778_rkind=(*((*(_1a85387d1_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_1a83b42e9_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type), &(_35778_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		_match_end_1aa5ba18a:;
	};
	if (((_1a85387d1_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35737_enm != _1a85387d1_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35737_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa5c0d61:;
			{
				if ((!(_1a8326602_IsNum(_1a8535c73_Str((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type.ptr()))))) {
					_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa5c1ea5:;
			{
				jule::Ptr<_1a82a4a03_EnumItem> _36074_first = (*_35737_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1a8282ae1_IsI64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1aa5c59c0:;
						{
							if ((_1a82804e5_ReadI64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1aa5ca0e0;
							};
							goto _julec_label_1aa5c8dad;
						}
					}
					else if (_1a8282d77_IsU64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1aa5c5aad:;
						{
							if ((_1a828077b_ReadU64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1aa5ca0e0;
							};
							goto _julec_label_1aa5c8dad;
						}
					}
					else {
						_case_begin_1aa5c5607:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3620:5"));;
						}
					}
					_match_end_1aa5c5580:;
				};
				_julec_label_1aa5c8dad:;
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1a85051d7_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1aa5ca0e0:;
				goto _case_begin_1aa5c201b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa5c201b:;
			{
				if (((_1a853802d_Prim((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type.ptr()) == nullptr) || (!(_1a832602a_IsInt(_1a853dd14_Str(_1a853802d_Prim((*((*(_35737_enm))._field_TypeSym))._field_Type).ptr())))))) {
					_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa5ba278:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5c09a9:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a852756c_evalTypeEnum(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a82a6c69_TypeEnum> _36407_enm = _1a8538a67_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5ce16b:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa5cd49a:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a82a70dd_Str(_36407_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5cdc09:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8527803_evalSptr(_1a8525aa9_binaryEval* _self_) {
	if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5d168a:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa5d05ac:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5d12b1:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8527a89_evalPtr(_1a8525aa9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa5d3a66:;
			{
				if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa5d4ec9:;
			{
				if ((_1a853854a_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a8546800_IsUnsafe(_1a853854a_Ptr((*((*(_self_))._field_l))._field_Type).ptr())) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1a852dbb1_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa5d315e:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5d3082:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8527d20_evalArr(_1a8525aa9_binaryEval* _self_) {
	if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5dbc8e:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1a829a752_FnIns> _37179_f = _1a8298ba1_instanceForce(_1a7d2561d_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37179_f))._field_Generics=jule::append((*_37179_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=(*(_1a8538ced_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37195_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a83c3dec_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37179_f), &((*(_self_))._field_op));
						_37195_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37195_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3721:6"));;
					};
					_1aa1a0534_pushReference((*(_self_))._field_e, &(_37179_f));
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa5d6926:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5db8b5:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85280a6_evalStruct(_1a8525aa9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa5dd664:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa5dd6ec:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aa5e2da5:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa5e2e1b:;
			{
				if (((*(_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5e2e82:;
			{
				if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		_match_end_1aa5dd587:;
	};
	if ((!(_1a8526a33_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a85028cc_Data> _1a852833c_evalTrait(_1a8525aa9_binaryEval* _self_) {
	if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa5ee620:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa5ed9c6:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa5ee246:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85285c3_evalAny(_1a8525aa9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa6019eb:;
			{
				_1a8553675_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1a8507daa_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa6010e4:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa601017:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8528859_evalBool(_1a8525aa9_binaryEval* _self_) {
	if ((!(_1a852679c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa604b86:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa602d2c:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa6047ac:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8528ae0_evalStr(_1a8525aa9_binaryEval* _self_) {
	jule::Str _38337_rk = _1a8535c73_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38337_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_38337_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa608e21:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa608d33:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1aa6078e2:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa60897b:;
	};
}



inline void _1a8528cdd_setTypeToGreater(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a853d990_Prim> _38583_lp = _1a853802d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1a853d990_Prim> _38593_rp = _1a853802d_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38593_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38583_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38583_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1a8529096_checkModData(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _387533_d) {
	if ((!(_1a8503317_IsConst((*(_387533_d)).ptr())))) {
		if (((_1a853802d_Prim((*((*(_387533_d))))._field_Type.ptr()) == nullptr) || (!(_1a832602a_IsInt((*(_1a853802d_Prim((*((*(_387533_d))))._field_Type)))._field_Kind))))) {
			_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a84dce4a_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _387533_d)) {
			_case_begin_1aa61546b:;
			{
				_1a8281a8a_SetI64((*((*(_387533_d))))._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_387533_d))))._field_Constant));
			}
		}
		else if (_1a84dd313_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _387533_d)) {
			_case_begin_1aa61514c:;
			{
				_1a8281d43_SetU64((*((*(_387533_d))))._field_Constant.ptr(), _1a828154b_AsU64((*((*(_387533_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1aa6150d6:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa615070:;
	};
}



inline void _1a8529294_mod(_1a8525aa9_binaryEval* _self_) {
	_1a8529096_checkModData(_self_, &((*(_self_))._field_l));
	_1a8529096_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a8529690_numbersAreCompatibile(_1a8525aa9_binaryEval* _self_, jule::Str* _389734_lk, jule::Str* _389744_rk) {
	if ((!(_1a8326602_IsNum((*(_389744_rk)))))) {
		return false;;
	};
	if ((_1a8503317_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_389734_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1a8503317_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a84dcac6_floatAssignable(_389734_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389744_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_389734_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1a8503317_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a84dcac6_floatAssignable(_389734_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389744_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1a8503317_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a84dd687_intAssignable((*(_389734_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_389734_lk)) == (*(_389744_rk)));;
}



inline jule::Ptr<_1a85028cc_Data> _1a8529926_shift(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a853d990_Prim> _39253_lk = _1a853802d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39253_lk == nullptr)) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a853d990_Prim> _39303_rk = _1a853802d_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39303_rk == nullptr)) {
		_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a8326602_IsNum((*(_39253_lk))._field_Kind))) || (!(_1a8326602_IsNum((*(_39303_rk))._field_Kind))))) {
		_1a83b4717_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1a832602a_IsInt((*(_39253_lk))._field_Kind)))) {
		if (((!(_1a8503317_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39253_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39303_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1a8281a8a_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a85aa9eb_primI64;
		} else if (_1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1a8281d43_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a828154b_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1a85ab7ee_primU64;
		};
	};
	if ((!(_1a832602a_IsInt((*(_39303_rk))._field_Kind)))) {
		if (((!(_1a8503317_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39253_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39303_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1a8281a8a_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a85aa9eb_primI64;
		} else if (_1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1a8281d43_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a828154b_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1a85ab7ee_primU64;
		};
	};
	if ((!(_1a852d4da_isOkForShifting(&((*(_self_))._field_r))))) {
		_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a85028cc_Data> _1a8529bac_evalFloat(_1a8525aa9_binaryEval* _self_) {
	jule::Str _39803_lk = (*(_1a853802d_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39813_rk = (*(_1a853802d_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1a8529690_numbersAreCompatibile(_self_, &(_39803_lk), &(_39813_rk))))) {
		_1a83b4717_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa6316c9:;
			{
				_1a8528cdd_setTypeToGreater(_self_);
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		_match_end_1aa631652:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa63319d:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4005:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa63404a:;
			{
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa6340b1:;
			{
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa632642:;
			{
				if ((!(_1a832602a_IsInt(_39813_rk)))) {
					_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39803_lk, &__jule_any_type5); (*it++) = jule::Any(_39813_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a8529294_mod(_self_);
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1aa6317b7:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa6325cb:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8529e43_evalInt(_1a8525aa9_binaryEval* _self_) {
	jule::Str _40293_lk = (*(_1a853802d_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40303_rk = (*(_1a853802d_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1a8529690_numbersAreCompatibile(_self_, &(_40293_lk), &(_40303_rk))))) {
		_1a83b4717_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa63a01d:;
			{
				return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9577_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
			}
		}
		_match_end_1aa639e96:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa63b805:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4054:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa63c6a2:;
			{
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa63c718:;
			{
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa63ae20:;
			{
				_1a8529294_mod(_self_);
				_1a8528cdd_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa63a10b:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa63b3e8:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a852a1c9_evalPrim(_1a8525aa9_binaryEval* _self_) {
	jule::Ptr<_1a853d990_Prim> _40773_prim = _1a853802d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1a8541bc4_IsBool(_40773_prim.ptr())) {
			_case_begin_1aa6409c4:;
			{
				return _1a8528859_evalBool(_self_);;
			}
		}
		else if (_1a8541e5a_IsStr(_40773_prim.ptr())) {
			_case_begin_1aa640a6d:;
			{
				return _1a8528ae0_evalStr(_self_);;
			}
		}
		_match_end_1aa64093b:;
	};
	if ((_1a853802d_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a853dd14_Str(_40773_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1a832636b_IsFloat((*_40773_prim.alloc)._field_Kind)) {
			_case_begin_1aa64390b:;
			{
				return _1a8529bac_evalFloat(_self_);;
			}
		}
		else if (_1a832602a_IsInt((*_40773_prim.alloc)._field_Kind)) {
			_case_begin_1aa643994:;
			{
				return _1a8529e43_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1aa643895:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa641bb2:;
	};
}



inline jule::Bool _1a852a460_checkSpecialCases(_1a8525aa9_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41023_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41023_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1a8536ec7_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1a85369aa_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1a8536ec7_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1a85369aa_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1a85028cc_Data> _1a852a6e6_evalOp(_1a8525aa9_binaryEval* _self_) {
	jule::Bool _41173_ok = _1a852a460_checkSpecialCases(_self_);;
	if ((!(_41173_ok))) {
		return nullptr;;
	};
	if ((_1a85395a1_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _1a85280a6_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1a8529926_shift(_self_);;
	};
	{
		
		if (_1a8536c41_Void((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1aa64ca9c:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1a853b8e4_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64cc56:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64cb13;
			}
		}
		else if ((_1a853b8e4_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64cb13:;
			{
				return _1a8526cb9_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a853802d_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1a85421e1_IsAny(_1a853802d_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1aa64cb79:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e1ec;
			}
		}
		else if (_1a85369aa_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1aa64e1ec:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e263;
			}
		}
		else if (_1a85369aa_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1aa64e263:;
			{
				return _1a8527050_evalNil(_self_);;
			}
		}
		else if (((_1a853802d_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1a85421e1_IsAny(_1a853802d_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1aa64e362:;
			{
				return _1a85285c3_evalAny(_self_);;
			}
		}
		else if ((_1a8538a67_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64e3c8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e43e;
			}
		}
		else if ((_1a8538a67_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e43e:;
			{
				return _1a852756c_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a85387d1_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64e4a5:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e51b;
			}
		}
		else if ((_1a85387d1_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e51b:;
			{
				return _1a85272d6_evalEnum(_self_);;
			}
		}
		else if ((_1a85382b4_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64e582:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e5e8;
			}
		}
		else if ((_1a85382b4_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e5e8:;
			{
				return _1a8527803_evalSptr(_self_);;
			}
		}
		else if ((_1a853854a_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64e65e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e6c5;
			}
		}
		else if ((_1a853854a_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e6c5:;
			{
				return _1a8527a89_evalPtr(_self_);;
			}
		}
		else if ((_1a8538ced_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e73b:;
			{
				return _1a8527d20_evalArr(_self_);;
			}
		}
		else if ((_1a8539837_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1aa64e807:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa64e86d;
			}
		}
		else if ((_1a8539837_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e86d:;
			{
				return _1a852833c_evalTrait(_self_);;
			}
		}
		else if ((_1a853802d_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1aa64e8d4:;
			{
				return _1a852a1c9_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1aa64c8c1:;
			{
				_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa64be64:;
	};
}



inline void _1a852a99e_evalConst(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _418730_d) {
	{
		
		if (((*(_418730_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1aa661561:;
			{
				return;;
			}
		}
		else if ((!(_1a8503317_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a8503317_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1aa661b16:;
			{
				(*((*(_418730_d))))._field_Constant=nullptr;
				(*((*(_418730_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1aa661451:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aa661be3:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a82846c5_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa664146:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool((!(_1a82846c5_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa6641ac:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a8284384_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa664223:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a8284043_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa664289:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a8285198_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aa664311:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a8284a16_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa664388:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a82854d9_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa664410:;
			{
				(*((*(_418730_d))))._field_Constant=static__1a827e5e3_NewBool(_1a8284d57_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa664487:;
			{
				_1a828582a_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa66450e:;
			{
				_1a8285b6b_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa664586:;
			{
				_1a8285eac_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa66460d:;
			{
				jule::Bool _42274_ok = _1a82862ed_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42274_ok)) && (_1a82817d2_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a853d990_Prim> _42328_prim = _1a853802d_Prim((*((*(_418730_d))))._field_Type.ptr());;
				{
					
					if (_1a8325953_IsSigInt((*(_42328_prim))._field_Kind)) {
						_case_begin_1aa675850:;
						{
							_1a8281a8a_SetI64((*((*(_418730_d))))._field_Constant, _1a82812b5_AsI64((*((*(_418730_d))))._field_Constant));
						}
					}
					else if (_1a8325c61_IsUnsigInt((*(_42328_prim))._field_Kind)) {
						_case_begin_1aa6758e9:;
						{
							_1a8281d43_SetU64((*((*(_418730_d))))._field_Constant, _1a828154b_AsU64((*((*(_418730_d))))._field_Constant));
						}
					}
					_match_end_1aa6757c8:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa664685:;
			{
				jule::Bool _42404_ok = _1a828663e_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42404_ok)) && (_1a82817d2_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1aa66470c:;
			{
				_1a8286cc1_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa664784:;
			{
				_1a8286980_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa66480b:;
			{
				_1a8287112_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aa664883:;
			{
				_1a8287453_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa66490a:;
			{
				_1a8287794_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1aa663431:;
	};
	(*((*(_418730_d))))._field_Model=jule::Any((*((*(_418730_d))))._field_Constant, &__jule_any_type15);
	_1a85308d8_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _418730_d, _1a85387d1_Enum((*((*(_418730_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1a8507daa_getOwnerRefers((*(_self_))._field_e));
}



inline void _1a852ac57_checkData(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _426530_d) {
	jule::Ptr<_1a829a752_FnIns> _42663_f = _1a853931a_Fn((*((*(_426530_d))))._field_Type.ptr());;
	if ((((_42663_f != nullptr) && ((*_42663_f.alloc)._field_Decl != nullptr)) && _1a8297dd1_IsMethod((*(_42663_f))._field_Decl))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1a852ae55_checkDatas(_1a8525aa9_binaryEval* _self_) {
	_1a852ac57_checkData(_self_, &((*(_self_))._field_l));
	_1a852ac57_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a852b20d_setModel(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _427729_d) {
	if (_1a8503317_IsConst((*(_427729_d)).ptr())) {
		if (((_1a8503317_IsConst((*(_self_))._field_l.ptr()) && _1a8503317_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a85028cc_Data> _42887_l;
	jule::Ptr<_1a85028cc_Data> _428814_r;
	({
		jule::Ptr<_1a85028cc_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a85028cc_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42887_l = ___jule_assign_arg;
		_428814_r = _1___jule_assign_arg;
	});
	if ((!(_1a8503658_GoodOperand(_42887_l, &(_428814_r))))) {
		std::swap(_42887_l, _428814_r);
	};
	(*((*(_427729_d))))._field_Model=jule::Any(jule::new_ptr<_1a828a478_BinaryExprModel>(_1a828a478_BinaryExprModel{._field_Left=jule::new_ptr<_1a8289e7d_OperandExprModel>(_1a8289e7d_OperandExprModel{._field_Type=(*_42887_l.alloc)._field_Type, ._field_Model=(*_42887_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a8289e7d_OperandExprModel>(_1a8289e7d_OperandExprModel{._field_Type=(*_428814_r.alloc)._field_Type, ._field_Model=(*_428814_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1a852b4b6_postEval(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _430629_d) {
	(*((*(_430629_d))))._field_Lvalue=false;
	_1a852b20d_setModel(_self_, _430629_d);
}



inline jule::Ptr<_1a85028cc_Data> _1a852b8b2_solveExplicit(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a85028cc_Data>* _431134_l, jule::Ptr<_1a85028cc_Data>* _431149_r) {
	({
		jule::Ptr<_1a85028cc_Data> ___jule_assign_arg = (*(_431134_l));
		jule::Ptr<_1a85028cc_Data> _1___jule_assign_arg = (*(_431149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a852ae55_checkDatas(_self_);
	jule::Ptr<_1a85028cc_Data> _43167_d = _1a852a6e6_evalOp(_self_);;
	({
		jule::Ptr<_1a85028cc_Data> ___jule_assign_arg = (*(_431134_l));
		jule::Ptr<_1a85028cc_Data> _1___jule_assign_arg = (*(_431149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a852a99e_evalConst(_self_, &(_43167_d));
	if ((_43167_d != nullptr)) {
		(*_43167_d.alloc)._field_Mutable=true;
		_1a852b4b6_postEval(_self_, &(_43167_d));
	};
	return _43167_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a852bc03_eval(_1a8525aa9_binaryEval* _self_, jule::Ptr<_1a81a65e7_BinaryExpr>* _433125_op) {
	if (((*((*((*(_433125_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a8504d74_pushErr((*(_self_))._field_e.ptr(), (*((*(_433125_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1a85051d7_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a85028cc_Data> _43387_l = _1a8523348_evalExpr1((*(_self_))._field_e, (*((*(_433125_op))))._field_Left);;
	if (((_43387_l == nullptr) || ((*(_43387_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a8535877_Type> _43437_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43387_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43437_prefix;
	});;
	jule::Ptr<_1a85028cc_Data> _43467_r = _1a8523348_evalExpr1((*(_self_))._field_e, (*((*(_433125_op))))._field_Right);;
	if (((_43467_r == nullptr) || ((*(_43467_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_433125_op))))._field_Op;
	jule::Ptr<_1a85028cc_Data> _43537_d = _1a852b8b2_solveExplicit(_self_, &(_43387_l), &(_43467_r));;
	if ((((_43537_d != nullptr) && (*(_43387_l))._field_IsRune) && (*(_43467_r))._field_IsRune)) {
		(*_43537_d.alloc)._field_IsRune=true;
	};
	return _43537_d;;
}
















inline jule::Bool _1a8535877_Type_eq(_1a8535877_Type *_self_, _1a8535877_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a8535c73_Str(_1a8535877_Type* _self_) {
	if (_1a85369aa_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_21ca86171_Builder _567_kind = static__21ca869bd_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _21ca87150_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_1a8536724_Binded(_self_)) {
		({
			auto except = _21ca87150_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _21ca87150_WriteStr(&_567_kind, ((_1a85353c1_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a8534e2b_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _21ca879d0_Str(&_567_kind);;
}



inline jule::Bool _1a85360b4_Equal(jule::Ptr<_1a8535877_Type> _self_, jule::Ptr<_1a8535877_Type> _7218_other) {
	if (_1a85369aa_IsNil(_self_.ptr())) {
		return _1a85369aa_IsNil(_7218_other.ptr());;
	};
	if ((_1a8536724_Binded(_self_) || _1a8536724_Binded(_7218_other))) {
		return ((_1a8536724_Binded(_self_) == _1a8536724_Binded(_7218_other)) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1a85353c1_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a853526c_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1a8536724_Binded(_1a8535877_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a85369aa_IsNil(_1a8535877_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a8536c41_Void(_1a8535877_Type* _self_) {
	jule::Ptr<_1a853d990_Prim> _923_prim = _1a853802d_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a8536ec7_Comparable(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _998__self = _self_;;
		if ((_1a85395a1_Struct(_998__self) != nullptr)) {
			return (*(_1a85395a1_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1a8538ced_Arr(_998__self) != nullptr)) {
			return _1a8536ec7_Comparable((*(_1a8538ced_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1a8539abd_Map(_998__self) == nullptr) && (_1a8539084_Slc(_998__self) == nullptr)) && (_1a853931a_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1a853725d_Mutable(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _1138__self = _self_;;
		if ((_1a85395a1_Struct(_1138__self) != nullptr)) {
			return (*(_1a85395a1_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1a8539837_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1a853802d_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1a853d990_Prim> _1215_p = _1a853802d_Prim(_1138__self);;
			return _1a85421e1_IsAny(_1215_p.ptr());;
		};
		if ((_1a8538ced_Arr(_1138__self) != nullptr)) {
			return _1a853725d_Mutable((*(_1a8538ced_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1a8539084_Slc(_1138__self) != nullptr) || (_1a853854a_Ptr(_1138__self) != nullptr)) || (_1a85382b4_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1a85374e4_Ordered(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _1368__self = _self_;;
		jule::Ptr<_1a853d990_Prim> _1374_prim = _1a853802d_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1a8326602_IsNum((*_1374_prim.alloc)._field_Kind) || _1a8541e5a_IsStr(_1374_prim));;
		};
		if ((_1a853854a_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a81c246a_StructIns> _1444_s = _1a85395a1_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a82a555e_Enum> _1514_enm = _1a85387d1_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1a8326602_IsNum(_1a8535c73_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a853777a_NilCompatible(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _1628__self = _self_;;
		jule::Ptr<_1a853d990_Prim> _1644_prim = _1a853802d_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1a85421e1_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1a85369aa_IsNil(_1628__self) || (_1a853931a_Fn(_1628__self) != nullptr)) || (_1a85382b4_Sptr(_1628__self) != nullptr)) || (_1a853854a_Ptr(_1628__self) != nullptr)) || (_1a8539837_Trait(_1628__self) != nullptr)) || (_1a8539084_Slc(_1628__self) != nullptr)) || (_1a8539abd_Map(_1628__self) != nullptr)) || (_1a8538a67_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1a8537a11_GC(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _1838__self = _self_;;
		jule::Ptr<_1a853d990_Prim> _1844_prim = _1a853802d_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1a85421e1_IsAny(_1844_prim) || _1a8541e5a_IsStr(_1844_prim));;
		};
		return ((((_1a85382b4_Sptr(_1838__self) != nullptr) || (_1a8539084_Slc(_1838__self) != nullptr)) || (_1a8539837_Trait(_1838__self) != nullptr)) || (_1a8538a67_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1a8537c97_Variadicable(_1a8535877_Type* _self_) {
	{
		_1a8535877_Type* _1968__self = _self_;;
		return (_1a8539084_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1a853d990_Prim> _1a853802d_Prim(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)) {
			_case_begin_1aa6b49d2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a853d990_Prim>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1aa6c8ead:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6c8e47:;
	};
}



inline jule::Ptr<_1a85424bb_Sptr> _1a85382b4_Sptr(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)) {
			_case_begin_1aa6c9b4b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a85424bb_Sptr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1aa6c9d9e:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6c9d38:;
	};
}



inline jule::Ptr<_1a8545c83_Ptr> _1a853854a_Ptr(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28)) {
			_case_begin_1aa6caac5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8545c83_Ptr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1aa6ca91b:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6ca8a5:;
	};
}



inline jule::Ptr<_1a82a555e_Enum> _1a85387d1_Enum(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3)) {
			_case_begin_1aa6cb631:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a82a555e_Enum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1aa6cb884:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6cb81d:;
	};
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a8538a67_TypeEnum(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)) {
			_case_begin_1aa6cc5aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a82a6c69_TypeEnum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1aa6cc401:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6cc38a:;
	};
}



inline jule::Ptr<_1a85452b0_Arr> _1a8538ced_Arr(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27)) {
			_case_begin_1aa6cd336:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a85452b0_Arr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1aa6cd17c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6cd116:;
	};
}



inline jule::Ptr<_1a8542e8e_Slc> _1a8539084_Slc(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)) {
			_case_begin_1aa6ce0b2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8542e8e_Slc>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1aa6cde08:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6cdd92:;
	};
}



inline jule::Ptr<_1a829a752_FnIns> _1a853931a_Fn(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)) {
			_case_begin_1aa6ced3d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a829a752_FnIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1aa6ceb84:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6ceb1d:;
	};
}



inline jule::Ptr<_1a81c246a_StructIns> _1a85395a1_Struct(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)) {
			_case_begin_1aa6d0899:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a81c246a_StructIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1aa6d0aec:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d0a86:;
	};
}



inline jule::Ptr<_1a82a2da8_Trait> _1a8539837_Trait(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data2)) {
			_case_begin_1aa6d1823:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a82a2da8_Trait>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1aa6d1669:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d1603:;
	};
}



inline jule::Ptr<_1a8544633_Map> _1a8539abd_Map(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26)) {
			_case_begin_1aa6d259e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8544633_Map>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1aa6d23e5:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d237e:;
	};
}



inline jule::Ptr<_1a8543a83_Tuple> _1a8539d54_Tup(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25)) {
			_case_begin_1aa6d332a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8543a83_Tuple>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1aa6d3171:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d310a:;
	};
}



inline jule::Bool _1a853a0da_comptime(_1a8535877_Type* _self_) {
	return (((((((((((((((_1a853b65d_comptimeTypeInfos(_self_) != nullptr) || (_1a853b8e4_comptimeTypeInfo(_self_) != nullptr)) || (_1a853a371_comptimeStructFields(_self_) != nullptr)) || (_1a853a607_comptimeStructField(_self_) != nullptr)) || (_1a853a88d_comptimeEnumFields(_self_) != nullptr)) || (_1a853ab24_comptimeEnumField(_self_) != nullptr)) || (_1a853bb7a_comptimeStatics(_self_) != nullptr)) || (_1a853be11_comptimeStatic(_self_) != nullptr)) || (_1a853adaa_comptimeParams(_self_) != nullptr)) || (_1a853b141_comptimeParam(_self_) != nullptr)) || (_1a853c197_comptimeValue(_self_) != nullptr)) || (_1a853cbd1_comptimeFiles(_self_) != nullptr)) || (_1a853c94a_comptimeFile(_self_) != nullptr)) || (_1a853c42d_comptimeDecl(_self_) != nullptr)) || (_1a853c6b4_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1a8329d75_comptimeStructFields> _1a853a371_comptimeStructFields(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data7)) {
			_case_begin_1aa6d3d86:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8329d75_comptimeStructFields>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1aa6d8297:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d8231:;
	};
}



inline jule::Ptr<_1a83285d2_comptimeStructField> _1a853a607_comptimeStructField(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data6)) {
			_case_begin_1aa6d8b16:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a83285d2_comptimeStructField>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1aa6d895c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d88e6:;
	};
}



inline jule::Ptr<_1a8330d37_comptimeEnumFields> _1a853a88d_comptimeEnumFields(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data11)) {
			_case_begin_1aa6d9892:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8330d37_comptimeEnumFields>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1aa6d96d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6d9672:;
	};
}



inline jule::Ptr<_1a832ea28_comptimeEnumField> _1a853ab24_comptimeEnumField(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data10)) {
			_case_begin_1aa6da61d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a832ea28_comptimeEnumField>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1aa6da464:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6da3ed:;
	};
}



inline jule::Ptr<_1a8334698_comptimeParams> _1a853adaa_comptimeParams(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data13)) {
			_case_begin_1aa6db399:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8334698_comptimeParams>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1aa6db1e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6db179:;
	};
}



inline jule::Ptr<_1a833283e_comptimeParam> _1a853b141_comptimeParam(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data12)) {
			_case_begin_1aa6dc125:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a833283e_comptimeParam>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1aa6dbe6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6dbe05:;
	};
}



inline jule::Ptr<_1a8327a76_comptimeRange> _1a853b3c7_comptimeRange(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)) {
			_case_begin_1aa6dcda1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8327a76_comptimeRange>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1aa6dcbe7:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6dcb81:;
	};
}



inline jule::Ptr<_1a8336007_comptimeTypeInfos> _1a853b65d_comptimeTypeInfos(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data14)) {
			_case_begin_1aa6ddb2c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8336007_comptimeTypeInfos>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1aa6dd973:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6dd90c:;
	};
}



inline jule::Ptr<_1a8337976_comptimeTypeInfo> _1a853b8e4_comptimeTypeInfo(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15)) {
			_case_begin_1aa6de8a8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8337976_comptimeTypeInfo>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1aa6de6ee:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6de688:;
	};
}



inline jule::Ptr<_1a832d0a9_comptimeStatics> _1a853bb7a_comptimeStatics(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data9)) {
			_case_begin_1aa6e0634:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a832d0a9_comptimeStatics>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1aa6e047a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e0414:;
	};
}



inline jule::Ptr<_1a832b805_comptimeStatic> _1a853be11_comptimeStatic(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data8)) {
			_case_begin_1aa6e13b0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a832b805_comptimeStatic>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1aa6e1206:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e1190:;
	};
}



inline jule::Ptr<_1a833da7b_comptimeValue> _1a853c197_comptimeValue(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data16)) {
			_case_begin_1aa6e213b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a833da7b_comptimeValue>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1aa6e1e82:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e1e1b:;
	};
}



inline jule::Ptr<_1a834716c_comptimeDecl> _1a853c42d_comptimeDecl(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20)) {
			_case_begin_1aa6e2db7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a834716c_comptimeDecl>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1aa6e2c0d:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e2b97:;
	};
}



inline jule::Ptr<_1a8344d7e_comptimeDecls> _1a853c6b4_comptimeDecls(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19)) {
			_case_begin_1aa6e3b43:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8344d7e_comptimeDecls>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1aa6e3989:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e3923:;
	};
}



inline jule::Ptr<_1a8343256_comptimeFile> _1a853c94a_comptimeFile(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18)) {
			_case_begin_1aa6e48be:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8343256_comptimeFile>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1aa6e4715:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e469e:;
	};
}



inline jule::Ptr<_1a83417d7_comptimeFiles> _1a853cbd1_comptimeFiles(_1a8535877_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data17)) {
			_case_begin_1aa6e564a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a83417d7_comptimeFiles>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1aa6e5491:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e542a:;
	};
}








inline jule::Bool _1a853d088_TypeSym_eq(_1a853d088_TypeSym *_self_, _1a853d088_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1a853d440_checked(_1a853d088_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1a853d990_Prim_eq(_1a853d990_Prim *_self_, _1a853d990_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a853dd14_Str(_1a853d990_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a853e155_Equal(jule::Ptr<_1a853d990_Prim> _self_, jule::Ptr<_1a8535877_Type> _51418_other) {
	jule::Ptr<_1a853d990_Prim> _5153_prim = _1a853802d_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1a853e5ea_IsConstraint(_1a853d990_Prim* _self_) {
	return ((((!(_1a8541e5a_IsStr(_self_))) && (!(_1a85421e1_IsAny(_self_)))) && (!(_1a8541bc4_IsBool(_self_)))) && (!(_1a8326602_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a853e881_IsI8(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1a853eb17_IsI16(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1a853ed9d_IsI32(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1a8540134_IsI64(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1a85403ba_IsU8(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1a8540651_IsU16(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1a85408d7_IsU32(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1a8540b6d_IsU64(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1a8540e04_IsF32(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1a854118a_IsF64(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1a8541421_IsInt(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1a85416a7_IsUint(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1a854193d_IsUintptr(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1a8541bc4_IsBool(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1a8541e5a_IsStr(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1a85421e1_IsAny(_1a853d990_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1a85424bb_Sptr_eq(_1a85424bb_Sptr *_self_, _1a85424bb_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a8542873_Str(_1a85424bb_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a8535c73_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a8542bb4_Equal(jule::Ptr<_1a85424bb_Sptr> _self_, jule::Ptr<_1a8535877_Type> _59118_other) {
	jule::Ptr<_1a85424bb_Sptr> _5923_sptr = _1a85382b4_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1a85360b4_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1a8542e8e_Slc_eq(_1a8542e8e_Slc *_self_, _1a8542e8e_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a8543456_Str(_1a8542e8e_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a8535c73_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a8543797_Equal(jule::Ptr<_1a8542e8e_Slc> _self_, jule::Ptr<_1a8535877_Type> _61018_other) {
	jule::Ptr<_1a8542e8e_Slc> _6113_slc = _1a8539084_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1a85360b4_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1a8543e3a_Str(_1a8543a83_Tuple* _self_) {
	_21ca86171_Builder _6277_s = static__21ca869bd_New(16LL);;
	({
		auto except = _21ca87408_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&_6277_s, _1a8535c73_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa706abd:;
		if (it != expr_end) {
			jule::Ptr<_1a8535877_Type> *_63010_t = it;
			{
				({
					auto except = _21ca87408_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _21ca87150_WriteStr(&_6277_s, _1a8535c73_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_1aa706abd:;
			++it;
			goto _iter_begin_1aa706abd;
		}
		_iter_end_1aa706abd:;
	};
	({
		auto except = _21ca87408_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _21ca879d0_Str(&_6277_s);;
}



inline jule::Bool _1a854427b_Equal(jule::Ptr<_1a8543a83_Tuple> _self_, jule::Ptr<_1a8535877_Type> _63918_other) {
	jule::Ptr<_1a8543a83_Tuple> _6403_tup = _1a8539d54_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1a85360b4_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1aa70994a:;
	}
	_iter_end_1aa70994a:;;
	return true;;
}








inline jule::Bool _1a8544633_Map_eq(_1a8544633_Map *_self_, _1a8544633_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a85449da_Str(_1a8544633_Map* _self_) {
	_21ca86171_Builder _6677_s = static__21ca869bd_New(16LL);;
	({
		auto except = _21ca87150_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_6677_s, _1a8535c73_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&_6677_s, _1a8535c73_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _21ca879d0_Str(&_6677_s);;
}



inline jule::Bool _1a8544d2b_Equal(jule::Ptr<_1a8544633_Map> _self_, jule::Ptr<_1a8535877_Type> _67618_other) {
	jule::Ptr<_1a8544633_Map> _6773_m = _1a8539abd_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1a85360b4_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1a85360b4_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1a85452b0_Arr_eq(_1a85452b0_Arr *_self_, _1a85452b0_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a8545667_Str(_1a85452b0_Arr* _self_) {
	_21ca86171_Builder _6957_s = static__21ca869bd_New(16LL);;
	({
		auto except = _21ca87408_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&_6957_s, _1d97aaba9_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&_6957_s, _1a8535c73_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _21ca879d0_Str(&_6957_s);;
}



inline jule::Bool _1a85459a8_Equal(jule::Ptr<_1a85452b0_Arr> _self_, jule::Ptr<_1a8535877_Type> _70418_other) {
	jule::Ptr<_1a85452b0_Arr> _7053_arr = _1a8538ced_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1a85360b4_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1a8545c83_Ptr_eq(_1a8545c83_Ptr *_self_, _1a8545c83_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a854613a_Str(_1a8545c83_Ptr* _self_) {
	if (_1a8546800_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a8535c73_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a854647b_Equal(jule::Ptr<_1a8545c83_Ptr> _self_, jule::Ptr<_1a8535877_Type> _72818_other) {
	jule::Ptr<_1a8545c83_Ptr> _7293_ptr = _1a853854a_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1aa715a44:;
			{
				return false;;
			}
		}
		else if (_1a8546800_IsUnsafe(_self_.ptr())) {
			_case_begin_1aa7153e5:;
			{
				return _1a8546800_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1a8546800_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1aa71545b:;
			{
				return _1a8546800_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1aa714e72:;
			{
				return _1a85360b4_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1aa714dea:;
	};
}



inline jule::Bool _1a8546800_IsUnsafe(_1a8545c83_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1a8546c84_referencer_eq(_1a8546c84_referencer *_self_, _1a8546c84_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1a8548505_pushErr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81881cd_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1a83ab39b_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1a8548703_allowBuiltin(_1a8547c74_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a8548901_disallowBuiltin(_1a8547c74_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1aa71a450_pushReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1aa2a2a54_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1a8379e2a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type65));
}

inline void _1aa71ce25_pushReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a82a2da8_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1aa71eb2a_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1a8379e2a_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1a8548e62_pushReferenceByKind(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _84240_k) {
	{
		
		if ((_1a85395a1_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1aa719064:;
			{
				jule::Ptr<_1a81c246a_StructIns> _8458_t = _1a85395a1_Struct((*(_84240_k)).ptr());;
				_1aa71a450_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1a8539837_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1aa71910d:;
			{
				jule::Ptr<_1a82a2da8_Trait> _8488_t = _1a8539837_Trait((*(_84240_k)).ptr());;
				_1aa71ce25_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1aa718e43:;
	};
}



inline void _1a8549380_pushCycleError(_1a8547c74_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _21ca86171_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1aa721ee5, nullptr, nullptr);;
	jule::Str _8653_m = _21ca879d0_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _21ca87150_WriteStr(_85353_message, _205368dab_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _1a854977b_checkCrossCycle(_1a8547c74_typeChecker* _self_, jule::Any _87527_decl, _21ca86171_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa7265d2:;
			{
				jule::Ptr<_1a8534a85_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1a8534a85_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa7275a0:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1aa727e41:;
									{
										_1a8549380_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1a854977b_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1aa727ec9:;
									{
										_1a8549380_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1aa727d31:;
							};
						}
						_iter_next_1aa7275a0:;
						++it;
						goto _iter_begin_1aa7275a0;
					}
					_iter_end_1aa7275a0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa726439:;
			{
				jule::Ptr<_1a81be610_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1a81be610_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa729948:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1aa72a2d9:;
									{
										_1a8549380_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1a854977b_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1aa72a372:;
									{
										_1a8549380_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1aa72a1c9:;
							};
						}
						_iter_next_1aa729948:;
						++it;
						goto _iter_begin_1aa729948;
					}
					_iter_end_1aa729948:;
				};
			}
		}
		_match_end_1aa72656b:;
	};
	return true;;
}



inline jule::Bool _1a8549b77_checkIllegalCycles(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa72c74d:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1a81be610_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa72c5c7:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1a8534a85_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aa729e87:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a8548505_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21ca86171_Builder _9327_message = static__21ca869bd_New(32LL);;
	if ((!(_1a854977b_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _21ca879d0_Str(&_9327_message);;
		_21ca87bcd_Clear(&_9327_message);
		_1a8549380_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_21ca879d0_Str(&_9327_message);
		_1a8548505_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa732632:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa730b6e:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1aa732de6:;
						{
							jule::Ptr<_1a81be610_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a81be610_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81be610_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1a81be610_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1aa732c4d:;
				};
			}
		}
		_match_end_1aa732599:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a854a073_fromTypeAlias(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _95930_decl, jule::Ptr<_1a8534a85_TypeAlias>* _95962_ta) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1a8548505_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1a8548505_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa73857d:;
			if (it != expr_end) {
				jule::Ptr<_1a8534a85_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _1a85360b4_Equal((*((*((*(_95962_ta))))._field_TypeSym))._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1aa73857d;
					};
				}
				_iter_next_1aa73857d:;
				++it;
				goto _iter_begin_1aa73857d;
			}
			_iter_end_1aa73857d:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa73a87c:;
			if (it != expr_end) {
				jule::Ptr<_1a8534a85_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1a8548505_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa73b31c:;
						if (it != expr_end) {
							jule::Ptr<_1a8534a85_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1a8548505_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1aa73b31c:;
							++it;
							goto _iter_begin_1aa73b31c;
						}
						_iter_end_1aa73b31c:;
					};
				}
				_iter_next_1aa73a87c:;
				++it;
				goto _iter_begin_1aa73a87c;
			}
			_iter_end_1aa73a87c:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_TypeSym.alloc)._field_Type == nullptr)) {
		jule::Bool _10034_ok = _1a83b851d_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)) {
			_case_begin_1aa73e9b3:;
			{
				jule::Bool _10114_ok = _1a8549b77_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind.cast_ptr<_1a81c246a_StructIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1aa73e93b:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1a8535877_Type> _10237_tk = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind});;
	_1a8548e62_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data21);;
}



inline jule::Ptr<_1a82a555e_Enum> _1a854a46e_fromEnum(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _103625_decl, jule::Ptr<_1a82a555e_Enum>* _103657_e) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1a8548505_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1a8548505_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a854a86a_fromTypeEnum(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _104829_decl, jule::Ptr<_1a82a6c69_TypeEnum>* _104861_e) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1a8548505_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1a8548505_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a854ac66_fromTrait(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _106026_decl, jule::Ptr<_1a82a2da8_Trait>* _106058_t) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1a8548505_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1a8548505_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1aa71ce25_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1a854b162_checkStructIns(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _107335_ins, jule::Ptr<_1a81881cd_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a83c500d_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1a83c5a25_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1a83c52b6_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a854b41a_appendUsedStructReference(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81be610_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa752520:;
			{
				jule::Ptr<_1a81be610_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a81be610_Struct>();;
				if ((!(_1a81c10c3_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81be610_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1aa7524a9:;
	};
}



inline jule::Ptr<_1a81c246a_StructIns> _1a854b816_buildStructInstance(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _110740_decl, jule::Ptr<_1a81be610_Struct>* _110772_s) {
	jule::Ptr<_1a8546c84_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
				_case_begin_1aa755556:;
				{
					jule::Ptr<_1a835cacd_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1);;
					jule::Ptr<_1a835cacd_scopeChecker> _11199_hard = _1a8361241_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1aa7554e0;
					};
					jule::I64 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1aa7554e0:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a81c246a_StructIns> _11377_ins = _1a81beaa5_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8533e91_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa75a858:;
		if (it != expr_end) {
			jule::Ptr<_1a819dbe9_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1a8535877_Type> _11408_kind = _1a855051d_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1aa75a858:;
			++it;
			goto _iter_begin_1aa75a858;
		}
		_iter_end_1aa75a858:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1a81c246a_StructIns> _1a854bc12_fromStructIns(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81c246a_StructIns>* _115534_ins, jule::Ptr<_1a81881cd_Token> _115555_token) {
	jule::Ptr<_1a81c246a_StructIns> _11567_existInstance = _1a81bedb3_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1a83b631d_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1aa71a450_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1a854b162_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1aa71a450_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1a81c246a_StructIns> _1a854c10d_fromStruct(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _117331_decl, jule::Ptr<_1a81be610_Struct>* _117363_s) {
	if ((!(_1a83abb0a_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1a8548505_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1a8548505_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a81c246a_StructIns>(_1a81c246a_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1a81c18ba_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a8297694_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Operators=_1a81bd6ec_Operators{._field_Eq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Add=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Div=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1a829a752_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1a8549b77_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1a854b41a_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1a81c246a_StructIns> _11977_ins = _1a854b816_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1a83ac8ca_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1a854bc12_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1a854c44e_getDef(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa765e3a:;
		if (it != expr_end) {
			jule::Ptr<_1a81aae04_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1a8552d17_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22);;
				};
			}
			_iter_next_1aa765e3a:;
			++it;
			goto _iter_begin_1aa765e3a;
		}
		_iter_end_1aa765e3a:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7662d1:;
		if (it != expr_end) {
			jule::Ptr<_1a8534a85_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1a8548505_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1a81c246a_StructIns> _12309_st = _1a85395a1_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1a8549b77_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1aa7662d1:;
			++it;
			goto _iter_begin_1aa7662d1;
		}
		_iter_end_1aa7662d1:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1a82a555e_Enum> _12428_e = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a85557ba_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1a854a46e_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3);;
		};
		jule::Ptr<_1a82a6c69_TypeEnum> _12478_te = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8555b0b_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1a854a86a_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4);;
		};
		jule::Ptr<_1a82a2da8_Trait> _12528_t = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8555479_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1a854ac66_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a8548505_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81be610_Struct> _12617_s = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8554c3c_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1a854c10d_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0);;
	};
	jule::Ptr<_1a8534a85_TypeAlias> _12667_ta = ((_1a8555c60_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a8554841_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1a85ac305_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1a854a073_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1a8548505_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1a854c790_buildIdent(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e304_IdentTypeDecl> _127830_decl) {
	return _1a854c44e_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1a854cad1_buildSubIdent(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1a854c790_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)) {
			_case_begin_1aa774355:;
			{
				goto _match_end_1aa7748b6;
			}
		}
		else {
			_case_begin_1aa774432:;
			{
				_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa7748b6:;
	};
	jule::Ptr<_1a82a6c69_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1a82a6c69_TypeEnum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7760d2:;
		if (it != expr_end) {
			jule::I64 _12967_i = it - expr->begin();
			jule::Ptr<_1a819e304_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1a82a6692_TypeEnumItem> _12978_item = _1a82a785d_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1a8548505_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1a8548e62_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data21);;
				};
				_12947_t=_1a8538a67_TypeEnum((*(*(_12978_item))._field_TypeSym.alloc)._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1aa7760d2:;
			++it;
			_12967_i++;
			goto _iter_begin_1aa7760d2;
		}
		_iter_end_1aa7760d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a85424bb_Sptr> _1a854ce22_buildSptrFromType(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1aa7768c9:;
			{
				return nullptr;;
			}
		}
		else if ((_1a85395a1_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1aa77ab64:;
			{
				jule::Ptr<_1a81c246a_StructIns> _13224_s = _1a85395a1_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a8538ced_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1a8538ced_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1aa77abca:;
			{
				_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa77a229:;
	};
	return jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1a85424bb_Sptr> _1a854d263_buildSptr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819ec94_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1a8535877_Type> _13417_elem = _1a855085e_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1a854ce22_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1a8545c83_Ptr> _1a854d5a4_buildPtrFromType(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a8535877_Type>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1aa780e77:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8538ced_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1a8538ced_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1aa781021:;
			{
				_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a8545c83_Ptr>(_1a8545c83_Ptr{._field_Elem=jule::Ptr<_1a8535877_Type>(nullptr)});;
			}
		}
		_match_end_1aa780d56:;
	};
	return jule::new_ptr<_1a8545c83_Ptr>(_1a8545c83_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1a8545c83_Ptr> _1a854d8e5_buildPtr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0723_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1a8535877_Type> _13657_elem = static_cast<jule::Ptr<_1a8535877_Type>>(nullptr);;
	if ((!(_1a81a0ab9_IsUnsafe(_136028_decl.ptr())))) {
		_13657_elem=_1a855085e_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1a854d5a4_buildPtrFromType(_self_, &(_13657_elem));;
	};
	return jule::new_ptr<_1a8545c83_Ptr>(_1a8545c83_Ptr{._field_Elem=_13657_elem});;
}



inline jule::Ptr<_1a8542e8e_Slc> _1a854dc36_buildSlc(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0129_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1a8535877_Type> _13827_elem = _1a855085e_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1aa786323:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8538ced_Arr(_13827_elem.ptr()) != nullptr) && (*(_1a8538ced_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1aa786389:;
			{
				_1a8548505_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa7862ac:;
	};
	return jule::new_ptr<_1a8542e8e_Slc>(_1a8542e8e_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1a85452b0_Arr> _1a854e077_buildArr(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0eb5_ArrTypeDecl> _139828_decl) {
	jule::I64 _13997_n = 0LL;;
	if ((!(_1a81a135b_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1a85028cc_Data> _14028_size = _1a8523689_evalExpr(_1a83b3271_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a8503317_IsConst(_14028_size.ptr())))) {
			_1a8548505_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a853802d_Prim((*(_14028_size))._field_Type.ptr()) == nullptr) || (!(_1a832602a_IsInt((*(_1a853802d_Prim((*(_14028_size))._field_Type)))._field_Kind))))) {
			_1a8548505_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I64>(_1a82812b5_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1a8548505_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1a8323e90_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1a831be99_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1a8548505_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a853171e_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1d97aa8e0_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a8535877_Type> _14297_elem = _1a855085e_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1aa7916d5:;
			{
				return nullptr;;
			}
		}
		else if (((_1a8538ced_Arr(_14297_elem.ptr()) != nullptr) && (*(_1a8538ced_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1aa79177e:;
			{
				_1a8548505_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa79165d:;
	};
	return jule::new_ptr<_1a85452b0_Arr>(_1a85452b0_Arr{._field_Auto=_1a81a135b_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1a8544633_Map> _1a854e3b8_buildMap(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a1713_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1a8535877_Type> _14527_key = _1a855085e_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8535877_Type> _14577_val = _1a855085e_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a85387d1_Enum(_14577_val.ptr()) != nullptr)) {
		_1a8548505_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1a81be610_Struct> _14668_s = _1a7d25b6d_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1a854b41a_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1a81c246a_StructIns> _14688_ins = _1a81beaa5_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; });
		_1a854bc12_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1a8544633_Map>(_1a8544633_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1a8543a83_Tuple> _1a854e709_buildTuple(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81a0426_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1a8535877_Type>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8535877_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa79a997:;
		if (it != expr_end) {
			jule::Ptr<_1a819dbe9_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1a8535877_Type> _14828_kind = _1a855085e_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a8535877_Type>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1aa79a997:;
			++it;
			goto _iter_begin_1aa79a997;
		}
		_iter_end_1aa79a997:;
	};
	return jule::new_ptr<_1a8543a83_Tuple>(_1a8543a83_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1a854ea4a_checkFuncTypes(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a829a752_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa79c4d2:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Type=_1a855051d_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a83b6dbd_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1aa79c4d2:;
			++it;
			goto _iter_begin_1aa79c4d2;
		}
		_iter_end_1aa79c4d2:;
	};
	if ((!(_1a8297b4a_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1a855051d_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_TypeSym))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a829a752_FnIns> _1a854ed8b_buildFunc(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a81b0986_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1a8548505_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8297694_Fn> _15207_f = _1a837c59d_buildFunc(_151029_decl);;
	jule::I64 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a83c11b3_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a829a752_FnIns> _15287_ins = _1a8298ba1_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1a854ea4a_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1a85501cc_buildNamespace(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819e997_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1a838b14a_ImportInfo> _15417_imp = _1a853329d_findNamespace((*(_self_))._field_lookup, (*((*(_154034_ns))._field_Namespace))._field_Kind);;
	if (((_15417_imp == nullptr) || (!(_1a838d5e2_isLookupable(_15417_imp.ptr()))))) {
		_1a8548505_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1a8548901_disallowBuiltin(_self_);
	jule::Trait _15487_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data2);
	jule::Ptr<_1a8535877_Type> _15507_kind = _1a855085e_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15487_lookup;
	_1a8548703_allowBuiltin(_self_);
	return jule::Trait(_15507_kind, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data21);;
}



inline jule::Ptr<_1a8535877_Type> _1a855051d_build(_1a8547c74_typeChecker* _self_, jule::Any* _155626_declKind) {
	jule::Trait _155711_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155626_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1aa7aa853:;
			{
				jule::Trait _15608_t = _1a854c790_buildIdent(_self_, (*(_155626_declKind)).cast_ptr<_1a819e304_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15608_t != nullptr)) {
					_155711_kind=_15608_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1aa7a9cb4:;
			{
				jule::Trait _15658_t = _1a854cad1_buildSubIdent(_self_, (*(_155626_declKind)).cast_ptr<_1a819e5bd_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15658_t != nullptr)) {
					_155711_kind=_15658_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1aa7a9d2a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a85424bb_Sptr> _15718_t = _1a854d263_buildSptr(_self_, (*(_155626_declKind)).cast_ptr<_1a819ec94_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15718_t != nullptr)) {
					_155711_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aa7a9d91:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8545c83_Ptr> _15778_t = _1a854d8e5_buildPtr(_self_, (*(_155626_declKind)).cast_ptr<_1a81a0723_PtrTypeDecl>(&__jule_any_type74));;
				if ((_15778_t != nullptr)) {
					_155711_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aa7a9e07:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8542e8e_Slc> _15838_t = _1a854dc36_buildSlc(_self_, (*(_155626_declKind)).cast_ptr<_1a81a0129_SlcTypeDecl>(&__jule_any_type73));;
				if ((_15838_t != nullptr)) {
					_155711_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aa7a9e6d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a85452b0_Arr> _15898_t = _1a854e077_buildArr(_self_, (*(_155626_declKind)).cast_ptr<_1a81a0eb5_ArrTypeDecl>(&__jule_any_type72));;
				if ((_15898_t != nullptr)) {
					_155711_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aa7a9ed4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8544633_Map> _15958_t = _1a854e3b8_buildMap(_self_, (*(_155626_declKind)).cast_ptr<_1a81a1713_MapTypeDecl>(&__jule_any_type76));;
				if ((_15958_t != nullptr)) {
					_155711_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1aa7aa963:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a8543a83_Tuple> _16018_t = _1a854e709_buildTuple(_self_, (*(_155626_declKind)).cast_ptr<_1a81a0426_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16018_t != nullptr)) {
					_155711_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aa7aa9c9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a829a752_FnIns> _16078_t = _1a854ed8b_buildFunc(_self_, (*(_155626_declKind)).cast_ptr<_1a81b0986_FnDecl>(&__jule_any_type68));;
				if ((_16078_t != nullptr)) {
					_155711_kind=jule::Trait(_16078_t, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aa7aaa40:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16138_t = _1a85501cc_buildNamespace(_self_, (*(_155626_declKind)).cast_ptr<_1a819e997_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16138_t != nullptr)) {
					_155711_kind=_16138_t;
				};
			}
		}
		else {
			_case_begin_1aa7a9c4d:;
			{
				_1a8548505_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa7a9bd7:;
	};
	if ((_155711_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155711_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data21)) {
			_case_begin_1a9cb0023:;
			{
				return _155711_kind.cast_ptr<_1a8535877_Type>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1a9cac3d8:;
			{
				jule::Ptr<_1a8535877_Type> _16288_tk = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155711_kind});;
				{
					auto &_match_expr{ _155711_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)) {
						_case_begin_1a9cad384:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a8535877_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16288_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)) {
						_case_begin_1a9cad20d:;
						{
							jule::Ptr<_1a81c246a_StructIns> _16355_s = _155711_kind.cast_ptr<_1a81c246a_StructIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0);;
							if ((((*(_16355_s))._field_Decl != nullptr) && (*(*(_16355_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16288_tk))._field_BindIdent=(*(*(_16355_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1a9cad31d:;
				};
				return _16288_tk;;
			}
		}
		_match_end_1a9cac86c:;
	};
}



inline jule::Ptr<_1a8535877_Type> _1a855085e_checkDecl(_1a8547c74_typeChecker* _self_, jule::Ptr<_1a819dbe9_TypeDecl>* _164430_decl) {
	jule::Ptr<_1a81881cd_Token> _16467_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164430_decl))))._field_Token;
	jule::Ptr<_1a8535877_Type> _16497_kind = _1a855051d_build(_self_, &((*((*(_164430_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16467_errorToken;
	return _16497_kind;;
}








inline jule::Bool _1a8550d37_identTypeLookup_eq(_1a8550d37_identTypeLookup *_self_, _1a8550d37_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a85512aa_prim(jule::Str* _167118_ident, jule::Ptr<_1a853d990_Prim> _167130_t) {
	return ((*(_167130_t))._field_Kind == (*(_167118_ident)));;
}



inline jule::Bool static__1a855162e_exist(jule::Str* _167519_ident, jule::Ptr<_1a8535877_Type>* _167536_k) {
	{
		
		if ((_1a853802d_Prim((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb527b:;
			{
				return static__1a85512aa_prim(_167519_ident, _1a853802d_Prim((*(_167536_k)).ptr()));;
			}
		}
		else if ((_1a85382b4_Sptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb5303:;
			{
				jule::Ptr<_1a85424bb_Sptr> _16808_sptr = _1a85382b4_Sptr((*(_167536_k)).ptr());;
				return static__1a855162e_exist(_167519_ident, &((*(_16808_sptr))._field_Elem));;
			}
		}
		else if ((_1a853854a_Ptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb537a:;
			{
				jule::Ptr<_1a8545c83_Ptr> _16838_ptr = _1a853854a_Ptr((*(_167536_k)).ptr());;
				return static__1a855162e_exist(_167519_ident, &((*(_16838_ptr))._field_Elem));;
			}
		}
		else if ((_1a8539084_Slc((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb5402:;
			{
				jule::Ptr<_1a8542e8e_Slc> _16868_slc = _1a8539084_Slc((*(_167536_k)).ptr());;
				return static__1a855162e_exist(_167519_ident, &((*(_16868_slc))._field_Elem));;
			}
		}
		else if ((_1a8538ced_Arr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb55cd:;
			{
				jule::Ptr<_1a85452b0_Arr> _16898_arr = _1a8538ced_Arr((*(_167536_k)).ptr());;
				return static__1a855162e_exist(_167519_ident, &((*(_16898_arr))._field_Elem));;
			}
		}
		else if ((_1a8539abd_Map((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb5644:;
			{
				jule::Ptr<_1a8544633_Map> _16928_m = _1a8539abd_Map((*(_167536_k)).ptr());;
				return (static__1a855162e_exist(_167519_ident, &((*(_16928_m))._field_Key)) || static__1a855162e_exist(_167519_ident, &((*_16928_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a85395a1_Struct((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb56aa:;
			{
				jule::Ptr<_1a81c246a_StructIns> _16968_s = _1a85395a1_Struct((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_16968_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9cbc816:;
					if (it != expr_end) {
						jule::Ptr<_1a8533e91_InsGeneric> _169716_g = *it;
						{
							if (static__1a855162e_exist(_167519_ident, &((*(_169716_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1a9cbc816:;
						++it;
						goto _iter_begin_1a9cbc816;
					}
					_iter_end_1a9cbc816:;
				};
				return false;;
			}
		}
		else if ((_1a853931a_Fn((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb5721:;
			{
				jule::Ptr<_1a829a752_FnIns> _17048_f = _1a853931a_Fn((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17048_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9cbe472:;
					if (it != expr_end) {
						jule::Ptr<_1a82995ec_ParamIns> _170516_p = *it;
						{
							if (_1a829631e_IsSelf((*(_170516_p))._field_Decl.ptr())) {
								goto _iter_next_1a9cbe472;
							};
							if (static__1a855162e_exist(_167519_ident, &((*_170516_p.alloc)._field_Type))) {
								return true;;
							};
						}
						_iter_next_1a9cbe472:;
						++it;
						goto _iter_begin_1a9cbe472;
					}
					_iter_end_1a9cbe472:;
				};
				if (((*_17048_f.alloc)._field_Result != nullptr)) {
					return static__1a855162e_exist(_167519_ident, &((*_17048_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a8539d54_Tup((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1a9cb5798:;
			{
				jule::Ptr<_1a8543a83_Tuple> _17188_tup = _1a8539d54_Tup((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17188_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9cc1ce3:;
					if (it != expr_end) {
						jule::Ptr<_1a8535877_Type> _171916_t = *it;
						{
							if (static__1a855162e_exist(_167519_ident, &(_171916_t))) {
								return true;;
							};
						}
						_iter_next_1a9cc1ce3:;
						++it;
						goto _iter_begin_1a9cc1ce3;
					}
					_iter_end_1a9cc1ce3:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a9cb515a:;
			{
				return false;;
			}
		}
		_match_end_1a9cb504a:;
	};
}















inline void _1a8d9bad3_stop(_1a8d9b42e_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a8d9bd69_stopped(_1a8d9b42e_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a8d9c100_finished(_1a8d9b42e_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a8d9c386_isLastSt(_1a8d9b42e_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a8d9c6e9_pushErr(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81881cd_Token> _15423_token, jule::Str _15445_fmt) {
	_1a8dba11d_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1a8d9ca5c_pushSuggestion(_1a8d9b42e_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1a8dba481_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1a8d9cd15_insertAsNext(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a8d9aa8d_stmt>(_1a8d9aa8d_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1a8d9aa8d_stmt> _1a8d9d09b_next(_1a8d9b42e_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a81adce7_ScopeTree> _1a8d9d497_buildScope(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _17331_tokens, jule::Ptr<_1a81881cd_Token> _17360_end) {
	jule::Ptr<_1a81adce7_ScopeTree> _1747_s = _1a8d99817_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1a8d9b42e_scopeParser _1777_ssp = _1a8d9b42e_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>>(nullptr), ._field_pos=0};;
	_1a8da831a_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1a81b1b41_VarDecl> _1a8d9d7d8_buildVarSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _18431_tokens) {
	jule::Ptr<_1a81b1b41_VarDecl> _1857_v = _1a8dbcde0_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1a81b201a_RetSt> _1a8d9db29_buildRetSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _19230_tokens) {
	jule::Ptr<_1a81b201a_RetSt> _1937_st = jule::new_ptr<_1a81b201a_RetSt>(_1a81b201a_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1a81b278a_Iter> _1a8d9de6a_buildWhileNextIter(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _20339_s) {
	jule::Ptr<_1a81b278a_Iter> _2047_it = jule::new_ptr<_1a81b278a_Iter>(_1a81b278a_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a81b30b5_WhileKind> _2087_kind = jule::new_ptr<_1a81b30b5_WhileKind>(_1a81b30b5_WhileKind{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1a8d9c386_isLastSt(_self_)) {
		_1a8d9c6e9_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1a8d9d09b_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _2207_stTokens = _1a8db4a63_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1a8d9aa8d_stmt> _2228_stmt = jule::new_ptr<_1a8d9aa8d_stmt>(_1a8d9aa8d_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1a8da7ea7_buildSt(_self_, &(_2228_stmt));
	};
	jule::I64 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _2317_blockTokens = _1a8db7cdb_range(&(_2307_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1a8d9bad3_stop(_self_);
		_1a8d9c6e9_pushErr(_self_, (*_2047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1a8d9c6e9_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2047_it.alloc)._field_Scope=_1a8d9d497_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type34);
	return _2047_it;;
}



inline jule::Ptr<_1a81b30b5_WhileKind> _1a8d9e2ab_buildWhileIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _24839_tokens) {
	return jule::new_ptr<_1a81b30b5_WhileKind>(_1a81b30b5_WhileKind{._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1a81881cd_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8d9e5ec_getRangeKindKeysTokens(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _2557_vars;
	jule::Slice<_21ca95427_Log> _25513_errs;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(_25443_toks, static_cast<jule::U64>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1a81b1b41_VarDecl> _1a8d9e93d_buildRangeKindKey(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a81b1b41_VarDecl> _2647_key = jule::new_ptr<_1a81b1b41_VarDecl>(_1a81b1b41_VarDecl{._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1a8d9c6e9_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8d9c6e9_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2647_key.alloc)._field_Ident=(*(*(_2647_key))._field_Token.alloc)._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _1a8d9ec7e_buildRangeKindKeys(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa957082:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1a8d9e93d_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1aa957082:;
			++it;
			goto _iter_begin_1aa957082;
		}
		_iter_end_1aa957082:;
	};
	return _28711_keys;;
}



inline void _1a8da00e2_setupRangeKindKeysPlain(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _2957_keyTokens = _1a8d9e5ec_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1a8d9c6e9_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _3027_keys = _1a8d9ec7e_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1a8da0455_setupRangeKindKeysExplicit(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _30974_tokens) {
	jule::I64 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3117_rang = _1a8db7cdb_range(&(_3107_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1a8d9c6e9_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1a8da00e2_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1a8da07b8_setupRangeKindKeys(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a81b39bc_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a8da0455_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1a8da00e2_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1a81b39bc_RangeKind> _1a8da0c6e_buildRangeIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3278_exprTokens, jule::Ptr<_1a81881cd_Token>* _32742_inToken) {
	jule::Ptr<_1a81b39bc_RangeKind> _3287_rng = jule::new_ptr<_1a81b39bc_RangeKind>(_1a81b39bc_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1a81b1b41_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1a81b1b41_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*_3287_rng.alloc)._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1a8da07b8_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1a8da116a_buildCommonIterKind(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _34240_tokens, jule::Ptr<_1a81881cd_Token>* _34266_errTok) {
	jule::I64 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa96217a:;
		if (it != expr_end) {
			jule::I64 _3448_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa962ad7:;
						{
							(_3437_braceN)++;
							goto _iter_next_1aa96217a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa962ec2:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1aa962dc3:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1aa96217a;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1aa96408e:;
						{
							jule::Slice<jule::Ptr<_1a81881cd_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1a81881cd_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1a8da0c6e_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type36);;
						}
					}
					_match_end_1aa9646dd:;
				};
			}
			_iter_next_1aa96217a:;
			++it;
			_3448_i++;
			goto _iter_begin_1aa96217a;
		}
		_iter_end_1aa96217a:;
	};
	return jule::Any(_1a8d9e2ab_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type34);;
}



inline jule::Ptr<_1a81b278a_Iter> _1a8da14ab_buildCommonIter(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _36935_tokens) {
	jule::Ptr<_1a81b278a_Iter> _3707_it = jule::new_ptr<_1a81b278a_Iter>(_1a81b278a_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1a8d9bad3_stop(_self_);
		_1a8d9c6e9_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3807_exprTokens = _1a8db4a63_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*_3707_it.alloc)._field_Kind=_1a8da116a_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I64 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3857_scopeTokens = _1a8db7cdb_range(&(_3847_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1a8d9bad3_stop(_self_);
		_1a8d9c6e9_pushErr(_self_, (*_3707_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1a8d9c6e9_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3707_it.alloc)._field_Scope=_1a8d9d497_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1a81b278a_Iter> _1a8da17ec_buildIterSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1a8d9de6a_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1a8da14ab_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1a81b3d96_BreakSt> _1a8da1b3d_buildBreakSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _40633_tokens) {
	jule::Ptr<_1a81b3d96_BreakSt> _4077_brk = jule::new_ptr<_1a81b3d96_BreakSt>(_1a81b3d96_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a8d9c6e9_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1a8d9c6e9_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1a81b4270_ContSt> _1a8da1e7e_buildContSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _42432_tokens) {
	jule::Ptr<_1a81b4270_ContSt> _4257_cont = jule::new_ptr<_1a81b4270_ContSt>(_1a81b4270_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a8d9c6e9_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1a8d9c6e9_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1a81b4726_If> _1a8da22c0_buildIf(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _44228_tokens) {
	jule::Ptr<_1a81b4726_If> _4437_model = jule::new_ptr<_1a81b4726_If>(_1a81b4726_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _4477_exprTokens = _1a8db4a63_getBlockExpr(_44228_tokens);;
	jule::I64 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _4547_scopeTokens = _1a8db7cdb_range(&(_4487_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1a8d9bad3_stop(_self_);
		_1a8d9c6e9_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1a8d9c6e9_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*_4437_model.alloc)._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1a8d9d497_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1a81b4b00_Else> _1a8da2611_buildElse(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _47530_tokens) {
	jule::Ptr<_1a81b4b00_Else> _4767_els = jule::new_ptr<_1a81b4b00_Else>(_1a81b4b00_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I64 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _4817_scopeTokens = _1a8db7cdb_range(&(_4807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1a8d9c6e9_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1a8d9bad3_stop(_self_);
			_1a8d9c6e9_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1a8d9c6e9_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1a8d9d497_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1a81b50a6_Conditional> _1a8da2952_buildIfElseChain(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _49936_tokens) {
	jule::Ptr<_1a81b50a6_Conditional> _5007_chain = jule::new_ptr<_1a81b50a6_Conditional>(_1a81b50a6_Conditional{._field_Head=_1a8da22c0_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1a81b4726_If>>(nullptr), ._field_Default=jule::Ptr<_1a81b4b00_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1a9b7a6d5;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1a81b4726_If> _5129_elif = _1a8da22c0_buildIf(_self_, &(_49936_tokens));;
				(*_5007_chain.alloc)._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81b4726_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1a9b7a6d5;
			};
			(*_5007_chain.alloc)._field_Default=_1a8da2611_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1a9b7a6d5;
		}
	_iter_next_1a9b7a6d5:;
	}
	_iter_end_1a9b7a6d5:;;
	return _5007_chain;;
}



inline jule::Ptr<_1a81a302d_Expr> _1a8da2c93_buildCoCallSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _52233_tokens) {
	jule::Ptr<_1a81881cd_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81a302d_Expr> _5257_e = _1a8dba7c2_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1a9b7e387:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1a81a6c57_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a9b7e95e:;
			{
				_1a8d9c6e9_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1a9b7e8e8:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1a81ab6a7_GotoSt> _1a8da30d4_buildGotoSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _53832_tokens) {
	jule::Ptr<_1a81ab6a7_GotoSt> _5397_gt = jule::new_ptr<_1a81ab6a7_GotoSt>(_1a81ab6a7_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a81881cd_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8d9c6e9_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1a81ab9a4_FallSt> _1a8da3425_buildFallSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _55832_tokens) {
	jule::Ptr<_1a81ab9a4_FallSt> _5597_fll = jule::new_ptr<_1a81ab9a4_FallSt>(_1a81ab9a4_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8da3766_buildTypeAliasSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _56837_tokens) {
	jule::Ptr<_1a81b57e3_TypeAliasDecl> _5697_tad = _1a8dbc065_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1a8da3c3e_pushCaseExpr(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _57432_tokens, jule::Ptr<_1a81881cd_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I64 _5808_i = 0LL;;
		jule::Ptr<_1a819dbe9_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1a81a302d_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1a81a302d_Expr>(_1a81a302d_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type92)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1a8d9c6e9_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a81a302d_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1a81a302d_Expr__jule_tuple_bool _1a8da41e5_buildCaseExprs(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _59735_tokens, jule::Ptr<_1a81881cd_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1a81a302d_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81a302d_Expr>(nullptr); __jule_collection; });;
	jule::I64 _5997_braceN = 0LL;;
	jule::I64 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b8b3a5:;
		if (it != expr_end) {
			jule::I64 _6018_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a9b8cb9d:;
						{
							(_5997_braceN)++;
							goto _iter_next_1a9b8b3a5;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a9b8d088:;
						{
							(_5997_braceN)--;
							goto _iter_next_1a9b8b3a5;
						}
					}
					_match_end_1a9b8ce89:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1a9b8b3a5;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1a9b8e74e:;
						{
							jule::Slice<jule::Ptr<_1a81881cd_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1a8d9c6e9_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1a8da3c3e_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1a9b8e7b5:;
						{
							(*(_59765_colon))=_60115_tok;
							_1a8da3c3e_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1a9b8e254:;
				};
			}
			_iter_next_1a9b8b3a5:;
			++it;
			_6018_i++;
			goto _iter_begin_1a9b8b3a5;
		}
		_iter_end_1a9b8b3a5:;
	};
	_1a8d9c6e9_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a81adce7_ScopeTree> _1a8da4536_buildCaseScope(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _63935_tokens) {
	jule::I64 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _6438_next;
			({
				__jule_tuple_sx_1a81881cd_Token__jule_tuple_bool __jule_assign_result = _1a8d9a75d_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1a9b934ab;
			};
			jule::Ptr<_1a81881cd_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1a9b934ab;
			};
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1a81adce7_ScopeTree> _6538_scope = _1a8d9d497_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1a9b934ab:;
	}
	_iter_end_1a9b934ab:;;
	jule::Ptr<_1a81881cd_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a81adce7_ScopeTree> _6617_scope = _1a8d9d497_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1a81b5c99_Case__jule_tuple_bool _1a8da4932_buildCase(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1a81b5c99_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a81b5c99_Case> _6677_c = jule::new_ptr<_1a81b5c99_Case>(_1a81b5c99_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1a81a302d_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a81881cd_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1a81a302d_Expr__jule_tuple_bool __jule_assign_result = _1a8da41e5_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*_6677_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6677_c.alloc)._field_Scope=_1a8da4536_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a81b5c99_Case__jule_tuple_x_1a81b4b00_Else _1a8da4d2d_buildCases(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1a81b5c99_Case__jule_tuple_x_1a81b4b00_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a81b5c99_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1a81b4b00_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a81881cd_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a8d9c6e9_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1a9b9c938;
			};
			jule::Ptr<_1a81b5c99_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1a81b5c99_Case__jule_tuple_bool __jule_assign_result = _1a8da4932_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1a81b4b00_Else>(_1a81b4b00_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1a8d9c6e9_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a81b5c99_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1a9b9c938:;
	}
	_iter_end_1a9b9c938:;;
	if (_6887_defNotLast) {
		_1a8d9c6e9_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a81b65b3_MatchCase> _1a8da516e_buildMatchCase(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _71934_tokens) {
	jule::Ptr<_1a81b65b3_MatchCase> _7207_m = jule::new_ptr<_1a81b65b3_MatchCase>(_1a81b65b3_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1a81b5c99_Case>>(nullptr), ._field_Default=jule::Ptr<_1a81b4b00_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7307_exprTokens = _1a8db4a63_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*_7207_m.alloc)._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*_7207_m.alloc)._field_TypeMatch) {
		_1a8d9c6e9_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7387_blockToks = _1a8db7cdb_range(&(_7377_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1a8d9bad3_stop(_self_);
		_1a8d9c6e9_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1a8d9ca5c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1a8d9c6e9_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7207_m.alloc)._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1a81b5c99_Case__jule_tuple_x_1a81b4b00_Else __jule_assign_result = _1a8da4d2d_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1a81adce7_ScopeTree> _1a8da54b0_buildScopeSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1a81881cd_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a8d9c6e9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*_7557_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1a8d9c6e9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1a8d9c6e9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7827_scopeTokens = _1a8db7cdb_range(&(_7817_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1a8d9c6e9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1a8d9c6e9_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1a81adce7_ScopeTree> _7897_scope = _1a8d9d497_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1a81ab2cd_LabelSt> _1a8da5801_buildLabelSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _79533_tokens) {
	jule::Ptr<_1a81ab2cd_LabelSt> _7967_lbl = jule::new_ptr<_1a81ab2cd_LabelSt>(_1a81ab2cd_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1a8d9cd15_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da5b42_buildIdSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _81030_tokens) {
	__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a81881cd_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a9bb4543:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a8da5801_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9bb4ca2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a8db6449_assignInfo> _1a8da5e83_buildAssignInfo(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _82436_tokens) {
	jule::Ptr<_1a8db6449_assignInfo> _8257_info = jule::new_ptr<_1a8db6449_assignInfo>(_1a8db6449_assignInfo{._field_l=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr), ._field_setter=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bb64ac:;
		if (it != expr_end) {
			jule::I64 _8298_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9bb705c:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9bb7403:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1a9bb7304:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1a9bb74d0:;
						{
							goto _iter_next_1a9bb64ac;
						}
					}
					else if (((!(_1a818d2e3_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1a9bb8569:;
						{
							goto _iter_next_1a9bb64ac;
						}
					}
					_match_end_1a9bb8503:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1a818d029_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1a9bb64ac;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1a818d029_IsPostfixOp((*(*(_8257_info))._field_setter.alloc)._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1a8d9c6e9_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1a9bb64ac;
			}
			_iter_next_1a9bb64ac:;
			++it;
			_8298_i++;
			goto _iter_begin_1a9bb64ac;
		}
		_iter_end_1a9bb64ac:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1a81ac114_AssignLeft> _1a8da62c4_buildAssignL(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _86933_tokens) {
	jule::Ptr<_1a81ac114_AssignLeft> _8707_l = jule::new_ptr<_1a81ac114_AssignLeft>(_1a81ac114_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*_8707_l.alloc)._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> _1a8da6615_buildAssignLs(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bc0d9b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _88215_part = *it;
			{
				jule::Ptr<_1a81ac114_AssignLeft> _8838_l = _1a8da62c4_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1a9bc0d9b:;
			++it;
			goto _iter_begin_1a9bc0d9b;
		}
		_iter_end_1a9bc0d9b:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da6956_buildPlainAssign(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _88937_tokens) {
	__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a8db6449_assignInfo> _8907_info = _1a8da5e83_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a81ac697_AssignSt> _8957_assign = jule::new_ptr<_1a81ac697_AssignSt>(_1a81ac697_AssignSt{._field_Declarative=false, ._field_Setter=(*_8907_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1a8dba7c2_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1a8da6d52_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8957_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a81ac114_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1a9bc6be8:;
				{
					jule::Ptr<_1a81b1b41_VarDecl> _9159_decl = jule::new_ptr<_1a81b1b41_VarDecl>(_1a81b1b41_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1a9bc6b82:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _9297_parts;
	jule::Slice<_21ca95427_Log> _92914_errs;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8957_assign.alloc)._field_Left=_1a8da6615_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1a8dba7c2_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8da6d52_buildDeclAssign1(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _94337_lefts, jule::Ptr<_1a81ac697_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _9457_parts;
	jule::Slice<_21ca95427_Log> _94514_errs;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(_94337_lefts, static_cast<jule::U64>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bcd815:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1a81881cd_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a8d9c6e9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1a8d9c6e9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a8d9c6e9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1a81ac114_AssignLeft> _9798_l = _1a8da62c4_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9798_l.alloc)._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1a9bcd815:;
			++it;
			goto _iter_begin_1a9bcd815;
		}
		_iter_end_1a9bcd815:;
	};
	return true;;
}



inline __jule_tuple_x_1a81ac697_AssignSt__jule_tuple_bool _1a8da7193_buildDeclAssign(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _99135_tokens) {
	__jule_tuple_x_1a81ac697_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81881cd_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a81ac697_AssignSt> _10027_assign = jule::new_ptr<_1a81ac697_AssignSt>(_1a81ac697_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1a81ac114_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	jule::I64 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _10077_rang = _1a8db7cdb_range(&(_10067_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1a8d9c6e9_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a8d9c6e9_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1a81881cd_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1a8da6d52_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a81ad357_StmtData__jule_tuple_bool _1a8da74d4_buildAssignSt(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _102534_tokens) {
	__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a8db6801_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aaab5289:;
			{
				({
					__jule_tuple_x_1a81ac697_AssignSt__jule_tuple_bool __jule_assign_result = _1a8da7193_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aaab492b:;
			{
				({
					__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_assign_result = _1a8da6956_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aaab4d8d:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a81a3902_UseExpr> _1a8da7825_buildUseExpr(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1a8d9c6e9_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1a81a3902_UseExpr> _10437_ue = jule::new_ptr<_1a81a3902_UseExpr>(_1a81a3902_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1a8dba7c2_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1a8da7b66_buildConstSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1a8d9c6e9_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aaab9de8:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a81b278a_Iter> _10598_iter = _1a8da17ec_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aaab9bd9:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a81b65b3_MatchCase> _10668_mt = _1a8da516e_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1aaab9018:;
			{
				return jule::Any(_1a8d9d7d8_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_1aaab9733:;
	};
}



inline jule::Any _1a8da7ea7_buildSt(_1a8d9b42e_scopeParser* _self_, jule::Ptr<_1a8d9aa8d_stmt>* _107628_st) {
	jule::Ptr<_1a81881cd_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_assign_result = _1a8da5b42_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1a81ad357_StmtData__jule_tuple_bool __jule_assign_result = _1a8da74d4_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aaac0d33:;
			{
				return jule::Any(_1a8da7825_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aaac0c34:;
			{
				return _1a8da7b66_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1aaac1086:;
			{
				return jule::Any(_1a8d9d7d8_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aaac10ec:;
			{
				return jule::Any(_1a8d9db29_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aaac1163:;
			{
				return jule::Any(_1a8da17ec_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aaac11c9:;
			{
				return jule::Any(_1a8da1b3d_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1aaac1240:;
			{
				return jule::Any(_1a8da1e7e_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1aaac12b7:;
			{
				return jule::Any(_1a8da2952_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1aaac133e:;
			{
				return jule::Any(_1a8da2c93_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1aaac13b6:;
			{
				return jule::Any(_1a8da30d4_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1aaac143d:;
			{
				return jule::Any(_1a8da3425_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aaac14b5:;
			{
				return jule::Any(_1a8da3766_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aaac153c:;
			{
				return jule::Any(_1a8da516e_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aaac15b4:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1aaac0a69;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a8da54b0_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aaac163b:;
			{
				return jule::Any(_1a8da54b0_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aaac16b3:;
			{
				return jule::Any(_1a8da54b0_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_1aaac0a69:;
	};
	jule::Ptr<_1a81a302d_Expr> _11327_expr = _1a8dba7c2_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_1a8d9c6e9_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1a8da831a_build(_1a8d9b42e_scopeParser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _114026_tokens, jule::Ptr<_1a81adce7_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a8d9ae45_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1a8d9c386_isLastSt(_self_))) && (!(_1a8d9c100_finished(_self_))))) {
		{
			jule::Ptr<_1a8d9aa8d_stmt> _11488_st = _1a8d9d09b_next(_self_);;
			jule::Any _11498_data = _1a8da7ea7_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1a81ad687_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a81ad687_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1a8d9bd69_stopped(_self_)) {
				goto _iter_end_1aaacda44;
			};
		}
	_iter_next_1aaacda44:;
	}
	_iter_end_1aaacda44:;;
}








inline jule::Bool _1a8da8d54_exprBuilder_eq(_1a8da8d54_exprBuilder *_self_, _1a8da8d54_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1a8da955d_pushErr(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1a8dba11d_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1a8da98c1_pushSuggestion(_1a8da8d54_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1a8dba481_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1a81a3b22_TupleExpr> _1a8da9c12_buildTuple(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _2331_parts) {
	jule::Ptr<_1a81a3b22_TupleExpr> _247_tuple = jule::new_ptr<_1a81a3b22_TupleExpr>(_1a81a3b22_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81a302d_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99a48d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8db4106_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1aa99a48d:;
			++it;
			goto _iter_begin_1aa99a48d;
		}
		_iter_end_1aa99a48d:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1a81a3eb8_LitExpr> _1a8daa053_buildLit(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _3324_token) {
	return jule::new_ptr<_1a81a3eb8_LitExpr>(_1a81a3eb8_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1a8daa6d5_buildSingle(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1aa99c6e3:;
			{
				return jule::Any(_1a8daa053_buildLit(_self_, _4431_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1aa99c76a:;
			{
				return jule::Any(jule::new_ptr<_1a81a54b4_VariadicExpr>(_1a81a54b4_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1aa99c7d1:;
			{
				return jule::Any(_1a8db54ae_buildIdentExpr(&(_4431_token)), &__jule_any_type42);;
			}
		}
		_match_end_1aa99c627:;
	};
	_1a8da955d_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a81a4848_IdentExpr> _1a8daaa26_buildBindIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a8da955d_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8da955d_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81a4848_IdentExpr> _757_expr = _1a8db54ae_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1a81a50da_UnaryExpr> _1a8daad67_buildUnary(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _8030_tokens) {
	jule::Ptr<_1a81881cd_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1a8da955d_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a818891a_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1a8da955d_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a81a50da_UnaryExpr>(_1a81a50da_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1a8db4106_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1a81a6141_SubIdentExpr> _1a8dab1a8_buildObjSubIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _10136_tokens) {
	jule::I64 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1a81881cd_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a81a6141_SubIdentExpr>(_1a81a6141_SubIdentExpr{._field_Expr=_1a8db4106_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1a81a5c67_NamespaceExpr> _1a8dab4e9_buildNamespace(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _11635_tokens) {
	jule::Ptr<_1a81a5c67_NamespaceExpr> _1177_ns = jule::new_ptr<_1a81a5c67_NamespaceExpr>(_1a81a5c67_NamespaceExpr{._field_Namespace=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1a8da955d_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1a8da955d_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1a8da955d_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1a8da955d_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1a8da955d_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8da955d_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dab83a_buildType(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _15030_tokens) {
	jule::I64 _1517_i = 0LL;;
	jule::Ptr<_1a819dbe9_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1a8da955d_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1a8da955d_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1a8dabb7b_buildSubIdent(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _16434_tokens) {
	jule::I64 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1a81881cd_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1aa9b4d59:;
			{
				return jule::Any(_1a8dab1a8_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa9b5486:;
			{
				return jule::Any(_1a8dab4e9_buildNamespace(_self_, _16434_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aa9b54ec:;
			{
				return jule::Any(_1a8dab83a_buildType(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1aa9b5365:;
	};
	if (_1a8db5b52_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1a8dab83a_buildType(_self_, _16434_tokens), &__jule_any_type92);;
	};
	_1a8da955d_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a81a54b4_VariadicExpr> _1a8dabebc_buildVariadic(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _18633_tokens) {
	jule::Ptr<_1a81881cd_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1a81a54b4_VariadicExpr>(_1a81a54b4_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1a8db4106_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1a81a32e7_RangeExpr> _1a8dac30d_buildBetweenParentheses(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1a8da955d_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1a81a32e7_RangeExpr>(_1a81a32e7_RangeExpr{._field_Expr=_1a8db4106_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1a81a588d_CastExpr> _1a8dac64e_tryBuildCast(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _20733_tokens) {
	jule::I64 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9bae1a:;
		if (it != expr_end) {
			jule::I64 _2097_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa9bb9a9:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1aa9bae1a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa9bbd94:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1aa9bbc95:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1aa9bae1a;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a81881cd_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a81a588d_CastExpr> _2418_cast = jule::new_ptr<_1a81a588d_CastExpr>(_1a81a588d_CastExpr{._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1a8da955d_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1a8da955d_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I64 _2559_typeIndex = 0LL;;
					jule::Ptr<_1a819dbe9_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1a8da955d_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I64 _26610_j = 0LL;;
						_1a8db7cdb_range(&(_26610_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1a8db4106_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1aa9bae1a:;
			++it;
			_2097_i++;
			goto _iter_begin_1aa9bae1a;
		}
		_iter_end_1aa9bae1a:;
	};
	return nullptr;;
}



inline void _1a8daca6c_pushArg(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81a302d_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1a81881cd_Token>> _28152_tokens, jule::Ptr<_1a81881cd_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a81a302d_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1a8db4106_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a81a302d_Expr>> _1a8dacdad_buildArgs(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _29611_args = nullptr;;
	jule::I64 _2977_last = 0LL;;
	jule::I64 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9c9995:;
		if (it != expr_end) {
			jule::I64 _3007_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa9ca710:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa9caaea:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1aa9ca9eb:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aa9c9995;
				};
				_1a8daca6c_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1aa9c9995:;
			++it;
			_3007_i++;
			goto _iter_begin_1aa9c9995;
		}
		_iter_end_1aa9c9995:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1a8daca6c_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1a8daca6c_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1a81a6c57_FnCallExpr> _1a8dad6a5_buildFnCall(_1a8da8d54_exprBuilder* _self_, jule::Ptr<_1a81881cd_Token>* _35632_token, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _35687_args) {
	return jule::new_ptr<_1a81a6c57_FnCallExpr>(_1a81a6c57_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1a8db4106_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1a8dacdad_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1a8dad9e6_buildParenthesesRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _36442_tokens) {
	jule::Ptr<_1a81881cd_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a81a588d_CastExpr> _3678_expr = _1a8dac64e_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token __jule_assign_result = _1a8db80a5_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1a8dac30d_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type104);;
	};
	if (_1a8db5b52_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1a8dab83a_buildType(_self_, _36442_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1a8dad6a5_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1a81a4392_UnsafeExpr> _1a8dadd37_buildUnsafeExpr(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _38635_tokens) {
	jule::Ptr<_1a81881cd_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I64 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3907_rangeTokens = _1a8db7cdb_range(&(_3897_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a81a4392_UnsafeExpr>(_1a81a4392_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1a8db4106_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1a81b0986_FnDecl> _1a8dae178_buildAnonFn(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _40132_tokens) {
	jule::Ptr<_1a81b0986_FnDecl> _4027_f = _1a8dc12ab_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1a81b0d2c_IsAnon(_4027_f.ptr())))) {
		_1a8da955d_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1a8dae4b9_buildUnsafe(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa9dd5d0:;
			{
				return jule::Any(_1a8dae178_buildAnonFn(_self_, _41032_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_1aa9dc964:;
			{
				return jule::Any(_1a8dadd37_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1aa9dcdb5:;
	};
}



inline void _1a8dae8d7_pushRangeLitPart(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _42036_part, jule::Ptr<_1a81881cd_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8daec28_getBraceRangeLitExprParts(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _43711_parts = nullptr;;
	jule::I64 _4397_last = 0LL;;
	jule::I64 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9e1d86:;
		if (it != expr_end) {
			jule::I64 _4427_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa9e2b01:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa9e2edb:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1aa9e2ddc:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aa9e1d86;
				};
				_1a8dae8d7_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1aa9e1d86:;
			++it;
			_4427_i++;
			goto _iter_begin_1aa9e1d86;
		}
		_iter_end_1aa9e1d86:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1a8dae8d7_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1a8dae8d7_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1a81a774c_FieldExprPair> _1a8db0069_buildFieldExprPair(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1a8da955d_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81a774c_FieldExprPair> _4787_pair = jule::new_ptr<_1a81a774c_FieldExprPair>(_1a81a774c_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1a8db4106_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1a81a302d_Expr> _1a8db03aa_buildStructLitExpr(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _48639_tokens) {
	jule::Ptr<_1a81881cd_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a81a302d_Expr>(_1a81a302d_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a8db0069_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type81)});;
		};
	};
	return _1a8db4106_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a81a302d_Expr>> _1a8db06eb_buildStructLitExprs(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _5027_parts = _1a8daec28_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81a302d_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81a302d_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9eb764:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a81a302d_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1a8db03aa_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1aa9eb764:;
			++it;
			goto _iter_begin_1aa9eb764;
		}
		_iter_end_1aa9eb764:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1a81a8077_StructLit> _1a8db0a3c_buildTypedStructLiteral(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _51443_tokens) {
	jule::I64 _5157_i = 0LL;;
	jule::Ptr<_1a819dbe9_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1a8da955d_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1a81881cd_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a8da955d_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a81a8077_StructLit>(_1a81a8077_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1a8db06eb_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1a81a302d_Expr> _1a8db0d7d_buildBraceLitPart(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _53914_r;
	({
		__jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token __jule_assign_result = _1a8db4e2b_splitDelim(_53838_tokens, static_cast<jule::U64>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1a81a302d_Expr>(_1a81a302d_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a81a8d58_KeyValPair>(_1a81a8d58_KeyValPair{._field_Key=_1a8db4106_buildFromTokens(_self_, _5397_l), ._field_Val=_1a8db4106_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type82)});;
	};
	return _1a8db4106_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1a81a852d_BraceLit> _1a8db11be_buildBraceLit(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _55534_tokens) {
	jule::Ptr<_1a81a852d_BraceLit> _5567_lit = jule::new_ptr<_1a81a852d_BraceLit>(_1a81a852d_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a81a302d_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _5617_parts = _1a8daec28_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81a302d_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa06483:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8db0d7d_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1aaa06483:;
			++it;
			goto _iter_begin_1aaa06483;
		}
		_iter_end_1aaa06483:;
	};
	return _5567_lit;;
}



inline jule::Any _1a8db1510_buildBraceRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _5757_exprTokens;
	jule::I64 _57519_rangeN;
	({
		__jule_tuple_sx_1a81881cd_Token__jule_tuple_int __jule_assign_result = _1a8db5778_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1aaa068e5:;
			{
				return jule::Any(_1a8db11be_buildBraceLit(_self_, _57436_tokens), &__jule_any_type111);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1aaa07e68:;
			{
				_1a8da955d_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aaa07dad:;
	};
	jule::Ptr<_1a81881cd_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1a8db3974_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1aaa0b8a6:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I64 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1a81881cd_Token>> _5979_rangeTokens = _1a8db7cdb_range(&(_5969_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57436_tokens);;
					jule::Ptr<_1a81a6c57_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1a81a6c57_FnCallExpr>();;
					if (_1a81a7395_Ignored(_5989_model.ptr())) {
						_1a8da955d_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1a8dbb2b7_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1aaa0a91b:;
				{
					_1a8da955d_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1aaa0ad5b:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aaa10db6:;
			{
				return _1a8dae4b9_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aaa10e2c:;
			{
				return jule::Any(_1a8dae178_buildAnonFn(_self_, _57436_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aaa10e93:;
			{
				return jule::Any(_1a8db0a3c_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1aaa0b015:;
			{
				_1a8da955d_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aaa10206:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8db1851_getEnumerableParts(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _6287_parts;
	jule::Slice<_21ca95427_Log> _62814_errors;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(&(_62638_tokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1a81a9584_SliceExpr> _1a8db1b92_buildSlice(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _63330_tokens) {
	jule::Ptr<_1a81a9584_SliceExpr> _6347_slc = jule::new_ptr<_1a81a9584_SliceExpr>(_1a81a9584_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1a81a302d_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _6397_parts = _1a8db1851_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81a302d_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa15cab:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1aaa15cab;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81a302d_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8db4106_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1aaa15cab:;
			++it;
			goto _iter_begin_1aaa15cab;
		}
		_iter_end_1aaa15cab:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1a81a9ee1_IndexingExpr> _1a8db2148_buildIndexing(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>> _6567_tokens, jule::Ptr<_1a81881cd_Token> _65636_errorToken) {
	jule::Ptr<_1a81881cd_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _6637_expr = _1a8db4106_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _6677_index = _1a8db4106_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a81a9ee1_IndexingExpr>(_1a81a9ee1_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1a81aa651_SlicingExpr> _1a8db2764_buildSlicing(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _67967_start, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6808_to, jule::Ptr<_1a81881cd_Token>* _68034_errorToken, jule::Ptr<_1a81881cd_Token> _68065_end) {
	jule::Ptr<_1a81aa651_SlicingExpr> _6817_slc = jule::new_ptr<_1a81aa651_SlicingExpr>(_1a81aa651_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1a8db4106_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_To=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1a8db4106_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1a8db4106_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1a8db2aa5_buildBracketRange(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _69537_tokens) {
	jule::Ptr<_1a81881cd_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _6977_exprTokens;
	jule::I64 _69719_rangeN;
	({
		__jule_tuple_sx_1a81881cd_Token__jule_tuple_int __jule_assign_result = _1a8db5778_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1a8db1b92_buildSlice(_self_, _69537_tokens), &__jule_any_type97);;
	} else if ((_69719_rangeN > 0LL)) {
		_1a8da955d_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _71318_to;
	({
		__jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token __jule_assign_result = _1a8db4e2b_splitDelim(&(_7127_splitTokens), static_cast<jule::U64>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1a8db2764_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1a8db2148_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type107);;
}



inline jule::Any _1a8db2de6_buildExclRight(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _72035_tokens) {
	jule::Ptr<_1a81881cd_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1a8db3974_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aaa2388a:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1a81a6c57_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a81adce7_ScopeTree>(_1a81adce7_ScopeTree{._field_Parent=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1a81ad687_Stmt>(nullptr), ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1aaa23c75:;
	};
	_1a8da955d_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a8db3237_buildData(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aaa25491:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aaa25507:;
			{
				return _1a8daa6d5_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aaa2556d:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a8daaa26_buildBindIdent(_self_, _73830_tokens), &__jule_any_type42);;
				};
			}
		}
		_match_end_1aaa2535e:;
	};
	jule::Ptr<_1a81881cd_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a8dabebc_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type79);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1a818891a_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a8dab83a_buildType(_self_, _73830_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1a8daad67_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type91);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1aaa29d36:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1a81881cd_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1aaa2a111;
						};
					};
					jule::Ptr<_1a81881cd_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1aaa2a111;
					};
					return jule::Any(_1a8dab83a_buildType(_self_, _73830_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1aaa2a111:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aaa2d312:;
			{
				return _1a8dabb7b_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aaa2d378:;
			{
				return _1a8db2de6_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aaa2d3de:;
			{
				return _1a8dad9e6_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aaa2d455:;
			{
				return _1a8db1510_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aaa2d4bb:;
			{
				return _1a8db2aa5_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1aaa2d29b:;
	};
	_1a8da955d_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a8db3633_buildBinary(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _80732_tokens, jule::I64 _80757_i) {
	jule::Ptr<_1a81881cd_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1a8db448b_isTypeOp(&((*(_8087_op))._field_Id)) && _1a8db4799_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1a8dab83a_buildType(_self_, _80732_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1a8da955d_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8da98c1_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a81a65e7_BinaryExpr>(_1a81a65e7_BinaryExpr{._field_Left=_1a8db4106_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1a8db4106_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type112);;
}



inline jule::Any _1a8db3974_build(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a8dab83a_buildType(_self_, _83226_tokens), &__jule_any_type92);;
	};
	jule::I64 _8363_i = _1a8db51e5_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1a8db3237_buildData(_self_, _83226_tokens);;
	};
	return _1a8db3633_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1a8db3cb5_buildKind(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _8447_parts;
	jule::Slice<_21ca95427_Log> _84414_errors;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(_84330_tokens, static_cast<jule::U64>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1a8da9c12_buildTuple(_self_, &(_8447_parts)), &__jule_any_type83);;
	};
	return _1a8db3974_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1a81a302d_Expr> _1a8db4106_buildFromTokens(_1a8da8d54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1a8db3cb5_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a81a302d_Expr>(_1a81a302d_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1a8db9969_stop(_1a8db9639_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a8db9c00_stopped(_1a8db9639_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a8dba11d_pushErr(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_21ca95427_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8db8c21_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1a8dba481_pushSuggestion(_1a8db9639_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1a8db90b7_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1a81a302d_Expr> _1a8dba7c2_buildExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _17831_tokens) {
	return _1a8db4106_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1a819d116_Directive> _1a8dbab13_buildDirective(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1a8dba11d_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1a8dba11d_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a819d116_Directive>(_1a819d116_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1a8dbadbb_pushDirective(_1a8db9639_parser* _self_, jule::Ptr<_1a819d116_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa5a97c:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1aaa5a97c:;
			++it;
			goto _iter_begin_1aaa5a97c;
		}
		_iter_end_1aaa5a97c:;
	};
	{ jule::Slice<jule::Ptr<_1a819d116_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1a81adce7_ScopeTree> _1a8dbb2b7_buildScope(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _21032_tokens, jule::Ptr<_1a81881cd_Token> _21061_end) {
	jule::Ptr<_1a81adce7_ScopeTree> _2117_s = _1a8d99817_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1a8d9b42e_scopeParser _2137_sp = _1a8d9b42e_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>>(nullptr), ._field_pos=0};;
	_1a8da831a_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dbb76d__buildType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a8dca7e3_typeBuilder _2227_tb = _1a8dca7e3_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1a8dcd807_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dbbc24_buildType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a81881cd_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1a819dbe9_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbb76d__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1a8dba11d_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8dbc065_buildTypeAliasDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _24240_tokens) {
	jule::I64 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a8dba11d_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81b57e3_TypeAliasDecl> _2487_tad = jule::new_ptr<_1a81b57e3_TypeAliasDecl>(_1a81b57e3_TypeAliasDecl{._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
	jule::Ptr<_1a81881cd_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a8dba11d_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1a819dbe9_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1a8dba11d_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1a83a5692_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1a8dbc3c8_buildVarTypeAndExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b1b41_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _28264_tokens) {
	jule::I64 _2837_i = 0LL;;
	jule::Ptr<_1a81881cd_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a8dba11d_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a819dbe9_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a8dba11d_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1a8dba11d_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1a8dba7c2_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1a8dbc73b_buildVarCommon(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b1b41_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1a81881cd_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1a83a5692_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1a8dbc3c8_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1a8dbca9e_buildVarBegin(_1a8db9639_parser* _self_, jule::Ptr<_1a81b1b41_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _33157_tokens) {
	jule::Ptr<_1a81881cd_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aaa7737d:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1aaa7703c;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aaa7703c:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1a8dba11d_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aaa770a3:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1aaa76c2e:;
			{
				(*(_33157_tokens))=nullptr;
				_1a8dba11d_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aaa76ec6:;
	};
}



inline jule::Ptr<_1a81b1b41_VarDecl> _1a8dbcde0_buildVar(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _35929_tokens) {
	jule::Ptr<_1a81b1b41_VarDecl> _3607_v = jule::new_ptr<_1a81b1b41_VarDecl>(_1a81b1b41_VarDecl{._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	_1a8dbca9e_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1a8dbc73b_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1a81aae04_GenericDecl> _1a8dbd231_buildGeneric(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _37834_tokens) {
	jule::Ptr<_1a81aae04_GenericDecl> _3797_g = jule::new_ptr<_1a81aae04_GenericDecl>(_1a81aae04_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1a81aa94d_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a8dba11d_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1a8dba11d_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a81881cd_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _3978_parts;
		jule::Slice<_21ca95427_Log> _39715_errors;
		({
			__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(&(_3968_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1a81aa94d_Constraint>(_1a81aa94d_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaa8529d:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _40316_part = *it;
				{
					jule::I64 _4049_i = 0LL;;
					jule::Ptr<_1a819dbe9_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1a8dba11d_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aaa8529d:;
				++it;
				goto _iter_begin_1aaa8529d;
			}
			_iter_end_1aaa8529d:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _1a8dbd62c_buildGenerics(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _41535_tokens, jule::Ptr<_1a81881cd_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _4217_parts;
	jule::Slice<_21ca95427_Log> _42114_errors;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(_41535_tokens, static_cast<jule::U64>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81aae04_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa89e84:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1a8dbd231_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1aaa89e84:;
			++it;
			goto _iter_begin_1aaa89e84;
		}
		_iter_end_1aaa89e84:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1a81ae534_ParamDecl> _1a8dbd96d_buildSelfParam(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a81ae534_ParamDecl> _4407_param = jule::new_ptr<_1a81ae534_ParamDecl>(_1a81ae534_ParamDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1a8dba11d_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_21ca86171_Builder _4527_ident = static__21ca869bd_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		({
			auto except = _21ca87150_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_1a8dba11d_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		({
			auto except = _21ca87150_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1a8dba11d_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_21ca879d0_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1a8dbdd8b_paramTypeBegin(_1a8db9639_parser* _self_, jule::Ptr<_1a81ae534_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1a81881cd_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1a8dba11d_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1aaa933ee;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1aaa933ee:;
	}
	_iter_end_1aaa933ee:;;
}



inline void _1a8dbe1ee_buildParamType(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ae534_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _49065_tokens) {
	jule::I64 _4917_i = 0LL;;
	_1a8dbdd8b_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1a8dbe562_buildParamBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ae534_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1a81881cd_Token>> _50364_tokens) {
	jule::Ptr<_1a81881cd_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a8dbe1ee_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1a8dbe1ee_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1a81ae534_ParamDecl> _1a8dbe8a3_buildParam(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _52331_tokens) {
	jule::Ptr<_1a81ae534_ParamDecl> _5247_param = jule::new_ptr<_1a81ae534_ParamDecl>(_1a81ae534_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1a8dba11d_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1a8dba11d_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1a8dbe1ee_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1a8dbe562_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1a8dbeb5b_checkParams(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaa3cb1:;
		if (it != expr_end) {
			jule::Ptr<_1a81ae534_ParamDecl> _56715_param = *it;
			{
				if ((_1a81ae8db_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1aaaa3cb1;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1a8dba11d_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1aaaa3cb1:;
			++it;
			goto _iter_begin_1aaaa3cb1;
		}
		_iter_end_1aaaa3cb1:;
	};
}



inline jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> _1a8dc0057_buildParams(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _5877_parts;
	jule::Slice<_21ca95427_Log> _58714_errs;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(_58633_tokens, static_cast<jule::U64>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1a81ae534_ParamDecl> _5958_param = _1a8dbd96d_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1a81ae8db_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaaa8ab:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1aaaaa8ab;
				};
				jule::Ptr<_1a81ae534_ParamDecl> _6068_param = _1a8dbe8a3_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1aaaaa8ab:;
			++it;
			goto _iter_begin_1aaaaa8ab;
		}
		_iter_end_1aaaaa8ab:;
	};
	_1a8dbeb5b_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool _1a8dc0453_buildMultiRetType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _61639_tokens, jule::I64* _61669_i) {
	__jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a81a1adc_RetTypeDecl>(_1a81a1adc_RetTypeDecl{._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _6267_rangeTokens = _1a8db7cdb_range(_61669_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _6287_parts;
	jule::Slice<_21ca95427_Log> _62814_errs;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(&(_6267_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81881cd_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81881cd_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac2234c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1aac2234c;
				};
				jule::Ptr<_1a81881cd_Token> _6408_token = _63615_part[0LL];;
				jule::I64 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1a8dba11d_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1aac2234c;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1a81881cd_Token> _6579_newToken = jule::new_ptr<_1a81881cd_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81881cd_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81881cd_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1a819dbe9_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1a8dba11d_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1aac2234c:;
			++it;
			goto _iter_begin_1aac2234c;
		}
		_iter_end_1aac2234c:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a81a0426_TupleTypeDecl>(_1a81a0426_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool _1a8dc084e_buildRetType(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _68734_tokens, jule::I64* _68764_i) {
	__jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a81a1adc_RetTypeDecl>(_1a81a1adc_RetTypeDecl{._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a81881cd_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aac2b3de:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1aac2b466:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1aac2b4cc:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1a8dba11d_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aac2cec3:;
						{
							({
								__jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a8dc0453_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aac2d501:;
						{
							_1a8dba11d_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1aac2d457:;
				};
				({
					__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1aac2b378:;
	};
	((*(_68764_i)))++;
	_1a8dba11d_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc0d05_buildFnPrototype(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1a81b0986_FnDecl> _7277_f = jule::new_ptr<_1a81b0986_FnDecl>(_1a81b0986_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1a81a1adc_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a8dba11d_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1a81881cd_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7737_genericsTokens = _1a8db7cdb_range(_72668_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1a8dbd62c_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a8dba11d_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _7837_paramsToks = _1a8db7cdb_range(_72668_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1a8dc0057_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1a81881cd_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1a83a5692_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a81a1adc_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a8dc084e_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc12ab_buildFn(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I64 _8047_i = 0LL;;
	jule::Ptr<_1a81b0986_FnDecl> _8057_f = _1a8dc0d05_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _8217_blockTokens = _1a8db7cdb_range(&(_8047_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1a8dbb2b7_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1a8dc161e_buildBindUseDecl(_1a8db9639_parser* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1a8dba11d_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a81881cd_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1a8189333_IsStr((*_8417_token.alloc)._field_Kind)))) || _1a81895b9_IsRawStr((*_8417_token.alloc)._field_Kind))) {
		_1a8dba11d_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1a8dc1982_parseUseDecl(_1a8db9639_parser* _self_, jule::Ptr<_1a81b6b46_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1a81881cd_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1a8dc161e_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1a81881cd_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU))) && (!(_1a8189333_IsStr((*_8567_token.alloc)._field_Kind)))) || _1a81895b9_IsRawStr((*_8567_token.alloc)._field_Kind))) {
		_1a8dba11d_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U64>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1a8dba11d_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1a8189333_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1a8dba11d_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1a81b6b46_UseDecl> _1a8dc1d7d_buildUseDecl(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_1a81b6b46_UseDecl> _8817_decl = jule::new_ptr<_1a81b6b46_UseDecl>(_1a81b6b46_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Alias=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_1a8dba11d_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_1a8dc1982_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dc2279_buildTypeEnumItemKind(jule::Ptr<_1a8db9639_parser> _self_, jule::I64* _89443_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _89456_tokens) {
	jule::I64 _8957_braceN = 0LL;;
	jule::I64 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_1a81881cd_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aac532e5:;
					{
						(_8957_braceN)++;
						goto _iter_next_1aac52778;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aac53625:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_1aac5336c:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_1aac52778;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _91413_kindTokens = nullptr;;
				if (((*_8984_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I64 _9209_j = 0LL;;
				jule::Ptr<_1a819dbe9_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_1a8dba11d_pushErr(_self_, _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_1aac52778:;
	}
	_iter_end_1aac52778:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>> _1a8dc25ba_buildTypeEnumItems(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81b84d8_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_1a81881cd_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_1a81b84d8_TypeEnumItemDecl> _9368_item = jule::new_ptr<_1a81b84d8_TypeEnumItemDecl>(_1a81b84d8_TypeEnumItemDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a8dba11d_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1aac585e7;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_1a8dc2279_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_1aac585e7:;
	}
	_iter_end_1aac585e7:;;
	return _9327_items;;
}



inline jule::Ptr<_1a81b8b48_TypeEnumDecl> _1a8dc290b_buildTypeEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _95539_tokens) {
	jule::I64 _9567_i = 1LL;;
	jule::Ptr<_1a81b8b48_TypeEnumDecl> _9577_e = jule::new_ptr<_1a81b8b48_TypeEnumDecl>(_1a81b8b48_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Ident=(*(*(_9577_e))._field_Token.alloc)._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _9677_itemTokens = _1a8db7cdb_range(&(_9567_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_1a83a5692_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_1a8dc25ba_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_1a81a302d_Expr> _1a8dc2d07_buildEnumItemExpr(jule::Ptr<_1a8db9639_parser> _self_, jule::I64* _98239_i, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _98252_tokens) {
	jule::I64 _9837_braceN = 0LL;;
	jule::I64 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_1a81881cd_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aac6699b:;
					{
						(_9837_braceN)++;
						goto _iter_next_1aac65e2e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aac66ccb:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_1aac66a23:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_1aac65e2e;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _100213_exprTokens = nullptr;;
				if (((*_9864_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _1a8dba7c2_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_1aac65e2e:;
	}
	_iter_end_1aac65e2e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> _1a8dc3148_buildEnumItems(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81b70ec_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_1a81881cd_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_1a81b70ec_EnumItemDecl> _10198_item = jule::new_ptr<_1a81b70ec_EnumItemDecl>(_1a81b70ec_EnumItemDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a8dba11d_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*(*(_10198_item))._field_Token.alloc)._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_1aac6a87e;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a8dba11d_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1aac6a87e;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a8dba11d_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1aac6a87e;
			};
			(*_10198_item.alloc)._field_Expr=_1a8dc2d07_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_1aac6a87e:;
	}
	_iter_end_1aac6a87e:;;
	return _10157_items;;
}



inline jule::Ptr<_1a81b7bad_EnumDecl> _1a8dc3489_buildEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81b7bad_EnumDecl> _10567_e = jule::new_ptr<_1a81b7bad_EnumDecl>(_1a81b7bad_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Ident=(*(*(_10567_e))._field_Token.alloc)._field_Kind;
	jule::I64 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1a8db9969_stop(_self_);
			_1a8dba11d_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _10817_itemTokens = _1a8db7cdb_range(&(_10647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_1a83a5692_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_1a8dc3148_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _1a8dc37ca_buildNodeEnumDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a8dc290b_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_1a8dc3489_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_1a81b8e12_FieldDecl> _1a8dc3b1b_buildField(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _110531_tokens) {
	jule::Ptr<_1a81b8e12_FieldDecl> _11067_f = jule::new_ptr<_1a81b8e12_FieldDecl>(_1a81b8e12_FieldDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_1a8dba11d_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_, (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*(*(_11067_f))._field_Token.alloc)._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_1a8dba11d_pushErr(_self_, _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a8dba11d_pushErr(_self_, _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I64 _11347_i = 0LL;;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_1a81881cd_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a8dba11d_pushErr(_self_, _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_1a8dba11d_pushErr(_self_, _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_1a8dba7c2_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_1a83a5692_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>> _1a8dc3e5c_buildStructDeclFields(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _11567_stmts = _1a8d9ae45_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac8c6d6:;
		if (it != expr_end) {
			jule::Ptr<_1a8d9aa8d_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_1a81b8e12_FieldDecl> _11598_f = _1a8dc3b1b_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_1aac8c6d6:;
			++it;
			goto _iter_begin_1aac8c6d6;
		}
		_iter_end_1aac8c6d6:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_1a81b9808_StructDecl> _1a8dc429d_buildStructDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _11717_i = 1LL;;
	jule::Ptr<_1a81b9808_StructDecl> _11727_s = jule::new_ptr<_1a81b9808_StructDecl>(_1a81b9808_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*_11727_s.alloc)._field_Ident=(*(*(_11727_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a81881cd_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _11877_genericsTokens = _1a8db7cdb_range(&(_11717_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_1a8dbd62c_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _11977_bodyTokens = _1a8db7cdb_range(&(_11717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_1a83a5692_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_1a8dc3e5c_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _1a8dc4556_checkMethodReceiver(_1a8db9639_parser* _self_, jule::Ptr<_1a81b0986_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _1a81ae8db_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_1a8dba11d_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_1a8dba11d_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a81ae534_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_1a81ae8db_IsSelf(_12253_param.ptr())))) {
		_1a8dba11d_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a8dc48b9_buildTraitBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ba045_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1a81881cd_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _12337_stmts = _1a8d9ae45_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac9e0bb:;
		if (it != expr_end) {
			jule::Ptr<_1a8d9aa8d_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_1aac9e0bb;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1aaca2cc3:;
						{
							jule::Ptr<_1a81b0986_FnDecl> _12419_f = _1a8dc12ab_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_1aaca041e;
							};
							_1a8dc4556_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_1a8dba11d_pushErr(_self_, (*(_12419_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a81b0986_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_1aac9ec15:;
						{
							jule::I64 _12519_i = 0LL;;
							jule::Ptr<_1a819dbe9_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_1aaca041e;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_1a8dba11d_pushErr(_self_, _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_1aaca041e:;
				};
			}
			_iter_next_1aac9e0bb:;
			++it;
			goto _iter_begin_1aac9e0bb;
		}
		_iter_end_1aac9e0bb:;
	};
}



inline jule::Ptr<_1a81ba045_TraitDecl> _1a8dc4c0a_buildTraitDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81ba045_TraitDecl> _12697_t = jule::new_ptr<_1a81ba045_TraitDecl>(_1a81ba045_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a81b0986_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dba11d_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Ident=(*(*(_12697_t))._field_Token.alloc)._field_Kind;
	jule::I64 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _12787_bodyTokens = _1a8db7cdb_range(&(_12777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_1a8dba11d_pushErr(_self_, (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_1a83a5692_IsPub((*_12697_t.alloc)._field_Ident);
	_1a8dc48b9_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc504b_buildBindFn(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81b0986_FnDecl> _12967_f = _1a8dc12ab_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_1a81b1b41_VarDecl> _1a8dc538c_buildBindVar(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81b1b41_VarDecl> _13067_v = _1a8dbcde0_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_1a8dba11d_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_1a81b9808_StructDecl> _1a8dc56cd_buildBindStruct(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81b9808_StructDecl> _13197_s = _1a8dc429d_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aacb27a5:;
			if (it != expr_end) {
				jule::Ptr<_1a81b8e12_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_1aacb27a5:;
				++it;
				goto _iter_begin_1aacb27a5;
			}
			_iter_end_1aacb27a5:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_1a81b57e3_TypeAliasDecl> _1a8dc5a1e_buildBindTypeAlias(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_1a81b57e3_TypeAliasDecl> _13337_t = _1a8dbc065_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_1a81b6b46_UseDecl> _1a8dc5d60_buildBindUse(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _1a8dc1d7d_buildUseDecl(_self_, _134133_tokens, true);;
}



inline jule::Any _1a8dc61a1_buildBind(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _135231_tokens) {
	jule::Ptr<_1a81881cd_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aacb8866:;
			{
				return jule::Any(_1a8dc504b_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aacb84c0:;
			{
				return jule::Any(_1a8dc538c_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1aacb8536:;
			{
				return jule::Any(_1a8dc56cd_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aacb859c:;
			{
				return jule::Any(_1a8dc5a1e_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_1aacb7e70:;
			{
				_1a8dba11d_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aacb8459:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a81b0986_FnDecl> _1a8dc64e2_getMethod(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _137631_tokens) {
	jule::I64 _13777_i = 0LL;;
	jule::Ptr<_1a81881cd_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1a8dba11d_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1a8dba11d_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a8dba11d_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8dc12ab_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _1a8dc6855_parseImplBody(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81ba6a5_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _14067_stmts = _1a8d9ae45_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacc17c5:;
		if (it != expr_end) {
			jule::Ptr<_1a8d9aa8d_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_1a81881cd_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1aacc285e:;
						{
							_1a8dbadbb_pushDirective(_self_.ptr(), _1a8dbab13_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_1aacc17c5;
						}
					}
					_match_end_1aacc2aa1:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1aacc41ac:;
						{
							jule::Ptr<_1a81b1b41_VarDecl> _14189_v = _1a8dbcde0_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1aacc3ce4:;
						{
							jule::Ptr<_1a81b0986_FnDecl> _14259_f = _1a8dc64e2_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_1a8dc4556_checkMethodReceiver(_self_, &(_14259_f));
								_1a8dc7290_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_1a81b0986_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_1aacc2c05:;
						{
							_1a8dba11d_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1aacc17c5;
						}
					}
					_match_end_1aacc31bc:;
				};
			}
			_iter_next_1aacc17c5:;
			++it;
			goto _iter_begin_1aacc17c5;
		}
		_iter_end_1aacc17c5:;
	};
}



inline jule::Ptr<_1a81ba6a5_Impl> _1a8dc6b96_buildImpl(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _143830_tokens) {
	jule::Ptr<_1a81881cd_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_1a8dba11d_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _14457_i = 1LL;;
	jule::Ptr<_1a819dbe9_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1a8dba11d_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a81ba6a5_Impl> _14567_ipl = jule::new_ptr<_1a81ba6a5_Impl>(_1a81ba6a5_Impl{._field_End=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1a81b0986_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_1aacd09e3;
		};
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*_14567_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1aacd09e3:;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _14947_bodyTokens = _1a8db7cdb_range(&(_14457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_1a8db9969_stop(_self_);
		_1a8dba11d_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_1a8dba11d_pushErr(_self_, _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14567_ipl.alloc)._field_End=_143830_tokens[(_14457_i - 1LL)];
	_1a8dc6855_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _1a8dc6ed7_buildNodeData(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _150935_tokens) {
	jule::Ptr<_1a81881cd_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aacd5b91:;
			{
				jule::Ptr<_1a81b0986_FnDecl> _15148_f = _1a8dc12ab_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aacd639a:;
			{
				return jule::Any(_1a8dbcde0_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aacd6411:;
			{
				return jule::Any(_1a8dbc065_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1aacd57a6:;
			{
				return _1a8dc37ca_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1aacd581c:;
			{
				return jule::Any(_1a8dc429d_buildStructDecl(_self_, _150935_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aacd5883:;
			{
				return jule::Any(_1a8dc4c0a_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1aacd58e9:;
			{
				return jule::Any(_1a8dc6b96_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aacd5960:;
			{
				return _1a8dc61a1_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_1aacd54a9:;
			{
				_1a8dba11d_pushErr(_self_.ptr(), _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aacd5740:;
	};
}



inline void _1a8dc7290_applyFnMeta(_1a8db9639_parser* _self_, jule::Ptr<_1a81b0986_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a8dc7548_applyMeta(_1a8db9639_parser* _self_, _1a819cbe8_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aacdc55a:;
			{
				jule::Ptr<_1a81b1b41_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a81b1b41_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aacdc2b3:;
			{
				jule::Ptr<_1a81b0986_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a81b0986_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_1a8dc7290_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aacdc604:;
			{
				jule::Ptr<_1a81b9808_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1a81b9808_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1aacdc4c2:;
	};
}



inline void _1a8dc7801_pushUseDecl(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a81b6b46_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81b6b46_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a8dba11d_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1a8dba481_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a8dc7b42_pushMetaNodes(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aace3b9e:;
			{
				;
				jule::Ptr<_1a81b6b46_UseDecl> _15848_decl = _1a8dc1d7d_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_1a8dc7801_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aace3c26:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a81b6b46_UseDecl> _15899_decl = _1a8dc5d60_buildBindUse(_self_, (*(_158035_tokens)));;
					_1a8dc7801_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aace3c8c:;
			{
				_1a8dbadbb_pushDirective(_self_.ptr(), _1a8dbab13_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_1aace3a8e:;
	};
	return false;;
}



inline _1a819cbe8_Node _1a8dc7e83_parseNode(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _160031_st) {
	_1a819cbe8_Node _16017_node = _1a819cbe8_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1a8dc7b42_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _1a8dc6ed7_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_1a8dc7548_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a8dba11d_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _1a8dc823b_appendNode(jule::Ptr<_1a8db9639_parser> _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_1a819cbe8_Node _16287_node = _1a8dc7e83_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_1a8db9c00_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1a819cbe8_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _1a8dc8714_removeRange(_1a8db9639_parser* _self_, jule::I64 _163427_i, jule::U64 _163435_id, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _163451_tokens, jule::Slice<jule::I64>* _163481_ranges) {
	jule::U64 _16353_close = _1a8db87e2_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_1a81881cd_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_1aacede2e;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_1aacede2e;
		}
	_iter_next_1aacede2e:;
	}
	_iter_end_1aacede2e:;;
}



inline void _1a8dc8b32_pushWrongOrderCloseErr(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token>* _164639_t, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _164658_tokens, jule::Slice<jule::I64>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1aad0133d:;
			{
				_1a8dba11d_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aad013b5:;
			{
				_1a8dba11d_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1aad0142b:;
			{
				_1a8dba11d_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aad0122d:;
	};
}



inline void _1a8dc910a_pushRangeClose(_1a8db9639_parser* _self_, jule::Ptr<_1a81881cd_Token> _165730_t, jule::U64 _165748_left, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _165766_tokens, jule::Slice<jule::I64>* _165796_ranges) {
	jule::I64 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1aad04440:;
				{
					_1a8dba11d_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1aad044b7:;
				{
					_1a8dba11d_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1aad0452d:;
				{
					_1a8dba11d_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1aad04374:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_1a8dc8b32_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_1a8dc8714_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _1a8dc93b3_checkRanges(_1a8db9639_parser* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _167528_tokens) {
	jule::Slice<jule::I64> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0780b:;
		if (it != expr_end) {
			jule::I64 _16787_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aad08741:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aad087c9:;
						{
							_1a8dc910a_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1aad08840:;
						{
							_1a8dc910a_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1aad088a6:;
						{
							_1a8dc910a_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U64>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_1aad08675:;
				};
			}
			_iter_next_1aad0780b:;
			++it;
			_16787_i++;
			goto _iter_begin_1aad0780b;
		}
		_iter_end_1aad0780b:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0a9da:;
		if (it != expr_end) {
			jule::I64 _169310_i = *it;
			{
				jule::Ptr<_1a81881cd_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aad0b766:;
						{
							_1a8dba11d_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aad0b7cc:;
						{
							_1a8dba11d_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aad0b843:;
						{
							_1a8dba11d_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1aad0b4d0:;
				};
			}
			_iter_next_1aad0a9da:;
			++it;
			goto _iter_begin_1aad0a9da;
		}
		_iter_end_1aad0a9da:;
	};
}



inline void _1a8dc966b_parse(jule::Ptr<_1a8db9639_parser> _self_, jule::Ptr<_1a818dc83_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a819bc91_AST>(_1a819bc91_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1a81b6b46_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1a819cbe8_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a8da8d54_exprBuilder>(_1a8da8d54_exprBuilder{._field_p=_self_});
	_1a8dc93b3_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _17197_stmts = _1a8d9ae45_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I64 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_1a8d9aa8d_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17248_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1aad1057d;
			};
			if ((!(_21ca9722b_IsTopDirective((*((*_17248_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1aad1057d;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819d116_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8dbab13_buildDirective(_self_, (*_17248_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1aad1057d:;
	}
	_iter_end_1aad1057d:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_1a8db9c00_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_1a8d9aa8d_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_1a8dc823b_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_1aad13581:;
	}
	_iter_end_1aad13581:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a8dba11d_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1a8dcadba_pushErr(_1a8dca7e3_typeBuilder* _self_, jule::Ptr<_1a81881cd_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1a8dba11d_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a8dcb22d_pushSuggestion(_1a8dca7e3_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1a8dba481_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcb4b4_buildNamespace(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a819dbe9_TypeDecl> _457_t = jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1a819e997_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1a819e997_NamespaceTypeDecl>(_1a819e997_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Kind=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1a8dcadba_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8dcb22d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a8dcadba_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8dcb22d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8dcb22d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1a8dcb22d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1a8dcbc67_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type94);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _1a8dcb74a_buildGenerics(_1a8dca7e3_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _857_parts = _1a8dcb9d1_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1a8dcadba_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819dbe9_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad236d4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _9215_part = *it;
			{
				jule::I64 _938_j = 0LL;;
				jule::Ptr<_1a819dbe9_TypeDecl> _948_t;
				({
					__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1a8dcadba_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1aad236d4:;
			++it;
			goto _iter_begin_1aad236d4;
		}
		_iter_end_1aad236d4:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8dcb9d1_identGenerics(_1a8dca7e3_typeBuilder* _self_) {
	jule::I64 _1043_first = (*((*(_self_))._field_i));;
	jule::I64 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a81881cd_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1aad27c6b:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1aad2809b:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1aad27ce3:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1aad26e13;
			};
		}
	_iter_next_1aad26e13:;
	}
	_iter_end_1aad26e13:;;
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1207_parts;
	jule::Slice<_21ca95427_Log> _12014_errors;
	({
		__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8db855b_parts(&(_1197_tokens), static_cast<jule::U64>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcbc67_buildIdent(_1a8dca7e3_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a8dcb4b4_buildNamespace(_self_);;
	};
	jule::Ptr<_1a81881cd_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a819e304_IdentTypeDecl> _1337_it = jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a819dbe9_TypeDecl> _1397_itd = jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1a8dcb74a_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a8dcadba_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1a819e5bd_SubIdentTypeDecl>(_1a819e5bd_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1a819dbe9_TypeDecl> _1587_ident = _1a8dcbc67_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1aad33c22:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1a819e304_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1aad2d128:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1a819e5bd_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1aad33b9a:;
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcbeed_buildCppLink(_1a8dca7e3_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a819dbe9_TypeDecl> _1777_t = _1a8dcbc67_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1a819e304_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc284_buildFn(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a81b0986_FnDecl> _1847_f = _1a8dc0d05_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a81b0d2c_IsAnon(_1847_f.ptr())))) {
		_1a8dcadba_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc51a_buildPtr(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a81a0723_PtrTypeDecl>(_1a81a0723_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1a819dbe9_TypeDecl> _2157_elem = _1a8dcd571_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1a81a0723_PtrTypeDecl>(_1a81a0723_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcc7a1_buildSptr(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a819dbe9_TypeDecl> _2367_elem = _1a8dcd571_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1a819ec94_SptrTypeDecl>(_1a819ec94_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcca37_buildSlc(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a819dbe9_TypeDecl> _2527_elem = _1a8dcd571_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1a81a0129_SlcTypeDecl>(_1a81a0129_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcccbd_buildArr(_1a8dca7e3_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _2657_exprTokens = _1a8db7cdb_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a819dbe9_TypeDecl> _2717_elem = _1a8dcd571_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a81a0eb5_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1a81a0eb5_ArrTypeDecl>(_1a81a0eb5_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1a81a302d_Expr>(nullptr)});;
	jule::Ptr<_1a81881cd_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1a8dba7c2_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd054_buildMap(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _3027_keyTokens = _1a8db7cdb_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1a8dcadba_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1a81a1713_MapTypeDecl> _3117_mapt = jule::new_ptr<_1a81a1713_MapTypeDecl>(_1a81a1713_MapTypeDecl{._field_Key=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr)});;
	jule::I64 _3127_j = 0LL;;
	jule::Ptr<_1a819dbe9_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1a8dcadba_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1a819dbe9_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a8dbbc24_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd2da_buildEnumerable(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a8dcadba_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a8dcca37_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a8dcccbd_buildArr(_self_);;
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dcd571_step(_1a8dca7e3_typeBuilder* _self_) {
	jule::Ptr<_1a81881cd_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aad542b4:;
			{
				return _1a8dcbc67_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aad5469e:;
			{
				return _1a8dcbeed_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aad54715:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1a819dbe9_TypeDecl> _3589_f = _1a8dcc284_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1a81b0986_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aad5477b:;
			{
				return _1a8dcc284_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aad547e2:;
			{
				return _1a8dcc51a_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aad54869:;
			{
				return _1a8dcc7a1_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aad548e1:;
			{
				return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1a819ec94_SptrTypeDecl>(_1a819ec94_SptrTypeDecl{._field_Elem=_1a8dcc7a1_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1aad54968:;
			{
				return _1a8dcd2da_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1aad549e0:;
			{
				return _1a8dcd054_buildMap(_self_);;
			}
		}
		_match_end_1aad5433b:;
	};
	((*((*(_self_))._field_i)))++;
	_1a8dcadba_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool _1a8dcd807_build(_1a8dca7e3_typeBuilder* _self_) {
	__jule_tuple_x_1a819dbe9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a819dbe9_TypeDecl> _3897_root = _1a8dcd571_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a8dca02e_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1a840ea09_CompileInfo_eq(_1a840ea09_CompileInfo *_self_, _1a840ea09_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1a84117ca_pushErr(_1a8411247_directiveEval* _self_, jule::Ptr<_1a81881cd_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_21ca95427_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_21ca95889_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1a8411bc6_splitOperans(_1a8411247_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a81881cd_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aad7d288:;
					{
						(_367_rangeN)++;
						goto _iter_next_1aad7c809;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aad7d5b8:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1aad7d310:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1aad7c809;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1aad7c809:;
	}
	_iter_end_1aad7c809:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1a84117ca_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a8412017_evalDirectiveIdent(_1a8411247_directiveEval* _self_, jule::Str _6430_ident) {
	return (_1a8410752_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _1a8412358_evalDirectivePart(_1a8411247_directiveEval* _self_, jule::Slice<jule::Ptr<_1a81881cd_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_1a84117ca_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _1a8412017_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _1a84125de_eval(_1a8411247_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a84117ca_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _967_logicalOrParts = _1a8411bc6_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad86280:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> _1038_logicalAndParts = _1a8411bc6_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aad87d42:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a81881cd_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_1a81881cd_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a81881cd_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a84117ca_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _1a8412358_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_1aad87d42:;
						++it;
						goto _iter_begin_1aad87d42;
					}
					_iter_end_1aad87d42:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_1aad86280:;
			++it;
			goto _iter_begin_1aad86280;
		}
		_iter_end_1aad86280:;
	};
	return _947_result;;
}







inline jule::Bool _1a840da6e_isPassFileAnnotation(_1a8dce8e6_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_205375d96_Base(_5136_p);
	jule::I64 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _205375813_Ext(_5136_p).len()));;
	if (_2053695e8_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_1a8410752_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I64 _747_i = _20536be7a_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d3dc_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d6b7_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_20536be7a_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d3dc_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d6b7_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d6b7_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d3dc_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a840d3dc_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_1a8dce8e6_Importer> static__1a8dced25_New(_1a840ea09_CompileInfo _4516_info) {
	jule::Ptr<_1a8dce8e6_Importer> _467_imp = jule::new_ptr<_1a8dce8e6_Importer>(_1a8dce8e6_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20537d123_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1a8410389_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _1a8dd00ab_AllPackages(_1a8dce8e6_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a8dd04eb_SetModPath(_1a8dce8e6_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1a8dd0782_GetModPath(_1a8dce8e6_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a8dd0ac3_ModById(_1a8dce8e6_Importer* _self_, jule::I64 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a8dd0e14_GetImport(_1a8dce8e6_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad96b97:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _7515_p = *it;
			{
				if (_2053735d0_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1aad96b97:;
			++it;
			goto _iter_begin_1aad96b97;
		}
		_iter_end_1aad96b97:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log _1a8dd1310_ImportPackage(_1a8dce8e6_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_func_result;
	jule::Slice<_21cc3b47a_Dir> _857_dirents = ({
		auto except = static__2053769ce_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_21ca95427_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8dce40c_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_21cc3b47a_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1a83a4b36_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_21ca95427_Log> _939_errs = _1a83a4e00_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a819bc91_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a819bc91_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a819bc91_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad98e0d:;
		if (it != expr_end) {
			_21cc3b47a_Dir _10110_dirent = *it;
			{
				if ((_21cc85cbb_IsDir(&_10110_dirent._field_Stat) || (!(_2053695e8_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1aad98e0d;
				};
				jule::Str _1074__path = _20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1a818dc83_Fileset> _1088_file = static__1a818e118_New(_1074__path);;
				{
					_1a818e679_FillMut(_1088_file.ptr(), _1a8dce0ee_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_21ca95427_Log> _1108_errors = _1a819b7b8_Lex(_1088_file, static_cast<jule::I64>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a8d4ad07_FileInfo> _1158_finfo = _1a8d4db1d_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a840da6e_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_1aad98e0d;
				};
				jule::Bool _1254_r;
				jule::Slice<_21ca95427_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8dd19e7_isPassBuildDirectives(_self_, &((*_1158_finfo.alloc)._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1aad98e0d;
				};
				{ jule::Slice<jule::Ptr<_1a819bc91_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*_1158_finfo.alloc)._field_Ast); };
			}
			_iter_next_1aad98e0d:;
			++it;
			goto _iter_begin_1aad98e0d;
		}
		_iter_end_1aad98e0d:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a8dd15b8_Imported(_1a8dce8e6_Importer* _self_, jule::Ptr<_1a838b14a_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad9aedc:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _2053735d0_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1aad9aedc:;
			++it;
			goto _iter_begin_1aad9aedc;
		}
		_iter_end_1aad9aedc:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aada2994:;
			if (it != expr_end) {
				jule::I64 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*_14128_imp.alloc)._field_ModId=_1518_i;
						goto _julec_label_1aada4ac8;
					};
				}
				_iter_next_1aada2994:;
				++it;
				_1518_i++;
				goto _iter_begin_1aada2994;
			}
			_iter_end_1aada2994:;
		};
		(*_14128_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1aada4ac8:;
	};
	{ jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_21ca95427_Log _1a8dd19e7_isPassBuildDirectives(_1a8dce8e6_Importer* _self_, jule::Ptr<_1a819bc91_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_21ca95427_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aada50e5:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1aada50e5;
				};
				_1a8411247_directiveEval _1738_de = _1a8411247_directiveEval{._field_logs=jule::Slice<_21ca95427_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1a84125de_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1aada50e5:;
			++it;
			goto _iter_begin_1aada50e5;
		}
		_iter_end_1aada50e5:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1a8dd5b83_ExprInspector> static__1a8dd5eb3_New(void) {
	return jule::new_ptr<_1a8dd5b83_ExprInspector>(_1a8dd5b83_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1a8dd626b_args(_1a8dd5b83_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaded8ad:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1a8dd6524_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1aaded8ad:;
			++it;
			goto _iter_begin_1aaded8ad;
		}
		_iter_end_1aaded8ad:;
	};
}



inline void _1a8dd6524_inspect(_1a8dd5b83_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aadeec33:;
			{
				jule::Ptr<_1a828a478_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114);;
				_1a8dd6524_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1a8dd6524_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aadeeda9:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113);;
				_1a8dd6524_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aadeec99:;
			{
				jule::Ptr<_1a828b226_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1a828b226_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae04232:;
					if (it != expr_end) {
						jule::Ptr<_1a828ad80_StructArgExprModel> _4416_arg = *it;
						{
							_1a8dd6524_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1aae04232:;
						++it;
						goto _iter_begin_1aae04232;
					}
					_iter_end_1aae04232:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aae00173:;
			{
				jule::Ptr<_1a828b226_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1a828b523_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae0591a:;
					if (it != expr_end) {
						jule::Ptr<_1a828ad80_StructArgExprModel> _4916_arg = *it;
						{
							_1a8dd6524_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1aae0591a:;
						++it;
						goto _iter_begin_1aae0591a;
					}
					_iter_end_1aae0591a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aae001d9:;
			{
				jule::Ptr<_1a828baa6_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96);;
				_1a8dd6524_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aae00250:;
			{
				jule::Ptr<_1a828c458_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
				_1a8dd6524_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1a8dd626b_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1aae002b6:;
			{
				jule::Ptr<_1a828c832_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1a828c832_SliceExprModel>(&__jule_any_type80);;
				_1a8dd626b_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1aae0032c:;
			{
				jule::Ptr<_1a8290769_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1a8290769_ArrayExprModel>(&__jule_any_type88);;
				_1a8dd626b_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aae003a4:;
			{
				jule::Ptr<_1a828ccd8_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43);;
				_1a8dd6524_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1a8dd6524_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1aae0042b:;
			{
				jule::Ptr<_1a828da42_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1a828da42_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae0be93:;
					if (it != expr_end) {
						jule::Ptr<_1a828d668_KeyValPairExprModel> _7116_entry = *it;
						{
							_1a8dd6524_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1a8dd6524_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1aae0be93:;
						++it;
						goto _iter_begin_1aae0be93;
					}
					_iter_end_1aae0be93:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aae004a3:;
			{
				jule::Ptr<_1a828e0c5_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1a828e0c5_SlicingExprModel>(&__jule_any_type95);;
				_1a8dd6524_inspect(_self_, &((*(_768_s))._field_Expr));
				_1a8dd6524_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1a8dd6524_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aae0052a:;
			{
				jule::Ptr<_1a828e658_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1a828e658_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1a8dd6524_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aae005a2:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				_1a8dd6524_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aae00629:;
			{
				jule::Ptr<_1a8290a66_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1a8290a66_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae11a8b:;
					if (it != expr_end) {
						jule::Ptr<_1a85028cc_Data> _9016_d = *it;
						{
							_1a8dd6524_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1aae11a8b:;
						++it;
						goto _iter_begin_1aae11a8b;
					}
					_iter_end_1aae11a8b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aae006a1:;
			{
				jule::Ptr<_1a8291539_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1a8291539_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1a8dd6524_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aae00728:;
			{
				jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1a8290d63_BuiltinPrintCallExprModel>(&__jule_any_type25);;
				_1a8dd6524_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aae007a0:;
			{
				jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1a8291160_BuiltinPrintlnCallExprModel>(&__jule_any_type26);;
				_1a8dd6524_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aae00827:;
			{
				jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1a8291913_BuiltinPanicCallExprModel>(&__jule_any_type27);;
				_1a8dd6524_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aae0089e:;
			{
				jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1a8293519_BuiltinErrorCallExprModel>(&__jule_any_type21);;
				_1a8dd6524_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aae00926:;
			{
				jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1a8291db9_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1a8dd6524_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1a8dd6524_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aae0099d:;
			{
				jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1a8292293_BuiltinAppendCallExprModel>(&__jule_any_type24);;
				_1a8dd6524_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1a8dd6524_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aae00a25:;
			{
				jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1a8292590_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1a8dd6524_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aae00a9c:;
			{
				jule::Ptr<_1a829288c_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1a829288c_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1a8dd6524_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aae00b24:;
			{
				jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1a8292c66_BuiltinDeleteCallExprModel>(&__jule_any_type29);;
				_1a8dd6524_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1a8dd6524_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1aae00b9b:;
			{
				jule::Ptr<_1a8293816_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1a8293816_SizeofExprModel>(&__jule_any_type120);;
				_1a8dd6524_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1aae00c23:;
			{
				jule::Ptr<_1a8293eba_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1a8293eba_AlignofExprModel>(&__jule_any_type121);;
				_1a8dd6524_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aae00c9a:;
			{
				jule::Ptr<_1a8294828_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1a8294828_FreeExprModel>(&__jule_any_type30);;
				_1a8dd6524_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aae00d22:;
			{
				jule::Ptr<_1a829452b_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1a829452b_BackendEmitExprModel>(&__jule_any_type23);;
				_1a8dd626b_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1aadeebbc:;
	};
}



inline void _1a8dd6887_Inspect(_1a8dd5b83_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1a8dd6524_inspect(_self_, _15228_m);
}








inline jule::Bool _1a8ddd064_MetaStrBuilder_eq(_1a8ddd064_MetaStrBuilder *_self_, _1a8ddd064_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1a8dddc35_MetaRuntime_eq(_1a8dddc35_MetaRuntime *_self_, _1a8dddc35_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _1a8dde708_MetaMathCmplx_eq(_1a8dde708_MetaMathCmplx *_self_, _1a8dde708_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _1a8dded13_Meta_eq(_1a8dded13_Meta *_self_, _1a8dded13_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1a8dded13_Meta> static__1a8de01dc_Collect(jule::Ptr<_1a8dd23cc_IR> _7124_ir) {
	jule::Ptr<_1a8dded13_Meta> _727_meta = jule::new_ptr<_1a8dded13_Meta>(_1a8dded13_Meta{._field_Runtime=jule::Ptr<_1a8dddc35_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_1a8ddd064_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_1a8dde708_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_1a8297694_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__1a8de04a6_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__1a8de0770_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__1a8de0a39_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_1a8dddc35_MetaRuntime> static__1a8de04a6_CollectRuntime(jule::Ptr<_1a8dd23cc_IR>* _8032_ir) {
	jule::Ptr<_1a838b14a_ImportInfo> _817_p = _1a8ddb9be_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8dddc35_MetaRuntime> _857_meta = jule::new_ptr<_1a8dddc35_MetaRuntime>(_1a8dddc35_MetaRuntime{._field_ToStr=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Map=jule::Ptr<_1a81be610_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_1a81be610_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_1a85b6793_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_1a85b6b5b_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_1a85b6b5b_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_1a8ddd064_MetaStrBuilder> static__1a8de0770_CollectStrBuilder(jule::Ptr<_1a8dd23cc_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_1a838b14a_ImportInfo> _1097_p = _1a8ddb9be_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a81c246a_StructIns> _1137_b = _1a85395a1_Struct((*((*(_1a838be5e_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1a8ddd064_MetaStrBuilder> _1147_meta = jule::new_ptr<_1a8ddd064_MetaStrBuilder>(_1a8ddd064_MetaStrBuilder{._field_Write=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1a829a752_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_1a81c3515_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_1a81c3515_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_1a81c3515_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_1a81c3515_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_1a8dde708_MetaMathCmplx> static__1a8de0a39_CollectMathCmplx(jule::Ptr<_1a8dd23cc_IR>* _12334_ir) {
	jule::Ptr<_1a838b14a_ImportInfo> _1247_p = _1a8ddb9be_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8dde708_MetaMathCmplx> _1287_meta = jule::new_ptr<_1a8dde708_MetaMathCmplx>(_1a8dde708_MetaMathCmplx{._field_Cmplx=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_1a829a752_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_1a85b6b5b_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_1a81c3515_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_1a81c3515_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}















inline jule::Ptr<_1a512b1da_ObjectDeadCode> static__1a512b6c4_new(jule::Ptr<_1a8dd23cc_IR>* _2621_ir) {
	return jule::new_ptr<_1a512b1da_ObjectDeadCode>(_1a512b1da_ObjectDeadCode{._field_live=_1a512adcc_liveTable{._field_vars=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1a829a752_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1a81c246a_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1a82a2da8_Trait>>(nullptr)}, ._field_ir=(*(_2621_ir))});;
}



inline jule::Bool _1aae7d5ec_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1a81c246a_StructIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1aae802e1:;
			{
				_3311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1aae801ae:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae80225:;
		if (it != expr_end) {
			jule::I64 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1aae80225:;
			++it;
			_447_i++;
			goto _iter_begin_1aae80225;
		}
		_iter_end_1aae80225:;
	};
	return false;;
}

inline jule::Bool _1aae8534b_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829a752_FnIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1a829a752_FnIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1aae86e85:;
			{
				_3311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1aae86db9:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae86e30:;
		if (it != expr_end) {
			jule::I64 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1aae86e30:;
			++it;
			_447_i++;
			goto _iter_begin_1aae86e30;
		}
		_iter_end_1aae86e30:;
	};
	return false;;
}

inline jule::Bool _1aaeaa030_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a82a2da8_Trait>* _3227_t) {
	jule::Slice<jule::Ptr<_1a82a2da8_Trait>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1aaeabc8a:;
			{
				_3311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1aaeabae2:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaeacd57:;
		if (it != expr_end) {
			jule::I64 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1aaeacd57:;
			++it;
			_447_i++;
			goto _iter_begin_1aaeacd57;
		}
		_iter_end_1aaeacd57:;
	};
	return false;;
}

inline jule::Bool _1aaeb525a_isLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83cc1ad_Var>* _3227_t) {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1aaeb6b74:;
			{
				_3311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1aaeb6cc8:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaeb7812:;
		if (it != expr_end) {
			jule::I64 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1aaeb7812:;
			++it;
			_447_i++;
			goto _iter_begin_1aaeb7812;
		}
		_iter_end_1aaeb7812:;
	};
	return false;;
}



inline void _1aae7e07b_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns> _5232_t) {
	{
		
{
			_case_begin_1aae82689:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81c246a_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1aae81b2d:;
	};
}

inline void _1aae86539_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829a752_FnIns> _5232_t) {
	{
		
{
			_case_begin_1aae8999e:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a829a752_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1aae88daa:;
	};
}

inline void _1aaeaa9ae_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a82a2da8_Trait> _5232_t) {
	{
		
{
			_case_begin_1aaeade24:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a2da8_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1aaead341:;
	};
}

inline void _1aaeb8758_pushLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83cc1ad_Var> _5232_t) {
	{
		
{
			_case_begin_1aaeb9407:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1aaeb7dea:;
	};
}



inline void _1a512c076_pushStructAsLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a81c246a_StructIns>* _6538_s) {
	if (_1aae7d5ec_isLive(_self_, _6538_s)) {
		return;;
	};
	_1aae7e07b_pushLive(_self_, (*(_6538_s)));
	_1a512c32e_setReferencesAsLive(_self_, &((*((*(_6538_s))))._field_Refers));
	jule::Bool _713_allLive = _1a512e6c7_isAllMethodsLive((*((*(_6538_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae7d113:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _7215_m = *it;
			{
				{
					auto expr = &((*(_7215_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae842a1:;
					if (it != expr_end) {
						jule::Ptr<_1a829a752_FnIns> _7316_ins = *it;
						{
							if (_1aae8534b_isLive(_self_, &(_7316_ins))) {
								goto _iter_next_1aae842a1;
							};
							if (_713_allLive) {
								_1aae86539_pushLive(_self_, _7316_ins);
								_1a512c32e_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								goto _iter_next_1aae842a1;
							};
							if (_1a8dd8504_IsTraitMethod(_6538_s, &(_7316_ins))) {
								_1aae86539_pushLive(_self_, _7316_ins);
								_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Eq)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Gt)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_GtEq)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Lt)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_LtEq)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shl)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shr)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Add)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Sub)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Div)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mul)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mod)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAnd)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOr)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXor)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Neg)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Pos)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitNot)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_AddAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_SubAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_DivAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_MulAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ModAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShlAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShrAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOrAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAndAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXorAssign)) {
									_1aae86539_pushLive(_self_, _7316_ins);
									_1a512c32e_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1a8297694_Fn> _1119__str = _1a81c3515_FindMethod((*(_6538_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1119__str != nullptr) && static__1a83cd676_Str(_1119__str))) {
								jule::Ptr<_1a829a752_FnIns> _11310_fins = (*_1119__str.alloc)._field_Instances[0LL];;
								_1aae86539_pushLive(_self_, _11310_fins);
								_1a512c32e_setReferencesAsLive(_self_, &((*(_11310_fins))._field_Refers));
							};
						}
						_iter_next_1aae842a1:;
						++it;
						goto _iter_begin_1aae842a1;
					}
					_iter_end_1aae842a1:;
				};
			}
			_iter_next_1aae7d113:;
			++it;
			goto _iter_begin_1aae7d113;
		}
		_iter_end_1aae7d113:;
	};
}



inline void _1a512c32e_setReferencesAsLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a83790c2_ReferenceStack>* _12141_rs) {
	if (((*(_12141_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1257_i = 0LL;;
	for (; (_1257_i < _1a8379831_Len((*(_12141_rs)).ptr())); (_1257_i)++) {
		{
			jule::Any _1278_ref = _1a8379b72_At((*(_12141_rs)).ptr(), _1257_i);;
			{
				auto &_match_expr{ _1278_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1aaea8c21:;
					{
						jule::Ptr<_1a82a2da8_Trait> _1309_t = _1278_ref.unsafe_cast_ptr<_1a82a2da8_Trait>();;
						if (_1aaeaa030_isLive(_self_, &(_1309_t))) {
							goto _iter_next_1aaea7c97;
						};
						_1aaeaa9ae_pushLive(_self_, _1309_t);
						{
							auto expr = &((*(_1309_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aaea9947:;
							if (it != expr_end) {
								jule::Ptr<_1a8297694_Fn> _13517_ins = *it;
								{
									{
										auto expr = &((*(_13517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1aaeae3a8:;
										if (it != expr_end) {
											jule::Ptr<_1a829a752_FnIns> _13618_mins = *it;
											{
												if (_1aae8534b_isLive(_self_, &(_13618_mins))) {
													goto _iter_next_1aaeae3a8;
												};
												_1aae86539_pushLive(_self_, _13618_mins);
												_1a512c32e_setReferencesAsLive(_self_, &((*(_13618_mins))._field_Refers));
											}
											_iter_next_1aaeae3a8:;
											++it;
											goto _iter_begin_1aaeae3a8;
										}
										_iter_end_1aaeae3a8:;
									};
								}
								_iter_next_1aaea9947:;
								++it;
								goto _iter_begin_1aaea9947;
							}
							_iter_end_1aaea9947:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1aaea8a56:;
					{
						jule::Ptr<_1a829a752_FnIns> _1459_f = _1278_ref.unsafe_cast_ptr<_1a829a752_FnIns>();;
						if (_1aae8534b_isLive(_self_, &(_1459_f))) {
							goto _match_end_1aaea8acd;
						};
						if ((((*(_1459_f))._field_Owner != nullptr) && (!((*((*_1459_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1aae7d5ec_isLive(_self_, &((*_1459_f.alloc)._field_Owner))))) {
								_1aae7e07b_pushLive(_self_, (*_1459_f.alloc)._field_Owner);
								_1a512c32e_setReferencesAsLive(_self_, &((*(*(_1459_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1aae86539_pushLive(_self_, _1459_f);
						_1a512c32e_setReferencesAsLive(_self_, &((*_1459_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1aaea8c87:;
					{
						jule::Ptr<_1a83cc1ad_Var> _1589_v = _1278_ref.unsafe_cast_ptr<_1a83cc1ad_Var>();;
						if (_1aaeb525a_isLive(_self_, &(_1589_v))) {
							goto _match_end_1aaea8acd;
						};
						_1aaeb8758_pushLive(_self_, _1589_v);
						_1a512c32e_setReferencesAsLive(_self_, &((*(_1589_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_1aaea8ced:;
					{
						jule::Ptr<_1a81c246a_StructIns> _1659_s = _1278_ref.unsafe_cast_ptr<_1a81c246a_StructIns>();;
						_1a512c076_pushStructAsLive(_self_, &(_1659_s));
					}
				}
				_match_end_1aaea8acd:;
			};
		}
	_iter_next_1aaea7c97:;
	}
	_iter_end_1aaea7c97:;;
}



inline void _1a512c5d7_inits(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _17127_pkg) {
	{
		auto expr = &((*((*(_17127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaea8319:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _17215_file = *it;
			{
				{
					auto expr = &((*(_17215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaebb85a:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _17316_f = *it;
						{
							if ((*(_17316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a829a752_FnIns> _17510_ins = (*(_17316_f))._field_Instances[0LL];;
								if ((!(_1aae8534b_isLive(_self_, &(_17510_ins))))) {
									_1aae86539_pushLive(_self_, _17510_ins);
								};
								_1a512c32e_setReferencesAsLive(_self_, &((*(_17510_ins))._field_Refers));
							};
						}
						_iter_next_1aaebb85a:;
						++it;
						goto _iter_begin_1aaebb85a;
					}
					_iter_end_1aaebb85a:;
				};
			}
			_iter_next_1aaea8319:;
			++it;
			goto _iter_begin_1aaea8319;
		}
		_iter_end_1aaea8319:;
	};
}



inline void _1a512c890_collectLivePackage(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _18540_pkg) {
	_1a512c5d7_inits(_self_, _18540_pkg);
	_1a8dd50d3_IterFiles(_18540_pkg, jule::__new_closure<void,jule::Ptr<_1a829d997_SymTab>*>((void*)__jule_anon_1aaebe5a5, jule::Ptr<__jule_anon_1aaebe5a5_ctx>::make(__jule_anon_1aaebe5a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaebe5a5_ctx_handler));
	if (_205384910_Test) {
		if ((((*((*(_18540_pkg))))._field_Files.len() > 0LL) && _1a8dd8878_IsStdPackage((*((*((*((*(_18540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1a81be610_Struct> _2159_s = _1a838ea88_FindStruct((*(_18540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1a81c246a_StructIns> _2169_ins = (*(_2159_s))._field_Instances[0LL];;
			_1a512c076_pushStructAsLive(_self_, &(_2169_ins));
			{
				auto expr = &((*(_2169_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1aaec5c71:;
				if (it != expr_end) {
					jule::Ptr<_1a8297694_Fn> _21817_m = *it;
					{
						{
							auto expr = &((*(_21817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aaec6700:;
							if (it != expr_end) {
								jule::Ptr<_1a829a752_FnIns> _21918_mins = *it;
								{
									if (_1aae8534b_isLive(_self_, &(_21918_mins))) {
										goto _iter_next_1aaec6700;
									};
									_1aae86539_pushLive(_self_, _21918_mins);
									_1a512c32e_setReferencesAsLive(_self_, &((*(_21918_mins))._field_Refers));
								}
								_iter_next_1aaec6700:;
								++it;
								goto _iter_begin_1aaec6700;
							}
							_iter_end_1aaec6700:;
						};
					}
					_iter_next_1aaec5c71:;
					++it;
					goto _iter_begin_1aaec5c71;
				}
				_iter_end_1aaec5c71:;
			};
		};
		{
			auto expr = &((*((*(_18540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaec3312:;
			if (it != expr_end) {
				jule::Ptr<_1a829d997_SymTab> _22816_file = *it;
				{
					{
						auto expr = &((*(_22816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaec8db7:;
						if (it != expr_end) {
							jule::Ptr<_1a8297694_Fn> _22917_f = *it;
							{
								if (_1a8dd9acc_HasDirective(&((*(_22917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1a829a752_FnIns> _23111_ins = (*_22917_f.alloc)._field_Instances[0LL];;
									if ((!(_1aae8534b_isLive(_self_, &(_23111_ins))))) {
										_1aae86539_pushLive(_self_, _23111_ins);
									};
									_1a512c32e_setReferencesAsLive(_self_, &((*(_23111_ins))._field_Refers));
								};
							}
							_iter_next_1aaec8db7:;
							++it;
							goto _iter_begin_1aaec8db7;
						}
						_iter_end_1aaec8db7:;
					};
				}
				_iter_next_1aaec3312:;
				++it;
				goto _iter_begin_1aaec3312;
			}
			_iter_end_1aaec3312:;
		};
	};
}



inline void _1a512ca8d_collectLive(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaeca957:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _24315_used = *it;
			{
				if ((!((*(_24315_used))._field_Binded))) {
					_1a512c890_collectLivePackage(_self_, &((*_24315_used.alloc)._field_Package));
				};
			}
			_iter_next_1aaeca957:;
			++it;
			goto _iter_begin_1aaeca957;
		}
		_iter_end_1aaeca957:;
	};
	_1a512c890_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a8297694_Fn> _2517_main = _1a838ee84_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2517_main != nullptr)) {
		jule::Ptr<_1a829a752_FnIns> _2538_ins = (*_2517_main.alloc)._field_Instances[0LL];;
		if ((!(_1aae8534b_isLive(_self_, &(_2538_ins))))) {
			_1aae86539_pushLive(_self_, _2538_ins);
		};
		_1a512c32e_setReferencesAsLive(_self_, &((*(_2538_ins))._field_Refers));
	};
}



inline void _1a512cd46_removeDeadGlobals(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _26139_vars) {
	jule::I64 _2627_i = 0LL;;
	while ((_2627_i < (*(_26139_vars)).len())) {
		{
			jule::Ptr<_1a83cc1ad_Var> _2644_v = (*(_26139_vars))[_2627_i];;
			if (_1aaeb525a_isLive(_self_, &(_2644_v))) {
				(_2627_i)++;
				goto _iter_next_1aaed55bb;
			};
			(*(_26139_vars))=jule::append((*(_26139_vars)).slice(0LL, _2627_i),(*(_26139_vars)).slice((_2627_i + 1LL)));
		}
	_iter_next_1aaed55bb:;
	}
	_iter_end_1aaed55bb:;;
}



inline void _1a512d0ee_removeDeadFns(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8297694_Fn>>* _27335_funcs) {
	jule::I64 _2747_i = 0LL;;
	while ((_2747_i < (*(_27335_funcs)).len())) {
		{
			jule::Ptr<_1a8297694_Fn> _2768_f = (*(_27335_funcs))[_2747_i];;
			jule::I64 _2778_j = 0LL;;
			while ((_2778_j < (*(_2768_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a829a752_FnIns> _2795_ins = (*(_2768_f))._field_Instances[_2778_j];;
					if (_1aae8534b_isLive(_self_, &(_2795_ins))) {
						(_2778_j)++;
						goto _iter_next_1aaed7e70;
					};
					(*_2768_f.alloc)._field_Instances=jule::append((*_2768_f.alloc)._field_Instances.slice(0LL, _2778_j),(*_2768_f.alloc)._field_Instances.slice((_2778_j + 1LL)));
				}
			_iter_next_1aaed7e70:;
			}
			_iter_end_1aaed7e70:;;
			if (((*_2768_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_27335_funcs))=jule::append((*(_27335_funcs)).slice(0LL, _2747_i),(*(_27335_funcs)).slice((_2747_i + 1LL)));
				goto _iter_next_1aaed7128;
			};
			(_2747_i)++;
		}
	_iter_next_1aaed7128:;
	}
	_iter_end_1aaed7128:;;
}



inline void _1a512d3a7_removeDeadStructs(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a81be610_Struct>>* _29439_structs) {
	jule::I64 _2957_i = 0LL;;
	while ((_2957_i < (*(_29439_structs)).len())) {
		{
			jule::Ptr<_1a81be610_Struct> _2978_s = (*(_29439_structs))[_2957_i];;
			jule::I64 _2988_j = 0LL;;
			while ((_2988_j < (*(_2978_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a81c246a_StructIns> _3009_ins = (*(_2978_s))._field_Instances[_2988_j];;
					_1a512d0ee_removeDeadFns(_self_, &((*(_3009_ins))._field_Methods));
					if ((((*_3009_ins.alloc)._field_Methods.len() != 0LL) || _1aae7d5ec_isLive(_self_, &(_3009_ins)))) {
						(_2988_j)++;
						goto _iter_next_1aaedbb22;
					};
					(*_2978_s.alloc)._field_Instances=jule::append((*_2978_s.alloc)._field_Instances.slice(0LL, _2988_j),(*_2978_s.alloc)._field_Instances.slice((_2988_j + 1LL)));
				}
			_iter_next_1aaedbb22:;
			}
			_iter_end_1aaedbb22:;;
			if (((*_2978_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_29439_structs))=jule::append((*(_29439_structs)).slice(0LL, _2957_i),(*(_29439_structs)).slice((_2957_i + 1LL)));
				goto _iter_next_1aaedacca;
			};
			(_2957_i)++;
		}
	_iter_next_1aaedacca:;
	}
	_iter_end_1aaedacca:;;
}



inline void _1a512d660_removeDeadTraits(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a82a2da8_Trait>>* _31638_traits) {
	jule::I64 _3177_i = 0LL;;
	while ((_3177_i < (*(_31638_traits)).len())) {
		{
			jule::Ptr<_1a82a2da8_Trait> _3198_t = (*(_31638_traits))[_3177_i];;
			if ((!(_1aaeaa030_isLive(_self_, &(_3198_t))))) {
				(*(_31638_traits))=jule::append((*(_31638_traits)).slice(0LL, _3177_i),(*(_31638_traits)).slice((_3177_i + 1LL)));
				goto _iter_next_1aaee04d8;
			};
			jule::I64 _3248_j = 0LL;;
			while ((_3248_j < (*(_3198_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a81be610_Struct> _3265_s = (*(_3198_t))._field_Implemented[_3248_j];;
					if (((*(_3265_s))._field_Instances.len() > 0LL)) {
						(_3248_j)++;
						goto _iter_next_1aaee0e34;
					};
					(*_3198_t.alloc)._field_Implemented=jule::append((*_3198_t.alloc)._field_Implemented.slice(0LL, _3248_j),(*_3198_t.alloc)._field_Implemented.slice((_3248_j + 1LL)));
				}
			_iter_next_1aaee0e34:;
			}
			_iter_end_1aaee0e34:;;
			(_3177_i)++;
		}
	_iter_next_1aaee04d8:;
	}
	_iter_end_1aaee04d8:;;
}



inline void _1a512d918_removeDeadsFile(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a829d997_SymTab>* _33737_file) {
	_1a512d0ee_removeDeadFns(_self_, &((*((*(_33737_file))))._field_Funcs));
	_1a512d3a7_removeDeadStructs(_self_, &((*((*(_33737_file))))._field_Structs));
	_1a512d660_removeDeadTraits(_self_, &((*((*(_33737_file))))._field_Traits));
	_1a512cd46_removeDeadGlobals(_self_, &((*((*(_33737_file))))._field_Vars));
}



inline void _1a512dbc1_removeDeadsPackage(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_, jule::Ptr<_1a838d8bc_Package>* _34440_pkg) {
	{
		auto expr = &((*((*(_34440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaee59e9:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _34515_file = *it;
			{
				_1a512d918_removeDeadsFile(_self_, &(_34515_file));
			}
			_iter_next_1aaee59e9:;
			++it;
			goto _iter_begin_1aaee59e9;
		}
		_iter_end_1aaee59e9:;
	};
}



inline void _1a512ddbe_removeDeads(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaee6874:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _35115_used = *it;
			{
				if ((!((*(_35115_used))._field_Binded))) {
					_1a512dbc1_removeDeadsPackage(_self_, &((*_35115_used.alloc)._field_Package));
				};
			}
			_iter_next_1aaee6874:;
			++it;
			goto _iter_begin_1aaee6874;
		}
		_iter_end_1aaee6874:;
	};
	_1a512dbc1_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a512e0bc_elimanate(jule::Ptr<_1a512b1da_ObjectDeadCode> _self_) {
	_1a512ca8d_collectLive(_self_);
	_1a512ddbe_removeDeads(_self_);
}








inline jule::Bool _1a5130310_scopeDeadCode_eq(_1a5130310_scopeDeadCode *_self_, _1a5130310_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1a513082c_optimizeChild(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _1935_s) {
	jule::Ptr<_1a5130310_scopeDeadCode> _207_sdc = jule::new_ptr<_1a5130310_scopeDeadCode>(_1a5130310_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a5133247_optimizeStmts(_207_sdc);
	};
}



inline void _1a5130ad5_optimizeBodyChildExceptional(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _2950_s) {
	jule::Ptr<_1a5130310_scopeDeadCode> _307_sdc = jule::new_ptr<_1a5130310_scopeDeadCode>(_1a5130310_scopeDeadCode{._field_parent=jule::Ptr<_1a5130310_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a5133247_optimizeStmts(_307_sdc);
	};
}



inline void _1a5130d8d_optimizeBodyChild(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8355466_Scope>* _3939_s) {
	jule::Ptr<_1a5130310_scopeDeadCode> _407_sdc = jule::new_ptr<_1a5130310_scopeDeadCode>(_1a5130310_scopeDeadCode{._field_parent=jule::Ptr<_1a5130310_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1a5133247_optimizeStmts(_407_sdc);
	};
}



inline void _1a5131146_optimizeExprModel(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1a5134897_exprDeadCode _493_edc = static__1a5134cb5_new(&(_self_));;
	_1a513506d_optimize(&_493_edc, _4839_model);
}



inline void _1a5131344_eliminateFollowed(_1a5130310_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a5130310_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1ab006972:;
	}
	_iter_end_1ab006972:;;
}



inline void _1a51315ec_pushGoto(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8358623_GotoSt> _6929_gt) {
	jule::I64 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ab009ca5:;
	}
	_iter_end_1ab009ca5:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8358623_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1a51318a5_pushLabel(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8357eb3_Label> _7930_l) {
	jule::I64 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ab00bea5;
			};
			(_807_i)++;
		}
	_iter_next_1ab00bea5:;
	}
	_iter_end_1ab00bea5:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8357eb3_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1a5131b5d_optimizeRangeIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835729d_RangeIter> _9238_it) {
	_1a5131146_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1a5130d8d_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1a5131e16_optimizeWhileIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8356852_WhileIter> _9738_it) {
	_1a5131146_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1a5133049_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1a5130d8d_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1a51321be_optimizeInfIter(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835639b_InfIter> _10536_it) {
	_1a5130d8d_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1a5132477_optimizeConditional(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a835609e_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab013c6a:;
		if (it != expr_end) {
			jule::Ptr<_1a8355884_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1a5131146_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1a5130d8d_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ab013c6a:;
			++it;
			goto _iter_begin_1ab013c6a;
		}
		_iter_end_1ab013c6a:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a513082c_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a5130d8d_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a5132730_optimizeMatch(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8359b96_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab017301:;
		if (it != expr_end) {
			jule::Ptr<_1a835a6be_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab017d18:;
					if (it != expr_end) {
						jule::Ptr<_1a85028cc_Data> _12916_expr = *it;
						{
							_1a5131146_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1ab017d18:;
						++it;
						goto _iter_begin_1ab017d18;
					}
					_iter_end_1ab017d18:;
				};
				_1a5130d8d_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1ab017301:;
			++it;
			goto _iter_begin_1ab017301;
		}
		_iter_end_1ab017301:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a513082c_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a5130d8d_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a51329d8_optimizeAssign(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8358ea3_Assign> _14535_assign) {
	_1a5131146_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1a5131146_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a5132c91_optimizeMultiAssign(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Ptr<_1a8359459_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab01c14c:;
		if (it != expr_end) {
			jule::Ptr<_1a85028cc_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1a5131146_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1ab01c14c:;
			++it;
			goto _iter_begin_1ab01c14c;
		}
		_iter_end_1ab01c14c:;
	};
	_1a5131146_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1a5133049_optimizeStmt(jule::Ptr<_1a5130310_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ab01dcec:;
			{
				jule::Ptr<_1a8355466_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1a8355466_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1a5133544_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1a513082c_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab01da66:;
			{
				_1a5131b5d_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1a835729d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab01dd74:;
			{
				_1a5131e16_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1a8356852_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ab01ddeb:;
			{
				_1a51321be_optimizeInfIter(_self_, _15933_st.cast_ptr<_1a835639b_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab01de73:;
			{
				_1a5132477_optimizeConditional(_self_, _15933_st.cast_ptr<_1a835609e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab01deea:;
			{
				_1a5132730_optimizeMatch(_self_, _15933_st.cast_ptr<_1a8359b96_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ab01e072:;
			{
				_1a51329d8_optimizeAssign(_self_, _15933_st.cast_ptr<_1a8358ea3_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab01e0e9:;
			{
				_1a5132c91_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1a8359459_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab01e171:;
			{
				jule::Ptr<_1a85028cc_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1a85028cc_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ab01db98;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type27) {
						_case_begin_1ab0248d5:;
						{
							_1a5131344_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ab025056:;
						{
							_1a5131146_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1ab024ee0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab01e1e8:;
			{
				_1a5131344_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ab01e270:;
			{
				_1a51315ec_pushGoto(_self_, _15933_st.cast_ptr<_1a8358623_GotoSt>(&__jule_any_type39));
				_1a5131344_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab01e2e7:;
			{
				_1a51318a5_pushLabel(_self_, _15933_st.cast_ptr<_1a8357eb3_Label>(&__jule_any_type19));
			}
		}
		_match_end_1ab01db98:;
	};
}



inline void _1a5133247_optimizeStmts(jule::Ptr<_1a5130310_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a5133049_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ab027be6:;
	}
	_iter_end_1ab027be6:;;
}








inline jule::Bool _1a5134897_exprDeadCode_eq(_1a5134897_exprDeadCode *_self_, _1a5134897_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1a5134897_exprDeadCode static__1a5134cb5_new(jule::Ptr<_1a5130310_scopeDeadCode>* _1421_s) {
	return _1a5134897_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1a513506d_optimize(_1a5134897_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1a8dd5b83_ExprInspector> _217_inspector = static__1a8dd5eb3_New();;
	_1a8dd6887_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ab02a842, jule::Ptr<__jule_anon_1ab02a842_ctx>::make(__jule_anon_1ab02a842_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab02a842_ctx_handler));
}








inline jule::Bool _1a43ddb63_anyData_eq(_1a43ddb63_anyData *_self_, _1a43ddb63_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}






inline jule::Bool _1a43e10a5_ExceptionalForwardingExprModel_eq(_1a43e10a5_ExceptionalForwardingExprModel *_self_, _1a43e10a5_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1a43e1292_FnCallIgnoreExceptionalExprModel_eq(_1a43e1292_FnCallIgnoreExceptionalExprModel *_self_, _1a43e1292_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a43e1638_SwapExprModel_eq(_1a43e1638_SwapExprModel *_self_, _1a43e1638_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a43e1a56_EmptyCompareExprModel_eq(_1a43e1a56_EmptyCompareExprModel *_self_, _1a43e1a56_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1a43e1d53_RefExprModel_eq(_1a43e1d53_RefExprModel *_self_, _1a43e1d53_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1a43e2309_StrCompExprModel_eq(_1a43e2309_StrCompExprModel *_self_, _1a43e2309_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1a43e288c_MutSlicingExprModel_eq(_1a43e288c_MutSlicingExprModel *_self_, _1a43e288c_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1a43e2c22_UnsafeBinaryExprModel_eq(_1a43e2c22_UnsafeBinaryExprModel *_self_, _1a43e2c22_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a43e301e_UnsafeIndexingExprModel_eq(_1a43e301e_UnsafeIndexingExprModel *_self_, _1a43e301e_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1a43e33e8_PushToSliceExprModel_eq(_1a43e33e8_PushToSliceExprModel *_self_, _1a43e33e8_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1a43e37c2_AppendToSliceExprModel_eq(_1a43e37c2_AppendToSliceExprModel *_self_, _1a43e37c2_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1a43e3b9b_StrRuneIter_eq(_1a43e3b9b_StrRuneIter *_self_, _1a43e3b9b_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1a43e3e98_UnsafeDerefExprModel_eq(_1a43e3e98_UnsafeDerefExprModel *_self_, _1a43e3e98_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a43e4295_UnsafeCastingExprModel_eq(_1a43e4295_UnsafeCastingExprModel *_self_, _1a43e4295_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1a43e4dbc_nilVar_eq(_1a43e4dbc_nilVar *_self_, _1a43e4dbc_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1a43e56a3_pushVar(_1a43e520d_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1a440dc71_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0818a9:;
		if (it != expr_end) {
			_1a43e4dbc_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1ab0818a9:;
			++it;
			goto _iter_begin_1ab0818a9;
		}
		_iter_end_1ab0818a9:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab08215c:;
		if (it != expr_end) {
			_1a43e4dbc_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1ab08215c:;
			++it;
			goto _iter_begin_1ab08215c;
		}
		_iter_end_1ab08215c:;
	};
	{ jule::Slice<_1a43e4dbc_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a43e4dbc_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1a43e59e4_removeVar(_1a43e520d_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab0840e8:;
			if (it != expr_end) {
				_1a43e4dbc_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ab0840e8:;
				++it;
				goto _iter_begin_1ab0840e8;
			}
			_iter_end_1ab0840e8:;
		};
	};
	return false;;
}



inline jule::Bool _1a43e5d35_isSafe(_1a43e520d_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab08578c:;
			if (it != expr_end) {
				_1a43e4dbc_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1ab08578c:;
				++it;
				goto _iter_begin_1ab08578c;
			}
			_iter_end_1ab08578c:;
		};
	};
	return false;;
}








inline jule::Bool _1a43e7d7b_scopeOptimizer_eq(_1a43e7d7b_scopeOptimizer *_self_, _1a43e7d7b_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a43e7d7b_scopeOptimizer> static__1a43e83ed_new(jule::Ptr<_1a8355466_Scope> _2320_scope) {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _247_sc = jule::new_ptr<_1a43e7d7b_scopeOptimizer>(_1a43e7d7b_scopeOptimizer{._field_parent=jule::Ptr<_1a43e7d7b_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1a4408b28_data>(_1a4408b28_data{._field_boundary=jule::new_ptr<_1a440a410_boundary>(_1a440a410_boundary{._field_vars=jule::Slice<_1a440a0be_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1a43e520d_nils>(_1a43e520d_nils{._field_vars=jule::Slice<_1a43e4dbc_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1a4405c46_dynamic>(_1a4405c46_dynamic{._field_vars=jule::Slice<_1a4405905_dynamicVar>(nullptr)}), ._field_flags=0LL})});;
	return _247_sc;;
}



inline void _1a43e86a6_setCurrentStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1a43e88a4_removeCurrent(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a43e8b3a_isLastStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_) {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ab092953:;
	}
	_iter_end_1ab092953:;;
	return true;;
}



inline jule::Bool _1a43e8dc1_isIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_) {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type33) {
					_case_begin_1ab0952a2:;
					{
						return true;;
					}
				}
				_match_end_1ab095208:;
			};
		}
	_iter_next_1ab093d83:;
	}
	_iter_end_1ab093d83:;;
	return false;;
}



inline void _1a43e9179_optimizeData(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a85028cc_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab09646d:;
			{
				jule::Ptr<_1a828c458_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1a828c458_FnCallExprModel>();;
				if (_2053852c3_Production) {
					if (((!(_1a829bc1a_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1a8dd8878_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1a43e86a6_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a440027e_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a502080a_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a8dd7613_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1a43e8b3a_isLastStmt(_self_)) && (!(_1a43e8dc1_isIter(_self_))))) {
					_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e10a5_ExceptionalForwardingExprModel>(_1a43e10a5_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_1ab0963e6:;
	};
	jule::I64 _943_dataFlags = (*((*_self_.alloc)._field_data))._field_flags;;
	(*(*(_self_))._field_data.alloc)._field_flags|=static_cast<jule::I64>(1LL);
	static__1a440027e_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
	(*(*(_self_))._field_data.alloc)._field_flags=_943_dataFlags;
}



inline void _1a43e9432_optimizeVar(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a83cc1ad_Var> _10032_v) {
	if (((*(_10032_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a43e686e_isNilValidType((*((*_10032_v.alloc)._field_TypeSym))._field_Type)) && _1a43e65a5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a43e56a3_pushVar((*((*(_self_))._field_data))._field_nils, _1a43e6bb0_getNilVar(jule::Any(_10032_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a8535877_Type> _1099_kind = _1a440751c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_10032_v))._field_TypeSym.alloc)._field_Type, (*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1099_kind != nullptr)) {
				if (_1a44070dd_isDynamicValidType((*(*(_10032_v))._field_TypeSym.alloc)._field_Type)) {
					_1a44061db_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a440785d_getDynamicVar(jule::Any(_10032_v, &__jule_any_type7)), _1099_kind);
				};
			};
		};
		static__1a440027e_optimizeData(&((*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a43e96da_optimizeConditional(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835609e_Conditional> _12140_c) {
	_1a4408551_dataCheckpoint _1227_checkpoint = _1a4408ed0_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0a8936:;
		if (it != expr_end) {
			jule::Ptr<_1a8355884_If> _12315_elif = *it;
			{
				static__1a440027e_optimizeData(&((*(_12315_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a43ec6aa_optimizeChild(_self_, (*_12315_elif.alloc)._field_Scope);
				if ((((*(_12140_c))._field_Elifs.len() > 1LL) || ((*_12140_c.alloc)._field_Default != nullptr))) {
					_1a4409288_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
				};
			}
			_iter_next_1ab0a8936:;
			++it;
			goto _iter_begin_1ab0a8936;
		}
		_iter_end_1ab0a8936:;
	};
	if (((*_12140_c.alloc)._field_Default != nullptr)) {
		_1a43ec6aa_optimizeChild(_self_, (*(*(_12140_c))._field_Default.alloc)._field_Scope);
		_1a4409288_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
	};
	if ((!(_1a501ecb0_Cond))) {
		return;;
	};
	jule::Bool _1397_constCase = false;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0ac5b6:;
		if (it != expr_end) {
			jule::I64 _1428_i = it - expr->begin();
			jule::Ptr<_1a8355884_If> _14215_elif = *it;
			{
				if ((!(_1a43ecc3d_isConstantValidConditionalCase(&(_14215_elif))))) {
					goto _iter_next_1ab0ac5b6;
				};
				_1397_constCase=true;
				((*(_12140_c))._field_Elifs).mut_slice(0LL, _1428_i);;
				(*_12140_c.alloc)._field_Default=jule::new_ptr<_1a8355b81_Else>(_1a8355b81_Else{._field_Scope=(*(_14215_elif))._field_Scope});
				goto _iter_end_1ab0ac5b6;
			}
			_iter_next_1ab0ac5b6:;
			++it;
			_1428_i++;
			goto _iter_begin_1ab0ac5b6;
		}
		_iter_end_1ab0ac5b6:;
	};
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a8355884_If>* _1597_i = (&((*(_12140_c))._field_Elifs[0LL]));;
	jule::Ptr<_1a8355884_If>* _1603_end = (&((*_12140_c.alloc)._field_Elifs[((*_12140_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1597_i <= _1603_end); (_1597_i)++) {
		{
			{
				if (_1a43ed656_isUnreachableConditionalCase(&((*(_1597_i))))) {
					(*(_1597_i))=nullptr;
				};
			};
		}
	_iter_next_1ab0b0b80:;
	}
	_iter_end_1ab0b0b80:;;
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1397_constCase))) {
		return;;
	};
	jule::I64 _1787_only = -1LL;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0b2599:;
		if (it != expr_end) {
			jule::I64 _1797_j = it - expr->begin();
			jule::Ptr<_1a8355884_If> _17910_elif = *it;
			{
				if ((_17910_elif != nullptr)) {
					if ((_1787_only != -1LL)) {
						return;;
					};
					_1787_only=_1797_j;
				};
			}
			_iter_next_1ab0b2599:;
			++it;
			_1797_j++;
			goto _iter_begin_1ab0b2599;
		}
		_iter_end_1ab0b2599:;
	};
	if ((_1787_only != -1LL)) {
		_1a43e86a6_setCurrentStmt(_self_, jule::Any((*((*_12140_c.alloc)._field_Elifs[_1787_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1a43e9b08_buildDefaultConstantTrueCase(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835a6be_Case> _19549_case, jule::I64* _19573_i, jule::Ptr<_1a8359b96_Match>* _19586_m) {
	(*(_19549_case))._field_Exprs=nullptr;
	jule::I64 _1973_start = (*(_19573_i));;
	_julec_label_1ab0b548c:;
	for (;;) {
		{
			if (((*((*_19549_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ab0b5437;
			};
			jule::Any *_2039_stmt = &((*(*(_19549_case))._field_Scope.alloc)._field_Stmts[((*(*(_19549_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2039_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1ab0b73a1:;
					{
						((*(_19573_i)))++;
						if (((*(_19573_i)) >= (*((*(_19586_m))))._field_Cases.len())) {
							(*(_2039_stmt))=jule::Any((*((*((*(_19586_m))))._field_Default))._field_Scope, &__jule_any_type20);
							goto _iter_end_1ab0b5437;
						};
						_19549_case=(*((*(_19586_m))))._field_Cases[(*(_19573_i))];
						(*(_2039_stmt))=jule::Any((*_19549_case.alloc)._field_Scope, &__jule_any_type20);
					}
				}
				else {
					_case_begin_1ab0b747d:;
					{
						goto _iter_end_1ab0b5437;
					}
				}
				_match_end_1ab0b733a:;
			};
		}
	_iter_next_1ab0b5437:;
	}
	_iter_end_1ab0b5437:;;
	(*((*(_19586_m))))._field_Default=(*((*(_19586_m))))._field_Cases[_1973_start];
	((*((*(_19586_m))))._field_Cases).mut_slice(0LL, _1973_start);;
}



inline void _1a43e9db1_optimizeMatch(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359b96_Match> _22134_m) {
	jule::Uintptr _2227_var = 0LLU;;
	if ((_1a5020d6b_Dynamic && (*(_22134_m))._field_TypeMatch)) {
		_2227_var=_1a440785d_getDynamicVar((*((*_22134_m.alloc)._field_Expr))._field_Model);
	};
	_1a4408551_dataCheckpoint _2267_checkpoint = _1a4408ed0_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0bb31c:;
		if (it != expr_end) {
			jule::Ptr<_1a835a6be_Case> _22715_case = *it;
			{
				{
					auto expr = &((*(_22715_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab0bbcac:;
					if (it != expr_end) {
						jule::Ptr<_1a85028cc_Data> _22816_expr = *it;
						{
							static__1a440027e_optimizeData(&((*(_22816_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ab0bbcac:;
						++it;
						goto _iter_begin_1ab0bbcac;
					}
					_iter_end_1ab0bbcac:;
				};
				if ((((*_22715_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a8535877_Type> _2339_kind = _1a440751c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22715_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2339_kind != nullptr)) {
						_1a44061db_pushVar((*((*(_self_))._field_data))._field_dynamic, _2227_var, _2339_kind);
					} else {
						_1a440652c_removeVar((*((*(_self_))._field_data))._field_dynamic, _2227_var);
					};
				};
				_1a43ec6aa_optimizeChild(_self_, (*_22715_case.alloc)._field_Scope);
				if ((((*_22134_m.alloc)._field_Cases.len() > 1LL) || ((*_22134_m.alloc)._field_Default != nullptr))) {
					_1a4409288_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
				};
			}
			_iter_next_1ab0bb31c:;
			++it;
			goto _iter_begin_1ab0bb31c;
		}
		_iter_end_1ab0bb31c:;
	};
	if (((*_22134_m.alloc)._field_Default != nullptr)) {
		_1a43ec6aa_optimizeChild(_self_, (*(*(_22134_m))._field_Default.alloc)._field_Scope);
		_1a4409288_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
	};
	if ((!(_1a501ecb0_Cond))) {
		return;;
	};
	jule::Bool _2547_constCase = false;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0c36dc:;
		if (it != expr_end) {
			jule::I64 _25712_i = it - expr->begin();
			jule::Ptr<_1a835a6be_Case> _25719_case = *it;
			{
				if ((!(_1a43ed315_isConstantValidMatchCase(&(_25719_case))))) {
					goto _iter_next_1ab0c36dc;
				};
				_2547_constCase=true;
				_1a43e9b08_buildDefaultConstantTrueCase(_self_, _25719_case, &(_25712_i), &(_22134_m));
				goto _iter_end_1ab0c36dc;
			}
			_iter_next_1ab0c36dc:;
			++it;
			_25712_i++;
			goto _iter_begin_1ab0c36dc;
		}
		_iter_end_1ab0c36dc:;
	};
	if (((*_22134_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a835a6be_Case>* _2717_i = (&((*(_22134_m))._field_Cases[0LL]));;
	jule::Ptr<_1a835a6be_Case>* _2723_end = (&((*_22134_m.alloc)._field_Cases[((*_22134_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2717_i <= _2723_end); (_2717_i)++) {
		{
			{
				if (_1a43ed8dc_isUnreachableMatchCase(&((*(_2717_i))))) {
					(*(_2717_i))=nullptr;
				};
			};
		}
	_iter_next_1ab0c628e:;
	}
	_iter_end_1ab0c628e:;;
	if ((!(_2547_constCase))) {
		return;;
	};
	jule::I64 _2867_only = -1LL;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0c757b:;
		if (it != expr_end) {
			jule::I64 _2877_j = it - expr->begin();
			jule::Ptr<_1a835a6be_Case> _28710_case = *it;
			{
				if ((_28710_case != nullptr)) {
					if ((_2867_only != -1LL)) {
						return;;
					};
					_2867_only=_2877_j;
				};
			}
			_iter_next_1ab0c757b:;
			++it;
			_2877_j++;
			goto _iter_begin_1ab0c757b;
		}
		_iter_end_1ab0c757b:;
	};
	if ((_2867_only != -1LL)) {
		_1a43e86a6_setCurrentStmt(_self_, jule::Any((*((*_22134_m.alloc)._field_Cases[_2867_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1a43ea169_optimizeRangeIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835729d_RangeIter> _30338_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30338_it))._field_KeyA != nullptr))) {
		_1a440a8a5_pushVar((*((*(_self_))._field_data))._field_boundary, _1a440c841_getBoundaryVar((*((*_30338_it.alloc)._field_Expr))._field_Model), jule::Any((*_30338_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1a43ec6aa_optimizeChild(_self_, (*_30338_it.alloc)._field_Scope);
	if (_1a5020ab3_Iter) {
		{
			auto &_match_expr{ (*((*(_30338_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1ab0cc295:;
				{
					jule::Ptr<_1a828baa6_CastingExprModel> _3159_cem = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a828baa6_CastingExprModel>();;
					jule::Ptr<_1a853d990_Prim> _3165_eprim = _1a853802d_Prim((*(_3159_cem))._field_ExprType.ptr());;
					if (((_3165_eprim == nullptr) || (!(_1a8541e5a_IsStr(_3165_eprim.ptr()))))) {
						goto _match_end_1ab0cc20c;
					};
					jule::Ptr<_1a8542e8e_Slc> _3209_s = _1a8539084_Slc((*_3159_cem.alloc)._field_Type.ptr());;
					if ((_3209_s == nullptr)) {
						goto _match_end_1ab0cc20c;
					};
					jule::Ptr<_1a853d990_Prim> _3245_prim = _1a853802d_Prim((*(_3209_s))._field_Elem.ptr());;
					if ((_3245_prim == nullptr)) {
						goto _match_end_1ab0cc20c;
					};
					{
						
						if (_1a85403ba_IsU8(_3245_prim.ptr())) {
							_case_begin_1ab0d0c05:;
							{
								(*_30338_it.alloc)._field_Expr=(*_3159_cem.alloc)._field_Expr;
							}
						}
						else if (_1a853ed9d_IsI32(_3245_prim.ptr())) {
							_case_begin_1ab0d0dd1:;
							{
								static__1a440027e_optimizeData(&((*((*_3159_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e3b9b_StrRuneIter>(_1a43e3b9b_StrRuneIter{._field_Expr=(*_3159_cem.alloc)._field_Expr, ._field_Base=_30338_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_1ab0d0a18:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_1ab0cbccd:;
				{
					jule::Ptr<_1a828c832_SliceExprModel> _3459_slc = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a828c832_SliceExprModel>();;
					jule::Ptr<_1a85452b0_Arr> _3469_arr = jule::new_ptr<_1a85452b0_Arr>(_1a85452b0_Arr{._field_Auto=false, ._field_N=(*(_3459_slc))._field_Elems.len(), ._field_Elem=(*_3459_slc.alloc)._field_ElemType});;
					(*((*(*(_30338_it))._field_Expr.alloc)._field_Type))._field_Kind=jule::Trait(_3469_arr, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27);
					(*(*(_30338_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_1a8290769_ArrayExprModel>(_1a8290769_ArrayExprModel{._field_Kind=_3469_arr, ._field_Elems=(*_3459_slc.alloc)._field_Elems}), &__jule_any_type88);
				}
			}
			_match_end_1ab0cc20c:;
		};
	};
	static__1a440027e_optimizeData(&((*(*(_30338_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a43ea422_optimizeWhileIter(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8356852_WhileIter> _36038_it) {
	static__1a440027e_optimizeData(&((*(_36038_it))._field_Expr), &((*(_self_))._field_data));
	_1a43ec402_optimizeStmt(_self_, (*_36038_it.alloc)._field_Next);
	_1a43ec6aa_optimizeChild(_self_, (*_36038_it.alloc)._field_Scope);
}



inline jule::Bool _1a43ea763_substr(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _36627_a) {
	if (((*((*(_36627_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_36627_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab0db260:;
			{
				jule::Ptr<_1a828e0c5_SlicingExprModel> _3728_sem = (*((*(_36627_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a828e0c5_SlicingExprModel>();;
				if (_1a43e0538_equalModels((*((*_36627_a.alloc)._field_Left))._field_Model, (*(_3728_sem))._field_Expr)) {
					_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e288c_MutSlicingExprModel>(_1a43e288c_MutSlicingExprModel{._field_Token=(*_3728_sem.alloc)._field_Token, ._field_Expr=(*_3728_sem.alloc)._field_Expr, ._field_Left=(*_3728_sem.alloc)._field_Left, ._field_Right=(*_3728_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1ab0db1d8:;
	};
	return false;;
}



inline jule::Bool _1a43eaaa4_strAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _38630_a) {
	if ((!(_1a5020002_Str))) {
		return false;;
	};
	jule::Ptr<_1a853d990_Prim> _3903_lp = _1a853802d_Prim((*((*(_38630_a))._field_Left))._field_Type.ptr());;
	if (((_3903_lp == nullptr) || (!(_1a8541e5a_IsStr(_3903_lp.ptr()))))) {
		return false;;
	};
	return _1a43ea763_substr(_self_, _38630_a);;
}



inline jule::Bool _1a43eade5_sliceAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _39732_a) {
	if (((!(_1a5020299_Slice)) || (_1a8539084_Slc((*((*(_39732_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1a43ea763_substr(_self_, _39732_a);;
}



inline void _1a43eb19d_optimizePostfix(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a83589ec_Postfix> _40536_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a440bee4_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_40536_postfix))._field_Expr);
	};
	static__1a440027e_optimizeData(&((*_40536_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline jule::Bool _1a43eb4de_cmplxAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign>* _41233_assign) {
	if ((((!(_1a5021a5e_StdMathCmplx)) || ((*((*((*(_41233_assign))))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) || ((*(_1a8ddcad0_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a81c246a_StructIns> _4167_s = _1a85395a1_Struct((*((*((*(_41233_assign))))._field_Left))._field_Type.ptr());;
	if (((_4167_s == nullptr) || (_4167_s != (*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41233_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab0e83d2:;
			{
				goto _match_end_1ab0e9180;
			}
		}
		else {
			_case_begin_1ab0e91e6:;
			{
				return false;;
			}
		}
		_match_end_1ab0e9180:;
	};
	jule::Ptr<_1a828c458_FnCallExprModel> _4267_fc = (*((*((*(_41233_assign))))._field_Right))._field_Model.cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
	{
		auto &_match_expr{ (*(_4267_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab0e9977:;
			{
				goto _match_end_1ab0ea37e;
			}
		}
		else {
			_case_begin_1ab0ea3e5:;
			{
				return false;;
			}
		}
		_match_end_1ab0ea37e:;
	};
	jule::Ptr<_1a828eee9_StructSubIdentExprModel> _4337_siem = (*(_4267_fc))._field_Expr.cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
	if ((!(_1a43e0538_equalModels((*(*((*(_41233_assign))))._field_Left.alloc)._field_Model, (*((*(_4337_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4267_fc))._field_Func };
		
		if (_match_expr == (*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_1ab0ec1d8:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxSub) {
			_case_begin_1ab0ec24e:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxMul) {
			_case_begin_1ab0ec2c6:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxDiv) {
			_case_begin_1ab0ec34d:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1a8ddcad0_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_1ab0eb35d:;
			{
				return false;;
			}
		}
		_match_end_1ab0ec10b:;
	};
	(*_4337_siem.alloc)._field_Method=(*_4267_fc.alloc)._field_Func;
	_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4267_fc, &__jule_any_type31), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)}), &__jule_any_type22));
	return true;;
}



inline void _1a43eb797_optimizeAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8358ea3_Assign> _45435_assign) {
	if ((((*((*(_45435_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1a43e0538_equalModels((*((*_45435_assign.alloc)._field_Left))._field_Model, (*((*_45435_assign.alloc)._field_Right))._field_Model))) {
		_1a43e88a4_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a440c2ad_isBoundaryRiskyType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
			_1a440bee4_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1a43e65a5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45435_assign))._field_Right.alloc)._field_Model)) {
			if (_1a43e686e_isNilValidType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
				;
				_1a43e56a3_pushVar((*((*(_self_))._field_data))._field_nils, _1a43e6bb0_getNilVar((*(*(_45435_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a43e61dc_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a8535877_Type> _4788_kind = _1a440751c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45435_assign))._field_Right.alloc)._field_Type, (*(*(_45435_assign))._field_Right.alloc)._field_Model);;
		if ((_4788_kind != nullptr)) {
			if (_1a44070dd_isDynamicValidType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
				_1a44061db_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a440785d_getDynamicVar((*(*(_45435_assign))._field_Left.alloc)._field_Model), _4788_kind);
			};
		} else {
			_1a4406cd0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a43eaaa4_strAssign(_self_, _45435_assign) || _1a43eade5_sliceAssign(_self_, _45435_assign) || _1a43eb4de_cmplxAssign(_self_, &(_45435_assign))) {
			_case_begin_1ab108678:;
			{
				return;;
			}
		}
		_match_end_1ab10a328:;
	};
	static__1a440027e_optimizeData(&((*(*(_45435_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a440027e_optimizeData(&((*(*(_45435_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_45435_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(47LLU) || _match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU) || _match_expr == static_cast<jule::U64>(40LLU) || _match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab10e2a5:;
			{
				if (((!(_1a440d9b8_Math)) || (_1a85395a1_Struct((*(*(_45435_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1ab10e22d;
				};
				jule::U64 _5064_oldId;
				jule::Str _50611_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_45435_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_45435_assign))._field_Op.alloc)._field_Kind;
					_5064_oldId = ___jule_assign_arg;
					_50611_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_45435_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(40LLU)) {
						_case_begin_1ab112b8d:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(60LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(41LLU)) {
						_case_begin_1ab1127d6:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(61LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1ab11284c:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1ab1128b3:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1ab112929:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1ab112990:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(47LLU)) {
						_case_begin_1ab112a17:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(67LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1ab11075c:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:530:5"));;
						}
					}
					_match_end_1ab112693:;
				};
				jule::Ptr<_1a828a478_BinaryExprModel> _5328_b = jule::new_ptr<_1a828a478_BinaryExprModel>(_1a828a478_BinaryExprModel{._field_Left=(*_45435_assign.alloc)._field_Left, ._field_Right=(*_45435_assign.alloc)._field_Right, ._field_Op=(*_45435_assign.alloc)._field_Op});;
				jule::Any _5378_model = jule::Any(_5328_b, &__jule_any_type114);;
				static__1a440027e_optimizeData(&(_5378_model), &((*_self_.alloc)._field_data));
				if (((!__jule_any_type114_compare(_5378_model, _5328_b)) || ((*(_5328_b))._field_Op != (*_45435_assign.alloc)._field_Op))) {
					if (((*(*(_45435_assign))._field_Op.alloc)._field_Id == static_cast<jule::U64>(67LLU))) {
						_1a43e88a4_removeCurrent(_self_);
						return;;
					};
					(*_45435_assign.alloc)._field_Right=jule::new_ptr<_1a8289e7d_OperandExprModel>((*(*(_45435_assign))._field_Right.alloc));
					(*_5328_b.alloc)._field_Op=jule::new_ptr<_1a81881cd_Token>((*(*(_5328_b))._field_Op.alloc));
					(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_45435_assign))._field_Right.alloc)._field_Model=_5378_model;
					return;;
				};
				(*(*(_45435_assign))._field_Op.alloc)._field_Id=_5064_oldId;
				(*(*(_45435_assign))._field_Op.alloc)._field_Kind=_50611_oldKind;
				return;;
			}
		}
		_match_end_1ab10e22d:;
	};
	if (_1a440d6bb_Append) {
		{
			auto &_match_expr{ (*((*(_45435_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type24) {
				_case_begin_1ab120daa:;
				{
					jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _5639_m = (*(*(_45435_assign))._field_Right.alloc)._field_Model.cast_ptr<_1a8292293_BuiltinAppendCallExprModel>(&__jule_any_type24);;
					if ((!(_1a4404c23_areSameLvalueExprModel(&((*(*(_45435_assign))._field_Left.alloc)._field_Model), &((*(_5639_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5639_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1ab123b5a:;
							{
								_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e33e8_PushToSliceExprModel>(_1a43e33e8_PushToSliceExprModel{._field_Dest=(*_5639_m.alloc)._field_Dest, ._field_Elems=(*(_5639_m))._field_Elements.unsafe_cast_ptr<_1a828c832_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1ab122b9d:;
							{
								_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e37c2_AppendToSliceExprModel>(_1a43e37c2_AppendToSliceExprModel{._field_Dest=(*(*(_45435_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5639_m.alloc)._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1ab122b37:;
					};
				}
			}
			_match_end_1ab120d33:;
		};
	};
}



inline jule::Bool _1a43ebad8_tryOptimizeSwap(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359459_MultiAssign>* _58537_assign) {
	if (((((!(_1a5020552_Assign)) || ((*((*(_58537_assign))))._field_Left.len() != 2LL)) || ((*((*(_58537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_58537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a8290a66_TupleExprModel> _59011_tup;;
	{
		auto &_match_expr{ (*((*(_58537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab12a865:;
			{
				_59011_tup=(*((*(_58537_assign))))._field_Right.unsafe_cast_ptr<_1a8290a66_TupleExprModel>();
			}
		}
		_match_end_1ab12a7dd:;
	};
	if (((_59011_tup == nullptr) || ((*(_59011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a43e0538_equalModels((*((*((*(_58537_assign))))._field_Left[0LL]))._field_Model, (*((*(_59011_tup))._field_Datas[0LL]))._field_Model) && _1a43e0538_equalModels((*((*((*(_58537_assign))))._field_Left[1LL]))._field_Model, (*((*(_59011_tup))._field_Datas[1LL]))._field_Model))) {
		_1a43e88a4_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a43e0538_equalModels((*((*((*(_58537_assign))))._field_Left[0LL]))._field_Model, (*((*(_59011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a43e0538_equalModels((*((*((*(_58537_assign))))._field_Left[1LL]))._field_Model, (*((*(_59011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a43e1638_SwapExprModel> _6127_model = jule::new_ptr<_1a43e1638_SwapExprModel>(_1a43e1638_SwapExprModel{._field_Left=(*((*(_58537_assign))))._field_Left[0LL], ._field_Right=(*((*(_58537_assign))))._field_Left[1LL]});;
	static__1a440027e_optimizeData(&((*((*(_6127_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a440027e_optimizeData(&((*((*_6127_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a43e86a6_setCurrentStmt(_self_, jule::Any(_6127_model, &__jule_any_type127));
	return true;;
}



inline void _1a43ebd91_optimizeMultiAssign(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8359459_MultiAssign> _62240_assign) {
	if (_1a43ebad8_tryOptimizeSwap(_self_, &(_62240_assign))) {
		return;;
	};
	jule::Ptr<_1a8290a66_TupleExprModel> _6297_tup = static_cast<jule::Ptr<_1a8290a66_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_62240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab136d16:;
			{
				_6297_tup=(*(_62240_assign))._field_Right.unsafe_cast_ptr<_1a8290a66_TupleExprModel>();
			}
		}
		_match_end_1ab136c8e:;
	};
	{
		auto expr = &((*(_62240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1386a8:;
		if (it != expr_end) {
			jule::I64 _6348_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _63415_l = *it;
			{
				if ((_63415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a440c2ad_isBoundaryRiskyType((*_63415_l.alloc)._field_Type)) {
							_1a440bee4_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_63415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_6297_tup != nullptr) && _1a43e65a5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_6297_tup.alloc)._field_Datas[_6348_i]))._field_Model))) {
							if (_1a43e686e_isNilValidType((*_63415_l.alloc)._field_Type)) {
								;
								_1a43e56a3_pushVar((*((*(_self_))._field_data))._field_nils, _1a43e6bb0_getNilVar((*_63415_l.alloc)._field_Model), true);
							};
						} else {
							_1a43e61dc_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_63415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_6297_tup != nullptr))) {
						jule::Ptr<_1a8535877_Type> _65210_kind = _1a440751c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_6297_tup.alloc)._field_Datas[_6348_i]))._field_Type, (*((*(_6297_tup))._field_Datas[_6348_i]))._field_Model);;
						if ((_65210_kind != nullptr)) {
							if (_1a44070dd_isDynamicValidType((*_63415_l.alloc)._field_Type)) {
								_1a44061db_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a440785d_getDynamicVar((*_63415_l.alloc)._field_Model), _65210_kind);
							};
						} else {
							_1a4406cd0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_63415_l.alloc)._field_Model);
						};
					};
					static__1a440027e_optimizeData(&((*_63415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1ab1386a8:;
			++it;
			_6348_i++;
			goto _iter_begin_1ab1386a8;
		}
		_iter_end_1ab1386a8:;
	};
	static__1a440027e_optimizeData(&((*_62240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a43ec149_optimizeRet(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a835b25d_RetSt> _66832_r) {
	static__1a440027e_optimizeData(&((*(_66832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a502080a_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_66832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab148ed2:;
			{
				goto _match_end_1ab14908c;
			}
		}
		else {
			_case_begin_1ab149103:;
			{
				return;;
			}
		}
		_match_end_1ab14908c:;
	};
	jule::Ptr<_1a828c458_FnCallExprModel> _6827_fc = (*_66832_r.alloc)._field_Expr.cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
	if (((((!((*((*((*(_6827_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6827_fc.alloc)._field_Except == nullptr)) || ((*((*_6827_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a8dd7613_IsForwarded(&((*_6827_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a43e86a6_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a43e10a5_ExceptionalForwardingExprModel>(_1a43e10a5_ExceptionalForwardingExprModel{._field_Expr=_6827_fc}), &__jule_any_type122));
}



inline void _1a43ec402_optimizeStmt(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Any _69233_stmt) {
	{
		auto &_match_expr{ _69233_stmt };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ab14c524:;
			{
				_1a43ec6aa_optimizeChild(_self_, _69233_stmt.cast_ptr<_1a8355466_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab14c29e:;
			{
				_1a43e9179_optimizeData(_self_, _69233_stmt.cast_ptr<_1a85028cc_Data>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab14c5ac:;
			{
				_1a43e9432_optimizeVar(_self_, _69233_stmt.cast_ptr<_1a83cc1ad_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab14c656:;
			{
				_1a43e96da_optimizeConditional(_self_, _69233_stmt.cast_ptr<_1a835609e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab14c6bc:;
			{
				_1a43ea169_optimizeRangeIter(_self_, _69233_stmt.cast_ptr<_1a835729d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab14c733:;
			{
				_1a43ea422_optimizeWhileIter(_self_, _69233_stmt.cast_ptr<_1a8356852_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ab14c7aa:;
			{
				_1a43ec6aa_optimizeChild(_self_, (*(_69233_stmt.unsafe_cast_ptr<_1a835639b_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ab14c832:;
			{
				_1a43eb797_optimizeAssign(_self_, _69233_stmt.cast_ptr<_1a8358ea3_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab14c8a9:;
			{
				_1a43ebd91_optimizeMultiAssign(_self_, _69233_stmt.cast_ptr<_1a8359459_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab14c931:;
			{
				_1a43e9db1_optimizeMatch(_self_, _69233_stmt.cast_ptr<_1a8359b96_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab14c9a8:;
			{
				_1a43ec149_optimizeRet(_self_, _69233_stmt.cast_ptr<_1a835b25d_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab14ca30:;
			{
				_1a43eb19d_optimizePostfix(_self_, _69233_stmt.cast_ptr<_1a83589ec_Postfix>(&__jule_any_type40));
			}
		}
		_match_end_1ab14c3c0:;
	};
}



inline void _1a43ec6aa_optimizeChild(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_, jule::Ptr<_1a8355466_Scope> _72134_child) {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _7227_so = static__1a43e83ed_new(_72134_child);;
	(*(_7227_so))._field_parent=_self_;
	(*_7227_so.alloc)._field_data=(*(_self_))._field_data;
	_1a43ec8a8_optimize(_7227_so);
}



inline void _1a43ec8a8_optimize(jule::Ptr<_1a43e7d7b_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a43ec402_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ab155a5a:;
	}
	_iter_end_1ab155a5a:;;
}








inline jule::Bool _1a43eea86_exprOptimizer_eq(_1a43eea86_exprOptimizer *_self_, _1a43eea86_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1a43eee93_optimize(jule::Any* _2226_model) {
	static__1a440027e_optimizeData(_2226_model, &(_1a4408166_emptyData));
}



inline void static__1a440027e_optimizeData(jule::Any* _2630_model, jule::Ptr<_1a4408b28_data>* _2659_d) {
	if (_1a5135623_exprEnabled) {
		jule::Ptr<_1a43eea86_exprOptimizer> _298_exop = jule::new_ptr<_1a43eea86_exprOptimizer>(_1a43eea86_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2630_model)), ._field_data=(*(_2659_d)), ._field_inspector=static__1a8dd5eb3_New()});;
		_1a440441a_do(_298_exop.ptr());
	};
}



inline jule::Bool _1a44005c0_selfCmpCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _3828_m) {
	if (((_1a853802d_Prim((*((*((*(_3828_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1a832636b_IsFloat((*(_1a853802d_Prim((*((*((*(_3828_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1a43e0538_equalModels((*(*((*(_3828_m))))._field_Left.alloc)._field_Model, (*((*((*(_3828_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3828_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab166b48:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a827e5e3_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab166bd1:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a827e5e3_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1ab165a37:;
			{
				return false;;
			}
		}
		_match_end_1ab166a05:;
	};
}



inline jule::Bool _1a4400911_boolCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _6725_m) {
	jule::Ptr<_1a853d990_Prim> _683_lp = _1a853802d_Prim((*((*((*(_6725_m))))._field_Left))._field_Type.ptr());;
	if (((_683_lp == nullptr) || (!(_1a8541bc4_IsBool(_683_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab16b433:;
			{
				std::swap((*((*(_6725_m))))._field_Left, (*((*(_6725_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ab16a60d:;
			{
				{
					auto &_match_expr{ (*((*((*(_6725_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1ab1698e8:;
						{
							goto _match_end_1ab16ae38;
						}
					}
					else {
						_case_begin_1ab16ae9e:;
						{
							return false;;
						}
					}
					_match_end_1ab16ae38:;
				};
			}
		}
		_match_end_1ab16a597:;
	};
	jule::Ptr<_1a82273d2_Const> _857_c = (*((*((*(_6725_m))))._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab16d07d:;
			{
				if (_1a8280a12_ReadBool(_857_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				} else {
					_1a82820eb_SetBool(_857_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab16d127:;
			{
				if (_1a8280a12_ReadBool(_857_c.ptr())) {
					_1a82820eb_SetBool(_857_c, true);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1ab16b202:;
		}
		_match_end_1ab16cee5:;
	};
	return false;;
}



inline jule::Bool _1a4400c52_arrayCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _12025_m) {
	jule::Ptr<_1a85452b0_Arr> _1217_arr = _1a8538ced_Arr((*((*(_12025_m))._field_Left))._field_Type.ptr());;
	if (((_1217_arr == nullptr) || ((*(_1217_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__1a827e5e3_NewBool(true), &__jule_any_type15);
	return true;;
}



inline jule::Bool _1a4401093_strCond(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _13223_m) {
	jule::Ptr<_1a853d990_Prim> _1333_lp = _1a853802d_Prim((*((*(_13223_m))._field_Left))._field_Type.ptr());;
	if (((_1333_lp == nullptr) || (!(_1a8541e5a_IsStr(_1333_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_13223_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_13223_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_13223_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab176a9d:;
			{
				std::swap((*_13223_m.alloc)._field_Left, (*_13223_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1ab175c78:;
			{
				{
					auto &_match_expr{ (*((*(_13223_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1ab174804:;
						{
							goto _match_end_1ab1765a3;
						}
					}
					else {
						_case_begin_1ab176619:;
						{
							return false;;
						}
					}
					_match_end_1ab1765a3:;
				};
			}
		}
		_match_end_1ab175c12:;
	};
	jule::Ptr<_1a82273d2_Const> _1537_c = (*((*_13223_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_13223_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab17687d:;
			{
				if ((_1a8280c98_ReadStr(_1537_c.ptr())).empty()) {
					jule::Any _1579_model = jule::Any(jule::new_ptr<_1a43e1a56_EmptyCompareExprModel>(_1a43e1a56_EmptyCompareExprModel{._field_Expr=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1579_model))))));
					goto _match_end_1ab1785e9;
				};
				jule::Any _1648_model = jule::Any(jule::new_ptr<_1a43e2309_StrCompExprModel>(_1a43e2309_StrCompExprModel{._field_Left=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Right=_1537_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1648_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab1786a4:;
			{
				if ((_1a8280c98_ReadStr(_1537_c.ptr())).empty()) {
					jule::Any _1729_model = jule::Any(jule::new_ptr<_1a43e1a56_EmptyCompareExprModel>(_1a43e1a56_EmptyCompareExprModel{._field_Expr=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1729_model))))));
					goto _match_end_1ab1785e9;
				};
				jule::Any _1798_model = jule::Any(jule::new_ptr<_1a43e2309_StrCompExprModel>(_1a43e2309_StrCompExprModel{._field_Left=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Right=_1537_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1798_model))))));
			}
		}
		_match_end_1ab1785e9:;
	};
	return true;;
}



inline jule::Bool _1a4401549_tryNeutralElement1(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _18935_m, jule::Ptr<_1a82273d2_Const> _18966_c, jule::Ptr<_1a8289e7d_OperandExprModel>* _18992_nc) {
	if (_1a8283394_IsStr(_18966_c.ptr())) {
		if ((!(_1a5020002_Str))) {
			return false;;
		};
		if (((_1a8280c98_ReadStr(_18966_c.ptr())).empty() && ((*((*((*(_18935_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18992_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a440d9b8_Math)) || (_1a82817d2_AsF64(_18966_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18935_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab187828:;
			{
				if (((*(_18992_nc)) == (*((*(_18935_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18992_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18966_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab188461:;
			{
				if (_1a832636b_IsFloat((*(_1a853802d_Prim((*((*(_18992_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1ab18831d;
				};
				_1a8281a8a_SetI64(_18966_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18966_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab1884c7:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18992_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1ab18831d:;
	};
	return false;;
}



inline jule::Bool _1a440188a_tryNeutralElement(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _23934_m) {
	{
		auto &_match_expr{ (*((*((*(_23934_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab18c520:;
			{
				jule::Ptr<_1a82273d2_Const> _2438_c = (*((*((*(_23934_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a82273d2_Const>();;
				return _1a4401549_tryNeutralElement1(_self_, _23934_m, _2438_c, &((*((*(_23934_m))))._field_Right));;
			}
		}
		_match_end_1ab18c498:;
	};
	{
		auto &_match_expr{ (*((*((*(_23934_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab18ca3c:;
			{
				jule::Ptr<_1a82273d2_Const> _2488_c = (*((*((*(_23934_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a82273d2_Const>();;
				return _1a4401549_tryNeutralElement1(_self_, _23934_m, _2488_c, &((*((*(_23934_m))))._field_Left));;
			}
		}
		_match_end_1ab18c9c6:;
	};
	return false;;
}



inline void _1a4401b43_checkBinaryForBoundary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _25439_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_25439_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ab190e91:;
			{
				jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _2608_blc = (*((*((*(_25439_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a8292590_BuiltinLenCallExprModel>();;
				if ((!(_1a440c577_isBoundaryValidType((*((*(_2608_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_25439_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_25439_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_25439_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1ab19426e:;
							{
								jule::Ptr<_1a82273d2_Const> _27210_c = jule::new_ptr<_1a82273d2_Const>((*((*((*((*(_25439_m))))._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15))));;
								_1a8285b6b_Sub(_27210_c, (*(static__1a827e0a4_NewI64(1LL))));
								_1a440a8a5_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a440c841_getBoundaryVar((*(*(_2608_blc))._field_Expr.alloc)._field_Model), jule::Any(_27210_c, &__jule_any_type15));
							}
						}
						_match_end_1ab1941e7:;
					};
					return;;
				};
				_1a440a8a5_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a440c841_getBoundaryVar((*(*(_2608_blc))._field_Expr.alloc)._field_Model), (*(*((*(_25439_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ab190e19:;
	};
	{
		auto &_match_expr{ (*((*((*(_25439_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ab191612:;
			{
				jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _2838_blc = (*((*((*(_25439_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a8292590_BuiltinLenCallExprModel>();;
				if ((!(_1a440c577_isBoundaryValidType((*(*(_2838_blc))._field_Expr.alloc)._field_Type)))) {
					return;;
				};
				if ((((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_25439_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_25439_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1ab19adad:;
							{
								jule::Ptr<_1a82273d2_Const> _29510_c = jule::new_ptr<_1a82273d2_Const>((*((*((*((*(_25439_m))))._field_Left))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15))));;
								_1a8285b6b_Sub(_29510_c, (*(static__1a827e0a4_NewI64(1LL))));
								_1a440a8a5_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a440c841_getBoundaryVar((*(*(_2838_blc))._field_Expr.alloc)._field_Model), jule::Any(_29510_c, &__jule_any_type15));
							}
						}
						_match_end_1ab19ad36:;
					};
					return;;
				};
				_1a440a8a5_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a440c841_getBoundaryVar((*(*(_2838_blc))._field_Expr.alloc)._field_Model), (*(*((*(_25439_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ab19158a:;
	};
}



inline void _1a4401deb_checkBinaryForNil(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel>* _30634_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3107_var = _1a43e6bb0_getNilVar((*((*((*(_30634_m))))._field_Left))._field_Model);;
	if ((_3107_var != 0LLU)) {
		if ((!(_1a43e686e_isNilValidType((*(*((*(_30634_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_30634_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1ab1a1765:;
				{
					_1a43e56a3_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3107_var, ((*((*((*(_30634_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ab1a16dd:;
		};
		return;;
	};
	_3107_var=_1a43e6bb0_getNilVar((*((*((*(_30634_m))))._field_Right))._field_Model);
	if ((_3107_var != 0LLU)) {
		if ((!(_1a43e686e_isNilValidType((*(*((*(_30634_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_30634_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1ab1a3e4e:;
				{
					_1a43e56a3_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3107_var, ((*(*((*(_30634_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ab1a3dc7:;
		};
		return;;
	};
}



inline void _1a44021a4_shift(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _34021_m) {
	jule::I64 _3423_z = _1a831ceab_BitSizeOf((*(_1a853802d_Prim((*((*(_34021_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _3433_s = _1a828154b_AsU64((*((*_34021_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15).ptr());;
	if ((_3433_s >= static_cast<jule::U64>(_3423_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__1a827e329_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _3537_model = jule::Any(jule::new_ptr<_1a43e2c22_UnsafeBinaryExprModel>(_1a43e2c22_UnsafeBinaryExprModel{._field_Node=_34021_m}), &__jule_any_type130);;
	(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_3537_model))))));
}



inline void _1a440245c_binary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a478_BinaryExprModel> _35722_m) {
	if ((((*((*(_self_))._field_data))._field_flags & static_cast<jule::I64>(1LL)) != static_cast<jule::I64>(1LL))) {
		_1a4401b43_checkBinaryForBoundary(_self_, &(_35722_m));
		_1a4401deb_checkBinaryForNil(_self_, &(_35722_m));
	};
	if (_1a5020002_Str) {
		if (_1a4401093_strCond(_self_, _35722_m)) {
			return;;
		};
	};
	if (_1a5021124_Array) {
		if (_1a4400c52_arrayCond(_self_, _35722_m)) {
			return;;
		};
	};
	if (_1a501ecb0_Cond) {
		{
			
			if (_1a4400911_boolCond(_self_, &(_35722_m)) || _1a44005c0_selfCmpCond(_self_, &(_35722_m))) {
				_case_begin_1ab1ad431:;
				{
					return;;
				}
			}
			_match_end_1ab1ad332:;
		};
	};
	if (_1a440188a_tryNeutralElement(_self_, &(_35722_m))) {
		return;;
	};
	if ((!(_1a440d9b8_Math))) {
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _3943_lp = _1a853802d_Prim((*((*(_35722_m))._field_Left))._field_Type.ptr());;
	if ((_3943_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _3983_rp = _1a853802d_Prim((*((*(_35722_m))._field_Right))._field_Type);;
	if ((_3983_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab1b0de5:;
			{
				if (((!(_1a832602a_IsInt((*(_3943_lp))._field_Kind))) || (!(_1a43e0538_equalModels((*(*(_35722_m))._field_Left.alloc)._field_Model, (*((*_35722_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1ab1b1203;
				};
				(*_35722_m.alloc)._field_Op=jule::new_ptr<_1a81881cd_Token>((*(*(_35722_m))._field_Op.alloc));
				(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
				(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*(*(_35722_m))._field_Right.alloc)._field_Model=jule::Any(static__1a827e329_NewU64(1LLU), &__jule_any_type15);
				jule::Any _4178_model = jule::Any(jule::new_ptr<_1a43e2c22_UnsafeBinaryExprModel>(_1a43e2c22_UnsafeBinaryExprModel{._field_Node=_35722_m}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4178_model))))));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab1b12ad:;
			{
				if (((!(_1a832602a_IsInt((*(_3943_lp))._field_Kind))) || (!(_1a43e0538_equalModels((*(*(_35722_m))._field_Left.alloc)._field_Model, (*((*_35722_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1ab1b1203;
				};
				jule::Ptr<_1a82273d2_Const> _4268_c = static__1a827e329_NewU64(0LLU);;
				(*(_4268_c))._field_Kind=(*(_3943_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_4268_c, &__jule_any_type15);
				return;;
			}
		}
		_match_end_1ab1b1203:;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab1b1346:;
			{
				goto _match_end_1ab1b79bd;
			}
		}
		else {
			_case_begin_1ab1b7a34:;
			{
				return;;
			}
		}
		_match_end_1ab1b79bd:;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab1b84c4:;
			{
				jule::Bool _4434_ok;
				jule::U64 _4438_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a440485a_checkForBitShiftOpt(&((*_35722_m.alloc)._field_Left), &((*_35722_m.alloc)._field_Right));
					_4434_ok = __jule_assign_result.__jule_result_arg0;
					_4438_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_4434_ok) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1a81881cd_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1a82273d2_Const> _4489_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
					_1a8281d43_SetU64(_4489_c.ptr(), _4438_x);
					_1a44021a4_shift(_self_, _35722_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab1b8716:;
			{
				jule::Bool _4544_ok;
				jule::U64 _4548_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a440485a_checkForBitShiftOpt(&((*_35722_m.alloc)._field_Left), &((*_35722_m.alloc)._field_Right));
					_4544_ok = __jule_assign_result.__jule_result_arg0;
					_4548_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_4544_ok) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1a81881cd_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1a82273d2_Const> _4599_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
					_1a8281d43_SetU64(_4599_c.ptr(), _4548_x);
					_1a44021a4_shift(_self_, _35722_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab1b877c:;
			{
				jule::Ptr<_1a82273d2_Const> _4658_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
				if ((_1a82817d2_AsF64(_4658_c.ptr()) == 2LL)) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1a81881cd_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1a8281a8a_SetI64(_4658_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab1b853a:;
			{
				jule::F64 _4774_s = _1a82817d2_AsF64((*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15).ptr());;
				if ((_4774_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*(_35722_m))._field_Left.alloc)._field_Model;
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab1b85a1:;
			{
				_1a44021a4_shift(_self_, _35722_m);
				return;;
			}
		}
		else {
			_case_begin_1ab1b7eda:;
			{
				return;;
			}
		}
		_match_end_1ab1b845d:;
	};
	jule::Any _4917_model = jule::Any(jule::new_ptr<_1a43e2c22_UnsafeBinaryExprModel>(_1a43e2c22_UnsafeBinaryExprModel{._field_Node=_35722_m}), &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4917_model))))));
}



inline void _1a4402715_unary(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828a852_UnaryExprModel> _49521_m) {
	if ((!(_1a440e2d2_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_49521_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab1c68cd:;
			{
				{
					auto &_match_expr{ (*((*(_49521_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1ab1c7901:;
						{
							jule::Ptr<_1a828a852_UnaryExprModel> _5039_um = (*((*(_49521_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a828a852_UnaryExprModel>();;
							if (((*((*(_5039_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_5039_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1ab1c7879:;
				};
				if ((!(_1a440dc71_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a43e686e_isNilValidType((*(*(_49521_m))._field_Expr.alloc)._field_Type))) {
					jule::Uintptr _5175_var = _1a43e6bb0_getNilVar((*(*(_49521_m))._field_Expr.alloc)._field_Model);;
					if (_1a43e5d35_isSafe((*((*(_self_))._field_data))._field_nils, _5175_var)) {
						jule::Any _51910_model = jule::Any(jule::new_ptr<_1a43e3e98_UnsafeDerefExprModel>(_1a43e3e98_UnsafeDerefExprModel{._field_Base=_49521_m}), &__jule_any_type131);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_51910_model))))));
						return;;
					};
					_1a43e56a3_pushVar((*((*(_self_))._field_data))._field_nils, _5175_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab1c6c0d:;
			{
				{
					auto &_match_expr{ (*((*(_49521_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1ab1d0db0:;
						{
							jule::Ptr<_1a83cc1ad_Var> _5299_v = (*((*(_49521_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
							if ((*(_5299_v))._field_Reference) {
								jule::Any _53110_model = jule::Any(jule::new_ptr<_1a43e1d53_RefExprModel>(_1a43e1d53_RefExprModel{._field_Var=_5299_v}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_53110_model))))));
							};
						}
					}
					_match_end_1ab1d0d38:;
				};
			}
		}
		_match_end_1ab1c6b53:;
	};
}



inline void _1a44029bd_structureLit(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828b226_StructLitExprModel> _53828_m) {
	{
		auto expr = &((*(_53828_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1d31ae:;
		if (it != expr_end) {
			jule::Ptr<_1a828ad80_StructArgExprModel> _53915_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a440c2ad_isBoundaryRiskyType((*((*(_53915_arg))._field_Expr))._field_Type)) {
						_1a440bee4_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_53915_arg, &__jule_any_type133));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a43e61dc_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_53915_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a4406cd0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_53915_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1ab1d31ae:;
			++it;
			goto _iter_begin_1ab1d31ae;
		}
		_iter_end_1ab1d31ae:;
	};
}



inline void _1a4402c76_casting(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828baa6_CastingExprModel> _55423_m) {
	jule::Bool _5553_valid = _1a44070dd_isDynamicValidType((*(_55423_m))._field_ExprType);;
	jule::Uintptr _5563_var = _1a440785d_getDynamicVar((*((*_55423_m.alloc)._field_Expr))._field_Model);;
	if (((_5553_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a4406928_isFits((*((*(_self_))._field_data))._field_dynamic, _5563_var, (*_55423_m.alloc)._field_Type))) {
		jule::Any _5588_model = jule::Any(jule::new_ptr<_1a43e4295_UnsafeCastingExprModel>(_1a43e4295_UnsafeCastingExprModel{._field_Base=_55423_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5588_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5553_valid)) {
		_1a44061db_pushVar((*((*(_self_))._field_data))._field_dynamic, _5563_var, (*_55423_m.alloc)._field_Type);
	};
}



inline void _1a44030d9_args(_1a43eea86_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a82995ec_ParamIns>> _56820_params, jule::Slice<jule::Any>* _56852_args) {
	{
		auto expr = _56852_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1e427a:;
		if (it != expr_end) {
			jule::I64 _5698_i = it - expr->begin();
			jule::Any _56915_arg = *it;
			{
				if ((_5698_i >= _56820_params.len())) {
					goto _iter_next_1ab1e427a;
				};
				jule::Ptr<_1a82995ec_ParamIns> _5738_p = _56820_params[_5698_i];;
				if (((*((*(_5738_p))._field_Decl))._field_Mutable && (*(*(_5738_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a440c2ad_isBoundaryRiskyType((*_5738_p.alloc)._field_Type)) {
							_1a440bee4_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _56915_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1a43e61dc_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _56915_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1a4406cd0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _56915_arg);
					};
				};
			}
			_iter_next_1ab1e427a:;
			++it;
			_5698_i++;
			goto _iter_begin_1ab1e427a;
		}
		_iter_end_1ab1e427a:;
	};
}



inline void _1a4403392_scope(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a8355466_Scope>* _59022_s) {
	jule::Ptr<_1a43e7d7b_scopeOptimizer> _5917_scopt = static__1a43e83ed_new((*(_59022_s)));;
	(*(_5917_scopt))._field_data=(*(_self_))._field_data;
	_1a43ec8a8_optimize(_5917_scopt);
}



inline void _1a440364a_optimizeStrBuilderCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _59639_m) {
	;
	{
		if (((*((*(_1a8ddcad0_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel>(_1a43e1292_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a8ddcad0_ProgramMeta))._field_StrBuilder.alloc)._field_WriteByte == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel>(_1a43e1292_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a8ddcad0_ProgramMeta))._field_StrBuilder.alloc)._field_WriteRune == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel>(_1a43e1292_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1a8ddcad0_ProgramMeta))._field_StrBuilder.alloc)._field_WriteStr == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel>(_1a43e1292_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
}



inline void _1a4403903_lenCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _61223_m) {
	if ((!(_1a502160d_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_61223_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab1ea1b5:;
			{
				goto _match_end_1ab1ea814;
			}
		}
		else {
			_case_begin_1ab2039d7:;
			{
				return;;
			}
		}
		_match_end_1ab1ea814:;
	};
	jule::Ptr<_1a828baa6_CastingExprModel> _6237_c = (*((*(_61223_m))._field_Expr))._field_Model.cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96);;
	jule::Ptr<_1a853d990_Prim> _6247_prim = _1a853802d_Prim((*((*(_6237_c))._field_Expr))._field_Type.ptr());;
	if (((_6247_prim == nullptr) || (!(_1a8541e5a_IsStr(_6247_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a8542e8e_Slc> _6297_slc = _1a8539084_Slc((*_6237_c.alloc)._field_Type.ptr());;
	if ((_6297_slc == nullptr)) {
		return;;
	};
	_6247_prim=_1a853802d_Prim((*(_6297_slc))._field_Elem.ptr());
	if ((_6247_prim == nullptr)) {
		return;;
	};
	{
		
		if (_1a85403ba_IsU8(_6247_prim.ptr())) {
			_case_begin_1ab20717d:;
			{
				(*_61223_m.alloc)._field_Expr=(*_6237_c.alloc)._field_Expr;
			}
		}
		else if (_1a853ed9d_IsI32(_6247_prim.ptr())) {
			_case_begin_1ab207337:;
			{
				jule::Ptr<_1a829a752_FnIns> _6468_func = (*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a828c458_FnCallExprModel>(_1a828c458_FnCallExprModel{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Func=_6468_func, ._field_IsCo=false, ._field_Expr=jule::Any(_6468_func, &__jule_any_type64), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_6237_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type31);
			}
		}
		_match_end_1ab206ea2:;
	};
}



inline void _1a4403bab_funcCall(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828c458_FnCallExprModel> _65524_m) {
	_1a44030d9_args(_self_, (*((*(_65524_m))._field_Func))._field_Params, &((*_65524_m.alloc)._field_Args));
	if (((*_65524_m.alloc)._field_Except != nullptr)) {
		_1a4403392_scope(_self_, &((*_65524_m.alloc)._field_Except));
	};
	{
		
		if ((_1a5021850_StdStrings && ((*(_1a8ddcad0_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1ab20b160:;
			{
				_1a440364a_optimizeStrBuilderCall(_self_, &(_65524_m));
			}
		}
		_match_end_1ab20a923:;
	};
}



inline void _1a4403e64_indexing(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828ccd8_IndexingExprModel> _66624_m) {
	if ((!(_1a440dc71_Access))) {
		return;;
	};
	jule::Bool _6713_array = (_1a8538ced_Arr((*((*(_66624_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_6713_array && _1a8503317_IsConst((*_66624_m.alloc)._field_Index.ptr()))) {
		jule::Any _6748_model = jule::Any(jule::new_ptr<_1a43e301e_UnsafeIndexingExprModel>(_1a43e301e_UnsafeIndexingExprModel{._field_Node=_66624_m}), &__jule_any_type136);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6748_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a440c577_isBoundaryValidType((*(*(_66624_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _6804_var = _1a440c841_getBoundaryVar((*(*(_66624_m))._field_Expr.alloc)._field_Model);;
		if (_1a440b0e2_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _6804_var, (*(*(_66624_m))._field_Index.alloc)._field_Model)) {
			jule::Any _6829_model = jule::Any(jule::new_ptr<_1a43e301e_UnsafeIndexingExprModel>(_1a43e301e_UnsafeIndexingExprModel{._field_Node=_66624_m}), &__jule_any_type136);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6829_model))))));
			return;;
		};
		_1a440a8a5_pushVar((*((*(_self_))._field_data))._field_boundary, _6804_var, (*(*(_66624_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1a440421c_anonFunc(_1a43eea86_exprOptimizer* _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _69024_m) {
	_1a4403392_scope(_self_, &((*((*(_69024_m))._field_Func))._field_Scope));
}



inline void _1a440441a_do(_1a43eea86_exprOptimizer* _self_) {
	_1a8dd6887_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ab21718d, jule::Ptr<__jule_anon_1ab21718d_ctx>::make(__jule_anon_1ab21718d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab21718d_ctx_handler));
}








inline jule::Bool _1a4405905_dynamicVar_eq(_1a4405905_dynamicVar *_self_, _1a4405905_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1a44061db_pushVar(jule::Ptr<_1a4405c46_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1a8535877_Type> _2442_kind) {
	if (((!(_1a5020d6b_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1a440751c_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab226da1:;
		if (it != expr_end) {
			_1a4405905_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1ab226da1:;
			++it;
			goto _iter_begin_1ab226da1;
		}
		_iter_end_1ab226da1:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab227731:;
		if (it != expr_end) {
			_1a4405905_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1a8535877_Type> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1ab227731:;
			++it;
			goto _iter_begin_1ab227731;
		}
		_iter_end_1ab227731:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1a4405905_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a4405905_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1a440652c_removeVar(_1a4405c46_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab229a85:;
			if (it != expr_end) {
				_1a4405905_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1ab229a85:;
				++it;
				goto _iter_begin_1ab229a85;
			}
			_iter_end_1ab229a85:;
		};
	};
	return false;;
}



inline jule::Bool _1a4406928_isFits(_1a4405c46_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1a8535877_Type> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab22b449:;
			if (it != expr_end) {
				_1a4405905_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1a85360b4_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1ab22b449:;
				++it;
				goto _iter_begin_1ab22b449;
			}
			_iter_end_1ab22b449:;
		};
	};
	return false;;
}








inline jule::Bool _1a4408b28_data_eq(_1a4408b28_data *_self_, _1a4408b28_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic) &&
		(_self_->_field_flags == _self_->_field_flags);
}

inline _1a4408551_dataCheckpoint _1a4408ed0_getCheckpoint(_1a4408b28_data* _self_) {
	_1a4408551_dataCheckpoint _357_c = _1a4408551_dataCheckpoint{._field_boundary=_1a440a410_boundary{._field_vars=jule::Slice<_1a440a0be_boundaryVar>(nullptr)}, ._field_nils=_1a43e520d_nils{._field_vars=jule::Slice<_1a43e4dbc_nilVar>(nullptr)}, ._field_dynamic=_1a4405c46_dynamic{._field_vars=jule::Slice<_1a4405905_dynamicVar>(nullptr)}};;
	_357_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a440a0be_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a440a0be_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_357_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab22d3e6:;
		if (it != expr_end) {
			jule::I64 _377_i = it - expr->begin();
			{
				_357_c._field_boundary._field_vars[_377_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_357_c._field_boundary._field_vars[_377_i]._field_maxSize);
			}
			_iter_next_1ab22d3e6:;
			++it;
			_377_i++;
			goto _iter_begin_1ab22d3e6;
		}
		_iter_end_1ab22d3e6:;
	};
	_357_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a43e4dbc_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a43e4dbc_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_357_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1a4405905_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1a4405905_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1a8535877_Type>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _357_c;;
}



inline void _1a4409288_loadCheckpoint(_1a4408b28_data* _self_, _1a4408551_dataCheckpoint* _4535_c) {
	(*((*(_self_))._field_boundary))=(*(_4535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_4535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_4535_c))._field_dynamic;
}











inline void _1a440a8a5_pushVar(_1a440a410_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a440dc71_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a440b477_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2425a3:;
		if (it != expr_end) {
			_1a440a0be_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab24342d:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a440bbb4_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1ab24342d:;
							++it;
							_349_i++;
							goto _iter_begin_1ab24342d;
						}
						_iter_end_1ab24342d:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ab2425a3:;
			++it;
			goto _iter_begin_1ab2425a3;
		}
		_iter_end_1ab2425a3:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2429c1:;
		if (it != expr_end) {
			_1a440a0be_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ab2429c1:;
			++it;
			goto _iter_begin_1ab2429c1;
		}
		_iter_end_1ab2429c1:;
	};
	{ jule::Slice<_1a440a0be_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a440a0be_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1a440b0e2_fitsMaxSize(_1a440a410_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab247cb2:;
			if (it != expr_end) {
				_1a440a0be_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a440b840_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1ab247cb2:;
				++it;
				goto _iter_begin_1ab247cb2;
			}
			_iter_end_1ab247cb2:;
		};
	};
	return false;;
}








inline jule::Bool _1a51359b9_Optimizer_eq(_1a51359b9_Optimizer *_self_, _1a51359b9_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1a51359b9_Optimizer> static__1a5135e81_New(jule::Ptr<_1a8dd23cc_IR>* _2121_ir) {
	return jule::new_ptr<_1a51359b9_Optimizer>(_1a51359b9_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1a5136239_optimizeExpr(_1a51359b9_Optimizer* _self_, jule::Any* _2733_model) {
	static__1a43eee93_optimize(_2733_model);
}



inline void _1a51364e2_optimizeGlobal(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a83cc1ad_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1a5136239_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a513679a_optimizeFunction(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a8297694_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab24e44a:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1a43e7d7b_scopeOptimizer> _428_so = static__1a43e83ed_new((*(_4115_ins))._field_Scope);;
				_1a43ec8a8_optimize(_428_so);
			}
			_iter_next_1ab24e44a:;
			++it;
			goto _iter_begin_1ab24e44a;
		}
		_iter_end_1ab24e44a:;
	};
}



inline void _1a5136a53_optimizeStruct(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a81be610_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab250b22:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2515b2:;
					if (it != expr_end) {
						jule::Ptr<_1a81c18ba_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1a5136239_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1ab2515b2:;
						++it;
						goto _iter_begin_1ab2515b2;
					}
					_iter_end_1ab2515b2:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab251a35:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _5716_m = *it;
						{
							_1a513679a_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1ab251a35:;
						++it;
						goto _iter_begin_1ab251a35;
					}
					_iter_end_1ab251a35:;
				};
			}
			_iter_next_1ab250b22:;
			++it;
			goto _iter_begin_1ab250b22;
		}
		_iter_end_1ab250b22:;
	};
}



inline void _1a5136d0b_optimizeGlobals(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2510d9:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab253be1:;
					if (it != expr_end) {
						jule::Ptr<_1a83cc1ad_Var> _6516_v = *it;
						{
							_1a51364e2_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1ab253be1:;
						++it;
						goto _iter_begin_1ab253be1;
					}
					_iter_end_1ab253be1:;
				};
			}
			_iter_next_1ab2510d9:;
			++it;
			goto _iter_begin_1ab2510d9;
		}
		_iter_end_1ab2510d9:;
	};
}



inline void _1a51370b4_optimizeFunctions(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab25420d:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab255110:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _7316_func = *it;
						{
							_1a513679a_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1ab255110:;
						++it;
						goto _iter_begin_1ab255110;
					}
					_iter_end_1ab255110:;
				};
			}
			_iter_next_1ab25420d:;
			++it;
			goto _iter_begin_1ab25420d;
		}
		_iter_end_1ab25420d:;
	};
}



inline void _1a513736c_optimizeStructs(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab25562c:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab25652e:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _8116_s = *it;
						{
							_1a5136a53_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_1ab25652e:;
						++it;
						goto _iter_begin_1ab25652e;
					}
					_iter_end_1ab25652e:;
				};
			}
			_iter_next_1ab25562c:;
			++it;
			goto _iter_begin_1ab25562c;
		}
		_iter_end_1ab25562c:;
	};
}



inline void _1a5137625_optimizePackage(_1a51359b9_Optimizer* _self_, jule::Ptr<_1a838d8bc_Package>* _8736_p) {
	_1a5136d0b_optimizeGlobals(_self_, _8736_p);
	_1a51370b4_optimizeFunctions(_self_, _8736_p);
	_1a513736c_optimizeStructs(_self_, _8736_p);
}



inline void _1a5137823_Optimize(_1a51359b9_Optimizer* _self_) {
	_1a5137a87_detectEnabled();
	if (_1a440d413_Deadcode) {
		_1a512e3b9_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a5135832_scopeEnabled || _1a5135623_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab2584ed:;
			if (it != expr_end) {
				jule::Ptr<_1a838b14a_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_1a5137625_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_1ab2584ed:;
				++it;
				goto _iter_begin_1ab2584ed;
			}
			_iter_end_1ab2584ed:;
		};
		_1a5137625_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a440d413_Deadcode) {
		_1a51341d2_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1a541369d_AbsTime_eq(_1a541369d_AbsTime *_self_, _1a541369d_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1a5413d74_Time_eq(_1a5413d74_Time *_self_, _1a5413d74_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1a5413d74_Time static__1a541425e_Unix(jule::U64 _9117_sec) {
	return _1a5413d74_Time{._field_sec=_9117_sec};;
}



inline _1a5413d74_Time static__1a541446d_Now(void) {
	return static__1a541425e_Unix(_1a5415e64_unix());;
}



inline _1a541369d_AbsTime _1a5415b56_Abs(_1a5413d74_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a5412b0e_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a5412b0e_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1ab287e78:;
	}
	_iter_end_1ab287e78:;;
	_1a541369d_AbsTime _1747_t = _1a541369d_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1a5139ade_scopeCoder_eq(_1a5139ade_scopeCoder *_self_, _1a5139ade_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a5139ade_scopeCoder> static__1a513a2d7_new(jule::Ptr<_1a542125a_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1a5139ade_scopeCoder>(_1a5139ade_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1ab3ce685_iterHead(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a440d116_Copy && _1a5143015_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1ab3d4c2e:;
				{
					jule::Ptr<_1a83cc1ad_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1a51548a6_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1ab3d315b;
					};
					goto _case_begin_1ab3d31c2;
				}
			}
			else {
				_case_begin_1ab3d31c2:;
				{
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a51548a6_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ab3d315b:;
		};
	} else {
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, _4452_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
}



inline void _1a513a9ad_rangeIndexIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _9336_it) {
	_21ca86171_Builder _947_sb = static__21ca869bd_New(64LL);;
	static__1a939530c_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _21ca879d0_Str(&_947_sb);;
	_21ca87bcd_Clear(&_947_sb);
	static__1a93958d4_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _21ca879d0_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1ab3ce685_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1a5428608_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ab3e019b, jule::Ptr<__jule_anon_1ab3e019b_ctx>::make(__jule_anon_1ab3e019b_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1ab3e019b_ctx_handler));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1a440d116_Copy && _1a51433cd_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1a5428608_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ab3e3ba5, jule::Ptr<__jule_anon_1ab3e3ba5_ctx>::make(__jule_anon_1ab3e3ba5_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1ab3e3ba5_ctx_handler));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a51422ab_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, _993_next);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5421975_write((*(_self_))._field_oc, _963_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93955e8_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a513ac66_rangeHashmapIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter>* _16038_it) {
	_21ca86171_Builder _1617_sb = static__21ca869bd_New(64LL);;
	static__1a939530c_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _21ca879d0_Str(&_1617_sb);;
	_21ca87bcd_Clear(&_1617_sb);
	static__1a93958d4_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _21ca879d0_Str(&_1617_sb);;
	jule::Ptr<_1a8544633_Map> _1687__map = _1a8539abd_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a81c246a_StructIns> _1697_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a829a752_FnIns> _1717_f = (*(_1a81c3515_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1a81c246a_StructIns> _1737_iterator = _1a8ddb6c2_FindStructGenericInstance(&((*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1a829a752_FnIns> _1747_nextCall = (*(_1a81c3515_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5434669_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, _1633_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5435879_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1a5428608_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ab41804d, jule::Ptr<__jule_anon_1ab41804d_ctx>::make(__jule_anon_1ab41804d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab41804d_ctx_handler));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1a5428608_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ab41a539, jule::Ptr<__jule_anon_1ab41a539_ctx>::make(__jule_anon_1ab41a539_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab41a539_ctx_handler));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a51422ab_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, _1663_next);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5421975_write((*(_self_))._field_oc, _1633_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93955e8_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a513b01e_strRuneIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e3b9b_StrRuneIter> _24132_it) {
	_21ca86171_Builder _2427_sb = static__21ca869bd_New(64LL);;
	static__1a939530c_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _21ca879d0_Str(&_2427_sb);;
	_21ca87bcd_Clear(&_2427_sb);
	static__1a93958d4_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _21ca879d0_Str(&_2427_sb);;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a440d116_Copy && _1a5143015_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1ab42969c:;
				{
					jule::Ptr<_1a83cc1ad_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_1a51548a6_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1ab427ac9;
					};
					goto _case_begin_1ab427b40;
				}
			}
			else {
				_case_begin_1ab427b40:;
				{
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a51548a6_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ab427ac9:;
		};
	} else {
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a5428608_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ab4344ed, jule::Ptr<__jule_anon_1ab4344ed_ctx>::make(__jule_anon_1ab4344ed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab4344ed_ctx_handler));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a5428608_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a5421975_write((*(_self_))._field_oc, _2443_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a51422ab_scope(_self_, (*(*(_24132_it))._field_Base.alloc)._field_Scope);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, _2473_next);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5421975_write((*(_self_))._field_oc, _2443_begin);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a513b2c7_ifCase(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355884_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a51422ab_scope(_self_, (*_35327_i.alloc)._field_Scope);
}



inline void _1a513b580_conditional(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835609e_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab449a63:;
		if (it != expr_end) {
			jule::Ptr<_1a8355884_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1ab449a63;
				};
				if (_3637_writed) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_1a513b2c7_ifCase(_self_, _36415_elif);
			}
			_iter_next_1ab449a63:;
			++it;
			goto _iter_begin_1ab449a63;
		}
		_iter_end_1ab449a63:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a51422ab_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a513b838_infIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835639b_InfIter> _38228_it) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a51422ab_scope(_self_, (*(_38228_it))._field_Scope);
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93958d4_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93955e8_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a513bae1_whileIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8356852_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39930_it.alloc)._field_Next != nullptr)) {
			_1a5141c4a_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a51422ab_scope(_self_, (*_39930_it.alloc)._field_Scope);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93958d4_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a93955e8_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a513bd99_rangeIter(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835729d_RangeIter> _43830_it) {
	{
		
		if ((_1a8539084_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab46045d:;
			{
				_1a513a9ad_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1a8538ced_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab46010b:;
			{
				_1a513a9ad_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1a8539abd_Map((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab460172:;
			{
				_1a513ac66_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1ab460095:;
			{
				_1a513a9ad_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1ab45ee85:;
	};
}



inline void _1a513c152_cont(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357633_ContSt> _45121_c) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a93958d4_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _1a513c40a_label(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357eb3_Label> _45622_l) {
	static__1a9395bc0_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a513c6b3_gotoSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358623_GotoSt> _46123_gt) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9395bc0_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _1a513c96b_postfix(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a83589ec_Postfix> _46628_p) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a5421975_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _1a513cc24_assignLeft(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ab469478:;
			{
				jule::Ptr<_1a828ccd8_IndexingExprModel> _4768_iem = (*(_47332_model)).cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43);;
				jule::Ptr<_1a8544633_Map> _4774__map = _1a8539abd_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1ab469412;
				};
				jule::Ptr<_1a81c246a_StructIns> _4838_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*(_4774__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a829a752_FnIns> _4858_f = (*(_1a81c3515_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_2053852c3_Production))) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5424109_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1ab469412:;
	};
	_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _1a513cecc_shl(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _50424_a) {
	_1a513cc24_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a5148ee9_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _1a513d285_shr(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _51024_a) {
	_1a513cc24_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a514935c_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _1a513d53d_divByZeroAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _51636_a) {
	_1a513cc24_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a51481d5_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _1a513da16_operatorOverloadingAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _52247_s, jule::Ptr<_1a8289e7d_OperandExprModel>* _52273_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _5238_r, jule::U64 _52336_op) {
	;
	jule::Ptr<_1a829a752_FnIns> _5257_f = _1a8ddadb9_FindOperator(_52247_s, _52336_op, false);;
	if ((_5257_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:527:4"));;
	};
	static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5257_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a513cc24_assignLeft(_self_, &((*((*(_52273_l))))._field_Model));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5238_r))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a513dcbe_assign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8358ea3_Assign> _53727_a) {
	{
		auto &_match_expr{ (*((*(_53727_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a8cc7635:;
			{
				if ((_205385081_Safety && (_1a85395a1_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1a513d53d_divByZeroAssign(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a8cc76ac:;
			{
				if ((_1a85395a1_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a513cecc_shl(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a8cc7723:;
			{
				if ((_1a85395a1_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a513d285_shr(_self_, _53727_a);
					return;;
				};
			}
		}
		_match_end_1a8cc7569:;
	};
	if ((((*((*(_53727_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a85395a1_Struct((*((*_53727_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_1a81c246a_StructIns> _5608_s = _1a85395a1_Struct((*((*(_53727_a))._field_Left))._field_Type);;
		_1a513da16_operatorOverloadingAssign(_self_, &(_5608_s), &((*_53727_a.alloc)._field_Left), &((*_53727_a.alloc)._field_Right), (*(*(_53727_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1a513cc24_assignLeft(_self_, &((*(*(_53727_a))._field_Left.alloc)._field_Model));
	_1a5421975_write((*_self_.alloc)._field_oc, (*(*(_53727_a))._field_Op.alloc)._field_Kind);
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_53727_a.alloc)._field_Right))._field_Model);
}



inline void _1a513e077_mapLookupAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _57037_a) {
	jule::Ptr<_1a828ccd8_IndexingExprModel> _5727_iem = (*((*(_57037_a))))._field_Right.cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43);;
	jule::Ptr<_1a8544633_Map> _5737__map = _1a8539abd_Map((*((*(_5727_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1a81c246a_StructIns> _5757_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5737__map))._field_Key; (*it++) = (*_5737__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a829a752_FnIns> _5777_f = (*(_1a81c3515_FindMethod(_5757_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5777_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a513cc24_assignLeft(_self_, &((*(*(_5727_iem))._field_Expr.alloc)._field_Model));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5727_iem.alloc)._field_Index))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57037_a))))._field_Left[0LL] != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[0LL]))._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57037_a))))._field_Left[1LL] != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[1LL]))._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a513e330_multiAssignTup(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _60236_a) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a8290a66_TupleExprModel> _6127_tup = (*((*(_60236_a))))._field_Right.cast_ptr<_1a8290a66_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6127_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cdc6e4:;
		if (it != expr_end) {
			jule::I64 _6148_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _61415_r = *it;
			{
				_1a5422327_indent((*(_self_))._field_oc);
				jule::Ptr<_1a85028cc_Data> _6168_l = (*((*(_60236_a))))._field_Left[_6148_i];;
				if ((_6168_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6168_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1a8ce0829:;
							{
								jule::Ptr<_1a83cc1ad_Var> _62010_v = (*(_6168_l))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
								if ((!((*(_62010_v))._field_Reference))) {
									goto _match_end_1a8ce07b3;
								};
								{
									auto expr = &((*((*(_60236_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a8ce182a:;
									if (it != expr_end) {
										jule::Ptr<_1a83cc1ad_Var> _62713_dv = *it;
										{
											if ((_62010_v == _62713_dv)) {
												goto _julec_label_1a8ce1770;
											};
										}
										_iter_next_1a8ce182a:;
										++it;
										goto _iter_begin_1a8ce182a;
									}
									_iter_end_1a8ce182a:;
								};
								goto _match_end_1a8ce07b3;
								_julec_label_1a8ce1770:;
								static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62010_v);
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60236_a))))._field_Left[_6148_i]=nullptr;
								goto _iter_next_1a8cdc6e4;
							}
						}
						_match_end_1a8ce07b3:;
					};
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6168_l.alloc)._field_Type);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a90deebe_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a5139380_assignArgName, static_cast<jule::Uintptr>(_6148_i));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61415_r.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8cdc6e4:;
			++it;
			_6148_i++;
			goto _iter_begin_1a8cdc6e4;
		}
		_iter_end_1a8cdc6e4:;
	};
	{
		auto expr = &((*((*(_60236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ce78ca:;
		if (it != expr_end) {
			jule::I64 _6568_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _65615_l = *it;
			{
				if ((_65615_l == nullptr)) {
					goto _iter_next_1a8ce78ca;
				};
				_1a5422327_indent((*(_self_))._field_oc);
				_1a513cc24_assignLeft(_self_, &((*(_65615_l))._field_Model));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a90deebe_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a5139380_assignArgName, static_cast<jule::Uintptr>(_6568_i));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8ce78ca:;
			++it;
			_6568_i++;
			goto _iter_begin_1a8ce78ca;
		}
		_iter_end_1a8ce78ca:;
	};
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a513e5d8_multiAssignFn(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign>* _67235_a) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	jule::Ptr<_1a828c458_FnCallExprModel> _6777_f = (*((*(_67235_a))))._field_Right.cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
	_1a543b363_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6777_f))._field_Func))._field_Result));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67235_a))))._field_Right);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a8543a83_Tuple> _6837_tup = _1a8539d54_Tup((*(*(_6777_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67235_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d0142d:;
		if (it != expr_end) {
			jule::I64 _6848_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _68415_l = *it;
			{
				if ((_68415_l == nullptr)) {
					goto _iter_next_1a8d0142d;
				};
				;
				_1a5422327_indent((*(_self_))._field_oc);
				_1a513cc24_assignLeft(_self_, &((*(_68415_l))._field_Model));
				{
					
					if (_1a85360b4_Equal((*(_6837_tup))._field_Types[_6848_i], (*(_68415_l))._field_Type)) {
						_case_begin_1a8d0b7ce:;
						{
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_6848_i));
						}
					}
					else if (_1a8dd7aa8_IsAny(&((*(_68415_l))._field_Type))) {
						_case_begin_1a8d086dd:;
						{
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_6848_i));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a542347c_pushAnyType((*(_self_))._field_oc, (*(_6837_tup))._field_Types[_6848_i])));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1a8d027a3:;
						{
							if ((_1a8539837_Trait((*(_6837_tup))._field_Types[_6848_i].ptr()) != nullptr)) {
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1a82a2da8_Trait> _70510_t1 = _1a8539837_Trait((*(_68415_l))._field_Type.ptr());;
								jule::Ptr<_1a82a2da8_Trait> _70610_t2 = _1a8539837_Trait((*(_6837_tup))._field_Types[_6848_i].ptr());;
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_6848_i));
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1a5423d51_pushAndWriteMaskMapper((*(_self_))._field_oc, _70510_t1, _70610_t2);
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1a8d037d7;
							};
							jule::Ptr<_1a82a2da8_Trait> _7145_t = _1a8539837_Trait((*(_68415_l))._field_Type);;
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_6848_i));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1a90e0cd3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7145_t);
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a8dda98a_FindTraitTypeOffset(_7145_t, (*(_6837_tup))._field_Types[_6848_i])));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1a8d037d7:;
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a8d0142d:;
			++it;
			_6848_i++;
			goto _iter_begin_1a8d0142d;
		}
		_iter_end_1a8d0142d:;
	};
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a513e891_multiAssign(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359459_MultiAssign> _73132_a) {
	{
		auto expr = &((*(_73132_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d121a8:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _73415_d = *it;
			{
				_1a5428608_varInitExpr((*(_self_))._field_oc, &(_73415_d), nullptr);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a5422327_indent((*(_self_))._field_oc);
			}
			_iter_next_1a8d121a8:;
			++it;
			goto _iter_begin_1a8d121a8;
		}
		_iter_end_1a8d121a8:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a8d128d4:;
			{
				_1a513e077_mapLookupAssign(_self_, &(_73132_a));
				return;;
			}
		}
		_match_end_1a8d1286d:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1a8d1296c:;
			{
				_1a513e330_multiAssignTup(_self_, &(_73132_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a8d1441e:;
			{
				_1a513e5d8_multiAssignFn(_self_, &(_73132_a));
			}
		}
		else {
			_case_begin_1a8d143a8:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:753:4"));;
			}
		}
		_match_end_1a8d14342:;
	};
}



inline jule::Fn<void> _1a513ebd2_matchExpr(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _75730_m) {
	if ((!(_1a8503317_IsConst((*(_75730_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1a8d16aa3, jule::Ptr<__jule_anon_1a8d16aa3_ctx>::make(__jule_anon_1a8d16aa3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d16aa3_ctx_handler);;
	};
	if (((!(_1a828310d_IsBool((*(*(_75730_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1a8280a12_ReadBool((*((*(_75730_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1a8d17dd4, jule::Ptr<__jule_anon_1a8d17dd4_ctx>::make(__jule_anon_1a8d17dd4_ctx{._self_=_self_,._75730_m=_75730_m}).as<jule::Uintptr>(), __jule_anon_1a8d17dd4_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a5140045_case(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _76725_m, jule::Ptr<_1a835a6be_Case> _76746_c) {
	if ((((*(_76746_c))._field_Exprs.len() != 0LL) && (!((*(_76725_m))._field_Comptime)))) {
		if ((((*_76725_m.alloc)._field_Cases.len() > 0LL) && ((*(_76725_m))._field_Cases[0LL] == _76746_c))) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_76746_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab5658e8:;
			if (it != expr_end) {
				jule::I64 _7749_i = it - expr->begin();
				jule::Ptr<_1a85028cc_Data> _77416_expr = *it;
				{
					{
						
						if ((!((*_76725_m.alloc)._field_TypeMatch))) {
							_case_begin_1ab56d615:;
							{
								jule::Fn<void> _7776_caseExpr = _1a513ebd2_matchExpr(_self_, _76725_m);;
								if (_1a8503658_GoodOperand((*_76725_m.alloc)._field_Expr.ptr(), &(_77416_expr))) {
									if ((_7776_caseExpr != nullptr)) {
										_7776_caseExpr();
										_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_77416_expr))._field_Model);
								} else {
									_1a514a748_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
									if ((_7776_caseExpr != nullptr)) {
										_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7776_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ab566553:;
							{
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a8535877_Type> _79310_tk = (*(_77416_expr))._field_Model.cast_ptr<_1a8535877_Type>(&__jule_any_type87);;
								if ((_1a8539837_Trait((*((*_76725_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a5146a41_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a85382b4_Sptr((*(_77416_expr))._field_Type) != nullptr));
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a90e0cd3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a8539837_Trait((*((*(_76725_m))._field_Expr))._field_Type));
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a8dda98a_FindTraitTypeOffset(_1a8539837_Trait((*((*(_76725_m))._field_Expr))._field_Type), (*_77416_expr.alloc)._field_Type)));
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8037_j = _1a542347c_pushAnyType((*(_self_))._field_oc, _79310_tk);;
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_8037_j));
								};
							}
						}
						_match_end_1ab566443:;
					};
					if ((((*_76746_c.alloc)._field_Exprs.len() - _7749_i) > 1LL)) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1ab5658e8:;
				++it;
				_7749_i++;
				goto _iter_begin_1ab5658e8;
			}
			_iter_end_1ab5658e8:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_76725_m))._field_Default == _76746_c) && ((*_76725_m.alloc)._field_Cases.len() != 0LL))) {
		_1a5422327_indent((*(_self_))._field_oc);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a9396297_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_76746_c));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_76746_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a5422327_indent((*(_self_))._field_oc);
		_1a51422ab_scope(_self_, (*_76746_c.alloc)._field_Scope);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a51402ed_matchSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8359b96_Match> _83728_m) {
	if ((((*(_83728_m))._field_Cases.len() == 0LL) && ((*_83728_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_83728_m.alloc)._field_Comptime && (((*_83728_m.alloc)._field_Default == nullptr) || ((*((*((*_83728_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	if (((!((*_83728_m.alloc)._field_Comptime)) && (!(_1a8503317_IsConst((*_83728_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a440d116_Copy && _1a5143015_isCopyOptimizable(&((*_83728_m.alloc)._field_Expr)))) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_83728_m))._field_Expr.alloc)._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a5422327_indent((*(_self_))._field_oc);
	};
	if (((*_83728_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_83728_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab581dba:;
			if (it != expr_end) {
				jule::Ptr<_1a835a6be_Case> _86516_c = *it;
				{
					if ((_86516_c == nullptr)) {
						goto _iter_next_1ab581dba;
					};
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5422327_indent((*(_self_))._field_oc);
					_1a5140045_case(_self_, _83728_m, _86516_c);
				}
				_iter_next_1ab581dba:;
				++it;
				goto _iter_begin_1ab581dba;
			}
			_iter_end_1ab581dba:;
		};
	};
	if (((*_83728_m.alloc)._field_Default != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5140045_case(_self_, _83728_m, (*_83728_m.alloc)._field_Default);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a9395eab_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_83728_m));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a51405a6_fallSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835adb7_FallSt> _89223_f) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9396297_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89223_f))._field_DestCase);
}



inline void _1a514085e_breakSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8357a0c_BreakSt> _89724_b) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_89724_b))._field_It != 0LLU)) {
		static__1a93955e8_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_89724_b.alloc)._field_It);
	} else {
		static__1a9395eab_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89724_b))._field_Mtch);
	};
}



inline void _1a5140b17_setResult(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835b25d_RetSt> _90630_r) {
	if (((*((*((*((*(_90630_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_90630_r.alloc)._field_Expr);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a5422327_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_90630_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab58bd81:;
			{
				jule::Slice<jule::Ptr<_1a85028cc_Data>> _9168_datas = (*((*(_90630_r))._field_Expr.unsafe_cast_ptr<_1a8290a66_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9168_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab590a66:;
					if (it != expr_end) {
						jule::I64 _9178_i = it - expr->begin();
						jule::Ptr<_1a85028cc_Data> _91711_data = *it;
						{
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_9178_i));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_91711_data))._field_Model);
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a5422327_indent((*(_self_))._field_oc);
						}
						_iter_next_1ab590a66:;
						++it;
						_9178_i++;
						goto _iter_begin_1ab590a66;
					}
					_iter_end_1ab590a66:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab58ea10:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a51548a6_model((*((*(_self_))._field_oc))._field_ec, (*_90630_r.alloc)._field_Expr);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1ab58e625:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:930:4"));;
			}
		}
		_match_end_1ab58e5ae:;
	};
}



inline void _1a5140dc0_retSt(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a835b25d_RetSt> _93426_r) {
	if (_1a8297b4a_IsVoid((*((*(_93426_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93426_r))._field_Func.alloc)._field_Result);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93426_r))._field_Expr != nullptr)) {
		_1a5140b17_setResult(_self_, _93426_r);
	};
	if ((*((*((*_93426_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a543b363_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93426_r))._field_Func.alloc)._field_Result));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a5141178_var(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _97024_v) {
	if ((!((*(_97024_v))._field_Constant))) {
		_1a54288b1_var((*(_self_))._field_oc, _97024_v);
	};
}



inline void _1a5141431_mutSlicing(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e288c_MutSlicingExprModel> _97631_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_97631_m))._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2053852c3_Production))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5424109_locInfo((*(_self_))._field_oc, &((*_97631_m.alloc)._field_Token));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Left);
	if (((*_97631_m.alloc)._field_Right != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Right);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a51416d9_swap(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e1638_SwapExprModel> _99325_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a514a748_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99325_m))._field_Left))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a514a748_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99325_m.alloc)._field_Right))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5141992_exceptionalForwarding(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a43e10a5_ExceptionalForwardingExprModel> _100142_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a514c173_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100142_m))._field_Expr));
}



inline void _1a5141c4a_st(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Any _100723_st) {
	if ((_100723_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _100723_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ab5acd80:;
			{
				_1a51422ab_scope(_self_, _100723_st.cast_ptr<_1a8355466_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab5ad105:;
			{
				_1a5141178_var(_self_, _100723_st.cast_ptr<_1a83cc1ad_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab5ad16b:;
			{
				_1a51548a6_model((*((*(_self_))._field_oc))._field_ec, (*(_100723_st.unsafe_cast_ptr<_1a85028cc_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab5ad8db:;
			{
				_1a513b580_conditional(_self_, _100723_st.cast_ptr<_1a835609e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ab5ad952:;
			{
				_1a513b838_infIter(_self_, _100723_st.cast_ptr<_1a835639b_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab5ad9b8:;
			{
				_1a513bae1_whileIter(_self_, _100723_st.cast_ptr<_1a8356852_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab5ada2e:;
			{
				_1a513bd99_rangeIter(_self_, _100723_st.cast_ptr<_1a835729d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab5ada95:;
			{
				_1a513c152_cont(_self_, _100723_st.cast_ptr<_1a8357633_ContSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab5adb0b:;
			{
				_1a513c40a_label(_self_, _100723_st.cast_ptr<_1a8357eb3_Label>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ab5adb72:;
			{
				_1a513c6b3_gotoSt(_self_, _100723_st.cast_ptr<_1a8358623_GotoSt>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab5adbd8:;
			{
				_1a513c96b_postfix(_self_, _100723_st.cast_ptr<_1a83589ec_Postfix>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ab5adc4e:;
			{
				_1a513dcbe_assign(_self_, _100723_st.cast_ptr<_1a8358ea3_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab5adcb5:;
			{
				_1a513e891_multiAssign(_self_, _100723_st.cast_ptr<_1a8359459_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab5add2b:;
			{
				_1a51402ed_matchSt(_self_, _100723_st.cast_ptr<_1a8359b96_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ab5add92:;
			{
				_1a51405a6_fallSt(_self_, _100723_st.cast_ptr<_1a835adb7_FallSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ab5ade19:;
			{
				_1a514085e_breakSt(_self_, _100723_st.cast_ptr<_1a8357a0c_BreakSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab5ade91:;
			{
				_1a5140dc0_retSt(_self_, _100723_st.cast_ptr<_1a835b25d_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ab5ae018:;
			{
				_1a5152387_pushToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1a43e33e8_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ab5ae090:;
			{
				_1a5152640_appendToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1a43e37c2_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ab5ae117:;
			{
				_1a5141431_mutSlicing(_self_, _100723_st.cast_ptr<_1a43e288c_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ab5ae18e:;
			{
				_1a51416d9_swap(_self_, _100723_st.cast_ptr<_1a43e1638_SwapExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ab5ae216:;
			{
				_1a5141992_exceptionalForwarding(_self_, _100723_st.cast_ptr<_1a43e10a5_ExceptionalForwardingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ab5ae28d:;
			{
				_1a513b01e_strRuneIter(_self_, _100723_st.cast_ptr<_1a43e3b9b_StrRuneIter>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1ab5acbe8:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ab5acb82:;
	};
}



inline void _1a5142003_scopeStmts(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355466_Scope>* _106332_s) {
	{
		auto expr = &((*((*(_106332_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5bc356:;
		if (it != expr_end) {
			jule::Any _106415_st = *it;
			{
				_1a5422327_indent((*(_self_))._field_oc);
				_1a5141c4a_st(_self_, _106415_st);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ab5bc356:;
			++it;
			goto _iter_begin_1ab5bc356;
		}
		_iter_end_1ab5bc356:;
	};
}



inline void _1a51422ab_scope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a8355466_Scope> _107226_s) {
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	if ((*(_107226_s))._field_Deferred) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5142003_scopeStmts(_self_, &(_107226_s));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_107226_s.alloc)._field_Deferred) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a5142564_commonFuncScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _108737_f) {
	if ((!(_1a8297b4a_IsVoid((*((*(_108737_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a8543a83_Tuple> _10898_tup = _1a8539d54_Tup((*((*(_108737_f))))._field_Result.ptr());;
		if ((_10898_tup != nullptr)) {
			_1a5422327_indent((*(_self_))._field_oc);
			_1a543ab8c_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10898_tup);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10898_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ab5c40a5:;
				if (it != expr_end) {
					jule::I64 _109410_i = it - expr->begin();
					jule::Ptr<_1a8535877_Type> _109417_t = *it;
					{
						if (_1a544339d_shouldInitialized(&(_109417_t))) {
							_1a5422327_indent((*(_self_))._field_oc);
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_109410_i));
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a5155a72_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109417_t);
							_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1ab5c40a5:;
					++it;
					_109410_i++;
					goto _iter_begin_1ab5c40a5;
				}
				_iter_end_1ab5c40a5:;
			};
		} else if (((*((*(*((*(_108737_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a5422327_indent((*(_self_))._field_oc);
			_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_108737_f))))._field_Result);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a544339d_shouldInitialized(&((*((*(_108737_f))))._field_Result))) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a5155a72_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_108737_f))))._field_Result);
			};
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a5142003_scopeStmts(_self_, &((*((*(_108737_f))))._field_Scope));
	if (((*(*((*(_108737_f))))._field_Decl.alloc)._field_Exceptional && _1a8297b4a_IsVoid((*((*(_108737_f))))._field_Decl))) {
		_1a5422327_indent((*_self_.alloc)._field_oc);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a51428c7_anonFuncScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _112734_m, jule::Str _112761_ident) {
	if (((*((*(_112734_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11313_closure = _1a8dd7de9_IsClosure(&(_112734_m));;
	if (_11313_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a83cc1ad_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1a83cc1ad_Var>>((void*)__jule_anon_1ab5d2976, jule::Ptr<__jule_anon_1ab5d2976_ctx>::make(__jule_anon_1ab5d2976_ctx{._self_=_self_,._112734_m=_112734_m}).as<jule::Uintptr>(), __jule_anon_1ab5d2976_ctx_handler); __jule_collection; }));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	if (_11313_closure) {
		_1a5422327_indent((*(_self_))._field_oc);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a5421975_write((*(_self_))._field_oc, _112761_ident);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a5421975_write((*(_self_))._field_oc, _112761_ident);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a5142564_commonFuncScope(_self_, &((*_112734_m.alloc)._field_Func));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11313_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a5142b80_funcScope(jule::Ptr<_1a5139ade_scopeCoder> _self_, jule::Ptr<_1a829a752_FnIns> _115930_f) {
	if (((*(_115930_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5142564_commonFuncScope(_self_, &(_115930_f));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1a51460d4_exprCoder> static__1a51464d0_new(jule::Ptr<_1a542125a_ObjectCoder>* _4821_oc) {
	return jule::new_ptr<_1a51460d4_exprCoder>(_1a51460d4_exprCoder{._field_oc=(*(_4821_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a83cc1ad_Var>>>(nullptr)});;
}



inline void _1a5146788_string(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _5424_c) {
	jule::Str _553_content = _1a8280c98_ReadStr((*(_5424_c)).ptr());;
	if ((_553_content.len() == 0LL)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _603_len = _1d97aa8e0_FmtInt(static_cast<jule::I64>(_553_content.len()), 10LL);;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a5156831_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _553_content);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5421975_write((*(_self_))._field_oc, _603_len);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5146a41_boolean(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Bool _6924_b) {
	if (_6924_b) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a5146c3e_nilLit(jule::Ptr<_1a51460d4_exprCoder> _self_) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a5147080_ftoaSpecialCases(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::F64* _8134_x) {
	{
		
		if (_1d9760873_IsNaN((*(_8134_x)))) {
			_case_begin_1ab606e95:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1d9761005_IsInf((*(_8134_x)), 1LL)) {
			_case_begin_1ab60703e:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1d9761005_IsInf((*(_8134_x)), -1LL)) {
			_case_begin_1ab6070b6:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ab606e0c:;
			{
				return false;;
			}
		}
		_match_end_1ab606cec:;
	};
	return true;;
}



inline void _1a5147338_float32(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _9525_c) {
	jule::F64 _963_x = _1a82817d2_AsF64((*(_9525_c)).ptr());;
	if (_1a5147080_ftoaSpecialCases(_self_, &(_963_x))) {
		return;;
	};
	{
		
		if ((_963_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ab60b252:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_963_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ab60a62a:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ab60a295:;
			{
				_1a5156bc7_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _963_x, 32LL);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1ab60a031:;
	};
}



inline void _1a51475e1_float64(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const>* _11425_c) {
	jule::F64 _1153_x = _1a82817d2_AsF64((*(_11425_c)).ptr());;
	if (_1a5147080_ftoaSpecialCases(_self_, &(_1153_x))) {
		return;;
	};
	{
		
		if ((_1153_x == jule::MAX_F64)) {
			_case_begin_1ab60da90:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1153_x == jule::MIN_F64)) {
			_case_begin_1ab60d771:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ab60d70a:;
			{
				_1a5156bc7_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1153_x, 64LL);
			}
		}
		_match_end_1ab60d496:;
	};
}



inline void _1a5147899_constant(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82273d2_Const> _13229_c) {
	{
		
		if (_1a8283394_IsStr(_13229_c.ptr())) {
			_case_begin_1ab61091b:;
			{
				_1a5146788_string(_self_, &(_13229_c));
			}
		}
		else if (_1a828310d_IsBool(_13229_c.ptr())) {
			_case_begin_1ab610982:;
			{
				_1a5146a41_boolean(_self_, _1a8280a12_ReadBool(_13229_c));
			}
		}
		else if (_1a828362a_IsF64(_13229_c.ptr())) {
			_case_begin_1ab6109e8:;
			{
				{
					
					if (((*_13229_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1ab613435:;
						{
							_1a5147338_float32(_self_, &(_13229_c));
						}
					}
					else {
						_case_begin_1ab61308e:;
						{
							_1a51475e1_float64(_self_, &(_13229_c));
						}
					}
					_match_end_1ab612e7e:;
				};
			}
		}
		else if (_1a8282ae1_IsI64(_13229_c.ptr())) {
			_case_begin_1ab610a5e:;
			{
				_1a5156eb3_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1a82804e5_ReadI64(_13229_c));
			}
		}
		else if (_1a8282d77_IsU64(_13229_c.ptr())) {
			_case_begin_1ab610ac5:;
			{
				_1a515729e_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1a828077b_ReadU64(_13229_c));
			}
		}
		else if (_1a82838b1_IsNil(_13229_c.ptr())) {
			_case_begin_1ab610b3b:;
			{
				_1a5146c3e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ab6108a5:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ab6107a6:;
	};
}



inline void _1a5147cb7_operatorOverloadingUnary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _15646_s, jule::U64 _15667_op, jule::Any _15686_e) {
	;
	jule::Ptr<_1a829a752_FnIns> _1587_f = _1a8ddadb9_FindOperator(_15646_s, _15667_op, true);;
	if ((_1587_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:160:4"));;
	};
	static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1587_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a514a748_possibleRefExpr(_self_, _15686_e);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a51481d5_divByZeroBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81881cd_Token>* _16833_op, jule::Ptr<_1a8289e7d_OperandExprModel>* _16857_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _16890_r) {
	;
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_16857_l))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16890_r))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_16890_r))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_2053852c3_Production))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1a5424109_locInfo((*(_self_))._field_oc, _16833_op);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab621e49:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab625678:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1ab6255ce:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a51488cd__unsafeBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, _21ca86171_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1a8535877_Type>* _2088_lk, jule::Ptr<_1a8535877_Type>* _20830_rk, jule::U64 _20847_op, jule::Str _20862_kind) {
	if ((_1a85395a1_Struct((*(_2088_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a81c246a_StructIns> _2118_s = _1a85395a1_Struct((*(_2088_lk)).ptr());;
		_1a51578ed_operatorOverloadingBinary(_20735_buf, &(_2118_s), _20759_l, _20768_r, _20847_op, _20862_kind);
		return;;
	};
	if (((_20847_op == static_cast<jule::U64>(50LLU)) || (_20847_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1a8dd7aa8_IsAny(_2088_lk)) {
				_case_begin_1ab62a1c7:;
				{
					if (((!(_1a85369aa_IsNil((*(_20830_rk)).ptr()))) && (!(_1a8dd7aa8_IsAny(_20830_rk))))) {
						({
							auto except = _21ca87408_WriteByte(_20735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
						});
						if ((_20847_op == static_cast<jule::U64>(51LLU))) {
							({
								auto except = _21ca87408_WriteByte(_20735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:7"));
							});
						};
						jule::I64 _2276_i = _1a542347c_pushAnyType((*(_self_))._field_oc, (*(_20830_rk)));;
						({
							auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:228:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, _1d97aaba9_Itoa(_2276_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, (*(_20759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, (*(_20768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1a8538ced_Arr((*(_2088_lk)).ptr()) != nullptr)) {
				_case_begin_1ab62a271:;
				{
					jule::Ptr<_1a85452b0_Arr> _2405_arr = _1a8538ced_Arr((*(_2088_lk)).ptr());;
					jule::Ptr<_1a829a752_FnIns> _2419_ins = _1a8ddb23d_FindFnGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2405_arr))._field_Elem; __jule_collection; }));;
					if ((_20847_op == static_cast<jule::U64>(51LLU))) {
						({
							auto except = _21ca87408_WriteByte(_20735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:243:6"));
						});
					};
					static__1a90e09e7_funcIns(_20735_buf, &(_2419_ins));
					({
						auto except = _21ca87408_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:246:5"));
					});
					({
						auto except = _21ca87150_WriteStr(_20735_buf, (*(_20759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
						(except.result);
					});
					({
						auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _21ca87150_WriteStr(_20735_buf, (*(_20768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _21ca87150_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _21ca87150_WriteStr(_20735_buf, _1d97aaba9_Itoa((*_2405_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _21ca87408_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
					});
					return;;
				}
			}
			_match_end_1ab62a0d9:;
		};
	};
	{
		auto &_match_expr{ _20847_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab62e0bb:;
			{
				jule::Ptr<_1a853d990_Prim> _2604_lp = _1a853802d_Prim((*(_2088_lk)).ptr());;
				if (((_2604_lp != nullptr) && _1a8325c61_IsUnsigInt((*_2604_lp.alloc)._field_Kind))) {
					({
						auto except = _21ca87408_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:262:5"));
					});
					_1a5431dd6_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20735_buf, _2604_lp);
					({
						auto except = _21ca87408_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:264:5"));
					});
				};
			}
		}
		_match_end_1ab62e055:;
	};
	({
		auto except = _21ca87408_WriteByte(_20735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:268:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_20735_buf, (*(_20759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_20735_buf, _20862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_20735_buf, (*(_20768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_20735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
	});
}



inline void _1a5148b86_unsafeBinary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a478_BinaryExprModel> _27733_m) {
	jule::I64 _2783_i = _21ca87e64_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2797_oldbuf = _21ca88481_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a514a748_possibleRefExpr(_self_, (*((*(_27733_m))._field_Left))._field_Model);
	jule::Str _2813_l = __jule_bytesToStr(_21ca88481_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2783_i));;
	{
		_21ca88739_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2797_oldbuf);
	};
	_1a514a748_possibleRefExpr(_self_, (*((*_27733_m.alloc)._field_Right))._field_Model);
	jule::Str _2843_r = __jule_bytesToStr(_21ca88481_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2783_i));;
	{
		_21ca88739_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2797_oldbuf);
	};
	_1a51488cd__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2813_l), &(_2843_r), &((*(*(_27733_m))._field_Left.alloc)._field_Type), &((*(*(_27733_m))._field_Right.alloc)._field_Type), (*((*_27733_m.alloc)._field_Op))._field_Id, (*(*(_27733_m))._field_Op.alloc)._field_Kind);
}



inline void _1a5148ee9_shl(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8289e7d_OperandExprModel>* _28925_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _28958_r) {
	;
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28925_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_28925_l))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28958_r))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_28958_r))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28925_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a831ceab_BitSizeOf((*(_1a853802d_Prim((*((*(_28925_l))))._field_Type.ptr())))._field_Kind)));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a514935c_shr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8289e7d_OperandExprModel>* _31725_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _31758_r) {
	;
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31725_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_31725_l))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31758_r))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a514a748_possibleRefExpr(_self_, (*((*(_31758_r))))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31725_l))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a831ceab_BitSizeOf((*(_1a853802d_Prim((*((*(_31725_l))))._field_Type.ptr())))._field_Kind)));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1a5149615_binary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a478_BinaryExprModel> _34527_m) {
	{
		auto &_match_expr{ (*((*(_34527_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab6569a6:;
			{
				if ((_205385081_Safety && (_1a85395a1_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1a51481d5_divByZeroBinary(_self_, &((*_34527_m.alloc)._field_Op), &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab656a2d:;
			{
				if ((_1a85395a1_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a5148ee9_shl(_self_, &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab656a94:;
			{
				if ((_1a85395a1_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1a514935c_shr(_self_, &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1ab6568da:;
	};
	_1a5148b86_unsafeBinary(_self_, _34527_m);
}



inline void _1a51498bd_var(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _36924_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab65b8ac:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a83cc1ad_Var>> _37010_prefix = *it;
			{
				if (_37010_prefix(_36924_m)) {
					return;;
				};
			}
			_iter_next_1ab65b8ac:;
			++it;
			goto _iter_begin_1ab65b8ac;
		}
		_iter_end_1ab65b8ac:;
	};
	if ((*(_36924_m))._field_Binded) {
		jule::Ptr<_1a819d116_Directive> _3764_d = _1a8dd9714_FindDirective(&((*_36924_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3764_d != nullptr)) {
			_1a5421c2d_writeBytes((*_self_.alloc)._field_oc, _1a542dca1_concatAllParts((*_3764_d.alloc)._field_Args));
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _36924_m);
}



inline void _1a5149b76_structureIns(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns> _38533_m) {
	_1a5434669_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38533_m);
}



inline void _1a5149e2e_unary(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828a852_UnaryExprModel> _38926_m) {
	if ((_1a85395a1_Struct((*((*(_38926_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1a81c246a_StructIns> _3928_s = _1a85395a1_Struct((*((*(_38926_m))._field_Expr))._field_Type);;
		_1a5147cb7_operatorOverloadingUnary(_self_, &(_3928_s), (*((*_38926_m.alloc)._field_Op))._field_Id, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_38926_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab662bc1:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1a514a748_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab66352e:;
			{
				if ((_2053852c3_Production || (_1a85382b4_Sptr((*((*(_38926_m))._field_Expr))._field_Type) == nullptr))) {
					goto _match_end_1ab663485;
				};
				_1a514a748_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a5424109_locInfo((*(_self_))._field_oc, &((*_38926_m.alloc)._field_Op));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1ab663485:;
	};
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a5421975_write((*(_self_))._field_oc, (*(*(_38926_m))._field_Op.alloc)._field_Kind);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a514a1d7_structureLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828b226_StructLitExprModel> _42033_m) {
	if ((*((*((*(_42033_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a5434669_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_42033_m.alloc)._field_Strct);
	if ((*(*((*(_42033_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4317_inited = false;;
	_julec_label_1ab66a7de:;
	{
		auto expr = &((*(*(_42033_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab66d99b:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _43315_f = *it;
			{
				{
					auto expr = &((*_42033_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab66e738:;
					if (it != expr_end) {
						jule::Ptr<_1a828ad80_StructArgExprModel> _43416_arg = *it;
						{
							if (((*(_43416_arg))._field_Field == _43315_f)) {
								if (_4317_inited) {
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1a9394c35_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43315_f))._field_Decl));
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1a514a748_possibleRefExpr(_self_, (*((*_43416_arg.alloc)._field_Expr))._field_Model);
								_4317_inited=true;
								goto _iter_next_1ab66d99b;
							};
						}
						_iter_next_1ab66e738:;
						++it;
						goto _iter_begin_1ab66e738;
					}
					_iter_end_1ab66e738:;
				};
				if ((*(*((*(_42033_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4317_inited=false;
					goto _iter_next_1ab66d99b;
				};
				if (_4317_inited) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4317_inited=_1a5154be7_handleFieldByDefault(_self_, &(_43315_f));
			}
			_iter_next_1ab66d99b:;
			++it;
			goto _iter_begin_1ab66d99b;
		}
		_iter_end_1ab66d99b:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a514a490_allocStructure(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828b523_AllocStructLitExprModel> _46335_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a90e1696_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46335_m))._field_Lit))._field_Strct));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a514a1d7_structureLit(_self_, (*_46335_m.alloc)._field_Lit);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a514a748_possibleRefExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _47132_expr) {
	{
		auto &_match_expr{ _47132_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab676e6b:;
			{
				jule::Ptr<_1a83cc1ad_Var> _4744_v = _47132_expr.unsafe_cast_ptr<_1a83cc1ad_Var>();;
				if ((*(_4744_v))._field_Reference) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a51548a6_model(_self_, _47132_expr);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1ab676e05:;
	};
	_1a51548a6_model(_self_, _47132_expr);
}



inline void _1a514ab66_castTraitFromTrait(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828baa6_CastingExprModel>* _48540_m, jule::Ptr<_1a82a2da8_Trait> _48572_t1, jule::Ptr<_1a82a2da8_Trait> _48594_t2) {
	_1a514a748_possibleRefExpr(_self_, (*((*((*(_48540_m))))._field_Expr))._field_Model);
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a5423d51_pushAndWriteMaskMapper((*(_self_))._field_oc, _48572_t1, _48594_t2);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a514ae1e_casting(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828baa6_CastingExprModel> _49828_m) {
	{
		
		if (_1a8dd7aa8_IsAny(&((*(_49828_m))._field_Type))) {
			_case_begin_1ab67ba64:;
			{
				if (_1a85369aa_IsNil((*_49828_m.alloc)._field_ExprType.ptr())) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a8538a67_TypeEnum((*(_49828_m))._field_ExprType) != nullptr)) {
					_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5094_i = _1a542347c_pushAnyType((*(_self_))._field_oc, (*_49828_m.alloc)._field_ExprType);;
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49828_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1ab67d747:;
						{
							jule::Ptr<_1a853d990_Prim> _5135_prim = _1a853802d_Prim((*(_49828_m))._field_ExprType);;
							if (((_5135_prim != nullptr) && _1a832602a_IsInt((*_5135_prim.alloc)._field_Kind))) {
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a5431dd6_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5135_prim);
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a514a748_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ab68097a;
							};
							goto _case_begin_1ab6809e1;
						}
					}
					else {
						_case_begin_1ab6809e1:;
						{
							_1a514a748_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1ab68097a:;
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_5094_i));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a8dd7aa8_IsAny(&((*(_49828_m))._field_ExprType))) {
			_case_begin_1ab67bb0d:;
			{
				_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a85382b4_Sptr((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a85382b4_Sptr((*(_49828_m))._field_Type)))._field_Elem);
				} else {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2053852c3_Production))) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5424109_locInfo((*(_self_))._field_oc, &((*_49828_m.alloc)._field_Token));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a542347c_pushAnyType((*(_self_))._field_oc, (*_49828_m.alloc)._field_Type)));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a853854a_Ptr((*(_49828_m))._field_ExprType.ptr()) != nullptr) || (_1a853854a_Ptr((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab67bb74:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a8539837_Trait((*(_49828_m))._field_ExprType.ptr()) != nullptr)) {
			_case_begin_1ab67bbda:;
			{
				if ((_1a8539837_Trait((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1a514ab66_castTraitFromTrait(_self_, &(_49828_m), _1a8539837_Trait((*(_49828_m))._field_Type), _1a8539837_Trait((*(_49828_m))._field_ExprType));
					return;;
				};
				_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a85382b4_Sptr((*(_49828_m))._field_Type) != nullptr)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a85382b4_Sptr((*(_49828_m))._field_Type)))._field_Elem);
				} else {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2053852c3_Production))) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5424109_locInfo((*(_self_))._field_oc, &((*_49828_m.alloc)._field_Token));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a90e0cd3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a8539837_Trait((*(_49828_m))._field_ExprType));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a8dda98a_FindTraitTypeOffset(_1a8539837_Trait((*(_49828_m))._field_ExprType), (*_49828_m.alloc)._field_Type)));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a8539837_Trait((*(_49828_m))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab67bc51:;
			{
				_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a90e0cd3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a8539837_Trait((*(_49828_m))._field_Type));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_1a8dda98a_FindTraitTypeOffset(_1a8539837_Trait((*(_49828_m))._field_Type), (*_49828_m.alloc)._field_ExprType)));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ab67b8cc:;
	};
	jule::Ptr<_1a853d990_Prim> _5957_prim = _1a853802d_Prim((*(_49828_m))._field_Type.ptr());;
	if (((_5957_prim != nullptr) && _1a8541e5a_IsStr(_5957_prim))) {
		jule::Ptr<_1a853d990_Prim> _5978_eprim = _1a853802d_Prim((*_49828_m.alloc)._field_ExprType.ptr());;
		if (((_5978_eprim != nullptr) && (_5957_prim != nullptr))) {
			if (_1a85403ba_IsU8(_5978_eprim)) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1a514a748_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
			_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1a8542e8e_Slc> _6088_slc = _1a8539084_Slc((*(_49828_m))._field_ExprType);;
		if ((_6088_slc != nullptr)) {
			_5978_eprim=_1a853802d_Prim((*_6088_slc.alloc)._field_Elem.ptr());
			if (_1a853ed9d_IsI32(_5978_eprim)) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1a514a748_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5957_prim=_1a853802d_Prim((*(_49828_m))._field_ExprType);
	if (((_5957_prim != nullptr) && _1a8541e5a_IsStr(_5957_prim))) {
		jule::Ptr<_1a8542e8e_Slc> _6248_slc = _1a8539084_Slc((*(_49828_m))._field_Type);;
		if ((_6248_slc != nullptr)) {
			_5957_prim=_1a853802d_Prim((*(_6248_slc))._field_Elem);
			if (_1a853ed9d_IsI32(_5957_prim)) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1a514a748_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a514a748_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a514b1c7_args(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _64526_m) {
	jule::I64 _6467_j = 0LL;;
	if (((((*((*((*(_64526_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64526_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64526_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a829631e_IsSelf((*((*((*((*(_64526_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6467_j)++;
	};
	{
		auto expr = &((*((*(_64526_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b34d5:;
		if (it != expr_end) {
			jule::I64 _6517_i = it - expr->begin();
			jule::Any _65110_arg = *it;
			{
				jule::Ptr<_1a82995ec_ParamIns> _6524_p = (*(*((*(_64526_m))))._field_Func.alloc)._field_Params[_6467_j];;
				if ((((*(_6524_p))._field_Decl != nullptr) && (*(*(_6524_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65110_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1ab6b6395:;
							{
								jule::Ptr<_1a83cc1ad_Var> _6566_v = _65110_arg.unsafe_cast_ptr<_1a83cc1ad_Var>();;
								if ((*(_6566_v))._field_Reference) {
									_1a51548a6_model(_self_, _65110_arg);
									goto _julec_label_1ab6bdc4e;
								};
							}
						}
						_match_end_1ab6b632e:;
					};
					_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a51548a6_model(_self_, _65110_arg);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1ab6bdc4e;
				};
				_1a514a748_possibleRefExpr(_self_, _65110_arg);
				_julec_label_1ab6bdc4e:;
				if ((((*((*(_64526_m))))._field_Args.len() - _6517_i) > 1LL)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6467_j)++;
			}
			_iter_next_1ab6b34d5:;
			++it;
			_6517_i++;
			goto _iter_begin_1ab6b34d5;
		}
		_iter_end_1ab6b34d5:;
	};
}



inline void _1a514b480_modelForCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _67633_expr) {
	{
		auto &_match_expr{ _67633_expr };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab6bec72:;
			{
				_1a514eab0_funcIns(_self_, _67633_expr.cast_ptr<_1a829a752_FnIns>(&__jule_any_type64));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab6be238:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _6828_ssie = _67633_expr.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>();;
				if (((*(_6828_ssie))._field_Method != nullptr)) {
					_1a514eab0_funcIns(_self_, (*_6828_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1ab6b532d:;
	};
	_1a514a748_possibleRefExpr(_self_, _67633_expr);
}



inline void _1a514b738_pushCallInf(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _69129_m) {
	if ((_2053852c3_Production || (!((*((*((*(_69129_m))))._field_Func))._field_Anon)))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69129_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69129_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ab6c37e2:;
				{
					if ((*((*((*((*((*((*(_69129_m))))._field_Expr.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1ab6c377b:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a5424109_locInfo((*(_self_))._field_oc, &((*((*(_69129_m))))._field_Token));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69129_m))))._field_Args.len() != 0LL)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a514ba79_isWrapped(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _71431_m) {
	if ((((!(_1a829bc1a_IsBuiltin((*((*(_71431_m))))._field_Func.ptr()))) && ((*((*(*((*(_71431_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a829631e_IsSelf((*((*((*((*(_71431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71431_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ab6c85a5:;
				{
					jule::Ptr<_1a828eee9_StructSubIdentExprModel> _7189_ssie = (*((*(_71431_m))))._field_Expr.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>();;
					{
						
						if (_1a82965a5_IsRef((*((*((*((*(_71431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a85382b4_Sptr((*((*(_7189_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1ab6ca354:;
							{
								goto _match_end_1ab6c950c;
							}
						}
						else {
							_case_begin_1ab6c9584:;
							{
								if ((_1a85395a1_Struct((*((*(_7189_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7189_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a51548a6_model(_self_, (*(*(_7189_ssie))._field_Expr.alloc)._field_Model);
										_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ab6c950c:;
					};
				}
			}
			_match_end_1ab6c853e:;
		};
	};
	return false;;
}



inline jule::Bool _1a514bdba_writeReceiver(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _73834_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73834_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab6ced81:;
			{
				_1a514a748_possibleRefExpr(_self_, (*((*(_73834_m.unsafe_cast_ptr<_1a828a852_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ab6d0090:;
			{
				_1a514a748_possibleRefExpr(_self_, (*((*((*(_73834_m.unsafe_cast_ptr<_1a43e3e98_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab6d0029:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:747:4"));;
			}
		}
		_match_end_1ab6ceeb3:;
	};
}



inline void _1a514c173_pureFuncCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _75134_m) {
	jule::Bool _7523_wrapped = _1a514ba79_isWrapped(_self_, _75134_m);;
	_1a514b480_modelForCall(_self_, (*((*(_75134_m))))._field_Expr);
	if ((!(_1a829bc1a_IsBuiltin((*((*(_75134_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75134_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a8dd9acc_HasDirective(&((*(*((*((*(_75134_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab6d4429:;
					if (it != expr_end) {
						jule::I64 _75811_i = it - expr->begin();
						jule::Ptr<_1a8533e91_InsGeneric> _75818_g = *it;
						{
							_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75818_g))._field_Type);
							if ((((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics.len() - _75811_i) > 1LL)) {
								_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1ab6d4429:;
						++it;
						_75811_i++;
						goto _iter_begin_1ab6d4429;
					}
					_iter_end_1ab6d4429:;
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a514b738_pushCallInf(_self_, _75134_m);
	if (((*(*((*(_75134_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75134_m))))._field_Func.alloc)._field_Anon)))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a829bc1a_IsBuiltin((*((*(_75134_m))))._field_Func))) && ((*(*((*((*(_75134_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a829631e_IsSelf((*((*((*((*(_75134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1ab6db134:;
				{
					jule::Ptr<_1a828eee9_StructSubIdentExprModel> _7829_ssie = (*((*(_75134_m))))._field_Expr.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>();;
					{
						
						if (_1a82965a5_IsRef((*((*((*((*(_75134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1ab6e0501:;
							{
								_1a514bdba_writeReceiver(_self_, (*((*(_7829_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a85382b4_Sptr((*((*(_7829_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1ab6e1a96:;
							{
								jule::Bool _7896_safe = _1a514bdba_writeReceiver(_self_, (*(*(_7829_ssie))._field_Expr.alloc)._field_Model);;
								if (_7896_safe) {
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_2053852c3_Production))) {
										_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a5424109_locInfo((*(_self_))._field_oc, &((*((*(_75134_m))))._field_Token));
										_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1ab6dc18a:;
							{
								if ((_1a85395a1_Struct((*((*(_7829_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7829_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1ab6dc9d7:;
											{
												jule::Ptr<_1a83cc1ad_Var> _8038_v = (*((*(_7829_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
												if ((*(_8038_v))._field_Reference) {
													goto _match_end_1ab6dceb0;
												};
												goto _case_begin_1ab6dd026;
											}
										}
										else {
											_case_begin_1ab6dd026:;
											{
												_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1ab6dceb0:;
									};
								};
								if (_7523_wrapped) {
									_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a853854a_Ptr((*((*(_7829_ssie))._field_Expr))._field_Type) == nullptr)) {
									_1a51548a6_model(_self_, (*(*(_7829_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a514a748_possibleRefExpr(_self_, (*((*((*(*(_7829_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ab6dc113:;
					};
					if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1ab6dacc1:;
				{
					_1a514a748_possibleRefExpr(_self_, (*((*((*(_75134_m))))._field_Expr.unsafe_cast_ptr<_1a828e658_TraitSubIdentExprModel>()))._field_Expr);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1ab6db0ac:;
		};
	};
	_1a514b1c7_args(_self_, _75134_m);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7523_wrapped) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a514c42b_coFuncCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel>* _84132_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8487_i = jule::Str();;
	if ((((*((*((*(_84132_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84132_m))))._field_Func.alloc)._field_AsAnon)) {
		_8487_i=_1d97aaba9_Itoa(_1a54229a9_pushCoSpawn((*(_self_))._field_oc, (*((*(_84132_m))))._field_Func));
		jule::Str _8514_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8487_i);;
		_1a5421975_write((*(_self_))._field_oc, _8514_t);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1a5421975_write((*(_self_))._field_oc, _8514_t);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1a5422327_indent((*(_self_))._field_oc);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1a514b480_modelForCall(_self_, (*((*(_84132_m))))._field_Expr);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84132_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab70786a:;
			if (it != expr_end) {
				jule::I64 _8738_j = it - expr->begin();
				{
					_1a5422327_indent((*(_self_))._field_oc);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_8738_j));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1a514a748_possibleRefExpr(_self_, (*((*(_84132_m))))._field_Args[_8738_j]);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ab70786a:;
				++it;
				_8738_j++;
				goto _iter_begin_1ab70786a;
			}
			_iter_end_1ab70786a:;
		};
		_1a5422327_indent((*(_self_))._field_oc);
	};
	if (!(_8487_i).empty()) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8487_i).empty()) {
		static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84132_m))))._field_Func));
	} else {
		_1a5421975_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8487_i));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8487_i).empty()) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8487_i).empty()) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a514c78e_writeUseExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _91934_f, jule::Ptr<_1a85028cc_Data> _91955_d) {
	if ((_1a8539d54_Tup((*(_91955_d))._field_Type.ptr()) == nullptr)) {
		_1a514a748_possibleRefExpr(_self_, (*_91955_d.alloc)._field_Model);
		_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a8290a66_TupleExprModel> _9257_tup = (*_91955_d.alloc)._field_Model.cast_ptr<_1a8290a66_TupleExprModel>(&__jule_any_type84);;
	_1a543ab8c_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a8539d54_Tup((*((*(_91934_f))))._field_Result.ptr()));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9257_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7195e6:;
		if (it != expr_end) {
			jule::I64 _9287_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _92810_data = *it;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_9287_i));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a514a748_possibleRefExpr(_self_, (*(_92810_data))._field_Model);
				if ((((*(_9257_tup))._field_Datas.len() - _9287_i) > 1LL)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ab7195e6:;
			++it;
			_9287_i++;
			goto _iter_begin_1ab7195e6;
		}
		_iter_end_1ab7195e6:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a514cb02_funcCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c458_FnCallExprModel> _94029_m, jule::Bool _94056_ignoreExceptional) {
	if ((*(_94029_m))._field_IsCo) {
		_1a514c42b_coFuncCall(_self_, &(_94029_m));
		return;;
	};
	if (((_1a829bc1a_IsBuiltin((*_94029_m.alloc)._field_Func.ptr()) || (!((*((*(*(_94029_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_94029_m.alloc)._field_Except != nullptr) && ((*(*(_94029_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a514c173_pureFuncCall(_self_, &(_94029_m));
		return;;
	};
	if (_94056_ignoreExceptional) {
		_1a514c173_pureFuncCall(_self_, &(_94029_m));
		if (((*(*(_94029_m))._field_Func.alloc)._field_Result != nullptr)) {
			_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a514c173_pureFuncCall(_self_, &(_94029_m));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	if (((*_94029_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_94029_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_94029_m.alloc)._field_Assigned)))) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a51422ab_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94029_m.alloc)._field_Except);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9785_forwarded = _1a8dd7613_IsForwarded(&((*_94029_m.alloc)._field_Except));;
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9785_forwarded) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9839_stmt = (*(*(_94029_m))._field_Except.alloc)._field_Stmts[((*(*(_94029_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9839_stmt };
				
				if (_match_expr.type == &__jule_any_type22) {
					_case_begin_1ab72803e:;
					{
						((*((*(_94029_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94029_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a5421e2b_addIndent((*(_self_))._field_oc);
						_1a5142003_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94029_m.alloc)._field_Except));
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5422327_indent((*(_self_))._field_oc);
						_1a514c78e_writeUseExpr(_self_, &((*_94029_m.alloc)._field_Func), _9839_stmt.cast_ptr<_1a85028cc_Data>(&__jule_any_type22));
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5422129_doneIndent((*(_self_))._field_oc);
						_1a5422327_indent((*(_self_))._field_oc);
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1ab7294a2:;
					{
						_1a51422ab_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94029_m.alloc)._field_Except);
					}
				}
				_match_end_1ab72943b:;
			};
			if (_9785_forwarded) {
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a5155a72_initExpr(_self_, (*(*(_94029_m))._field_Func.alloc)._field_Result);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a5422129_doneIndent((*(_self_))._field_oc);
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1a5424109_locInfo((*(_self_))._field_oc, &((*_94029_m.alloc)._field_Token));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a8297b4a_IsVoid((*((*(_94029_m))._field_Func))._field_Decl)))) {
			_1a5422327_indent((*(_self_))._field_oc);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a5422129_doneIndent((*(_self_))._field_oc);
	};
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a514cdaa_slice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828c832_SliceExprModel> _102326_m) {
	if (((*(_102326_m))._field_Elems.len() == 0LL)) {
		_1a54337bc_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102326_m.alloc)._field_ElemType);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a54337bc_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102326_m.alloc)._field_ElemType);
	jule::Str _10313_size = _1d97aaba9_Itoa((*_102326_m.alloc)._field_Elems.len());;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a5421975_write((*(_self_))._field_oc, _10313_size);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5421975_write((*(_self_))._field_oc, _10313_size);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102326_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73d52c:;
		if (it != expr_end) {
			jule::I64 _10417_i = it - expr->begin();
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a514a748_possibleRefExpr(_self_, (*(_102326_m))._field_Elems[_10417_i]);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ab73d52c:;
			++it;
			_10417_i++;
			goto _iter_begin_1ab73d52c;
		}
		_iter_end_1ab73d52c:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a514d163_indexing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828ccd8_IndexingExprModel> _105229_m) {
	{
		auto &_match_expr{ (*((*(_105229_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab7423aa:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_2053852c3_Production))) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5424109_locInfo((*(_self_))._field_oc, &((*(_105229_m))._field_Token));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10634_s = _1a8280c98_ReadStr((*((*(_105229_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a82273d2_Const>().ptr());;
				_1a5156831_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10634_s);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_10634_s.len()));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a514a748_possibleRefExpr(_self_, (*((*_105229_m.alloc)._field_Index))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ab742344:;
	};
	{
		
		if ((_1a8539abd_Map((*((*_105229_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab74b24e:;
			{
				jule::Ptr<_1a8544633_Map> _10768__map = _1a8539abd_Map((*((*(_105229_m))._field_Expr))._field_Type);;
				jule::Ptr<_1a81c246a_StructIns> _10778_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10768__map))._field_Key; (*it++) = (*_10768__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1a829a752_FnIns> _10798_f = (*(_1a81c3515_FindMethod(_10778_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10798_f));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a514a748_possibleRefExpr(_self_, (*(*(_105229_m))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a514a748_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_2053852c3_Production || (_1a853854a_Ptr((*((*_105229_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr) || _1a8dd77de_IsExprComesFromBind(&((*_105229_m.alloc)._field_Expr))) {
			_case_begin_1ab748889:;
			{
				_1a514a748_possibleRefExpr(_self_, (*(*(_105229_m))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a514a748_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ab748779:;
			{
				_1a514a748_possibleRefExpr(_self_, (*((*_105229_m.alloc)._field_Expr))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a5424109_locInfo((*(_self_))._field_oc, &((*_105229_m.alloc)._field_Token));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a514a748_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ab745b72:;
	};
}



inline void _1a514d41b_unsafeIndexing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e301e_UnsafeIndexingExprModel> _110335_m) {
	_1a514a748_possibleRefExpr(_self_, (*((*((*(_110335_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2053852c3_Production || (_1a853854a_Ptr((*(*((*(_110335_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1a8539abd_Map((*((*((*(_110335_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1ab75704b:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a514a748_possibleRefExpr(_self_, (*((*(*(_110335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ab754aa4:;
			{
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a514a748_possibleRefExpr(_self_, (*((*(*(_110335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ab755654:;
	};
}



inline void _1a514d6c4_anonFunc(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel> _112029_m) {
	jule::Bool _11213_closure = _1a8dd7de9_IsClosure(&(_112029_m));;
	jule::Str _11223_ident = _1a542313b_pushAnonFn((*(_self_))._field_oc, &(_112029_m));;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a5435bdc_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112029_m))._field_Func);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a5421975_write((*(_self_))._field_oc, _11223_ident);
	if (_11213_closure) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a5421975_write((*(_self_))._field_oc, _11223_ident);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a5421975_write((*(_self_))._field_oc, _11223_ident);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112029_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab75b748:;
			if (it != expr_end) {
				jule::I64 _11349_i = it - expr->begin();
				jule::Ptr<_1a83cc1ad_Var> _113416_v = *it;
				{
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a9395021_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113416_v);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a51498bd_var(_self_, _113416_v);
					if ((((*_112029_m.alloc)._field_Captured.len() - _11349_i) > 1LL)) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ab75b748:;
				++it;
				_11349_i++;
				goto _iter_begin_1ab75b748;
			}
			_iter_end_1ab75b748:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a5421975_write((*(_self_))._field_oc, _11223_ident);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a514d97c_mapExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828da42_MapExprModel> _115128_m) {
	jule::Ptr<_1a81c246a_StructIns> _11527_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115128_m))._field_Kind))._field_Key; (*it++) = (*(*(_115128_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1a829a752_FnIns> _11547_maker = (*(_1a81c3515_FindMethod(_11527_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115128_m.alloc)._field_Entries.len() == 0LL)) {
		static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11547_maker));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1a829a752_FnIns> _11617_f = (*(_1a81c3515_FindMethod(_11527_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1a5433e93_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115128_m.alloc)._field_Kind);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11547_maker));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115128_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab76cca9:;
		if (it != expr_end) {
			jule::Ptr<_1a828d668_KeyValPairExprModel> _117115_pair = *it;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11617_f));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a514a748_possibleRefExpr(_self_, (*(_117115_pair))._field_Key);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1a514a748_possibleRefExpr(_self_, (*_117115_pair.alloc)._field_Val);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ab76cca9:;
			++it;
			goto _iter_begin_1ab76cca9;
		}
		_iter_end_1ab76cca9:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a514dc35_slicing(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828e0c5_SlicingExprModel> _118628_m) {
	_1a514a748_possibleRefExpr(_self_, (*(_118628_m))._field_Expr);
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2053852c3_Production))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5424109_locInfo((*(_self_))._field_oc, &((*_118628_m.alloc)._field_Token));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a514a748_possibleRefExpr(_self_, (*_118628_m.alloc)._field_Left);
	if (((*_118628_m.alloc)._field_Right != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a514a748_possibleRefExpr(_self_, (*_118628_m.alloc)._field_Right);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a514dedd_traitSub(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828e658_TraitSubIdentExprModel> _120229_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a90e0cd3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120229_m))._field_Trt);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a514a748_possibleRefExpr(_self_, (*_120229_m.alloc)._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_2053852c3_Production))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5424109_locInfo((*(_self_))._field_oc, &((*_120229_m.alloc)._field_Token));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a90e070b_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120229_m.alloc)._field_Method));
}



inline void _1a514e296_structureSub(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a828eee9_StructSubIdentExprModel> _121833_m) {
	_1a514a748_possibleRefExpr(_self_, (*((*(_121833_m))._field_Expr))._field_Model);
	if (((*_121833_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a9394c35_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_121833_m.alloc)._field_Field))._field_Decl));
}



inline void _1a514e54e_array(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290769_ArrayExprModel> _122726_m) {
	if ((((*((*(_122726_m))._field_Kind))._field_N == 0LL) || (((*_122726_m.alloc)._field_Elems.len() == 0LL) && (!(_1a54430c3_ableToInit(&((*(*(_122726_m))._field_Kind.alloc)._field_Elem))))))) {
		_1a54349cc_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_122726_m.alloc)._field_Elems.len() == 2LL) && ((*(_122726_m))._field_Elems[1LL] == nullptr))) {
		_1a54349cc_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a514a748_possibleRefExpr(_self_, (*(_122726_m))._field_Elems[0LL]);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a54349cc_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_122726_m.alloc)._field_Elems.len() != (*(*(_122726_m))._field_Kind.alloc)._field_N)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_122726_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab788a1c:;
		if (it != expr_end) {
			jule::I64 _12607_i = it - expr->begin();
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a514a748_possibleRefExpr(_self_, (*_122726_m.alloc)._field_Elems[_12607_i]);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1ab788a1c:;
			++it;
			_12607_i++;
			goto _iter_begin_1ab788a1c;
		}
		_iter_end_1ab788a1c:;
	};
	if ((((*_122726_m.alloc)._field_Elems.len() != (*(*(_122726_m))._field_Kind.alloc)._field_N) && _1a54430c3_ableToInit(&((*(*(_122726_m))._field_Kind.alloc)._field_Elem)))) {
		_1a5155258_fillCollectionByDefault(_self_, &((*(*(_122726_m))._field_Kind.alloc)._field_Elem));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1a514e807_funcInsCommon(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns> _127734_m) {
	_1a5436050_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _127734_m);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514eab0_funcIns(_self_, _127734_m);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a514eab0_funcIns(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829a752_FnIns> _128428_m) {
	if ((((*(_128428_m))._field_Decl != nullptr) && (*(*(_128428_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a819d116_Directive> _12864_d = _1a8dd9714_FindDirective(&((*(*(_128428_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12864_d != nullptr)) {
			_1a5421c2d_writeBytes((*(_self_))._field_oc, _1a542dca1_concatAllParts((*_12864_d.alloc)._field_Args));
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_128428_m));
}



inline void _1a514ed68_tuple(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290a66_TupleExprModel> _129526_m) {
	{
		auto expr = &((*_129526_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab796255:;
		if (it != expr_end) {
			jule::I64 _12968_i = it - expr->begin();
			jule::Ptr<_1a85028cc_Data> _129615_d = *it;
			{
				_1a514a748_possibleRefExpr(_self_, (*(_129615_d))._field_Model);
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129526_m))._field_Datas.len() - _12968_i) > 1LL)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5422327_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1ab796255:;
			++it;
			_12968_i++;
			goto _iter_begin_1ab796255;
		}
		_iter_end_1ab796255:;
	};
}



inline void _1a5150121_newCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291539_BuiltinNewCallExprModel> _130628_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130628_m))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130628_m.alloc)._field_Init != nullptr)) {
		_1a514a748_possibleRefExpr(_self_, (*_130628_m.alloc)._field_Init);
	} else if (_1a54430c3_ableToInit(&((*_130628_m.alloc)._field_Type))) {
		_1a5155a72_initExpr(_self_, (*_130628_m.alloc)._field_Type);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a51503c9_printCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> _131830_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1a829a752_FnIns> _13207_f = _1a8ddb23d_FindFnGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131830_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13207_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr(_self_, (*(*(_131830_m))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a5150682_printlnCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> _132732_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1a829a752_FnIns> _13297_f = _1a8ddb23d_FindFnGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132732_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13297_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr(_self_, (*(*(_132732_m))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a515093a_panicCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _133630_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1a514a748_possibleRefExpr(_self_, (*(_133630_m))._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a5424109_locInfo((*(_self_))._field_oc, &((*_133630_m.alloc)._field_Token));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a5150be3_errorCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _134430_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a8297b4a_IsVoid((*((*(_134430_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134430_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1ab7a784e:;
				{
					jule::Ptr<_1a83cc1ad_Var> _13495_v = (*((*(_134430_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
					if (((*(_13495_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1ab7a77d8:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a543b363_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134430_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134430_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1ab7abd92:;
				{
					jule::Ptr<_1a83cc1ad_Var> _13615_v = (*((*(_134430_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>();;
					if (((*(_13615_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1ab7abd2b:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a514a748_possibleRefExpr(_self_, (*((*(_134430_m))._field_Err))._field_Model);
	jule::I64 _13703_i = _1a542347c_pushAnyType((*(_self_))._field_oc, (*(*(_134430_m))._field_Err.alloc)._field_Type);;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_13703_i));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a5150e9b_copyCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293140_BuiltinCopyCallExprModel> _137629_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a514a748_possibleRefExpr(_self_, (*((*(_137629_m))._field_Dest))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a514a748_possibleRefExpr(_self_, (*((*_137629_m.alloc)._field_Src))._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5151254_lenCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _138428_m) {
	jule::Ptr<_1a8544633_Map> _13857__map = _1a8539abd_Map((*((*(_138428_m))._field_Expr))._field_Type.ptr());;
	if ((_13857__map != nullptr)) {
		jule::Ptr<_1a81c246a_StructIns> _13878_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13857__map.alloc)._field_Key; (*it++) = (*_13857__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1a829a752_FnIns> _13898_f = (*(_1a81c3515_FindMethod(_13878_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13898_f));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a514a748_possibleRefExpr(_self_, (*(*(_138428_m))._field_Expr.alloc)._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a514a748_possibleRefExpr(_self_, (*(*(_138428_m))._field_Expr.alloc)._field_Model);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a515150c_capCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829288c_BuiltinCapCallExprModel> _140028_m) {
	_1a514a748_possibleRefExpr(_self_, (*((*(_140028_m))._field_Expr))._field_Model);
	_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a51517b5_deleteCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _140531_m) {
	jule::Ptr<_1a8544633_Map> _14067__map = _1a8539abd_Map((*((*(_140531_m))._field_Dest))._field_Type.ptr());;
	if ((_14067__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1408:4"));;
	};
	jule::Ptr<_1a81c246a_StructIns> _14107_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14067__map))._field_Key; (*it++) = (*(_14067__map))._field_Val; __jule_collection; }));;
	;
	if (((*_140531_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1a829a752_FnIns> _14138_f = (*(_1a81c3515_FindMethod(_14107_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14138_f));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a514a748_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a514a748_possibleRefExpr(_self_, (*(*(_140531_m))._field_Key.alloc)._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1a829a752_FnIns> _14218_f = (*(_1a81c3515_FindMethod(_14107_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14218_f));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a514a748_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a5151a6d_makeCallSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel>* _142935_m) {
	jule::Ptr<_1a8542e8e_Slc> _14307_slice = _1a8539084_Slc((*((*(_142935_m))))._field_Type.ptr());;
	jule::Bool _14313_init = _1a54430c3_ableToInit(&((*(_14307_slice))._field_Elem));;
	if (_14313_init) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_142935_m))))._field_Type);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a514a748_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Len);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_142935_m))))._field_Cap != nullptr)) {
		_1a514a748_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Cap);
	} else {
		_1a514a748_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Len);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14313_init))) {
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a5155511_initCollection(_self_, &((*_14307_slice.alloc)._field_Elem));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a5151d26_makeCallStr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel>* _145333_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a514a748_possibleRefExpr(_self_, (*((*(_145333_m))))._field_Len);
	if (((*((*(_145333_m))))._field_Cap != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a514a748_possibleRefExpr(_self_, (*((*(_145333_m))))._field_Cap);
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a51520ce_makeCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _146429_m) {
	if ((_1a8539084_Slc((*(_146429_m))._field_Type.ptr()) != nullptr)) {
		_1a5151a6d_makeCallSlice(_self_, &(_146429_m));
		return;;
	};
	_1a5151d26_makeCallStr(_self_, &(_146429_m));
}



inline void _1a5152387_pushToSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e33e8_PushToSliceExprModel> _147232_m) {
	;
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a54337bc_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147232_m))._field_Elems))._field_ElemType);
	jule::Bool _14807_ptr = false;;
	{
		auto &_match_expr{ (*(_147232_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab7d3d75:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _14848_u = (*(_147232_m))._field_Dest.unsafe_cast_ptr<_1a828a852_UnaryExprModel>();;
				if ((_1a853854a_Ptr((*((*(_14848_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a514a748_possibleRefExpr(_self_, (*(*(_14848_u))._field_Expr.alloc)._field_Model);
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14807_ptr=true;
					goto _match_end_1ab7d2868;
				};
				goto _case_begin_1ab7d28ce;
			}
		}
		else {
			_case_begin_1ab7d28ce:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a514a748_possibleRefExpr(_self_, (*_147232_m.alloc)._field_Dest);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ab7d2868:;
	};
	if (((*(*(_147232_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14807_ptr) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a514a748_possibleRefExpr(_self_, (*((*(_147232_m))._field_Elems))._field_Elems[0LL]);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14807_ptr) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa((*(*(_147232_m))._field_Elems.alloc)._field_Elems.len()));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147232_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7db300:;
		if (it != expr_end) {
			jule::Any _151815_e = *it;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14807_ptr) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a514a748_possibleRefExpr(_self_, _151815_e);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ab7db300:;
			++it;
			goto _iter_begin_1ab7db300;
		}
		_iter_end_1ab7db300:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5152640_appendToSlice(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e37c2_AppendToSliceExprModel> _153234_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr(_self_, (*(_153234_m))._field_Dest);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a514a748_possibleRefExpr(_self_, (*_153234_m.alloc)._field_Slice);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a51528e8_appendCall(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _154031_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a514a748_possibleRefExpr(_self_, (*(_154031_m))._field_Dest);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a514a748_possibleRefExpr(_self_, (*_154031_m.alloc)._field_Elements);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5152ba1_sizeof(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293816_SizeofExprModel> _154827_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a514a748_possibleRefExpr(_self_, (*(_154827_m))._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5152e59_alignof(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8293eba_AlignofExprModel> _155428_m) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a514a748_possibleRefExpr(_self_, (*(_155428_m))._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5153212_runeLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a82941a7_RuneExprModel> _156024_m) {
	if (((*(_156024_m))._field_Code <= 127LL)) {
		({
			auto except = _21ca87408_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1562:4"));
		});
		jule::Str _15638_b = _1a5156215_sbtoa(static_cast<jule::U8>((*_156024_m.alloc)._field_Code));;
		if (_15638_b.equal("'", 1)) {
			({
				auto except = _21ca87408_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1565:5"));
			});
		};
		({
			auto except = _21ca87150_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15638_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1567:4"));
			(except.result);
		});
		({
			auto except = _21ca87408_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1568:4"));
		});
		return;;
	};
	_1a5156eb3_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156024_m.alloc)._field_Code));
}



inline void _1a51534ba_structureStatic(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8290390_StructStaticIdentExprModel> _157436_m) {
	static__1a90e09e7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157436_m))._field_Method));
}



inline void _1a5153773_backendEmit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a829452b_BackendEmitExprModel> _157832_m) {
	if (((*(_157832_m))._field_Exprs.len() == 0LL)) {
		_1a5421975_write((*(_self_))._field_oc, (*_157832_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15833_n = _21ca87e64_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15847_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_157832_m.alloc)._field_Exprs.len(), (*_157832_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157832_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7eb530:;
		if (it != expr_end) {
			jule::I64 _15858_i = it - expr->begin();
			jule::Any _158515_expr = *it;
			{
				_1a514a748_possibleRefExpr(_self_, _158515_expr);
				jule::Slice<jule::U8> _15878_buf = _21ca88481_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15847_args[_15858_i]=jule::Any(__jule_bytesToStr(_15878_buf.slice(_15833_n)), &__jule_any_type5);
				{
					_21ca88739_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15878_buf.slice(0LL, _15833_n));
				};
			}
			_iter_next_1ab7eb530:;
			++it;
			_15858_i++;
			goto _iter_begin_1ab7eb530;
		}
		_iter_end_1ab7eb530:;
	};
	_1a5421975_write((*(_self_))._field_oc, _1a85a78b6_Format((*_157832_m.alloc)._field_Code, _15847_args));
}



inline void _1a5153a2b_free(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8294828_FreeExprModel> _159425_m) {
	_1a514a748_possibleRefExpr(_self_, (*(_159425_m))._field_Expr);
	if (_205384bb8_RC) {
		_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a5153cd4_strComp(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e2309_StrCompExprModel> _160328_m) {
	if ((*(_160328_m))._field_NotEq) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16073_s = _1a8280c98_ReadStr((*_160328_m.alloc)._field_Right.ptr());;
	_1a514a748_possibleRefExpr(_self_, (*_160328_m.alloc)._field_Left);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a5156831_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16073_s);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_16073_s.len()));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160328_m.alloc)._field_NotEq) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a515408c_emptyCompare(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e1a56_EmptyCompareExprModel> _161933_m) {
	if ((*(_161933_m))._field_Neg) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a514a748_possibleRefExpr(_self_, (*_161933_m.alloc)._field_Expr);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a5154345_unsafeDeref(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e3e98_UnsafeDerefExprModel> _162832_m) {
	{
		
		if ((_1a85382b4_Sptr((*((*((*(_162832_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab80a099:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a514a748_possibleRefExpr(_self_, (*(*((*(_162832_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1ab809bd1:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1635:4"));;
			}
		}
		_match_end_1ab809ac1:;
	};
}



inline void _1a51545ed_unsafeCasting(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a43e4295_UnsafeCastingExprModel> _163934_m) {
	{
		
		if (_1a8dd7aa8_IsAny(&((*((*(_163934_m))._field_Base))._field_ExprType))) {
			_case_begin_1ab80cc7d:;
			{
				_1a514a748_possibleRefExpr(_self_, (*((*(*(_163934_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a85382b4_Sptr((*(*(_163934_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a85382b4_Sptr((*((*(_163934_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a54363b3_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_163934_m))._field_Base.alloc)._field_Type);
				};
				_1a5421975_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1ab80c8b5:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1652:4"));;
			}
		}
		_match_end_1ab80c7c7:;
	};
}



inline void _1a51548a6_model(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Any _165626_m) {
	{
		auto &_match_expr{ _165626_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab80d5ec:;
			{
				_1a5421975_write((*(_self_))._field_oc, _165626_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ab813635:;
			{
				_1a5421975_write((*(_self_))._field_oc, (*(_165626_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ab81369b:;
			{
				_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _165626_m.cast_ptr<_1a8535877_Type>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab813712:;
			{
				_1a5147899_constant(_self_, _165626_m.cast_ptr<_1a82273d2_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab813778:;
			{
				_1a51498bd_var(_self_, _165626_m.cast_ptr<_1a83cc1ad_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab8137de:;
			{
				_1a5149b76_structureIns(_self_, _165626_m.cast_ptr<_1a81c246a_StructIns>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab813855:;
			{
				_1a514e807_funcInsCommon(_self_, _165626_m.cast_ptr<_1a829a752_FnIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ab8144c1:;
			{
				_1a5148b86_unsafeBinary(_self_, (*(_165626_m.unsafe_cast_ptr<_1a43e2c22_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab814537:;
			{
				_1a5149615_binary(_self_, _165626_m.cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab81459d:;
			{
				_1a5149e2e_unary(_self_, _165626_m.cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab814614:;
			{
				_1a514a1d7_structureLit(_self_, _165626_m.cast_ptr<_1a828b226_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ab81467a:;
			{
				_1a514a490_allocStructure(_self_, _165626_m.cast_ptr<_1a828b523_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab8146e1:;
			{
				_1a514ae1e_casting(_self_, _165626_m.cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab814757:;
			{
				_1a514cb02_funcCall(_self_, _165626_m.cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab8147bd:;
			{
				_1a514cdaa_slice(_self_, _165626_m.cast_ptr<_1a828c832_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab814845:;
			{
				_1a514e54e_array(_self_, _165626_m.cast_ptr<_1a8290769_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ab8148bc:;
			{
				_1a514d41b_unsafeIndexing(_self_, _165626_m.cast_ptr<_1a43e301e_UnsafeIndexingExprModel>(&__jule_any_type136));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ab814944:;
			{
				_1a514d163_indexing(_self_, _165626_m.cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab8149bb:;
			{
				_1a514d6c4_anonFunc(_self_, _165626_m.cast_ptr<_1a828d28e_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab814a43:;
			{
				_1a514d97c_mapExpr(_self_, _165626_m.cast_ptr<_1a828da42_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab814aba:;
			{
				_1a514dc35_slicing(_self_, _165626_m.cast_ptr<_1a828e0c5_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab814b42:;
			{
				_1a514dedd_traitSub(_self_, _165626_m.cast_ptr<_1a828e658_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab814bb9:;
			{
				_1a514e296_structureSub(_self_, _165626_m.cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab814c41:;
			{
				_1a514ed68_tuple(_self_, _165626_m.cast_ptr<_1a8290a66_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab814cb8:;
			{
				_1a51503c9_printCall(_self_, _165626_m.cast_ptr<_1a8290d63_BuiltinPrintCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab814d40:;
			{
				_1a5150682_printlnCall(_self_, _165626_m.cast_ptr<_1a8291160_BuiltinPrintlnCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ab814db7:;
			{
				_1a5150121_newCall(_self_, _165626_m.cast_ptr<_1a8291539_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab814e3e:;
			{
				_1a515093a_panicCall(_self_, _165626_m.cast_ptr<_1a8291913_BuiltinPanicCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab814eb6:;
			{
				_1a5150be3_errorCall(_self_, _165626_m.cast_ptr<_1a8293519_BuiltinErrorCallExprModel>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ab81503d:;
			{
				_1a51520ce_makeCall(_self_, _165626_m.cast_ptr<_1a8291db9_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab8150b5:;
			{
				_1a51528e8_appendCall(_self_, _165626_m.cast_ptr<_1a8292293_BuiltinAppendCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ab81513c:;
			{
				_1a5150e9b_copyCall(_self_, _165626_m.cast_ptr<_1a8293140_BuiltinCopyCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ab8151b4:;
			{
				_1a5151254_lenCall(_self_, _165626_m.cast_ptr<_1a8292590_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab81523b:;
			{
				_1a515150c_capCall(_self_, _165626_m.cast_ptr<_1a829288c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ab8152b3:;
			{
				_1a51517b5_deleteCall(_self_, _165626_m.cast_ptr<_1a8292c66_BuiltinDeleteCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ab81533a:;
			{
				_1a5152ba1_sizeof(_self_, _165626_m.cast_ptr<_1a8293816_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ab8153b2:;
			{
				_1a5152e59_alignof(_self_, _165626_m.cast_ptr<_1a8293eba_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab815439:;
			{
				_1a5153212_runeLit(_self_, _165626_m.cast_ptr<_1a82941a7_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ab8154b1:;
			{
				_1a51534ba_structureStatic(_self_, _165626_m.cast_ptr<_1a8290390_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab815538:;
			{
				_1a5153773_backendEmit(_self_, _165626_m.cast_ptr<_1a829452b_BackendEmitExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ab8155b0:;
			{
				_1a5153a2b_free(_self_, _165626_m.cast_ptr<_1a8294828_FreeExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ab815637:;
			{
				_1a5153cd4_strComp(_self_, _165626_m.cast_ptr<_1a43e2309_StrCompExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ab8156ae:;
			{
				_1a51498bd_var(_self_, (*(_165626_m.unsafe_cast_ptr<_1a43e1d53_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ab815736:;
			{
				_1a515408c_emptyCompare(_self_, _165626_m.cast_ptr<_1a43e1a56_EmptyCompareExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ab8157ad:;
			{
				_1a5154345_unsafeDeref(_self_, _165626_m.cast_ptr<_1a43e3e98_UnsafeDerefExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab815835:;
			{
				_1a51545ed_unsafeCasting(_self_, _165626_m.cast_ptr<_1a43e4295_UnsafeCastingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ab8158ac:;
			{
				_1a514cb02_funcCall(_self_, (*(_165626_m.unsafe_cast_ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else {
			_case_begin_1ab8135be:;
			{
				_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ab8134d1:;
	};
}



inline jule::Bool _1a5154be7_handleFieldByDefault(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c18ba_FieldIns>* _175842_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_175842_f))))._field_Default != nullptr)) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1a9394c35_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175842_f))))._field_Decl));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1a514a748_possibleRefExpr(_self_, (*(*((*(_175842_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a54430c3_ableToInit(&((*((*(_175842_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1a9394c35_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175842_f))))._field_Decl));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1a5155a72_initExpr(_self_, (*((*(_175842_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a5154ea0_initStructLit(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _177935_s) {
	if ((*((*((*(_177935_s))))._field_Decl))._field_Binded) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a5434669_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177935_s)));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a5434669_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177935_s)));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17887_inited = false;;
	{
		auto expr = &((*((*(_177935_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab83d7c5:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _178915_f = *it;
			{
				if (_17887_inited) {
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17887_inited=_1a5154be7_handleFieldByDefault(_self_, &(_178915_f));
			}
			_iter_next_1ab83d7c5:;
			++it;
			goto _iter_begin_1ab83d7c5;
		}
		_iter_end_1ab83d7c5:;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5155258_fillCollectionByDefault(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type>* _180145_elem) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5155a72_initExpr(_self_, (*(_180145_elem)));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1a5155511_initCollection(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type>* _181636_elem) {
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1a5155258_fillCollectionByDefault(_self_, _181636_elem);
}



inline void _1a51557b9_initArray(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a85452b0_Arr>* _183031_arr) {
	if (((*((*(_183031_arr))))._field_N == 0LL)) {
		_1a54349cc_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183031_arr)));
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a54349cc_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183031_arr)));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1a5155511_initCollection(_self_, &((*((*(_183031_arr))))._field_Elem));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a5155a72_initExpr(jule::Ptr<_1a51460d4_exprCoder> _self_, jule::Ptr<_1a8535877_Type> _184429_t) {
	if (_1a853777a_NilCompatible(_184429_t.ptr())) {
		if ((_1a8539abd_Map(_184429_t) != nullptr)) {
			_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1a853854a_Ptr(_184429_t) != nullptr)) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a8543a83_Tuple> _18597_tup = _1a8539d54_Tup(_184429_t);;
	if ((_18597_tup != nullptr)) {
		_1a543ab8c_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18597_tup);
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18597_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab856e92:;
			if (it != expr_end) {
				jule::I64 _18639_i = it - expr->begin();
				jule::Ptr<_1a8535877_Type> _186316_tt = *it;
				{
					if ((!(_1a544339d_shouldInitialized(&(_186316_tt))))) {
						goto _iter_next_1ab856e92;
					};
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a5421975_write((*(_self_))._field_oc, _1d97aaba9_Itoa(_18639_i));
					_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a5155a72_initExpr(_self_, _186316_tt);
					if ((((*_18597_tup.alloc)._field_Types.len() - _18639_i) > 1LL)) {
						_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1ab856e92:;
				++it;
				_18639_i++;
				goto _iter_begin_1ab856e92;
			}
			_iter_end_1ab856e92:;
		};
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a82a555e_Enum> _18787_enm = _1a85387d1_Enum(_184429_t);;
	if ((_18787_enm != nullptr)) {
		_1a51548a6_model(_self_, (*((*((*((*_18787_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _18833_prim = _1a853802d_Prim(_184429_t);;
	if ((_18833_prim != nullptr)) {
		if (_1a8326602_IsNum((*_18833_prim.alloc)._field_Kind)) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a8541bc4_IsBool(_18833_prim)) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a8541e5a_IsStr(_18833_prim)) {
			_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a8538ced_Arr(_184429_t) != nullptr)) {
		jule::Ptr<_1a85452b0_Arr> _18958_arr = _1a8538ced_Arr(_184429_t);;
		_1a51557b9_initArray(_self_, &(_18958_arr));
		return;;
	};
	jule::Ptr<_1a81c246a_StructIns> _18997_s = _1a85395a1_Struct(_184429_t);;
	if ((_18997_s != nullptr)) {
		_1a5154ea0_initStructLit(_self_, &(_18997_s));
		return;;
	};
	_1a54363b3_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1a5158668_TestCoder_eq(_1a5158668_TestCoder *_self_, _1a5158668_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a5158668_TestCoder> static__1a5158b1e_New(jule::Ptr<_1a542125a_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1a5158668_TestCoder>(_1a5158668_TestCoder{._field_t=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a5158da5_findTestingPackage(jule::Ptr<_1a5158668_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab862a6e:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1ab862a6e:;
			++it;
			goto _iter_begin_1ab862a6e;
		}
		_iter_end_1ab862a6e:;
	};
	return nullptr;;
}



inline void _1a515915d_appendTest(jule::Ptr<_1a5158668_TestCoder> _self_, jule::Ptr<_1a829a752_FnIns> _3531_f) {
	_1a5422327_indent((*(_self_))._field_oc);
	_1a515989a_callTmReset(_self_);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1a5156831_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1a5422327_indent((*(_self_))._field_oc);
	static__1a90e09e7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a5159416_appendPackageTests(jule::Ptr<_1a5158668_TestCoder> _self_, jule::Ptr<_1a838d8bc_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab86936c:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab869d84:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _5216_f = *it;
						{
							if (_1a8dd9acc_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1a515915d_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1ab869d84:;
						++it;
						goto _iter_begin_1ab869d84;
					}
					_iter_end_1ab869d84:;
				};
			}
			_iter_next_1ab86936c:;
			++it;
			goto _iter_begin_1ab86936c;
		}
		_iter_end_1ab86936c:;
	};
}



inline jule::Bool _1a515969c_readyTestingPackage(jule::Ptr<_1a5158668_TestCoder> _self_) {
	jule::Ptr<_1a838b14a_ImportInfo> _617_p = _1a5158da5_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1a838c35a_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1a81c3515_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a81c3515_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a81c3515_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a515989a_callTmReset(jule::Ptr<_1a5158668_TestCoder> _self_) {
	static__1a90e070b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5159a98_callTmFailed(jule::Ptr<_1a5158668_TestCoder> _self_) {
	static__1a90e070b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5159c96_callTmSkipped(jule::Ptr<_1a5158668_TestCoder> _self_) {
	static__1a90e070b_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5159e94_Serialize(jule::Ptr<_1a5158668_TestCoder> _self_) {
	_1a542d71d_serializeHead((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	if ((!(_1a515969c_readyTestingPackage(_self_)))) {
		_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1a5422129_doneIndent((*(_self_))._field_oc);
		_1a542ca08_end((*(_self_))._field_oc);
		return;;
	};
	_21ca86171_Builder _1097_tb = static__21ca869bd_New(40LL);;
	_1a5434669_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1a54325ac_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _21ca88481_Buf(&_1097_tb));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a5421c2d_writeBytes((*(_self_))._field_oc, _21ca88481_Buf(&_1097_tb));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a5421e2b_addIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a5159a98_callTmFailed(_self_);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a5159c96_callTmSkipped(_self_);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a5159416_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a5422129_doneIndent((*(_self_))._field_oc);
	_1a5422327_indent((*(_self_))._field_oc);
	_1a5421975_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a542ca08_end((*(_self_))._field_oc);
}








inline jule::Bool _1a90de5d9_identCoder_eq(_1a90de5d9_identCoder *_self_, _1a90de5d9_identCoder _other_) { return true; }

inline void static__1a90deb28_writeIdentTo(_21ca86171_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab88b504:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1ab88b889;
				};
			}
			_iter_next_1ab88b504:;
			++it;
			goto _iter_begin_1ab88b504;
		}
		_iter_end_1ab88b504:;
	};
	({
		auto except = _21ca87150_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1ab88b889:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1ab88c527:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _21ca87408_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1ab88c527;
				};
				({
					auto except = _21ca87150_WriteStr(_2630_buf, _1d97aa8e0_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1ab88c527:;
			it += len;
			goto _iter_begin_1ab88c527;
		}
	};
}



inline void static__1a90deebe_toOut(_21ca86171_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _21ca87408_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _21ca87150_WriteStr(_5423_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _21ca87408_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1a90deb28_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1a90e0420_toLocal(_21ca86171_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _21ca87408_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_6925_buf, _1d97aaba9_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_6925_buf, _1d97aaba9_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1a90deb28_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1a90e070b_func(_21ca86171_Builder* _7722_buf, jule::Ptr<_1a8297694_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1ab8917a1:;
			{
				({
					auto except = _21ca87150_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1a8297dd1_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1ab89184a:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _21ca87150_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1ab891680:;
	};
	jule::Ptr<_1a819d116_Directive> _873_export = _1a8dd9714_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _21ca87150_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1a90deebe_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1a90e09e7_funcIns(_21ca86171_Builder* _9525_buf, jule::Ptr<_1a829a752_FnIns>* _9553_f) {
	if (_1a829bc1a_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _21ca87150_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*(*((*(_9553_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1a90e070b_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1a90deebe_toOut(_9525_buf, (*(*((*(_9553_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1a90e0cd3_traitDecl(_21ca86171_Builder* _11027_buf, jule::Ptr<_1a82a2da8_Trait> _11050_t) {
	static__1a90deebe_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1a90e10be_param(_21ca86171_Builder* _11423_buf, jule::Ptr<_1a8295bc0_Param>* _11447_p) {
	if ((_1a818ad7e_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1a818aab5_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1a829631e_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _21ca87150_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1a90e0420_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1a90e0420_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*((*((*(_11447_p))))._field_Token))._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1a90e13aa_structure(_21ca86171_Builder* _12927_buf, jule::Ptr<_1a81be610_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1a8dd9acc_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _21ca87150_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _21ca87150_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1a90deebe_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1a90e1696_structureIns(_21ca86171_Builder* _14030_buf, jule::Ptr<_1a81c246a_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1a90e13aa_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1a90deebe_toOut(_14030_buf, (*(*((*(_14054_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1a9394c35_field(_21ca86171_Builder* _14823_buf, jule::Ptr<_1a81bb6d9_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _21ca87150_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21ca87150_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1a90deb28_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1a9395021_var(_21ca86171_Builder* _15821_buf, jule::Ptr<_1a83cc1ad_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1ab8a2ac0:;
			{
				({
					auto except = _21ca87150_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1ab8a1d11:;
			{
				({
					auto except = _21ca87150_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1ab8a0d76:;
			{
				({
					auto except = _21ca87150_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder == -1LL)) {
			_case_begin_1ab8a0ddc:;
			{
				({
					auto except = _21ca87150_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder >= 0LL)) {
			_case_begin_1ab8a0e53:;
			{
				({
					auto except = _21ca87150_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(_15821_buf, _1d97aaba9_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Scope != nullptr)) {
			_case_begin_1ab8a0eb9:;
			{
				static__1a90e0420_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1ab8a0d10:;
			{
				jule::Ptr<_1a819d116_Directive> _1764_export = _1a8dd9714_FindDirective(&((*(_15848_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _21ca87150_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1a90deebe_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1ab8a0c00:;
	};
}



inline void static__1a939530c_iterBegin(_21ca86171_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _21ca87150_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_18527_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1a93955e8_iterEnd(_21ca86171_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _21ca87150_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_19025_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1a93958d4_iterNext(_21ca86171_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _21ca87150_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_19526_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1a9395bc0_label(_21ca86171_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _21ca87150_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_20023_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1a9395eab_matchEnd(_21ca86171_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _21ca87150_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_20526_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1a9396297_caseBegin(_21ca86171_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _21ca87150_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_21027_buf, _1d97aa527_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1a541d9a5_SerializationInfo_eq(_1a541d9a5_SerializationInfo *_self_, _1a541d9a5_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1a541ddc3_traitCast_eq(_1a541ddc3_traitCast *_self_, _1a541ddc3_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1a541e29c_anonHash_eq(_1a541e29c_anonHash *_self_, _1a541e29c_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1a541e9b7_metadata_eq(_1a541e9b7_metadata *_self_, _1a541e9b7_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1a542125a_ObjectCoder> static__1a54216bc_New(jule::Ptr<_1a8dd23cc_IR>* _12021_ir, _1a541d9a5_SerializationInfo _12035_info) {
	jule::Ptr<_1a542125a_ObjectCoder> _1217_oc = jule::new_ptr<_1a542125a_ObjectCoder>(_1a542125a_ObjectCoder{._field_Buf=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_21ca86171_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_1a541e29c_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1ab2ac82c_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1a541ddc3_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1a829a752_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1a541e6ba_traitHash>>(nullptr), ._field_traitMetMap=static__1ab308cb8_make(), ._field_ec=jule::Ptr<_1a51460d4_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1a5139ade_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1a54311b0_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1a541e9b7_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__1a51464d0_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_sc=static__1a513a2d7_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_tc=static__1a5431710_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _1a5421975_write(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _21ca87150_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _1a5421c2d_writeBytes(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _21ca86d0e_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _1a5421e2b_addIndent(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1a5422129_doneIndent(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a5422327_indent(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	({
		auto except = _21ca86d0e_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I64 _1a5422668_findAnyType(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b6111:;
		if (it != expr_end) {
			jule::I64 _1578_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _15715_at = *it;
			{
				if (_1a85360b4_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1ab8b6111:;
			++it;
			_1578_i++;
			goto _iter_begin_1ab8b6111;
		}
		_iter_end_1ab8b6111:;
	};
	return -1LL;;
}



inline jule::I64 _1a54229a9_pushCoSpawn(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b6c49:;
		if (it != expr_end) {
			jule::I64 _1667_i = it - expr->begin();
			jule::Ptr<_1a829a752_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab8b8784:;
						if (it != expr_end) {
							jule::I64 _1689_j = it - expr->begin();
							jule::Ptr<_1a82995ec_ParamIns> *_16812_sp = it;
							{
								if ((!(_1a85360b4_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1ab8b8784;
								};
							}
							_iter_next_1ab8b8784:;
							++it;
							_1689_j++;
							goto _iter_begin_1ab8b8784;
						}
						_iter_end_1ab8b8784:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1ab8b6c49:;
			++it;
			_1667_i++;
			goto _iter_begin_1ab8b6c49;
		}
		_iter_end_1ab8b6c49:;
	};
	jule::I64 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _1d97aaba9_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a829a752_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_1a5436050_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bd9ed:;
		if (it != expr_end) {
			jule::I64 _1938_j = it - expr->begin();
			jule::Ptr<_1a82995ec_ParamIns> _19315_p = *it;
			{
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_1a54363b3_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1d97aaba9_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1ab8bd9ed:;
			++it;
			_1938_j++;
			goto _iter_begin_1ab8bd9ed;
		}
		_iter_end_1ab8bd9ed:;
	};
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_20537dbb2_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1ab8c3c56:;
			{
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_21ca9987c_IsUnix(_20537dbb2_OS)) {
			_case_begin_1ab8c3d33:;
			{
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1ab8ba984:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1ab8c3690:;
	};
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8cb720:;
		if (it != expr_end) {
			jule::I64 _2387_j = it - expr->begin();
			{
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1d97aaba9_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1ab8cb720:;
			++it;
			_2387_j++;
			goto _iter_begin_1ab8cb720;
		}
		_iter_end_1ab8cb720:;
	};
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_20537dbb2_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1ab8d0cda:;
			{
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_21ca9987c_IsUnix(_20537dbb2_OS)) {
			_case_begin_1ab8d0db7:;
			{
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1ab8c5be2:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1ab8d0922:;
	};
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I64 _1a5422cea_pushDealloc(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d334d:;
		if (it != expr_end) {
			jule::I64 _2697_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _26910_dt = *it;
			{
				if (_1a85360b4_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1ab8d334d:;
			++it;
			_2697_i++;
			goto _iter_begin_1ab8d334d;
		}
		_iter_end_1ab8d334d:;
	};
	jule::I64 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_deallocObj, _1d97aaba9_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_1a54363b3_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _1a542313b_pushAnonFn(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _1a8dd7de9_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I64 _2914_l = _21ca87e64_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_21ca88481_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8db158:;
			if (it != expr_end) {
				jule::Ptr<_1a83cc1ad_Var> _29616_v = *it;
				{
					({
						auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_1a54363b3_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__1a9395021_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1ab8db158:;
				++it;
				goto _iter_begin_1ab8db158;
			}
			_iter_end_1ab8db158:;
		};
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a541e29c_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a541e29c_anonHash>(_1a541e29c_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1a5428c24_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I64 _1a542347c_pushAnyType(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8535877_Type> _32632_t) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=_1a5422668_findAnyType(_self_, &(_32632_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3333_si = _1d97aaba9_Itoa(__jule_func_result);;
	if ((_1a85382b4_Sptr(_32632_t.ptr()) != nullptr)) {
		_21ca86171_Builder _3358_elemKind = static__21ca869bd_New(40LL);;
		_1a54363b3_kind((*_self_.alloc)._field_tc.ptr(), &(_3358_elemKind), (*(_1a85382b4_Sptr(_32632_t)))._field_Elem);
		jule::I64 _3394_di = _1a5422cea_pushDealloc(_self_, (*(_1a85382b4_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _1d97aaba9_Itoa(_3394_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:352:4"));
			(except.result);
		});
		_1a54325ac_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _21ca88481_Buf(&_3358_elemKind));
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
	} else {
		_21ca86171_Builder _3588_kindB = static__21ca869bd_New(40LL);;
		_1a54363b3_kind((*_self_.alloc)._field_tc.ptr(), &(_3588_kindB), _32632_t);
		jule::Str _3604_kind = _21ca879d0_Str(&_3588_kindB);;
		jule::I64 _3634_di = _1a5422cea_pushDealloc(_self_, _32632_t);;
		jule::Str _3688_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3688_lmodel+=_3604_kind;
		_3688_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3718_rmodel = _3688_lmodel;;
		_3718_rmodel+=jule::Str::lit("other)", 6);
		_3688_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:377:4"));
			(except.result);
		});
		if (_1a8536ec7_Comparable(_32632_t.ptr())) {
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:5"));
				(except.result);
			});
			_1a51488cd__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3688_lmodel), &(_3718_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
			jule::I64 _3869_n = _21ca87e64_Len(&(*_self_.alloc)._field_anyObj);;
			_1a5156501_cstrBytes(&((*_self_.alloc)._field_anyObj), _1a8535c73_Str(_32632_t.ptr()));
			_3869_n=(_21ca87e64_Len(&(*_self_.alloc)._field_anyObj) - _3869_n);
			_3869_n+=37LL;
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _1d97aaba9_Itoa(_3869_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:392:5"));
				(except.result);
			});
		};
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:398:4"));
			(except.result);
		});
		jule::Ptr<_1a829a752_FnIns> _3998_f = _1a8ddb23d_FindFnGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));;
		static__1a90e09e7_funcIns(&((*_self_.alloc)._field_anyObj), &(_3998_f));
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		if ((_1a853854a_Ptr(_32632_t.ptr()) == nullptr)) {
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:404:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:407:5"));
				(except.result);
			});
		};
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _1d97aaba9_Itoa(_3634_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a5423735_pushResultIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _42635_f) {
	jule::Str _4273_s = __jule_bytesToStr(_1a543b671_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42635_f))))._field_Result)));;
	jule::Bool _4286_ok;
	_1ab2acee2_lookup((*_self_.alloc)._field_resultMap, _4273_s, nullptr, &(_4286_ok));
	if (_4286_ok) {
		return;;
	};
	(*_1ab2ad29a_set(((*_self_.alloc)._field_resultMap).ptr(), _4273_s))=false;
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, _4273_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:435:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1a8539d54_Tup((*((*(_42635_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9105ab:;
		if (it != expr_end) {
			jule::I64 _4368_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _43615_t = *it;
			{
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:437:4"));
				});
				_1a54363b3_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43615_t);
				({
					auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, _1d97aaba9_Itoa(_4368_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
					(except.result);
				});
			}
			_iter_next_1ab9105ab:;
			++it;
			_4368_i++;
			goto _iter_begin_1ab9105ab;
		}
		_iter_end_1ab9105ab:;
	};
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:3"));
		(except.result);
	});
}



inline void _1a54239dd_pushResult(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _44732_f) {
	if ((_1a8297b4a_IsVoid((*(_44732_f)).ptr()) || ((*((*((*(_44732_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4517_n = (*((*(_44732_f))))._field_Instances.len();;
	if (((*((*(_44732_f))))._field_Generics.len() == 0LL)) {
		_4517_n=1LL;
	};
	{
		auto expr = (*((*(_44732_f))))._field_Instances.slice(0LL, _4517_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab9156e3:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _45515_ins = *it;
			{
				_1a5423735_pushResultIns(_self_, &(_45515_ins));
			}
			_iter_next_1ab9156e3:;
			++it;
			goto _iter_begin_1ab9156e3;
		}
		_iter_end_1ab9156e3:;
	};
}



inline void _1a5423d51_pushAndWriteMaskMapper(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait> _46043_t1, jule::Ptr<_1a82a2da8_Trait> _46065_t2) {
	_21ca86171_Builder _4617_ident = static__21ca869bd_New(32LL);;
	({
		auto except = _21ca87150_WriteStr(&_4617_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_4617_ident, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46065_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_4617_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_4617_ident, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46043_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	({
		auto except = _21ca86d0e_Write(&(*(_self_))._field_Buf, _21ca88481_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:466:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab918509:;
		if (it != expr_end) {
			_1a541ddc3_traitCast _46910_m = *it;
			{
				if (((_46910_m._field_t1 == _46043_t1) && (_46910_m._field_t2 == _46065_t2))) {
					return;;
				};
			}
			_iter_next_1ab918509:;
			++it;
			goto _iter_begin_1ab918509;
		}
		_iter_end_1ab918509:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1a541ddc3_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a541ddc3_traitCast{._field_t1=_46043_t1, ._field_t2=_46065_t2}; __jule_collection; }));
	;
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _21ca86d0e_Write(&(*_self_.alloc)._field_anyObj, _21ca88481_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:481:3"));
		(except.result);
	});
	_21ca86171_Builder _4837_t1Ident = static__21ca869bd_New(16LL);;
	_21ca86171_Builder _4847_t2Ident = static__21ca869bd_New(16LL);;
	static__1a90e0cd3_traitDecl(&(_4837_t1Ident), _46043_t1);
	static__1a90e0cd3_traitDecl(&(_4847_t2Ident), _46065_t2);
	{
		auto expr = &((*(_46043_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab918b7a:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _48815_s1 = *it;
			{
				{
					auto expr = &((*(_46065_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab91cbc3:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _48911_s2 = *it;
						{
							if ((_48815_s1 == _48911_s2)) {
								{
									auto expr = &((*(_48815_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab91db4c:;
									if (it != expr_end) {
										jule::Ptr<_1a81c246a_StructIns> _49118_s1i = *it;
										{
											jule::I64 _4927_i1 = _1a8dda616_FindTraitTypeOffsetS(_46043_t1, _49118_s1i);;
											jule::I64 _4937_i2 = _1a8dda616_FindTraitTypeOffsetS(_46065_t2, _49118_s1i);;
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _21ca86d0e_Write(&(*_self_.alloc)._field_anyObj, _21ca88481_Buf(&_4847_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _1d97aaba9_Itoa(_4937_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _21ca86d0e_Write(&(*_self_.alloc)._field_anyObj, _21ca88481_Buf(&_4837_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, _1d97aaba9_Itoa(_4927_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
										}
										_iter_next_1ab91db4c:;
										++it;
										goto _iter_begin_1ab91db4c;
									}
									_iter_end_1ab91db4c:;
								};
							};
						}
						_iter_next_1ab91cbc3:;
						++it;
						goto _iter_begin_1ab91cbc3;
					}
					_iter_end_1ab91cbc3:;
				};
			}
			_iter_next_1ab918b7a:;
			++it;
			goto _iter_begin_1ab918b7a;
		}
		_iter_end_1ab918b7a:;
	};
	({
		auto except = _21ca87150_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:3"));
		(except.result);
	});
}



inline void _1a5424109_locInfo(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81881cd_Token>* _51125_t) {
	jule::Str *_5124_loc = &((*((*((*(_51125_t))))._field_File))._field_Path);;
	if (_2053852c3_Production) {
		{
			
			if (_205369274_HasPrefix((*(_5124_loc)), _20537d123_PathStdlib)) {
				_case_begin_1ab92401a:;
				{
					_1a5156501_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)).slice((_205376270_Dir(_20537d123_PathStdlib).len() + 1LL)));
				}
			}
			else if (_205369274_HasPrefix((*(_5124_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1ab9240e7:;
				{
					_1a5156501_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)).slice((_205376270_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1ab923b52:;
				{
					_1a5156501_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
				}
			}
			_match_end_1ab923a75:;
		};
	} else {
		_1a5156501_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
	};
	_1a5421975_write(_self_, jule::Str::lit(":", 1));
	_1a5421975_write(_self_, _1d97aaba9_Itoa((*((*(_51125_t))))._field_Row));
	_1a5421975_write(_self_, jule::Str::lit(":", 1));
	_1a5421975_write(_self_, _1d97aaba9_Itoa((*((*(_51125_t))))._field_Column));
}



inline void _1a5424307_head(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a5413d74_Time _5383_time = static__1a541446d_Now();;
	_1a541369d_AbsTime _5393_abs = _1a5415b56_Abs(&_5383_time);;
	_1a5421975_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a5421975_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a5421975_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1a5421975_write(_self_, jule::Str::lit("\n", 1));
	_1a5421975_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a5421975_write(_self_, _1d97aa527_FmtUint(_5393_abs._field_Day, 10LL));
	_1a5421975_write(_self_, jule::Str::lit("/", 1));
	_1a5421975_write(_self_, _1d97aa527_FmtUint(_5393_abs._field_Month, 10LL));
	_1a5421975_write(_self_, jule::Str::lit("/", 1));
	_1a5421975_write(_self_, _1d97aa527_FmtUint(_5393_abs._field_Year, 10LL));
	_1a5421975_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a5421975_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a5421975_write(_self_, jule::Str::lit(" ", 1));
	_1a5421975_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2053852c3_Production) {
		_1a5421975_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_205384bb8_RC))) {
		_1a5421975_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_205385081_Safety))) {
		_1a5421975_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a54245b0_links(_self_, true);
	_1a5421975_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a5421975_write(_self_, _20537d909_PathApi);
	_1a5421975_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1a54245b0_links(_self_, false);
}



inline void _1a54245b0_links(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Bool _57822_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab930c19:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _57910_used = *it;
			{
				{
					
					if ((!((*(_57910_used))._field_Binded))) {
						_case_begin_1ab931ad8:;
						{
							goto _iter_next_1ab930c19;
						}
					}
					else if (_21ca4a487_IsStdHeaderPath((*(_57910_used))._field_Path)) {
						_case_begin_1ab931b71:;
						{
							if ((!(_57822_std))) {
								goto _iter_next_1ab930c19;
							};
							_1a5421975_write(_self_, jule::Str::lit("#include ", 9));
							_1a5421975_write(_self_, (*_57910_used.alloc)._field_Path);
							_1a5421975_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_21ca4a762_IsValidHeaderExt(_205375813_Ext((*(_57910_used))._field_Path))) {
						_case_begin_1ab931bd7:;
						{
							if (_57822_std) {
								goto _iter_next_1ab930c19;
							};
							_1a5421975_write(_self_, jule::Str::lit("#include \"", 10));
							_1a5421975_write(_self_, (*_57910_used.alloc)._field_Path);
							_1a5421975_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1ab931984:;
				};
			}
			_iter_next_1ab930c19:;
			++it;
			goto _iter_begin_1ab930c19;
		}
		_iter_end_1ab930c19:;
	};
}



inline void _1a5424868_prepareStructure(_1a542125a_ObjectCoder* _self_, jule::Ptr<_1a81be610_Struct>* _60137_s) {
	{
		auto expr = &((*((*(_60137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab930b81:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _60215_ins = *it;
			{
				{
					auto expr = &((*(_60215_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab935878:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _60316_m = *it;
						{
							if ((*(_60316_m))._field_Statically) {
								goto _iter_next_1ab935878;
							};
							{
								auto expr = &((*_60316_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab9364c2:;
								if (it != expr_end) {
									jule::Ptr<_1a829a752_FnIns> _60717_mins = *it;
									{
										jule::Ptr<_1a82995ec_ParamIns> _60810_p = (*(_60717_mins))._field_Params[0LL];;
										_21ca86171_Builder _60910_kind = static__21ca869bd_New(40LL);;
										_1a54363b3_kind((*(_self_))._field_tc.ptr(), &(_60910_kind), (*(_60810_p))._field_Type);
										if ((!(_1a82965a5_IsRef((*_60810_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _21ca87150_WriteStr(&_60910_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:612:7"));
												(except.result);
											});
										};
										(*_60810_p.alloc)._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a5430588_customType>(_1a5430588_customType{._field_kind=_21ca879d0_Str(&_60910_kind)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data29)});
									}
									_iter_next_1ab9364c2:;
									++it;
									goto _iter_begin_1ab9364c2;
								}
								_iter_end_1ab9364c2:;
							};
						}
						_iter_next_1ab935878:;
						++it;
						goto _iter_begin_1ab935878;
					}
					_iter_end_1ab935878:;
				};
			}
			_iter_next_1ab930b81:;
			++it;
			goto _iter_begin_1ab930b81;
		}
		_iter_end_1ab930b81:;
	};
}



inline void _1a5424a66_prepareStructures(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab92e146:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _62515_s = *it;
			{
				if (((*(_62515_s))._field_Token != nullptr)) {
					_1a5424868_prepareStructure(_self_.ptr(), &(_62515_s));
				};
			}
			_iter_next_1ab92e146:;
			++it;
			goto _iter_begin_1ab92e146;
		}
		_iter_end_1ab92e146:;
	};
}



inline void _1a5424d1e_structurePlainDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _63240_s) {
	{
		auto expr = &((*((*(_63240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab939e10:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _63315_ins = *it;
			{
				_1a5421975_write(_self_, jule::Str::lit("struct ", 7));
				static__1a90e1696_structureIns(&((*_self_.alloc)._field_Buf), &(_63315_ins));
				_1a5421975_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ab939e10:;
			++it;
			goto _iter_begin_1ab939e10;
		}
		_iter_end_1ab939e10:;
	};
}



inline void _1a542501c_structurePlainDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab93c143:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _64115_s = *it;
			{
				if (((*(_64115_s))._field_Token != nullptr)) {
					_1a5424d1e_structurePlainDecl(_self_, &(_64115_s));
				};
			}
			_iter_next_1ab93c143:;
			++it;
			goto _iter_begin_1ab93c143;
		}
		_iter_end_1ab93c143:;
	};
}



inline void _1a54252c5_fieldDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c18ba_FieldIns>* _64831_f) {
	_1a54363b3_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64831_f))))._field_Type);
	_1a5421975_write(_self_, jule::Str::lit(" ", 1));
	static__1a9394c35_field(&((*_self_.alloc)._field_Buf), &((*((*(_64831_f))))._field_Decl));
	_1a5421975_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a54256e3_structureOperatorEq(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1a81c246a_StructIns>* _65553_s, jule::Bool _65574_decl) {
	if ((!(_1a542e378_defaultEq(_65553_s)))) {
		return;;
	};
	_1a5421975_write(_self_, jule::Str::lit("\n", 1));
	if (_1a440e029_Inline) {
		_1a5421975_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a5421975_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1a5421975_write(_self_, _65536_ident);
	_1a5421975_write(_self_, jule::Str::lit("_eq", 3));
	_1a5421975_write(_self_, jule::Str::lit("(", 1));
	_1a5421975_write(_self_, _65536_ident);
	_1a5421975_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1a5421975_write(_self_, _65536_ident);
	_1a5421975_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65574_decl) {
		_1a5421975_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1a5421975_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65553_s))))._field_Fields.len() == 0LL)) {
		_1a5421975_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1a5421e2b_addIndent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n", 1));
	_1a5422327_indent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("return ", 7));
	_1a5421e2b_addIndent(_self_);
	jule::Bool _6867_writed = false;;
	jule::Str _6897_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6907_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65553_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab946e83:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _69215_f = *it;
			{
				jule::Ptr<_1a81c246a_StructIns> _6944_strct = _1a85395a1_Struct((*(_69215_f))._field_Type.ptr());;
				if ((((_6944_strct != nullptr) && ((*_6944_strct.alloc)._field_Decl != nullptr)) && (*(*(_6944_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1ab946e83;
				};
				if (_6867_writed) {
					_1a5421975_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6867_writed=true;
				_1a5421975_write(_self_, jule::Str::lit("\n", 1));
				_1a5422327_indent(_self_);
				_21ca86171_Builder _7058_fIdent = static__21ca869bd_New((*((*_69215_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a9394c35_field(&(_7058_fIdent), &((*_69215_f.alloc)._field_Decl));
				_6897_lmodel+=_21c755945_BytesStr(_21ca88481_Buf(&_7058_fIdent));
				_6907_rmodel+=_21c755945_BytesStr(_21ca88481_Buf(&_7058_fIdent));
				_1a51488cd__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6897_lmodel), &(_6907_rmodel), &((*_69215_f.alloc)._field_Type), &((*_69215_f.alloc)._field_Type), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6897_lmodel).mut_slice(0LL, (_6897_lmodel.len() - _21ca87e64_Len(&_7058_fIdent)));;
				_6907_rmodel=_6897_lmodel.slice(0LL, (_6907_rmodel.len() - _21ca87e64_Len(&_7058_fIdent)));
			}
			_iter_next_1ab946e83:;
			++it;
			goto _iter_begin_1ab946e83;
		}
		_iter_end_1ab946e83:;
	};
	_1a5422129_doneIndent(_self_);
	if ((!(_6867_writed))) {
		_1a5421975_write(_self_, jule::Str::lit("true", 4));
	};
	_1a5421975_write(_self_, jule::Str::lit(";\n", 2));
	_1a5422129_doneIndent(_self_);
	_1a5422327_indent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1a5425a56_structureOperators(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _72340_s, jule::Bool _72361_decl) {
	_21ca86171_Builder _7247_sb = static__21ca869bd_New(40LL);;
	static__1a90e1696_structureIns(&(_7247_sb), _72340_s);
	jule::Str _7263_ident = _21ca879d0_Str(&_7247_sb);;
	_1a54256e3_structureOperatorEq(_self_, _7263_ident, _72340_s, _72361_decl);
}



inline void _1a5425d0e_structureInsDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _73238_s) {
	{
		auto expr = &((*((*(_73238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9512cd:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _73315_m = *it;
			{
				if (_1a542e0ae_isHeadDecl(&(_73315_m))) {
					_1a5427162_funcDecl(_self_, &(_73315_m), false);
				};
			}
			_iter_next_1ab9512cd:;
			++it;
			goto _iter_begin_1ab9512cd;
		}
		_iter_end_1ab9512cd:;
	};
	_1a5421975_write(_self_, jule::Str::lit("struct ", 7));
	static__1a90e1696_structureIns(&((*_self_.alloc)._field_Buf), _73238_s);
	_1a5421975_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5421e2b_addIndent(_self_);
	{
		auto expr = &((*((*(_73238_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab952bd6:;
		if (it != expr_end) {
			jule::Ptr<_1a81c18ba_FieldIns> _74415_f = *it;
			{
				_1a5422327_indent(_self_);
				_1a54252c5_fieldDecl(_self_, &(_74415_f));
				_1a5421975_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ab952bd6:;
			++it;
			goto _iter_begin_1ab952bd6;
		}
		_iter_end_1ab952bd6:;
	};
	_1a5422129_doneIndent(_self_);
	_1a5422327_indent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("};", 2));
	;
	_1a5425a56_structureOperators(_self_, _73238_s, true);
}



inline void _1a54260b7_structureDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _75835_s) {
	{
		auto expr = &((*((*(_75835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab955a96:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _75915_ins = *it;
			{
				_1a5425d0e_structureInsDecl(_self_, &(_75915_ins));
			}
			_iter_next_1ab955a96:;
			++it;
			goto _iter_begin_1ab955a96;
		}
		_iter_end_1ab955a96:;
	};
}



inline void _1a54262b5_structureDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab956921:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _76515_s = *it;
			{
				if (((*(_76515_s))._field_Token != nullptr)) {
					_1a54260b7_structureDecl(_self_, &(_76515_s));
					_1a5421975_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ab956921:;
			++it;
			goto _iter_begin_1ab956921;
		}
		_iter_end_1ab956921:;
	};
}



inline void _1a54264b3_structureMethodDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab95736c:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _77415_s = *it;
			{
				if (((*(_77415_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77415_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab959517:;
						if (it != expr_end) {
							jule::Ptr<_1a81c246a_StructIns> _77617_ins = *it;
							{
								{
									auto expr = &((*(_77617_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab959eeb:;
									if (it != expr_end) {
										jule::Ptr<_1a8297694_Fn> _77718_m = *it;
										{
											if ((!(_1a542e0ae_isHeadDecl(&(_77718_m))))) {
												_1a54239dd_pushResult(_self_, &(_77718_m));
												_1a5427162_funcDecl(_self_, &(_77718_m), false);
											};
										}
										_iter_next_1ab959eeb:;
										++it;
										goto _iter_begin_1ab959eeb;
									}
									_iter_end_1ab959eeb:;
								};
							}
							_iter_next_1ab959517:;
							++it;
							goto _iter_begin_1ab959517;
						}
						_iter_end_1ab959517:;
					};
				};
			}
			_iter_next_1ab95736c:;
			++it;
			goto _iter_begin_1ab95736c;
		}
		_iter_end_1ab95736c:;
	};
}



inline void _1a542698b_funcHead(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _79230_buf, jule::Ptr<_1a829a752_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident) {
	if ((((!(_79275_ptr)) && _1a440e029_Inline) && (!(_1a8298167_IsEntryPoint((*((*(_79258_f))))._field_Decl.ptr()))))) {
		({
			auto except = _21ca87150_WriteStr(_79230_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
			(except.result);
		});
	};
	_1a5435879_funcInsResult((*(_self_))._field_tc.ptr(), _79230_buf, _79258_f);
	if (_79275_ptr) {
		({
			auto except = _21ca87150_WriteStr(_79230_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:798:4"));
			(except.result);
		});
		static__1a90e09e7_funcIns(_79230_buf, _79258_f);
		({
			auto except = _21ca87408_WriteByte(_79230_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:4"));
		});
	} else {
		({
			auto except = _21ca87408_WriteByte(_79230_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:802:4"));
		});
		if ((_79286_ident).empty()) {
			static__1a90e09e7_funcIns(_79230_buf, _79258_f);
		} else {
			({
				auto except = _21ca87150_WriteStr(_79230_buf, _79286_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:806:5"));
				(except.result);
			});
		};
	};
}



inline void _1a5426cee_funcDeclIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns>* _81133_f, jule::Bool _81150_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81133_f))))._field_CalledCo);
	_1a5422327_indent(_self_);
	_1a542698b_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81133_f, _81150_ptr, jule::Str());
	_1a5428295_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81133_f);
	_1a5421975_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a5427162_funcDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _81930_f, jule::Bool _81944_ptr) {
	{
		auto expr = &((*((*(_81930_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab961a3b:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _82015_c = *it;
			{
				_1a5426cee_funcDeclIns(_self_, &(_82015_c), _81944_ptr);
			}
			_iter_next_1ab961a3b:;
			++it;
			goto _iter_begin_1ab961a3b;
		}
		_iter_end_1ab961a3b:;
	};
}



inline void _1a542741a_funcDeclTrait(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _82535_f) {
	{
		auto expr = &((*((*(_82535_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab962982:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _82615_c = *it;
			{
				jule::Ptr<_1a8535877_Type> _8278_k = (*((*(_82615_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_1a541d6ca_generalGCPtr;
				_1a5426cee_funcDeclIns(_self_, &(_82615_c), true);
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_8278_k;
			}
			_iter_next_1ab962982:;
			++it;
			goto _iter_begin_1ab962982;
		}
		_iter_end_1ab962982:;
	};
}



inline void _1a5427618_funcDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a8dd4d5d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a838d8bc_Package>*>((void*)__jule_anon_1ab965699, jule::Ptr<__jule_anon_1ab965699_ctx>::make(__jule_anon_1ab965699_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab965699_ctx_handler));
}



inline void _1a54278c1_traitDataTypeMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _84742_hash) {
	{
		auto expr = &((*((*(_84742_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab96703b:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _84815_m = *it;
			{
				jule::Ptr<_1a829a752_FnIns> _8498_ins = (*(_84815_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8498_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1ab969a88:;
					if (it != expr_end) {
						jule::I64 _8509_i = it - expr.begin();
						jule::Ptr<_1a82995ec_ParamIns> _85016_ip = *it;
						{
							if (_1a818ad7e_IsAnonIdent((*((*(_85016_ip))._field_Decl))._field_Ident)) {
								(*(*(_85016_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1d97aaba9_Itoa(_8509_i));
							};
						}
						_iter_next_1ab969a88:;
						++it;
						_8509_i++;
						goto _iter_begin_1ab969a88;
					}
					_iter_end_1ab969a88:;
				};
				_1a54239dd_pushResult(_self_, &(_84815_m));
				_1a542741a_funcDeclTrait(_self_, &(_84815_m));
			}
			_iter_next_1ab96703b:;
			++it;
			goto _iter_begin_1ab96703b;
		}
		_iter_end_1ab96703b:;
	};
}



inline void _1a5427abe_traitDataTypes(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab968c96:;
		if (it != expr_end) {
			jule::Ptr<_1a541e6ba_traitHash> _86115_hash = *it;
			{
				_1a5421975_write(_self_, jule::Str::lit("struct ", 7));
				static__1a90e0cd3_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86115_hash))._field_traitDecl);
				_1a5421975_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1a5421e2b_addIndent(_self_);
				_1a5422327_indent(_self_);
				_1a5421975_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a54278c1_traitDataTypeMethods(_self_, &(_86115_hash));
				_1a5422129_doneIndent(_self_);
				_1a5422327_indent(_self_);
				_1a5421975_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1ab968c96:;
			++it;
			goto _iter_begin_1ab968c96;
		}
		_iter_end_1ab968c96:;
	};
}



inline void _1a5427e32_paramIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _87530_buf, jule::Ptr<_1a82995ec_ParamIns>* _87558_p) {
	_1a54351a3_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87558_p);
	({
		auto except = _21ca87408_WriteByte(_87530_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:3"));
	});
	static__1a90e10be_param(_87530_buf, &((*((*(_87558_p))))._field_Decl));
}



inline void _1a5428295_paramsIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _88131_buf, jule::Ptr<_1a829a752_FnIns>* _88159_f) {
	if (((!((*((*(_88159_f))))._field_AsAnon)) && ((*((*(_88159_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _21ca87150_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:883:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21ca87408_WriteByte(_88131_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:886:3"));
	});
	if ((*((*(_88159_f))))._field_AsAnon) {
		({
			auto except = _21ca87150_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		if (((*((*(_88159_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _21ca87150_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88159_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab973113:;
		if (it != expr_end) {
			jule::I64 _8938_i = it - expr->begin();
			jule::Ptr<_1a82995ec_ParamIns> _89315_p = *it;
			{
				_1a5427e32_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88159_f))))._field_Params.len() - _8938_i) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:896:5"));
						(except.result);
					});
				};
			}
			_iter_next_1ab973113:;
			++it;
			_8938_i++;
			goto _iter_begin_1ab973113;
		}
		_iter_end_1ab973113:;
	};
	({
		auto except = _21ca87408_WriteByte(_88131_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:899:3"));
	});
}



inline void _1a5428608_varInitExpr(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a83cc1ad_Var>* _90233_v, jule::Fn<void> _90248_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_1a5421975_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a54363b3_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_TypeSym))._field_Type);
	_1a5421975_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_1a5421975_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a9395021_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90248_init != nullptr)) {
		_1a5421975_write(_self_, jule::Str::lit(" = ", 3));
		_90248_init();
	};
	_1a5421975_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a54288b1_var(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a83cc1ad_Var> _92024_v) {
	if (_1a818aab5_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*_92024_v.alloc)._field_Value != nullptr) && ((*(*(_92024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_1a5428608_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ab97a4c2, jule::Ptr<__jule_anon_1ab97a4c2_ctx>::make(__jule_anon_1ab97a4c2_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ab97a4c2_ctx_handler));
			} else {
				_1a5428608_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ab97c5b2, jule::Ptr<__jule_anon_1ab97c5b2_ctx>::make(__jule_anon_1ab97c5b2_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ab97c5b2_ctx_handler));
			};
			return;;
		};
		_1a5428608_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*_92024_v.alloc)._field_Reference) {
		_1a5428608_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ab984b2a, jule::Ptr<__jule_anon_1ab984b2a_ctx>::make(__jule_anon_1ab984b2a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab984b2a_ctx_handler));
		return;;
	};
	if (_1a544339d_shouldInitialized(&((*((*_92024_v.alloc)._field_TypeSym))._field_Type))) {
		_1a5428608_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ab985cc4, jule::Ptr<__jule_anon_1ab985cc4_ctx>::make(__jule_anon_1ab985cc4_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ab985cc4_ctx_handler));
		return;;
	};
	_1a5428608_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _1a5428c24_anonFuncInsDecl(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _95137_m, jule::Str _95164_ident) {
	_1a542698b_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95164_ident);
	_1a5428295_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	({
		auto except = _21ca87408_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:954:3"));
	});
}



inline void _1a5429087_anonFuncIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a828d28e_AnonFnExprModel>* _95733_m, jule::Str _95760_ident) {
	_1a542698b_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95760_ident);
	_1a5428295_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_1a5421975_write(_self_, jule::Str::lit(" ", 1));
	_1a51428c7_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95760_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a54293ea_funcIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a829a752_FnIns> _96728_f, jule::Str _96745_ident) {
	_1a542698b_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f), false, _96745_ident);
	_1a5428295_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f));
	_1a5421975_write(_self_, jule::Str::lit(" ", 1));
	_1a5142b80_funcScope((*_self_.alloc)._field_sc, _96728_f);
	if (((*(_96728_f))._field_Scope != nullptr)) {
		_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a54296a3_func(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab98e607:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _97815_ins = *it;
			{
				_1a54293ea_funcIns(_self_, _97815_ins, jule::Str());
			}
			_iter_next_1ab98e607:;
			++it;
			goto _iter_begin_1ab98e607;
		}
		_iter_end_1ab98e607:;
	};
}



inline void _1a5429a16_funcTrait(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _98327_s, jule::Ptr<_1a829a752_FnIns>* _98353_f) {
	(*((*(_98353_f))))._field_Scope=nullptr;
	_21ca86171_Builder _9867_nident = static__21ca869bd_New(30LL);;
	({
		auto except = _21ca87150_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:987:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_9867_nident, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98353_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:988:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:989:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(&_9867_nident, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:990:3"));
		(except.result);
	});
	jule::Ptr<_1a8535877_Type> _9927_k = (*((*((*(_98353_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_1a541d6ca_generalGCPtr;
	_1a54293ea_funcIns(_self_, (*(_98353_f)), _21ca879d0_Str(&_9867_nident));
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_9927_k;
}



inline __jule_tuple_x_1a829a752_FnIns__jule_tuple_bool _1a5429d57_findTraitMetMap(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a8297694_Fn>* _99837_m) {
	__jule_tuple_x_1a829a752_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a829a752_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		_1ab312ce4_mapIterator it = _1ab309deb_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1ab994dd2:;
		__jule_tuple_px_1a829a752_FnIns__jule_tuple_psuintptr __iterator_result = _1ab3134cb_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1a829a752_FnIns> _100012_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*(_100012_f))._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _1a829b3ac_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab994dd2:;
			goto _iter_begin_1ab994dd2;
		}
		_iter_end_1ab994dd2:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a542a1ba_traitWrapper(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait>* _101034_t, jule::Ptr<_1a8297694_Fn>* _101056_m) {
	_julec_label_1ab997610:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9977b9:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _101215_imp = *it;
			{
				jule::Ptr<_1a829a752_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_1a829a752_FnIns__jule_tuple_bool __jule_assign_result = _1a5429d57_findTraitMetMap(_self_, _101056_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = _1ab3095d2_get((*_self_.alloc)._field_traitMetMap, _10138_mepf);;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab999832:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1ab9977b9;
								};
							}
							_iter_next_1ab999832:;
							++it;
							goto _iter_begin_1ab999832;
						}
						_iter_end_1ab999832:;
					};
					(*_1ab309736_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(_10169_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				} else {
					(*_1ab309736_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab99a118:;
					if (it != expr_end) {
						jule::Ptr<_1a81c246a_StructIns> _102716_ins = *it;
						{
							_1a5429a16_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							;
							jule::Ptr<_1a8297694_Fn> _10319_sm = _1a81c3515_FindMethod(_102716_ins.ptr(), (*((*(_101056_m))))._field_Ident, false);;
							if (((_10319_sm == nullptr) || ((*(_10319_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a5421e2b_addIndent(_self_);
							_1a5421975_write(_self_, jule::Str::lit("{\n", 2));
							_1a5422327_indent(_self_);
							if (((*((*(_101056_m))))._field_Exceptional || (!(_1a8297b4a_IsVoid((*(_101056_m)).ptr()))))) {
								_1a5421975_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a90e070b_func(&((*_self_.alloc)._field_Buf), &(_10319_sm));
							_1a5421975_write(_self_, jule::Str::lit("(", 1));
							_1a5421975_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a5434669_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_1a5421975_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10485_ptr = (!(_1a82965a5_IsRef((*((*(_101056_m))))._field_Params[0LL].ptr())));;
							if (_10485_ptr) {
								_1a5421975_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101056_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1ab9a261a:;
								if (it != expr_end) {
									jule::Ptr<_1a8295bc0_Param> _105212_mp = *it;
									{
										_1a5421975_write(_self_, jule::Str::lit(", ", 2));
										static__1a90e10be_param(&((*_self_.alloc)._field_Buf), &(_105212_mp));
									}
									_iter_next_1ab9a261a:;
									++it;
									goto _iter_begin_1ab9a261a;
								}
								_iter_end_1ab9a261a:;
							};
							_1a5421975_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a5422129_doneIndent(_self_);
						}
						_iter_next_1ab99a118:;
						++it;
						goto _iter_begin_1ab99a118;
					}
					_iter_end_1ab99a118:;
				};
			}
			_iter_next_1ab9977b9:;
			++it;
			goto _iter_begin_1ab9977b9;
		}
		_iter_end_1ab9977b9:;
	};
}



inline void _1a542a3b8_traitWrappers(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab99dddb:;
		if (it != expr_end) {
			jule::Ptr<_1a541e6ba_traitHash> _106315_hash = *it;
			{
				if (((*((*(_106315_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1ab99dddb;
				};
				{
					auto expr = &((*_106315_hash.alloc)._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab9a4bb1:;
					if (it != expr_end) {
						jule::Ptr<_1a8297694_Fn> _106716_m = *it;
						{
							_1a542a1ba_traitWrapper(_self_, &((*_106315_hash.alloc)._field_traitDecl), &(_106716_m));
						}
						_iter_next_1ab9a4bb1:;
						++it;
						goto _iter_begin_1ab9a4bb1;
					}
					_iter_end_1ab9a4bb1:;
				};
			}
			_iter_next_1ab99dddb:;
			++it;
			goto _iter_begin_1ab99dddb;
		}
		_iter_end_1ab99dddb:;
	};
}



inline void _1a542a72b_traitDataMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _107438_hash, jule::Ptr<_1a81c246a_StructIns> _107456_s) {
	{
		auto expr = &((*((*(_107438_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9a5453:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _107515_m = *it;
			{
				_1a5422327_indent(_self_);
				_1a5421975_write(_self_, jule::Str::lit(".", 1));
				static__1a90e070b_func(&((*_self_.alloc)._field_Buf), &(_107515_m));
				_1a5421975_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1a829a752_FnIns> _10804_mepf;
				jule::Bool _108010_exist;
				({
					__jule_tuple_x_1a829a752_FnIns__jule_tuple_bool __jule_assign_result = _1a5429d57_findTraitMetMap(_self_, &(_107515_m));
					_10804_mepf = __jule_assign_result.__jule_result_arg0;
					_108010_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108010_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1082:5"));;
				};
				_1a5421975_write(_self_, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10804_mepf)), 15LL));
				_1a5421975_write(_self_, jule::Str::lit("_", 1));
				_1a5421975_write(_self_, _1d97aa527_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107456_s)), 15LL));
				_1a5421975_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1ab9a5453:;
			++it;
			goto _iter_begin_1ab9a5453;
		}
		_iter_end_1ab9a5453:;
	};
}



inline void _1a542ab49_traitData(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a541e6ba_traitHash>* _109231_hash, jule::I64 _109249_i, jule::Ptr<_1a81c246a_StructIns>* _109262_s) {
	_21ca86171_Builder _10937_ident = static__21ca869bd_New((*((*((*(_109231_hash))))._field_traitDecl))._field_Ident.len());;
	static__1a90e0cd3_traitDecl(&(_10937_ident), (*((*(_109231_hash))))._field_traitDecl);
	_1a5421975_write(_self_, jule::Str::lit("static ", 7));
	_1a5421c2d_writeBytes(_self_, _21ca88481_Buf(&_10937_ident));
	_1a5421975_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a5421c2d_writeBytes(_self_, _21ca88481_Buf(&_10937_ident));
	_1a5421975_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a5421975_write(_self_, _1d97aaba9_Itoa(_109249_i));
	_1a5421975_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5421e2b_addIndent(_self_);
	_1a5422327_indent(_self_);
	_1a5421975_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a5421975_write(_self_, _1d97aaba9_Itoa(_1a5422cea_pushDealloc(_self_, jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109262_s)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)}))));
	_1a5421975_write(_self_, jule::Str::lit(",\n", 2));
	_1a542a72b_traitDataMethods(_self_, _109231_hash, (*(_109262_s)));
	_1a5422129_doneIndent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a542ad47_traitDatas(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b0b89:;
		if (it != expr_end) {
			jule::Ptr<_1a541e6ba_traitHash> _111415_hash = *it;
			{
				jule::I64 _11158_i = 0LL;;
				{
					auto expr = &((*((*(_111415_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab9b1b35:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _111616_s = *it;
						{
							{
								auto expr = &((*(_111616_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab9b275c:;
								if (it != expr_end) {
									jule::Ptr<_1a81c246a_StructIns> _111717_ins = *it;
									{
										_1a542ab49_traitData(_self_, &(_111415_hash), _11158_i, &(_111717_ins));
										(_11158_i)++;
									}
									_iter_next_1ab9b275c:;
									++it;
									goto _iter_begin_1ab9b275c;
								}
								_iter_end_1ab9b275c:;
							};
						}
						_iter_next_1ab9b1b35:;
						++it;
						goto _iter_begin_1ab9b1b35;
					}
					_iter_end_1ab9b1b35:;
				};
			}
			_iter_next_1ab9b0b89:;
			++it;
			goto _iter_begin_1ab9b0b89;
		}
		_iter_end_1ab9b0b89:;
	};
}



inline void _1a542b045_globalDecls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b07b0:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _112615_v = *it;
			{
				_1a54363b3_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112615_v))._field_TypeSym))._field_Type);
				_1a5421975_write(_self_, jule::Str::lit(" ", 1));
				static__1a9395021_var(&((*_self_.alloc)._field_Buf), _112615_v);
				_1a5421975_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ab9b07b0:;
			++it;
			goto _iter_begin_1ab9b07b0;
		}
		_iter_end_1ab9b07b0:;
	};
}



inline void _1a542b243_decls(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a542501c_structurePlainDecls(_self_);
	_1a54262b5_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_21ca87e64_Len(&(*_self_.alloc)._field_Buf);
	_1a54264b3_structureMethodDecls(_self_);
	_1a5427618_funcDecls(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5427abe_traitDataTypes(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_21ca87e64_Len(&(*_self_.alloc)._field_Buf);
	_1a542a3b8_traitWrappers(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	_1a542ad47_traitDatas(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_21ca87e64_Len(&(*_self_.alloc)._field_Buf);
	_1a542b045_globalDecls(_self_);
}



inline void _1a542b4eb_structureMethods(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _115238_s) {
	{
		auto expr = &((*((*(_115238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b9a2d:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _115315_f = *it;
			{
				_1a54296a3_func(_self_, &(_115315_f));
				_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ab9b9a2d:;
			++it;
			goto _iter_begin_1ab9b9a2d;
		}
		_iter_end_1ab9b9a2d:;
	};
}



inline void _1a542b7a4_structureIns(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81c246a_StructIns>* _115934_s) {
	;
	_1a5425a56_structureOperators(_self_, _115934_s, false);
	_1a542b4eb_structureMethods(_self_, _115934_s);
}



inline void _1a542ba5c_structure(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a81be610_Struct>* _116531_s) {
	{
		auto expr = &((*((*(_116531_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9bc008:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _116615_ins = *it;
			{
				_1a542b7a4_structureIns(_self_, &(_116615_ins));
				_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ab9bc008:;
			++it;
			goto _iter_begin_1ab9bc008;
		}
		_iter_end_1ab9bc008:;
	};
}



inline void _1a542bc5a_structures(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9bc756:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _117315_s = *it;
			{
				if (((*(_117315_s))._field_Token != nullptr)) {
					_1a542ba5c_structure(_self_, &(_117315_s));
					_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ab9bc756:;
			++it;
			goto _iter_begin_1ab9bc756;
		}
		_iter_end_1ab9bc756:;
	};
}



inline void _1a542be58_funcs(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a8dd4d5d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a838d8bc_Package>*>((void*)__jule_anon_1ab9c036e, jule::Ptr<__jule_anon_1ab9c036e_ctx>::make(__jule_anon_1ab9c036e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9c036e_ctx_handler));
}



inline void _1a542c211_pushInit(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a838d8bc_Package>* _120430_pkg) {
	_1a8dd50d3_IterFiles(_120430_pkg, jule::__new_closure<void,jule::Ptr<_1a829d997_SymTab>*>((void*)__jule_anon_1ab9c179e, jule::Ptr<__jule_anon_1ab9c179e_ctx>::make(__jule_anon_1ab9c179e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9c179e_ctx_handler));
}



inline void _1a542c40e_anonHashes(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_julec_label_1ab9c6133:;
	jule::Slice<jule::Ptr<_1a541e29c_anonHash>> _12217_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12217_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c6177:;
		if (it != expr_end) {
			jule::Ptr<_1a541e29c_anonHash> _122315_h = *it;
			{
				_1a5429087_anonFuncIns(_self_, &((*(_122315_h))._field_expr), (*_122315_h.alloc)._field_ident);
			}
			_iter_next_1ab9c6177:;
			++it;
			goto _iter_begin_1ab9c6177;
		}
		_iter_end_1ab9c6177:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1ab9c6133;
	};
}



inline void _1a542c60c_initGlobals(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c9235:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _123215_v = *it;
			{
				({
					auto except = _21ca87408_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1233:4"));
				});
				static__1a9395021_var(&((*_self_.alloc)._field_Buf), _123215_v);
				_1a5421975_write(_self_, jule::Str::lit(" = ", 3));
				_1a51548a6_model((*_self_.alloc)._field_ec, (*((*((*(_123215_v))._field_Value))._field_Data))._field_Model);
				_1a5421975_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ab9c9235:;
			++it;
			goto _iter_begin_1ab9c9235;
		}
		_iter_end_1ab9c9235:;
	};
}



inline void _1a542c80a_initCaller(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a5421975_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a5421e2b_addIndent(_self_);
	_1a8dd4d5d_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a838d8bc_Package>*>((void*)__jule_anon_1ab9ccbd9, jule::Ptr<__jule_anon_1ab9ccbd9_ctx>::make(__jule_anon_1ab9ccbd9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9ccbd9_ctx_handler));
	_1a5422129_doneIndent(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a542ca08_end(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a5421975_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	_1a542c60c_initGlobals(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_205384910_Test) {
		_1a5421975_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1a90e070b_func(&((*_self_.alloc)._field_Buf), &((*(_1a8ddcad0_ProgramMeta))._field_EntryPoint));
		_1a5421975_write(_self_, jule::Str::lit("();", 3));
	};
	_1a5421975_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1a542ccb1_buildTraitHash(jule::Ptr<_1a542125a_ObjectCoder> _self_, jule::Ptr<_1a82a2da8_Trait>* _127636_t) {
	jule::Ptr<_1a541e6ba_traitHash> _12777_hash = jule::new_ptr<_1a541e6ba_traitHash>(_1a541e6ba_traitHash{._field_traitDecl=(*(_127636_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(0LL, (*((*(_127636_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8297694_Fn>(nullptr); __jule_collection; })});;
	_1a8dd53be_IterTraitMethods(_127636_t, jule::__new_closure<void,jule::Ptr<_1a8297694_Fn>*>((void*)__jule_anon_1ab9d2e0e, jule::Ptr<__jule_anon_1ab9d2e0e_ctx>::make(__jule_anon_1ab9d2e0e_ctx{._12777_hash=_12777_hash}).as<jule::Uintptr>(), __jule_anon_1ab9d2e0e_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a541e6ba_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12777_hash; __jule_collection; }));
}



inline void _1a542ceae_buildTraitHashes(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a8dd4d5d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a838d8bc_Package>*>((void*)__jule_anon_1ab9d54d8, jule::Ptr<__jule_anon_1ab9d54d8_ctx>::make(__jule_anon_1ab9d54d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d54d8_ctx_handler));
}



inline void _1a542d322_insertBuf(jule::Ptr<_1a542125a_ObjectCoder> _self_, _21ca86171_Builder* _130631_buf, jule::I64 _130654_pos) {
	if ((_21ca87e64_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_ibuf = _21ca88481_Buf(&(*(_self_))._field_Buf);;
		_13088_ibuf=_1ab9d8c17_Insert(_13088_ibuf, _130654_pos, _21ca88481_Buf(_130631_buf));
		{
			_21ca88739_SetBuf(&(*_self_.alloc)._field_Buf, _13088_ibuf);
		};
	};
}



inline void _1a542d520_implementRC(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1a54293ea_funcIns(_self_, (*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_1a54293ea_funcIns(_self_, (*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_1a54293ea_funcIns(_self_, (*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1a54293ea_funcIns(_self_, (*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_1a54293ea_funcIns(_self_, (*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_1a54293ea_funcIns(_self_, (*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _1a542d71d_serializeHead(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a542ceae_buildTraitHashes(_self_);
	_1a5424a66_prepareStructures(_self_);
	_1a5424307_head(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n", 1));
	_1a542b243_decls(_self_);
	_1a542d322_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_21ca87e64_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_21ca87e64_Len(&(*_self_.alloc)._field_resultDecls);
	_1a5421975_write(_self_, jule::Str::lit("\n", 1));
	_1a542bc5a_structures(_self_);
	_1a542be58_funcs(_self_);
	_1a542c80a_initCaller(_self_);
	_1a5421975_write(_self_, jule::Str::lit("\n\n", 2));
	_1a542c40e_anonHashes(_self_);
	_1a542d520_implementRC(_self_);
	_1a542d322_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_21ca87e64_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_21ca87e64_Len(&(*_self_.alloc)._field_deallocObj);
	_1a542d322_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21ca87e64_Len(&(*_self_.alloc)._field_anyObj);
	_1a542d322_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21ca87e64_Len(&(*_self_.alloc)._field_anonObj);
	_1a542d322_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_21ca87e64_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1a542d91b_Serialize(jule::Ptr<_1a542125a_ObjectCoder> _self_) {
	_1a542d71d_serializeHead(_self_);
	_1a542ca08_end(_self_);
}








inline jule::Bool _1a5430588_customType_eq(_1a5430588_customType *_self_, _1a5430588_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a5430973_Str(_1a5430588_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a5430cb4_Equal(jule::Ptr<_1a5430588_customType> _self_, jule::Ptr<_1a8535877_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1a54311b0_typeCoder_eq(_1a54311b0_typeCoder *_self_, _1a54311b0_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1a54311b0_typeCoder> static__1a5431710_new(jule::Ptr<_1a542125a_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1a54311b0_typeCoder> _517_tc = jule::new_ptr<_1a54311b0_typeCoder>(_1a54311b0_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1a5438c9a_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1a54392a6_new(&(_517_tc));
	return _517_tc;;
}



inline void _1a5431a73_toType(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1a831cbe2_RealKindOf(_5754_id);
	};
	({
		auto except = _21ca87150_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _21ca87408_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _21ca87408_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _21ca87150_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1a5431dd6_prim(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _7125_buf, jule::Ptr<_1a853d990_Prim> _7148_p) {
	_1a5431a73_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1a5432249_tuple(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _7626_buf, jule::Ptr<_1a8543a83_Tuple> _7653_t) {
	({
		auto except = _21ca87150_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba0e435:;
		if (it != expr_end) {
			jule::I64 _788_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> _7815_tk = *it;
			{
				_1a54363b3_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _21ca87408_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1aba0e435:;
			++it;
			_788_i++;
			goto _iter_begin_1aba0e435;
		}
		_iter_end_1aba0e435:;
	};
	({
		auto except = _21ca87408_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1a54325ac_asSptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _21ca87150_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _21ca86d0e_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1a5432920_sptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _9525_buf, jule::Ptr<_1a85424bb_Sptr> _9552_sptr) {
	({
		auto except = _21ca87150_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1a54363b3_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _21ca87408_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1a5432c83_ptr(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _10224_buf, jule::Ptr<_1a8545c83_Ptr> _10251_p) {
	;
	if (_1a8546800_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _21ca87150_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1a54363b3_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _21ca87150_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1a54330e6_enumDecl(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _11329_buf, jule::Ptr<_1a82a555e_Enum> _11356_e) {
	_1a54363b3_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1a5433459_typeEnumDecl(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _11833_buf, jule::Ptr<_1a82a6c69_TypeEnum> _11860_e) {
	({
		auto except = _21ca87150_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1a54337bc_asSlice(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _12228_buf, jule::Ptr<_1a8535877_Type> _12255_elem) {
	({
		auto except = _21ca87150_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1a54363b3_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _21ca87408_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1a5433b30_slice(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _12926_buf, jule::Ptr<_1a8542e8e_Slc> _12953_s) {
	_1a54337bc_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1a5433e93_mapType(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _13428_buf, jule::Ptr<_1a8544633_Map> _13455_m) {
	jule::Ptr<_1a81c246a_StructIns> _1357_ins = _1a8ddb6c2_FindStructGenericInstance(&((*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _21ca87150_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__1a90e1696_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _21ca87150_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _1a5434669_structureIns(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _14733_buf, jule::Ptr<_1a81c246a_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		static__1a90e1696_structureIns(_14733_buf, &(_14760_s));
		return;;
	};
	jule::Ptr<_1a819d116_Directive> _1523_d = _1a8dd9714_FindDirective(&((*(*(_14760_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1523_d != nullptr)) {
		({
			auto except = _21ca86d0e_Write(_14733_buf, _1a542dca1_concatAllParts((*_1523_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:154:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
	};
	static__1a90e1696_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _21ca87408_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba1c102:;
			if (it != expr_end) {
				jule::I64 _1609_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> _16016_g = *it;
				{
					_1a54363b3_kind(_self_, _14733_buf, (*(_16016_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1609_i) > 1LL)) {
						({
							auto except = _21ca87408_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:6"));
						});
					};
				}
				_iter_next_1aba1c102:;
				++it;
				_1609_i++;
				goto _iter_begin_1aba1c102;
			}
			_iter_end_1aba1c102:;
		};
		({
			auto except = _21ca87408_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:166:4"));
		});
	};
}



inline void _1a54349cc_array(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _17126_buf, jule::Ptr<_1a85452b0_Arr> _17153_a) {
	({
		auto except = _21ca87150_WriteStr(_17126_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:172:3"));
		(except.result);
	});
	_1a54363b3_kind(_self_, _17126_buf, (*(_17153_a))._field_Elem);
	({
		auto except = _21ca87408_WriteByte(_17126_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:174:3"));
	});
	({
		auto except = _21ca87150_WriteStr(_17126_buf, _1d97aaba9_Itoa((*_17153_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_17126_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
	});
}



inline void _1a54351a3_paramIns(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _19429_buf, jule::Ptr<_1a82995ec_ParamIns>* _19457_p) {
	if ((*((*((*(_19457_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _21ca87150_WriteStr(_19429_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:196:4"));
			(except.result);
		});
		_1a54363b3_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
		({
			auto except = _21ca87408_WriteByte(_19429_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:198:4"));
		});
	} else {
		_1a54363b3_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
	};
	if ((*((*((*(_19457_p))))._field_Decl))._field_Reference) {
		({
			auto except = _21ca87408_WriteByte(_19429_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:203:4"));
		});
	};
}



inline void _1a5435879_funcInsResult(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _22634_s, jule::Ptr<_1a829a752_FnIns>* _22660_f) {
	if (_1a8297b4a_IsVoid((*((*(_22660_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _21ca87150_WriteStr(_22634_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:229:5"));
				(except.result);
			});
		} else {
			({
				auto except = _21ca87150_WriteStr(_22634_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:231:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
		({
			auto except = _21ca87150_WriteStr(_22634_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:236:4"));
			(except.result);
		});
		_1a543b363_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
		({
			auto except = _21ca87408_WriteByte(_22634_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:238:4"));
		});
		return;;
	};
	_1a543b363_codeMut1((*(_self_))._field_rc, _22634_s, &((*((*(_22660_f))))._field_Result));
}



inline void _1a5435bdc_anonFunc(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _24429_buf, jule::Ptr<_1a829a752_FnIns> _24456_f) {
	if ((((*(_24456_f))._field_Result != nullptr) && (_1a8539d54_Tup((*(_24456_f))._field_Result) != nullptr))) {
		_1a5423735_pushResultIns((*(_self_))._field_oc, &(_24456_f));
	};
	_1a5435879_funcInsResult(_self_, _24429_buf, &(_24456_f));
	if (((*_24456_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _21ca87408_WriteByte(_24429_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:252:3"));
	});
	{
		auto expr = &((*_24456_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2dad6:;
		if (it != expr_end) {
			jule::I64 _2538_i = it - expr->begin();
			jule::Ptr<_1a82995ec_ParamIns> _25315_param = *it;
			{
				if (_1a829631e_IsSelf((*(_25315_param))._field_Decl.ptr())) {
					goto _iter_next_1aba2dad6;
				};
				_1a54351a3_paramIns(_self_, _24429_buf, &(_25315_param));
				if ((((*_24456_f.alloc)._field_Params.len() - _2538_i) > 1LL)) {
					({
						auto except = _21ca87408_WriteByte(_24429_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:259:5"));
					});
				};
			}
			_iter_next_1aba2dad6:;
			++it;
			_2538_i++;
			goto _iter_begin_1aba2dad6;
		}
		_iter_end_1aba2dad6:;
	};
}



inline void _1a5436050_func(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _26525_buf, jule::Ptr<_1a829a752_FnIns> _26552_f) {
	({
		auto except = _21ca87150_WriteStr(_26525_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:266:3"));
		(except.result);
	});
	_1a5435bdc_anonFunc(_self_, _26525_buf, _26552_f);
	({
		auto except = _21ca87408_WriteByte(_26525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:268:3"));
	});
}



inline void _1a54363b3_kind(_1a54311b0_typeCoder* _self_, _21ca86171_Builder* _27225_buf, jule::Ptr<_1a8535877_Type> _27252_k) {
	{
		
		if ((_1a85395a1_Struct(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32128:;
			{
				_1a5434669_structureIns(_self_, _27225_buf, _1a85395a1_Struct(_27252_k));
				return;;
			}
		}
		else if (_1a8536724_Binded(_27252_k.ptr())) {
			_case_begin_1aba321c2:;
			{
				({
					auto except = _21ca87150_WriteStr(_27225_buf, (*_27252_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:281:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a853802d_Prim(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32238:;
			{
				_1a5431dd6_prim(_self_, _27225_buf, _1a853802d_Prim(_27252_k));
				return;;
			}
		}
		else if ((_1a8539d54_Tup(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba3229e:;
			{
				_1a5432249_tuple(_self_, _27225_buf, _1a8539d54_Tup(_27252_k));
				return;;
			}
		}
		else if ((_1a85382b4_Sptr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32315:;
			{
				_1a5432920_sptr(_self_, _27225_buf, _1a85382b4_Sptr(_27252_k));
				return;;
			}
		}
		else if ((_1a853854a_Ptr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba3238c:;
			{
				_1a5432c83_ptr(_self_, _27225_buf, _1a853854a_Ptr(_27252_k));
				return;;
			}
		}
		else if ((_1a85387d1_Enum(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32414:;
			{
				_1a54330e6_enumDecl(_self_, _27225_buf, _1a85387d1_Enum(_27252_k));
				return;;
			}
		}
		else if ((_1a8538a67_TypeEnum(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba3248b:;
			{
				_1a5433459_typeEnumDecl(_self_, _27225_buf, _1a8538a67_TypeEnum(_27252_k));
				return;;
			}
		}
		else if ((_1a8539084_Slc(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32513:;
			{
				_1a5433b30_slice(_self_, _27225_buf, _1a8539084_Slc(_27252_k));
				return;;
			}
		}
		else if ((_1a8539abd_Map(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba3258a:;
			{
				_1a5433e93_mapType(_self_, _27225_buf, _1a8539abd_Map(_27252_k));
				return;;
			}
		}
		else if ((_1a8539837_Trait(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32612:;
			{
				({
					auto except = _21ca87150_WriteStr(_27225_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:308:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1a8538ced_Arr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32689:;
			{
				_1a54349cc_array(_self_, _27225_buf, _1a8538ced_Arr(_27252_k));
				return;;
			}
		}
		else if ((_1a853931a_Fn(_27252_k.ptr()) != nullptr)) {
			_case_begin_1aba32711:;
			{
				_1a5436050_func(_self_, _27225_buf, _1a853931a_Fn(_27252_k));
				return;;
			}
		}
		_match_end_1aba31e3b:;
	};
	{
		auto &_match_expr{ (*(_27252_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data29)) {
			_case_begin_1aba32799:;
			{
				({
					auto except = _21ca87150_WriteStr(_27225_buf, (*((*(_27252_k))._field_Kind.cast_ptr<_1a5430588_customType>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:319:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1aba3ae89:;
			{
				({
					auto except = _21ca87150_WriteStr(_27225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:321:4"));
					(except.result);
				});
			}
		}
		_match_end_1aba3ae23:;
	};
}








inline jule::Bool _1a5438c9a_resultCoder_eq(_1a5438c9a_resultCoder *_self_, _1a5438c9a_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1a5438c9a_resultCoder> static__1a54392a6_new(jule::Ptr<_1a54311b0_typeCoder>* _34021_tc) {
	return jule::new_ptr<_1a5438c9a_resultCoder>(_1a5438c9a_resultCoder{._field_tc=(*(_34021_tc))});;
}



inline void _1a5439619_ptr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _34424_s, jule::Ptr<_1a8545c83_Ptr> _34449_p) {
	({
		auto except = _21ca87150_WriteStr(_34424_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:345:3"));
		(except.result);
	});
	_1a543b000_codeMut(_self_, _34424_s, &((*(_34449_p))._field_Elem));
}



inline void _1a543997c_sptr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _34925_s, jule::Ptr<_1a85424bb_Sptr> _34950_p) {
	({
		auto except = _21ca87150_WriteStr(_34925_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:350:3"));
		(except.result);
	});
	_1a543b000_codeMut(_self_, _34925_s, &((*(_34950_p))._field_Elem));
}



inline void _1a5439ce0_mapType(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _35428_s, jule::Ptr<_1a8544633_Map> _35453_p) {
	({
		auto except = _21ca87150_WriteStr(_35428_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:355:3"));
		(except.result);
	});
	_1a543b000_codeMut(_self_, _35428_s, &((*(_35453_p))._field_Key));
	_1a543b000_codeMut(_self_, _35428_s, &((*_35453_p.alloc)._field_Val));
}



inline void _1a543a153_slice(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _36026_s, jule::Ptr<_1a8542e8e_Slc> _36051_slc) {
	({
		auto except = _21ca87150_WriteStr(_36026_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:361:3"));
		(except.result);
	});
	_1a543b000_codeMut(_self_, _36026_s, &((*(_36051_slc))._field_Elem));
}



inline void _1a543a4b6_arr(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _36524_s, jule::Ptr<_1a85452b0_Arr> _36549_arr) {
	({
		auto except = _21ca87150_WriteStr(_36524_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:366:3"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_36524_s, _1d97aa8e0_FmtInt(static_cast<jule::I64>((*(_36549_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	_1a543b000_codeMut(_self_, _36524_s, &((*_36549_arr.alloc)._field_Elem));
}



inline void _1a543a829_func(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _37125_s, jule::Ptr<_1a829a752_FnIns> _37150_f) {
	({
		auto except = _21ca87150_WriteStr(_37125_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:372:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37150_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba43656:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _37315_p = *it;
			{
				if ((*((*(_37315_p))._field_Decl))._field_Reference) {
					({
						auto except = _21ca87150_WriteStr(_37125_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:375:5"));
						(except.result);
					});
				};
				_1a543b000_codeMut(_self_, _37125_s, &((*_37315_p.alloc)._field_Type));
			}
			_iter_next_1aba43656:;
			++it;
			goto _iter_begin_1aba43656;
		}
		_iter_end_1aba43656:;
	};
	if (((*_37150_f.alloc)._field_Result != nullptr)) {
		_1a543b000_codeMut(_self_, _37125_s, &((*_37150_f.alloc)._field_Result));
	};
}



inline void _1a543ab8c_tup(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _38424_s, jule::Ptr<_1a8543a83_Tuple> _38449_tup) {
	{
		auto expr = &((*(_38449_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba45acb:;
		if (it != expr_end) {
			jule::Ptr<_1a8535877_Type> _38515_t = *it;
			{
				({
					auto except = _21ca87150_WriteStr(_38424_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:386:4"));
					(except.result);
				});
				_1a543b000_codeMut(_self_, _38424_s, &(_38515_t));
			}
			_iter_next_1aba45acb:;
			++it;
			goto _iter_begin_1aba45acb;
		}
		_iter_end_1aba45acb:;
	};
}



inline void _1a543b000_codeMut(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _39128_s, jule::Ptr<_1a8535877_Type>* _39154_t) {
	if (_1a8536724_Binded((*(_39154_t)).ptr())) {
		({
			auto except = _21ca87150_WriteStr(_39128_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:393:4"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_39128_s, (*((*(_39154_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:394:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39154_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28)) {
			_case_begin_1aba47270:;
			{
				_1a5439619_ptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a8545c83_Ptr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)) {
			_case_begin_1aba4824e:;
			{
				_1a543997c_sptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a85424bb_Sptr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26)) {
			_case_begin_1aba47dca:;
			{
				_1a5439ce0_mapType(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a8544633_Map>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)) {
			_case_begin_1aba47e41:;
			{
				_1a543a153_slice(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a8542e8e_Slc>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27)) {
			_case_begin_1aba47ea7:;
			{
				_1a543a4b6_arr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a85452b0_Arr>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)) {
			_case_begin_1aba4801d:;
			{
				_1a543a829_func(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a829a752_FnIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3)) {
			_case_begin_1aba48491:;
			{
				jule::Ptr<_1a82a555e_Enum> _4114_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1a82a555e_Enum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3);;
				static__1a90deebe_toOut(_39128_s, (*(_4114_te))._field_Ident, static_cast<jule::Uintptr>(_4114_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4)) {
			_case_begin_1aba48507:;
			{
				jule::Ptr<_1a82a6c69_TypeEnum> _4144_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1a82a6c69_TypeEnum>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data4);;
				static__1a90deebe_toOut(_39128_s, (*(_4144_te))._field_Ident, static_cast<jule::Uintptr>(_4144_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)) {
			_case_begin_1aba4856d:;
			{
				jule::Ptr<_1a81c246a_StructIns> _4178_si = (*((*(_39154_t))))._field_Kind.cast_ptr<_1a81c246a_StructIns>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0);;
				static__1a90e1696_structureIns(_39128_s, &(_4178_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data2)) {
			_case_begin_1aba485d4:;
			{
				jule::Ptr<_1a82a2da8_Trait> _4208_trt = (*((*(_39154_t))))._field_Kind.cast_ptr<_1a82a2da8_Trait>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data2);;
				static__1a90e0cd3_traitDecl(_39128_s, _4208_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)) {
			_case_begin_1aba4865b:;
			{
				({
					auto except = _21ca87150_WriteStr(_39128_s, (*((*((*(_39154_t))))._field_Kind.cast_ptr<_1a853d990_Prim>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:423:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25)) {
			_case_begin_1aba486d3:;
			{
				_1a543ab8c_tup(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1a8543a83_Tuple>((jule::Trait::Type*)&_1a85353c1_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1aba47d64:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:427:4"));;
			}
		}
		_match_end_1aba47ced:;
	};
}



inline void _1a543b363_codeMut1(_1a5438c9a_resultCoder* _self_, _21ca86171_Builder* _43129_s, jule::Ptr<_1a8535877_Type>* _43155_t) {
	jule::Ptr<_1a8543a83_Tuple> _4327_tup = _1a8539d54_Tup((*(_43155_t)).ptr());;
	if ((_4327_tup != nullptr)) {
		_1a543ab8c_tup(_self_, _43129_s, _4327_tup);
	} else {
		_1a54363b3_kind((*(_self_))._field_tc.ptr(), _43129_s, (*(_43155_t)));
	};
}



inline jule::Slice<jule::U8> _1a543b671_code(_1a5438c9a_resultCoder* _self_, jule::Ptr<_1a8535877_Type>* _44025_t) {
	_21ca86171_Builder _4417_s = static__21ca869bd_New(20LL);;
	_1a543b000_codeMut(_self_, &(_4417_s), _44025_t);
	return _21ca88481_Buf(&_4417_s);;
}








inline jule::Bool _1aba54788_Flag_eq(_1aba54788_Flag *_self_, _1aba54788_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aba54a74_Name(_1aba54788_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aba54bb7_What(_1aba54788_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aba54d0a_Reset(_1aba54788_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aba54e4d_Short(_1aba54788_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aba5811b_Flag_eq(_1aba5811b_Flag *_self_, _1aba5811b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aba57c97_Name(_1aba5811b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aba58407_What(_1aba5811b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aba5854a_Reset(_1aba5811b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aba5868d_Short(_1aba5811b_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aba5b828_Flag_eq(_1aba5b828_Flag *_self_, _1aba5b828_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aba5b4a4_Name(_1aba5b828_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aba5bb14_What(_1aba5b828_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aba5bc57_Reset(_1aba5b828_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aba5bd9a_Short(_1aba5b828_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aba60079_Flag_eq(_1aba60079_Flag *_self_, _1aba60079_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aba5ec05_Name(_1aba60079_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aba60365_What(_1aba60079_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aba604a8_Reset(_1aba60079_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aba605eb_Short(_1aba60079_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1aba63786_Flag_eq(_1aba63786_Flag *_self_, _1aba63786_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aba63412_Name(_1aba63786_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aba63a72_What(_1aba63786_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aba63bb5_Reset(_1aba63786_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aba63d08_Short(_1aba63786_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1a90e57aa_FlagSet> static__1a90e5ac9_New(void) {
	return jule::new_ptr<_1a90e57aa_FlagSet>(_1a90e57aa_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1a90e6080_FindFlag(_1a90e57aa_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6d791:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a90e3bd7_CommonFlagMptrData*)_7215_flag.safe_type())->_1a90e3368_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1aba6d791:;
			++it;
			goto _iter_begin_1aba6d791;
		}
		_iter_end_1aba6d791:;
	};
	return nullptr;;
}



inline jule::Trait _1a90e63c1_FindFlagShort(_1a90e57aa_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6dd35:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a90e3bd7_CommonFlagMptrData*)_8215_flag.safe_type())->_1a90e35ee_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1aba6dd35:;
			++it;
			goto _iter_begin_1aba6dd35;
		}
		_iter_end_1aba6dd35:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a90e6998_Parse(_1a90e57aa_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a90e826e_argParser _1167_ap = _1a90e826e_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1a90e979d_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1aba63786_Flag> _1abae74a7_addFlagCommon(_1a90e57aa_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a90e6080_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a90e63c1_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aba63786_Flag> _1407_flag = jule::new_ptr<_1aba63786_Flag>(_1aba63786_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1aba60079_Flag> _1abb0157c_addFlagCommon(_1a90e57aa_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a90e6080_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a90e63c1_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aba60079_Flag> _1407_flag = jule::new_ptr<_1aba60079_Flag>(_1aba60079_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1abae4c79_AddVar(_1a90e57aa_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aba63786_Flag> _1717_flag = _1abae74a7_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1abaedd93_AddVar(_1a90e57aa_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aba60079_Flag> _1717_flag = _1abb0157c_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1aba76557_parseInteger(_1a90e826e_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aba7901b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aba79307:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aba78bb9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aba78c30:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aba78c96:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aba78b53:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aba78a43:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1aba7e131_parseInteger(_1a90e826e_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aba81b7d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aba81e69:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aba8182b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_205369274_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aba81892:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aba81908:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aba817b5:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aba816a5:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a90e8abb_getData(_1a90e826e_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a90e8d41_processFlag(_1a90e826e_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data3)) {
			_case_begin_1aba7370d:;
			{
				jule::Ptr<_1aba60079_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1aba60079_Flag>((jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1aba73697:;
	};
	jule::Str _2203_data = _1a90e8abb_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90e3bd7_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a90e3368_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data0)) {
			_case_begin_1aba75611:;
			{
				jule::Ptr<_1aba54788_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1aba54788_Flag>((jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1aba76557_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aba7a094, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90e3bd7_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a90e3368_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data1)) {
			_case_begin_1aba7506c:;
			{
				jule::Ptr<_1aba5811b_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1aba5811b_Flag>((jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aba7e131_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aba82c06, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90e3bd7_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a90e3368_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data2)) {
			_case_begin_1aba75677:;
			{
				jule::Ptr<_1aba5b828_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1aba5b828_Flag>((jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1d97a0c6a_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a90e3bd7_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a90e3368_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data4)) {
			_case_begin_1aba756dd:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1aba63786_Flag>((jule::Trait::Type*)&_1a90e3bd7_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1aba74da2:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90e90e9_singleDash(_1a90e826e_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1aba88778:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a90e63c1_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1a90e8d41_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1aba88778:;
			it += len;
			goto _iter_begin_1aba88778;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90e93a2_doubleDash(_1a90e826e_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1a90e6080_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1a90e8d41_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90e95a0_tryArg(_1a90e826e_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a90e93a2_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a90e90e9_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a90e979d_parse(_1a90e826e_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a90e95a0_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1aba8d2a5:;
	}
	_iter_end_1aba8d2a5:;;
	return jule::VoidExceptional{};
}







inline jule::Ptr<_21cc3c019_Cmd> static__21cc3c46a_New(jule::Str _3516_path) {
	return jule::new_ptr<_21cc3c019_Cmd>(_21cc3c019_Cmd{._field_attrs=_21cc7d445_cmdAttrs{}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _21cc3c668_Spawn(_21cc3c019_Cmd* _self_) {
	return _21cc7d7ec_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21cc3caec_Wait(_21cc3c019_Cmd* _self_) {
	return _21cc7dc81_wait(_self_);
}



inline jule::VoidExceptional _21cc7d7ec_spawn(_21cc3c019_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _21c6e121b_UTF16FromStr(_21cc7e3be_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _21cc7e798_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_21cc7ebe9_getLastCmdError(), &__jule_any_type138)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21cc7dc81_wait(_21cc3c019_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_21c719101_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_21c719101_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}












inline jule::Bool _21cc3b47a_Dir_eq(_21cc3b47a_Dir *_self_, _21cc3b47a_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_21cc858ae_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_21cc3b47a_Dir>> static__2053769ce_Read(jule::Str _1117_path) {
	jule::Slice<_21cc3b47a_Dir> __jule_func_result;
	jule::Slice<jule::U16> _123_utf16Path = _21c6e121b_UTF16FromStr(_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _137_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _143_handle = _21c71ca83_FindFirstFile((&(_123_utf16Path[0LL])), (&(_137_data)));;
	if ((_143_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<_21cc3b47a_Dir>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			_21cc3b47a_Dir _198_entry = _21cc3b47a_Dir{._field_Name=_21c6e17e3_U16PtrToStr(((jule::U16*)(_137_data.cFileName))), ._field_Stat=_21cc858ae_Stat{._field_mode=0LL, ._field_size=0}};;
			_198_entry._field_Stat=({
				auto except = static__20537c980_Of(_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _198_entry._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_21cc3b47a_Dir>>{.error=except.error};
				} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
			});
			{ jule::Slice<_21cc3b47a_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_198_entry); };
			if ((_21c71ce07_FindNextFile(_143_handle, (&(_137_data))) == 0LL)) {
				goto _iter_end_1a64e8980;
			};
		}
	_iter_next_1a64e8980:;
	}
	_iter_end_1a64e8980:;;
	_21c71d1c1_FindClose(_143_handle);
	return jule::Exceptional<jule::Slice<_21cc3b47a_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__205376bcc_Create(jule::Str _3319_path) {
	jule::Slice<jule::U16> _383_utf16Path = _21c6e121b_UTF16FromStr(_3319_path);;
	if ((!(_21c71a784_CreateDirectory((&(_383_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21cc801b1_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__205376e0d_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U16> _463_utf16Path = _21c6e121b_UTF16FromStr(_4519_path);;
	if ((!(_21c71aa4d_RemoveDirectory((&(_463_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21cc801b1_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_1a8dd23cc_IR__jule_tuple_s_21ca95427_Log static__1a8dd28a5_Build(jule::Str _3018_path, jule::I64 _3029_flags) {
	__jule_tuple_x_1a8dd23cc_IR__jule_tuple_s_21ca95427_Log __jule_func_result;
	jule::Ptr<_1a8dce8e6_Importer> _317_importer = static__1a8dced25_New(_1a8dd4357_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1a819bc91_AST>> _337_files;
	jule::Slice<_21ca95427_Log> _3318_logs;
	({
		__jule_tuple_sx_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8dd1310_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a819bc91_AST> _457_firstFile = _337_files[0LL];;
	_1a8dd4610_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1a838d8bc_Package> _487_pkg;
	({
		__jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8557657_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1a8388147_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8dd23cc_IR> _537_ir = jule::new_ptr<_1a8dd23cc_IR>(_1a8dd23cc_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1a838b14a_ImportInfo>(nullptr), ._field_Used=_1a8dd00ab_AllPackages(_317_importer), ._field_Ordered=_1a8de13a8_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1a8dd4148_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a8dd2d8e_appendStructs(_1a8dd23cc_IR* _self_, jule::Ptr<_1a838d8bc_Package>* _6830_p, jule::Slice<jule::Ptr<_1a81be610_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadd5d90:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aadd6885:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a81be610_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1aadd6885:;
						++it;
						goto _iter_begin_1aadd6885;
					}
					_iter_end_1aadd6885:;
				};
			}
			_iter_next_1aadd5d90:;
			++it;
			goto _iter_begin_1aadd5d90;
		}
		_iter_end_1aadd5d90:;
	};
}



inline jule::Slice<jule::Ptr<_1a81be610_Struct>> _1a8dd3125_GetAllStructures(_1a8dd23cc_IR* _self_) {
	jule::Slice<jule::Ptr<_1a81be610_Struct>> _8111_buffer = nullptr;;
	_1a8dd2d8e_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadd79da:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1a8dd2d8e_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1aadd79da:;
			++it;
			goto _iter_begin_1aadd79da;
		}
		_iter_end_1aadd79da:;
	};
	return _8111_buffer;;
}



inline void _1a8dd3488_appendGlobals(_1a8dd23cc_IR* _self_, jule::Ptr<_1a838d8bc_Package>* _9130_p, jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadd913a:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aadd9b30:;
					if (it != expr_end) {
						jule::Ptr<_1a83cc1ad_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1aadd9b30:;
						++it;
						goto _iter_begin_1aadd9b30;
					}
					_iter_end_1aadd9b30:;
				};
			}
			_iter_next_1aadd913a:;
			++it;
			goto _iter_begin_1aadd913a;
		}
		_iter_end_1aadd913a:;
	};
}



inline jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1a8dd371e_GetAllGlobals(_1a8dd23cc_IR* _self_) {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _10411_buffer = nullptr;;
	_1a8dd3488_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaddb4b1:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1a8dd3488_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1aaddb4b1:;
			++it;
			goto _iter_begin_1aaddb4b1;
		}
		_iter_end_1aaddb4b1:;
	};
	return _10411_buffer;;
}



inline void _1a8dd391c_Order(_1a8dd23cc_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1a8dd371e_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1a8dd3125_GetAllStructures(_self_);
	_1aaddd0b7_order((*(_self_))._field_Ordered._field_Globals);
	_1aadddb9a_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::I32 _21c6e0270_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _21c6e0539_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _21c6e087a_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a54a5784:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1a54a5784:;
			++it;
			goto _iter_begin_1a54a5784;
		}
		_iter_end_1a54a5784:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a54a4871:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1a54a8248:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1a54a7e18:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21c6e0539_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1a54a7da2:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1a54a7c92:;
				};
			}
			_iter_next_1a54a4871:;
			++it;
			goto _iter_begin_1a54a4871;
		}
		_iter_end_1a54a4871:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _21c6e0b11_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1a54ac99a:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1a54ac769:;
					{
						_1206_a[_1216_n]=_21c6e0270_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1a54ac3a1:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1a54ac33a:;
			};
			(_1216_n)++;
		}
	_iter_next_1a54a9b95:;
	}
	_iter_end_1a54a9b95:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _21c6e0e85_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a54b02d8:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a54b0382:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21c6e0539_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1a54b01d9:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _21c6e121b_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a54ba37b:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1a54ba37b;
				};
				_176_buff=_21c6e0e85_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1a54ba37b:;
			++it;
			goto _iter_begin_1a54ba37b;
		}
		_iter_end_1a54ba37b:;
	};
	return _21c6e0e85_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _21c6e1529_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a54bca65:;
		if (it != expr_end) {
			jule::I64 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1a54bca65;
				};
			}
			_iter_next_1a54bca65:;
			++it;
			_356_i++;
			goto _iter_begin_1a54bca65;
		}
		_iter_end_1a54bca65:;
	};
	return __jule_runesToStr(_21c6e0b11_Decode(_346_codePage));;
}



inline jule::Str _21c6e17e3_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I64 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_21c6e0b11_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1a54bdbcb:;
	}
	_iter_end_1a54bdbcb:;;
	return jule::Str();;
}



inline jule::I64 _21c65d5d9_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _21c718d37_GetStdHandle(jule::Uintptr _6517_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6517_stdh)));;
}



inline jule::Bool _21c719101_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I64 _21c719475_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return _wstat(((wchar_t*)(_6917_path)), _6933_stat);;
}



inline jule::I64 _21c7198a4_Wopen(jule::U16* _7417_path, jule::I64 _7429_flag, jule::I64 _7440_mode) {
	return _wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode);;
}



inline jule::U32 _21c719ab3_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _21c719e37_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff)));;
}



inline jule::Bool _21c71a4ba_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _21c71a784_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _21c71aa4d_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _21c71b037_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname) {
	return GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1102_buff)), ((wchar_t**)(_11014_fname)));;
}



inline jule::Bool _21c71b3ab_GetConsoleMode(jule::Uintptr _11519_handle, jule::I64* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)(_11540_mode)));;
}



inline jule::Bool _21c71b9b6_SetConsoleMode(jule::Uintptr _12019_handle, jule::I64 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _21c71c016_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_1267_written)))), _12621_reserved);;
}



inline jule::Bool _21c71c500_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)(_1347_readed)), nullptr);;
}



inline jule::Uintptr _21c71ca83_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data)));;
}



inline jule::I64 _21c71ce07_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return FindNextFileW(((HANDLE)(_15024_h)), _15039_data);;
}



inline jule::I64 _21c71d1c1_FindClose(jule::Uintptr _15514_h) {
	return FindClose(((HANDLE)(_15514_h)));;
}



inline jule::I64 _21c72d38a_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _21c72d764_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _21c72db1b_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _21c72dd4c_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _21c73e577_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a5539a7c_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _21c7556ae_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a5539a7c_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _21c755945_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _21c73e577_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _21c755c0e_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _21c84eb82_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _21c84d8ea_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_21c84dea0_acceptRange _1962_accept = _21c84e346_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21c84eec3_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _21c84d8ea_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_21c84dea0_acceptRange _2432_accept = _21c84e346_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21c850523_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_21c851c3e_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a4204825;
			};
		}
	_iter_next_1a4204825:;
	}
	_iter_end_1a4204825:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _21c8507dc_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a4207a26:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a4207e22:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a4207e88:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a4208010:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a4208087:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a4207a8c:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a42079b0:;
			{
				return -1LL;;
			}
		}
		_match_end_1a42078c2:;
	};
}



inline jule::I64 _21c850c71_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1a420c6eb:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1a420cdb1:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1a420aa4b:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a420cc7e;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1a420cc7e:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a420a683:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1a420a60b:;
	};
}



inline jule::Slice<jule::U8> _21c85106d_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _21c8513e2_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21c8513e2_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a4214eb7:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a4213b75:;
			{
				_41242_r=128LL;
				goto _case_begin_1a4213bdb;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a4213bdb:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1a4213416:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1a421338e:;
	};
}



inline jule::I64 _21c851975_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a421d2cd;
			};
			jule::U8 _4823_x = _21c84d8ea_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a421d2cd;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a421d2cd;
			};
			_21c84dea0_acceptRange _4923_accept = _21c84e346_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a421d2cd:;
	}
	_iter_end_1a421d2cd:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21c851c3e_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _21c9a193d_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _21c9a92c5_Len64(_5919_x));;
}



inline jule::I64 _21c9a2884_TrailingZeros(jule::U64 _8118_x) {
	;
	return _21c9a3533_TrailingZeros64(static_cast<jule::U64>(_8118_x));;
}



inline jule::I64 _21c9a3269_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_21c9a2037__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _21c9a3533_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_21c9a2620__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _21c9a900b_Len32(jule::U32 _35014_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I64 _21c9a92c5_Len64(jule::U64 _36414_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21c9aa062_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21c9ab86b_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _21c869c57__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _21b5547cd_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I64 _21c376c4d_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1a581cc0b_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a581e966:;
	}
	_iter_end_1a581e966:;;
	return true;;
}

inline jule::Bool _1a5871127_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a5872821:;
	}
	_iter_end_1a5872821:;;
	return true;;
}

inline jule::Bool _1a6857904_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a68590a9:;
	}
	_iter_end_1a68590a9:;;
	return true;;
}

inline jule::Bool _1ab2aeca2_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ab2b19b8:;
	}
	_iter_end_1ab2b19b8:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_21c7556ae_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1a5539a7c_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_21c7556ae_StrBytes(jule::Str::lit("\n", 1)));
	_21c72dd4c_Exit(2LL);
}



inline void _21c852943__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I64 _21c852cd9_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _21c6e121b_UTF16FromStr(_21c755945_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _21c71c016_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I64 _21c85315d_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _21c71c500_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _21c6e0b11_Decode(_346_codepage.slice(0LL, static_cast<jule::I64>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a574e9a6:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I64 _443_size = _21c8507dc_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_1a574e9a6;
				};
				_21c850c71_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_1a574e9a6:;
			++it;
			goto _iter_begin_1a574e9a6;
		}
		_iter_end_1a574e9a6:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf) {
	_21c868cab_handleRW(&(_5816_buf));
	return _21c852cd9_writeConsole(_21c7187c6_STDOUT, _5816_buf);;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf) {
	_21c868cab_handleRW(&(_6616_buf));
	return _21c852cd9_writeConsole(_21c718ac3_STDERR, _6616_buf);;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_21c868cab_handleRW(&(_7418_buf));
	return _21c85315d_readConsole(_21c71852e_STDIN, _7418_buf);;
}



inline jule::U64 _1a575dc07_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1a575ddc2_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _21c859818_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a57530c5:;
		if (it != expr_end) {
			jule::I64 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_21c6e17e3_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1a57530c5:;
			++it;
			_196_i++;
			goto _iter_begin_1a57530c5;
		}
		_iter_end_1a57530c5:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _21c859cbe_executable(void) {
	;
	jule::Slice<jule::U16> _486_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _492_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_486_buf[0LL])))), 260LL);;
	if ((_492_n > 0LL)) {
		_486_buf[_492_n]=0LLU;
		return _21c6e17e3_U16PtrToStr((&(_486_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:54:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1a575dc07_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1a575ddc2_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1a575ddc2_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1a5765417:;
	}
	_iter_end_1a5765417:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a5765b54:;
	}
	_iter_end_1a5765b54:;;
	return _21c755c0e_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _21c864d40_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _21c755c0e_StrFromBytes(_516_buf);;
}



inline jule::I64 _21c864d40_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1a576ab37:;
	}
	_iter_end_1a576ab37:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_21c865ed9_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _21b5547cd_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I64 _852_exp = (static_cast<jule::I64>((_832_bits >> 52LLU)) & static_cast<jule::I64>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1a5771621:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1a57713e0:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1a576de37:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1a5770de5:;
		};
	};
	;
	jule::I64 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_21c864d40_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I64 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I64 _1203_digit = static_cast<jule::I64>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1a57745e1:;
	}
	_iter_end_1a57745e1:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1a5775889;
			};
		}
	_iter_next_1a5775889:;
	}
	_iter_end_1a5775889:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _21c755c0e_StrFromBytes(_1046_buf);;
}



inline jule::Str _1abab03d7_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab1a9d:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1a57db966_toStr((*(_1459_z))));;
			}
			_iter_next_1abab1a9d:;
			++it;
			_1456_i++;
			goto _iter_begin_1abab1a9d;
		}
		_iter_end_1abab1a9d:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _21c755c0e_StrFromBytes(_1436_buf);;
}



inline jule::Str _1abaa51e0_structToStr(_21ca86171_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1abaa82ae:;
				{
					;
					{
						
{
							_case_begin_1abaa9447:;
							{
								;
								;
							}
						}
						_match_end_1abaa9128:;
					};
				}
			}
			_match_end_1abaa7852:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1abaab328:;
				{
					(_1966_buf).append(_1abaabb0e_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1abaab27e:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _21c755c0e_StrFromBytes(_1966_buf);;
}



inline jule::Str _1a57c5ba3_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1a57c6dd5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a57c6ce7:;
	};
	{
		
{
			_case_begin_1a57c7402:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1a57c728c:;
	};
}

inline jule::Str _1a57c7d81_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57c90c4:;
			{
				return _21613_x;;
			}
		}
		_match_end_1a57c905d:;
	};
}

inline jule::Str _1a57c85ce_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57cbb10:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a57cba22:;
	};
}

inline jule::Str _1a57cd33c_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57ce591:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a57ce4a3:;
	};
}

inline jule::Str _1a57cb071_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57d2022:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a57d1e34:;
	};
}

inline jule::Str _1a57d374e_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57d4a3b:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a57d494d:;
	};
}

inline jule::Str _1a57d6235_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57d7555:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1a57d7467:;
	};
}

inline jule::Str _1a57d8c82_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57da05d:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57d9de8:;
	};
}

inline jule::Str _1a57d6796_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57dc4a0:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57dc33a:;
	};
}

inline jule::Str _1a57db966_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57de8e2:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57de77c:;
	};
}

inline jule::Str _1a57ddda8_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57e1d34:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57e1bbe:;
	};
}

inline jule::Str _1a57e12ea_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57e4276:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57e4111:;
	};
}

inline jule::Str _1a57e373c_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57e680b:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1a57e6696:;
	};
}

inline jule::Str _1a57e6b19_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57e8d19:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1a57e8b2c:;
	};
}

inline jule::Str _1a57e6e8d_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57ead93:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1a57eabd9:;
	};
}

inline jule::Str _1a57d3b28_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1a57ecc41:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1a57ec9bb:;
	};
}

inline jule::Str _1a64ebbd6_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a64ed710:;
			{
				return _1a57c85ce_toStr(_21613_x);;
			}
		}
		_match_end_1a64ed116:;
	};
}

inline jule::Str _1a6507d24_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a650984d:;
			{
				return _1a57c85ce_toStr(_21613_x);;
			}
		}
		_match_end_1a6509254:;
	};
}

inline jule::Str _1a6540136_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a6541b60:;
			{
				return _1a57c85ce_toStr(_21613_x);;
			}
		}
		_match_end_1a6541566:;
	};
}

inline jule::Str _1a68767e1_toStr(jule::I64 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a68782d7:;
			{
				return _1a57c85ce_toStr(_21613_x);;
			}
		}
		_match_end_1a6877bdd:;
	};
}

inline jule::Str _1a9631983_toStr(jule::Ptr<_1a83cc1ad_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1a9632b71:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9632a83:;
	};
	;
	{
		
{
			_case_begin_1a9633622:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a96332e2:;
	};
}

inline jule::Str _1a9634029_toStr(jule::Ptr<_1a8534a85_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1a96364e3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9636405:;
	};
	;
	{
		
{
			_case_begin_1a9636e94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9636b64:;
	};
}

inline jule::Str _1a96379bc_toStr(jule::Ptr<_1a81be610_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1a9639dcb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9639cdd:;
	};
	;
	{
		
{
			_case_begin_1a963a87c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a963a54c:;
	};
}

inline jule::Str _1a6d58e6b_toStr(jule::Ptr<_1a8297694_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d5a159:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d5a06b:;
	};
	;
	{
		
{
			_case_begin_1a6d5ab0a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d5a7ca:;
	};
}

inline jule::Str _1a6d5b754_toStr(jule::Ptr<_1a82a2da8_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d5dc1d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d5db30:;
	};
	;
	{
		
{
			_case_begin_1a6d5e6be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d5e38e:;
	};
}

inline jule::Str _1a6d5ee3e_toStr(jule::Ptr<_1a82a555e_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d62392:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d622a4:;
	};
	;
	{
		
{
			_case_begin_1a6d62d43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d62a13:;
	};
}

inline jule::Str _1a6d60307_toStr(jule::Ptr<_1a82a6c69_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d6586d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d65791:;
	};
	;
	{
		
{
			_case_begin_1a6d6631e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d66000:;
	};
}

inline jule::Str _1a6d81e83_toStr(jule::Ptr<_1a81bb6d9_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d83171:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d83083:;
	};
	;
	{
		
{
			_case_begin_1a6d83b22:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d837e2:;
	};
}

inline jule::Str _1a6d9414e_toStr(jule::Ptr<_1a82273d2_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1a6d9533c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6d9524e:;
	};
	;
	{
		
{
			_case_begin_1a6d95cdd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6d959ad:;
	};
}

inline jule::Str _1a6dad377_toStr(jule::Ptr<_1a82a4a03_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1a6dae554:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a6dae466:;
	};
	;
	{
		
{
			_case_begin_1a6db0005:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6daebc5:;
	};
}

inline jule::Str _1a6dbe993_toStr(jule::Ptr<_1a8295bc0_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1a57eaa52:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a57ea953:;
	};
	;
	{
		
{
			_case_begin_1a6dc207d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a6dc1786:;
	};
}

inline jule::Str _1a96c59b1_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1a96c74da:;
			{
				return _1a57c7d81_toStr(_21613_x);;
			}
		}
		_match_end_1a96c6de1:;
	};
}

inline jule::Str _1a979db33_toStr(jule::Ptr<_1a819e304_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a979ecdd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a979ec00:;
	};
	;
	{
		
{
			_case_begin_1a97a078e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97a045e:;
	};
}

inline jule::Str _1a97b5e14_toStr(jule::Ptr<_1a8290a66_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a97b6d8d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97b6ca0:;
	};
	;
	{
		
{
			_case_begin_1a97b783e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97b750e:;
	};
}

inline jule::Str _1a97b8367_toStr(jule::Ptr<_1a81a3b22_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a97c0a67:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97c0979:;
	};
	;
	{
		
{
			_case_begin_1a97c1518:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97c11d8:;
	};
}

inline jule::Str _1a97cd06e_toStr(jule::Ptr<_1a81ac697_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a97ce16e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97ce081:;
	};
	;
	{
		
{
			_case_begin_1a97ceb20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97ce7e0:;
	};
}

inline jule::Str _1a97d111b_toStr(jule::Ptr<_1a81a302d_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1a97d22d7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97d0bed:;
	};
	;
	{
		
{
			_case_begin_1a97d3250:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97d2958:;
	};
}

inline jule::Str _1a97d06e2_toStr(jule::Ptr<_1a83589ec_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1a97d56c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97d55e8:;
	};
	;
	{
		
{
			_case_begin_1a97d6176:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97d5d57:;
	};
}

inline jule::Str _1a97d6033_toStr(jule::Ptr<_1a8358ea3_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1a97d6ebd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97d6dd0:;
	};
	;
	{
		
{
			_case_begin_1a97d8c4a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97d8909:;
	};
}

inline jule::Str _1a97d3607_toStr(jule::Ptr<_1a8359459_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1a97d9a92:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97d99a4:;
	};
	;
	{
		
{
			_case_begin_1a97db81e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97db4cd:;
	};
}

inline jule::Str _1a97db720_toStr(jule::Ptr<_1a85028cc_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1a97dc7dc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97dc6ee:;
	};
	;
	{
		
{
			_case_begin_1a97de5d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97de239:;
	};
}

inline jule::Str _1a97ded72_toStr(jule::Ptr<_1a828c458_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a97e22e7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a97e2209:;
	};
	;
	{
		
{
			_case_begin_1a97e2c98:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a97e2968:;
	};
}

inline jule::Str _1a992ae9c_toStr(jule::Ptr<_1a8357eb3_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1a992c157:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a992c069:;
	};
	;
	{
		
{
			_case_begin_1a992cb08:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a992c7c8:;
	};
}

inline jule::Str _1a9949570_toStr(jule::Ptr<_1a8355466_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1a994a75d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a994a670:;
	};
	;
	{
		
{
			_case_begin_1a9800c95:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a5553689:;
	};
}

inline jule::Str _1a98094eb_toStr(jule::Ptr<_1a8293519_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a980a684:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a980a596:;
	};
	;
	{
		
{
			_case_begin_1a980b135:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a980ad05:;
	};
}

inline jule::Str _1a980db60_toStr(jule::Ptr<_1a829452b_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a980ebd8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a980eaea:;
	};
	;
	{
		
{
			_case_begin_1a9810689:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9810359:;
	};
}

inline jule::Str _1a980e369_toStr(jule::Ptr<_1a8292293_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9811756:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9811668:;
	};
	;
	{
		
{
			_case_begin_1a98134d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a98131a3:;
	};
}

inline jule::Str _1a9811b85_toStr(jule::Ptr<_1a8290d63_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a981432a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a981423c:;
	};
	;
	{
		
{
			_case_begin_1a98160a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9815c66:;
	};
}

inline jule::Str _1a980dd3b_toStr(jule::Ptr<_1a8291160_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9816dee:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9816d11:;
	};
	;
	{
		
{
			_case_begin_1a9818b7b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a981883a:;
	};
}

inline jule::Str _1a9817608_toStr(jule::Ptr<_1a8291913_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a98199c3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a98198d5:;
	};
	;
	{
		
{
			_case_begin_1a981b750:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a981b40e:;
	};
}

inline jule::Str _1a981b60c_toStr(jule::Ptr<_1a8293140_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a981c597:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a981c4a9:;
	};
	;
	{
		
{
			_case_begin_1a981e324:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a981ded3:;
	};
}

inline jule::Str _1a981cc4b_toStr(jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a982016b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a982007d:;
	};
	;
	{
		
{
			_case_begin_1a9821de8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9821aa7:;
	};
}

inline jule::Str _1a9821ca5_toStr(jule::Ptr<_1a8294828_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a98229cb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a98228dd:;
	};
	;
	{
		
{
			_case_begin_1a9824bdc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9822ab9:;
	};
}

inline jule::Str _1a982c6a6_toStr(jule::Ptr<_1a835609e_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1a982d894:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a982d7a6:;
	};
	;
	{
		
{
			_case_begin_1a982e345:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a982e015:;
	};
}

inline jule::Str _1a9838085_toStr(jule::Ptr<_1a835639b_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a9839273:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9839185:;
	};
	;
	{
		
{
			_case_begin_1a9839c24:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a98398e4:;
	};
}

inline jule::Str _1a983dde3_toStr(jule::Ptr<_1a8356852_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a98400d1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a983eee3:;
	};
	;
	{
		
{
			_case_begin_1a9840a82:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9840752:;
	};
}

inline jule::Str _1a986625b_toStr(jule::Ptr<_1a835729d_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1a9867449:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a986735b:;
	};
	;
	{
		
{
			_case_begin_1a9867dea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9867aba:;
	};
}

inline jule::Str _1a9875d70_toStr(jule::Ptr<_1a81b30b5_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1a9877019:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9876e2b:;
	};
	;
	{
		
{
			_case_begin_1a98779ba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a987768a:;
	};
}

inline jule::Str _1a98789dd_toStr(jule::Ptr<_1a81b39bc_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1a987ad75:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a987ac87:;
	};
	;
	{
		
{
			_case_begin_1a987b826:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a987b4e6:;
	};
}

inline jule::Str _1a9895356_toStr(jule::Ptr<_1a8357633_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9896544:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9896456:;
	};
	;
	{
		
{
			_case_begin_1a9896ee5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9896bb5:;
	};
}

inline jule::Str _1a989e1d9_toStr(jule::Ptr<_1a8358623_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a98a03c7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a98a02d9:;
	};
	;
	{
		
{
			_case_begin_1a98a0d78:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a98a0a48:;
	};
}

inline jule::Str _1a98d660b_toStr(jule::Ptr<_1a81a4848_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a98d77a5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a98d76b7:;
	};
	;
	{
		
{
			_case_begin_1a98d8256:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a98d7e26:;
	};
}

inline jule::Str _1a98eb654_toStr(jule::Ptr<_1a828ccd8_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a98ec831:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a98ec743:;
	};
	;
	{
		
{
			_case_begin_1a98ed2d2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a98ecea2:;
	};
}

inline jule::Str _1a9aa549a_toStr(jule::Ptr<_1a8359b96_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1a9aa6688:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9aa659a:;
	};
	;
	{
		
{
			_case_begin_1a9aa7139:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9aa6d09:;
	};
}

inline jule::Str _1a9ab97cd_toStr(jule::Ptr<_1a835adb7_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9abb15e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9abb071:;
	};
	;
	{
		
{
			_case_begin_1a9abbb10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9abb7d0:;
	};
}

inline jule::Str _1a9ad583d_toStr(jule::Ptr<_1a8357a0c_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ad6a2b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ad693d:;
	};
	;
	{
		
{
			_case_begin_1a9ad74cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ad719c:;
	};
}

inline jule::Str _1a9adbed7_toStr(jule::Ptr<_1a835b25d_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9add1c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9add0d7:;
	};
	;
	{
		
{
			_case_begin_1a9addb76:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9add846:;
	};
}

inline jule::Str _1a9ae6a6e_toStr(jule::Ptr<_1a81adce7_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ae7c07:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ae7b19:;
	};
	;
	{
		
{
			_case_begin_1a9ae86a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ae8378:;
	};
}

inline jule::Str _1a9ae6d05_toStr(jule::Ptr<_1a81b1b41_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a9aeade7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9aead09:;
	};
	;
	{
		
{
			_case_begin_1a9aeb898:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9aeb568:;
	};
}

inline jule::Str _1a9aec080_toStr(jule::Ptr<_1a81b57e3_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a9aee0d7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9aedee9:;
	};
	;
	{
		
{
			_case_begin_1a9aeea88:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9aee758:;
	};
}

inline jule::Str _1a9b008e1_toStr(jule::Ptr<_1a81b50a6_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b02ccd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b02be0:;
	};
	;
	{
		
{
			_case_begin_1a9b0377e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b0344e:;
	};
}

inline jule::Str _1a9b03e66_toStr(jule::Ptr<_1a81b278a_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b05ebd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b05dd0:;
	};
	;
	{
		
{
			_case_begin_1a9b0696e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b0663e:;
	};
}

inline jule::Str _1a9b07c17_toStr(jule::Ptr<_1a81b4270_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b091ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b090c0:;
	};
	;
	{
		
{
			_case_begin_1a9b09b5e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b0982e:;
	};
}

inline jule::Str _1a9b001d7_toStr(jule::Ptr<_1a81ab2cd_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b0ad5d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b0ac70:;
	};
	;
	{
		
{
			_case_begin_1a9b0cada:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b0c7aa:;
	};
}

inline jule::Str _1a9b0dd83_toStr(jule::Ptr<_1a81ab6a7_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b10329:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b1023b:;
	};
	;
	{
		
{
			_case_begin_1a9b10cca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b1099a:;
	};
}

inline jule::Str _1a9b118ad_toStr(jule::Ptr<_1a81b65b3_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b13c9a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b13bac:;
	};
	;
	{
		
{
			_case_begin_1a9b1474b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b1441b:;
	};
}

inline jule::Str _1a9b14d9a_toStr(jule::Ptr<_1a81ab9a4_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b16e8a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b16d9c:;
	};
	;
	{
		
{
			_case_begin_1a9b1793b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b1760b:;
	};
}

inline jule::Str _1a9b18bd4_toStr(jule::Ptr<_1a81b3d96_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b1a17a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b1a08c:;
	};
	;
	{
		
{
			_case_begin_1a9b1ab2b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b1a7eb:;
	};
}

inline jule::Str _1a9b1b27a_toStr(jule::Ptr<_1a81b201a_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b1d36a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b1d27c:;
	};
	;
	{
		
{
			_case_begin_1a9b1dd1b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b1d9db:;
	};
}

inline jule::Str _1a9b200b4_toStr(jule::Ptr<_1a81a3902_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a9b2155a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9b2146c:;
	};
	;
	{
		
{
			_case_begin_1a9b2200b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9b21bcb:;
	};
}

inline jule::Str _1a99c8c1a_toStr(jule::Ptr<_1a81ba6a5_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99c9dc5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99c9cd7:;
	};
	;
	{
		
{
			_case_begin_1a99ca876:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99ca546:;
	};
}

inline jule::Str _1a99cd802_toStr(jule::Ptr<_1a81b9808_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99ce869:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99ce77b:;
	};
	;
	{
		
{
			_case_begin_1a99d031a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99ceeda:;
	};
}

inline jule::Str _1a99d1816_toStr(jule::Ptr<_1a81b0986_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99d3708:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99d361a:;
	};
	;
	{
		
{
			_case_begin_1a99d41a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99d3d79:;
	};
}

inline jule::Str _1a99d4ece_toStr(jule::Ptr<_1a81ba045_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99d7322:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99d7234:;
	};
	;
	{
		
{
			_case_begin_1a99d7cc3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99d7993:;
	};
}

inline jule::Str _1a99db0a1_toStr(jule::Ptr<_1a81b7bad_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99dc118:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99dc02a:;
	};
	;
	{
		
{
			_case_begin_1a99dcab9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99dc789:;
	};
}

inline jule::Str _1a99dd67a_toStr(jule::Ptr<_1a81b8b48_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a99e09bd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a99e08d0:;
	};
	;
	{
		
{
			_case_begin_1a99e146e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a99e113e:;
	};
}

inline jule::Str _1a9a167a2_toStr(jule::Ptr<_1a828eee9_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9a17b05:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9a17a17:;
	};
	;
	{
		
{
			_case_begin_1a9a185a6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9a18276:;
	};
}

inline jule::Str _1a9a17033_toStr(jule::Ptr<_1a828a852_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9a1b70d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9a1b620:;
	};
	;
	{
		
{
			_case_begin_1a9a1c1ae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9a1bd7e:;
	};
}

inline jule::Str _1a9a49ebc_toStr(jule::Ptr<_1a829a752_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1a9a4b1aa:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9a4b0bc:;
	};
	;
	{
		
{
			_case_begin_1a9a4bb5b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9a4b82b:;
	};
}

inline jule::Str _1a9edc30a_toStr(jule::Ptr<_1a81a1713_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a9edd4b5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9edd3c7:;
	};
	;
	{
		
{
			_case_begin_1a9edde66:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9eddb36:;
	};
}

inline jule::Str _1a9ee2b90_toStr(jule::Ptr<_1a81a0426_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1a9ee3d4a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9ee3c5c:;
	};
	;
	{
		
{
			_case_begin_1a9ee47eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9ee44bb:;
	};
}

inline jule::Str _1aa00609e_toStr(jule::Ptr<_1a81a0eb5_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa00726a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa00717c:;
	};
	;
	{
		
{
			_case_begin_1aa007c1b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa0078db:;
	};
}

inline jule::Str _1aa00c605_toStr(jule::Ptr<_1a81a0129_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa00d7c1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa00d6d3:;
	};
	;
	{
		
{
			_case_begin_1aa00e272:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa00de42:;
	};
}

inline jule::Str _1aa013c27_toStr(jule::Ptr<_1a81a0723_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa014de3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa014d05:;
	};
	;
	{
		
{
			_case_begin_1aa015894:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa015564:;
	};
}

inline jule::Str _1aa019de8_toStr(jule::Ptr<_1a819ec94_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa01b0b4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa01aec6:;
	};
	;
	{
		
{
			_case_begin_1aa01ba65:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa01b735:;
	};
}

inline jule::Str _1aa065806_toStr(jule::Ptr<_1a81a54b4_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa066939:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa06684b:;
	};
	;
	{
		
{
			_case_begin_1aa0673da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa0670aa:;
	};
}

inline jule::Str _1aa06b587_toStr(jule::Ptr<_1a828c832_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa06d29d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa06d1b0:;
	};
	;
	{
		
{
			_case_begin_1aa06dc4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa06d91e:;
	};
}

inline jule::Str _1aa0865a2_toStr(jule::Ptr<_1a81a774c_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1aa08775c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa08766e:;
	};
	;
	{
		
{
			_case_begin_1aa08820d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa087dcd:;
	};
}

inline jule::Str _1aa0900c2_toStr(jule::Ptr<_1a81a8d58_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1aa09127c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa09118e:;
	};
	;
	{
		
{
			_case_begin_1aa091c2d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa0918ed:;
	};
}

inline jule::Str _1aa0e6d71_toStr(jule::Ptr<_1a81a6c57_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa0e802b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa0e7e3d:;
	};
	;
	{
		
{
			_case_begin_1aa0e89cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa0e869c:;
	};
}

inline jule::Str _1aa109a87_toStr(jule::Ptr<_1a828b523_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa10ac75:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa10ab87:;
	};
	;
	{
		
{
			_case_begin_1aa10b726:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa10b3e6:;
	};
}

inline jule::Str _1aa12296d_toStr(jule::Ptr<_1a828baa6_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa123b5b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa123a6d:;
	};
	;
	{
		
{
			_case_begin_1aa12460c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa1242cc:;
	};
}

inline jule::Str _1aa13a337_toStr(jule::Ptr<_1a8290390_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa13b448:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa13b35a:;
	};
	;
	{
		
{
			_case_begin_1aa13bde9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa13bab9:;
	};
}

inline jule::Str _1aa13c9ee_toStr(jule::Ptr<_1a81a6141_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa14130a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa14121c:;
	};
	;
	{
		
{
			_case_begin_1aa141cab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa14197b:;
	};
}

inline jule::Str _1aa149742_toStr(jule::Ptr<_1a828b226_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa14a8ec:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa14a80e:;
	};
	;
	{
		
{
			_case_begin_1aa14b39d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa14b06d:;
	};
}

inline jule::Str _1aa16b599_toStr(jule::Ptr<_1a82941a7_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa16c787:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa16c699:;
	};
	;
	{
		
{
			_case_begin_1aa16d238:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa16ce08:;
	};
}

inline jule::Str _1aa18e468_toStr(jule::Ptr<_1a81c246a_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1aa190656:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa190568:;
	};
	;
	{
		
{
			_case_begin_1aa191107:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa190cc7:;
	};
}

inline jule::Str _1aa1cb43e_toStr(jule::Ptr<_1a8535877_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1aa1cc5c7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa1cc4d9:;
	};
	;
	{
		
{
			_case_begin_1aa1cd078:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa1ccc48:;
	};
}

inline jule::Str _1aa1ed95b_toStr(jule::Ptr<_1a8290769_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa1eeb49:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa1eea5b:;
	};
	;
	{
		
{
			_case_begin_1aa2005ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa2002ba:;
	};
}

inline jule::Str _1aa237a94_toStr(jule::Ptr<_1a819e5bd_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa238c82:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa238b94:;
	};
	;
	{
		
{
			_case_begin_1aa239733:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa239403:;
	};
}

inline jule::Str _1aa23c1a3_toStr(jule::Ptr<_1a81a50da_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa23d35d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa23d270:;
	};
	;
	{
		
{
			_case_begin_1aa23dd0e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa23d9ce:;
	};
}

inline jule::Str _1aa246355_toStr(jule::Ptr<_1a819dbe9_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa2468e9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa24680b:;
	};
	;
	{
		
{
			_case_begin_1aa24739a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa24706a:;
	};
}

inline jule::Str _1aa24ab2e_toStr(jule::Ptr<_1a81a5c67_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa24d868:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa24d77a:;
	};
	;
	{
		
{
			_case_begin_1aa24e319:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa24ded9:;
	};
}

inline jule::Str _1aa252916_toStr(jule::Ptr<_1a819e997_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1aa253b04:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa253a16:;
	};
	;
	{
		
{
			_case_begin_1aa2545a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa254275:;
	};
}

inline jule::Str _1aa29323c_toStr(jule::Ptr<_1a828e0c5_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa2943c5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa2942d7:;
	};
	;
	{
		
{
			_case_begin_1aa294d76:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa294a46:;
	};
}

inline jule::Str _1aa312355_toStr(jule::Ptr<_1a81a9584_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa313510:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa313422:;
	};
	;
	{
		
{
			_case_begin_1aa313eb1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa313b81:;
	};
}

inline jule::Str _1aa37d9dc_toStr(jule::Ptr<_1a828e658_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa37ebca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa37eadc:;
	};
	;
	{
		
{
			_case_begin_1aa38067b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa38034b:;
	};
}

inline jule::Str _1aa42e1ca_toStr(jule::Ptr<_1a828da42_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa430d58:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa430c6a:;
	};
	;
	{
		
{
			_case_begin_1aa431809:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa4314c9:;
	};
}

inline jule::Str _1aa43e707_toStr(jule::Ptr<_1a828d28e_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa4408e5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa440807:;
	};
	;
	{
		
{
			_case_begin_1aa441396:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa441066:;
	};
}

inline jule::Str _1aa4467b9_toStr(jule::Ptr<_1a81a32e7_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa447974:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa447886:;
	};
	;
	{
		
{
			_case_begin_1aa448425:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa4480e5:;
	};
}

inline jule::Str _1aa449921_toStr(jule::Ptr<_1a81a3eb8_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa44b36d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa44b280:;
	};
	;
	{
		
{
			_case_begin_1aa44bd1e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa44b9de:;
	};
}

inline jule::Str _1a5164850_toStr(jule::Ptr<_1a81a4392_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a516691d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a5166830:;
	};
	;
	{
		
{
			_case_begin_1a51673be:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a516708e:;
	};
}

inline jule::Str _1a5164366_toStr(jule::Ptr<_1a81a9ee1_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a516a108:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a516a01a:;
	};
	;
	{
		
{
			_case_begin_1a516aaa9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a516a779:;
	};
}

inline jule::Str _1a516827c_toStr(jule::Ptr<_1a81aa651_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a516d2c6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a516d1d8:;
	};
	;
	{
		
{
			_case_begin_1a516dc77:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a516d947:;
	};
}

inline jule::Str _1a516b4b1_toStr(jule::Ptr<_1a81a588d_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1a5171494:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a51713a6:;
	};
	;
	{
		
{
			_case_begin_1a5171e45:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a5171b15:;
	};
}

inline jule::Str _1a51726b5_toStr(jule::Ptr<_1a81a8077_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1a5174de3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a5174d05:;
	};
	;
	{
		
{
			_case_begin_1a5175894:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a5175564:;
	};
}

inline jule::Str _1aa537613_toStr(jule::Ptr<_1a81a852d_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1aa5393a1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa5392b3:;
	};
	;
	{
		
{
			_case_begin_1aa539d52:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa539a22:;
	};
}

inline jule::Str _1aa53a5c2_toStr(jule::Ptr<_1a81a65e7_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa53cd00:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa53cc12:;
	};
	;
	{
		
{
			_case_begin_1aa53d7a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa53d471:;
	};
}

inline jule::Str _1aa6895ab_toStr(jule::Ptr<_1a828a478_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa68a799:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa68a6ab:;
	};
	;
	{
		
{
			_case_begin_1aa6910a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa690c77:;
	};
}

inline jule::Str _1a9d219ad_toStr(jule::Ptr<_1a8291539_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9d22b9b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9d22aad:;
	};
	;
	{
		
{
			_case_begin_1a9d2364c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9d2331c:;
	};
}

inline jule::Str _1a9d3763e_toStr(jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1a9d3882c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1a9d3873e:;
	};
	;
	{
		
{
			_case_begin_1a9d392cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1a9d38e9d:;
	};
}

inline jule::Str _1aa82203a_toStr(jule::Ptr<_1a8292590_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa823228:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa82313a:;
	};
	;
	{
		
{
			_case_begin_1aa823bc9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa823899:;
	};
}

inline jule::Str _1aa83bd13_toStr(jule::Ptr<_1a829288c_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa83d001:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa83ce13:;
	};
	;
	{
		
{
			_case_begin_1aa83d9a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa83d672:;
	};
}

inline jule::Str _1aa883a08_toStr(jule::Ptr<_1a8293816_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa884b2a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa884a3c:;
	};
	;
	{
		
{
			_case_begin_1aa8855cb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa88529b:;
	};
}

inline jule::Str _1aa88ca12_toStr(jule::Ptr<_1a8293eba_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa88db34:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa88da46:;
	};
	;
	{
		
{
			_case_begin_1aa88e5d5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa88e2a5:;
	};
}

inline jule::Str _1ab09a0ed_toStr(jule::Ptr<_1a43e10a5_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab09b2db:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab09b1ed:;
	};
	;
	{
		
{
			_case_begin_1ab09bc8c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab09b95c:;
	};
}

inline jule::Str _1ab0d3554_toStr(jule::Ptr<_1a43e3b9b_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1ab0d4742:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab0d4654:;
	};
	;
	{
		
{
			_case_begin_1ab0d51e3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab0d4db3:;
	};
}

inline jule::Str _1ab0dda7b_toStr(jule::Ptr<_1a43e288c_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab0dec69:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab0deb7b:;
	};
	;
	{
		
{
			_case_begin_1ab0e071a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab0e03da:;
	};
}

inline jule::Str _1ab124012_toStr(jule::Ptr<_1a43e37c2_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab125200:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab125112:;
	};
	;
	{
		
{
			_case_begin_1ab125ba1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab125871:;
	};
}

inline jule::Str _1ab12683e_toStr(jule::Ptr<_1a43e33e8_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab128d08:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab128c1a:;
	};
	;
	{
		
{
			_case_begin_1ab1297a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab129479:;
	};
}

inline jule::Str _1ab13441d_toStr(jule::Ptr<_1a43e1638_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab13560b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab13551d:;
	};
	;
	{
		
{
			_case_begin_1ab1360ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab135c7c:;
	};
}

inline jule::Str _1ab17a19a_toStr(jule::Ptr<_1a43e1a56_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab17b388:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab17b29a:;
	};
	;
	{
		
{
			_case_begin_1ab17bd39:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab17ba09:;
	};
}

inline jule::Str _1ab17ce28_toStr(jule::Ptr<_1a43e2309_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1803e2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab180304:;
	};
	;
	{
		
{
			_case_begin_1ab180d93:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab180a63:;
	};
}

inline jule::Str _1ab1a8063_toStr(jule::Ptr<_1a43e2c22_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1a9240:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1a9152:;
	};
	;
	{
		
{
			_case_begin_1ab1a9be1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1a98b1:;
	};
}

inline jule::Str _1ab1cb4e8_toStr(jule::Ptr<_1a43e3e98_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1cc6d6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1cc5e8:;
	};
	;
	{
		
{
			_case_begin_1ab1cd187:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1ccd57:;
	};
}

inline jule::Str _1ab1d2d5c_toStr(jule::Ptr<_1a43e1d53_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1d404a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1d3e5c:;
	};
	;
	{
		
{
			_case_begin_1ab1d49eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1d46bb:;
	};
}

inline jule::Str _1ab1d748d_toStr(jule::Ptr<_1a828ad80_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1d867b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1d858d:;
	};
	;
	{
		
{
			_case_begin_1ab1d912c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1d8cec:;
	};
}

inline jule::Str _1ab1ddbc0_toStr(jule::Ptr<_1a43e4295_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1dedad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1decc0:;
	};
	;
	{
		
{
			_case_begin_1ab1e085e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1e052e:;
	};
}

inline jule::Str _1ab1eb837_toStr(jule::Ptr<_1a43e1292_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab1eca25:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab1ec937:;
	};
	;
	{
		
{
			_case_begin_1ab1ed4c6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab1ed196:;
	};
}

inline jule::Str _1ab20dae1_toStr(jule::Ptr<_1a43e301e_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ab20ecce:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab20ebe1:;
	};
	;
	{
		
{
			_case_begin_1ab210780:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab210450:;
	};
}

inline jule::Str _1ab816726_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1ab81786a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab81777c:;
	};
	;
	{
		
{
			_case_begin_1ab81831b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ab817edb:;
	};
}

inline jule::Str _1abaa021d_toStr(_21ca86171_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1abaa362d:;
			{
				return _1abaa51e0_structToStr(_21613_x);;
			}
		}
		_match_end_1abaa31aa:;
	};
}

inline jule::Str _1abaabb0e_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1abaacea6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1abaacc97:;
	};
	;
	{
		
{
			_case_begin_1abaad814:;
			{
				return _1abab03d7_arrToStr(_21613_x);;
			}
		}
		_match_end_1abaad638:;
	};
}

inline jule::Str _1abaae43b_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1abaa4464:;
			{
				return _1a57c7d81_toStr(_21613_x);;
			}
		}
		_match_end_1abab2d57:;
	};
}

inline jule::Str _1abab3bd2_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1abab5123:;
			{
				return _1a57c7d81_toStr(_21613_x);;
			}
		}
		_match_end_1abab4b17:;
	};
}



inline void _21c865ed9_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I64 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a5776c42:;
	}
	_iter_end_1a5776c42:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1a5778716:;
	}
	_iter_end_1a5778716:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _21c755c0e_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a577c51c:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_21c85106d_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1a577c51c:;
			++it;
			goto _iter_begin_1a577c51c;
		}
		_iter_end_1a577c51c:;
	};
	return _21c755c0e_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _21c851975_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1a577d71b:;
	}
	_iter_end_1a577d71b:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _21c755c0e_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_21c85106d_AppendRune(_846_buf, _8316_r);
	return _21c755c0e_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1a5539a7c_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I64 __jule_runeCount(jule::Str _10514_s) {
	return _21c851975_RuneCountStr(_10514_s);;
}



inline void _21c868cab_handleRW(jule::Slice<jule::U8>* _814_b) {
	_21c852943__handleRW(_814_b);
}



inline jule::Bool _21c869c57__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_21c719101_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _21c8bb8ad_hash128to64(_21c8bb506_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _21c8bbbbb_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__21c8b7dc6_DecodeU64(_5312_bytes);;
}



inline jule::U32 _21c8bbe85_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__21c8b749c_DecodeU32(_5412_bytes);;
}



inline jule::U64 _21c8bc2c6_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _21c8bc617_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _21c8bb8ad_hash128to64(_21c8bb506_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _21c8bc98b_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _21c8bcdba_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _21c8bd34e_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_21c8bbbbb_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _21c8bbbbb_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_21c8bc98b_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_21c8bc98b_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _21c8bcdba_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_21c8bbe85_fetch32(_7517_bytes));;
		return _21c8bcdba_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_21c8bbe85_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_21c8bc2c6_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _21c8bb506_u128 _21c8bd706_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _21c8bb506_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_21c8bc2c6_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _21c8bd34e_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_21c8bc2c6_shiftMix((jule::U64)(_1046_a + _21c8bbbbb_fetch64(_10319_bytes)));
		} else {
			_1076_d=_21c8bc2c6_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_21c8bc617_hashLen16((jule::U64)(_21c8bbbbb_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_21c8bc617_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _21c8bbbbb_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_21c8bc2c6_shiftMix((jule::U64)(_21c8bbbbb_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_21c8bc2c6_shiftMix((jule::U64)(_21c8bbbbb_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1a579836d;
				};
			}
		_iter_next_1a579836d:;
		}
		_iter_end_1a579836d:;;
	};
	_1046_a=_21c8bc617_hashLen16(_1046_a, _1066_c);
	_1056_b=_21c8bc617_hashLen16(_1076_d, _1056_b);
	return _21c8bb506_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_21c8bc617_hashLen16(_1056_b, _1046_a)};;
}



inline _21c8bb506_u128 _21c8bdd55_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_21c8bc98b_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_21c8bc98b_rotate64(_14563_a, 44LLU);
	return _21c8bb506_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _21c8bb506_u128 _21c8be284_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _21c8bdd55_weakHashLen32WithSeeds(_21c8bbbbb_fetch64(_15529_bytes), _21c8bbbbb_fetch64(_15529_bytes.slice(8LL)), _21c8bbbbb_fetch64(_15529_bytes.slice(16LL)), _21c8bbbbb_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _21c8bb506_u128 _21c8be6b3_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _21c8bb506_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _21c8bd706_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_21c8bb506_u128 _16910_v = _21c8bb506_u128{._field_hi=0, ._field_lo=0};;
	_21c8bb506_u128 _17010_w = _21c8bb506_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_21c8bc98b_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _21c8bbbbb_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_21c8bc98b_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _21c8bbbbb_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_21c8bc98b_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_21c8bc98b_rotate64((jule::U64)(_1716_x + _21c8bbbbb_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_21c8bc98b_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _21c8bbbbb_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_21c8bc98b_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _21c8bbbbb_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _21c8bbbbb_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_21c8bc98b_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_21c8be284_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_21c8be284_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _21c8bbbbb_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_21c8bc98b_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _21c8bbbbb_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_21c8bc98b_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _21c8bbbbb_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _21c8bbbbb_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_21c8bc98b_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_21c8be284_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_21c8be284_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _21c8bbbbb_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1a57a1a2a;
			};
		}
	_iter_next_1a57a1a2a:;
	}
	_iter_end_1a57a1a2a:;;
	_1716_x+=(jule::U64)(_21c8bc98b_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _21c8bc98b_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _21c8bc98b_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_21c8bc98b_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_21c8bbbbb_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _21c8bbbbb_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_21c8be284_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1a57ac717:;
	}
	_iter_end_1a57ac717:;;
	_1716_x=_21c8bc617_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_21c8bc617_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _21c8bb506_u128{._field_hi=(jule::U64)(_21c8bc617_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_21c8bc617_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _21c8be97c_hash(jule::Slice<jule::U8> _23413_bytes) {
	_21c8bb506_u128 _2356_sum = _21c8bb506_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_21c8be6b3_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _21c8bb506_u128{._field_hi=_21c8bbbbb_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_21c8bbbbb_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_21c8be6b3_hashWithSeed(_23413_bytes, _23413_bytes.len(), _21c8bb506_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _21c8bb8ad_hash128to64(_2356_sum);;
}



inline jule::U64 _21c9b0ee1_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _21c9b1909_hasZeroByte((_21c9b1b90_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _21c9b12ee_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _21c9b1909_hasZeroByte((_21c9b1b90_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _21c9b15b8_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_21c9a3533_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _21c9b1909_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _21c9b1b90_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _21c9b1e59_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _21c9b2168_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a57b71b1:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1a57b71b1:;
			++it;
			_886_i++;
			goto _iter_begin_1a57b71b1;
		}
		_iter_end_1a57b71b1:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _21c9b2542_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _21c9b283e_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _21c9b2bb3_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _21c9b2bb3_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _21cc7993b_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1a5811606:;
	}
	_iter_end_1a5811606:;;
	return -1LL;;
}



inline jule::I64 _21cc7a0e0_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a58119be:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1a58119be:;
			++it;
			_706_i++;
			goto _iter_begin_1a58119be;
		}
		_iter_end_1a58119be:;
	};
	return -1LL;;
}



inline jule::I64 _21cc7a464_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _21cc7993b_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _21cc92cc8_Getwd(void) {
	jule::Array<jule::U16,261> _910_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _102_n = _21c719e37_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_910_buf[0LL])));;
	if ((_102_n == 0LLU)) {
		return jule::Str();;
	};
	return _21c6e17e3_U16PtrToStr((&(_910_buf[0LL])));;
}



inline jule::Bool _2052eb2b1_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20535dd90__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2053678b0_isExcludingLatin(_205305287_Letter, _7613_r);;
}



inline jule::Bool _205366c33_is16(jule::Slice<_205364e95_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a642405e:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_205364e95_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1a642405e:;
				++it;
				_1937_i++;
				goto _iter_begin_1a642405e;
			}
			_iter_end_1a642405e:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_205364e95_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1a6422ce9:;
	}
	_iter_end_1a6422ce9:;;
	return false;;
}



inline jule::Bool _2053670a7_is32(jule::Slice<_2053654c3_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a642a681:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_2053654c3_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1a642a681:;
				++it;
				_2307_i++;
				goto _iter_begin_1a642a681;
			}
			_iter_end_1a642a681:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_2053654c3_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1a64270b7:;
	}
	_iter_end_1a64270b7:;;
	return false;;
}



inline jule::Bool _2053678b0_isExcludingLatin(jule::Ptr<_205365946_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_205364e95_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _205366c33_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_2053654c3_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _2053670a7_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _205367b02_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20535dd90__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2053678b0_isExcludingLatin(_20530b557_Upper, _29512_r);;
}



inline jule::I32 _2053682ea_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_2053649de_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_2053649de_CaseRange> _20536866e_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_2053649de_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_2053649de_CaseRange> _3397_cr = ((jule::Ptr<_2053649de_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1a643bb48:;
	}
	_iter_end_1a643bb48:;;
	return nullptr;;
}



inline jule::I32 _205368938_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_205360b72_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _205360e5d_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_205360e5d_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1a644106a:;
	}
	_iter_end_1a644106a:;;
	if (((_3806_lo < _205360e5d_caseOrbit.len()) && (static_cast<jule::I32>(_205360e5d_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_205360e5d_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_2053649de_CaseRange> _3972_cr = _20536866e_lookupCaseRange(_37015_r, _20535d7b8_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _2053682ea_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _2053682ea_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _205368dab_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_21ca86171_Builder _186_ss = static__21ca869bd_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _21ca87150_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1a6455139:;
	}
	_iter_end_1a6455139:;;
	return _21ca879d0_Str(&_186_ss);;
}



inline jule::Bool _205369274_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _2053695e8_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _205369a9e_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_205369274_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1a6458cec:;
	}
	_iter_end_1a6458cec:;;
	return -1LL;;
}



inline jule::I64 _205369de0_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _205369a9e_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _20536a31e_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a645b052:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1a645a86a;
					};
				}
			_iter_next_1a645c7c3:;
			}
			_iter_end_1a645c7c3:;;
			return _636_j;;
		}
	_iter_next_1a645a86a:;
	}
	_iter_end_1a645a86a:;;
	return -1LL;;
}



inline jule::I64 _20536a693_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _20536a31e_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _20536be7a_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _21cc7a464_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _20536c2ee_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1a646492e:;
	}
	_iter_end_1a646492e:;;
	return -1LL;;
}



inline jule::I64 _20536cc28_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20536c2ee_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1a6467c40:;
	}
	_iter_end_1a6467c40:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _20536d3bb_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _205369a9e_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1a6472cb1;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1a6472cb1:;
	}
	_iter_end_1a6472cb1:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _20536d740_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _20536d3bb_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _20536dab4_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_205369a9e_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _20536e631_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_20536cc28_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I64 _20536e9a5_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2746_n = 0LL;;
	jule::I64 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2773_j = _205369a9e_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1a6477e70;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1a6477e70:;
	}
	_iter_end_1a6477e70:;;
	return _2746_n;;
}



inline jule::Str _20536ee8e_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I64 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I64 _2952_m = _20536e9a5_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_21ca86171_Builder _3036_ss = static__21ca869bd_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I64 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I64 _3063_j = _205369a9e_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1a647ba56;
			};
			({
				auto except = _21ca87150_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _21ca87150_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1a647ba56:;
	}
	_iter_end_1a647ba56:;;
	({
		auto except = _21ca87150_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _21ca879d0_Str(&_3036_ss);;
}



inline jule::Str _2053703bd_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _20536ee8e_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _205371149_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I64 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I64 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20536c2ee_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1a64822dc:;
	}
	_iter_end_1a64822dc:;;
	return jule::Str();;
}



inline jule::Str _2053714bd_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I64 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I64 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c850523_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20536c2ee_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1a6483e04:;
	}
	_iter_end_1a6483e04:;;
	return jule::Str();;
}



inline jule::Str _205371ac8_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _205371149_TrimLeft(_2053714bd_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Bool _2053735d0_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1a6488e2b;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1a648adc8;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1a648adc8;
			};
			return false;;
		}
	_iter_next_1a648adc8:;
	}
	_iter_end_1a648adc8:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1a6488e2b:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1a648e151:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1a648e151;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1a648e151;
					};
					return false;;
				};
				jule::I32 _1237_r = _205368938_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_205368938_SimpleFold(_1237_r);
					}
				_iter_next_1a648e8d2:;
				}
				_iter_end_1a648e8d2:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1a648e151;
				};
				return false;;
			}
			_iter_next_1a648e151:;
			it += len;
			goto _iter_begin_1a648e151;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _21cd348e7_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _21cd34c05_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _21cd34ebe_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _21cd35596_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_21cd34c05_isSlash(_8318_path[0LL]))) || (!(_21cd34c05_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd35860_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd35860_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_21cd34ebe_toUpper(_976_p2[0LL]) == 'U')) && (_21cd34ebe_toUpper(_976_p2[1LL]) == 'N')) && (_21cd34ebe_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd35860_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd35860_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21cd35860_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64a693d:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_21cd34c05_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a64a693d:;
			++it;
			_1216_i++;
			goto _iter_begin_1a64a693d;
		}
		_iter_end_1a64a693d:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21cd35b29_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _21c6e121b_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_21c71b037_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _21c6e1529_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1a64a8a0b:;
	}
	_iter_end_1a64a8a0b:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21cd36003_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd35b29_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _205374b64_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21cd36245_join(jule::Slice<jule::Str> _1609_elem) {
	_21ca86171_Builder _1616_s = static__21ca869bd_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a64acd40:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_21ca87e64_Len(&_1616_s) == 0LL)) {
						_case_begin_1a64adba9:;
					}
					else if (_21cd34c05_isSlash(_1626_lastChar)) {
						_case_begin_1a64ad879:;
						{
							while (((_16314_e.len() > 0LL) && _21cd34c05_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1a64ae67c:;
							}
							_iter_end_1a64ae67c:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1a64ad8e0:;
					}
					else {
						_case_begin_1a64ad813:;
						{
							({
								auto except = _21ca87408_WriteByte(&_1616_s, '\\');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:187:4"));
							});
							_1626_lastChar='\\';
						}
					}
					_match_end_1a64ad703:;
				};
				if ((_16314_e.len() > 0LL)) {
					({
						auto except = _21ca87150_WriteStr(&_1616_s, _16314_e);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:191:4"));
						(except.result);
					});
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1a64acd40:;
			++it;
			goto _iter_begin_1a64acd40;
		}
		_iter_end_1a64acd40:;
	};
	if ((_21ca87e64_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _205374b64_Clean(_21ca879d0_Str(&_1616_s));;
}



inline jule::Str _205374b64_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _21cd35596_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _21cd348e7_IsPathSep(_1102_originalPath[0LL])) && _21cd348e7_IsPathSep(_1102_originalPath[1LL]))) {
			return _20537523b_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _21cd348e7_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_205373cc8_lazyBuff _1286_out = _205373cc8_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_205374548_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_21cd348e7_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1a64b7d06:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _21cd348e7_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1a64b5a90:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _21cd348e7_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1a64b5b06:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1a64bbdb5:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_21cd348e7_IsPathSep(_205374290_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1a64bc767:;
									}
									_iter_end_1a64bc767:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1a64bbe5e:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_205374548_append(&_1286_out, 92LLU);
									};
									_205374548_append(&_1286_out, '.');
									_205374548_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1a64bba52:;
						};
					}
				}
				else {
					_case_begin_1a64b5a29:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_205374548_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_21cd348e7_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_205374548_append(&_1286_out, '.');
										_205374548_append(&_1286_out, 92LLU);
										goto _iter_end_1a64b7531;
									};
								}
							_iter_next_1a64b7531:;
							}
							_iter_end_1a64b7531:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_21cd348e7_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_205374548_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1a64b8a0a:;
						}
						_iter_end_1a64b8a0a:;;
					}
				}
				_match_end_1a64b596e:;
			};
		}
	_iter_next_1a64b5919:;
	}
	_iter_end_1a64b5919:;;
	if ((_1286_out._field_w == 0LL)) {
		_205374548_append(&_1286_out, '.');
	};
	return _20537523b_FromSlash(_2053747ce_string(&_1286_out));;
}



inline jule::Str _20537523b_FromSlash(jule::Str _21214_path) {
	;
	return _2053703bd_ReplaceAll(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1));;
}



inline jule::Str _20537557c_Join(jule::Slice<jule::Str> _2269_elem) {
	return _21cd36245_join(_2269_elem);;
}



inline jule::Str _205375813_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_21cd348e7_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1a64c1051:;
	}
	_iter_end_1a64c1051:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _205375acc_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_21cd36003_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _205375d96_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _21cd348e7_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1a64c23e8:;
	}
	_iter_end_1a64c23e8:;;
	(_25213_path).mut_slice(_2053764b2_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_21cd348e7_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1a64c2bac:;
	}
	_iter_end_1a64c2bac:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _205376270_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _2053764b2_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_21cd348e7_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1a64c5c9d:;
	}
	_iter_end_1a64c5c9d:;;
	jule::Str _2892_dir = _205374b64_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _2053764b2_VolumeName(jule::Str _30115_path) {
	return _20537523b_FromSlash(_30115_path.slice(0LL, _21cd35596_volumeNameLen(_30115_path)));;
}



inline void _21cc7e105_appendEscapeArg(_21ca86171_Builder* _10225_s, jule::Str _10246_arg) {
	if ((_10246_arg.len() == 0LL)) {
		({
			auto except = _21ca87150_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:104:3"));
			(except.result);
		});
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10246_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1a651358d:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1a651388a:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1a6513769:;
			};
		}
	_iter_next_1a65131e7:;
	}
	_iter_end_1a65131e7:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		({
			auto except = _21ca87150_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:122:3"));
			(except.result);
		});
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		({
			auto except = _21ca87408_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:127:3"));
		});
		({
			auto except = _21ca87150_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:128:3"));
			(except.result);
		});
		({
			auto except = _21ca87408_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:129:3"));
		});
		return;;
	};
	if (_1096_hasSpace) {
		({
			auto except = _21ca87408_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:134:3"));
		});
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10246_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1a6516c78:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1a6516d33:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								({
									auto except = _21ca87408_WriteByte(_10225_s, '\\');
									if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:145:5"));
								});
							}
						_iter_next_1a651755e:;
						}
						_iter_end_1a651755e:;;
						({
							auto except = _21ca87408_WriteByte(_10225_s, '\\');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:147:4"));
						});
					}
				}
				else {
					_case_begin_1a65167d3:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1a65168e3:;
			};
			({
				auto except = _21ca87408_WriteByte(_10225_s, _1393_c);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:151:3"));
			});
		}
	_iter_next_1a6515e97:;
	}
	_iter_end_1a6515e97:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				({
					auto except = _21ca87408_WriteByte(_10225_s, '\\');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:155:4"));
				});
			}
		_iter_next_1a65180dc:;
		}
		_iter_end_1a65180dc:;;
		({
			auto except = _21ca87408_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:157:3"));
		});
	};
}



inline jule::Str _21cc7e3be_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_21ca86171_Builder _1646_s = static__21ca869bd_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6518d35:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_21ca87e64_Len(&_1646_s) > 0LL)) {
					({
						auto except = _21ca87408_WriteByte(&_1646_s, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:167:4"));
					});
				};
				_21cc7e105_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1a6518d35:;
			++it;
			goto _iter_begin_1a6518d35;
		}
		_iter_end_1a6518d35:;
	};
	return _21ca879d0_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _21cc7e798_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_21c6e087a_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a651ad6a:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_21cc7a0e0_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type138)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1a651ad6a:;
			++it;
			goto _iter_begin_1a651ad6a;
		}
		_iter_end_1a651ad6a:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a651b431:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1a651cdd3:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_21c6e0e85_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1a651cdd3:;
						it += len;
						goto _iter_begin_1a651cdd3;
					}
				};
				_1916_b=_21c6e0e85_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1a651b431:;
			++it;
			goto _iter_begin_1a651b431;
		}
		_iter_end_1a651b431:;
	};
	_1916_b=_21c6e0e85_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _21cc7e9da_cmdErrorFromCode(jule::I64 _20221_code) {
	{
		auto &_match_expr{ _20221_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1a651e16a:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1a651d9a5:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a651aa4b:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a651b19a:;
	};
}



inline jule::I64 _21cc7ebe9_getLastCmdError(void) {
	return _21cc7e9da_cmdErrorFromCode(static_cast<jule::I64>(_21c719ab3_GetLastError()));;
}



inline jule::I64 _21cc801b1_getLastFsErrorWindows(void) {
	jule::U32 _102_err = _21c719ab3_GetLastError();;
	{
		auto &_match_expr{ _102_err };
		
		if (_match_expr == 2LL || _match_expr == 3LL || _match_expr == 123LL) {
			_case_begin_1a65207a9:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 5LL || _match_expr == 16LL || _match_expr == 33LL || _match_expr == 50LL) {
			_case_begin_1a6520149:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 19LL) {
			_case_begin_1a65201c1:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a6520248:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 145LL) {
			_case_begin_1a65202c0:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else if (_match_expr == 183LL) {
			_case_begin_1a652049b:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 206LL) {
			_case_begin_1a6520512:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 87LL) {
			_case_begin_1a6520578:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else {
			_case_begin_1a651ee90:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a651ea83:;
	};
}



inline jule::I64 _21cc80744_getLastOsError(void) {
	jule::U32 _92_err = _21c719ab3_GetLastError();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a6523416:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a652347c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a65234e3:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a652356a:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1a6522cea:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1a6520644:;
	};
}



inline jule::Bool _21cc87e55_isConsoleHandle(jule::Uintptr _9020_handle) {
	return (((_9020_handle == _21c71852e_STDIN) || (_9020_handle == _21c7187c6_STDOUT)) || (_9020_handle == _21c718ac3_STDERR));;
}



inline void _21cc9602e_Exit(jule::I64 _119_code) {
	_21c72dd4c_Exit(_119_code);
}



inline jule::Str _21cc96293_Executable(void) {
	return _21c859cbe_executable();;
}



inline jule::Slice<jule::Str> _21cc9645d_Args(void) {
	return _21c859818_args();;
}



inline jule::Exceptional<jule::Str> _21cc968c0_Getwd(void) {
	jule::Str _332_wd = _21cc92cc8_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_21cc80744_getLastOsError(), &__jule_any_type139)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I64 _20537c1bb_getLastFsError(void) {
	jule::I64 _412_err = _21c65d5d9_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a6553cc6:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a6553bc7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a6553600:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a6553666:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a65536cc:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a6553754:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a65537cb:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a6553853:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a6553e6e:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a6553ee6:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a655406d:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a65540e5:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a655416c:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a65541e4:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a655426b:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a65542e3:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a655436a:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a65543e2:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a6554469:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a65544e1:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a6554568:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a65545e0:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a6554667:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a65546de:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a6554766:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a65547dd:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a6554865:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a65548dc:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a6553479:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a6553589:;
	};
}



inline jule::Bool _21ca4a487_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21ca4a762_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_21c9bb7c1_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a657b194:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a657b194:;
			++it;
			goto _iter_begin_1a657b194;
		}
		_iter_end_1a657b194:;
	};
	return false;;
}



inline jule::Bool _21ca4aa2b_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_21c9bb8ae_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a657ca9c:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1a657ca9c:;
			++it;
			goto _iter_begin_1a657ca9c;
		}
		_iter_end_1a657ca9c:;
	};
	{
		auto expr = &(_21ca4a2cd_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a657d55e:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1a657d55e:;
			++it;
			goto _iter_begin_1a657d55e;
		}
		_iter_end_1a657d55e:;
	};
	return false;;
}



inline jule::Str _21ca95889_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _21ca96329_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _21ca95b97_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a657d042:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1a657e4e9:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a657e560:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1a657e483:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a657e41c:;
	};
}



inline jule::I64 _21ca95e61_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6580473:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1a6580473:;
			++it;
			_3426_i++;
			goto _iter_begin_1a6580473;
		}
		_iter_end_1a6580473:;
	};
	return -1LL;;
}



inline jule::Str _21ca96329_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_21ca86171_Builder _3516_s = static__21ca869bd_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6581cb0:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _21ca95e61_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1a6581cb0;
				};
				({
					auto except = _21ca87150_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:357:3"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&_3516_s, _21ca95b97_argToStr((*(_3529_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1a6581cb0:;
			++it;
			goto _iter_begin_1a6581cb0;
		}
		_iter_end_1a6581cb0:;
	};
	({
		auto except = _21ca87150_WriteStr(&_3516_s, _35017_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:361:2"));
		(except.result);
	});
	return _21ca879d0_Str(&_3516_s);;
}



inline jule::Bool _21ca9722b_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _21ca9864a_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _21ca98958_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _21ca98c22_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _21ca99063_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _21ca992e9_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _21ca995b3_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _21ca9987c_IsUnix(jule::Str _5511_os) {
	return (_21ca98958_IsDarwin(_5511_os) || _21ca98c22_IsLinux(_5511_os));;
}



inline jule::Bool _21ca99c56_Is32Bit(jule::Str _5812_arch) {
	return _21ca99063_IsI386(_5812_arch);;
}



inline jule::Bool _21ca99e98_Is64Bit(jule::Str _6112_arch) {
	return (_21ca992e9_IsAmd64(_6112_arch) || _21ca995b3_IsArm64(_6112_arch));;
}



inline void _20537e0ad_init(void) {
	jule::Str _256_path = _21cc96293_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_20537d60c_PathWd=({
			auto except = _21cc968c0_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_20537d376_PathExec=_205376270_Dir(_256_path);
		_20537d123_PathStdlib=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _20537d376_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_20537d909_PathApi=_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _20537d376_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1d9757172_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1d9757480_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1d9757749_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1d9757a8a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1d975a0ed_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a66095eb:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1d9761005_IsInf(_4714_f, 0LL) || _1d9760873_IsNaN(_4714_f)) {
			_case_begin_1a6609695:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a660950d:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d97612be_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1d9757749_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1d9757a8a_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1d9760565_NaN(void) {
	return _1d9757a8a_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1d9760873_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1d9760b3c_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1d9757a8a_F64FromBits(9218868437227405312LLU);;
	};
	return _1d9757a8a_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1d9761005_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1d97612be_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1d9763678_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1d9762c93_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1d9760873_IsNaN(_1118_x) || _1d9761005_IsInf(_1118_x, 1LL)) {
			_case_begin_1a66458bd:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a6645967:;
			{
				return _1d9760565_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a66459cd:;
			{
				return _1d9760b3c_Inf(-1LL);;
			}
		}
		_match_end_1a6645802:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d975a0ed_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1d9763678_Abs(jule::F64 _438_x) {
	return _1d9757a8a_F64FromBits((_1d9757749_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1d976a1eb_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1d9763678_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1a8a28a5c:;
		}
		_iter_end_1a8a28a5c:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1d976aa04_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1d975a0ed_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1d9762c93_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1d9794214_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _21c755c0e_StrFromBytes(_1d97947ec_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1d9797ba7_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1d97947ec_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d979309d_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a687c20e:;
			{
				_886_bits=static_cast<jule::U64>(_1d9757172_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1d979309d_floatInfo>)((&(_1d9793400_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a687c275:;
			{
				_886_bits=_1d9757749_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1d979309d_floatInfo>)((&(_1d97936ec_f64info))));
			}
		}
		else {
			_case_begin_1a687ab69:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1a687b928:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1a6880ee3:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1a6882731:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1a688281e:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1a68820b0:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1a6881ea0:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a68810d1:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1a688019b:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1a6880344:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1d9796d2c_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1d97974ae_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1d9793b81_decimalSlice _1376_digs = _1d9793b81_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1d97a284e_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a68854d1:;
				{
					_8758_prec=_1d9797ba7_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a68864e3:;
				{
					_8758_prec=_1d9797ba7_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a6886559:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1a6885701:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a68884e5:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a68885b1:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a6888050:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1a6888160:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1d97a1595_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1d97a1a3a_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1d9795006_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1d97956cc_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1d9795006_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1d979309d_floatInfo* _18824_flt) {
	_1d97a6633_decimal _1896_d = _1d97a6633_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1d97a6a1d_assign(&_1896_d, _1882_mant);
	_1d97a6cc6_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1d9793b81_decimalSlice _1926_digs = _1d9793b81_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1d9795aea_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1d9793b81_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a69eed54:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a6a00b57:;
				{
					_18733_prec=_1d9797ba7_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a6a00bbd:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1a6a009c0:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a69eea79:;
				{
					_1d97a75e0_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a69eeae0:;
				{
					_1d97a75e0_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a69eeb56:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1d97a75e0_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1a6a021a8:;
		};
		_1926_digs=_1d9793b81_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1d97956cc_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1d97956cc_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1d9793b81_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a6a05343:;
			{
				return _1d979618e_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a6a053a9:;
			{
				return _1d9796678_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a6a05420:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1d979618e_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1d9796678_fmtF(_22418_dst, _22447_neg, _2252_digs, _1d9797ba7_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a6a05288:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1d9795aea_roundShortest(_1d97a6633_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1d979309d_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1d97a6633_decimal _2926_upper = _1d97a6633_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1d97a6a1d_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_1d97a6cc6_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1d97a6633_decimal _3116_lower = _1d97a6633_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1d97a6a1d_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_1d97a6cc6_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a6a1154c;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1a6a162ee:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1a6a16398:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1a6a1640e:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1a6a16222:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1a6a18cb3:;
					{
						_1d97a75e0_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1a6a18d5c:;
					{
						_1d97a707e_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1a6a18dc3:;
					{
						_1d97a7337_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1a6a16475:;
			};
		}
	_iter_next_1a6a1154c:;
	}
	_iter_end_1a6a1154c:;;
}



inline jule::Slice<jule::U8> _1d979618e_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1d9793b81_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1d9797833_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a6a1cca6:;
		}
		_iter_end_1a6a1cca6:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1a6a20490:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1a6a20649:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a6a1ee0c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a6a1eca8:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1d9796678_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1d9793b81_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1d9797833_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a6a24263:;
		}
		_iter_end_1a6a24263:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1a6a25572:;
		}
		_iter_end_1a6a25572:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1d9796d2c_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1d979309d_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d97ab825_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d97ab825_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1d97974ae_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1d979309d_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1a6a2a368:;
	}
	_iter_end_1a6a2a368:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1a6a3078b:;
		}
		_iter_end_1a6a3078b:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1a6a32309:;
		}
		_iter_end_1a6a32309:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1d9798757_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1a6a2e68b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1a6a34cac:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a6a343e9:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a6a34262:;
	};
	return _51113_dst;;
}



inline jule::I64 _1d9797833_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1d9797ba7_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1d9798757_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__2037eb96c_ConvError _1d9798bca_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__2037eb96c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a6a3a543:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a6a3a477:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1d9798757_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a6a3bee5:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d9798757_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a6a3c0d3:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1d9798757_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a6a3bb93:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a6a3bb2c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a6a3ba50:;
					};
				};
			}
		}
		else {
			_case_begin_1a6a39894:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a6a39e27:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a6a4100a:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a6a40bdb:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a6a3b247:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1a6a40b75:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a6a40c52:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a6a3b70e:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a6a4214e:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6a430ea:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1a6a4444d:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1d9798757_lower(_1099_c)) && (_1d9798757_lower(_1099_c) <= 'z'))) {
						_case_begin_1a6a44382:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1d9798757_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1a6a43e75:;
						{
							goto _iter_next_1a6a430ea;
						}
					}
					else {
						_case_begin_1a6a43e0e:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a6a43d87:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1a6a430ea:;
			++it;
			goto _iter_begin_1a6a430ea;
		}
		_iter_end_1a6a430ea:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1d9799109_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d9798bca_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type141)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1d97995b0_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type141)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d9798bca_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type141)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type141)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type141)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1d979a24d_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1d9757a8a_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _21c9a193d_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_4122_man, _1d979b02e_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_4122_man, _1d979b02e_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1d9757a8a_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d979a638_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1d9757480_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _21c9a193d_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_11022_man, _1d979b02e_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_11022_man, _1d979b02e_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1d9757480_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1d979c360_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1a6a68131:;
	}
	_iter_end_1a6a68131:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1d979c66d_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a6a6ba19:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1a6a6ba91;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a6a6ba91:;
			{
				jule::I64 _887_caseN = _1d979c360_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1d9760b3c_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a6a6bb07:;
			{
				if ((_1d979c360_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1d9760565_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a6a6b970:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1d979c937_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a6a71d1b:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a6a72217:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a6a71ca5:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1d9798757_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1a6a771b7:;
					{
						goto _iter_next_1a6a7664a;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1a6a77261:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1a6a7a7b4;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1a6a7664a;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1a6a772c7:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1a6a7664a;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a6a7664a;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1d9798757_lower(_1383_c))) && (_1d9798757_lower(_1383_c) <= 'f'))) {
					_case_begin_1a6a7733d:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1d9798757_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a6a7664a;
					}
				}
				_match_end_1a6a770c9:;
			};
			goto _iter_end_1a6a7664a;
		}
	_iter_next_1a6a7664a:;
	}
	_iter_end_1a6a7664a:;;
	_julec_label_1a6a7a7b4:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1d9798757_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a6a7e532;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1a6a7e532:;
		}
		_iter_end_1a6a7e532:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1d979e483_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1d97936ec_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a6a8755c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a6a875c3:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1d979d84a_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1d979d84a_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a6a87639:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1d979d84a_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a6a8746e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1d979e8b2_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1d9793400_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a6a8b7c5:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a6a8b83b:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1d979db7a_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1d979db7a_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a6a8b8a2:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1d979db7a_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a6a8b6d7:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__2037eb96c_ConvError _1d979ee56_atofHex(_1d979309d_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__2037eb96c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1a6a9017a:;
	}
	_iter_end_1a6a9017a:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a6a92457:;
	}
	_iter_end_1a6a92457:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a6a92831:;
	}
	_iter_end_1a6a92831:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1d979309d_floatInfo_eq(&(*(_55613_flt)), _1d9793400_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1d9757480_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1d9757a8a_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a0330_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__2037eb96c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d979c66d_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d979c937_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d979ee56_atofHex(&(_1d9793400_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d979e8b2_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d979a638_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1d979a638_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d97a6633_decimal _6676_d = _1d97a6633_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1d979d0ec_set(&_6676_d, _21c7556ae_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d979d43d_floatBits(&_6676_d, &(_1d9793400_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1d9757480_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a0572_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d979c66d_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d979c937_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d979ee56_atofHex(&(_1d97936ec_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d979e483_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d979a24d_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1d979a24d_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1d97a6633_decimal _7246_d = _1d97a6633_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1d979d0ec_set(&_7246_d, _21c7556ae_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d979d43d_floatBits(&_7246_d, &(_1d97936ec_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1d9757a8a_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError _1d97a08e6_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d97a0330_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1d97a0572_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1d97a0c6a_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__2037eb96c_ConvError __jule_assign_result = _1d97a08e6_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type141)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type141)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1d97a1595_ryuFtoaFixed32(_1d9793b81_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _21c9a900b_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1d97a2ad5_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a44cc_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1d97a4c80_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1d97a2376_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1d97a1a3a_ryuFtoaFixed64(_1d9793b81_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _21c9a92c5_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1d97a2ad5_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a490b_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1d97a4c80_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1d97a2376_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1d97a2376_formatDecimal(_1d9793b81_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1d97a1d7b_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a6ac79ed:;
	}
	_iter_end_1a6ac79ed:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1a6acabaa:;
	}
	_iter_end_1a6acabaa:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1a6ad1672:;
	}
	_iter_end_1a6ad1672:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1d97a284e_ryuFtoaShortest(_1d9793b81_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1d979309d_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_21c9a3533_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1d97a392c_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1d97a32cd_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1d97a392c_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1d97a2ad5_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1d979309d_floatInfo_eq(&(*(_26168_flt)), _1d9793400_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a44cc_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a44cc_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a44cc_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a490b_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a490b_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d97a490b_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1d97a4c80_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1d97a4c80_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1d97a4c80_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1d97a392c_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1d97a2ad5_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1d97a2d9e_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1d97a32cd_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1d979309d_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1d97a392c_ryuDigits(_1d9793b81_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d97a5049_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d97a5049_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1d97a5049_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1d97a409d_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1d97a409d_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1a6aee4b4:;
		}
		_iter_end_1a6aee4b4:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1d97a409d_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a6b000ec:;
	}
	_iter_end_1a6b000ec:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1a6b01d9b:;
	}
	_iter_end_1a6b01d9b:;;
}



inline void _1d97a409d_ryuDigits32(_1d9793b81_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1a6b0473e;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a6b0473e:;
	}
	_iter_end_1a6b0473e:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1a6b0a800:;
	}
	_iter_end_1a6b0a800:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1d97a44cc_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1d979b02e_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1d97a2d9e_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1d97a490b_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1d979b02e_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1d97a2d9e_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9ab86b_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21c9aa062_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d97a4c80_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1a6b18874:;
	}
	_iter_end_1a6b18874:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1d97a5049_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1d97a7e81_trim(_1d97a6633_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a6b1c15d:;
	}
	_iter_end_1a6b1c15d:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1d97a826c_rightShift(_1d97a6633_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1a6b1eeda:;
				}
				_iter_end_1a6b1eeda:;;
				goto _iter_end_1a6b1d901;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1a6b1d901:;
	}
	_iter_end_1a6b1d901:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1a6b213d7:;
	}
	_iter_end_1a6b213d7:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1a6b23780:;
	}
	_iter_end_1a6b23780:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1d97a7e81_trim(_28420_a);
}



inline jule::Bool _1d97a8723_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1a6b264b9:;
	}
	_iter_end_1a6b264b9:;;
	return false;;
}



inline void _1d97a89cb_leftShift(_1d97a6633_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1d97a604a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1d97a8723_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1d97a604a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1a6b299d9:;
	}
	_iter_end_1a6b299d9:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1a6b2be1a:;
	}
	_iter_end_1a6b2be1a:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1d97a7e81_trim(_35219_a);
}



inline jule::Bool _1d97a8d50_shouldRoundUp(_1d97a6633_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1d97aa527_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1d97aaeea_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d97ab825_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1d97aa8e0_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1d97aaeea_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1d97ab825_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1d97aaba9_Itoa(jule::I64 _819_i) {
	return _1d97aa8e0_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1d97aaeea_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _21c755c0e_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1d97ab281_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1d97ab825_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1a6b67d68:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = (jule::U64)(({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1a6b69d48:;
				}
				_iter_end_1a6b69d48:;;
				jule::U64 _1643_is = (jule::U64)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1d97ab281_isPowerOfTwo(_10541_base)) {
			_case_begin_1a6b68286:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_21c9a2884_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1a6b72900:;
				}
				_iter_end_1a6b72900:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1a6b672eb:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1a6b68066:;
				}
				_iter_end_1a6b68066:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1a6b675d7:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_21c755c0e_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1d97ad65c_Throw(jule::Str _910_msg) {
	jule::println(_1a57c7d81_toStr(_910_msg));
	_21cc9602e_Exit(1LL);
}



inline jule::Bool _1a818891a_IsUnaryOp(jule::U64 _33314_id) {
	{
		auto expr = &(_1a80da295_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bd15c9:;
		if (it != expr_end) {
			jule::U64 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1a6bd15c9:;
			++it;
			goto _iter_begin_1a6bd15c9;
		}
		_iter_end_1a6bd15c9:;
	};
	return false;;
}



inline jule::Bool _1a8188c28_IsBinOp(jule::U64 _34312_id) {
	{
		auto expr = &(_1a80da5c5_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bd2388:;
		if (it != expr_end) {
			jule::U64 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1a6bd2388:;
			++it;
			goto _iter_begin_1a6bd2388;
		}
		_iter_end_1a6bd2388:;
	};
	return false;;
}



inline jule::Bool _1a8189333_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1a81895b9_IsRawStr(_36310_k)));;
}



inline jule::Bool _1a81895b9_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1a8189883_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1a818a268_IsFloat(jule::Str _37912_k) {
	if (_205369274_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _20536e631_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _20536e631_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a818a532_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1a818aab5_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1a818ad7e_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1a818b412_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1a80d9ea9_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bd9978:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1a6bd9978:;
			++it;
			goto _iter_begin_1a6bd9978;
		}
		_iter_end_1a6bd9978:;
	};
	return false;;
}



inline jule::Bool _1a818b90c_IsLetter(jule::I32 _42813_r) {
	return _2052eb2b1_IsLetter(_42813_r);;
}



inline jule::Bool _1a818bd80_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1a819148e_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bda79d:;
		if (it != expr_end) {
			_1a81910a4_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1a6bda79d:;
			++it;
			goto _iter_begin_1a6bda79d;
		}
		_iter_end_1a6bda79d:;
	};
	return false;;
}



inline jule::Bool _1a818c149_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1a818c413_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1a818c6cc_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1a818c996_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1a6bdd95a:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1a6bdda04:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1a6bdda7b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6bdc44d:;
			{
				return false;;
			}
		}
		_match_end_1a6bdd284:;
	};
}



inline jule::Bool _1a818cc60_IsAssign(jule::U64 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U64>(1LLU)) || (_48213_id == static_cast<jule::U64>(27LLU))) || (_48213_id == static_cast<jule::U64>(30LLU))) || (_48213_id == static_cast<jule::U64>(32LLU))) || (_48213_id == static_cast<jule::U64>(24LLU))) || (_48213_id == static_cast<jule::U64>(74LLU))) || (_48213_id == static_cast<jule::U64>(62LLU))) || (_48213_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1a818d029_IsPostfixOp(jule::U64 _49416_id) {
	{
		auto expr = &(_1a81826b1_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6be1cb0:;
		if (it != expr_end) {
			jule::U64 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1a6be1cb0:;
			++it;
			goto _iter_begin_1a6be1cb0;
		}
		_iter_end_1a6be1cb0:;
	};
	return false;;
}



inline jule::Bool _1a818d2e3_IsAssignOp(jule::U64 _50415_id) {
	if (_1a818d029_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1a818299c_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6be2cb1:;
		if (it != expr_end) {
			jule::U64 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1a6be2cb1:;
			++it;
			goto _iter_begin_1a6be2cb1;
		}
		_iter_end_1a6be2cb1:;
	};
	return false;;
}



inline _21ca95427_Log _1a8191d0d_makeErr(jule::I64 _10112_row, jule::I64 _10122_col, jule::Ptr<_1a818dc83_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_21ca95889_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1a81921c6_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6bed3e8:;
		if (it != expr_end) {
			jule::I64 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1a6bed3e8:;
			++it;
			_1156_i++;
			goto _iter_begin_1a6bed3e8;
		}
		_iter_end_1a6bed3e8:;
	};
	return true;;
}



inline jule::Str _1a819254a_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I64 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1a818c149_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1a6c01709;
			};
		}
	_iter_next_1a6c01709:;
	}
	_iter_end_1a6c01709:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1a8192913_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I64 _15728_i) {
	return _1a819254a_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1a8192c87_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I64 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1a6c03871:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1a818c149_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1a6c04366:;
					{
						goto _iter_next_1a6c02d9d;
					}
				}
				else if (_1a8194618_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1a6c04410:;
					{
						return _1a8192913_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1a6c042de:;
					{
						goto _iter_end_1a6c02d9d;
					}
				}
				_match_end_1a6c04278:;
			};
		}
	_iter_next_1a6c02d9d:;
	}
	_iter_end_1a6c02d9d:;;
	return jule::Str();;
}



inline jule::Str _1a819310b_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I64 _18236_i) {
	_18236_i+=2LL;
	return _1a819254a_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1a8193480_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I64 _18735_i) {
	(_18735_i)++;
	return _1a819254a_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1a8193914_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I64 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _21c755c0e_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _21c755c0e_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1a819254a_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1a818c149_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1a6c070b1;
			};
		}
	_iter_next_1a6c070b1:;
	}
	_iter_end_1a6c070b1:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1a8193b56_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2186_i = 0LL;;
	_julec_label_1a6c09338:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1a6c0a0a3:;
					{
						__jule_func_result = _1a8193914_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1a6c0a14c:;
					{
						goto _iter_next_1a6c0947b;
					}
				}
				else if (_1a8194294_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1a6c0a1b3:;
					{
						__jule_func_result = _1a819254a_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a818c149_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1a6c0a229:;
					{
						goto _iter_end_1a6c0947b;
					}
				}
				_match_end_1a6c09ec6:;
			};
		}
	_iter_next_1a6c0947b:;
	}
	_iter_end_1a6c0947b:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1a8193e20_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a81921c6_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1a818c413_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1a6c0ca56;
			};
		}
	_iter_next_1a6c0ca56:;
	}
	_iter_end_1a6c0ca56:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1a8194294_isFloatFmtE(jule::U8 _26216_b, jule::I64 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1a8194618_isFloatFmtP(jule::U8 _26616_b, jule::I64 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1a819498c_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I64 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1a6c10691:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1a818c149_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1a6c11708:;
					{
						goto _iter_next_1a6c1053c;
					}
				}
				else if (_1a8194618_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1a6c117a2:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a6c11681:;
					{
						goto _iter_end_1a6c1053c;
					}
				}
				_match_end_1a6c1161a:;
			};
		}
	_iter_next_1a6c1053c:;
	}
	_iter_end_1a6c1053c:;;
	return false;;
}



inline jule::Bool _1a8194d11_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I64 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1a6c1283b:;
			{
				goto _case_begin_1a6c10e55;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1a6c10e55:;
			{
				goto _case_begin_1a6c128c4;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1a6c128c4:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6c10dab:;
			{
				return true;;
			}
		}
		_match_end_1a6c10cce:;
	};
}



inline jule::Bool _1a8195185_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I64 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1a6c14464:;
			{
				goto _case_begin_1a6c144ca;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1a6c144ca:;
			{
				goto _case_begin_1a6c14541;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1a6c14541:;
			{
				goto _case_begin_1a6c145b8;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1a6c145b8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6c14398:;
			{
				return true;;
			}
		}
		_match_end_1a6c13e47:;
	};
}



inline jule::Str _1a8195680_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I64 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a8193914_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1a8194294_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1a819254a_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1a818c6cc_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1a6c18a1d;
			};
		}
	_iter_next_1a6c18a1d:;
	}
	_iter_end_1a6c18a1d:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1a819585b_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3706_i = 2LL;;
	_julec_label_1a6c1c6d1:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1a8194d11_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1a6c1d34c:;
					{
						__jule_func_result = _1a8193480_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a8195185_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1a6c1d3e6:;
					{
						__jule_func_result = _1a819310b_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a8194618_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1a6c1d45c:;
					{
						__jule_func_result = _1a8192913_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1a819498c_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1a6c1d4c3:;
					{
						__jule_func_result = _1a8192c87_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1a818c996_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1a6c1d539:;
					{
						goto _iter_end_1a6c1c77a;
					}
				}
				_match_end_1a6c1d25e:;
			};
		}
	_iter_next_1a6c1c77a:;
	}
	_iter_end_1a6c1c77a:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1a8195bad_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I64 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1a818c996_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a6c1edcb:;
	}
	_iter_end_1a6c1edcb:;;
	__jule_func_result=_21c755c0e_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1a8195e77_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1a8195bad_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1a8196241_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1a8195bad_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1a819650a_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1a8195bad_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1a81967c4_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a818c6cc_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1a818c6cc_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1a818c6cc_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _21c755c0e_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21ca95427_Log> _1a819b7b8_Lex(jule::Ptr<_1a818dc83_Fileset> _80712_f, jule::I64 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1a8197044_lex _8126_lex = _1a8197044_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1a81881cd_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_21ca95427_Log>(nullptr)};;
	_1a8199d8d_newLine(&_8126_lex);
	_1a8197b6b_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1a8287b07_lshiftUnsig(_1a82273d2_Const* _58821_c, _1a82273d2_Const* _58832_x) {
	jule::U64 _5892_l = _1a828154b_AsU64(_58821_c);;
	jule::U64 _5902_r = _1a828154b_AsU64(_58832_x);;
	_1a8281d43_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1a8287e37_rshiftUnsig(_1a82273d2_Const* _59421_c, _1a82273d2_Const* _59432_x) {
	jule::U64 _5952_l = _1a828154b_AsU64(_59421_c);;
	jule::U64 _5962_r = _1a828154b_AsU64(_59432_x);;
	_1a8281d43_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1a831cbe2_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1a6cc5305:;
			{
				return _1a831c20d_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1a6cc8c32:;
			{
				return _1a831c4b6_SysUint;;
			}
		}
		else {
			_case_begin_1a6cc5d0b:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a6cc8e63:;
	};
}



inline jule::I64 _1a831ceab_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1a6cc9c00:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1a6cca162:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a6cca1c8:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a6cc9c66:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1a6cc9ccc:;
			{
				return _1a831be99_BitSize;;
			}
		}
		else {
			_case_begin_1a6cca074:;
			{
				return -1LL;;
			}
		}
		_match_end_1a6cc9b45:;
	};
}



inline jule::Str _1a831d2ec_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a6ccd154:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a6ccce56:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a6cccebc:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6ccd1ba:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1a6cccd68:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6ccc94a:;
	};
}



inline jule::Str _1a831d583_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a6cce919:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a6cce980:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a6cce9e6:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6ccea5c:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1a6ccd242:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6cce52e:;
	};
}



inline jule::Str _1a831d84c_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a6cd1432:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a6cd1201:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1a6ccd53e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a6cd0ce4:;
	};
}



inline jule::Bool _1a831e452_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1d97a0c6a_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1a831e71b_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a6cd636b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6cd56bc:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6cd5601:;
	};
}



inline jule::I64 _1a831e9d5_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a6cd70b4:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a6cd6613:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a6cd6679:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6cd658b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6cd6ba7:;
	};
}



inline jule::I64 _1a831ec9e_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a6cd8b65:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a6cd7d51:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a6cd7db7:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a6cd7cda:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a6cd823b:;
	};
}



inline void _1a831ee47_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20537de6a_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1a6cd958e:;
				{
					_1a831be99_BitSize=64LLU;
					_1a831c20d_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1a831c4b6_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1a6cd9bbb:;
				{
					_1a831be99_BitSize=32LLU;
					_1a831c20d_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1a831c4b6_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1a6cd9acd:;
		};
	};
}



inline void _1a83200bd_init(void) {
	_1a831ee47_UpdateTarget();
}



inline jule::I64 _1a8323b82_MinI(jule::Str _6113_k) {
	_6113_k=_1a831cbe2_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1a6cdc141:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1a6cdc44e:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1a6cdc4b5:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1a6cdc52b:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a6cd8eea:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6cd90b6:;
	};
}



inline jule::I64 _1a8323e90_MaxI(jule::Str _7913_k) {
	_7913_k=_1a831cbe2_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1a6cdda6b:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1a6cdddce:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1a6cdde56:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1a6cddecd:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a6cdd4c7:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6cdd461:;
	};
}



inline jule::U64 _1a8324259_MaxU(jule::Str _9713_k) {
	_9713_k=_1a831cbe2_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1a6ce04eb:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1a6ce085e:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1a6ce08d6:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1a6ce095d:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a6cdee57:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6cdede1:;
	};
}



inline jule::F64 _1a832459a_Min(jule::Str _11512_k) {
	_11512_k=_1a831cbe2_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1a8323b82_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a6ce3037:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a6ce2487:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a6ce26eb:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6ce2421:;
	};
}



inline jule::F64 _1a8324831_Max(jule::Str _13312_k) {
	_13312_k=_1a831cbe2_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1a8323e90_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1a8324259_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1a6ce5545:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1a6ce491d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a6ce4c09:;
			{
				return 0LL;;
			}
		}
		_match_end_1a6ce48a7:;
	};
}



inline jule::Bool _1a8325953_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1a8325c61_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1a832602a_IsInt(jule::Str _4610_k) {
	return (_1a8325953_IsSigInt(_4610_k) || _1a8325c61_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a832636b_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1a8326602_IsNum(jule::Str _5610_k) {
	return (_1a832602a_IsInt(_5610_k) || _1a832636b_IsFloat(_5610_k));;
}



inline jule::Bool _1a83268bb_IsSigNum(jule::Str _6113_k) {
	return (_1a8325953_IsSigInt(_6113_k) || _1a832636b_IsFloat(_6113_k));;
}



inline jule::Bool _1a83a485b_FindModuleFile(jule::Slice<_21cc3b47a_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6ceb43b:;
		if (it != expr_end) {
			_21cc3b47a_Dir *_159_d = it;
			{
				if (((!(_21cc85cbb_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a6ceb43b:;
			++it;
			goto _iter_begin_1a6ceb43b;
		}
		_iter_end_1a6ceb43b:;
	};
	return false;;
}



inline jule::Str _1a83a4b36_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_21cc3b47a_Dir> _287_dirents = ({
				auto except = static__2053769ce_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a6ceb408;
				} jule::Slice<_21cc3b47a_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _1a83a485b_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I64 _373_n = _2627_path.len();;
			_2627_path=_205376270_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_1a6ceb408;
			};
		}
	_iter_next_1a6ceb408:;
	}
	_iter_end_1a6ceb408:;;
	return jule::Str();;
}



inline jule::Slice<_21ca95427_Log> _1a83a4e00_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__21cc8436e_Read(_20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_21ca95427_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21ca95427_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _205371ac8_Trim(_21c755945_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_21ca95427_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21ca95427_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1a83a5692_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _205367b02_IsUpper(_142_r);;
}



inline jule::Bool _1a84dab3a_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a84dae15_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1a84dbb2a_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a84db1ce_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a84db520_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d08525:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1a6d08525;
				};
			}
			_iter_next_1a6d08525:;
			++it;
			goto _iter_begin_1a6d08525;
		}
		_iter_end_1a6d08525:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a84dbec1_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_21c85106d_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1a6d0968b:;
	}
	_iter_end_1a6d0968b:;;
	return _21c755c0e_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a84db7a6_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a6d0ca13:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a6d0d21c:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a6d0d283:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a6d0d2e9:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a6d0d360:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a6d0d3d7:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a6d0d45e:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a6d0d4d6:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a6d0d55d:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a6d0d5d5:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a6d0d085:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a84dbb2a_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a84db7a6_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a6d13222:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1d9799109_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a6d13530:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1d9799109_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a6d135a7:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1d9799109_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1a6d11c48:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1d9799109_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1a6d118b3:;
	};
}



inline void _1a84dbec1_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1a84dbb2a_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_21c85106d_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1a859cbca_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1a6d1ab86:;
	}
	_iter_end_1a6d1ab86:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a85a4770_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eb82_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1a6d1cc76:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a6d1d88c:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1a6d1d6e4:;
			};
		}
	_iter_next_1a6d1c88b:;
	}
	_iter_end_1a6d1c88b:;;
	return nullptr;;
}



inline void _1a85a4a5b_FmtByDefault(_21ca86171_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _21ca87150_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1a6d1cb55:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d9794214_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type142)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a6d20718:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d9794214_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1a6d2077e:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa8e0_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type143)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_1a6d207e5:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa8e0_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6d2085b:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa8e0_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a6d1ee87:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa8e0_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1a6d2000e:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa527_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type140)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_1a6d20086:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa527_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_1a6d20ac0:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa527_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a6d20b36:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1d97aa527_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6d20b9c:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a6d20c13:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _21ca87150_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _21ca87150_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1a6d1e8e3:;
			{
				({
					auto except = _21ca87150_WriteStr(_4822_buf, _1a57c5ba3_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1a6d1e87c:;
	};
}



inline void _1a85a4e79_applyFmtByDefault(_21ca86171_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1a85a4a5b_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1a85a5397_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _21ca86171_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1a85a4e79_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _21ca87150_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _21ca86d0e_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1a85a571b_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _21c7556ae_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1a859cbca_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_21ca86171_Builder _1276_buf = static__21ca869bd_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1a859cbca_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _21ca86d0e_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1a85a4770_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1a6d2cc0e;
			};
			_1a85a5397_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _21ca86d0e_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1a6d2cc0e;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1a6d2cc0e:;
	}
	_iter_end_1a6d2cc0e:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _21ca86d0e_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _21ca88481_Buf(&_1276_buf);;
}



inline jule::Str _1a85a78b6_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _21c755c0e_StrFromBytes(_1a85a571b_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1a8297694_Fn> _1a7d2561d_runtimeFindFn(jule::Ptr<_1a838b14a_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1a8297694_Fn> _126_f = _1a838c756_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1a81be610_Struct> _1a7d25b6d_runtimeFindStruct(jule::Ptr<_1a838b14a_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1a81be610_Struct> _256_f = _1a838c35a_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1a829ca2e_parameterUsesGenerics(jule::Ptr<_1a82995ec_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _39546_generics) {
	if (_1a829631e_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a8551a2a_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_1a85028cc_Data> _1a834b65a_buildAsComptimeMethodData(jule::Ptr<_1a829a752_FnIns>* _203035_f) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a834b869_findComptimePackage(jule::Ptr<_1a83a8497_sema>* _203829_s) {
	return _1a83a8970_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>>((void*)__jule_anon1a6d7c0d2, nullptr, nullptr));;
}



inline jule::Ptr<_1a85028cc_Data> _1a834bbdd_buildComptimeTypeInfoData(jule::Ptr<_1a83a8497_sema>* _204435_s, jule::Ptr<_1a8535877_Type>* _204450_t) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a83a7d15_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a834c02e_buildComptimeValue(jule::Ptr<_1a85028cc_Data>* _205228_d) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a833da7b_comptimeValue>(_1a833da7b_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Str _1a834ed56_toStrConstraints(jule::Ptr<_1a8533e91_InsGeneric> _14321_g) {
	_21ca86171_Builder _1446_sb = static__21ca869bd_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a978d0c8:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1a8535877_Type> *_1459_c = it;
			{
				({
					auto except = _21ca87150_WriteStr(&_1446_sb, _1a8535c73_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _21ca87150_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1a978d0c8:;
			++it;
			_1456_i++;
			goto _iter_begin_1a978d0c8;
		}
		_iter_end_1a978d0c8:;
	};
	return _21ca879d0_Str(&_1446_sb);;
}



inline jule::Bool _1a835021e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a8535877_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1a978ee54:;
			{
				jule::Ptr<_1a853d990_Prim> _1573_prim = _1a853802d_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1a83268bb_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1a978eeba:;
			{
				jule::Ptr<_1a853d990_Prim> _1633_prim = _1a853802d_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1a8325c61_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1a9790042:;
			{
				jule::Ptr<_1a853d990_Prim> _1693_prim = _1a853802d_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1a832636b_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1a97900b9:;
			{
				jule::Ptr<_1a853d990_Prim> _1753_prim = _1a853802d_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1a8326602_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1a97902a6:;
			{
				return _1a853725d_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1a979031c:;
			{
				return (!(_1a853725d_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1a9790383:;
			{
				return _1a8536ec7_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1a97903e9:;
			{
				return _1a85374e4_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1a978d738:;
			{
				return false;;
			}
		}
		_match_end_1a978d89d:;
	};
}



inline jule::Bool _1a83504d8_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a834d21c_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9795e16:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1a9795e16:;
			++it;
			goto _iter_begin_1a9795e16;
		}
		_iter_end_1a9795e16:;
	};
	return false;;
}



inline jule::Ptr<_1a835cacd_scopeChecker> _1a8352dc0_newScopeCheckerBase(jule::Ptr<_1a83a8497_sema>* _3229_s, jule::Ptr<_1a829a752_FnIns> _3243_owner) {
	return jule::new_ptr<_1a835cacd_scopeChecker>(_1a835cacd_scopeChecker{._field_calledFrom=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1a835cacd_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1a829d997_SymTab>(_1a829d997_SymTab{._field_File=jule::Ptr<_1a818dc83_Fileset>(nullptr), ._field_Passes=jule::Slice<_1a837a623_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1a8297694_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1a82a2da8_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1a82a555e_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1a82a6c69_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1a8350d57_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_tree=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1a835badd_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1a83cc1ad_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1a835b714_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1a835cacd_scopeChecker> _1a8353288_newScopeChecker(jule::Ptr<_1a83a8497_sema>* _4025_s, jule::Ptr<_1a829a752_FnIns> _4039_owner) {
	jule::Ptr<_1a835cacd_scopeChecker> _416_base = _1a8352dc0_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a835b714_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1a835b714_scopeLabel> _1a835360c_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1a835cacd_scopeChecker> _5037_scope) {
	jule::Ptr<_1a835b714_scopeLabel> _516_label = _1a8361e9a_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1a8361e9a_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1a97b1a69:;
	}
	_iter_end_1a97b1a69:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1a85028cc_Data>> _1a835394d_getDatasFromTupleData(jule::Ptr<_1a85028cc_Data>* _6231_d) {
	if ((_1a8539d54_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1a97b4819:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1a8290a66_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1a97b38b2:;
				{
					jule::Ptr<_1a8543a83_Tuple> _688_t = _1a8539d54_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_1a85028cc_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a85028cc_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a97b51bb:;
						if (it != expr_end) {
							jule::Ptr<_1a8535877_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a85028cc_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})); };
							}
							_iter_next_1a97b51bb:;
							++it;
							goto _iter_begin_1a97b51bb;
						}
						_iter_end_1a97b51bb:;
					};
					return _698_r;;
				}
			}
			_match_end_1a97b384b:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a85028cc_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1a83541bd_checkMut(jule::Ptr<_1a83a8497_sema>* _9718_s, jule::Ptr<_1a85028cc_Data>* _9729_left, jule::Ptr<_1a85028cc_Data> _9746_right, jule::Ptr<_1a81881cd_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1a97c46c5:;
			{
				_1a83ab39b_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1a853725d_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_1a97c4ad2:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a85395a1_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a83ab39b_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a97c464d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a97c4571:;
	};
}



inline jule::Bool _1a83546a7_checkAssign(jule::Ptr<_1a83a8497_sema>* _11621_s, jule::Ptr<_1a85028cc_Data>* _11636_left, jule::Ptr<_1a85028cc_Data> _11653_right, jule::Ptr<_1a81881cd_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a829a752_FnIns> _1172_f = _1a853931a_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1a83ab39b_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a8503317_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1a97ca368:;
			{
				_1a83ab39b_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1a83ab70e_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1a97ca412:;
			{
				_1a83ab39b_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a83541bd_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1a97ca489:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a97ca302:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a97ca19d:;
	};
}



inline jule::Bool _1a8354a81_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a97c2b24:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1a81ac697_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a97cc9ec:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a97cc8ba:;
			{
				return false;;
			}
		}
		_match_end_1a97cc854:;
	};
}



inline jule::Bool _1a8354cc3_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41 || _match_expr.type == &__jule_any_type44) {
			_case_begin_1a97cca63:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a97d4031:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1a85028cc_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1a97de79a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a97de4e2:;
						{
							return false;;
						}
					}
					_match_end_1a97de47b:;
				};
			}
		}
		else {
			_case_begin_1a97d433e:;
			{
				return false;;
			}
		}
		_match_end_1a97d2eb9:;
	};
}



inline jule::U64 _1a8375189_removeEqFromOp(jule::U64 _216519_op) {
	{
		auto &_match_expr{ _216519_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a97e0a65:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a97e2b55:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a97e2bbb:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a97e0acb:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a97e0b53:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a97e0bca:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a97e42a5:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a97e432c:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a97e43a4:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a97e4041:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1a97e2858:;
			{
				return _216519_op;;
			}
		}
		_match_end_1a97e302e:;
	};
}



inline void _1a83753ba_makeComptimeRange(jule::Ptr<_1a85028cc_Data>* _219427_d) {
	{
		
		if ((_1a853a371_comptimeStructFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e7d25:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853a371_comptimeStructFields((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853a88d_comptimeEnumFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e7c37:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853a88d_comptimeEnumFields((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853b65d_comptimeTypeInfos((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e7c9d:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853b65d_comptimeTypeInfos((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853adaa_comptimeParams((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e0548:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853adaa_comptimeParams((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853bb7a_comptimeStatics((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e05ae:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853bb7a_comptimeStatics((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853cbd1_comptimeFiles((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e0625:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853cbd1_comptimeFiles((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else if ((_1a853c6b4_comptimeDecls((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1a97e82dc:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8327a76_comptimeRange>(_1a8327a76_comptimeRange{._field_kind=jule::Trait(_1a853c6b4_comptimeDecls((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1a8327856_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1a97e0449:;
			{
				(*((*(_219427_d))))._field_Decl=true;
			}
		}
		_match_end_1a97e78e6:;
	};
}



inline jule::Bool _1a8375684_canComptimeMatch(jule::Ptr<_1a85028cc_Data>* _221726_d) {
	if ((!(_1a8500de7_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1a8503317_IsConst((*(_221726_d)).ptr()) || (_1a853b8e4_comptimeTypeInfo((*((*(_221726_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1a837594d_stmtIsDef(jule::Any* _222515_stmt) {
	{
		auto &_match_expr{ (*(_222515_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a6dec9b0:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a6dede23:;
			{
				jule::Ptr<_1a8359459_MultiAssign> _22303_ma = (*(_222515_stmt)).cast_ptr<_1a8359459_MultiAssign>(&__jule_any_type44);;
				return ((*(_22303_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1a6decd89:;
			{
				return false;;
			}
		}
		_match_end_1a6decd23:;
	};
}



inline jule::I64 _1a8375cc2_countMatchType(jule::Ptr<_1a8359b96_Match>* _223720_m, jule::Ptr<_1a8535877_Type>* _223732_t) {
	jule::I64 _22386_n = 0LL;;
	_julec_label_1a6e005c8:;
	{
		auto expr = &((*((*(_223720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e00a07:;
		if (it != expr_end) {
			jule::Ptr<_1a835a6be_Case> *_22409_c = it;
			{
				if (((*(_22409_c)) == nullptr)) {
					goto _iter_next_1a6e00a07;
				};
				{
					auto expr = &((*((*(_22409_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e01882:;
					if (it != expr_end) {
						jule::Ptr<_1a85028cc_Data> *_224410_expr = it;
						{
							if (((*(_224410_expr)) == nullptr)) {
								goto _iter_end_1a6e00a07;
							};
							if (_1a85360b4_Equal((*(_223732_t)), (*((*(_224410_expr))))._field_Model.cast_ptr<_1a8535877_Type>(&__jule_any_type87))) {
								(_22386_n)++;
							};
						}
						_iter_next_1a6e01882:;
						++it;
						goto _iter_begin_1a6e01882;
					}
					_iter_end_1a6e01882:;
				};
			}
			_iter_next_1a6e00a07:;
			++it;
			goto _iter_begin_1a6e00a07;
		}
		_iter_end_1a6e00a07:;
	};
	return _22386_n;;
}



inline jule::Ptr<_1a853d088_TypeSym> _1a837a986_buildType(jule::Ptr<_1a819dbe9_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr)});;
}



inline jule::Ptr<_1a8503a54_Value> _1a837ac94_buildExpr(jule::Ptr<_1a81a302d_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_1a85028cc_Data>(nullptr)});;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a837b05d_buildTypeAlias(jule::Ptr<_1a81b57e3_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_1a837a986_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a81bb6d9_Field> _1a837b39e_buildField(jule::Ptr<_1a81b8e12_FieldDecl> _9819_decl) {
	return jule::new_ptr<_1a81bb6d9_Field>(_1a81bb6d9_Field{._field_Owner=jule::Ptr<_1a81be610_Struct>(nullptr), ._field_Token=(*(_9819_decl))._field_Token, ._field_Public=(*_9819_decl.alloc)._field_Public, ._field_Mutable=(*_9819_decl.alloc)._field_Mutable, ._field_Ident=(*_9819_decl.alloc)._field_Ident, ._field_TypeSym=_1a837a986_buildType((*_9819_decl.alloc)._field_Kind), ._field_Default=(*_9819_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a81bb6d9_Field>> _1a837b635_buildFields(jule::Slice<jule::Ptr<_1a81b8e12_FieldDecl>>* _10921_decls) {
	jule::Slice<jule::Ptr<_1a81bb6d9_Field>> _1106_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81bb6d9_Field>>::alloc(0LL, (*(_10921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81bb6d9_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a995bc69:;
		if (it != expr_end) {
			jule::Ptr<_1a81b8e12_FieldDecl> _11114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a81bb6d9_Field>> &__jule_push_dest = _1106_fields; __jule_push_dest.push(_1a837b39e_buildField(_11114_decl)); };
			}
			_iter_next_1a995bc69:;
			++it;
			goto _iter_begin_1a995bc69;
		}
		_iter_end_1a995bc69:;
	};
	return _1106_fields;;
}



inline jule::Ptr<_1a81be610_Struct> _1a837b8ee_buildStruct(jule::Ptr<_1a81b9808_StructDecl> _11720_decl) {
	return jule::new_ptr<_1a81be610_Struct>(_1a81be610_Struct{._field_sema=jule::Ptr<_1a83a8497_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr), ._field_Token=(*(_11720_decl))._field_Token, ._field_Ident=(*_11720_decl.alloc)._field_Ident, ._field_Fields=_1a837b635_buildFields(&((*_11720_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1a8297694_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr), ._field_Public=(*_11720_decl.alloc)._field_Public, ._field_Binded=(*_11720_decl.alloc)._field_Binded, ._field_Directives=(*_11720_decl.alloc)._field_Directives, ._field_Generics=(*_11720_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1a82a2da8_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a81c246a_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1a8295bc0_Param> _1a837bbb8_buildParam(jule::Ptr<_1a81ae534_ParamDecl> _12919_decl) {
	return jule::new_ptr<_1a8295bc0_Param>(_1a8295bc0_Param{._field_Token=(*(_12919_decl))._field_Token, ._field_Mutable=(*_12919_decl.alloc)._field_Mutable, ._field_Variadic=(*_12919_decl.alloc)._field_Variadic, ._field_Reference=(*_12919_decl.alloc)._field_Reference, ._field_TypeSym=_1a837a986_buildType((*_12919_decl.alloc)._field_Kind), ._field_Ident=(*_12919_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a8295bc0_Param>> _1a837c092_buildParams(jule::Slice<jule::Ptr<_1a81ae534_ParamDecl>>* _14021_decls) {
	jule::Slice<jule::Ptr<_1a8295bc0_Param>> _1416_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8295bc0_Param>>::alloc(0LL, (*(_14021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8295bc0_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9960cd4:;
		if (it != expr_end) {
			jule::Ptr<_1a81ae534_ParamDecl> _14214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8295bc0_Param>> &__jule_push_dest = _1416_params; __jule_push_dest.push(_1a837bbb8_buildParam(_14214_decl)); };
			}
			_iter_next_1a9960cd4:;
			++it;
			goto _iter_begin_1a9960cd4;
		}
		_iter_end_1a9960cd4:;
	};
	return _1416_params;;
}



inline jule::Ptr<_1a8295609_RetType> _1a837c2d4_buildRetType(jule::Ptr<_1a81a1adc_RetTypeDecl> _14821_decl) {
	if ((((*(_14821_decl))._field_Idents == nullptr) && ((*_14821_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a8295609_RetType>(_1a8295609_RetType{._field_TypeSym=_1a837a986_buildType((*_14821_decl.alloc)._field_Kind), ._field_Idents=(*_14821_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a8297694_Fn> _1a837c59d_buildFunc(jule::Ptr<_1a81b0986_FnDecl> _15818_decl) {
	return jule::new_ptr<_1a8297694_Fn>(_1a8297694_Fn{._field_sema=jule::Ptr<_1a83a8497_sema>(nullptr), ._field_Token=(*(_15818_decl))._field_Token, ._field_Global=(*_15818_decl.alloc)._field_Global, ._field_Unsafety=(*_15818_decl.alloc)._field_Unsafety, ._field_Public=(*_15818_decl.alloc)._field_Public, ._field_Binded=(*_15818_decl.alloc)._field_Binded, ._field_Statically=(*_15818_decl.alloc)._field_Statically, ._field_Exceptional=(*_15818_decl.alloc)._field_Exceptional, ._field_Ident=(*_15818_decl.alloc)._field_Ident, ._field_Directives=(*_15818_decl.alloc)._field_Directives, ._field_Scope=(*_15818_decl.alloc)._field_Scope, ._field_Generics=(*_15818_decl.alloc)._field_Generics, ._field_Result=_1a837c2d4_buildRetType((*_15818_decl.alloc)._field_Result), ._field_Params=_1a837c092_buildParams(&((*_15818_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1a81be610_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a829a752_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a8297694_Fn>> _1a837c867_buildMethods(jule::Slice<jule::Ptr<_1a81b0986_FnDecl>>* _17622_decls) {
	jule::Slice<jule::Ptr<_1a8297694_Fn>> _1776_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(0LL, (*(_17622_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8297694_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17622_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9965da5:;
		if (it != expr_end) {
			jule::Ptr<_1a81b0986_FnDecl> _17814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8297694_Fn>> &__jule_push_dest = _1776_methods; __jule_push_dest.push(_1a837c59d_buildFunc(_17814_decl)); };
			}
			_iter_next_1a9965da5:;
			++it;
			goto _iter_begin_1a9965da5;
		}
		_iter_end_1a9965da5:;
	};
	return _1776_methods;;
}



inline jule::Slice<jule::Ptr<_1a853d088_TypeSym>> _1a837cb31_buildTraitInherits(jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>* _18428_inherits) {
	jule::Slice<jule::Ptr<_1a853d088_TypeSym>> _1856_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a853d088_TypeSym>>::alloc(0LL, (*(_18428_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a853d088_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18428_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9966ee9:;
		if (it != expr_end) {
			jule::Ptr<_1a819dbe9_TypeDecl> _18614_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a853d088_TypeSym>> &__jule_push_dest = _1856_symbols; __jule_push_dest.push(_1a837a986_buildType(_18614_it)); };
			}
			_iter_next_1a9966ee9:;
			++it;
			goto _iter_begin_1a9966ee9;
		}
		_iter_end_1a9966ee9:;
	};
	return _1856_symbols;;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a837cdea_buildTrait(jule::Ptr<_1a81ba045_TraitDecl> _19219_decl) {
	return jule::new_ptr<_1a82a2da8_Trait>(_1a82a2da8_Trait{._field_Token=(*(_19219_decl))._field_Token, ._field_Ident=(*_19219_decl.alloc)._field_Ident, ._field_Public=(*_19219_decl.alloc)._field_Public, ._field_Inherits=_1a837cb31_buildTraitInherits(&((*_19219_decl.alloc)._field_Inherits)), ._field_Methods=_1a837c867_buildMethods(&((*_19219_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1a81be610_Struct>>(nullptr)});;
}



inline jule::Ptr<_1a82a4a03_EnumItem> _1a837d1b4_buildEnumItem(jule::Ptr<_1a81b70ec_EnumItemDecl> _20222_decl) {
	return jule::new_ptr<_1a82a4a03_EnumItem>(_1a82a4a03_EnumItem{._field_Token=(*(_20222_decl))._field_Token, ._field_Ident=(*_20222_decl.alloc)._field_Ident, ._field_Value=_1a837ac94_buildExpr((*_20222_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _1a837d47d_buildEnumItems(jule::Slice<jule::Ptr<_1a81b70ec_EnumItemDecl>>* _21024_decls) {
	jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> _2116_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>>::alloc(0LL, (*(_21024_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a82a4a03_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21024_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a996a2a5:;
		if (it != expr_end) {
			jule::Ptr<_1a81b70ec_EnumItemDecl> _21214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a82a4a03_EnumItem>> &__jule_push_dest = _2116_items; __jule_push_dest.push(_1a837d1b4_buildEnumItem(_21214_decl)); };
			}
			_iter_next_1a996a2a5:;
			++it;
			goto _iter_begin_1a996a2a5;
		}
		_iter_end_1a996a2a5:;
	};
	return _2116_items;;
}



inline jule::Ptr<_1a82a555e_Enum> _1a837d978_buildEnum(jule::Ptr<_1a81b7bad_EnumDecl> _21818_decl) {
	return jule::new_ptr<_1a82a555e_Enum>(_1a82a555e_Enum{._field_Token=(*(_21818_decl))._field_Token, ._field_Public=(*_21818_decl.alloc)._field_Public, ._field_Ident=(*_21818_decl.alloc)._field_Ident, ._field_TypeSym=_1a837a986_buildType((*_21818_decl.alloc)._field_Kind), ._field_Items=_1a837d47d_buildEnumItems(&((*_21818_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a82a6692_TypeEnumItem> _1a837db54_buildTypeEnumItem(jule::Ptr<_1a81b84d8_TypeEnumItemDecl> _22826_decl) {
	return jule::new_ptr<_1a82a6692_TypeEnumItem>(_1a82a6692_TypeEnumItem{._field_Token=(*(_22826_decl))._field_Token, ._field_Ident=(*_22826_decl.alloc)._field_Ident, ._field_TypeSym=_1a837a986_buildType((*_22826_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _1a837ddeb_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a81b84d8_TypeEnumItemDecl>>* _23628_decls) {
	jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> _2376_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>>::alloc(0LL, (*(_23628_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a82a6692_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23628_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a996d561:;
		if (it != expr_end) {
			jule::Ptr<_1a81b84d8_TypeEnumItemDecl> _23814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a82a6692_TypeEnumItem>> &__jule_push_dest = _2376_items; __jule_push_dest.push(_1a837db54_buildTypeEnumItem(_23814_decl)); };
			}
			_iter_next_1a996d561:;
			++it;
			goto _iter_begin_1a996d561;
		}
		_iter_end_1a996d561:;
	};
	return _2376_items;;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a837e1b5_buildTypeEnum(jule::Ptr<_1a81b8b48_TypeEnumDecl> _24422_decl) {
	return jule::new_ptr<_1a82a6c69_TypeEnum>(_1a82a6c69_TypeEnum{._field_Token=(*(_24422_decl))._field_Token, ._field_Public=(*_24422_decl.alloc)._field_Public, ._field_Ident=(*_24422_decl.alloc)._field_Ident, ._field_Items=_1a837ddeb_buildTypeEnumItems(&((*_24422_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a837e47e_buildVar(jule::Ptr<_1a81b1b41_VarDecl> _25317_decl) {
	return jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Token=(*(_25317_decl))._field_Token, ._field_Ident=(*_25317_decl.alloc)._field_Ident, ._field_Binded=(*_25317_decl.alloc)._field_Binded, ._field_Constant=(*_25317_decl.alloc)._field_Constant, ._field_Mutable=(*_25317_decl.alloc)._field_Mutable, ._field_Public=(*_25317_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25317_decl.alloc)._field_Statically, ._field_Reference=(*_25317_decl.alloc)._field_Reference, ._field_TypeSym=_1a837a986_buildType((*_25317_decl.alloc)._field_Kind), ._field_Value=_1a837ac94_buildExpr((*_25317_decl.alloc)._field_Expr), ._field_Refers=static__1a8379435_new(), ._field_Directives=(*_25317_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1a837e748_buildVars(jule::Slice<jule::Ptr<_1a81b1b41_VarDecl>> _27018_decls) {
	jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _2716_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a83cc1ad_Var>>::alloc(0LL, _27018_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a83cc1ad_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27018_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9972dc3:;
		if (it != expr_end) {
			jule::Ptr<_1a81b1b41_VarDecl> _27214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = _2716_vars; __jule_push_dest.push(_1a837e47e_buildVar(_27214_decl)); };
			}
			_iter_next_1a9972dc3:;
			++it;
			goto _iter_begin_1a9972dc3;
		}
		_iter_end_1a9972dc3:;
	};
	return _2716_vars;;
}



inline jule::Ptr<_1a8350d57_Impl> _1a837ea12_buildImpl(jule::Ptr<_1a81ba6a5_Impl> _27818_decl) {
	return jule::new_ptr<_1a8350d57_Impl>(_1a8350d57_Impl{._field_Base=(*(_27818_decl))._field_Base, ._field_Dest=(*_27818_decl.alloc)._field_Dest, ._field_Methods=_1a837c867_buildMethods(&((*_27818_decl.alloc)._field_Methods)), ._field_Statics=_1a837e748_buildVars((*_27818_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1a8386332_isImplicitImport(jule::Ptr<_1a838b14a_ImportInfo> _79121_imp) {
	return ((*((*(_79121_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1a829d997_SymTab> _1a8388488_findVarFileInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _4430_files, jule::Ptr<_1a83cc1ad_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99ed899:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _4514_f = *it;
			{
				if ((_1a82a103d_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1a99ed899:;
			++it;
			goto _iter_begin_1a99ed899;
		}
		_iter_end_1a99ed899:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a838890b_findVarInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99eeb64:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1a83cc1ad_Var> _577_v = _1a829e3b0_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1a99eeb64:;
			++it;
			goto _iter_begin_1a99eeb64;
		}
		_iter_end_1a99eeb64:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a8388d3a_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a001b4:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1a8534a85_TypeAlias> _697_ta = _1a829e7ab_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1a9a001b4:;
			++it;
			goto _iter_begin_1a9a001b4;
		}
		_iter_end_1a9a001b4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a81be610_Struct> _1a83892e1_findStructInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a016e3:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1a81be610_Struct> _817_s = _1a829eba7_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1a9a016e3:;
			++it;
			goto _iter_begin_1a9a016e3;
		}
		_iter_end_1a9a016e3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8297694_Fn> _1a83896dc_findFnInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a02c22:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1a8297694_Fn> _937_f = _1a82a00a3_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1a9a02c22:;
			++it;
			goto _iter_begin_1a9a02c22;
		}
		_iter_end_1a9a02c22:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a2da8_Trait> _1a8389a61_findTraitInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a05285:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1a82a2da8_Trait> _1057_t = _1a82a03e4_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1a9a05285:;
			++it;
			goto _iter_begin_1a9a05285;
		}
		_iter_end_1a9a05285:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a555e_Enum> _1a8389dd5_findEnumInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a05384:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1a82a555e_Enum> _1177_e = _1a82a0735_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1a9a05384:;
			++it;
			goto _iter_begin_1a9a05384;
		}
		_iter_end_1a9a05384:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a82a6c69_TypeEnum> _1a838a369_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a066d7:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1a82a6c69_TypeEnum> _1297_e = _1a82a0a76_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1a9a066d7:;
			++it;
			goto _iter_begin_1a9a066d7;
		}
		_iter_end_1a9a066d7:;
	};
	return nullptr;;
}



inline jule::Bool _1a8390d97_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _205369274_HasPrefix((*(_33318_f)), _20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20537d123_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1a83a5d57_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9a16296:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a9a1630c:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _207_model = (*(_1528_m)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_207_model))._field_Field != nullptr) && _1a83a5d57_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a9a16373:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _237_unary = (*(_1528_m)).cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a853854a_Ptr((*((*_237_unary.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a85382b4_Sptr((*((*(_237_unary))._field_Expr))._field_Type) == nullptr)) {
					return false;;
				};
				return _1a83a5d57_isValidModelForRef(&((*(*(_237_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a9a163d9:;
			{
				jule::Ptr<_1a828ccd8_IndexingExprModel> _377_indexing = (*(_1528_m)).cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43);;
				if ((_1a8538ced_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1a83a5d57_isValidModelForRef(&((*(*(_377_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1a9a15d89:;
			{
				return false;;
			}
		}
		_match_end_1a9a1596b:;
	};
}



inline _21ca95427_Log _1a83a6385_compilerErr(jule::Ptr<_1a81881cd_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_21ca95427_Log _506_log = _21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_21ca95889_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_1a819026d_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _1a83a6671_appendRetVars(jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _6323_dest, jule::Ptr<_1a829a752_FnIns>* _6342_f) {
	if ((_1a8297b4a_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a8535877_Type>> _686_types = _1a829b984_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a2685b:;
		if (it != expr_end) {
			jule::I64 _697_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _6914_ident = *it;
			{
				if ((_1a818aab5_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _1a818ad7e_IsAnonIdent((*_6914_ident.alloc)._field_Kind))) {
					goto _iter_next_1a9a2685b;
				};
				{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*_6914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)})); };
			}
			_iter_next_1a9a2685b:;
			++it;
			_697_i++;
			goto _iter_begin_1a9a2685b;
		}
		_iter_end_1a9a2685b:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a83a69a1_appendParamVars(jule::Slice<jule::Ptr<_1a83cc1ad_Var>>* _9325_dest, jule::Ptr<_1a829a752_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a2b19b:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _9814_p = *it;
			{
				if ((_1a818aab5_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _1a818ad7e_IsAnonIdent((*(*(_9814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1a9a2b19b;
				};
				jule::Ptr<_1a83cc1ad_Var> _1037_v = jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9814_p))._field_Decl.alloc)._field_Reference, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
				{
					
					if (_1a829631e_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_1a9a30117:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_1a82965a5_IsRef((*(_9814_p))._field_Decl)));
							if (_1a82965a5_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1a9a2ece8:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8542e8e_Slc>(_1a8542e8e_Slc{._field_Elem=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=(*((*_9814_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9814_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1a9a2ec82:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_1a9a2eb50:;
				};
				{ jule::Slice<jule::Ptr<_1a83cc1ad_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_1a9a2b19b:;
			++it;
			goto _iter_begin_1a9a2b19b;
		}
		_iter_end_1a9a2b19b:;
	};
}



inline void _1a83a6c8c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _15334_dest, jule::Ptr<_1a829a752_FnIns>* _15359_f) {
	jule::I64 _1546_size = (*((*(_15359_f))))._field_Generics.len();;
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1546_size+=(*(*((*((*(_15359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1546_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a384e9:;
		if (it != expr_end) {
			jule::I64 _1637_i = it - expr->begin();
			jule::Ptr<_1a8533e91_InsGeneric> _16314_g = *it;
			{
				if ((_16314_g == nullptr)) {
					goto _iter_next_1a9a384e9;
				};
				jule::Ptr<_1a81aae04_GenericDecl> _1677_decl = (*(*((*(_15359_f))))._field_Decl.alloc)._field_Generics[_1637_i];;
				{ jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1677_decl.alloc)._field_Token, ._field_Ident=(*(_1677_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_16314_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1a9a384e9:;
			++it;
			_1637_i++;
			goto _iter_begin_1a9a384e9;
		}
		_iter_end_1a9a384e9:;
	};
	if (((*(*((*(_15359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a81c246a_StructIns> _1797_owner = (*((*(_15359_f))))._field_Owner;;
		{
			auto expr = &((*_1797_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9a39d8b:;
			if (it != expr_end) {
				jule::I64 _1808_i = it - expr->begin();
				jule::Ptr<_1a8533e91_InsGeneric> _18015_g = *it;
				{
					jule::Ptr<_1a81aae04_GenericDecl> _1818_decl = (*((*(_1797_owner))._field_Decl))._field_Generics[_1808_i];;
					{ jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1818_decl.alloc)._field_Token, ._field_Ident=(*(_1818_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_18015_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1a9a39d8b:;
				++it;
				_1808_i++;
				goto _iter_begin_1a9a39d8b;
			}
			_iter_end_1a9a39d8b:;
		};
	};
}



inline jule::Ptr<_1a829d997_SymTab> _1a83a7111_findFile(jule::Slice<jule::Ptr<_1a829d997_SymTab>>* _19418_files, jule::Ptr<_1a818dc83_Fileset>* _19437_handler) {
	{
		auto expr = _19418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a3de5b:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _19514_fl = *it;
			{
				if (((*(_19514_fl))._field_File == (*(_19437_handler)))) {
					return _19514_fl;;
				};
			}
			_iter_next_1a9a3de5b:;
			++it;
			goto _iter_begin_1a9a3de5b;
		}
		_iter_end_1a9a3de5b:;
	};
	return nullptr;;
}



inline void _1a83a74a7_pushSuggestion(_21ca95427_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args) {
	(*(_20330_log))._field_Suggestion=_21ca95889_Logf(_20348_fmt, _20368_args);
}



inline void _1a83ca112_pushImplemented(jule::Ptr<_1a82a2da8_Trait> _280524_t, jule::Ptr<_1a81be610_Struct>* _280540_d) {
	_julec_label_1a9a3da2c:;
	{
		
		if (((*(_280524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1a9a41b84:;
			{
				{
					auto expr = &((*_280524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9a42602:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> _280910_s = *it;
						{
							if ((_280910_s == (*(_280540_d)))) {
								goto _match_end_1a9a41117;
							};
						}
						_iter_next_1a9a42602:;
						++it;
						goto _iter_begin_1a9a42602;
					}
					_iter_end_1a9a42602:;
				};
				goto _case_begin_1a9a411c2;
			}
		}
		else {
			_case_begin_1a9a411c2:;
			{
				(*(_280524_t))._field_Implemented=jule::append((*_280524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81be610_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280540_d)); __jule_collection; }));
			}
		}
		_match_end_1a9a41117:;
	};
	{
		auto expr = &((*(_280524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a429ba:;
		if (it != expr_end) {
			jule::Ptr<_1a853d088_TypeSym> _281814_i = *it;
			{
				_1a83ca112_pushImplemented(_1a8539837_Trait((*(_281814_i))._field_Type.ptr()), _280540_d);
			}
			_iter_next_1a9a429ba:;
			++it;
			goto _iter_begin_1a9a429ba;
		}
		_iter_end_1a9a429ba:;
	};
}



inline void _1a83ca3ed_pushImplements(jule::Ptr<_1a81be610_Struct>* _282324_s, jule::Ptr<_1a82a2da8_Trait> _282340_t) {
	_julec_label_1a9a41579:;
	{
		
		if (((*((*(_282324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1a9a44725:;
			{
				{
					auto expr = &((*((*(_282324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9a45193:;
					if (it != expr_end) {
						jule::Ptr<_1a82a2da8_Trait> _282710_b = *it;
						{
							if ((_282710_b == _282340_t)) {
								goto _match_end_1a9a43bb9;
							};
						}
						_iter_next_1a9a45193:;
						++it;
						goto _iter_begin_1a9a45193;
					}
					_iter_end_1a9a45193:;
				};
				goto _case_begin_1a9a43c63;
			}
		}
		else {
			_case_begin_1a9a43c63:;
			{
				{ jule::Slice<jule::Ptr<_1a82a2da8_Trait>> &__jule_push_dest = (*((*(_282324_s))))._field_Implements; __jule_push_dest.push(_282340_t); };
			}
		}
		_match_end_1a9a43bb9:;
	};
	{
		auto expr = &((*(_282340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a4555b:;
		if (it != expr_end) {
			jule::Ptr<_1a853d088_TypeSym> _283614_i = *it;
			{
				_1a83ca3ed_pushImplements(_282324_s, _1a8539837_Trait((*(_283614_i))._field_Type.ptr()));
			}
			_iter_next_1a9a4555b:;
			++it;
			goto _iter_begin_1a9a4555b;
		}
		_iter_end_1a9a4555b:;
	};
}



inline void _1a83ca84e_pushRuntimeToStr(jule::Ptr<_1a83a8497_sema>* _284126_s, jule::Ptr<_1a8535877_Type>* _284141_t, jule::Ptr<_1a81881cd_Token>* _284156_token, jule::Ptr<_1a83790c2_ReferenceStack> _28426_refers) {
	if ((((*((*((*(_284126_s))))._field_meta))._field_runtime == nullptr) || _1a85369aa_IsNil((*(_284141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1a829a752_FnIns> _28466_f = _1a8298ba1_instanceForce(_1a7d2561d_runtimeFindFn(&((*(*((*(_284126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28466_f))._field_Generics=jule::append((*_28466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a8533e91_InsGeneric>(_1a8533e91_InsGeneric{._field_Type=(*(_284141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1a8535877_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a83c3dec_checkGenericFn((*(_284126_s)), &(_28466_f), _284156_token);
		_28482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2850:3"));;
	};
	if ((_28426_refers != nullptr)) {
		_1a8379e2a_Push(_28426_refers, jule::Any(_28466_f, &__jule_any_type64));
	};
}



inline jule::Bool _1a83cab18_isValidImpAlias(jule::Str _285924_alias) {
	jule::Bool __jule_func_result = false;
	if (_1a818aab5_IsIgnoreIdent(_285924_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1a818bd80_IsKeyword(_285924_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28666_r;
	jule::I64 _286613_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_285924_alias);
		_28666_r = __jule_assign_result.__jule_result_arg0;
		_286613_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28666_r != '_') && (!(_1a818b90c_IsLetter(_28666_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285924_alias).mut_slice(_286613_size);;
			if ((_285924_alias.len() == 0LL)) {
				goto _iter_end_1a9a4e2ce;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21c84eec3_DecodeRuneStr(_285924_alias);
				_28666_r = __jule_assign_result.__jule_result_arg0;
				_286613_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28666_r != '_') && (!((('0' <= _28666_r) && (_28666_r <= '9'))))) && (!(_1a818b90c_IsLetter(_28666_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1a9a4e2ce:;
	}
	_iter_end_1a9a4e2ce:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a84dc70d_traitHasReferenceReceiver(jule::Ptr<_1a82a2da8_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e97749:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1a9e97749;
				};
				jule::Ptr<_1a8295bc0_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1a82965a5_IsRef(_233_p.ptr()) && _1a829631e_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1a9e97749:;
			++it;
			goto _iter_begin_1a9e97749;
		}
		_iter_end_1a9e97749:;
	};
	return false;;
}



inline jule::Bool _1a84dcac6_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1a85028cc_Data>* _3133_d) {
	jule::Str _322_value = _1d9794214_FmtFloat(_1a82817d2_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1a831e452_CheckBitFloat(_322_value, _1a831ceab_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1a84dce4a_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1a85028cc_Data>* _3630_d) {
	jule::F64 _372_min = _1a832459a_Min(_3618_kind);;
	jule::F64 _382_max = _1a8324831_Max(_3618_kind);;
	{
		
		if (_1a828362a_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a9e9b2db:;
			{
				jule::F64 _413_x = _1a828102e_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1d976a1eb_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1a8282d77_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a9e9b352:;
			{
				jule::F64 _483_x = _1a82817d2_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1a8282ae1_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1a9e9b3b8:;
			{
				jule::F64 _533_x = _1a82817d2_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1a9e9b1ba:;
	};
	return false;;
}



inline jule::Bool _1a84dd313_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1a85028cc_Data>* _5932_d) {
	jule::F64 _602_max = _1a8324831_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1a84dab3a_IsAscii(static_cast<jule::I32>(_1a82804e5_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1a828362a_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a9ea2039:;
			{
				jule::F64 _673_x = _1a828102e_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1d976a1eb_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1a8282d77_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a9ea20a0:;
			{
				jule::F64 _773_x = _1a82817d2_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1a8282ae1_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1a9ea2116:;
			{
				jule::F64 _823_x = _1a82817d2_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1a9ea15bb:;
	};
	return false;;
}



inline jule::Bool _1a84dd687_intAssignable(jule::Str _8818_kind, jule::Ptr<_1a85028cc_Data>* _8830_d) {
	{
		
		if (_1a8325953_IsSigInt(_8818_kind)) {
			_case_begin_1a9eab9c2:;
			{
				return _1a84dce4a_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1a8325c61_IsUnsigInt(_8818_kind)) {
			_case_begin_1a9eaba5a:;
			{
				return _1a84dd313_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1a9eab4e9:;
			{
				return false;;
			}
		}
		_match_end_1a9eab41c:;
	};
}



inline void _1a84e9b7c_checkMutRiskOfStructLit(jule::Ptr<_1a83a8497_sema>* _90933_s, jule::Ptr<_1a828b226_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9eacb38:;
		if (it != expr_end) {
			jule::Ptr<_1a828ad80_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1a9eacb38;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1a853725d_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1a83ab39b_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*((*(_9109_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1a9eacb38:;
			++it;
			goto _iter_begin_1a9eacb38;
		}
		_iter_end_1a9eacb38:;
	};
}



inline jule::Ptr<_1a8535877_Type> _1a8500a95_lenKind(void) {
	return _1a85a9ea1_primInt;;
}



inline jule::Bool _1a8500de7_isGoodValueToInfer(jule::Ptr<_1a85028cc_Data>* _141424_d) {
	return (!(_1a8502cea_IsNil((*(_141424_d)).ptr())));;
}



inline jule::Ptr<_1a819d116_Directive> _1a852c0ee_findDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _436523_directives, jule::Str _436554_d) {
	{
		auto expr = _436523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0ec85a:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _436614_dr = *it;
			{
				if (((*((*(_436614_dr))._field_Tag))._field_Kind == _436554_d)) {
					return _436614_dr;;
				};
			}
			_iter_next_1aa0ec85a:;
			++it;
			goto _iter_begin_1aa0ec85a;
		}
		_iter_end_1aa0ec85a:;
	};
	return nullptr;;
}



inline jule::Any _1a852c4b7_findBuiltinsImport(jule::Str* _437424_ident, jule::Ptr<_1a838b14a_ImportInfo> _437436_imp) {
	return _1a85ad2e5_findPackageBuiltinDef(&((*(_437436_imp))._field_LinkPath), _437424_ident);;
}



inline void _1a852c6e8_fitBitsize(jule::Ptr<_1a85028cc_Data>* _438320_d) {
	jule::Ptr<_1a853d990_Prim> _43846_prim = _1a853802d_Prim((*((*(_438320_d))))._field_Type.ptr());;
	jule::I64 _43852_z = _1a831ceab_BitSizeOf(_1a853dd14_Str(_43846_prim.ptr()));;
	{
		
		if (_1a8282ae1_IsI64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1aa1000aa:;
			{
				jule::I64 _43883_k = _1a831e9d5_BitSizeOfInt(_1a82804e5_ReadI64((*((*(_438320_d))))._field_Constant));;
				if (((_43883_k > _43852_z) || _1a8325c61_IsUnsigInt((*_43846_prim.alloc)._field_Kind))) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1a831d2ec_IntFromBits(_43883_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1a85ac305_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a8282d77_IsU64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1aa100121:;
			{
				jule::I64 _43943_k = _1a831ec9e_BitSizeOfUint(_1a828077b_ReadU64((*((*(_438320_d))))._field_Constant));;
				if (((_43943_k > _43852_z) || _1a8325953_IsSigInt((*_43846_prim.alloc)._field_Kind))) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1a831d583_UintFromBits(_43943_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1a85ac305_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1a828362a_IsF64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1aa100198:;
			{
				if ((_43852_z == 64LLU)) {
					return;;
				};
				jule::I64 _44043_k = _1a831e71b_BitSizeOfFloat(_1a828102e_ReadF64((*((*(_438320_d))))._field_Constant));;
				if ((_44043_k > _43852_z)) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1a831d84c_FloatFromBits(_44043_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1a85ac305_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1aa0eee89:;
	};
}



inline void _1a852ca28_makeStructLitAlloc(jule::Ptr<_1a85028cc_Data>* _441228_d, jule::Ptr<_1a828b226_StructLitExprModel>* _441243_lit) {
	(*((*(_441228_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_441243_lit))))._field_Strct, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)});
	(*((*(_441228_d))))._field_Model=jule::Any(jule::new_ptr<_1a828b523_AllocStructLitExprModel>(_1a828b523_AllocStructLitExprModel{._field_Lit=(*(_441243_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1a83cc1ad_Var> _1a852cd9c_buildErrorVar(jule::Ptr<_1a8355466_Scope>* _442323_s, jule::Ptr<_1a81a6c57_FnCallExpr>* _442339_fc) {
	return jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=(*(_442323_s)), ._field_Token=(*((*(_442339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
}



inline jule::Any _1a852d221_findBuiltinsSema(jule::Str* _443822_ident, jule::Ptr<_1a83a8497_sema> _443838_s) {
	jule::Str _44406_ppath = _1a818e910_Dir((*((*(_443838_s))._field_file))._field_File.ptr());;
	if (_205369274_HasPrefix(_44406_ppath, _20537d123_PathStdlib)) {
		(_44406_ppath).mut_slice(_20537d123_PathStdlib.len());;
		_44406_ppath=(jule::Str::lit("std", 3) + _2053703bd_ReplaceAll(_44406_ppath, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		return _1a85ad2e5_findPackageBuiltinDef(&(_44406_ppath), _443822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a852d4da_isOkForShifting(jule::Ptr<_1a85028cc_Data>* _445325_d) {
	if (_1a8503317_IsConst((*(_445325_d)).ptr())) {
		{
			
			if (_1a8282ae1_IsI64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1aa115e28:;
				{
					return (_1a82804e5_ReadI64((*((*(_445325_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1a8282d77_IsU64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1aa115ec2:;
				{
					return true;;
				}
			}
			else if (_1a828362a_IsF64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1aa116049:;
				{
					return (_1a828102e_ReadF64((*((*(_445325_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1aa115d90:;
				{
					return false;;
				}
			}
			_match_end_1aa115cb3:;
		};
	};
	jule::Ptr<_1a853d990_Prim> _44662_prim = _1a853802d_Prim((*((*(_445325_d))))._field_Type.ptr());;
	return ((_44662_prim != nullptr) && _1a832602a_IsInt(_1a853dd14_Str(_44662_prim)));;
}



inline jule::Bool _1a852d8b4_isInstancedStruct(jule::Ptr<_1a81c246a_StructIns> _447022_s) {
	return ((*((*(_447022_s))._field_Decl))._field_Generics.len() == (*_447022_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a852dbb1_isPtrArithmeticCompatible(jule::Ptr<_1a85028cc_Data>* _447435_l, jule::Ptr<_1a85028cc_Data>* _447450_r) {
	jule::Ptr<_1a8545c83_Ptr> _44752_ptr = _1a853854a_Ptr((*((*(_447450_r))))._field_Type.ptr());;
	if ((_44752_ptr != nullptr)) {
		return _1a85360b4_Equal((*(_1a853854a_Ptr((*((*(_447435_l))))._field_Type)))._field_Elem, (*_44752_ptr.alloc)._field_Elem);;
	};
	if ((_1a8503317_IsConst((*(_447450_r)).ptr()) && (*((*(_447450_r))))._field_untyped)) {
		return (_1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _447450_r) || _1a84dd687_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _447450_r));;
	};
	_1a84ddb71_typeCompatibilityChecker _44846_tcc = _1a84ddb71_typeCompatibilityChecker{._field_s=jule::Ptr<_1a83a8497_sema>(nullptr), ._field_dest=_1a85a9ea1_primInt, ._field_src=(*((*(_447450_r))))._field_Type, ._field_errorToken=jule::Ptr<_1a81881cd_Token>(nullptr)};;
	if (_1a84e036a_check(&_44846_tcc)) {
		return true;;
	};
	_44846_tcc._field_dest=_1a85a9ad8_primUint;
	return _1a84e036a_check(&_44846_tcc);;
}



inline void _1a852e1bc_applyRuntimeToStr(jule::Ptr<_1a83a8497_sema>* _449527_s, jule::Ptr<_1a8535877_Type>* _449542_from, jule::Ptr<_1a8535877_Type>* _449560_to, jule::Ptr<_1a81881cd_Token>* _44967_token, jule::Ptr<_1a83790c2_ReferenceStack> _449633_refers) {
	jule::Ptr<_1a853d990_Prim> _44972_prim = _1a853802d_Prim((*(_449560_to)).ptr());;
	if ((_44972_prim != nullptr)) {
		if (_1a85421e1_IsAny(_44972_prim)) {
			_1a83ca84e_pushRuntimeToStr(_449527_s, _449542_from, _44967_token, _449633_refers);
		};
		return;;
	};
	if ((_1a8538a67_TypeEnum((*(_449560_to)).ptr()) != nullptr)) {
		_1a83ca84e_pushRuntimeToStr(_449527_s, _449542_from, _44967_token, _449633_refers);
		return;;
	};
}



inline void _1a852e6c8_applyCastKindModel(jule::Ptr<_1a83a8497_sema>* _451028_s, jule::Ptr<_1a85028cc_Data>* _451043_d, jule::Ptr<_1a8535877_Type>* _451058_t, jule::Ptr<_1a81881cd_Token>* _45117_token, jule::Ptr<_1a83790c2_ReferenceStack> _451133_refers) {
	_1a852e1bc_applyRuntimeToStr(_451028_s, &((*((*(_451043_d))))._field_Type), _451058_t, _45117_token, _451133_refers);
	(*((*(_451043_d))))._field_Model=jule::Any(jule::new_ptr<_1a828baa6_CastingExprModel>(_1a828baa6_CastingExprModel{._field_Token=(*(_45117_token)), ._field_Expr=jule::new_ptr<_1a85028cc_Data>((*((*(_451043_d))))), ._field_Type=(*(_451058_t)), ._field_ExprType=(*((*(_451043_d))))._field_Type}), &__jule_any_type96);
}



inline void _1a852ebd4_applyCastKind(jule::Ptr<_1a83a8497_sema>* _452123_s, jule::Ptr<_1a85028cc_Data>* _452138_d, jule::Ptr<_1a8535877_Type>* _452153_t, jule::Ptr<_1a81881cd_Token>* _45227_token, jule::Ptr<_1a83790c2_ReferenceStack> _452233_refers) {
	_1a852e6c8_applyCastKindModel(_452123_s, _452138_d, _452153_t, _45227_token, _452233_refers);
	(*((*(_452138_d))))._field_Type=(*(_452153_t));
}



inline jule::Ptr<_1a85028cc_Data> _1a852ede3_buildVoidData(void) {
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a8c19_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Str _1a85303cc_checkDataForIntegerIndexing(jule::Ptr<_1a83a8497_sema>* _453337_s, jule::Ptr<_1a85028cc_Data>* _453352_d, jule::Ptr<_1a81881cd_Token>* _45347_token, jule::Ptr<_1a83790c2_ReferenceStack> _453433_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_453352_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1a853802d_Prim((*((*(_453352_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1aa127214:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1a832602a_IsInt(_1a853dd14_Str(_1a853802d_Prim((*((*(_453352_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1aa12727a:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1a8503317_IsConst((*(_453352_d)).ptr())) {
			_case_begin_1aa1272e1:;
			{
				if ((_1a82817d2_AsF64((*((*(_453352_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a853802d_Prim((*((*(_453352_d))))._field_Type.ptr()) == nullptr) || _1a8503317_IsConst((*(_453352_d)).ptr()) || (_1a831cbe2_RealKindOf(_1a853dd14_Str(_1a853802d_Prim((*((*(_453352_d))))._field_Type).ptr())) != _1a831cbe2_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1aa127357:;
			{
				_1a852ebd4_applyCastKind(_453337_s, _453352_d, &(_1a85a9ea1_primInt), _45347_token, _453433_refers);
			}
		}
		_match_end_1aa126ce6:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1a85308d8_applyCastModelByEnum(jule::Ptr<_1a83a8497_sema>* _455930_s, jule::Ptr<_1a85028cc_Data>* _455945_d, jule::Ptr<_1a82a555e_Enum> _455959_e, jule::Ptr<_1a81881cd_Token>* _45607_token, jule::Ptr<_1a83790c2_ReferenceStack> _456033_refers) {
	if ((_455959_e == nullptr)) {
		return;;
	};
	_1a852e6c8_applyCastKindModel(_455930_s, _455945_d, &((*((*(_455959_e))._field_TypeSym))._field_Type), _45607_token, _456033_refers);
}



inline void _1a8530e05_castConstByType(jule::Str* _456721_t, jule::Ptr<_1a85028cc_Data>* _456734_d) {
	{
		
		if (_1a8325953_IsSigInt((*(_456721_t)))) {
			_case_begin_1aa12d0d8:;
			{
				{
					auto _match_expr{ _1a831ceab_BitSizeOf(_1a831cbe2_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aa12dbaa:;
						{
							_1a8281a8a_SetI64((*((*(_456734_d))))._field_Constant.ptr(), _1a82812b5_AsI64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aa12dc43:;
						{
							_1a8281a8a_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1a82812b5_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aa12dca9:;
						{
							_1a8281a8a_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1a82812b5_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aa12dd20:;
						{
							_1a8281a8a_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1a82812b5_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1aa12db44:;
				};
			}
		}
		else if (_1a8325c61_IsUnsigInt((*(_456721_t)))) {
			_case_begin_1aa12d182:;
			{
				{
					auto _match_expr{ _1a831ceab_BitSizeOf(_1a831cbe2_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aa12e2b5:;
						{
							_1a8281d43_SetU64((*((*(_456734_d))))._field_Constant.ptr(), _1a828154b_AsU64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aa132de0:;
						{
							_1a8281d43_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1a828154b_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aa132e56:;
						{
							_1a8281d43_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1a828154b_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aa132ebc:;
						{
							_1a8281d43_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1a828154b_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1aa132d46:;
				};
			}
		}
		else if (_1a832636b_IsFloat((*(_456721_t)))) {
			_case_begin_1aa12d1e8:;
			{
				{
					auto _match_expr{ _1a831ceab_BitSizeOf(_1a831cbe2_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aa133275:;
						{
							_1a828265c_SetF64((*((*(_456734_d))))._field_Constant.ptr(), _1a82817d2_AsF64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aa137059:;
						{
							_1a828265c_SetF64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1a82817d2_AsF64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1aa136ee3:;
				};
			}
		}
		_match_end_1aa12ce84:;
	};
}



inline void _1a85310d1_updateModelToGenericIns(jule::Any* _460133_m, jule::Ptr<_1a829a752_FnIns>* _460152_f) {
	{
		auto &_match_expr{ (*(_460133_m)) };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa137301:;
			{
				(*(_460133_m))=jule::Any((*(_460152_f)), &__jule_any_type64);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aa12e0c8:;
			{
				(*((*(_460133_m)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_460152_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa137367:;
			{
				(*((*(_460133_m)).cast_ptr<_1a8290390_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_460152_f));
			}
		}
		_match_end_1aa12e1a5:;
	};
}



inline jule::Bool _1a8531455_pushSubIdentFromExpr(jule::Any _461229_expr, jule::Ptr<_1a819e5bd_SubIdentTypeDecl>* _461255_t) {
	{
		auto &_match_expr{ _461229_expr };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa13d3e5:;
			{
				jule::Ptr<_1a81a4848_IdentExpr> _46157_e = _461229_expr.unsafe_cast_ptr<_1a81a4848_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>> &__jule_push_dest = (*((*(_461255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*(_46157_e))._field_Token, ._field_Ident=(*_46157_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1aa13c548:;
			{
				jule::Ptr<_1a81a6141_SubIdentExpr> _46217_e = _461229_expr.unsafe_cast_ptr<_1a81a6141_SubIdentExpr>();;
				if ((!(_1a8531455_pushSubIdentFromExpr((*((*(_46217_e))._field_Expr))._field_Kind, _461255_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a819e304_IdentTypeDecl>> &__jule_push_dest = (*((*(_461255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a819e304_IdentTypeDecl>(_1a819e304_IdentTypeDecl{._field_Token=(*_46217_e.alloc)._field_Ident, ._field_Ident=(*((*_46217_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1a819dbe9_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1aa13d4c2:;
			{
				return false;;
			}
		}
		_match_end_1aa13d329:;
	};
	return true;;
}



inline jule::Str _1a853171e_constoa(jule::Ptr<_1a82273d2_Const>* _463513_c) {
	{
		
		if (_1a8282ae1_IsI64((*(_463513_c)).ptr())) {
			_case_begin_1aa1442ec:;
			{
				return _1d97aa8e0_FmtInt(_1a82804e5_ReadI64((*(_463513_c)).ptr()), 10LL);;
			}
		}
		else if (_1a8282d77_IsU64((*(_463513_c)).ptr())) {
			_case_begin_1aa144385:;
			{
				return _1d97aa527_FmtUint(_1a828077b_ReadU64((*(_463513_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1aa142dab:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa142b47:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a8531cb3_evalEnumStatic(jule::Ptr<_1a83a8497_sema>* _464624_s, jule::Ptr<_1a82a555e_Enum>* _464639_enm, jule::Ptr<_1a82a4a03_EnumItem>* _464656_item, jule::Ptr<_1a81881cd_Token>* _46477_token, jule::Ptr<_1a83790c2_ReferenceStack> _464733_refers) {
	jule::Ptr<_1a85028cc_Data> _46486_d = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_464639_enm)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if (((*(_464656_item)) != nullptr)) {
		(*(_46486_d))._field_Constant=jule::new_ptr<_1a82273d2_Const>((*(*((*((*((*(_464656_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46486_d.alloc)._field_Model=jule::Any((*_46486_d.alloc)._field_Constant, &__jule_any_type15);
		_1a85308d8_applyCastModelByEnum(_464624_s, &(_46486_d), (*(_464639_enm)), _46477_token, _464733_refers);
	};
	return _46486_d;;
}



inline jule::Ptr<_1a828b226_StructLitExprModel> _1a853207c_isLitBased(jule::Any* _466420_m) {
	{
		auto &_match_expr{ (*(_466420_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa14939b:;
			{
				return (*(_466420_m)).cast_ptr<_1a828b226_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa149412:;
			{
				return (*((*(_466420_m)).cast_ptr<_1a828b523_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aa149478:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _46717_ssi = (*(_466420_m)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1a853207c_isLitBased(&((*((*(_46717_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aa1494de:;
			{
				jule::Ptr<_1a828baa6_CastingExprModel> _46747_c = (*(_466420_m)).cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96);;
				return _1a853207c_isLitBased(&((*((*(_46747_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1aa148e4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa148dd4:;
	};
}



inline void _1a8532368_makeImplicitDeref(jule::Ptr<_1a85028cc_Data>* _468127_d, jule::Ptr<_1a81881cd_Token> _468141_baseToken) {
	jule::Ptr<_1a828a852_UnaryExprModel> _46826_unary = jule::new_ptr<_1a828a852_UnaryExprModel>(_1a828a852_UnaryExprModel{._field_Expr=jule::new_ptr<_1a85028cc_Data>((*((*(_468127_d))))), ._field_Op=jule::new_ptr<_1a81881cd_Token>((*(_468141_baseToken)))});;
	(*((*(_46826_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_46826_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_468127_d))))._field_Model=jule::Any(_46826_unary, &__jule_any_type113);
}



inline void _1aa260dca_updateRefer(jule::Ptr<_1a83790c2_ReferenceStack> _469223_ref, jule::Ptr<_1a829a752_FnIns>* _469246_old, jule::Ptr<_1a829a752_FnIns>* _469259_new) {
	{
		auto expr = &((*(_469223_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2627b1:;
		if (it != expr_end) {
			jule::I64 _46936_i = it - expr->begin();
			jule::Any _46939_sym = *it;
			{
				if ((jule::Any((*(_469246_old)), &__jule_any_type64) == _46939_sym)) {
					(*(_469223_ref))._field_buffer[_46936_i]=jule::Any((*(_469259_new)), &__jule_any_type64);
				};
			}
			_iter_next_1aa2627b1:;
			++it;
			_46936_i++;
			goto _iter_begin_1aa2627b1;
		}
		_iter_end_1aa2627b1:;
	};
}



inline void _1a85329ea_makeVariadic(jule::Ptr<_1a85028cc_Data>* _470022_d, jule::Ptr<_1a8535877_Type> _470036_elem) {
	(*((*(_470022_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=(*_470036_elem.alloc)._field_BindIdent, ._field_Generic=(*(_470036_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_470036_elem.alloc)._field_Kind});
}



inline jule::Bool _1a8532e29_isVarCaptured(jule::Ptr<_1a835cacd_scopeChecker> _471418_r, jule::Ptr<_1a835cacd_scopeChecker> _471440_s, jule::Ptr<_1a83cc1ad_Var> _471458_v) {
	if (((*(_471458_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_471440_s))._field_scope == (*_471458_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_471440_s.alloc)._field_parent == nullptr) || (_471440_s == _471418_r))) {
				goto _iter_end_1aa1535c5;
			};
			_471440_s=(*_471440_s.alloc)._field_parent;
		}
	_iter_next_1aa1535c5:;
	}
	_iter_end_1aa1535c5:;;
	return true;;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a853329d_findNamespace(jule::Trait _473122_lookup, jule::Str _473138_namespace) {
	return ((_1a8555c60_LookupMptrData*)_473122_lookup.safe_type())->_1a8554049_SelectPackage(_473122_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a838b14a_ImportInfo>>((void*)__jule_anon_1aa15551c, jule::Ptr<__jule_anon_1aa15551c_ctx>::make(__jule_anon_1aa15551c_ctx{._473138_namespace=_473138_namespace}).as<jule::Uintptr>(), __jule_anon_1aa15551c_ctx_handler));;
}



inline jule::Bool _1a8551a2a_kindUsesGenerics(jule::Ptr<_1a8535877_Type>* _173126_k, jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>* _173137_generics) {
	{
		auto expr = _173137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa69b964:;
		if (it != expr_end) {
			jule::Ptr<_1a81aae04_GenericDecl> *_17329_g = it;
			{
				if (static__1a855162e_exist(&((*((*(_17329_g))))._field_Ident), _173126_k)) {
					return true;;
				};
			}
			_iter_next_1aa69b964:;
			++it;
			goto _iter_begin_1aa69b964;
		}
		_iter_end_1aa69b964:;
	};
	return false;;
}



inline jule::Bool _1a8551de3_hasDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _174122_directives, jule::Str _174153_tag) {
	{
		auto expr = _174122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa69c019:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _174214_dr = *it;
			{
				if (((*((*(_174214_dr))._field_Tag))._field_Kind == _174153_tag)) {
					return true;;
				};
			}
			_iter_next_1aa69c019:;
			++it;
			goto _iter_begin_1aa69c019;
		}
		_iter_end_1aa69c019:;
	};
	return false;;
}



inline jule::Bool _1a85521ac_canGetPtr(jule::Ptr<_1a85028cc_Data>* _175019_d) {
	return (*((*(_175019_d))))._field_Lvalue;;
}



inline jule::Bool _1a85524ed_isValidForSptrType(jule::Ptr<_1a8535877_Type>* _175328_t) {
	jule::Ptr<_1a81c246a_StructIns> _17546_s = _1a85395a1_Struct((*(_175328_t)).ptr());;
	if ((((_17546_s != nullptr) && ((*_17546_s.alloc)._field_Decl != nullptr)) && (*(*(_17546_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a8552784_isValidForRef(jule::Ptr<_1a8535877_Type>* _176223_t) {
	return (_1a853931a_Fn((*(_176223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a8552a4d_isBuiltinStrConvertable(jule::Ptr<_1a8535877_Type>* _176533_t) {
	return ((((!(_1a8536c41_Void((*(_176533_t)).ptr()))) && (_1a853931a_Fn((*(_176533_t)).ptr()) == nullptr)) && (_1a8539d54_Tup((*(_176533_t)).ptr()) == nullptr)) && (!(_1a853a0da_comptime((*(_176533_t)).ptr()))));;
}



inline jule::Ptr<_1a853d990_Prim> _1a8552d17_buildPrimType(jule::Str _176918_kind) {
	return jule::new_ptr<_1a853d990_Prim>(_1a853d990_Prim{._field_Kind=_176918_kind});;
}



inline void _1a8553675_applyImplicitCast(jule::Ptr<_1a83a8497_sema>* _179727_s, jule::Ptr<_1a8535877_Type>* _179742_dest, jule::Ptr<_1a85028cc_Data>* _179760_d, jule::Ptr<_1a81881cd_Token>* _17987_token, jule::Ptr<_1a83790c2_ReferenceStack> _179833_refers) {
	if (_1a85369aa_IsNil((*((*(_179760_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1a853d990_Prim> _18022_destPrim = _1a853802d_Prim((*(_179742_dest)).ptr());;
	if (((_18022_destPrim != nullptr) && _1a85421e1_IsAny(_18022_destPrim))) {
		jule::Ptr<_1a853d990_Prim> _18043_prim = _1a853802d_Prim((*((*(_179760_d))))._field_Type);;
		if (((_18043_prim == nullptr) || (!(_1a85421e1_IsAny(_18043_prim.ptr()))))) {
			_1a852ebd4_applyCastKind(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		};
		return;;
	};
	jule::Ptr<_1a82a2da8_Trait> _18112_dt = _1a8539837_Trait((*(_179742_dest)).ptr());;
	if ((_18112_dt != nullptr)) {
		jule::Ptr<_1a82a2da8_Trait> _18133_bt = _1a8539837_Trait((*((*(_179760_d))))._field_Type);;
		if (((_18133_bt == nullptr) || (_18133_bt != _18112_dt))) {
			_1a852e6c8_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
			return;;
		};
	};
	if (((_1a8538a67_TypeEnum((*(_179742_dest)).ptr()) != nullptr) && (_1a8538a67_TypeEnum((*((*(_179760_d))))._field_Type) == nullptr))) {
		_1a852e6c8_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		return;;
	};
}



inline jule::Bool _1a855393e_validTypeForXof(jule::Ptr<_1a8535877_Type>* _182725_t) {
	return ((((!(_1a8536c41_Void((*(_182725_t)).ptr()))) && (_1a853931a_Fn((*(_182725_t)).ptr()) == nullptr)) && (_1a8539d54_Tup((*(_182725_t)).ptr()) == nullptr)) && (!(_1a853a0da_comptime((*(_182725_t)).ptr()))));;
}



inline __jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log _1a8556942_buildSymbols(jule::Ptr<_1a819bc91_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1a83800c8_symBuilder> _1667_owner) {
	__jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log __jule_func_result;
	jule::Ptr<_1a83800c8_symBuilder> _176_sb = jule::new_ptr<_1a83800c8_symBuilder>(_1a83800c8_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_21ca95427_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1a829d997_SymTab>(nullptr)});;
	_1a8385e69_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a8556c72_collectImplicitImports(jule::Ptr<_1a83a8497_sema>* _3132_s, jule::Ptr<_1a829d997_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9cc4994:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1a8386332_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1a9cc4994;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1a9cc5c09:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1a9cc529c:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1a9cc5841:;
				};
			}
			_iter_next_1a9cc4994:;
			++it;
			goto _iter_begin_1a9cc4994;
		}
		_iter_end_1a9cc4994:;
	};
}



inline __jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log _1a85571a1_analyzePackage(jule::Slice<jule::Ptr<_1a819bc91_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags) {
	__jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a829d997_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a829d997_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a829d997_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9cc6d1a:;
		if (it != expr_end) {
			jule::Ptr<_1a819bc91_AST> _4814_f = *it;
			{
				jule::Ptr<_1a829d997_SymTab> _497_table;
				jule::Slice<_21ca95427_Log> _4918_errors;
				({
					__jule_tuple_x_1a829d997_SymTab__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8556942_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a829d997_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1a9cc6d1a:;
			++it;
			goto _iter_begin_1a9cc6d1a;
		}
		_iter_end_1a9cc6d1a:;
	};
	jule::Ptr<_1a83a8497_sema> _566_sema = jule::new_ptr<_1a83a8497_sema>(_1a83a8497_sema{._field_errors=jule::Slice<_21ca95427_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1a829d997_SymTab>>(nullptr), ._field_file=jule::Ptr<_1a829d997_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1a83a7870_commonSemaMeta>(_1a83a7870_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1a8337976_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1a838b14a_ImportInfo>(nullptr)})});;
	jule::Ptr<_1a829d997_SymTab> _636_firstTable = _476_tables[0LL];;
	_1a8556c72_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1a83c82ca_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a838d8bc_Package> _716_pkg = jule::new_ptr<_1a838d8bc_Package>(_1a838d8bc_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log _1a8557657_AnalyzePackage(jule::Slice<jule::Ptr<_1a819bc91_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags) {
	__jule_tuple_x_1a838d8bc_Package__jule_tuple_s_21ca95427_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a85571a1_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a829a752_FnIns> _1a85a8323_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1a9cd196d:;
			{
				static jule::Ptr<_1a829a752_FnIns> _2314_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85ada98_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1a9cd19d4:;
			{
				static jule::Ptr<_1a829a752_FnIns> _2614_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85adec7_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1a9cd1a4a:;
			{
				static jule::Ptr<_1a829a752_FnIns> _2914_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85ae406_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1a9cd1ac2:;
			{
				static jule::Ptr<_1a829a752_FnIns> _3214_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85ae835_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1a9cd1c6a:;
			{
				static jule::Ptr<_1a829a752_FnIns> _3514_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85aec64_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1a9cd1cd1:;
			{
				static jule::Ptr<_1a829a752_FnIns> _3814_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b03c4_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1a9cd1d47:;
			{
				static jule::Ptr<_1a829a752_FnIns> _4114_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b0bcc_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1a9cd1dbe:;
			{
				static jule::Ptr<_1a829a752_FnIns> _4414_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b2371_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1a9cd2001:;
			{
				static jule::Ptr<_1a829a752_FnIns> _4714_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b2b24_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1a9cd2067:;
			{
				static jule::Ptr<_1a829a752_FnIns> _5014_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b353c_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1a9cd1484:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9cd17e7:;
	};
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a85a860e_primTypeAlias(jule::Ptr<_1a8535877_Type>* _5723_k) {
	return jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1a83cc1ad_Var> _1a85abeb4_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1a9cd8a41:;
			{
				static jule::Ptr<_1a83cc1ad_Var> _8814_v = jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=_1a85a891c_primNil}), ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827ed85_NewNil()})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1a9cd8ada:;
			{
				static jule::Ptr<_1a83cc1ad_Var> _10314_v = jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e5e3_NewBool(true)})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1a9cd8b62:;
			{
				static jule::Ptr<_1a83cc1ad_Var> _11614_v = jule::new_ptr<_1a83cc1ad_Var>(_1a83cc1ad_Var{._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1a85ac305_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1a8503a54_Value>(_1a8503a54_Value{._field_Expr=jule::Ptr<_1a81a302d_Expr>(nullptr), ._field_Data=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a827e5e3_NewBool(false)})}), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1a83cc1ad_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1a9cd826b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9cd2ee1:;
	};
}



inline jule::Ptr<_1a8534a85_TypeAlias> _1a85ac305_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a9cdd97a:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _13614_t = _1a85a860e_primTypeAlias(&(_1a85a8ec2_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1a9cddae0:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _13914_t = _1a85a860e_primTypeAlias(&(_1a85a92be_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1a9cddb56:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _14214_t = _1a85a860e_primTypeAlias(&(_1a85a9577_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a9cddc33:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _14514_t = _1a85a860e_primTypeAlias(&(_1a85a9830_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a9cddc99:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _14814_t = _1a85a860e_primTypeAlias(&(_1a85a9ad8_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a9cddd10:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _15114_t = _1a85a860e_primTypeAlias(&(_1a85a9ea1_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a9cddd76:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _15414_t = _1a85a860e_primTypeAlias(&(_1a85aa1e3_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a9cddddc:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _15714_t = _1a85a860e_primTypeAlias(&(_1a85aa48a_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a9cddeb9:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _16014_t = _1a85a860e_primTypeAlias(&(_1a85aa9eb_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a9cde041:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _16314_t = _1a85a860e_primTypeAlias(&(_1a85ab05c_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a9cde0b8:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _16614_t = _1a85a860e_primTypeAlias(&(_1a85ab315_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a9cde140:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _16914_t = _1a85a860e_primTypeAlias(&(_1a85ab7ee_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a9cde1b7:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _17214_t = _1a85a860e_primTypeAlias(&(_1a85aba41_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a9cde23e:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _17514_t = _1a85a860e_primTypeAlias(&(_1a85abc50_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a9cde2b6:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _17814_t = _1a85a860e_primTypeAlias(&(_1a85aaca4_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a9cde33d:;
			{
				static jule::Ptr<_1a8534a85_TypeAlias> _18114_t = _1a85a860e_primTypeAlias(&(_1a85aa743_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1a9cd91a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9cd927d:;
	};
}



inline jule::Any _1a85ac58b_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1a83cc1ad_Var> _1896_v = _1a85abeb4_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1a829a752_FnIns> _1936_f = _1a85a8323_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type64);;
	};
	jule::Ptr<_1a8534a85_TypeAlias> _1976_ta = _1a85ac305_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1a85ac855_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1a9ce8bb6:;
			{
				static jule::Ptr<_1a829a752_FnIns> _20714_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b56d7_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1a9ce90c3:;
			{
				static jule::Ptr<_1a829a752_FnIns> _21014_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b5b16_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1a9ce914a:;
			{
				static jule::Ptr<_1a829a752_FnIns> _21314_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b6045_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1a9ce7588:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9ce79ea:;
	};
}



inline jule::Any _1a85acb1e_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1a9ce93d1:;
			{
				static jule::Ptr<_1a829a752_FnIns> _22314_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b396b_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1a9ceb405:;
			{
				static jule::Ptr<_1a829a752_FnIns> _22614_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b3d9a_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1a9ceb46b:;
			{
				static jule::Ptr<_1a829a752_FnIns> _22914_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b42c9_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1a9ce9447:;
			{
				static jule::Ptr<_1a829a752_FnIns> _23214_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b494a_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1a9ce94be:;
			{
				static jule::Ptr<_1a829a752_FnIns> _23514_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b4d79_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1a9ceb59d:;
			{
				static jule::Ptr<_1a829a752_FnIns> _23814_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1a8297694_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b52a8_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1a9ce91d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9ceb14c:;
	};
}



inline jule::Any _1a85acee8_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1a9ceb845:;
			{
				static jule::Ptr<_1a829a752_FnIns> _24814_f = jule::new_ptr<_1a829a752_FnIns>(_1a829a752_FnIns{._field_Owner=jule::Ptr<_1a81c246a_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1a8297694_Fn>(_1a8297694_Fn{._field_sema=jule::Ptr<_1a83a8497_sema>(nullptr), ._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a81aae04_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a81aae04_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1a8295609_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a8295bc0_Param>>(nullptr), ._field_Owner=jule::Ptr<_1a81be610_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1a829a752_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1a8533e91_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1a82995ec_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a8535877_Type>(nullptr), ._field_Scope=jule::Ptr<_1a8355466_Scope>(nullptr), ._field_Refers=jule::Ptr<_1a83790c2_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1a85028cc_Data>,jule::Ptr<_1a850489b_eval>*,jule::Ptr<_1a81a6c57_FnCallExpr>*,jule::Ptr<_1a85028cc_Data>*>(_1a85b6474_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1a9ceb636:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9d0085a:;
	};
}



inline jule::Any _1a85ad2e5_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1a9d027c4:;
			{
				return _1a85acb1e_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1a9d0286d:;
			{
				return _1a85ac855_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1a9d0253d:;
			{
				return _1a85acee8_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_1a9d01edd:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9d00d22:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85ad669_builtinCallerError(jule::Ptr<_1a850489b_eval>* _27328_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _2816_expr = _1a8523689_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_1a8502cea_IsNil(_2816_expr.ptr())) {
		_1a8504d74_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1a83b8122_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_1a85a8ec2_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_1a852e1bc_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_1a85a8ec2_primAny), &(_2866_token), _1a8507daa_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_1a85028cc_Data> _2996_d = _1a852ede3_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_1a8293519_BuiltinErrorCallExprModel>(_1a8293519_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1a829a752_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type21);
	return _2996_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85ada98_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _30428_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _30443_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a81a302d_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_1a85028cc_Data> _3146_expr = _1a8523689_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8552a4d_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_1a8504d74_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a83ca84e_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*_3136_arg.alloc)._field_Token), _1a8507daa_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_1a85028cc_Data> _3266_d = _1a852ede3_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_1a8290d63_BuiltinPrintCallExprModel>(_1a8290d63_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type25);
	return _3266_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85adec7_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _33130_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _33145_fc, jule::Ptr<_1a85028cc_Data>* _33172_d) {
	(*(_33172_d))=_1a85ada98_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_1a8291160_BuiltinPrintlnCallExprModel>(_1a8291160_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_1a8290d63_BuiltinPrintCallExprModel>(&__jule_any_type25)))._field_Expr}), &__jule_any_type26);
	return (*(_33172_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85ae406_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _34326_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _34341_fc, jule::Ptr<_1a85028cc_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_1a8504d74_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _3526_t = _1a8522bb6_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_1a8504d74_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a85524ed_isValidForSptrType(&((*(_3526_t))._field_Type))))) {
		jule::Ptr<_1a81c246a_StructIns> _3637_s = _1a85395a1_Struct((*(_3526_t))._field_Type.ptr());;
		if ((((_3637_s != nullptr) && ((*_3637_s.alloc)._field_Decl != nullptr)) && (*(*(_3637_s))._field_Decl.alloc)._field_Binded)) {
			_1a8504d74_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a8535877_Type> _3777_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*(_3526_t))._field_Type;
		jule::Ptr<_1a85028cc_Data> _3807_init = _1a8523689_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3777_old;
		if ((_3807_init != nullptr)) {
			jule::Ptr<_1a81881cd_Token> _3858_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a83b8122_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (*((*(_34326_e))))._field_target._field_mutable, false, &((*(_3526_t))._field_Type), &(_3807_init), &(_3858_token));
			_1a83b388c_checkAssignType((*((*(_34326_e))))._field_s, false, &((*(_3526_t))._field_Type), &(_3807_init), _3858_token, _1a8507daa_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1a8291539_BuiltinNewCallExprModel>(_1a8291539_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=(*_3807_init.alloc)._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1a8291539_BuiltinNewCallExprModel>(_1a8291539_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85ae835_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40528_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40543_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_40543_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_40543_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_40528_e)).ptr(), (*((*((*(_40543_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _4146_expr = _1a8523689_evalExpr((*(_40528_e)), (*((*(_40543_fc))))._field_Args[0LL]);;
	if ((_4146_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a853802d_Prim((*(_4146_expr))._field_Type.ptr()) == nullptr) || (!(_1a8541e5a_IsStr(_1a853802d_Prim((*(_4146_expr))._field_Type).ptr()))))) {
		_1a8504d74_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a85028cc_Data> _4236_d = _1a852ede3_buildVoidData();;
	(*(_4236_d))._field_Model=jule::Any(jule::new_ptr<_1a8291913_BuiltinPanicCallExprModel>(_1a8291913_BuiltinPanicCallExprModel{._field_Token=(*((*(_40543_fc))))._field_Token, ._field_Expr=(*(_4146_expr))._field_Model}), &__jule_any_type27);
	return _4236_d;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85aec64_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _43127_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _43142_fc, jule::Ptr<_1a85028cc_Data>* _43169_d) {
	if (((*((*(_43142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_43142_fc))))._field_Args.len() == 1LL)) {
			_1a8504d74_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a8504d74_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_43142_fc))))._field_Args.len() > 3LL)) {
		_1a8504d74_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a85028cc_Data> _4446_t = _1a8522875_evalExprKind((*(_43127_e)), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4446_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4446_t))._field_Decl))) {
		_1a8504d74_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a8539084_Slc((*(_4446_t))._field_Type.ptr()) == nullptr)) {
		_1a8504d74_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_4446_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_43169_d))))._field_Type=(*(_4446_t))._field_Type;
	jule::Ptr<_1a85028cc_Data> _4596_lenExpr = _1a8523689_evalExpr(_1a83b2e30_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[1LL]);;
	if ((_4596_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a850db2a_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4596_lenExpr), (*((*((*(_43142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a8291db9_BuiltinMakeCallExprModel> _4666_model = jule::new_ptr<_1a8291db9_BuiltinMakeCallExprModel>(_1a8291db9_BuiltinMakeCallExprModel{._field_Type=(*(_4446_t))._field_Type, ._field_Len=(*(_4596_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_43169_d))))._field_Model=jule::Any(_4666_model, &__jule_any_type117);
	if (((*((*(_43142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a85028cc_Data> _4727_capExpr = _1a8523689_evalExpr(_1a83b2e30_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[2LL]);;
		if ((_4727_capExpr == nullptr)) {
			return (*(_43169_d));;
		};
		_1a850db2a_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4727_capExpr), (*((*((*(_43142_fc))))._field_Args[2LL]))._field_Token);
		(*(_4666_model))._field_Cap=(*(_4727_capExpr))._field_Model;
	};
	return (*(_43169_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b03c4_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _48229_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _48244_fc, jule::Ptr<_1a85028cc_Data>* _48271_d) {
	if (((*((*(_48244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48244_fc))))._field_Args.len() == 1LL)) {
			_1a8504d74_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a8504d74_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a81a302d_Expr> _4926_firstArg = (*((*(_48244_fc))))._field_Args[0LL];;
	jule::Ptr<_1a85028cc_Data> _4936_t = _1a8523689_evalExpr((*(_48229_e)), _4926_firstArg);;
	if ((_4936_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8542e8e_Slc> _4986_s = _1a8539084_Slc((*(_4936_t))._field_Type.ptr());;
	if ((_4986_s == nullptr)) {
		_1a8504d74_pushErr((*(_48229_e)).ptr(), (*(_4926_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a83b8122_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4936_t))._field_Type), &(_4936_t), &((*_4926_firstArg.alloc)._field_Token))) {
		_1a83b388c_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4936_t))._field_Type), &(_4936_t), (*_4926_firstArg.alloc)._field_Token, _1a8507daa_getOwnerRefers((*(_48229_e)).ptr()));
	};
	jule::Ptr<_1a8535877_Type> _5136_prefix = (*((*(_48229_e))))._field_prefix;;
	(*((*(_48229_e))))._field_prefix=(*(_4936_t))._field_Type;
	__JULE_DEFER({
		(*((*(_48229_e))))._field_prefix=_5136_prefix;
	});;
	(*(_48271_d))=jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=(*(_4936_t))._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});
	jule::Ptr<_1a81a302d_Expr> _5216_secondArg = (*((*(_48244_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5216_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1aa7ebac5:;
			{
				if (((*((*(_48244_fc))))._field_Args.len() > 2LL)) {
					_1a8504d74_pushErr((*(_48229_e)).ptr(), (*((*((*(_48244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a85028cc_Data> _5287_e1 = _1a8523689_evalExpr((*(_48229_e)), (*((*(_5216_secondArg))._field_Kind.unsafe_cast_ptr<_1a81a54b4_VariadicExpr>()))._field_Expr);;
				if ((_5287_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a853802d_Prim((*(_4986_s))._field_Elem.ptr()) != nullptr) && _1a85403ba_IsU8(_1a853802d_Prim((*(_4986_s))._field_Elem).ptr()))) {
					if (((_1a853802d_Prim((*(_5287_e1))._field_Type) != nullptr) && _1a8541e5a_IsStr(_1a853802d_Prim((*(_5287_e1))._field_Type).ptr()))) {
						_1a85329ea_makeVariadic(&(_5287_e1), _1a85aaca4_primU8);
						(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292293_BuiltinAppendCallExprModel>(_1a8292293_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type24);
						return (*(_48271_d));;
					};
				};
				if ((!(_1a8537c97_Variadicable((*(_5287_e1))._field_Type)))) {
					_1a8504d74_pushErr((*(_48229_e)).ptr(), (*(_5216_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_5287_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1a85329ea_makeVariadic(&(_5287_e1), (*(_4986_s))._field_Elem);
				(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1a83b8122_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5287_e1), &((*_5216_secondArg.alloc)._field_Token))) {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
					_1a83b388c_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5287_e1), (*_5216_secondArg.alloc)._field_Token, _1a8507daa_getOwnerRefers((*(_48229_e)).ptr()));
				} else {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292293_BuiltinAppendCallExprModel>(_1a8292293_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type24);
				return (*(_48271_d));;
			}
		}
		_match_end_1aa7eba4d:;
	};
	jule::Ptr<_1a85028cc_Data> _5716_e1 = _1a8523689_evalExpr((*(_48229_e)), _5216_secondArg);;
	if ((_5716_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a828c832_SliceExprModel> _5766_slice = jule::new_ptr<_1a828c832_SliceExprModel>(_1a828c832_SliceExprModel{._field_ElemType=(*(_4986_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_48244_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_48244_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa808d68:;
		if (it != expr_end) {
			jule::Ptr<_1a81a302d_Expr> _58014_arg = *it;
			{
				_5716_e1=_1a8523689_evalExpr((*(_48229_e)), _58014_arg);
				if ((_5716_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5716_e1))._field_Type.alloc)._field_Variadic) {
					_1a8504d74_pushErr((*(_48229_e)).ptr(), (*(_58014_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1a83b8122_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5716_e1), &((*_58014_arg.alloc)._field_Token))) {
					_1a83b388c_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5716_e1), (*_58014_arg.alloc)._field_Token, _1a8507daa_getOwnerRefers((*(_48229_e)).ptr()));
				};
				(*(_5766_slice))._field_Elems=jule::append((*_5766_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5716_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1aa808d68:;
			++it;
			goto _iter_begin_1aa808d68;
		}
		_iter_end_1aa808d68:;
	};
	(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292293_BuiltinAppendCallExprModel>(_1a8292293_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=jule::Any(_5766_slice, &__jule_any_type80)}), &__jule_any_type24);
	return (*(_48271_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b079d_callerCopySlice(jule::Ptr<_1a85028cc_Data>* _60225_dest, jule::Ptr<_1a850489b_eval>* _60243_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _60258_fc, jule::Ptr<_1a85028cc_Data>* _60285_d) {
	if ((!((*((*(_60225_dest))))._field_Mutable))) {
		_1a8504d74_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a85028cc_Data> _6076_src = _1a8523689_evalExpr((*(_60243_e)), (*((*(_60258_fc))))._field_Args[1LL]);;
	if ((_6076_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8542e8e_Slc> _6116_slc = _1a8539084_Slc((*(_6076_src))._field_Type.ptr());;
	if ((_6116_slc != nullptr)) {
		if (((!((*(_6076_src))._field_Mutable)) && _1a853725d_Mutable((*_6116_slc.alloc)._field_Elem.ptr()))) {
			_1a8504d74_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1a85360b4_Equal((*((*(_60225_dest))))._field_Type, (*(_6076_src))._field_Type)))) {
			_1a8504d74_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1a853d990_Prim> _6213_destPrim = _1a853802d_Prim((*(_1a8539084_Slc((*((*(_60225_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1a853d990_Prim> _6223_prim = _1a853802d_Prim((*(_6076_src))._field_Type);;
		if (((((_6213_destPrim == nullptr) || (_6223_prim == nullptr)) || (!(_1a8541e5a_IsStr(_6223_prim.ptr())))) || (!(_1a85403ba_IsU8(_6213_destPrim.ptr()))))) {
			_1a8504d74_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1a8535c73_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_60285_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_60285_d))))._field_Model=jule::Any(jule::new_ptr<_1a8293140_BuiltinCopyCallExprModel>(_1a8293140_BuiltinCopyCallExprModel{._field_Dest=(*(_60225_dest)), ._field_Src=_6076_src}), &__jule_any_type28);
	return (*(_60285_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b0bcc_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _63627_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _63642_fc, jule::Ptr<_1a85028cc_Data>* _63669_d) {
	if (((*((*(_63642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63642_fc))))._field_Args.len() == 1LL)) {
			_1a8504d74_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1a8504d74_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_63642_fc))))._field_Args.len() > 2LL)) {
		_1a8504d74_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _6496_dest = _1a8523689_evalExpr((*(_63627_e)), (*((*(_63642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6496_dest == nullptr)) {
			_case_begin_1aa81e6db:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8539084_Slc((*(_6496_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa820511:;
			{
				return _1a85b079d_callerCopySlice(&(_6496_dest), _63627_e, _63642_fc, _63669_d);;
			}
		}
		else {
			_case_begin_1aa81e323:;
			{
				_1a8504d74_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa81c673:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85b1051_callerLenSlice(jule::Ptr<_1a85028cc_Data>* _66124_expr, jule::Ptr<_1a85028cc_Data>* _66142_d) {
	(*((*(_66142_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_66142_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292590_BuiltinLenCallExprModel>(_1a8292590_BuiltinLenCallExprModel{._field_Expr=(*(_66124_expr))}), &__jule_any_type118);
	return (*(_66142_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b13c5_callerLenMap(jule::Ptr<_1a85028cc_Data>* _66922_expr, jule::Ptr<_1a85028cc_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_66940_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292590_BuiltinLenCallExprModel>(_1a8292590_BuiltinLenCallExprModel{._field_Expr=(*(_66922_expr))}), &__jule_any_type118);
	return (*(_66940_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b1749_callerLenArr(jule::Ptr<_1a85028cc_Data>* _67722_expr, jule::Ptr<_1a85028cc_Data>* _67740_d) {
	(*((*(_67740_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_67740_d))))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>((*(_1a8538ced_Arr((*((*(_67722_expr))))._field_Type.ptr())))._field_N));
	(*((*(_67740_d))))._field_Model=jule::Any((*((*(_67740_d))))._field_Constant, &__jule_any_type15);
	return (*(_67740_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b1abd_callerLenStr(jule::Ptr<_1a85028cc_Data>* _68422_expr, jule::Ptr<_1a85028cc_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Type=_1a8500a95_lenKind();
	if (_1a8503317_IsConst((*(_68422_expr)).ptr())) {
		(*((*(_68440_d))))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_1a8280c98_ReadStr((*((*(_68422_expr))))._field_Constant.ptr()).len()));
		(*((*(_68440_d))))._field_Model=jule::Any((*((*(_68440_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1a8292590_BuiltinLenCallExprModel>(_1a8292590_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type118);
	};
	return (*(_68440_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b1e42_callerLenComptime(jule::Ptr<_1a85028cc_Data>* _69727_d, jule::I64 _69737_n) {
	(*((*(_69727_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_69727_d))))._field_Constant=static__1a827e0a4_NewI64(static_cast<jule::I64>(_69737_n));
	(*((*(_69727_d))))._field_Model=jule::Any((*((*(_69727_d))))._field_Constant, &__jule_any_type15);
	return (*(_69727_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b2371_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _70426_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _70441_fc, jule::Ptr<_1a85028cc_Data>* _70468_d) {
	if (((*((*(_70441_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_70426_e)).ptr(), (*((*(_70441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_70441_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _7126_dest = _1a8523348_evalExpr1((*(_70426_e)), (*((*(_70441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7126_dest == nullptr)) {
			_case_begin_1aa82e8c7:;
			{
				return nullptr;;
			}
		}
		else if ((_1a8539084_Slc((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa8306ec:;
			{
				return _1a85b1051_callerLenSlice(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a8538ced_Arr((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa830763:;
			{
				return _1a85b1749_callerLenArr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a8539abd_Map((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa82e575:;
			{
				return _1a85b13c5_callerLenMap(&(_7126_dest), _70468_d);;
			}
		}
		else if (((_1a853802d_Prim((*(_7126_dest))._field_Type.ptr()) != nullptr) && _1a8541e5a_IsStr(_1a853802d_Prim((*(_7126_dest))._field_Type).ptr()))) {
			_case_begin_1aa82e5db:;
			{
				return _1a85b1abd_callerLenStr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1a853a371_comptimeStructFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa82e652:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853a371_comptimeStructFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a853a88d_comptimeEnumFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa82e6b8:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853a88d_comptimeEnumFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a853b65d_comptimeTypeInfos((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa830851:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853b65d_comptimeTypeInfos((*(_7126_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1a853adaa_comptimeParams((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa8308b7:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853adaa_comptimeParams((*(_7126_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1a853bb7a_comptimeStatics((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa83092d:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853bb7a_comptimeStatics((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1a853cbd1_comptimeFiles((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa830994:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853cbd1_comptimeFiles((*(_7126_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1a853c6b4_comptimeDecls((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa830a0a:;
			{
				return _1a85b1e42_callerLenComptime(_70468_d, (*(_1a853c6b4_comptimeDecls((*(_7126_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1aa82e50e:;
			{
				_1a8504d74_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa82c85e:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85b26e5_callerCapSlice(jule::Ptr<_1a85028cc_Data>* _74424_expr, jule::Ptr<_1a85028cc_Data>* _74442_d) {
	(*((*(_74442_d))))._field_Type=_1a8500a95_lenKind();
	(*((*(_74442_d))))._field_Model=jule::Any(jule::new_ptr<_1a829288c_BuiltinCapCallExprModel>(_1a829288c_BuiltinCapCallExprModel{._field_Expr=(*(_74424_expr))}), &__jule_any_type119);
	return (*(_74442_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b2b24_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _75226_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _75241_fc, jule::Ptr<_1a85028cc_Data>* _75268_d) {
	if (((*((*(_75241_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_75226_e)).ptr(), (*((*(_75241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75241_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _7606_dest = _1a8523689_evalExpr((*(_75226_e)), (*((*(_75241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7606_dest == nullptr)) {
			_case_begin_1aa8432d1:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7606_dest))._field_Decl) {
			_case_begin_1aa844106:;
			{
				_1a8504d74_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8539084_Slc((*(_7606_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa84416c:;
			{
				return _1a85b26e5_callerCapSlice(&(_7606_dest), _75268_d);;
			}
		}
		else {
			_case_begin_1aa842e18:;
			{
				_1a8504d74_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa83e970:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85b310d_callerDeleteMap(jule::Ptr<_1a850489b_eval>* _77525_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _77540_fc, jule::Ptr<_1a85028cc_Data>* _77567_expr, jule::Ptr<_1a85028cc_Data>* _77585_d) {
	if ((!((*((*(_77567_expr))))._field_Mutable))) {
		_1a8504d74_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_77585_d))=_1a852ede3_buildVoidData();
	jule::Ptr<_1a8292c66_BuiltinDeleteCallExprModel> _7806_model = jule::new_ptr<_1a8292c66_BuiltinDeleteCallExprModel>(_1a8292c66_BuiltinDeleteCallExprModel{._field_Dest=(*(_77567_expr)), ._field_Key=jule::Ptr<_1a85028cc_Data>(nullptr)});;
	if (((*((*(_77540_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a85028cc_Data> _7847_key = _1a8523689_evalExpr((*(_77525_e)), (*((*(_77540_fc))))._field_Args[1LL]);;
		{
			
			if ((_7847_key == nullptr)) {
				_case_begin_1aa84a20b:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7847_key))._field_Decl) {
				_case_begin_1aa848d64:;
				{
					_1a8504d74_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1aa848ced:;
				{
					;
					jule::Ptr<_1a8535877_Type> _7938_keyType = (*(_1a8539abd_Map((*((*(_77567_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1a83b388c_checkAssignType((*((*(_77525_e))))._field_s, false, &(_7938_keyType), &(_7847_key), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, _1a8507daa_getOwnerRefers((*(_77525_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1aa848c87:;
		};
		(*(_7806_model))._field_Key=_7847_key;
	};
	(*((*(_77585_d))))._field_Model=jule::Any(_7806_model, &__jule_any_type29);
	return (*(_77585_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b353c_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _80429_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _80444_fc, jule::Ptr<_1a85028cc_Data>* _80471_d) {
	if (((*((*(_80444_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_80429_e)).ptr(), (*((*(_80444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_80444_fc))))._field_Args.len() > 2LL)) {
		_1a8504d74_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _8126_dest = _1a8523689_evalExpr((*(_80429_e)), (*((*(_80444_fc))))._field_Args[0LL]);;
	{
		
		if ((_8126_dest == nullptr)) {
			_case_begin_1aa851bb3:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8126_dest))._field_Decl) {
			_case_begin_1aa8529d8:;
			{
				_1a8504d74_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a8539abd_Map((*(_8126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa852a4e:;
			{
				return _1a85b310d_callerDeleteMap(_80429_e, _80444_fc, &(_8126_dest), _80471_d);;
			}
		}
		else {
			_case_begin_1aa8517ea:;
			{
				_1a8504d74_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa84eb4a:;
	};
}



inline jule::Ptr<_1a85028cc_Data> _1a85b396b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _82740_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _82755_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_82755_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*(_82755_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82755_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _8366_d = _1a8522875_evalExprKind((*(_82740_e)), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8366_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a829a752_FnIns> _8402_f = _1a853931a_Fn((*(_8366_d))._field_Type.ptr());;
	if ((_8402_f != nullptr)) {
		if (_1a829bc1a_IsBuiltin(_8402_f)) {
			_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8402_f.alloc)._field_Generics.len() != (*((*_8402_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a81c246a_StructIns> _8512_s = _1a85395a1_Struct((*(_8366_d))._field_Type);;
	if (((_8512_s != nullptr) && ((*_8512_s.alloc)._field_Generics.len() != (*((*_8512_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a853a0da_comptime((*(_8366_d))._field_Type)) {
		_1a8504d74_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_8366_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834bbdd_buildComptimeTypeInfoData(&((*((*(_82740_e))))._field_s), &((*(_8366_d))._field_Type));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b3d9a_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _86341_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _86356_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_86356_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_86341_e)).ptr(), (*((*(_86356_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_86356_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _8716_d = _1a8523689_evalExpr((*(_86341_e)), (*((*(_86356_fc))))._field_Args[0LL]);;
	if ((_8716_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8500de7_isGoodValueToInfer(&(_8716_d))))) {
		_1a8504d74_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_8716_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1a834c02e_buildComptimeValue(&(_8716_d));;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b42c9_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _88338_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _88353_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_88353_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_88338_e)).ptr(), (*((*((*(_88353_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a82273d2_Const> _8876_constant = static__1a827e0a4_NewI64(static_cast<jule::I64>((*((*((*(_88353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9ea1_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8876_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8876_constant});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b494a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _89538_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _89553_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_89553_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_89538_e)).ptr(), (*((*((*(_89553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a8343256_comptimeFile>(_1a8343256_comptimeFile{._field_file=(*((*((*(_89538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b4d79_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _90839_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _90854_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_90854_fc))))._field_Args.len() > 0LL)) {
		_1a8504d74_pushErr((*(_90839_e)).ptr(), (*((*((*(_90854_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a83417d7_comptimeFiles>(_1a83417d7_comptimeFiles{._field_files=(*((*((*(_90839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b52a8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _92143_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _92158_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_92158_fc))))._field_Args.len() > 2LL)) {
		_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 0LL)) {
		_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 1LL)) {
		_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa871067:;
			{
				goto _match_end_1aa872343;
			}
		}
		else {
			_case_begin_1aa8723ba:;
			{
				_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1a85051d7_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa872343:;
	};
	jule::Ptr<_1a81881cd_Token> _9426_ident = (*((*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a81a4848_IdentExpr>(&__jule_any_type42)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_92143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1)) {
			_case_begin_1aa874950:;
			{
				goto _match_end_1aa874b81;
			}
		}
		else {
			_case_begin_1aa874be7:;
			{
				_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aa874b81:;
	};
	jule::Ptr<_1a835cacd_scopeChecker> _9516_sc = (*((*(_92143_e))))._field_lookup.cast_ptr<_1a835cacd_scopeChecker>((jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data1);;
	jule::Ptr<_1a8534a85_TypeAlias> _9526_alias = jule::new_ptr<_1a8534a85_TypeAlias>(_1a8534a85_TypeAlias{._field_Scope=(*(_9516_sc))._field_tree, ._field_Public=_1a83a5692_IsPub((*(_9426_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9426_ident, ._field_Ident=(*_9426_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1a853d088_TypeSym>(_1a853d088_TypeSym{._field_Decl=jule::Ptr<_1a819dbe9_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1a8535877_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>(nullptr)});;
	jule::Ptr<_1a85028cc_Data> _9626_t = _1a8522bb6_eval1((*(_92143_e)), (*((*(_92158_fc))))._field_Args[1LL]);;
	if ((_9626_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9626_t))._field_Decl) {
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9626_t))._field_Type;
	} else {
		jule::Ptr<_1a8337976_comptimeTypeInfo> _9697_cti = _1a853b8e4_comptimeTypeInfo((*(_9626_t))._field_Type.ptr());;
		if ((_9697_cti == nullptr)) {
			_1a8504d74_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1a85051d7_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9697_cti))._field_base;
	};
	_1a8362c48_checkTypeAlias(_9516_sc, &(_9526_alias));
	return _1a852ede3_buildVoidData();;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b56d7_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98135_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98150_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<_1a85028cc_Data> _9826_result = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9ad8_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if (((*((*(_98150_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_98135_e)).ptr(), (*((*(_98150_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9826_result;;
	};
	if (((*((*(_98150_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _9946_d = _1a8522875_evalExprKind((*(_98135_e)), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9946_d == nullptr)) {
		return _9826_result;;
	};
	if ((!(_1a855393e_validTypeForXof(&((*(_9946_d))._field_Type))))) {
		_1a8504d74_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_9946_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9826_result))._field_Model=jule::Any(jule::new_ptr<_1a8293816_SizeofExprModel>(_1a8293816_SizeofExprModel{._field_Expr=(*(_9946_d))._field_Model}), &__jule_any_type120);
	return _9826_result;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b5b16_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100636_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100651_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<_1a85028cc_Data> _10076_result = jule::new_ptr<_1a85028cc_Data>(_1a85028cc_Data{._field_untyped=false, ._field_Type=_1a85a9ad8_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a82273d2_Const>(nullptr)});;
	if (((*((*(_100651_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_100636_e)).ptr(), (*((*(_100651_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10076_result;;
	};
	if (((*((*(_100651_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _10196_d = _1a8522875_evalExprKind((*(_100636_e)), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10196_d == nullptr)) {
		return _10076_result;;
	};
	if ((!(_1a855393e_validTypeForXof(&((*(_10196_d))._field_Type))))) {
		_1a8504d74_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a8535c73_Str((*(_10196_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10076_result))._field_Model=jule::Any(jule::new_ptr<_1a8293eba_AlignofExprModel>(_1a8293eba_AlignofExprModel{._field_Expr=(*(_10196_d))._field_Model}), &__jule_any_type121);
	return _10076_result;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b6045_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103133_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103148_fc, jule::Ptr<_1a85028cc_Data>* ) {
	if (((*((*(_103148_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_103133_e)).ptr(), (*((*(_103148_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103148_fc))))._field_Args.len() > 1LL)) {
		_1a8504d74_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1a85028cc_Data> _10406_d = _1a8523689_evalExpr((*(_103133_e)), (*((*(_103148_fc))))._field_Args[0LL]);;
	if ((_10406_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a8537a11_GC((*(_10406_d))._field_Type.ptr())))) {
		_1a8504d74_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a85028cc_Data> _10496_result = _1a852ede3_buildVoidData();;
	(*(_10496_result))._field_Model=jule::Any(jule::new_ptr<_1a8294828_FreeExprModel>(_1a8294828_FreeExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type30);
	return _10496_result;;
}



inline jule::Ptr<_1a85028cc_Data> _1a85b6474_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105444_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105459_fc, jule::Ptr<_1a85028cc_Data>* _105486_d) {
	if ((!(_1a8505869_isUnsafe((*(_105444_e)).ptr())))) {
		_1a8504d74_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_105459_fc))))._field_Args.len() < 1LL)) {
		_1a8504d74_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a85028cc_Data> _10646_argd = _1a8523689_evalExpr((*(_105444_e)), (*((*(_105459_fc))))._field_Args[0LL]);;
	if ((_10646_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a853802d_Prim((*(_10646_argd))._field_Type.ptr()) == nullptr) || (!(_1a8541e5a_IsStr(_1a853802d_Prim((*(_10646_argd))._field_Type).ptr()))))) {
		_1a8504d74_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1a8535c73_Str((*(_10646_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a8503317_IsConst(_10646_argd.ptr()))) || (!(_1a8283394_IsStr((*(_10646_argd))._field_Constant.ptr()))))) {
		_1a8504d74_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a85028cc_Data> _10796_r = _1a852ede3_buildVoidData();;
	jule::Ptr<_1a829a752_FnIns> _10816_f = _1a853931a_Fn((*((*(_105486_d))))._field_Type);;
	if (((*(_10816_f))._field_Generics.len() > 0LL)) {
		(*(_10796_r))._field_Type=(*((*(_10816_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1a829452b_BackendEmitExprModel> _10866_model = jule::new_ptr<_1a829452b_BackendEmitExprModel>(_1a829452b_BackendEmitExprModel{._field_Code=_1a8280c98_ReadStr((*(_10646_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_105459_fc))))._field_Args.len() > 1LL)) {
		(*(_10866_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_105459_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_105459_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1aa8a1d01:;
			if (it != expr_end) {
				jule::Ptr<_1a81a302d_Expr> _109215_arg = *it;
				{
					_10646_argd=_1a8522bb6_eval1((*(_105444_e)), _109215_arg);
					if ((_10646_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10646_argd))._field_Decl) {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_10646_argd))._field_Type, &__jule_any_type87); __jule_collection; }));
					} else {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10646_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1aa8a1d01:;
				++it;
				goto _iter_begin_1aa8a1d01;
			}
			_iter_end_1aa8a1d01:;
		};
	};
	(*_10796_r.alloc)._field_Model=jule::Any(_10866_model, &__jule_any_type23);
	return _10796_r;;
}



inline jule::Ptr<_1a8d4ad07_FileInfo> _1a8d4db1d_ParseFile(jule::Ptr<_1a818dc83_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a8d4ad07_FileInfo> _276_finf = jule::new_ptr<_1a8d4ad07_FileInfo>(_1a8d4ad07_FileInfo{._field_Ast=jule::Ptr<_1a819bc91_AST>(nullptr), ._field_Errors=jule::Slice<_21ca95427_Log>(nullptr)});;
	({
		__jule_tuple_x_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_assign_result = _1a8d98e87_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a819bc91_AST__jule_tuple_s_21ca95427_Log _1a8d98e87_parseFileset(jule::Ptr<_1a818dc83_Fileset> _5521_f) {
	__jule_tuple_x_1a819bc91_AST__jule_tuple_s_21ca95427_Log __jule_func_result;
	jule::Ptr<_1a8db9639_parser> _566_p = jule::new_ptr<_1a8db9639_parser>(_1a8db9639_parser{._field_ast=jule::Ptr<_1a819bc91_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1a819d116_Directive>>(nullptr), ._field_errors=jule::Slice<_21ca95427_Log>(nullptr), ._field_ep=jule::Ptr<_1a8da8d54_exprBuilder>(nullptr)});;
	_1a8dc966b_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a81adce7_ScopeTree> _1a8d99817_newScope(void) {
	return jule::new_ptr<_1a81adce7_ScopeTree>(_1a81adce7_ScopeTree{._field_Parent=jule::Ptr<_1a81adce7_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1a81ad687_Stmt>(nullptr), ._field_End=jule::Ptr<_1a81881cd_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a8d99b9c_isSt(jule::Ptr<_1a81881cd_Token> _149_current, jule::Ptr<_1a81881cd_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a8d9a021_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _2026_tokens, jule::I64* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a81881cd_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U64>(17LLU)) || ((*_263_prev.alloc)._field_Id == static_cast<jule::U64>(5LLU))) || (_1a8188c28_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a8d9a3d9_nextStPos(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3415_tokens, jule::I64 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _356_braceN = 0LL;;
	jule::I64 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1a81881cd_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa92c6d9:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1a8d9a021_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8d99b9c_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1aa931325;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1aa92b276;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa92c92b:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8d99b9c_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1aa931325;
							};
						};
						goto _iter_next_1aa92b276;
					}
				}
				_match_end_1aa92c882:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1aa92b276;
			};
			if ((_366_i > _3440_start)) {
				if (_1a8d9a021_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1aa92b276;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8d99b9c_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8d99b9c_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1aa92b276;
			};
			_julec_label_1aa931325:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1aa92b276:;
	}
	_iter_end_1aa92b276:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_bool _1a8d9a75d_skipSt(jule::I64* _9616_i, jule::Slice<jule::Ptr<_1a81881cd_Token>> _9628_tokens) {
	__jule_tuple_sx_1a81881cd_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a8d9a3d9_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a81881cd_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a8d9a75d_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _1a8d9ae45_splitStmts(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8d9aa8d_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a81881cd_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1a81881cd_Token__jule_tuple_bool __jule_assign_result = _1a8d9a75d_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a8d9aa8d_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1a8d9aa8d_stmt>(_1a8d9aa8d_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1aa9350e8:;
	}
	_iter_end_1aa9350e8:;;
	return _1186_stmts;;
}



inline jule::Bool _1a8db448b_isTypeOp(jule::U64* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U64>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U64>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a8db4799_isTypeRange(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaad2d34:;
		if (it != expr_end) {
			jule::I64 _8806_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I64 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a81881cd_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaad3c69:;
						if (it != expr_end) {
							jule::Ptr<_1a81881cd_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1aaad50bc:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1aaad3c69;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1aaad54a7:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1aaad3c69;
										}
									}
									_match_end_1aaad53a8:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1a8db448b_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1aaad3c69:;
							++it;
							goto _iter_begin_1aaad3c69;
						}
						_iter_end_1aaad3c69:;
					};
					return true;;
				};
				if ((!(_1a8db448b_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1aaad2d34:;
			++it;
			_8806_i++;
			goto _iter_begin_1aaad2d34;
		}
		_iter_end_1aaad2d34:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a81881cd_Token>> _1a8db4a63_getBlockExpr(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _91122_tokens) {
	jule::I64 _9126_braceN = 0LL;;
	jule::I64 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa97b6b1:;
		if (it != expr_end) {
			jule::I64 _9146_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1aa97e373:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa97e3d9:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1aa97e0cb;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa97e450:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa97e4b6:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1aa97e0cb:;
				};
			}
			_iter_next_1aa97b6b1:;
			++it;
			_9146_i++;
			goto _iter_begin_1aa97b6b1;
		}
		_iter_end_1aa97b6b1:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token _1a8db4e2b_splitDelim(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _94320_tokens, jule::U64 _94345_delim) {
	__jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token __jule_func_result;
	jule::I64 _9446_func = -1LL;;
	jule::I64 _9456_rangeN = 0LL;;
	jule::I64 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1a81881cd_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1aa984246:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa9842bd:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1aa97b095;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa984334:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1aa97b095;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1aa98439a:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1aa983eb0:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1a81881cd_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1aa97b095:;
	}
	_iter_end_1aa97b095:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a8db51e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I64 _9886_precPos = -1LL;;
	jule::I64 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa989537:;
		if (it != expr_end) {
			jule::I64 _9926_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa98a36d:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1aa98a406;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aa98a406:;
						{
							(_9906_braceN)++;
							goto _iter_next_1aa989537;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1aa98a46c:;
						{
							(_9906_braceN)--;
							goto _iter_next_1aa989537;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1aa98a4d3:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1aa989537;
						}
					}
					_match_end_1aa98a2a2:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1aa98bc87:;
						{
							goto _iter_next_1aa989537;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1aa98bd20:;
						{
							goto _iter_next_1aa989537;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1aa98bd86:;
						{
							goto _iter_next_1aa989537;
						}
					}
					else if ((!(_1a8188c28_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1aa98bdec:;
						{
							goto _iter_next_1aa989537;
						}
					}
					_match_end_1aa98ba9a:;
				};
				jule::Ptr<_1a81881cd_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1a818891a_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1aa989537;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a81881cd_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1aa989537;
						};
					};
				};
				jule::U8 _10383_p = _1a8188585_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1aa989537:;
			++it;
			_9926_i++;
			goto _iter_begin_1aa989537;
		}
		_iter_end_1aa989537:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1a81a4848_IdentExpr> _1a8db54ae_buildIdentExpr(jule::Ptr<_1a81881cd_Token>* _104724_token) {
	return jule::new_ptr<_1a81a4848_IdentExpr>(_1a81a4848_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_int _1a8db5778_getRangeExprTokens(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _105528_tokens) {
	__jule_tuple_sx_1a81881cd_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10566_rangeN = 0LL;;
	jule::I64 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1a81881cd_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa993b5c:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa993e8c:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1aa993bd4:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1aa993134:;
	}
	_iter_end_1aa993134:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a8db5b52_isAnonFnHead(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa9955a9:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1aa995d6d;
				};
				goto _case_begin_1aa995eb1;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa995eb1:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1aa995d6d;
				};
				return true;;
			}
		}
		_match_end_1aa995d6d:;
	};
	return false;;
}



inline jule::Bool _1a8db6801_checkAssignTokens(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a818cc60_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa3be36:;
		if (it != expr_end) {
			jule::Ptr<_1a81881cd_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aaa3c761:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aaa3cb07:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1aaa3ca08:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1aaa3dc6d:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1aaa3dcd4:;
						{
							goto _iter_next_1aaa3be36;
						}
					}
					else if (_1a818d2e3_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1aaa3dd4a:;
						{
							return true;;
						}
					}
					_match_end_1aaa3dc07:;
				};
			}
			_iter_next_1aaa3be36:;
			++it;
			goto _iter_begin_1aaa3be36;
		}
		_iter_end_1aaa3be36:;
	};
	return false;;
}



inline _21ca95427_Log _1a8db77ad_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1a818dc83_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_21ca95889_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1a81881cd_Token>> _1a8db7cdb_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1a81881cd_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a81881cd_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I64 _396_rangeN = 1LL;;
	jule::I64 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1a81881cd_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1aaa43d2d:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1aaa44191:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1aaa44108:;
			};
		}
	_iter_next_1aaa41930:;
	}
	_iter_end_1aaa41930:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token _1a8db80a5_rangeLast(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _6019_tokens) {
	__jule_tuple_sx_1a81881cd_Token__jule_tuple_sx_1a81881cd_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U64>(73LLU)) && (_642_first != static_cast<jule::U64>(76LLU))) && (_642_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _706_braceN = 0LL;;
	jule::I64 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1a81881cd_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aaa4800d:;
					{
						(_706_braceN)++;
						goto _iter_next_1aaa4734d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aaa4833d:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1aaa48085:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1aaa4734d:;
	}
	_iter_end_1aaa4734d:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log _1a8db855b_parts(jule::Slice<jule::Ptr<_1a81881cd_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1a81881cd_Token__jule_tuple_s_21ca95427_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1026_rangeN = 0LL;;
	jule::I64 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa4a3a6:;
		if (it != expr_end) {
			jule::I64 _1046_i = it - expr->begin();
			jule::Ptr<_1a81881cd_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aaa4c298:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aaa4c320:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1aaa4c386:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1aaa4a3a6;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_21ca95427_Log _1155_err = _1a8db77ad_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_21ca95427_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1aaa4c1cc:;
				};
			}
			_iter_next_1aaa4a3a6:;
			++it;
			_1046_i++;
			goto _iter_begin_1aaa4a3a6;
		}
		_iter_end_1aaa4a3a6:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a81881cd_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a8db87e2_getCloseOfBrace(jule::U64 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aaa508b7:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aaa5092d:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aaa50994:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1aaa4d51e:;
			{
				return _12820_left;;
			}
		}
		_match_end_1aaa4d5eb:;
	};
}



inline _21ca95427_Log _1a8db8c21_compilerErr(jule::Ptr<_1a81881cd_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_21ca95889_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1a819026d_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1a8db90b7_pushSuggestion(_21ca95427_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_21ca95889_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1a819dbe9_TypeDecl> _1a8dca02e_buildVoidType(void) {
	return jule::new_ptr<_1a819dbe9_TypeDecl>(_1a819dbe9_TypeDecl{._field_Token=jule::Ptr<_1a81881cd_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a840d3dc_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1aad68cac:;
			{
				__jule_func_result.__jule_result_arg0=_21ca9864a_IsWindows(_20537dbb2_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1aad68d23:;
			{
				__jule_func_result.__jule_result_arg0=_21ca98958_IsDarwin(_20537dbb2_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1aad6898d:;
			{
				__jule_func_result.__jule_result_arg0=_21ca98c22_IsLinux(_20537dbb2_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1aad68a04:;
			{
				__jule_func_result.__jule_result_arg0=_21ca9987c_IsUnix(_20537dbb2_OS);
			}
		}
		else {
			_case_begin_1aad683e9:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aad6886c:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a840d6b7_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1aad6b320:;
			{
				__jule_func_result.__jule_result_arg0=_21ca99063_IsI386(_20537de6a_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1aad6b386:;
			{
				__jule_func_result.__jule_result_arg0=_21ca992e9_IsAmd64(_20537de6a_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1aad6b001:;
			{
				__jule_func_result.__jule_result_arg0=_21ca995b3_IsArm64(_20537de6a_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1aad6b067:;
			{
				__jule_func_result.__jule_result_arg0=_21ca99e98_Is64Bit(_20537de6a_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1aad6b0cd:;
			{
				__jule_func_result.__jule_result_arg0=_21ca99c56_Is32Bit(_20537de6a_Arch);
			}
		}
		else {
			_case_begin_1aad6a95c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aad6add0:;
	};
	return __jule_func_result;;
}



inline void _1a840ed28_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_20537dbb2_OS); };
	if (_21ca9987c_IsUnix(_20537dbb2_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a841009d_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_20537de6a_Arch); };
	if (_21ca99e98_Is64Bit(_20537de6a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_21ca99c56_Is32Bit(_20537de6a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a8410389_initVars(jule::Slice<jule::Str>* _5518_vars, _1a840ea09_CompileInfo* _5532_info) {
	_1a840ed28_setOsVars(_5518_vars);
	_1a841009d_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1aad708eb:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1aad7038a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1aad70324:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1aad70434:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1aad718db:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1aad71952:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1aad71853:;
	};
}



inline jule::I64 _1a8410752_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad737ab:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_1aad737ab:;
			++it;
			_886_i++;
			goto _iter_begin_1aad737ab;
		}
		_iter_end_1aad737ab:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a8dce0ee_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__21cc8436e_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1a57c7d81_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_21cc9602e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21ca95427_Log _1a8dce40c_flatCompilerErr(jule::Str _2820_text) {
	return _21ca95427_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1a8297694_Fn> _1a85b6793_RuntimeFindFn(jule::Ptr<_1a838b14a_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_1a8297694_Fn> _96_f = _1a838c756_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_1a81be610_Struct> _1a85b6b5b_RuntimeFindStruct(jule::Ptr<_1a838b14a_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_1a81be610_Struct> _186_f = _1a838c35a_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline void _1a8dd3c80_pushPasses(jule::Ptr<_1a838d8bc_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadc56ba:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _12414_f = *it;
			{
				_julec_label_1aadc5db3:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aadc6303:;
					if (it != expr_end) {
						_1a837a623_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1aadc6303;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aadc7090:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1aadc6303;
										};
									}
									_iter_next_1aadc7090:;
									++it;
									goto _iter_begin_1aadc7090;
								}
								_iter_end_1aadc7090:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1aadc6303:;
						++it;
						goto _iter_begin_1aadc6303;
					}
					_iter_end_1aadc6303:;
				};
			}
			_iter_next_1aadc56ba:;
			++it;
			goto _iter_begin_1aadc56ba;
		}
		_iter_end_1aadc56ba:;
	};
}



inline jule::Slice<jule::Str> _1a8dd4148_getAllUniquePasses(jule::Ptr<_1a838d8bc_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1a8dd3c80_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadc6831:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1a8dd3c80_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1aadc6831:;
			++it;
			goto _iter_begin_1aadc6831;
		}
		_iter_end_1aadc6831:;
	};
	return _14110_passes;;
}



inline _1a840ea09_CompileInfo _1a8dd4357_buildCompileInfo(void) {
	_1a840ea09_CompileInfo _1546_info = _1a840ea09_CompileInfo{._field_Prod=_2053852c3_Production, ._field_Test=_205384910_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _2053829eb_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1aadc9119:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1aadc925c:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1aadc91e6:;
	};
	{
		auto &_match_expr{ _205384107_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1aadc92d4:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1aadc98de:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1aadc9955:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1aadca33a:;
	};
	return _1546_info;;
}



inline void _1a8dd4610_pushRuntimeToAST(jule::Ptr<_1a819bc91_AST>* _17926_f) {
	jule::Ptr<_1a81b6b46_UseDecl> _1806_decl = jule::new_ptr<_1a81b6b46_UseDecl>(_1a81b6b46_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1a81881cd_Token>(_1a81881cd_Token{._field_File=jule::Ptr<_1a818dc83_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U64>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1a81b6b46_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1a8dd4d5d_IterPackages(jule::Ptr<_1a8dd23cc_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a838d8bc_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aade5201:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1aade5201:;
			++it;
			goto _iter_begin_1aade5201;
		}
		_iter_end_1aade5201:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a8dd50d3_IterFiles(jule::Ptr<_1a838d8bc_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a829d997_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadeae4e:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1aadeae4e:;
			++it;
			goto _iter_begin_1aadeae4e;
		}
		_iter_end_1aadeae4e:;
	};
}



inline void _1a8dd53be_IterTraitMethods(jule::Ptr<_1a82a2da8_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1a8297694_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadebb42:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1aadebb42:;
			++it;
			goto _iter_begin_1aadebb42;
		}
		_iter_end_1aadebb42:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadec11a:;
		if (it != expr_end) {
			jule::Ptr<_1a853d088_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1a82a2da8_Trait> _297_it = _1a8539837_Trait((*(_2814_inh))._field_Type.ptr());;
				_1a8dd53be_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1aadec11a:;
			++it;
			goto _iter_begin_1aadec11a;
		}
		_iter_end_1aadec11a:;
	};
}



inline jule::Bool _1a8dd7613_IsForwarded(jule::Ptr<_1a8355466_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aae227e4:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1a85028cc_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1aae22a36:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aae236a2:;
						{
							return false;;
						}
					}
					_match_end_1aae2363b:;
				};
			}
		}
		else {
			_case_begin_1aae2296a:;
			{
				return true;;
			}
		}
		_match_end_1aae22904:;
	};
}



inline jule::Bool _1a8dd77de_IsExprComesFromBind(jule::Ptr<_1a85028cc_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aae241ec:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1a83cc1ad_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aae2440b:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1aae23262:;
			{
				return false;;
			}
		}
		_match_end_1aae231eb:;
	};
}



inline jule::Bool _1a8dd7aa8_IsAny(jule::Ptr<_1a8535877_Type>* _4015_t) {
	if ((_1a8538a67_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a853d990_Prim> _442_prim = _1a853802d_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1a85421e1_IsAny(_442_prim));;
}



inline jule::Bool _1a8dd7de9_IsClosure(jule::Ptr<_1a828d28e_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a8dd8180_IsOpMethod(jule::Ptr<_1a8297694_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a829a752_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a8dd8504_IsTraitMethod(jule::Ptr<_1a81c246a_StructIns>* _6823_owner, jule::Ptr<_1a829a752_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae29be7:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _6914_t = *it;
			{
				if ((_1a82a3a8a_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1aae29be7:;
			++it;
			goto _iter_begin_1aae29be7;
		}
		_iter_end_1aae29be7:;
	};
	return false;;
}



inline jule::Bool _1a8dd8878_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _205369274_HasPrefix(_8217_f, _20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20537d123_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1a819d116_Directive> _1a8dd9714_FindDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae36440:;
		if (it != expr_end) {
			jule::Ptr<_1a819d116_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1aae36440:;
			++it;
			goto _iter_begin_1aae36440;
		}
		_iter_end_1aae36440:;
	};
	return nullptr;;
}



inline jule::Bool _1a8dd9acc_HasDirective(jule::Slice<jule::Ptr<_1a819d116_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1a8dd9714_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::I64 _1a8dda616_FindTraitTypeOffsetS(jule::Ptr<_1a82a2da8_Trait> _3925_t, jule::Ptr<_1a81c246a_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae39c07:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aae3ab81:;
						if (it != expr_end) {
							jule::Ptr<_1a81c246a_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1aae3ab81:;
							++it;
							goto _iter_begin_1aae3ab81;
						}
						_iter_end_1aae3ab81:;
					};
					goto _iter_end_1aae39c07;
				} else {
					_436_i+=(*(*(_449_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_1aae39c07:;
			++it;
			goto _iter_begin_1aae39c07;
		}
		_iter_end_1aae39c07:;
	};
	return -1LL;;
}



inline jule::I64 _1a8dda98a_FindTraitTypeOffset(jule::Ptr<_1a82a2da8_Trait> _6224_t, jule::Ptr<_1a8535877_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a81c246a_StructIns> _6610_s = nullptr;;
	if ((_1a85382b4_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1a85382b4_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1a85395a1_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1a8dda616_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1a829a752_FnIns> _1a8ddadb9_FindOperator(jule::Ptr<_1a81c246a_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aae3e5d0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aae3e3d2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aae3e448:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aae3e646:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aae3e6bd:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aae3e745:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aae3e866:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aae3e8cc:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aae3e943:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aae3e9a9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aae3ea20:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aae3ea97:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aae3eb1e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1aae3eb96:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aae3ec1d:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aae3ec95:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aae3ed1c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aae3ed94:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aae3ee1b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aae3ee93:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aae4001a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aae40092:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aae40119:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aae40191:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aae40218:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1aae3e019:;
			{
				return nullptr;;
			}
		}
		_match_end_1aae3e14b:;
	};
}



inline jule::Ptr<_1a829a752_FnIns> _1a8ddb23d_FindFnGenericInstance(jule::Ptr<_1a8297694_Fn>* _14731_f, jule::Slice<jule::Ptr<_1a8535877_Type>> _14745_generics) {
	_julec_label_1aae47929:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae4bb70:;
		if (it != expr_end) {
			jule::Ptr<_1a829a752_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae4c610:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1a85360b4_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_1aae4bb70;
							};
						}
						_iter_next_1aae4c610:;
						++it;
						_1507_i++;
						goto _iter_begin_1aae4c610;
					}
					_iter_end_1aae4c610:;
				};
				return _14914_ins;;
			}
			_iter_next_1aae4bb70:;
			++it;
			goto _iter_begin_1aae4bb70;
		}
		_iter_end_1aae4bb70:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1a81c246a_StructIns> _1a8ddb6c2_FindStructGenericInstance(jule::Ptr<_1a81be610_Struct>* _16335_s, jule::Slice<jule::Ptr<_1a8535877_Type>> _16353_generics) {
	_julec_label_1aae4c005:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae4dc71:;
		if (it != expr_end) {
			jule::Ptr<_1a81c246a_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae4e711:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1a85360b4_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_1aae4dc71;
							};
						}
						_iter_next_1aae4e711:;
						++it;
						_1667_i++;
						goto _iter_begin_1aae4e711;
					}
					_iter_end_1aae4e711:;
				};
				return _16514_ins;;
			}
			_iter_next_1aae4dc71:;
			++it;
			goto _iter_begin_1aae4dc71;
		}
		_iter_end_1aae4dc71:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_1a838b14a_ImportInfo> _1a8ddb9be_SelectImport(jule::Slice<jule::Ptr<_1a838b14a_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae4e106:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_1aae4e106:;
			++it;
			goto _iter_begin_1aae4e106;
		}
		_iter_end_1aae4e106:;
	};
	return nullptr;;
}



inline jule::Bool _1aade0dcd_isOrdered(jule::Ptr<_1a83cc1ad_Var>* _1418_t, jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _1425_s) {
	_julec_label_1aade2dbe:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aade3331:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1aade3bb1:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1aade3331;
							};
						}
					}
					_match_end_1aade3b39:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aade4398:;
					if (it != expr_end) {
						jule::Ptr<_1a83cc1ad_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aade3331;
							};
						}
						_iter_next_1aade4398:;
						++it;
						goto _iter_begin_1aade4398;
					}
					_iter_end_1aade4398:;
				};
				return false;;
			}
			_iter_next_1aade3331:;
			++it;
			goto _iter_begin_1aade3331;
		}
		_iter_end_1aade3331:;
	};
	return true;;
}

inline jule::Bool _1aade6b4d_isOrdered(jule::Ptr<_1a81be610_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a81be610_Struct>> _1425_s) {
	_julec_label_1aade8aea:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aade905c:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aade99a8:;
					if (it != expr_end) {
						jule::Ptr<_1a81be610_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aade905c;
							};
						}
						_iter_next_1aade99a8:;
						++it;
						goto _iter_begin_1aade99a8;
					}
					_iter_end_1aade99a8:;
				};
				return false;;
			}
			_iter_next_1aade905c:;
			++it;
			goto _iter_begin_1aade905c;
		}
		_iter_end_1aade905c:;
	};
	return true;;
}



inline void _1aaddd0b7_order(jule::Slice<jule::Ptr<_1a83cc1ad_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aaddd57e:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aadde31b:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a83cc1ad_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aade055e:;
				if (it != expr_end) {
					jule::Ptr<_1a83cc1ad_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aadde8c1;
						};
					}
					_iter_next_1aade055e:;
					++it;
					goto _iter_begin_1aade055e;
				}
				_iter_end_1aade055e:;
			};
			if (_1aade0dcd_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aadde8c1:;
	}
	_iter_end_1aadde8c1:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1aaddd57e;
	};
}

inline void _1aadddb9a_order(jule::Slice<jule::Ptr<_1a81be610_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aaddd8d1:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aade38b4:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a81be610_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aade62ce:;
				if (it != expr_end) {
					jule::Ptr<_1a81be610_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aade5641;
						};
					}
					_iter_next_1aade62ce:;
					++it;
					goto _iter_begin_1aade62ce;
				}
				_iter_end_1aade62ce:;
			};
			if (_1aade6b4d_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aade5641:;
	}
	_iter_end_1aade5641:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1aaddd8d1;
	};
}



inline void _1a512e3b9_EliminateDefines(jule::Ptr<_1a8dd23cc_IR>* _36526_ir) {
	jule::Ptr<_1a512b1da_ObjectDeadCode> _3666_ocd = static__1a512b6c4_new(_36526_ir);;
	_1a512e0bc_elimanate(_3666_ocd);
}



inline jule::Bool _1a512e6c7_isAllMethodsLive(jule::Ptr<_1a81be610_Struct> _37121_s) {
	return ((_37121_s == (*((*(_1a8ddcad0_ProgramMeta))._field_Runtime))._field_Map) || (_37121_s == (*(*(_1a8ddcad0_ProgramMeta))._field_Runtime.alloc)._field_MapIterator));;
}



inline void _1a5133544_eliminateDeadCodeOfScope(jule::Ptr<_1a8355466_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1a8357eb3_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8357eb3_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8357eb3_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1a8358623_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8358623_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8358623_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1a5130310_scopeDeadCode> _2216_sdc = jule::new_ptr<_1a5130310_scopeDeadCode>(_1a5130310_scopeDeadCode{._field_parent=jule::Ptr<_1a5130310_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a8357eb3_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a8358623_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1a5133247_optimizeStmts(_2216_sdc);
	};
}



inline void _1a51337b9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a8297694_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaee9129:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaeebba9:;
					if (it != expr_end) {
						jule::Ptr<_1a829a752_FnIns> _23215_ins = *it;
						{
							_1a5133544_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1aaeebba9:;
						++it;
						goto _iter_begin_1aaeebba9;
					}
					_iter_end_1aaeebba9:;
				};
			}
			_iter_next_1aaee9129:;
			++it;
			goto _iter_begin_1aaee9129;
		}
		_iter_end_1aaee9129:;
	};
}



inline void _1a51339ea_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a81be610_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaeec24d:;
		if (it != expr_end) {
			jule::Ptr<_1a81be610_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaeecca9:;
					if (it != expr_end) {
						jule::Ptr<_1a81c246a_StructIns> _24115_ins = *it;
						{
							_1a51337b9_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1aaeecca9:;
						++it;
						goto _iter_begin_1aaeecca9;
					}
					_iter_end_1aaeecca9:;
				};
			}
			_iter_next_1aaeec24d:;
			++it;
			goto _iter_begin_1aaeec24d;
		}
		_iter_end_1aaeec24d:;
	};
}



inline void _1a5133ca3_eliminateFunctionsScopePackage(jule::Ptr<_1a838d8bc_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaeed34d:;
		if (it != expr_end) {
			jule::Ptr<_1a829d997_SymTab> _24814_f = *it;
			{
				_1a51337b9_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1a51339ea_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1aaeed34d:;
			++it;
			goto _iter_begin_1aaeed34d;
		}
		_iter_end_1aaeed34d:;
	};
}



inline void _1a5133ea1_eliminateScopePackage(jule::Ptr<_1a838d8bc_Package>* _25431_pkg) {
	_1a5133ca3_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1a51341d2_EliminateScopes(jule::Ptr<_1a8dd23cc_IR>* _25925_ir) {
	jule::I64 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1a838b14a_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1a5133ea1_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1ab0001eb:;
	}
	_iter_end_1ab0001eb:;;
	_1a5133ea1_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1a43dddb6_typeData(jule::Any* _1314_m) {
	return ((jule::Uintptr)((*(((_1a43ddb63_anyData*)(_1314_m))))._field_typePtr));;
}



inline jule::Bool _1a43de27e_equalConst(jule::Ptr<_1a82273d2_Const> _1715_l, jule::Ptr<_1a82273d2_Const> _1736_r) {
	{
		
		if (_1a8282ae1_IsI64(_1715_l.ptr())) {
			_case_begin_1ab06688e:;
			{
				return (_1a8282ae1_IsI64(_1736_r.ptr()) && (_1a82804e5_ReadI64(_1715_l) == _1a82804e5_ReadI64(_1736_r)));;
			}
		}
		else if (_1a8282d77_IsU64(_1715_l.ptr())) {
			_case_begin_1ab066916:;
			{
				return (_1a8282d77_IsU64(_1736_r.ptr()) && (_1a828077b_ReadU64(_1715_l) == _1a828077b_ReadU64(_1736_r)));;
			}
		}
		else if (_1a828362a_IsF64(_1715_l.ptr())) {
			_case_begin_1ab06698d:;
			{
				return (_1a828362a_IsF64(_1736_r.ptr()) && (_1a828102e_ReadF64(_1715_l) == _1a828102e_ReadF64(_1736_r)));;
			}
		}
		else if (_1a8283394_IsStr(_1715_l.ptr())) {
			_case_begin_1ab066a15:;
			{
				return (_1a8283394_IsStr(_1736_r.ptr()) && (_1a8280c98_ReadStr(_1715_l) == _1a8280c98_ReadStr(_1736_r)));;
			}
		}
		else if (_1a828310d_IsBool(_1715_l.ptr())) {
			_case_begin_1ab066a8c:;
			{
				return (_1a828310d_IsBool(_1736_r.ptr()) && (_1a8280a12_ReadBool(_1715_l) == _1a8280a12_ReadBool(_1736_r)));;
			}
		}
		else if (_1a82838b1_IsNil(_1715_l.ptr())) {
			_case_begin_1ab066c35:;
			{
				return _1a82838b1_IsNil(_1736_r.ptr());;
			}
		}
		else {
			_case_begin_1ab0667a1:;
			{
				return false;;
			}
		}
		_match_end_1ab0666a2:;
	};
}



inline jule::Bool _1a43de603_equalCasting(jule::Ptr<_1a828baa6_CastingExprModel> _3617_l, jule::Ptr<_1a828baa6_CastingExprModel> _3645_r) {
	if ((!(_1a85360b4_Equal((*(_3617_l))._field_Type, (*(_3645_r))._field_Type)))) {
		return false;;
	};
	return _1a43e0538_equalModels((*((*_3617_l.alloc)._field_Expr))._field_Model, (*(*(_3645_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a43de9bb_equalUnary(jule::Ptr<_1a828a852_UnaryExprModel> _4315_l, jule::Ptr<_1a828a852_UnaryExprModel> _4341_r) {
	if ((((*((*(_4315_l))._field_Op))._field_Id != (*(*(_4341_r))._field_Op.alloc)._field_Id) || ((*(*(_4315_l))._field_Op.alloc)._field_Kind != (*(*(_4341_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a43e0538_equalModels((*((*_4315_l.alloc)._field_Expr))._field_Model, (*(*(_4341_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a43ded40_equalIndexing(jule::Ptr<_1a828ccd8_IndexingExprModel> _5018_l, jule::Ptr<_1a828ccd8_IndexingExprModel> _5047_r) {
	return (_1a43e0538_equalModels((*((*(_5018_l))._field_Expr))._field_Model, (*(*(_5047_r))._field_Expr.alloc)._field_Model) && _1a43e0538_equalModels((*((*_5018_l.alloc)._field_Index))._field_Model, (*(*(_5047_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a43e01b4_equalBinary(jule::Ptr<_1a828a478_BinaryExprModel> _5516_l, jule::Ptr<_1a828a478_BinaryExprModel> _5543_r) {
	if ((((*((*(_5516_l))._field_Op))._field_Id != (*(*(_5543_r))._field_Op.alloc)._field_Id) || ((*(*(_5516_l))._field_Op.alloc)._field_Kind != (*(*(_5543_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a43e0538_equalModels((*((*_5516_l.alloc)._field_Left))._field_Model, (*(*(_5543_r))._field_Left.alloc)._field_Model) && _1a43e0538_equalModels((*((*_5516_l.alloc)._field_Right))._field_Model, (*(*(_5543_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a43e0538_equalModels(jule::Any _6616_l, jule::Any _6636_r) {
	if ((_1a43dddb6_typeData(&(_6616_l)) != _1a43dddb6_typeData(&(_6636_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6616_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab0755b2:;
			{
				return (_6616_l.unsafe_cast_ptr<_1a83cc1ad_Var>() == _6636_r.cast_ptr<_1a83cc1ad_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab076151:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _743_li = _6616_l.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>();;
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _753_ri = _6636_r.cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_743_li))._field_Field == (*(_753_ri))._field_Field) && _1a43e0538_equalModels((*((*_743_li.alloc)._field_Expr))._field_Model, (*(*(_753_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab0761b7:;
			{
				return _1a43de27e_equalConst(_6616_l.cast_ptr<_1a82273d2_Const>(&__jule_any_type15), _6636_r.cast_ptr<_1a82273d2_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab075c77:;
			{
				return _1a43de603_equalCasting(_6616_l.cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96), _6636_r.cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab075cdd:;
			{
				return _1a43de9bb_equalUnary(_6616_l.cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113), _6636_r.cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ab075d54:;
			{
				return _1a43ded40_equalIndexing(_6616_l.cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43), _6636_r.cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab075dba:;
			{
				return _1a43e01b4_equalBinary(_6616_l.cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114), _6636_r.cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1ab075c11:;
			{
				return false;;
			}
		}
		_match_end_1ab075804:;
	};
}



inline void _1a43e61dc_possibleNilRemove(jule::Ptr<_1a43e520d_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1a43e59e4_removeVar((*(_7227_n)).ptr(), _1a43e6bb0_getNilVar(_7237_m));
	};
}



inline jule::Bool _1a43e65a5_isGuaranteedNonNilExpr(jule::Ptr<_1a43e520d_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ab07c09c:;
			{
				return true;;
			}
		}
		_match_end_1ab07c036:;
	};
	return (((*(_7832_n)) != nullptr) && _1a43e5d35_isSafe((*(_7832_n)).ptr(), _1a43e6bb0_getNilVar(_7842_m)));;
}



inline jule::Bool _1a43e686e_isNilValidType(jule::Ptr<_1a8535877_Type> _8623_t) {
	return (_1a85382b4_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a43e6bb0_getNilVar(jule::Any _8814_m) {
	if ((!(_1a440dc71_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab07d653:;
			{
				jule::Ptr<_1a83cc1ad_Var> _943_v = _8814_m.unsafe_cast_ptr<_1a83cc1ad_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1a83cc1ad_Var>());;
				};
				return _1a43e6bb0_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab07daa4:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ab07d5dc:;
	};
	return 0LLU;;
}



inline jule::Bool _1a43ecc3d_isConstantValidConditionalCase(jule::Ptr<_1a8355884_If>* _73736_i) {
	{
		auto &_match_expr{ (*((*(_73736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab083a76:;
			{
				jule::Ptr<_1a82273d2_Const> _7403_c = (*((*(_73736_i))))._field_Expr.unsafe_cast_ptr<_1a82273d2_Const>();;
				return (_1a828310d_IsBool(_7403_c.ptr()) && _1a8280a12_ReadBool(_7403_c));;
			}
		}
		_match_end_1ab085d20:;
	};
	return false;;
}



inline jule::Bool _1a43ed04b_isUnreachableExpr(jule::Any* _74623_expr) {
	{
		auto &_match_expr{ (*(_74623_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab086a24:;
			{
				jule::Ptr<_1a82273d2_Const> _7493_c = (*(_74623_expr)).cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
				return (_1a828310d_IsBool(_7493_c.ptr()) && (!(_1a8280a12_ReadBool(_7493_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab08621b:;
			{
				jule::Ptr<_1a828a478_BinaryExprModel> _7523_m = (*(_74623_expr)).cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_7523_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a43ed04b_isUnreachableExpr(&((*((*_7523_m.alloc)._field_Left))._field_Model)) || _1a43ed04b_isUnreachableExpr(&((*((*_7523_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ab087470:;
	};
	return false;;
}



inline jule::Bool _1a43ed315_isConstantValidMatchCase(jule::Ptr<_1a835a6be_Case>* _76130_case) {
	{
		auto expr = &((*((*(_76130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab08ac26:;
		if (it != expr_end) {
			jule::Ptr<_1a85028cc_Data> *_7629_expr = it;
			{
				if (((_1a8503317_IsConst((*(_7629_expr)).ptr()) && _1a828310d_IsBool((*(*(_7629_expr)).alloc)._field_Constant.ptr())) && _1a8280a12_ReadBool((*((*(_7629_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ab08ac26:;
			++it;
			goto _iter_begin_1ab08ac26;
		}
		_iter_end_1ab08ac26:;
	};
	return false;;
}



inline jule::Bool _1a43ed656_isUnreachableConditionalCase(jule::Ptr<_1a8355884_If>* _77034_i) {
	return _1a43ed04b_isUnreachableExpr(&((*((*(_77034_i))))._field_Expr));;
}



inline jule::Bool _1a43ed8dc_isUnreachableMatchCase(jule::Ptr<_1a835a6be_Case>* _77428_case) {
	{
		auto expr = &((*((*(_77428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab08cc17:;
		if (it != expr_end) {
			jule::Ptr<_1a85028cc_Data> *_7759_expr = it;
			{
				if ((!(_1a43ed04b_isUnreachableExpr(&((*((*(_7759_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ab08cc17:;
			++it;
			goto _iter_begin_1ab08cc17;
		}
		_iter_end_1ab08cc17:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a440485a_checkForBitShiftOpt(jule::Ptr<_1a8289e7d_OperandExprModel>* _72925_l, jule::Ptr<_1a8289e7d_OperandExprModel>* _72954_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a832602a_IsInt(_1a8535c73_Str((*((*(_72925_l))))._field_Type.ptr())))) || (!(_1a832602a_IsInt(_1a8535c73_Str((*((*(_72954_r))))._field_Type)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1a828154b_AsU64((*((*(_72954_r))))._field_Model.cast_ptr<_1a82273d2_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7372_j = _1d976aa04_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7382_z = static_cast<jule::U64>(_7372_j);;
	if ((static_cast<jule::F64>(_7382_z) != _7372_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7382_z;
	return __jule_func_result;;
}



inline jule::Bool _1a4404c23_areSameLvalueExprModel(jule::Any* _74628_l, jule::Any* _74649_r) {
	{
		auto &_match_expr{ (*(_74628_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab15b7b9:;
			{
				return ((*(_74649_r)) == (*(_74628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab15b5cc:;
			{
				{
					auto &_match_expr{ (*(_74649_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1ab15c15a:;
						{
							goto _match_end_1ab15c5de;
						}
					}
					else {
						_case_begin_1ab15c655:;
						{
							return false;;
						}
					}
					_match_end_1ab15c5de:;
				};
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _7593_lsi = (*(_74628_l)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _7603_rsi = (*(_74649_r)).cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_7593_lsi))._field_Field != (*(_7603_rsi))._field_Field)) {
					return false;;
				};
				return _1a4404c23_areSameLvalueExprModel(&((*((*_7593_lsi.alloc)._field_Expr))._field_Model), &((*(*(_7603_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab15b841:;
			{
				{
					auto &_match_expr{ (*(_74649_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1ab15de4d:;
						{
							jule::Ptr<_1a828a852_UnaryExprModel> _7724_ul = (*(_74628_l)).cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1a828a852_UnaryExprModel> _7734_ur = (*(_74649_r)).cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_7724_ul))._field_Op))._field_Id != (*(*(_7734_ur))._field_Op.alloc)._field_Id) || ((*(*(_7724_ul))._field_Op.alloc)._field_Kind != (*(*(_7734_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a4404c23_areSameLvalueExprModel(&((*((*_7724_ul.alloc)._field_Expr))._field_Model), &((*(*(_7734_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1ab15ddc6:;
				};
			}
		}
		_match_end_1ab15b753:;
	};
	return false;;
}



inline void _1a4406cd0_possibleDynamicRemove(jule::Ptr<_1a4405c46_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1a440652c_removeVar((*(_7331_d)).ptr(), _1a440785d_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1a44070dd_isDynamicValidType(jule::Ptr<_1a8535877_Type> _7927_t) {
	return _1a8dd7aa8_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1a8535877_Type> _1a440751c_isTypeGuaranteedDynamicData(jule::Ptr<_1a4405c46_dynamic>* _8137_dy, jule::Ptr<_1a8535877_Type> _8155_t, jule::Any _8175_m) {
	jule::Bool _822_isAny = _1a8dd7aa8_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1a8539837_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8175_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab21e67e:;
			{
				jule::Ptr<_1a828baa6_CastingExprModel> _917_cem = _8175_m.unsafe_cast_ptr<_1a828baa6_CastingExprModel>();;
				return _1a440751c_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprType, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1ab21e618:;
	};
	jule::Uintptr _942_var = _1a440785d_getDynamicVar(_8175_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab221263:;
		if (it != expr_end) {
			_1a4405905_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1ab221263:;
			++it;
			goto _iter_begin_1ab221263;
		}
		_iter_end_1ab221263:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a440785d_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1a5020d6b_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab222484:;
			{
				jule::Ptr<_1a83cc1ad_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1a83cc1ad_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1a83cc1ad_Var>());;
				};
				return _1a440785d_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab2225b6:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab22250b:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1a828a852_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a440785d_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ab22241d:;
	};
	return 0LLU;;
}



inline jule::Bool _1a440b477_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a440bbb4_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a440b840_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab231aae:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a440bbb4_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1ab231aae:;
			++it;
			_906_i++;
			goto _iter_begin_1ab231aae;
		}
		_iter_end_1ab231aae:;
	};
	return -1LL;;
}



inline jule::Bool _1a440bbb4_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1a43dddb6_typeData(&(_9813_e1)) != _1a43dddb6_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab233561:;
			{
				jule::Ptr<_1a82273d2_Const> _1043_exprConst = _9834_e2.cast_ptr<_1a82273d2_Const>(&__jule_any_type15);;
				return ((_1a82817d2_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1a82854d9_GtEq(_9813_e1.unsafe_cast_ptr<_1a82273d2_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab2335c7:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab23364e:;
			{
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>();;
				jule::Ptr<_1a828eee9_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1a828eee9_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1a43e0538_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab233220:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a828a852_UnaryExprModel>();;
				jule::Ptr<_1a828a852_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a440bbb4_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1ab2331a9:;
			{
				return false;;
			}
		}
		_match_end_1ab2330dd:;
	};
}



inline void _1a440bee4_possibleBoundaryRemove(jule::Ptr<_1a440a410_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab233a06:;
		if (it != expr_end) {
			_1a440a0be_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab23a5ac:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1a43e0538_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1ab23a5ac;
							};
						}
						_iter_next_1ab23a5ac:;
						++it;
						_1277_i++;
						goto _iter_begin_1ab23a5ac;
					}
					_iter_end_1ab23a5ac:;
				};
			}
			_iter_next_1ab233a06:;
			++it;
			goto _iter_begin_1ab233a06;
		}
		_iter_end_1ab233a06:;
	};
}



inline jule::Bool _1a440c2ad_isBoundaryRiskyType(jule::Ptr<_1a8535877_Type> _13628_t) {
	return (_1a8538ced_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a440c577_isBoundaryValidType(jule::Ptr<_1a8535877_Type> _14128_t) {
	return ((_1a8539084_Slc(_14128_t.ptr()) != nullptr) || (_1a8538ced_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a440c841_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a440dc71_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ab23cc63:;
			{
				jule::Ptr<_1a83cc1ad_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a83cc1ad_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a83cc1ad_Var>());;
				};
				return _1a440c841_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab23cd73:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a828eee9_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab23ccc9:;
			{
				jule::Ptr<_1a828a852_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a828a852_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a440c841_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ab23cbec:;
	};
	return 0LLU;;
}



inline void _1a5021c3a_PushOptLevel(jule::I64 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I64>(2LL));;
	_1a440d116_Copy=_422_l1;
	_1a440d413_Deadcode=_422_l1;
	_1a440d6bb_Append=_422_l1;
	_1a440d9b8_Math=_422_l1;
	_1a440dc71_Access=_422_l1;
	_1a440e029_Inline=_422_l1;
	_1a440e2d2_Ptr=_422_l1;
	_1a501ecb0_Cond=_422_l1;
	_1a5020002_Str=_422_l1;
	_1a5020299_Slice=_422_l1;
	_1a5020552_Assign=_422_l1;
	_1a502080a_Exceptional=_422_l1;
	_1a5020ab3_Iter=_422_l1;
	_1a5020d6b_Dynamic=_422_l1;
	_1a5021124_Array=_422_l1;
	_1a502160d_Len=_422_l1;
	_1a5021850_StdStrings=_432_l2;
	_1a5021a5e_StdMathCmplx=_432_l2;
}



inline void _1a5137a87_detectEnabled(void) {
	_1a5135623_exprEnabled=((((((((_1a5021850_StdStrings || _1a440e2d2_Ptr) || _1a440d9b8_Math) || _1a440dc71_Access) || _1a501ecb0_Cond) || _1a5021124_Array) || _1a5020002_Str) || _1a5020d6b_Dynamic) || _1a502160d_Len);
	_1a5135832_scopeEnabled=(((((((((_1a501ecb0_Cond || _1a440d6bb_Append) || _1a440d116_Copy) || _1a5020002_Str) || _1a5020299_Slice) || _1a5020552_Assign) || _1a502080a_Exceptional) || _1a5020ab3_Iter) || _1a5020d6b_Dynamic) || _1a5021a5e_StdMathCmplx);
}



inline void _1ab9e4904_Reverse(jule::Slice<jule::U8> _7327_s) {
	{
		auto expr = _7327_s.slice(0LL, (_7327_s.len() >> 1LL));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab9e5aae:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr.begin();
			{
				({
					jule::U8 ___jule_assign_arg = _7327_s[((_7327_s.len() - _746_i) - 1LL)];
					jule::U8 _1___jule_assign_arg = _7327_s[_746_i];
					_7327_s[_746_i] = ___jule_assign_arg;
					_7327_s[((_7327_s.len() - _746_i) - 1LL)] = _1___jule_assign_arg;
				});
			}
			_iter_next_1ab9e5aae:;
			++it;
			_746_i++;
			goto _iter_begin_1ab9e5aae;
		}
		_iter_end_1ab9e5aae:;
	};
}



inline void _1ab9e3518_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I64 _4230_r) {
	_1ab9e4904_Reverse(_4222_s.slice(0LL, _4230_r));
	_1ab9e4904_Reverse(_4222_s.slice(_4230_r));
	_1ab9e4904_Reverse(_4222_s);
}



inline void _1ab9de921_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I64 _4831_r) {
	_1ab9e3518_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1ab9dd0b2_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U64 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U64)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::U8> _1ab9d8c17_Insert(jule::Slice<jule::U8> _7226_s, jule::I64 _7232_i, jule::Slice<jule::U8> _7240_v) {
	_7226_s.slice(_7232_i);
	jule::I64 _752_m = _7240_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I64 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7240_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7240_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1ab9dd0b2_overlaps(_7240_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7240_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7240_v);
	_1ab9de921_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline jule::U64 _1a5415e64_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a5143015_isCopyOptimizable(jule::Ptr<_1a85028cc_Data>* _117223_expr) {
	if ((!((*((*(_117223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab3c85d5:;
			{
				return false;;
			}
		}
		_match_end_1ab3c856e:;
	};
	return true;;
}



inline jule::Bool _1a51433cd_isIterCopyOptimizable(jule::Ptr<_1a85028cc_Data>* _118327_expr, jule::Ptr<_1a83cc1ad_Var>* _118347_v) {
	if (((!((*((*(_118327_expr))))._field_Lvalue)) && (!(_1a853725d_Mutable((*((*(_118327_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118347_v))))._field_Mutable)) && (!((*((*(_118327_expr))))._field_Mutable)));;
}



inline jule::Bool _1a514380c_captureVarHandling(jule::Ptr<_1a542125a_ObjectCoder>* _119028_oc, jule::Ptr<_1a828d28e_AnonFnExprModel>* _119051_m, jule::Ptr<_1a83cc1ad_Var>* _119083_v) {
	{
		auto expr = &((*((*(_119051_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3ca7a2:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _11919_cv = *it;
			{
				if ((_11919_cv == (*(_119083_v)))) {
					_1a5421975_write((*(_119028_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a9395021_var(&((*((*(_119028_oc))))._field_Buf), (*(_119083_v)));
					return true;;
				};
			}
			_iter_next_1ab3ca7a2:;
			++it;
			goto _iter_begin_1ab3ca7a2;
		}
		_iter_end_1ab3ca7a2:;
	};
	return false;;
}



inline jule::Str _1a5155e07_decomposeCommonEsq(jule::U8 _190923_b) {
	{
		auto &_match_expr{ _190923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ab5dd355:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab5dd1bd:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab5dd234:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ab5dcc28:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ab5dcc8e:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ab5dcd16:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ab5dcd8d:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ab5dce15:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ab5dd3bb:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ab5dd432:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1ab5da6e8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab5dcb6d:;
	};
}



inline jule::Str _1a5156215_sbtoa(jule::U8 _193610_b) {
	if ((_193610_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_193610_b < 128LLU)) {
		jule::Str _19413_seq = _1a5155e07_decomposeCommonEsq(_193610_b);;
		if (!(_19413_seq).empty()) {
			return _19413_seq;;
		};
		if (((32LL <= _193610_b) && (_193610_b <= 126LLU))) {
			return __jule_strFromByte(_193610_b);;
		};
	};
	jule::Str _19492_seq = _1d97aa527_FmtUint(static_cast<jule::U64>(_193610_b), 8LL);;
	if ((_19492_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19492_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19492_seq);;
}



inline void _1a5156501_cstrBytes(_21ca86171_Builder* _195619_s, jule::Str _195640_ctx) {
	{
		auto expr = &(_195640_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e2ee7:;
		if (it != expr_end) {
			jule::U8 *_19579_b = it;
			{
				({
					auto except = _21ca87150_WriteStr(_195619_s, _1a5156215_sbtoa((*(_19579_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1958:3"));
					(except.result);
				});
			}
			_iter_next_1ab5e2ee7:;
			++it;
			goto _iter_begin_1ab5e2ee7;
		}
		_iter_end_1ab5e2ee7:;
	};
}



inline void _1a5156831_cstrLit(_21ca86171_Builder* _196217_s, jule::Str _196238_ctx) {
	({
		auto except = _21ca87408_WriteByte(_196217_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1963:2"));
	});
	_1a5156501_cstrBytes(_196217_s, _196238_ctx);
	({
		auto except = _21ca87408_WriteByte(_196217_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1965:2"));
	});
}



inline void _1a5156bc7_ftoa(_21ca86171_Builder* _196814_s, jule::F64 _196835_f, jule::I64 _196843_bitsize) {
	if ((_196843_bitsize != 32LL)) {
		if ((_196835_f == static_cast<jule::F64>(static_cast<jule::I64>(_196835_f)))) {
			_1a5156eb3_itoa(_196814_s, static_cast<jule::I64>(_196835_f));
			return;;
		};
		if ((_196835_f == static_cast<jule::F64>(static_cast<jule::U64>(_196835_f)))) {
			_1a515729e_utoa(_196814_s, static_cast<jule::U64>(_196835_f));
			return;;
		};
	};
	jule::Str _19792_m = _1d9794214_FmtFloat(_196835_f, 'f', -1LL, _196843_bitsize);;
	({
		auto except = _21ca87150_WriteStr(_196814_s, _19792_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1980:2"));
		(except.result);
	});
	if ((!(_20536dab4_Contains(_19792_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _21ca87150_WriteStr(_196814_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1982:3"));
			(except.result);
		});
	};
}



inline void _1a5156eb3_itoa(_21ca86171_Builder* _198614_s, jule::I64 _198635_x) {
	{
		
		if ((_198635_x == jule::MAX_I64)) {
			_case_begin_1ab5e7590:;
			{
				({
					auto except = _21ca87150_WriteStr(_198614_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1989:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_198635_x == jule::MIN_I64)) {
			_case_begin_1ab5e7639:;
			{
				({
					auto except = _21ca87150_WriteStr(_198614_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1992:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1ab5e746e:;
	};
	({
		auto except = _21ca87150_WriteStr(_198614_s, _1d97aa8e0_FmtInt(_198635_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1996:2"));
		(except.result);
	});
	if (_21ca99e98_Is64Bit(jule::Str::lit("amd64", 5))) {
		({
			auto except = _21ca87408_WriteByte(_198614_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1998:3"));
		});
	};
	({
		auto except = _21ca87408_WriteByte(_198614_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2000:2"));
	});
}



inline void _1a515729e_utoa(_21ca86171_Builder* _200314_s, jule::U64 _200335_x) {
	{
		
		if ((_200335_x == jule::MAX_U64)) {
			_case_begin_1ab5e9729:;
			{
				({
					auto except = _21ca87150_WriteStr(_200314_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2006:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1ab5e95d6:;
	};
	({
		auto except = _21ca87150_WriteStr(_200314_s, _1d97aa527_FmtUint(_200335_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2010:2"));
		(except.result);
	});
	if (_21ca99e98_Is64Bit(jule::Str::lit("amd64", 5))) {
		({
			auto except = _21ca87408_WriteByte(_200314_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2012:3"));
		});
	};
	({
		auto except = _21ca87150_WriteStr(_200314_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2014:2"));
		(except.result);
	});
}



inline void _1a51578ed_operatorOverloadingBinary(_21ca86171_Builder* _201735_buf, jule::Ptr<_1a81c246a_StructIns>* _201763_s, jule::Str* _201785_l, jule::Str* _20183_r, jule::U64 _201811_op, jule::Str _201826_kind) {
	;
	jule::Ptr<_1a829a752_FnIns> _20206_f = static_cast<jule::Ptr<_1a829a752_FnIns>>(nullptr);;
	if ((_201811_op == static_cast<jule::U64>(51LLU))) {
		_20206_f=_1a8ddadb9_FindOperator(_201763_s, static_cast<jule::U64>(50LLU), false);
		({
			auto except = _21ca87408_WriteByte(_201735_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:3"));
		});
	} else {
		_20206_f=_1a8ddadb9_FindOperator(_201763_s, _201811_op, false);
	};
	if ((_20206_f == nullptr)) {
		if (((_201811_op == static_cast<jule::U64>(50LLU)) || (_201811_op == static_cast<jule::U64>(51LLU)))) {
			static__1a90e1696_structureIns(_201735_buf, _201763_s);
			({
				auto except = _21ca87150_WriteStr(_201735_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2031:4"));
				(except.result);
			});
			goto _julec_label_1ab5ed178;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2034:3"));;
	};
	static__1a90e09e7_funcIns(_201735_buf, &(_20206_f));
	_julec_label_1ab5ed178:;
	({
		auto except = _21ca87150_WriteStr(_201735_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2038:2"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_201735_buf, (*(_201785_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2039:2"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_201735_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2040:2"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_201735_buf, (*(_20183_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2041:2"));
		(except.result);
	});
	({
		auto except = _21ca87408_WriteByte(_201735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2042:2"));
	});
}



inline jule::Slice<jule::U8> _1a542dca1_concatAllParts(jule::Slice<jule::Ptr<_1a81881cd_Token>> _137519_parts) {
	jule::I64 _13766_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ac37c:;
		if (it != expr_end) {
			jule::Ptr<_1a81881cd_Token> *_13779_part = it;
			{
				_13766_n+=(*(*(_13779_part)).alloc)._field_Kind.len();
			}
			_iter_next_1ab8ac37c:;
			++it;
			goto _iter_begin_1ab8ac37c;
		}
		_iter_end_1ab8ac37c:;
	};
	if ((_13766_n == 0LL)) {
		return nullptr;;
	};
	_21ca86171_Builder _13836_s = static__21ca869bd_New(_13766_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ac8ee:;
		if (it != expr_end) {
			jule::Ptr<_1a81881cd_Token> *_13849_p = it;
			{
				({
					auto except = _21ca87150_WriteStr(&_13836_s, (*((*(_13849_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1385:3"));
					(except.result);
				});
			}
			_iter_next_1ab8ac8ee:;
			++it;
			goto _iter_begin_1ab8ac8ee;
		}
		_iter_end_1ab8ac8ee:;
	};
	return _21ca88481_Buf(&_13836_s);;
}



inline jule::Bool _1a542e0ae_isHeadDecl(jule::Ptr<_1a8297694_Fn>* _139120_m) {
	if ((((*((*(_139120_m))))._field_Generics.len() > 0LL) || ((*((*(_139120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _1a8dd8180_IsOpMethod(_139120_m);;
}



inline jule::Bool _1a542e378_defaultEq(jule::Ptr<_1a81c246a_StructIns>* _139915_s) {
	return ((*((*(_139915_s))))._field_Comparable && ((*((*(_139915_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1a54430c3_ableToInit(jule::Ptr<_1a8535877_Type>* _44820_t) {
	return (!(_1a8536724_Binded((*(_44820_t)).ptr())));;
}



inline jule::Bool _1a544339d_shouldInitialized(jule::Ptr<_1a8535877_Type>* _45527_t) {
	if ((!(_1a54430c3_ableToInit(_45527_t)))) {
		return false;;
	};
	jule::Ptr<_1a853d990_Prim> _4592_prim = _1a853802d_Prim((*(_45527_t)).ptr());;
	if ((_4592_prim != nullptr)) {
		return ((!(_1a85421e1_IsAny(_4592_prim))) && (!(_1a8541e5a_IsStr(_4592_prim))));;
	};
	{
		
		if ((_1a85382b4_Sptr((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba04da9:;
			{
				return false;;
			}
		}
		else if ((_1a8539abd_Map((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba05b35:;
			{
				return false;;
			}
		}
		else if ((_1a8539084_Slc((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba04e42:;
			{
				return false;;
			}
		}
		else if ((_1a8539837_Trait((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba04ea8:;
			{
				return false;;
			}
		}
		else if ((_1a853931a_Fn((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba05cbc:;
			{
				return false;;
			}
		}
		else if ((_1a8538ced_Arr((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba05d33:;
			{
				jule::Ptr<_1a85452b0_Arr> _4757_arr = _1a8538ced_Arr((*(_45527_t)).ptr());;
				return _1a54430c3_ableToInit(&((*(_4757_arr))._field_Elem));;
			}
		}
		else if ((_1a85395a1_Struct((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1aba05d99:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba04caa:;
			{
				return true;;
			}
		}
		_match_end_1aba05195:;
	};
}



inline void _20538666a_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1a57c7d81_toStr(_3022_msg));
}



inline void _2053868e0_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _20538648e_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_20538648e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba9d22c:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1aba9d22c:;
			++it;
			goto _iter_begin_1aba9d22c;
		}
		_iter_end_1aba9d22c:;
	};
	_21ca86171_Builder _496_s = static__21ca869bd_New(32LL);;
	;
	{
		auto expr = &(_20538648e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba9ea14:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _21ca87150_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&_496_s, _205368dab_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _21ca87150_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _21ca87408_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1aba9ea14:;
			++it;
			_516_i++;
			goto _iter_begin_1aba9ea14;
		}
		_iter_end_1aba9ea14:;
	};
	jule::println(_1abaa021d_toStr(_496_s));
}



inline void _205386b21_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1a57c7d81_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _205386d30_toolDistos(void) {
	jule::print(_1a57c7d81_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1abaae43b_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1a57c7d81_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1abaae43b_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1a57c7d81_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1abaae43b_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1a57c7d81_toStr(jule::Str()));
}



inline void _205386e95_toolDistarch(void) {
	jule::print(_1a57c7d81_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1abab3bd2_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1a57c7d81_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1abab3bd2_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1a57c7d81_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1abab3bd2_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1a57c7d81_toStr(jule::Str()));
}



inline void _205387193_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1a57c7d81_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1abab7532:;
			{
				_205386d30_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1abab5e7b:;
			{
				_205386e95_toolDistarch();
			}
		}
		else {
			_case_begin_1abab5c7d:;
			{
				_20538666a_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1abab5d5a:;
	};
}



inline void _2053873c4_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1a57c7d81_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1a57c7d81_toStr(jule::Str::lit("architecture: amd64", 19)));
	jule::println(_1a57c7d81_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::println(_1a57c7d81_toStr((jule::Str::lit("default compiler: ", 18) + _2053829eb_Compiler)));
	jule::println(_1a57c7d81_toStr((jule::Str::lit("default C++ standard: ", 22) + _205384107_CppStd)));
}



inline void _205387715_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1a57c7d81_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1ababae81:;
			{
				({
					auto except = static__21cc84715_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_20538666a_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ababa2c1:;
			{
				_20538666a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1ababa8dc:;
	};
}



inline jule::Bool _205387957_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1ababbc1d:;
			{
				_2053868e0_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1ababc3d3:;
			{
				_205386b21_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1ababc449:;
			{
				_205387193_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1ababc4b0:;
			{
				_2053873c4_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1ababc526:;
			{
				_205387715_mod(_15320_args);
			}
		}
		else {
			_case_begin_1ababaa63:;
			{
				return false;;
			}
		}
		_match_end_1ababb5d0:;
	};
	return true;;
}



inline void _205387b00_showInfo(void) {
	jule::println(_1a57c7d81_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _205387c76_main(void) {
	jule::Slice<jule::Str> _1896_args = _21cc9645d_Args();;
	if ((_1896_args.len() < 2LL)) {
		_205387b00_showInfo();
		return;;
	};
	if (_205387957_processCommand(&(_1896_args))) {
		return;;
	};
	_1a90edd8a_compileCommand(&(_1896_args));
}



inline void _2053885c3_enableVtp(void) {
	jule::Uintptr _192_hOut = _21c718d37_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_21c71b3ab_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_21c71b9b6_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _20538878d_init(void) {
	_2053885c3_enableVtp();
}



inline void _1a90eacaa_init(void) {
	_2053829eb_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_21cc83307_File> _1a90eb074_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _205376270_Dir((*(_3016_path)));;
	({
		auto except = static__20537c980_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__205376bcc_Create(_312_dir);
				if (!except.ok()) {
					_1d97ad65c_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21cc840a5_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1d97ad65c_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a90eb21c_clearObjects(void) {
	({
		auto except = static__21cc8733e_Remove(_1a90ec372_getCompilePath());
		if (!except.ok()) {
			jule::println(_1a57c7d81_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__205376e0d_Remove(_1a90ea628_OutDir);
}



inline void _1a90eb52a_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_21cc3c019_Cmd> _606_cmd = static__21cc3c46a_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_20536d740_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _21cc3c668_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type138) == _match_expr) {
					_case_begin_1abac49d4:;
					{
						static__2053aaa13_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type138) == _match_expr) {
					_case_begin_1abac4b27:;
					{
						static__2053aaa13_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1abac44b7:;
					{
						static__2053aaa13_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1abac45c7:;
			};
			_1d97ad65c_Throw(jule::Str());
		}
	});
	jule::I64 _732_status = ({
		auto except = _21cc3caec_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2053829eb_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__2053aaa13_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1d97ad65c_Throw(jule::Str());
	};
	_1a90eb21c_clearObjects();
}



inline jule::Bool _1a90eb7e4_isCppSourceFile(jule::Str _8620_path) {
	jule::I64 _872_offset = _20536be7a_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _21ca4aa2b_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1a90eba25_pushCompCmdClang(_21ca86171_Builder* _9426_cmd) {
	({
		auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _205384107_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1abac7e49:;
			{
				({
					auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1abac8873:;
			{
				({
					auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1abac88d9:;
			{
				({
					auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1abac860e:;
	};
	({
		auto except = _21ca87408_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_2053852c3_Production) {
		({
			auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _21ca87150_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _1a90ebc56_pushCompCmdGcc(_21ca86171_Builder* _12024_cmd) {
	({
		auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _205384107_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1abac9d91:;
			{
				({
					auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1abacb8a9:;
			{
				({
					auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1abacb920:;
			{
				({
					auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1abacb645:;
	};
	({
		auto except = _21ca87408_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_2053852c3_Production) {
		({
			auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _21ca87150_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1a90ec1da_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1a8dd23cc_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_205383de8_CompilerPath);;
	_21ca86171_Builder _1486_cmd = static__21ca869bd_New(64LL);;
	{
		auto &_match_expr{ _2053829eb_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1abace615:;
			{
				_1a90ebc56_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1abaceb43:;
			{
				_1a90eba25_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1abace857:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abacedeb:;
		if (it != expr_end) {
			jule::Ptr<_1a838b14a_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1a90eb7e4_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _21ca87150_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _21ca87408_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1abacedeb:;
			++it;
			goto _iter_begin_1abacedeb;
		}
		_iter_end_1abacedeb:;
	};
	if (!(_1a90eab01_Out).empty()) {
		({
			auto except = _21ca87150_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _21ca87150_WriteStr(&_1486_cmd, _1a90eab01_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _21ca87408_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _21ca87150_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abad297b:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _21ca87408_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _21ca87150_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1abad297b:;
			++it;
			goto _iter_begin_1abad297b;
		}
		_iter_end_1abad297b:;
	};
	if ((_20537dbb2_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _21ca87150_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _21ca879d0_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a90ec372_getCompilePath(void) {
	return _20537557c_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a90ea628_OutDir; (*it++) = _1a90ea848_OutName; __jule_collection; }));;
}



inline void _1a90ec5a3_applyTargetIndependentOptimizations(jule::Ptr<_1a8dd23cc_IR>* _19245_ir) {
	jule::Ptr<_1a51359b9_Optimizer> _1936_opt = static__1a5135e81_New(_19245_ir);;
	_1a5137823_Optimize(_1936_opt.ptr());
}



inline void _1a90ec74b_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2053829eb_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1abad5231:;
			{
				_1d97ad65c_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1abad4d57:;
			{
				if ((_205383de8_CompilerPath).empty()) {
					_205383de8_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1abad4dbd:;
			{
				if ((_205383de8_CompilerPath).empty()) {
					_205383de8_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1abad487e:;
			{
				_1d97ad65c_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2053829eb_Compiler));
			}
		}
		_match_end_1abad4ce1:;
	};
}



inline void _1a90ec95a_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1d97ad65c_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1a90ecb8b_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1d97ad65c_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1a90ecdbc_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1d97ad65c_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _20536d740_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_1d97ad65c_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1a90ecb8b_checkTargetOs(_2402_os);
		_20537dbb2_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1a90ec95a_checkTargetArch(_2406_arch);
		_20537de6a_Arch=_2406_arch;
	};
	_1a831ee47_UpdateTarget();
}



inline void _1a90ed0ed_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1d97ad65c_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1abae1eb8:;
			{
				goto _match_end_1abae168d;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1abae1803:;
			{
				_1a5021c3a_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1abae1869:;
			{
				_1a5021c3a_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1abae177b:;
			{
				_1d97ad65c_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1abae168d:;
	};
}



inline void _1a90ed4b6_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _205384107_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1abae33c6:;
			{
				goto _match_end_1abae2ccc;
			}
		}
		else {
			_case_begin_1abae1bbb:;
			{
				_1d97ad65c_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _205384107_CppStd));
			}
		}
		_match_end_1abae2ccc:;
	};
}



inline jule::Slice<jule::Str> _1a90ed681_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a90e57aa_FlagSet> _2856_fs = static__1a90e5ac9_New();;
	_1abae4c79_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1abae4c79_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1abae4c79_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1a90eab01_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_20538439e_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_205384657_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1abae4c79_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2053829eb_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1abae4c79_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_205383de8_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_2053852c3_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_205384bb8_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_205385081_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1abae4c79_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_205384107_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440d116_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440d413_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440d6bb_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440d9b8_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440dc71_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440e029_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a440e2d2_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a501ecb0_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5020002_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5020299_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5020552_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a502080a_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5020ab3_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5020d6b_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5021124_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a502160d_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5021850_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1abaedd93_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a5021a5e_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _1a90e6998_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_1d97ad65c_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a90ec74b_checkCompilerFlag();
	_1a90ed4b6_checkCppStdFlag();
	_1a90ecdbc_checkTargetFlag(&(_2836_target));
	_1a90ed0ed_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _1a90ed890_setupSemaFlags(jule::I64* _33024_flags) {
	if (_20538439e_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a8dd23cc_IR> _1a90edb59_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _1a90ed681_checkFlags(_33613_args);;
	jule::I64 _3396_semaFlags = static_cast<jule::I64>(0LL);;
	_1a90ed890_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_1d97ad65c_Throw(_21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_1d97ad65c_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _205375acc_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_1d97ad65c_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_21cc858ae_Stat _3532_inf = ({
		auto except = static__20537c980_Of(_20537d123_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1d97ad65c_Throw(_21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _21cc858ae_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_21cc85cbb_IsDir(&_3532_inf)))) {
		_1d97ad65c_Throw(_21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a8dd23cc_IR> _3616_ir;
	jule::Slice<_21ca95427_Log> _36110_logs;
	({
		__jule_tuple_x_1a8dd23cc_IR__jule_tuple_s_21ca95427_Log __jule_assign_result = static__1a8dd28a5_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_1d97ad65c_Throw(_21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__1d97acb89_PrintLogs(&(_36110_logs));
		_1d97ad65c_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _1a90edd8a_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_205384910_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a8dd23cc_IR> _3826_ir = _1a90edb59_buildIr(_37624_args);;
	_1a8ddcad0_ProgramMeta=static__1a8de01dc_Collect(_3826_ir);
	if ((!(_205384910_Test))) {
		;
		(*(_1a8ddcad0_ProgramMeta))._field_EntryPoint=_1a838ee84_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1a8ddcad0_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1d97ad65c_Throw(_21ca95889_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1a90ec5a3_applyTargetIndependentOptimizations(&(_3826_ir));
	_1a8dd391c_Order(_3826_ir);
	jule::Str _4002_compPath = _1a90ec372_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a90ec1da_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a542125a_ObjectCoder> _4036_oc = static__1a54216bc_New(&(_3826_ir), _1a541d9a5_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_205384910_Test) {
		jule::Ptr<_1a5158668_TestCoder> _4087_tc = static__1a5158b1e_New(&(_4036_oc));;
		_1a5159e94_Serialize(_4087_tc);
	} else {
		_1a542d91b_Serialize(_4036_oc);
	};
	jule::Ptr<_21cc83307_File> _4146_file = _1a90eb074_openOutput(&(_4002_compPath));;
	({
		auto except = _21cc877c3_Write(_4146_file.ptr(), _21ca88481_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_1d97ad65c_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _21cc8501d_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_205384657_Transpilation))) {
		_1a90eb52a_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20537e0ad_init();
	_1a83200bd_init();
	_20538878d_init();
	_1a90eacaa_init();

}

inline jule::Bool __jule_anon1a9605d0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a82995ec_ParamIns> _25021_p1, jule::Ptr<_1a82995ec_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a829631e_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1a829631e_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a82965a5_IsRef((*(_25021_p1))._field_Decl) != _1a82965a5_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a85360b4_Equal((*_25021_p1.alloc)._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d88808(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _6521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _6536_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6d88808_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6d88808_ctx>();
	return _1a83292d6__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d8a7c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _7221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _7236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6d8a7c7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6d8a7c7_ctx>();
	return _1a83296d2__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6d9e39b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _17821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _17836_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6d9e39b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6d9e39b_ctx>();
	return _1a832c509__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6da1326(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _18521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _18536_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6da1326_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6da1326_ctx>();
	return _1a832c905__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6db27aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _28321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _28336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6db27aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6db27aa_ctx>();
	return _1a833071b__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dc9591(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6dc9591_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6dc9591_ctx>();
	return _1a8333554__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dcb51b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _40921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _40936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6dcb51b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6dcb51b_ctx>();
	return _1a8333d4b__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a6dcd496(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _41621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _41636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a6dcd496_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a6dcd496_ctx>();
	return _1a8333950__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968906d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _97421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _97436_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a968906d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a968906d_ctx>();
	return _1a83387ac__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968b03c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98136_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a968b03c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a968b03c_ctx>();
	return _1a8338ba8__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968ceb7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _98821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _98836_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a968ceb7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a968ceb7_ctx>();
	return _1a83394a0__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a968ee42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _99521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _99536_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a968ee42_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a968ee42_ctx>();
	return _1a833989b__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9691dbc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9691dbc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9691dbc_ctx>();
	return _1a8339c97__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9693d47(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _100921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _100936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9693d47_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9693d47_ctx>();
	return _1a833a193__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9695cc2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _101621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _101636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9695cc2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9695cc2_ctx>();
	return _1a833a58e__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9697c4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _102321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _102336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9697c4c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9697c4c_ctx>();
	return _1a833a98a__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9699e4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103036_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9699e4c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9699e4c_ctx>();
	return _1a833ad86__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a969bdc7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _103721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _103736_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a969bdc7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a969bdc7_ctx>();
	return _1a833d460__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a969dd52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _104421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _104436_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a969dd52_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a969dd52_ctx>();
	return _1a833c371__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a0ccc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105136_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96a0ccc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96a0ccc_ctx>();
	return _1a833b282__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a2c57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _105821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _105836_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96a2c57_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96a2c57_ctx>();
	return _1a833b67d__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a4bd2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _106521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _106536_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96a4bd2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96a4bd2_ctx>();
	return _1a833ba79__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a6b5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _107221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _107236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96a6b5c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96a6b5c_ctx>();
	return _1a833be75__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96a8ad7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _107921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _107936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96a8ad7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96a8ad7_ctx>();
	return _1a833c76c__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96aaa62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _108621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _108636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96aaa62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96aaa62_ctx>();
	return _1a833cb68__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96ac9dc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _109321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _109336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96ac9dc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96ac9dc_ctx>();
	return _1a833d064__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96ae967(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _110021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _110036_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96ae967_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96ae967_ctx>();
	return _1a83390a4__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96daed2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _126221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _126236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96daed2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96daed2_ctx>();
	return _1a833e7d5__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96dce5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _126921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _126936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96dce5c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96dce5c_ctx>();
	return _1a833ebd1__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96dedd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _127621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _127636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96dedd7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96dedd7_ctx>();
	return _1a83400cc__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e1d62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _128321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _128336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96e1d62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96e1d62_ctx>();
	return _1a83404c8__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e3cdc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _129021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _129036_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96e3cdc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96e3cdc_ctx>();
	return _1a83408c4__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e5c67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _129721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _129736_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96e5c67_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96e5c67_ctx>();
	return _1a8340cc0__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a96e7be2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _130421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _130436_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a96e7be2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96e7be2_ctx>();
	return _1a83411bb__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a970c971(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _142921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _142936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a970c971_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a970c971_ctx>();
	return _1a8343e6b__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a970e8eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _143621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _143636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a970e8eb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a970e8eb_ctx>();
	return _1a8344367__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9711876(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _144321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _144336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9711876_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9711876_ctx>();
	return _1a8344763__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9776853(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _194921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _194936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9776853_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9776853_ctx>();
	return _1a83481b2__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97787cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _195621_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _195636_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a97787cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a97787cd_ctx>();
	return _1a83485ad__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977a758(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _196321_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _196336_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a977a758_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a977a758_ctx>();
	return _1a83489a9__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977c6d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _197021_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _197036_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a977c6d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a977c6d3_ctx>();
	return _1a8348da5__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a977e65d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _197721_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _197736_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a977e65d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a977e65d_ctx>();
	return _1a83492a1__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97815d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _198421_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _198436_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a97815d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a97815d8_ctx>();
	return _1a834969c__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9783563(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _199121_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _199136_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9783563_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9783563_ctx>();
	return _1a8349a98__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97854dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _199821_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _199836_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a97854dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a97854dd_ctx>();
	return _1a8349e94__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a97876dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _200521_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _200536_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a97876dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a97876dd_ctx>();
	return _1a834a390__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a9789668(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _201221_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _201236_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a9789668_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9789668_ctx>();
	return _1a834a78b__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1a85028cc_Data> __jule_anon_1a978b5e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a850489b_eval>* _201921_e, jule::Ptr<_1a81a6c57_FnCallExpr>* _201936_fc, jule::Ptr<_1a85028cc_Data>* ) {
	jule::Ptr<__jule_anon_1a978b5e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a978b5e3_ctx>();
	return _1a834ab87__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1a97978b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1a97978b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a97978b8_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9798996:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a81aae04_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a8533e91_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1a9798996;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a8535877_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a979b7ce:;
					if (it != expr_end) {
						jule::Ptr<_1a819dbe9_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a8535877_Type> _7310_kind = _1a83b079b_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a8555c60_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1a979d6b0:;
										{
											jule::Ptr<_1a819e304_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a819e304_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a83504d8_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1a97a1cce;
											};
										}
									}
									_match_end_1a979d638:;
								};
								return false;;
							};
							_julec_label_1a97a1cce:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8535877_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1a979b7ce:;
						++it;
						goto _iter_begin_1a979b7ce;
					}
					_iter_end_1a979b7ce:;
				};
			}
			_iter_next_1a9798996:;
			++it;
			_659_i++;
			goto _iter_begin_1a9798996;
		}
		_iter_end_1a9798996:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1a999d816(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _48735_spkg) {
	jule::Ptr<__jule_anon_1a999d816_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a999d816_ctx>();
	return ((!(_1a8386332_isImplicitImport(_48735_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48628_pkg))))._field_Path == (*(_48735_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1a9c1b237(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _83442_sema) {
	jule::Ptr<__jule_anon_1a9c1b237_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9c1b237_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82743_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c1c249:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _83616_p = *it;
			{
				if ((!(_1a829631e_IsSelf((*(_83616_p))._field_Decl.ptr())))) {
					(*_83616_p.alloc)._field_Type=_1a83b5174_buildNonGenericType((*(_83442_sema)), &((*((*(*(_83616_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
					__jule_func_result=(__jule_func_result && ((*_83616_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1a9c1c249:;
			++it;
			goto _iter_begin_1a9c1c249;
		}
		_iter_end_1a9c1c249:;
	};
	if ((!(_1a8297b4a_IsVoid((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result=_1a83b5174_buildNonGenericType((*(_83442_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82743_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1a9c3420b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _93742_sema) {
	jule::Ptr<__jule_anon_1a9c3420b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9c3420b_ctx>();
	return __jule_closure_ctx.alloc->_93046_algo(_93742_sema, &(__jule_closure_ctx.alloc->_9357_generics));;
}

inline jule::Bool __jule_anon_1a9c389e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83a8497_sema>* _95337_sema, jule::Slice<jule::Ptr<_1a8534a85_TypeAlias>>* _95355_generics) {
	jule::Ptr<__jule_anon_1a9c389e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9c389e6_ctx>();
	jule::Bool _9548_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c39e9d:;
		if (it != expr_end) {
			jule::Ptr<_1a82995ec_ParamIns> _95516_p = *it;
			{
				if (_1a829631e_IsSelf((*(_95516_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1a9c39e9d;
					};
					if (_1a82965a5_IsRef((*(_95516_p))._field_Decl)) {
						(*_95516_p.alloc)._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)});
					} else {
						(*_95516_p.alloc)._field_Type=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data0)});
					};
				} else {
					(*(_95516_p))._field_Type=_1a83b1deb_buildTypeWithGenerics((*(_95337_sema)), &((*((*((*_95516_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95355_generics)), (*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Refers);
					if (((*_95516_p.alloc)._field_Type != nullptr)) {
						_1a83b6dbd_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95516_p));
					} else {
						_9548_ok=false;
					};
				};
			}
			_iter_next_1a9c39e9d:;
			++it;
			goto _iter_begin_1a9c39e9d;
		}
		_iter_end_1a9c39e9d:;
	};
	if ((!(_1a8297b4a_IsVoid((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Result=_1a83b1deb_buildTypeWithGenerics((*(_95337_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94937_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95355_generics)), (*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Refers);
		_9548_ok=(((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Result != nullptr) && _9548_ok);
	};
	return _9548_ok;;
}

inline jule::Str __jule_anon1aa721ee5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa7230e5:;
			{
				return (*((*(_85519_def)).cast_ptr<_1a8534a85_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa722e19:;
			{
				return (*((*(_85519_def)).cast_ptr<_1a81be610_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1aa7229c9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa722963:;
	};
}

inline void __jule_anon_1aaebe5a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _19031_file) {
	jule::Ptr<__jule_anon_1aaebe5a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaebe5a5_ctx>();
	{
		auto expr = &((*((*(_19031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaec0034:;
		if (it != expr_end) {
			jule::Ptr<_1a83cc1ad_Var> _19116_v = *it;
			{
				if (_1a8dd9acc_HasDirective(&((*(_19116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1aaeb525a_isLive(__jule_closure_ctx.alloc->_self_, &(_19116_v))))) {
						_1aaeb8758_pushLive(__jule_closure_ctx.alloc->_self_, _19116_v);
						_1a512c32e_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_19116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1aaec0034:;
			++it;
			goto _iter_begin_1aaec0034;
		}
		_iter_end_1aaec0034:;
	};
	{
		auto expr = &((*((*(_19031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaec1035:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _19916_f = *it;
			{
				if (_1a8dd9acc_HasDirective(&((*(_19916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_19916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaec2a70:;
						if (it != expr_end) {
							jule::Ptr<_1a829a752_FnIns> _20118_ins = *it;
							{
								if ((!(_1aae8534b_isLive(__jule_closure_ctx.alloc->_self_, &(_20118_ins))))) {
									_1aae86539_pushLive(__jule_closure_ctx.alloc->_self_, _20118_ins);
									_1a512c32e_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_20118_ins))._field_Refers));
								};
							}
							_iter_next_1aaec2a70:;
							++it;
							goto _iter_begin_1aaec2a70;
						}
						_iter_end_1aaec2a70:;
					};
				};
			}
			_iter_next_1aaec1035:;
			++it;
			goto _iter_begin_1aaec1035;
		}
		_iter_end_1aaec1035:;
	};
}

inline void __jule_anon_1ab02a842(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1ab02a842_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab02a842_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab02b28d:;
			{
				jule::Ptr<_1a828c458_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1a5130ad5_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab02b0d4:;
			{
				jule::Ptr<_1a828d28e_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1a828d28e_AnonFnExprModel>(&__jule_any_type103);;
				_1a5133544_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1ab02b216:;
	};
}

inline void __jule_anon_1ab21718d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _69547_m) {
	jule::Ptr<__jule_anon_1ab21718d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab21718d_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_69547_m));
	};
	{
		auto &_match_expr{ (*(_69547_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab217a2e:;
			{
				{
					_1a440245c_binary(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828a478_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab217c71:;
			{
				{
					_1a4402715_unary(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828a852_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab217a95:;
			{
				{
					_1a44029bd_structureLit(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828b226_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab217b0b:;
			{
				{
					_1a4402c76_casting(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828baa6_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab217b72:;
			{
				{
					_1a4403bab_funcCall(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828c458_FnCallExprModel>(&__jule_any_type31));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ab21847a:;
			{
				{
					_1a4403903_lenCall(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a8292590_BuiltinLenCallExprModel>(&__jule_any_type118));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ab2184e1:;
			{
				{
					_1a4403e64_indexing(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828ccd8_IndexingExprModel>(&__jule_any_type43));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab218568:;
			{
				{
					_1a440421c_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1a828d28e_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1ab21791e:;
	};
}

inline void __jule_anon_1ab3e019b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab3e019b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab3e019b_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1ab3e3ba5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab3e3ba5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab3e3ba5_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1ab41804d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab41804d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab41804d_ctx>();
	_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1ab41a539(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab41a539_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab41a539_ctx>();
	_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1ab4344ed(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab4344ed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab4344ed_ctx>();
	_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1a8d16aa3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a8d16aa3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d16aa3_ctx>();
	_1a5421975_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1a8d17dd4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a8d17dd4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d17dd4_ctx>();
	_1a514a748_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_75730_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1ab5d2976(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a83cc1ad_Var> _113367_v) {
	jule::Ptr<__jule_anon_1ab5d2976_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab5d2976_ctx>();
	return _1a514380c_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_112734_m), &(_113367_v));;
}

inline void __jule_anon_1ab965699(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _83538_pkg) {
	jule::Ptr<__jule_anon_1ab965699_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab965699_ctx>();
	_1a8dd50d3_IterFiles(_83538_pkg, jule::__new_closure<void,jule::Ptr<_1a829d997_SymTab>*>((void*)__jule_anon_1ab9665ce, jule::Ptr<__jule_anon_1ab9665ce_ctx>::make(__jule_anon_1ab9665ce_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ab9665ce_ctx_handler));
}

inline void __jule_anon_1ab97a4c2(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab97a4c2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab97a4c2_ctx>();
	_1a5421975_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a51548a6_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a5421975_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ab97c5b2(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab97c5b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab97c5b2_ctx>();
	_1a514a748_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ab984b2a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab984b2a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab984b2a_ctx>();
	_1a5421975_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ab985cc4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ab985cc4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab985cc4_ctx>();
	_1a5155a72_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92024_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1ab9c036e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _118238_pkg) {
	jule::Ptr<__jule_anon_1ab9c036e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9c036e_ctx>();
	_1a8dd50d3_IterFiles(_118238_pkg, jule::__new_closure<void,jule::Ptr<_1a829d997_SymTab>*>((void*)__jule_anon_1ab9c1282, jule::Ptr<__jule_anon_1ab9c1282_ctx>::make(__jule_anon_1ab9c1282_ctx{._118238_pkg=_118238_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ab9c1282_ctx_handler));
}

inline void __jule_anon_1ab9c179e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _120531_file) {
	jule::Ptr<__jule_anon_1ab9c179e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9c179e_ctx>();
	{
		auto expr = &((*((*(_120531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c5aa0:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _120616_f = *it;
			{
				if ((*(_120616_f))._field_Ident.equal("init", 4)) {
					_1a5422327_indent(__jule_closure_ctx.alloc->_self_);
					static__1a90e070b_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120616_f));
					_1a5421975_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1ab9c5aa0:;
			++it;
			goto _iter_begin_1ab9c5aa0;
		}
		_iter_end_1ab9c5aa0:;
	};
}

inline void __jule_anon_1ab9ccbd9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _124438_pkg) {
	jule::Ptr<__jule_anon_1ab9ccbd9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9ccbd9_ctx>();
	_1a542c211_pushInit(__jule_closure_ctx.alloc->_self_, _124438_pkg);
}

inline void __jule_anon_1ab9d2e0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a8297694_Fn>* _128136_m) {
	jule::Ptr<__jule_anon_1ab9d2e0e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d2e0e_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12777_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9d3959:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _128311_em = *it;
			{
				if ((_128311_em == (*(_128136_m)))) {
					return;;
				};
			}
			_iter_next_1ab9d3959:;
			++it;
			goto _iter_begin_1ab9d3959;
		}
		_iter_end_1ab9d3959:;
	};
	(*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a8297694_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128136_m)); __jule_collection; }));
}

inline void __jule_anon_1ab9d54d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838d8bc_Package>* _129538_pkg) {
	jule::Ptr<__jule_anon_1ab9d54d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d54d8_ctx>();
	_1a8dd50d3_IterFiles(_129538_pkg, jule::__new_closure<void,jule::Ptr<_1a829d997_SymTab>*>((void*)__jule_anon_1ab9d63eb, jule::Ptr<__jule_anon_1ab9d63eb_ctx>::make(__jule_anon_1ab9d63eb_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d63eb_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aba7a094(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1d97995b0_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aba82c06(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1d9799109_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1a6d7c0d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1aa15551c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a838b14a_ImportInfo> _473230_imp) {
	jule::Ptr<__jule_anon_1aa15551c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa15551c_ctx>();
	return (((*(_473230_imp))._field_Alias == __jule_closure_ctx.alloc->_473138_namespace) && (!(_1a8386332_isImplicitImport(_473230_imp))));;
}

inline void __jule_anon_1ab9665ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _83632_file) {
	jule::Ptr<__jule_anon_1ab9665ce_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9665ce_ctx>();
	{
		auto expr = &((*((*(_83632_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab967080:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _83717_f = *it;
			{
				if (((!((*(_83717_f))._field_Binded)) && ((*_83717_f.alloc)._field_Token != nullptr))) {
					_1a54239dd_pushResult(__jule_closure_ctx.alloc->_self_, &(_83717_f));
					_1a5427162_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83717_f), false);
				};
			}
			_iter_next_1ab967080:;
			++it;
			goto _iter_begin_1ab967080;
		}
		_iter_end_1ab967080:;
	};
}

inline void __jule_anon_1ab9c1282(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _118332_file) {
	jule::Ptr<__jule_anon_1ab9c1282_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9c1282_ctx>();
	{
		auto expr = &((*((*(_118332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c1c11:;
		if (it != expr_end) {
			jule::Ptr<_1a8297694_Fn> _118417_f = *it;
			{
				if (((!(_205384910_Test)) && _1a8dd9acc_HasDirective(&((*(_118417_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1ab9c1c11;
				};
				if (((*(__jule_closure_ctx.alloc->_118238_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118417_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1ab9c36c4:;
							{
								goto _iter_next_1ab9c1c11;
							}
						}
						_match_end_1ab9c3608:;
					};
				};
				if (((!((*_118417_f.alloc)._field_Binded)) && ((*_118417_f.alloc)._field_Token != nullptr))) {
					_1a54296a3_func(__jule_closure_ctx.alloc->_self_, &(_118417_f));
					_1a5421975_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ab9c1c11:;
			++it;
			goto _iter_begin_1ab9c1c11;
		}
		_iter_end_1ab9c1c11:;
	};
}

inline void __jule_anon_1ab9d63eb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a829d997_SymTab>* _129632_file) {
	jule::Ptr<__jule_anon_1ab9d63eb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d63eb_ctx>();
	{
		auto expr = &((*((*(_129632_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9d6d7a:;
		if (it != expr_end) {
			jule::Ptr<_1a82a2da8_Trait> _129717_t = *it;
			{
				if (((*(_129717_t))._field_Token != nullptr)) {
					_1a542ccb1_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129717_t));
				};
			}
			_iter_next_1ab9d6d7a:;
			++it;
			goto _iter_begin_1ab9d6d7a;
		}
		_iter_end_1ab9d6d7a:;
	};
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_20538648e_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1a90ea628_OutDir = jule::Str::lit("dist", 4);
	_1a90ea848_OutName = jule::Str::lit("ir.cpp", 6);
	_1a90eab01_Out = jule::Str();
	_21c71852e_STDIN = _21c718d37_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
	_21c7187c6_STDOUT = _21c718d37_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
	_21c718ac3_STDERR = _21c718d37_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
	_21c84d8ea_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_21c84e346_acceptRanges = ({ auto __jule_collection = jule::Array<_21c84dea0_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _21c84dea0_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _21c84dea0_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _21c84dea0_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _21c84dea0_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _21c84dea0_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _21c84dea0_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_21c9a2037__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_21c9a2620__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_2052ed390__L = jule::new_ptr<_205365946_RangeTable>(_205365946_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_205364e95_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _205364e95_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _205364e95_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _205364e95_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _205364e95_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _205364e95_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _205364e95_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _205364e95_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _205364e95_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _205364e95_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _205364e95_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _205364e95_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _205364e95_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _205364e95_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _205364e95_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _205364e95_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _205364e95_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _205364e95_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _205364e95_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _205364e95_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _205364e95_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _205364e95_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _205364e95_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _205364e95_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _205364e95_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _205364e95_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _205364e95_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _205364e95_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _205364e95_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _205364e95_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _205364e95_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _205364e95_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _205364e95_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _205364e95_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _205364e95_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _205364e95_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _205364e95_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _205364e95_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2053654c3_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _2053654c3_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _2053654c3_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _2053654c3_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _2053654c3_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _2053654c3_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_2052ee2a3__LU = jule::new_ptr<_205365946_RangeTable>(_205365946_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_205364e95_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _205364e95_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _205364e95_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _205364e95_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _205364e95_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _205364e95_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _205364e95_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _205364e95_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _205364e95_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _205364e95_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _205364e95_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _205364e95_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _205364e95_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2053654c3_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _2053654c3_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2053654c3_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _2053654c3_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_205305287_Letter = _2052ed390__L;
	_20530b557_Upper = _2052ee2a3__LU;
	_20535daa4__CaseRanges = ({ auto __jule_collection = jule::Slice<_2053649de_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _2053649de_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _2053649de_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_20535dd90__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_205360b72_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_205360e5d_caseOrbit = ({ auto __jule_collection = jule::Slice<_2053644e4_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _2053644e4_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _2053644e4_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _2053644e4_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _2053644e4_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _2053644e4_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _2053644e4_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _2053644e4_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _2053644e4_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _2053644e4_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _2053644e4_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _2053644e4_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _2053644e4_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _2053644e4_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _2053644e4_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _2053644e4_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _2053644e4_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _2053644e4_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _2053644e4_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _2053644e4_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _2053644e4_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _2053644e4_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _2053644e4_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _2053644e4_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _2053644e4_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _2053644e4_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _2053644e4_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _2053644e4_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _2053644e4_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _2053644e4_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _2053644e4_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _2053644e4_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _2053644e4_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _2053644e4_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _2053644e4_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _2053644e4_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _2053644e4_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _2053644e4_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _2053644e4_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _2053644e4_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _2053644e4_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _2053644e4_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _2053644e4_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _2053644e4_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _2053644e4_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _2053644e4_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _2053644e4_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _2053644e4_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _2053644e4_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _2053644e4_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _2053644e4_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _2053644e4_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _2053644e4_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _2053644e4_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _2053644e4_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _2053644e4_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _2053644e4_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _2053644e4_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _2053644e4_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _2053644e4_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _2053644e4_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _2053644e4_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _2053644e4_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _2053644e4_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _2053644e4_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _2053644e4_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _2053644e4_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _2053644e4_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _2053644e4_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _2053644e4_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _2053644e4_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _2053644e4_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _2053644e4_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _2053644e4_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _2053644e4_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _2053644e4_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _2053644e4_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _2053644e4_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _2053644e4_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _2053644e4_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _2053644e4_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _2053644e4_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _2053644e4_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _2053644e4_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _2053644e4_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _2053644e4_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _2053644e4_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _2053644e4_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _2053644e4_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_21c9bb7c1_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_21c9bb8ae_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_21ca4a2cd_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_20537d123_PathStdlib = jule::Str();
	_20537d376_PathExec = jule::Str();
	_20537d60c_PathWd = jule::Str();
	_20537d909_PathApi = jule::Str();
	_20537dbb2_OS = jule::Str::lit("windows", 7);
	_20537de6a_Arch = jule::Str::lit("amd64", 5);
	_2053829eb_Compiler = jule::Str();
	_205383de8_CompilerPath = jule::Str();
	_205384107_CppStd = jule::Str::lit("cpp17", 5);
	_20538439e_Shadowing = false;
	_205384657_Transpilation = false;
	_205384910_Test = false;
	_205384bb8_RC = true;
	_205385081_Safety = true;
	_2053852c3_Production = false;
	_1d9793400_f32info = _1d979309d_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1d97936ec_f64info = _1d979309d_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1d979b02e_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1d979cc89_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1d979d84a_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1d979db7a_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1d97a1d7b_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1d97a604a_leftCheats = ({ auto __jule_collection = jule::Slice<_1d97a5b1b_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1d97a5b1b_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1d97a5b1b_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1a80d9ea9_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1a80da295_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1a80da5c5_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1a81826b1_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1a818299c_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1a819148e_keywords = ({ auto __jule_collection = jule::Array<_1a81910a4_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1a81917be_basicOps = ({ auto __jule_collection = jule::Array<_1a81910a4_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1a81910a4_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1a831be99_BitSize = 0LL;
	_1a831c20d_SysInt = jule::Str();
	_1a831c4b6_SysUint = jule::Str();
	_1a834d21c_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1a85a891c_primNil = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1a85a8c19_primVoid = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a8ec2_primAny = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a92be_primStr = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a9577_primBool = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a9830_primUintptr = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a9ad8_primUint = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85a9ea1_primInt = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aa1e3_primI8 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aa48a_primI16 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aa743_primI32 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aa9eb_primI64 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aaca4_primU8 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85ab05c_primU16 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85ab315_primU32 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85ab7ee_primU64 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85aba41_primF32 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a85abc50_primF64 = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a8552d17_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)});
	_1a8ddcad0_ProgramMeta = static_cast<jule::Ptr<_1a8dded13_Meta>>(nullptr);
	_1a4408166_emptyData = jule::new_ptr<_1a4408b28_data>(_1a4408b28_data{._field_boundary=jule::Ptr<_1a440a410_boundary>(nullptr), ._field_nils=jule::Ptr<_1a43e520d_nils>(nullptr), ._field_dynamic=jule::Ptr<_1a4405c46_dynamic>(nullptr), ._field_flags=0LL});
	_1a440d116_Copy = false;
	_1a440d413_Deadcode = false;
	_1a440d6bb_Append = false;
	_1a440d9b8_Math = false;
	_1a440dc71_Access = false;
	_1a440e029_Inline = false;
	_1a440e2d2_Ptr = false;
	_1a501ecb0_Cond = false;
	_1a5020002_Str = false;
	_1a5020299_Slice = false;
	_1a5020552_Assign = false;
	_1a502080a_Exceptional = false;
	_1a5020ab3_Iter = false;
	_1a5020d6b_Dynamic = false;
	_1a5021124_Array = false;
	_1a502160d_Len = false;
	_1a5021850_StdStrings = false;
	_1a5021a5e_StdMathCmplx = false;
	_1a5135623_exprEnabled = false;
	_1a5135832_scopeEnabled = false;
	_1a5412b0e_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1a5139380_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1a541d6ca_generalGCPtr = jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a85424bb_Sptr>(_1a85424bb_Sptr{._field_Elem=jule::new_ptr<_1a8535877_Type>(_1a8535877_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a853d990_Prim>(_1a853d990_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1a85353c1_Kind_mptr_data23)});
	_20535d7b8_CaseRanges = _20535daa4__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_205387c76_main();

	return EXIT_SUCCESS;
}