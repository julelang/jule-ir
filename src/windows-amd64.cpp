// Auto generated by JuleC.
// JuleC version: jule0.0.11
// Date: 23/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1e3ee4c35_Importer{};
struct _1e4091232_Kind{};
struct _1e40abe84_Lookup{};
struct _1e505733a_CommonFlag{};
struct _216495092_accept_range;
struct _1e1889104_Range16;
struct _1e1889577_Range32;
struct _1e18899ea_RangeTable;
struct _1e188ee73_LazyBuff;
struct _2162e46d8_DirEntry;
struct _2162e6421_Directory;
struct _2163c3355_File;
struct _2163c371d_Status;
struct _1e194507d_Cmd;
struct _1e1905060_Log;
struct _1e1c31ee6_Token;
struct _1e1c37381_File;
struct _1e1c393d8_KindPair;
struct _1e1c40015_Lex;
struct _1e3301383_Ast;
struct _1e3302032_Node;
struct _1e330242d_Directive;
struct _1e3335807_TypeDecl;
struct _1e3335dbd_IdentTypeDecl;
struct _1e333651c_SubIdentTypeDecl;
struct _1e33368c4_NamespaceTypeDecl;
struct _1e3336bb0_SptrTypeDecl;
struct _1e33370ab_SlcTypeDecl;
struct _1e3337397_TupleTypeDecl;
struct _1e3337683_PtrTypeDecl;
struct _1e3337d15_ArrTypeDecl;
struct _1e3338563_MapTypeDecl;
struct _1e333891a_RetTypeDecl;
struct _1e3339d28_Expr;
struct _1e333a114_RangeExpr;
struct _1e333a6b9_UseExpr;
struct _1e333a9a5_TupleExpr;
struct _1e333ad5c_LitExpr;
struct _1e333b566_UnsafeExpr;
struct _1e333b91d_CoExpr;
struct _1e333bd91_IdentExpr;
struct _1e333c59a_UnaryExpr;
struct _1e333c952_VariadicExpr;
struct _1e333cd09_CastExpr;
struct _1e333d1b1_NsSelectionExpr;
struct _1e333d634_SubIdentExpr;
struct _1e333daa7_BinopExpr;
struct _1e333e1b2_FnCallExpr;
struct _1e333eb41_FieldExprPair;
struct _1e334038e_StructLit;
struct _1e3340812_BraceLit;
struct _1e3341329_KeyValPair;
struct _1e334179c_SliceExpr;
struct _1e334213d_IndexingExpr;
struct _1e3342748_SlicingExpr;
struct _1e3342b00_GenericDecl;
struct _1e3342ea7_LabelSt;
struct _1e334335e_GotoSt;
struct _1e334364a_FallSt;
struct _1e3343c55_AssignLeft;
struct _1e3344294_AssignSt;
struct _1e334522e_Stmt;
struct _1e3345839_ScopeTree;
struct _1e3346010_ParamDecl;
struct _1e3347330_FnDecl;
struct _1e334830e_VarDecl;
struct _1e33486b6_RetSt;
struct _1e3348d26_Iter;
struct _1e33495eb_WhileKind;
struct _1e3349e8c_RangeKind;
struct _1e334a344_BreakSt;
struct _1e334a6eb_ContSt;
struct _1e334ab6e_If;
struct _1e334b026_Else;
struct _1e334b499_Conditional;
struct _1e334bb70_TypeAliasDecl;
struct _1e334c0e3_Case;
struct _1e334c7b9_MatchCase;
struct _1e334d05b_UseDecl;
struct _1e334d4ce_EnumItemDecl;
struct _1e334e007_EnumDecl;
struct _1e334ea0d_TypeEnumItemDecl;
struct _1e3350118_TypeEnumDecl;
struct _1e3350316_FieldDecl;
struct _1e3350ab9_StructDecl;
struct _1e33511c4_TraitDecl;
struct _1e33517ce_Impl;
struct _1e3388a47_Const;
struct _1e3a1a607_FloatInfo;
struct _1e391b23e_DecimalSlice;
struct _1e3e4ba49_LeftCheat;
struct _1e3e4bdac_Decimal;
struct _1e3325ee0_Field;
struct _1e332791a_Operators;
struct _1e3318840_Struct;
struct _1e332d657_FieldIns;
struct _1e33cb073_OperandExprModel;
struct _1e33e9536_BinopExprModel;
struct _1e33e9723_UnaryExprModel;
struct _1e33e9910_StructArgExprModel;
struct _1e33e9aec_StructLitExprModel;
struct _1e33e9cd9_AllocStructLitExprModel;
struct _1e33e9ec6_CastingExprModel;
struct _1e33ea1b3_FnCallExprModel;
struct _1e33ea3a0_SliceExprModel;
struct _1e33ea58c_IndexingExprModel;
struct _1e33ea779_AnonFnExprModel;
struct _1e33ea966_KeyValPairExprModel;
struct _1e33eab53_MapExprModel;
struct _1e33ead40_SlicingExprModel;
struct _1e33eb02c_TraitSubIdentExprModel;
struct _1e33eb44a_StructSubIdentExprModel;
struct _1e33eb637_StructStaticIdentExprModel;
struct _1e33eb824_ArrayExprModel;
struct _1e33eba11_CommonIdentExprModel;
struct _1e33ebbed_CommonSubIdentExprModel;
struct _1e33ebdda_TupleExprModel;
struct _1e33ec0c7_BuiltinOutCallExprModel;
struct _1e33ec2b4_BuiltinOutlnCallExprModel;
struct _1e33ec4a1_BuiltinCloneCallExprModel;
struct _1e33ec68d_BuiltinNewCallExprModel;
struct _1e33ec87a_BuiltinPanicCallExprModel;
struct _1e33eca67_BuiltinAssertCallExprModel;
struct _1e33ecc54_BuiltinMakeCallExprModel;
struct _1e33ece41_BuiltinAppendCallExprModel;
struct _1e33ed12d_BuiltinCopyCallExprModel;
struct _1e33ed31a_BuiltinErrorCallExprModel;
struct _1e33eb219_SizeofExprModel;
struct _1e33ed97a_AlignofExprModel;
struct _1e33edb67_RuneExprModel;
struct _1e33edd54_IntegratedToStrExprModel;
struct _1e33ee041_BackendEmitExprModel;
struct _1e33ee22d_FreeExprModel;
struct _1e33ee9c0_RetType;
struct _1e3400163_Param;
struct _1e34019a0_Fn;
struct _1e3403782_ParamIns;
struct _1e3404651_FnIns;
struct _1e3406e17_ReferenceStack;
struct _1e34082d1_Pass;
struct _1e340c77a_SymbolBuilder;
struct _1e374ee30_Trait;
struct _1e35972d8_EnumItem;
struct _1e34189c8_Enum;
struct _1e3584902_TypeEnumItem;
struct _1e37eea6d_TypeEnum;
struct _1e35092a0_Impl;
struct _1e3e547aa_Scope;
struct _1e3eb7ea0_If;
struct _1e3ebe45c_Else;
struct _1e3ecc9ed_Conditional;
struct _1e3eccbda_InfIter;
struct _1e3eccdc7_WhileIter;
struct _1e3ecd0b4_RangeIter;
struct _1e3ecd2a1_ContSt;
struct _1e3ecd48d_BreakSt;
struct _1e3ecd67a_Label;
struct _1e3ecd867_GotoSt;
struct _1e3ecda54_Postfix;
struct _1e3ecdc41_Assign;
struct _1e3ecde2d_MultiAssign;
struct _1e3ece11a_Match;
struct _1e3ece538_Case;
struct _1e3ece725_FallSt;
struct _1e3ece912_RetSt;
struct _1e3eceaee_ScopeLabel;
struct _1e3ececdb_ScopeGoto;
struct _1e3ed06d2_ScopeChecker;
struct _1e3ee1825_DirectiveChecker;
struct _1e3ee752e_ImportInfo;
struct _1e3eea488_Package;
struct _1e400067a_Sema;
struct _1e4017d02_MissingRetChecker;
struct _1e40199b3_IterRelation;
struct _1e401a92b_Var;
struct _1e401b454_FuncPattern;
struct _1e4051d2a_TypeCompatibilityChecker;
struct _1e4053953_AssignTypeChecker;
struct _1e40552a1_DynamicTypeAnnotation;
struct _1e4058062_FnCallArgChecker;
struct _1e405a96b_StructLitChecker;
struct _1e405c550_RangeChecker;
struct _1e405e6d9_RetTypeChecker;
struct _1e4061466_SymbolTable;
struct _1e40662e5_Data;
struct _1e406736d_Value;
struct _1e4067d63_Eval;
struct _1e4083653_UnaryEval;
struct _1e40853e1_BinaryEval;
struct _1e4090929_TypeAlias;
struct _1e4091661_TypeKind;
struct _1e4095775_TypeSymbol;
struct _1e4096138_Prim;
struct _1e4099647_Sptr;
struct _1e409a0a4_Slc;
struct _1e409aa99_Tuple;
struct _1e409b65a_Map;
struct _1e409c24e_Arr;
struct _1e409cbab_Ptr;
struct _1e409db02_Referencer;
struct _1e409e84a_TypeChecker;
struct _1e40a705b_IdentTypeLookup;
struct _1e479d235_FileInfo;
struct _1e47ee918_stmt;
struct _1e4800243_ScopeParser;
struct _1e480b815_CallData;
struct _1e480cc9a_ExprBuilder;
struct _1e481802a_AssignInfo;
struct _1e481b1b5_Parser;
struct _1e482c58e_TypeBuilder;
struct _1e4171114_CompileInfo;
struct _1e4172467_DirectiveEval;
struct _1e426a131_JuleImporter;
struct _1e4488151_OrderedDefines;
struct _1e425c91a_DefineOrderer;
struct _1e48e2c92_LiveTable;
struct _1e49252ad_ScopeDeadCode;
struct _1e4928e82_ExprDeadCode;
struct _1e1c5d462_UnsafeBinopExprModel;
struct _1e271c1d9_UnsafeIndexingExprModel;
struct _1e27a0ed7_PushToSliceExprModel;
struct _1e2ae7680_MutSlicingExprModel;
struct _1e1c9a9ee_StrInsertBeginExprModel;
struct _1e1c9b978_ScopeOptimizer;
struct _1e20883e6_ExprOptimizer;
struct _1e4896817_Optimizer;
struct _1e4933e48_AnsiEscape;
struct _1e4935466_Logger;
struct _1e50164c5_AbsTime;
struct _1e5016b68_Time;
struct _1e4e9055e_ScopeCoder;
struct _1e4e980a0_ExprCoder;
struct _1e4ea5e9d_DeriveCoder;
struct _1e4ea73cd_TestCoder;
struct _1e4ea9a2e_IdentCoder;
struct _1e501be8c_SerializationInfo;
struct _1e501c179_TraitHash;
struct _1e5022dd8_CustomType;
struct _1e50236d0_TypeCoder;
struct _1e787ba91_Flag;
struct _1e78806ee_Flag;
struct _1e7884181_Flag;
struct _1e7887b57_Flag;
struct _1e788b5d9_Flag;
struct _1e50595d4_FlagSet;
struct _1e4675e54_IR;
struct _1e3352093_StructIns;
struct _1e48e305b_ObjectDeadCode;
struct _1e501c366_ObjectCoder;
struct _1e505bcac_ArgParser;
struct _216495092_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_216495092_accept_range(void) = default;

	inline bool operator==(_216495092_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_216495092_accept_range _other) { return !this->operator==(_other); }


};
struct _1e1889104_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_1e1889104_Range16(void) = default;

	inline bool operator==(_1e1889104_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1e1889104_Range16 _other) { return !this->operator==(_other); }


};
struct _1e1889577_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_1e1889577_Range32(void) = default;

	inline bool operator==(_1e1889577_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1e1889577_Range32 _other) { return !this->operator==(_other); }


};
struct _1e18899ea_RangeTable {
	jule::Slice<_1e1889104_Range16> _field_r16 = jule::Slice<_1e1889104_Range16>();
	jule::Slice<_1e1889577_Range32> _field_r32 = jule::Slice<_1e1889577_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_1e18899ea_RangeTable(void) = default;

	inline bool operator==(_1e18899ea_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1e18899ea_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e1890160_index(_1e188ee73_LazyBuff*, jule::I64);
inline void _1e1890292_append(_1e188ee73_LazyBuff*, jule::U8);
inline jule::Str _1e18903c4_string(_1e188ee73_LazyBuff*);
struct _1e188ee73_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_1e188ee73_LazyBuff(void) = default;

	inline bool operator==(_1e188ee73_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1e188ee73_LazyBuff _other) { return !this->operator==(_other); }


};
struct _2162e46d8_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_2163c371d_Status> _field_stat = jule::Ptr<_2163c371d_Status>();
	

	_2162e46d8_DirEntry(void) = default;

	inline bool operator==(_2162e46d8_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_2162e46d8_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>> static__1e18910d9_read(jule::Str);
inline jule::VoidExceptional static__1e189121b_create(jule::Str);
inline jule::VoidExceptional static__1e189134d_remove(jule::Str);
struct _2162e6421_Directory {
	

	_2162e6421_Directory(void) = default;

	inline bool operator==(_2162e6421_Directory _other) { return true; }

	inline bool operator!=(_2162e6421_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2163c3355_File> static__2162d0d9a_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2163c3355_File>> static__2162d3dae_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2162e5233_read(jule::Str);
inline jule::VoidExceptional static__2162e540e_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2162e8951_seek(_2163c3355_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2162e660d_close(_2163c3355_File*);
inline jule::Exceptional<jule::Ptr<_2163c3355_File>> static__21642b7ed_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__21645774c_remove(jule::Str);
inline jule::Exceptional<jule::I64> _2164685e8_write(_2163c3355_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21642ca96_read(_2163c3355_File*, jule::Slice<jule::U8>);
struct _2163c3355_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_2163c3355_File(void) = default;

	inline bool operator==(_2163c3355_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2163c3355_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _22ebe5e06_is_dir(_2163c371d_Status*);
inline jule::Bool _22ebe5b70_is_reg(_2163c371d_Status*);
inline jule::Exceptional<jule::Ptr<_2163c371d_Status>> static__1e189165b_of(jule::Str);
struct _2163c371d_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_2163c371d_Status(void) = default;

	inline bool operator==(_2163c371d_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2163c371d_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e194507d_Cmd> static__1e19454ac_new(jule::Str);
inline jule::Exceptional<jule::I64> _1e1945721_spawn(_1e194507d_Cmd*);
inline jule::Exceptional<jule::I64> _1e195a3e5___spawn(_1e194507d_Cmd*);
struct _1e194507d_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_1e194507d_Cmd(void) = default;

	inline bool operator==(_1e194507d_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1e194507d_Cmd _other) { return !this->operator==(_other); }


};
struct _1e1905060_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_1e1905060_Log(void) = default;

	inline bool operator==(_1e1905060_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1e1905060_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e1c3239d_prec(_1e1c31ee6_Token*);
struct _1e1c31ee6_Token {
	jule::Ptr<_1e1c37381_File> _field_file = jule::Ptr<_1e1c37381_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_1e1c31ee6_Token(void) = default;

	inline bool operator==(_1e1c31ee6_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1e1c31ee6_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e1c3778d_is_ok(_1e1c37381_File*);
inline void _1e1c37a13_fill(_1e1c37381_File*, jule::Slice<jule::U8>);
inline jule::Str _1e1c37c77_dir(_1e1c37381_File*);
inline jule::Str _1e1c37edb_name(_1e1c37381_File*);
inline jule::Uintptr _1e1c38250_addr(_1e1c37381_File*);
inline jule::Str _1e1c3855d_get_row(_1e1c37381_File*, jule::I64);
struct _1e1c37381_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	

	_1e1c37381_File(void) = default;

	inline bool operator==(_1e1c37381_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1e1c37381_File _other) { return !this->operator==(_other); }


};
struct _1e1c393d8_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1e1c393d8_KindPair(void) = default;

	inline bool operator==(_1e1c393d8_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1e1c393d8_KindPair _other) { return !this->operator==(_other); }


};
inline void _1e1c405a9_push_err(_1e1c40015_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1e1c408c8_push_err_tok(_1e1c40015_Lex*, jule::Ptr<_1e1c31ee6_Token>&, jule::Str);
inline void _1e1c40aa4_lex(_1e1c40015_Lex*);
inline jule::Str _1e1c40db2_id(_1e1c40015_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e1c41126_resume(_1e1c40015_Lex*);
inline void _1e1c4139b_lex_line_comment(_1e1c40015_Lex*, jule::Ptr<_1e1c31ee6_Token>&);
inline void _1e1c41621_lex_range_comment(_1e1c40015_Lex*, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Str _1e1c4192e_num(_1e1c40015_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e1c41c3c_escape_seq(_1e1c40015_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e1c420e4_get_rune(_1e1c40015_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1e1c42402_lex_rune(_1e1c40015_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1e1c42666_lex_str(_1e1c40015_Lex*);
inline jule::Bool _1e1c428ca_is_first_token_of_line(_1e1c40015_Lex*);
inline void _1e1c42aa6_new_line(_1e1c40015_Lex*);
inline jule::Bool _1e1c430a1_is_op(_1e1c40015_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e1c43458_lex_basic_ops(_1e1c40015_Lex*, jule::Slice<jule::U8>, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e1c43810_lex_id(_1e1c40015_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e1c43bb7_lex_num(_1e1c40015_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Ptr<_1e1c31ee6_Token> _1e1c43e2b_token(_1e1c40015_Lex*);
struct _1e1c40015_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Ptr<_1e1c37381_File> _field_file = jule::Ptr<_1e1c37381_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1e1905060_Log> _field_errors = jule::Slice<_1e1905060_Log>();
	

	_1e1c40015_Lex(void) = default;

	inline bool operator==(_1e1c40015_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e1c40015_Lex _other) { return !this->operator==(_other); }


};
struct _1e3301383_Ast {
	jule::Ptr<_1e1c37381_File> _field_file = jule::Ptr<_1e1c37381_File>();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Slice<jule::Ptr<_1e334d05b_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1e334d05b_UseDecl>>();
	jule::Slice<_1e3302032_Node> _field_nodes = jule::Slice<_1e3302032_Node>();
	

	_1e3301383_Ast(void) = default;

	inline bool operator==(_1e3301383_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1e3301383_Ast _other) { return !this->operator==(_other); }


};
struct _1e3302032_Node {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_data = jule::Any();
	

	_1e3302032_Node(void) = default;

	inline bool operator==(_1e3302032_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e3302032_Node _other) { return !this->operator==(_other); }


};
struct _1e330242d_Directive {
	jule::Ptr<_1e1c31ee6_Token> _field_tag = jule::Ptr<_1e1c31ee6_Token>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_args = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	

	_1e330242d_Directive(void) = default;

	inline bool operator==(_1e330242d_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e330242d_Directive _other) { return !this->operator==(_other); }


};
struct _1e3335807_TypeDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1e3335807_TypeDecl(void) = default;

	inline bool operator==(_1e3335807_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e3335807_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3336231_is_prim(_1e3335dbd_IdentTypeDecl*);
struct _1e3335dbd_IdentTypeDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>();
	

	_1e3335dbd_IdentTypeDecl(void) = default;

	inline bool operator==(_1e3335dbd_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e3335dbd_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e333651c_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e3335dbd_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_1e3335dbd_IdentTypeDecl>>();
	

	_1e333651c_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1e333651c_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e333651c_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e33368c4_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_idents = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e33368c4_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1e33368c4_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e33368c4_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3336bb0_SptrTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_elem = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e3336bb0_SptrTypeDecl(void) = default;

	inline bool operator==(_1e3336bb0_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e3336bb0_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e33370ab_SlcTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_elem = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e33370ab_SlcTypeDecl(void) = default;

	inline bool operator==(_1e33370ab_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e33370ab_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3337397_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>();
	

	_1e3337397_TupleTypeDecl(void) = default;

	inline bool operator==(_1e3337397_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1e3337397_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e33379d5_is_unsafe(_1e3337683_PtrTypeDecl*);
struct _1e3337683_PtrTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_elem = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e3337683_PtrTypeDecl(void) = default;

	inline bool operator==(_1e3337683_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e3337683_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e33381de_auto_sized(_1e3337d15_ArrTypeDecl*);
struct _1e3337d15_ArrTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_elem = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3339d28_Expr> _field_size = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3337d15_ArrTypeDecl(void) = default;

	inline bool operator==(_1e3337d15_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e3337d15_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3338563_MapTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_key = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3335807_TypeDecl> _field_val = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e3338563_MapTypeDecl(void) = default;

	inline bool operator==(_1e3338563_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e3338563_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e333891a_RetTypeDecl {
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_idents = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	

	_1e333891a_RetTypeDecl(void) = default;

	inline bool operator==(_1e333891a_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e333891a_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e3339d28_Expr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1e3339d28_Expr(void) = default;

	inline bool operator==(_1e3339d28_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e3339d28_Expr _other) { return !this->operator==(_other); }


};
struct _1e333a114_RangeExpr {
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333a114_RangeExpr(void) = default;

	inline bool operator==(_1e333a114_RangeExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333a114_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1e333a6b9_UseExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333a6b9_UseExpr(void) = default;

	inline bool operator==(_1e333a6b9_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333a6b9_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e333a9a5_TupleExpr {
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_expr = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	

	_1e333a9a5_TupleExpr(void) = default;

	inline bool operator==(_1e333a9a5_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333a9a5_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e333b1ae_is_nil(_1e333ad5c_LitExpr*);
struct _1e333ad5c_LitExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_value = jule::Str();
	

	_1e333ad5c_LitExpr(void) = default;

	inline bool operator==(_1e333ad5c_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e333ad5c_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e333b566_UnsafeExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333b566_UnsafeExpr(void) = default;

	inline bool operator==(_1e333b566_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333b566_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e333b91d_CoExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333b91d_CoExpr(void) = default;

	inline bool operator==(_1e333b91d_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333b91d_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e333c1e3_is_self(_1e333bd91_IdentExpr*);
struct _1e333bd91_IdentExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1e333bd91_IdentExpr(void) = default;

	inline bool operator==(_1e333bd91_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1e333bd91_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e333c59a_UnaryExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333c59a_UnaryExpr(void) = default;

	inline bool operator==(_1e333c59a_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333c59a_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e333c952_VariadicExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333c952_VariadicExpr(void) = default;

	inline bool operator==(_1e333c952_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333c952_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e333cd09_CastExpr {
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333cd09_CastExpr(void) = default;

	inline bool operator==(_1e333cd09_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333cd09_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e333d1b1_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_ns = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Ptr<_1e1c31ee6_Token> _field_ident = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e333d1b1_NsSelectionExpr(void) = default;

	inline bool operator==(_1e333d1b1_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e333d1b1_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1e333d634_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e1c31ee6_Token> _field_ident = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e333d634_SubIdentExpr(void) = default;

	inline bool operator==(_1e333d634_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e333d634_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e333daa7_BinopExpr {
	jule::Ptr<_1e3339d28_Expr> _field_left = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3339d28_Expr> _field_right = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e333daa7_BinopExpr(void) = default;

	inline bool operator==(_1e333daa7_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e333daa7_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e333e525_unhandled(_1e333e1b2_FnCallExpr*);
inline jule::Bool _1e333e789_ignored(_1e333e1b2_FnCallExpr*);
struct _1e333e1b2_FnCallExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_args = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	jule::Ptr<_1e3345839_ScopeTree> _field_exception = jule::Ptr<_1e3345839_ScopeTree>();
	

	_1e333e1b2_FnCallExpr(void) = default;

	inline bool operator==(_1e333e1b2_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1e333e1b2_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e333ee93_is_targeted(_1e333eb41_FieldExprPair*);
struct _1e333eb41_FieldExprPair {
	jule::Ptr<_1e1c31ee6_Token> _field_field = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e333eb41_FieldExprPair(void) = default;

	inline bool operator==(_1e333eb41_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e333eb41_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e334038e_StructLit {
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	

	_1e334038e_StructLit(void) = default;

	inline bool operator==(_1e334038e_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e334038e_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3340e83_is_empty(_1e3340812_BraceLit*);
struct _1e3340812_BraceLit {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	

	_1e3340812_BraceLit(void) = default;

	inline bool operator==(_1e3340812_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e3340812_BraceLit _other) { return !this->operator==(_other); }


};
struct _1e3341329_KeyValPair {
	jule::Ptr<_1e3339d28_Expr> _field_key = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3339d28_Expr> _field_val = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e1c31ee6_Token> _field_colon = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e3341329_KeyValPair(void) = default;

	inline bool operator==(_1e3341329_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1e3341329_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3341aee_is_empty(_1e334179c_SliceExpr*);
struct _1e334179c_SliceExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	

	_1e334179c_SliceExpr(void) = default;

	inline bool operator==(_1e334179c_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e334179c_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1e334213d_IndexingExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3339d28_Expr> _field_index = jule::Ptr<_1e3339d28_Expr>();
	

	_1e334213d_IndexingExpr(void) = default;

	inline bool operator==(_1e334213d_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e334213d_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e3342748_SlicingExpr {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3339d28_Expr> _field_start = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3339d28_Expr> _field_to = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3342748_SlicingExpr(void) = default;

	inline bool operator==(_1e3342748_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1e3342748_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e3342b00_GenericDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e3342b00_GenericDecl(void) = default;

	inline bool operator==(_1e3342b00_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3342b00_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e3342ea7_LabelSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e3342ea7_LabelSt(void) = default;

	inline bool operator==(_1e3342ea7_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3342ea7_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e334335e_GotoSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_label = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e334335e_GotoSt(void) = default;

	inline bool operator==(_1e334335e_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e334335e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e334364a_FallSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e334364a_FallSt(void) = default;

	inline bool operator==(_1e334364a_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1e334364a_FallSt _other) { return !this->operator==(_other); }


};
struct _1e3343c55_AssignLeft {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3343c55_AssignLeft(void) = default;

	inline bool operator==(_1e3343c55_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e3343c55_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e3344294_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1e1c31ee6_Token> _field_setter = jule::Ptr<_1e1c31ee6_Token>();
	jule::Slice<jule::Ptr<_1e3343c55_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1e3343c55_AssignLeft>>();
	jule::Ptr<_1e3339d28_Expr> _field_right = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3344294_AssignSt(void) = default;

	inline bool operator==(_1e3344294_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e3344294_AssignSt _other) { return !this->operator==(_other); }


};
struct _1e334522e_Stmt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_data = jule::Any();
	

	_1e334522e_Stmt(void) = default;

	inline bool operator==(_1e334522e_Stmt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e334522e_Stmt _other) { return !this->operator==(_other); }


};
struct _1e3345839_ScopeTree {
	jule::Ptr<_1e3345839_ScopeTree> _field_parent = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1e334522e_Stmt> _field_stmts = jule::Slice<_1e334522e_Stmt>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e3345839_ScopeTree(void) = default;

	inline bool operator==(_1e3345839_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e3345839_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3346373_is_self(_1e3346010_ParamDecl*);
inline jule::Bool _1e33465d7_is_ref(_1e3346010_ParamDecl*);
struct _1e3346010_ParamDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1e3346010_ParamDecl(void) = default;

	inline bool operator==(_1e3346010_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3346010_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3347682_is_anon(_1e3347330_FnDecl*);
struct _1e3347330_FnDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>();
	jule::Ptr<_1e333891a_RetTypeDecl> _field_result = jule::Ptr<_1e333891a_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e3346010_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1e3346010_ParamDecl>>();
	

	_1e3347330_FnDecl(void) = default;

	inline bool operator==(_1e3347330_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1e3347330_FnDecl _other) { return !this->operator==(_other); }


};
struct _1e334830e_VarDecl {
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e334830e_VarDecl(void) = default;

	inline bool operator==(_1e334830e_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e334830e_VarDecl _other) { return !this->operator==(_other); }


};
struct _1e33486b6_RetSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e33486b6_RetSt(void) = default;

	inline bool operator==(_1e33486b6_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33486b6_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3349178_is_inf(_1e3348d26_Iter*);
struct _1e3348d26_Iter {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	

	_1e3348d26_Iter(void) = default;

	inline bool operator==(_1e3348d26_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3348d26_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e334994d_is_while_next(_1e33495eb_WhileKind*);
struct _1e33495eb_WhileKind {
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1e1c31ee6_Token> _field_next_token = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e33495eb_WhileKind(void) = default;

	inline bool operator==(_1e33495eb_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1e33495eb_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e3349e8c_RangeKind {
	jule::Ptr<_1e1c31ee6_Token> _field_in_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e334830e_VarDecl> _field_key_a = jule::Ptr<_1e334830e_VarDecl>();
	jule::Ptr<_1e334830e_VarDecl> _field_key_b = jule::Ptr<_1e334830e_VarDecl>();
	

	_1e3349e8c_RangeKind(void) = default;

	inline bool operator==(_1e3349e8c_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e3349e8c_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e334a344_BreakSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_label = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e334a344_BreakSt(void) = default;

	inline bool operator==(_1e334a344_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e334a344_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e334a6eb_ContSt {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_label = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e334a6eb_ContSt(void) = default;

	inline bool operator==(_1e334a6eb_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e334a6eb_ContSt _other) { return !this->operator==(_other); }


};
struct _1e334ab6e_If {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	

	_1e334ab6e_If(void) = default;

	inline bool operator==(_1e334ab6e_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e334ab6e_If _other) { return !this->operator==(_other); }


};
struct _1e334b026_Else {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	

	_1e334b026_Else(void) = default;

	inline bool operator==(_1e334b026_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e334b026_Else _other) { return !this->operator==(_other); }


};
struct _1e334b499_Conditional {
	jule::Ptr<_1e334ab6e_If> _field_head = jule::Ptr<_1e334ab6e_If>();
	jule::Slice<jule::Ptr<_1e334ab6e_If>> _field_tail = jule::Slice<jule::Ptr<_1e334ab6e_If>>();
	jule::Ptr<_1e334b026_Else> _field_default = jule::Ptr<_1e334b026_Else>();
	

	_1e334b499_Conditional(void) = default;

	inline bool operator==(_1e334b499_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e334b499_Conditional _other) { return !this->operator==(_other); }


};
struct _1e334bb70_TypeAliasDecl {
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e334bb70_TypeAliasDecl(void) = default;

	inline bool operator==(_1e334bb70_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e334bb70_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e334c0e3_Case {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	

	_1e334c0e3_Case(void) = default;

	inline bool operator==(_1e334c0e3_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e334c0e3_Case _other) { return !this->operator==(_other); }


};
struct _1e334c7b9_MatchCase {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Slice<jule::Ptr<_1e334c0e3_Case>> _field_cases = jule::Slice<jule::Ptr<_1e334c0e3_Case>>();
	jule::Ptr<_1e334b026_Else> _field_default = jule::Ptr<_1e334b026_Else>();
	

	_1e334c7b9_MatchCase(void) = default;

	inline bool operator==(_1e334c7b9_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e334c7b9_MatchCase _other) { return !this->operator==(_other); }


};
struct _1e334d05b_UseDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_selected = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1e334d05b_UseDecl(void) = default;

	inline bool operator==(_1e334d05b_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1e334d05b_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e334d831_auto_expr(_1e334d4ce_EnumItemDecl*);
struct _1e334d4ce_EnumItemDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	

	_1e334d4ce_EnumItemDecl(void) = default;

	inline bool operator==(_1e334d4ce_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e334d4ce_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e334e58a_default_typed(_1e334e007_EnumDecl*);
struct _1e334e007_EnumDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e334e007_EnumDecl(void) = default;

	inline bool operator==(_1e334e007_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e334e007_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1e334ea0d_TypeEnumItemDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	

	_1e334ea0d_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1e334ea0d_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e334ea0d_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e3350118_TypeEnumDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e3350118_TypeEnumDecl(void) = default;

	inline bool operator==(_1e3350118_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e3350118_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1e3350316_FieldDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e3335807_TypeDecl> _field_kind = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3339d28_Expr> _field_default = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3350316_FieldDecl(void) = default;

	inline bool operator==(_1e3350316_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e3350316_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e3350ab9_StructDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e3350316_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1e3350316_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>();
	

	_1e3350ab9_StructDecl(void) = default;

	inline bool operator==(_1e3350ab9_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e3350ab9_StructDecl _other) { return !this->operator==(_other); }


};
struct _1e33511c4_TraitDecl {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1e3347330_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e3347330_FnDecl>>();
	

	_1e33511c4_TraitDecl(void) = default;

	inline bool operator==(_1e33511c4_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1e33511c4_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3351b42_is_trait_impl(_1e33517ce_Impl*);
inline jule::Bool _1e3351da6_is_struct_impl(_1e33517ce_Impl*);
struct _1e33517ce_Impl {
	jule::Ptr<_1e1c31ee6_Token> _field_end = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3335807_TypeDecl> _field_base = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3335807_TypeDecl> _field_dest = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Slice<jule::Ptr<_1e3347330_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e3347330_FnDecl>>();
	jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1e334830e_VarDecl>>();
	

	_1e33517ce_Impl(void) = default;

	inline bool operator==(_1e33517ce_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e33517ce_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3388a47_Const> static__1e33e1165_new_i64(jule::I64);
inline jule::Ptr<_1e3388a47_Const> static__1e33e1297_new_u64(jule::U64);
inline jule::Ptr<_1e3388a47_Const> static__1e33e13c9_new_bool(jule::Bool);
inline jule::Ptr<_1e3388a47_Const> static__1e33e160a_new_str(jule::Str);
inline jule::Ptr<_1e3388a47_Const> static__1e33e18a2_new_f64(jule::F64);
inline jule::Ptr<_1e3388a47_Const> static__1e33e1aa0_new_nil(void);
inline jule::I64 _1e33e2199_read_i64(_1e3388a47_Const*);
inline jule::U64 _1e33e240d_read_u64(_1e3388a47_Const*);
inline jule::Bool _1e33e2672_read_bool(_1e3388a47_Const*);
inline jule::Str _1e33e28d6_read_str(_1e3388a47_Const*);
inline jule::F64 _1e33e2b4a_read_f64(_1e3388a47_Const*);
inline jule::I64 _1e33e2dae_as_i64(_1e3388a47_Const*);
inline jule::U64 _1e33e3123_as_u64(_1e3388a47_Const*);
inline jule::F64 _1e33e3387_as_f64(_1e3388a47_Const*);
inline void _1e33e360c_set_i64(_1e3388a47_Const*, jule::I64);
inline void _1e33e3882_set_u64(_1e3388a47_Const*, jule::U64);
inline void _1e33e3b07_set_bool(_1e3388a47_Const*, jule::Bool);
inline void _1e33e3d7c_set_str(_1e3388a47_Const*, jule::Str);
inline void _1e33e4102_set_f64(_1e3388a47_Const*, jule::F64);
inline void _1e33e42cd_set_nil(_1e3388a47_Const*);
inline jule::Bool _1e33e4542_is_i64(_1e3388a47_Const*);
inline jule::Bool _1e33e47a6_is_u64(_1e3388a47_Const*);
inline jule::Bool _1e33e4a1a_is_bool(_1e3388a47_Const*);
inline jule::Bool _1e33e4c7e_is_str(_1e3388a47_Const*);
inline jule::Bool _1e33e4ee3_is_f64(_1e3388a47_Const*);
inline jule::Bool _1e33e5257_is_nil(_1e3388a47_Const*);
inline jule::Bool _1e33e5565_are_same_types(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e5873_and(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e5b81_or(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e5e8e_eq(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e629c_lt(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e65aa_lt_eq(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e68b8_gt(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e6bc6_gt_eq(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e6ed4_add(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e72e2_sub(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e7600_mul(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e790d_div(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e7c1b_mod(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e8029_bitwise_and(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e8337_bitwise_or(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e8645_xor(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e8953_lshift(_1e3388a47_Const*, _1e3388a47_Const);
inline jule::Bool _1e33e8c61_rshift(_1e3388a47_Const*, _1e3388a47_Const);
struct _1e3388a47_Const {
	jule::Any _field_data = jule::Any();
	

	_1e3388a47_Const(void) = default;

	inline jule::Bool operator==(_1e3388a47_Const _other) { return _1e33e5e8e_eq(this, _other); }

	inline bool operator!=(_1e3388a47_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e3388a47_Const _other) { return _1e33e68b8_gt(this, _other); }

	inline jule::Bool operator>=(_1e3388a47_Const _other) { return _1e33e6bc6_gt_eq(this, _other); }

	inline jule::Bool operator<(_1e3388a47_Const _other) { return _1e33e629c_lt(this, _other); }

	inline jule::Bool operator<=(_1e3388a47_Const _other) { return _1e33e65aa_lt_eq(this, _other); }


};
struct _1e3a1a607_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1e3a1a607_FloatInfo(void) = default;

	inline bool operator==(_1e3a1a607_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e3a1a607_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1e391b23e_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1e391b23e_DecimalSlice(void) = default;

	inline bool operator==(_1e391b23e_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1e391b23e_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1e3e4ba49_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1e3e4ba49_LeftCheat(void) = default;

	inline bool operator==(_1e3e4ba49_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e3e4ba49_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3c1e5a8_set(_1e3e4bdac_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1e3c5cc01_float_bits(_1e3e4bdac_Decimal*, _1e3a1a607_FloatInfo&);
inline void _1e3e4c099_assign(_1e3e4bdac_Decimal*, jule::U64);
inline void _1e3e4c1cb_shift(_1e3e4bdac_Decimal*, jule::I64);
inline void _1e3e4c30d_round_down(_1e3e4bdac_Decimal*, jule::I64);
inline void _1e3e4c440_round_up(_1e3e4bdac_Decimal*, jule::I64);
inline void _1e3e4c572_round(_1e3e4bdac_Decimal*, jule::I64);
inline jule::U64 _1e3e4c6a4_rounded_integer(_1e3e4bdac_Decimal*);
struct _1e3e4bdac_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1e3e4bdac_Decimal(void) = default;

	inline bool operator==(_1e3e4bdac_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e3e4bdac_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e332d657_FieldIns> _1e3307620_instance(jule::Ptr<_1e3325ee0_Field>);
struct _1e3325ee0_Field {
	jule::Ptr<_1e3318840_Struct> _field_owner = jule::Ptr<_1e3318840_Struct>();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Ptr<_1e3339d28_Expr> _field_default = jule::Ptr<_1e3339d28_Expr>();
	

	_1e3325ee0_Field(void) = default;

	inline bool operator==(_1e3325ee0_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e3325ee0_Field _other) { return !this->operator==(_other); }


};
struct _1e332791a_Operators {
	jule::Ptr<_1e3404651_FnIns> _field_eq = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_gt = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_gt_eq = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_lt = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_lt_eq = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_shl = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_shr = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_add = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_sub = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_div = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_mul = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_mod = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_and = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_or = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_xor = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_neg = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_pos = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_not = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_add_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_sub_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_div_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_mul_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_mod_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_shl_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_shr_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_or_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_and_assign = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3404651_FnIns> _field_bit_xor_assign = jule::Ptr<_1e3404651_FnIns>();
	

	_1e332791a_Operators(void) = default;

	inline bool operator==(_1e332791a_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1e332791a_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3352093_StructIns> _1e330d714_instance(jule::Ptr<_1e3318840_Struct>);
inline jule::Ptr<_1e3352093_StructIns> _1e331297c_append_instance(_1e3318840_Struct*, jule::Ptr<_1e3352093_StructIns>&);
inline jule::Ptr<_1e34019a0_Fn> _1e33136d6_find_method(_1e3318840_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e401a92b_Var> _1e331593b_find_static(_1e3318840_Struct*, jule::Str);
inline jule::Ptr<_1e3325ee0_Field> _1e331694d_find_field(_1e3318840_Struct*, jule::Str);
inline jule::Bool _1e3315d8c_is_implements(_1e3318840_Struct*, jule::Ptr<_1e374ee30_Trait>);
inline jule::Bool _1e3318169_is_derives(_1e3318840_Struct*, jule::Str);
inline jule::Bool _1e3317575_is_uses(_1e3318840_Struct*, jule::Ptr<_1e3318840_Struct>);
inline jule::Bool _1e3318c91_has_ref_accessible(_1e3318840_Struct*);
struct _1e3318840_Struct {
	jule::Ptr<_1e400067a_Sema> _field_sema = jule::Ptr<_1e400067a_Sema>();
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _field_depends = jule::Slice<jule::Ptr<_1e3318840_Struct>>();
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _field_uses = jule::Slice<jule::Ptr<_1e3318840_Struct>>();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e3325ee0_Field>> _field_fields = jule::Slice<jule::Ptr<_1e3325ee0_Field>>();
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e34019a0_Fn>>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_statics = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e374ee30_Trait>> _field_implements = jule::Slice<jule::Ptr<_1e374ee30_Trait>>();
	jule::Slice<jule::Ptr<_1e3352093_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1e3352093_StructIns>>();
	

	_1e3318840_Struct(void) = default;

	inline bool operator==(_1e3318840_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e3318840_Struct _other) { return !this->operator==(_other); }


};
struct _1e332d657_FieldIns {
	jule::Ptr<_1e3325ee0_Field> _field_decl = jule::Ptr<_1e3325ee0_Field>();
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e40662e5_Data> _field_default = jule::Ptr<_1e40662e5_Data>();
	

	_1e332d657_FieldIns(void) = default;

	inline bool operator==(_1e332d657_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e332d657_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e33cb073_OperandExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1e33cb073_OperandExprModel(void) = default;

	inline bool operator==(_1e33cb073_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e33cb073_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9536_BinopExprModel {
	jule::Ptr<_1e33cb073_OperandExprModel> _field_left = jule::Ptr<_1e33cb073_OperandExprModel>();
	jule::Ptr<_1e33cb073_OperandExprModel> _field_right = jule::Ptr<_1e33cb073_OperandExprModel>();
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e33e9536_BinopExprModel(void) = default;

	inline bool operator==(_1e33e9536_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e33e9536_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9723_UnaryExprModel {
	jule::Ptr<_1e40662e5_Data> _field_expr = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e33e9723_UnaryExprModel(void) = default;

	inline bool operator==(_1e33e9723_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e33e9723_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9910_StructArgExprModel {
	jule::Ptr<_1e332d657_FieldIns> _field_field = jule::Ptr<_1e332d657_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1e33e9910_StructArgExprModel(void) = default;

	inline bool operator==(_1e33e9910_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33e9910_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9aec_StructLitExprModel {
	jule::Ptr<_1e3352093_StructIns> _field_strct = jule::Ptr<_1e3352093_StructIns>();
	jule::Slice<jule::Ptr<_1e33e9910_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e33e9910_StructArgExprModel>>();
	

	_1e33e9aec_StructLitExprModel(void) = default;

	inline bool operator==(_1e33e9aec_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e33e9aec_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9cd9_AllocStructLitExprModel {
	jule::Ptr<_1e33e9aec_StructLitExprModel> _field_lit = jule::Ptr<_1e33e9aec_StructLitExprModel>();
	

	_1e33e9cd9_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e33e9cd9_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1e33e9cd9_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e33e9ec6_CastingExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e4091661_TypeKind> _field_expr_kind = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e33e9ec6_CastingExprModel(void) = default;

	inline bool operator==(_1e33e9ec6_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1e33e9ec6_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ea1b3_FnCallExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3404651_FnIns> _field_func = jule::Ptr<_1e3404651_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1e3e547aa_Scope> _field_except = jule::Ptr<_1e3e547aa_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1e33ea1b3_FnCallExprModel(void) = default;

	inline bool operator==(_1e33ea1b3_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1e33ea1b3_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ea3a0_SliceExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_elem_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e33ea3a0_SliceExprModel(void) = default;

	inline bool operator==(_1e33ea3a0_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e33ea3a0_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ea58c_IndexingExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e40662e5_Data> _field_expr = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e40662e5_Data> _field_index = jule::Ptr<_1e40662e5_Data>();
	

	_1e33ea58c_IndexingExprModel(void) = default;

	inline bool operator==(_1e33ea58c_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e33ea58c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ea779_AnonFnExprModel {
	jule::Ptr<_1e3404651_FnIns> _field_func = jule::Ptr<_1e3404651_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1e33ea779_AnonFnExprModel(void) = default;

	inline bool operator==(_1e33ea779_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1e33ea779_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ea966_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1e33ea966_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e33ea966_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e33ea966_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eab53_MapExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_key_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e4091661_TypeKind> _field_val_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Slice<jule::Ptr<_1e33ea966_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1e33ea966_KeyValPairExprModel>>();
	

	_1e33eab53_MapExprModel(void) = default;

	inline bool operator==(_1e33eab53_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1e33eab53_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ead40_SlicingExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1e33ead40_SlicingExprModel(void) = default;

	inline bool operator==(_1e33ead40_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e33ead40_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eb02c_TraitSubIdentExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e34019a0_Fn> _field_method = jule::Ptr<_1e34019a0_Fn>();
	jule::Ptr<_1e374ee30_Trait> _field_trt = jule::Ptr<_1e374ee30_Trait>();
	

	_1e33eb02c_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e33eb02c_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1e33eb02c_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eb44a_StructSubIdentExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e40662e5_Data> _field_expr = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e4091661_TypeKind> _field_expr_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e3404651_FnIns> _field_method = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e332d657_FieldIns> _field_field = jule::Ptr<_1e332d657_FieldIns>();
	

	_1e33eb44a_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e33eb44a_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e33eb44a_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eb637_StructStaticIdentExprModel {
	jule::Ptr<_1e3352093_StructIns> _field_structure = jule::Ptr<_1e3352093_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e3404651_FnIns> _field_method = jule::Ptr<_1e3404651_FnIns>();
	

	_1e33eb637_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e33eb637_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1e33eb637_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eb824_ArrayExprModel {
	jule::Ptr<_1e409c24e_Arr> _field_kind = jule::Ptr<_1e409c24e_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e33eb824_ArrayExprModel(void) = default;

	inline bool operator==(_1e33eb824_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e33eb824_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eba11_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1e33eba11_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e33eba11_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e33eba11_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ebbed_CommonSubIdentExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_expr_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e33ebbed_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e33ebbed_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e33ebbed_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ebdda_TupleExprModel {
	jule::Slice<jule::Ptr<_1e40662e5_Data>> _field_datas = jule::Slice<jule::Ptr<_1e40662e5_Data>>();
	

	_1e33ebdda_TupleExprModel(void) = default;

	inline bool operator==(_1e33ebdda_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1e33ebdda_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ec0c7_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e33ec0c7_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e33ec0c7_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e33ec0c7_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ec2b4_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e33ec2b4_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e33ec2b4_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e33ec2b4_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ec4a1_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e33ec4a1_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e33ec4a1_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33ec4a1_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ec68d_BuiltinNewCallExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1e33ec68d_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e33ec68d_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1e33ec68d_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ec87a_BuiltinPanicCallExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1e33ec87a_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e33ec87a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33ec87a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eca67_BuiltinAssertCallExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1e33eca67_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e33eca67_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1e33eca67_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ecc54_BuiltinMakeCallExprModel {
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1e33ecc54_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e33ecc54_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1e33ecc54_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ece41_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1e33ece41_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e33ece41_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1e33ece41_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ed12d_BuiltinCopyCallExprModel {
	jule::Ptr<_1e40662e5_Data> _field_dest = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e40662e5_Data> _field_src = jule::Ptr<_1e40662e5_Data>();
	

	_1e33ed12d_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e33ed12d_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1e33ed12d_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ed31a_BuiltinErrorCallExprModel {
	jule::Ptr<_1e3404651_FnIns> _field_func = jule::Ptr<_1e3404651_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1e33ed31a_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e33ed31a_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1e33ed31a_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e33eb219_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e33eb219_SizeofExprModel(void) = default;

	inline bool operator==(_1e33eb219_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33eb219_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ed97a_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e33ed97a_AlignofExprModel(void) = default;

	inline bool operator==(_1e33ed97a_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33ed97a_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e33edb67_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1e33edb67_RuneExprModel(void) = default;

	inline bool operator==(_1e33edb67_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1e33edb67_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e33edd54_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e33edd54_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e33edd54_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33edd54_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ee041_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1e33ee041_BackendEmitExprModel(void) = default;

	inline bool operator==(_1e33ee041_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e33ee041_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ee22d_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e33ee22d_FreeExprModel(void) = default;

	inline bool operator==(_1e33ee22d_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e33ee22d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e33ee9c0_RetType {
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_idents = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	

	_1e33ee9c0_RetType(void) = default;

	inline bool operator==(_1e33ee9c0_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e33ee9c0_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3403782_ParamIns> _1e340052b_instance(jule::Ptr<_1e3400163_Param>);
inline jule::Bool _1e3400790_is_self(_1e3400163_Param*);
inline jule::Bool _1e3400a04_is_ref(_1e3400163_Param*);
struct _1e3400163_Param {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1e3400163_Param(void) = default;

	inline bool operator==(_1e3400163_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3400163_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3401e12_is_void(_1e34019a0_Fn*);
inline jule::Bool _1e3402176_is_method(_1e34019a0_Fn*);
inline jule::Bool _1e34023da_is_entry_point(_1e34019a0_Fn*);
inline jule::Bool _1e340264e_is_init(_1e34019a0_Fn*);
inline jule::Bool _1e34028b3_is_anon(_1e34019a0_Fn*);
inline jule::Bool _1e3402b27_any_var(_1e34019a0_Fn*);
inline jule::Ptr<_1e3404651_FnIns> _1e3402d8b_instance_force(jule::Ptr<_1e34019a0_Fn>);
inline jule::Ptr<_1e3404651_FnIns> _1e3403100_instance(jule::Ptr<_1e34019a0_Fn>);
inline jule::Ptr<_1e3404651_FnIns> _1e34033ca_append_instance(_1e34019a0_Fn*, jule::Ptr<_1e3404651_FnIns>&);
struct _1e34019a0_Fn {
	jule::Ptr<_1e400067a_Sema> _field_sema = jule::Ptr<_1e400067a_Sema>();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>();
	jule::Ptr<_1e33ee9c0_RetType> _field_result = jule::Ptr<_1e33ee9c0_RetType>();
	jule::Slice<jule::Ptr<_1e3400163_Param>> _field_params = jule::Slice<jule::Ptr<_1e3400163_Param>>();
	jule::Ptr<_1e3318840_Struct> _field_owner = jule::Ptr<_1e3318840_Struct>();
	jule::Slice<jule::Ptr<_1e3404651_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1e3404651_FnIns>>();
	

	_1e34019a0_Fn(void) = default;

	inline bool operator==(_1e34019a0_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e34019a0_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3403b5b_to_str(_1e3403782_ParamIns*);
struct _1e3403782_ParamIns {
	jule::Ptr<_1e3400163_Param> _field_decl = jule::Ptr<_1e3400163_Param>();
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e3403782_ParamIns(void) = default;

	inline bool operator==(_1e3403782_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e3403782_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3404981_to_str(_1e3404651_FnIns*);
inline jule::Bool _1e3404c8e_equals(jule::Ptr<_1e3404651_FnIns>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _1e3405135_types(_1e3404651_FnIns*);
inline jule::Bool _1e3405399_is_builtin(_1e3404651_FnIns*);
inline jule::Bool _1e340560d_is_anon(_1e3404651_FnIns*);
inline jule::Bool _1e340591b_same(_1e3404651_FnIns*, jule::Ptr<_1e3404651_FnIns>);
inline jule::Str _1e3405c29_get_kind_str(_1e3404651_FnIns*, jule::Bool);
struct _1e3404651_FnIns {
	jule::Ptr<_1e3352093_StructIns> _field_owner = jule::Ptr<_1e3352093_StructIns>();
	jule::Ptr<_1e34019a0_Fn> _field_decl = jule::Ptr<_1e34019a0_Fn>();
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1e4091661_TypeKind>>();
	jule::Slice<jule::Ptr<_1e3403782_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1e3403782_ParamIns>>();
	jule::Ptr<_1e4091661_TypeKind> _field_result = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	jule::Ptr<_1e3406e17_ReferenceStack> _field_refers = jule::Ptr<_1e3406e17_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1e3404651_FnIns(void) = default;

	inline bool operator==(_1e3404651_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1e3404651_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3406e17_ReferenceStack> static__1e3407203_new(void);
inline jule::I64 _1e3407588_len(_1e3406e17_ReferenceStack*);
inline jule::Any _1e3407896_at(_1e3406e17_ReferenceStack*, jule::I64);
inline void _1e3407b1b_push(_1e3406e17_ReferenceStack*, jule::Any);
inline jule::Bool _1e695c6cd_exist(_1e3406e17_ReferenceStack*, jule::Ptr<_1e3404651_FnIns>);
inline jule::Bool _1e697210a_exist(_1e3406e17_ReferenceStack*, jule::Ptr<_1e401a92b_Var>);
inline jule::Bool _1e6a06d82_exist(_1e3406e17_ReferenceStack*, jule::Ptr<_1e3352093_StructIns>);
inline jule::Bool _1e6c89ca2_exist(_1e3406e17_ReferenceStack*, jule::Ptr<_1e374ee30_Trait>);
struct _1e3406e17_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1e3406e17_ReferenceStack(void) = default;

	inline bool operator==(_1e3406e17_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1e3406e17_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1e34082d1_Pass {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_text = jule::Str();
	

	_1e34082d1_Pass(void) = default;

	inline bool operator==(_1e34082d1_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1e34082d1_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e340c77a_SymbolBuilder> _1e340cc31_get_root(jule::Ptr<_1e340c77a_SymbolBuilder>);
inline void _1e340d0e9_push_err(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e1c31ee6_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e340d4b2_push_err_text(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e1c31ee6_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e340d7d1_push_suggestion(_1e340c77a_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e340dbaa_check_cpp_use_decl_path(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340deb8_build_cpp_header_import(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e2d7_build_std_import(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e5e5_build_ident_import(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e903_build_import(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Bool _1e340ec33_check_duplicate_use_decl(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e3ee752e_ImportInfo>&);
inline void _1e3410063_impl_import_selections(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e3ee752e_ImportInfo>&, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Str _1e3410371_get_as_link_path(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Str);
inline void _1e3410739_push_cycle_error(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e340c77a_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1e3410b02_push_cross_cycle_error(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e340c77a_SymbolBuilder>&, jule::Ptr<_1e3ee752e_ImportInfo>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e3410ea9_check_import_cycles(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e3ee752e_ImportInfo>, jule::Ptr<_1e334d05b_UseDecl>&);
inline void _1e3411394_check_package_accessibility(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1e341175c_import_package(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e3ee752e_ImportInfo>&, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3411a6a_import_use_decl(jule::Ptr<_1e340c77a_SymbolBuilder>, jule::Ptr<_1e334d05b_UseDecl>&);
inline void _1e3411c46_import_use_decls(jule::Ptr<_1e340c77a_SymbolBuilder>);
inline void _1e3411ebb_append_node(_1e340c77a_SymbolBuilder*, _1e3302032_Node&);
inline void _1e3412197_append_nodes(_1e340c77a_SymbolBuilder*);
inline void _1e341241c_push_directive_pass(_1e340c77a_SymbolBuilder*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e34125e8_append_top_directives(_1e340c77a_SymbolBuilder*);
inline void _1e34127c4_build(jule::Ptr<_1e340c77a_SymbolBuilder>);
struct _1e340c77a_SymbolBuilder {
	jule::Ptr<_1e340c77a_SymbolBuilder> _field_owner = jule::Ptr<_1e340c77a_SymbolBuilder>();
	jule::Trait<_1e3ee4c35_Importer> _field_importer = jule::Trait<_1e3ee4c35_Importer>();
	jule::Slice<_1e1905060_Log> _field_errors = jule::Slice<_1e1905060_Log>();
	jule::Ptr<_1e3301383_Ast> _field_ast = jule::Ptr<_1e3301383_Ast>();
	jule::Ptr<_1e4061466_SymbolTable> _field_table = jule::Ptr<_1e4061466_SymbolTable>();
	

	_1e340c77a_SymbolBuilder(void) = default;

	inline bool operator==(_1e340c77a_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1e340c77a_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3468819_to_str(_1e374ee30_Trait*);
inline jule::Bool _1e3468c6a_equals(jule::Ptr<_1e374ee30_Trait>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e3487e76_is_builtin(_1e374ee30_Trait*);
inline jule::Ptr<_1e34019a0_Fn> _1e34a019c_find_method(_1e374ee30_Trait*, jule::Str);
struct _1e374ee30_Trait {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e34019a0_Fn>>();
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1e3318840_Struct>>();
	

	_1e374ee30_Trait(void) = default;

	inline bool operator==(_1e374ee30_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1e374ee30_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e34b41b1_auto_expr(_1e35972d8_EnumItem*);
struct _1e35972d8_EnumItem {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e406736d_Value> _field_value = jule::Ptr<_1e406736d_Value>();
	

	_1e35972d8_EnumItem(void) = default;

	inline bool operator==(_1e35972d8_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e35972d8_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3500719_to_str(_1e34189c8_Enum*);
inline jule::Bool _1e3507e3b_equals(jule::Ptr<_1e34189c8_Enum>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Ptr<_1e35972d8_EnumItem> _1e35854e6_find_item(_1e34189c8_Enum*, jule::Str);
struct _1e34189c8_Enum {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e35972d8_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1e35972d8_EnumItem>>();
	

	_1e34189c8_Enum(void) = default;

	inline bool operator==(_1e34189c8_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1e34189c8_Enum _other) { return !this->operator==(_other); }


};
struct _1e3584902_TypeEnumItem {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	

	_1e3584902_TypeEnumItem(void) = default;

	inline bool operator==(_1e3584902_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e3584902_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e367a4a9_to_str(_1e37eea6d_TypeEnum*);
inline jule::Bool _1e369971a_equals(jule::Ptr<_1e37eea6d_TypeEnum>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Ptr<_1e3584902_TypeEnumItem> _1e375076b_find_item(_1e37eea6d_TypeEnum*, jule::Str);
struct _1e37eea6d_TypeEnum {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>>();
	

	_1e37eea6d_TypeEnum(void) = default;

	inline bool operator==(_1e37eea6d_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1e37eea6d_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3768894_is_trait_impl(_1e35092a0_Impl*);
inline jule::Bool _1e37690c0_is_struct_impl(_1e35092a0_Impl*);
struct _1e35092a0_Impl {
	jule::Ptr<_1e3335807_TypeDecl> _field_base = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e3335807_TypeDecl> _field_dest = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e34019a0_Fn>>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_statics = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	

	_1e35092a0_Impl(void) = default;

	inline bool operator==(_1e35092a0_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e35092a0_Impl _other) { return !this->operator==(_other); }


};
struct _1e3e547aa_Scope {
	jule::Ptr<_1e3e547aa_Scope> _field_parent = jule::Ptr<_1e3e547aa_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1e3e547aa_Scope(void) = default;

	inline bool operator==(_1e3e547aa_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1e3e547aa_Scope _other) { return !this->operator==(_other); }


};
struct _1e3eb7ea0_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	

	_1e3eb7ea0_If(void) = default;

	inline bool operator==(_1e3eb7ea0_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3eb7ea0_If _other) { return !this->operator==(_other); }


};
struct _1e3ebe45c_Else {
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	

	_1e3ebe45c_Else(void) = default;

	inline bool operator==(_1e3ebe45c_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3ebe45c_Else _other) { return !this->operator==(_other); }


};
struct _1e3ecc9ed_Conditional {
	jule::Slice<jule::Ptr<_1e3eb7ea0_If>> _field_elifs = jule::Slice<jule::Ptr<_1e3eb7ea0_If>>();
	jule::Ptr<_1e3ebe45c_Else> _field_default = jule::Ptr<_1e3ebe45c_Else>();
	

	_1e3ecc9ed_Conditional(void) = default;

	inline bool operator==(_1e3ecc9ed_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e3ecc9ed_Conditional _other) { return !this->operator==(_other); }


};
struct _1e3eccbda_InfIter {
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	

	_1e3eccbda_InfIter(void) = default;

	inline bool operator==(_1e3eccbda_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3eccbda_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3ea98ed_is_while_next(_1e3eccdc7_WhileIter*);
struct _1e3eccdc7_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	

	_1e3eccdc7_WhileIter(void) = default;

	inline bool operator==(_1e3eccdc7_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e3eccdc7_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e3ecd0b4_RangeIter {
	jule::Ptr<_1e40662e5_Data> _field_expr = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	jule::Ptr<_1e401a92b_Var> _field_key_a = jule::Ptr<_1e401a92b_Var>();
	jule::Ptr<_1e401a92b_Var> _field_key_b = jule::Ptr<_1e401a92b_Var>();
	

	_1e3ecd0b4_RangeIter(void) = default;

	inline bool operator==(_1e3ecd0b4_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e3ecd0b4_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e3ecd2a1_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1e3ecd2a1_ContSt(void) = default;

	inline bool operator==(_1e3ecd2a1_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1e3ecd2a1_ContSt _other) { return !this->operator==(_other); }


};
struct _1e3ecd48d_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1e3ecd48d_BreakSt(void) = default;

	inline bool operator==(_1e3ecd48d_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1e3ecd48d_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e3ecd67a_Label {
	jule::Str _field_ident = jule::Str();
	

	_1e3ecd67a_Label(void) = default;

	inline bool operator==(_1e3ecd67a_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3ecd67a_Label _other) { return !this->operator==(_other); }


};
struct _1e3ecd867_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1e3ecd867_GotoSt(void) = default;

	inline bool operator==(_1e3ecd867_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e3ecd867_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e3ecda54_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1e3ecda54_Postfix(void) = default;

	inline bool operator==(_1e3ecda54_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e3ecda54_Postfix _other) { return !this->operator==(_other); }


};
struct _1e3ecdc41_Assign {
	jule::Ptr<_1e33cb073_OperandExprModel> _field_l = jule::Ptr<_1e33cb073_OperandExprModel>();
	jule::Ptr<_1e33cb073_OperandExprModel> _field_r = jule::Ptr<_1e33cb073_OperandExprModel>();
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e3ecdc41_Assign(void) = default;

	inline bool operator==(_1e3ecdc41_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e3ecdc41_Assign _other) { return !this->operator==(_other); }


};
struct _1e3ecde2d_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1e3ecde2d_MultiAssign(void) = default;

	inline bool operator==(_1e3ecde2d_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1e3ecde2d_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3eaa7ab_is_generic_type_match(_1e3ece11a_Match*);
struct _1e3ece11a_Match {
	jule::Ptr<_1e40662e5_Data> _field_expr = jule::Ptr<_1e40662e5_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1e3ece538_Case>> _field_cases = jule::Slice<jule::Ptr<_1e3ece538_Case>>();
	jule::Ptr<_1e3ece538_Case> _field_default = jule::Ptr<_1e3ece538_Case>();
	

	_1e3ece11a_Match(void) = default;

	inline bool operator==(_1e3ece11a_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e3ece11a_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3eb8973_is_default(_1e3ece538_Case*);
struct _1e3ece538_Case {
	jule::Ptr<_1e3ece11a_Match> _field_owner = jule::Ptr<_1e3ece11a_Match>();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	jule::Slice<jule::Ptr<_1e40662e5_Data>> _field_exprs = jule::Slice<jule::Ptr<_1e40662e5_Data>>();
	jule::Ptr<_1e3ece538_Case> _field_next = jule::Ptr<_1e3ece538_Case>();
	

	_1e3ece538_Case(void) = default;

	inline bool operator==(_1e3ece538_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1e3ece538_Case _other) { return !this->operator==(_other); }


};
struct _1e3ece725_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1e3ece725_FallSt(void) = default;

	inline bool operator==(_1e3ece725_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1e3ece725_FallSt _other) { return !this->operator==(_other); }


};
struct _1e3ece912_RetSt {
	jule::Ptr<_1e3404651_FnIns> _field_func = jule::Ptr<_1e3404651_FnIns>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_vars = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1e3ece912_RetSt(void) = default;

	inline bool operator==(_1e3ece912_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e3ece912_RetSt _other) { return !this->operator==(_other); }


};
struct _1e3eceaee_ScopeLabel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3ecd67a_Label> _field_label = jule::Ptr<_1e3ecd67a_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1e3ed06d2_ScopeChecker> _field_scope = jule::Ptr<_1e3ed06d2_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1e3eceaee_ScopeLabel(void) = default;

	inline bool operator==(_1e3eceaee_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e3eceaee_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1e3ececdb_ScopeGoto {
	jule::Ptr<_1e334335e_GotoSt> _field_gt = jule::Ptr<_1e334335e_GotoSt>();
	jule::Ptr<_1e3ed06d2_ScopeChecker> _field_scope = jule::Ptr<_1e3ed06d2_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1e3ececdb_ScopeGoto(void) = default;

	inline bool operator==(_1e3ececdb_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e3ececdb_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ed0b33_find_package(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ed0e41_select_package(_1e3ed06d2_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
inline jule::Ptr<_1e401a92b_Var> _1e3ed12e8_find_var(_1e3ed06d2_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e3ed16a0_find_type_alias(_1e3ed06d2_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e3ed1a57_find_struct(_1e3ed06d2_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e3ed1e0e_find_fn(_1e3ed06d2_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e3ed221c_find_trait(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e3ed252a_find_enum(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ed2838_find_type_enum(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Bool _1e3ed2b68_is_unsafe(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Bool _1e3ed2dcc_is_root(_1e3ed06d2_ScopeChecker*);
inline void _1e3ed30a8_stop(_1e3ed06d2_ScopeChecker*);
inline jule::Bool _1e3ed331c_stopped(_1e3ed06d2_ScopeChecker*);
inline jule::Bool _1e3ed3581_is_deferred(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ed37e5_get_root(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ed3a59_get_hard_root(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Ptr<_1e3ecd67a_Label> _1e3ed3d67_find_label(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3ed4175_find_label_scope(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Str);
inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3ed4483_find_label_all(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Bool _1e3ed483a_is_duplicated_ident(_1e3ed06d2_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1e3ed4ab0_check_var_decl(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334830e_VarDecl>);
inline void _1e3ed4d35_check_type_alias_decl(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334bb70_TypeAliasDecl>);
inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5099_get_child(_1e3ed06d2_ScopeChecker*);
inline void _1e3ed5462_check_child_ssc(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3345839_ScopeTree>&, jule::Ptr<_1e3e547aa_Scope>&, jule::Ptr<_1e3ed06d2_ScopeChecker>&);
inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5819_check_child_sc(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3345839_ScopeTree>&, jule::Ptr<_1e3ed06d2_ScopeChecker>&);
inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5b27_check_child(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3345839_ScopeTree>&);
inline void _1e3ed5d9c_check_anon_scope(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3345839_ScopeTree>);
inline void _1e3ed61bb_process_error_call(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>&, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e3ed6441_check_expr(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3339d28_Expr>);
inline void _1e3ed66b6_check_co_expr(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e333b91d_CoExpr>);
inline jule::Ptr<_1e3eb7ea0_If> _1e3ed69c4_check_if(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334ab6e_If>);
inline jule::Ptr<_1e3ebe45c_Else> _1e3ed6cd2_check_else(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334b026_Else>);
inline void _1e3ed7057_check_conditional(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334b499_Conditional>);
inline void _1e3ed74b9_check_iter_scope_ssc(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e3345839_ScopeTree>, jule::Ptr<_1e3e547aa_Scope>&, jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Ptr<_1e3e547aa_Scope> _1e3ed791a_check_iter_scope_sc(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e3345839_ScopeTree>, jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Ptr<_1e3e547aa_Scope> _1e3ed7cc2_check_iter_scope(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e3345839_ScopeTree>&);
inline void _1e3ed8047_check_inf_iter(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3348d26_Iter>&);
inline void _1e3ed82bc_check_while_iter(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3348d26_Iter>&);
inline void _1e3ed8542_check_range_iter(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3348d26_Iter>&);
inline void _1e3ed87b7_check_iter(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3348d26_Iter>);
inline jule::Bool _1e3ed8ac5_check_valid_cont_label(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1e3ed8e05_check_valid_break_label(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e3ecd2a1_ContSt> _1e3ed9224_check_cont_valid_scope(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334a6eb_ContSt>);
inline void _1e3ed9499_check_cont(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334a6eb_ContSt>);
inline void _1e3ed971e_check_label(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3342ea7_LabelSt>);
inline void _1e3ed9994_push_goto(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334335e_GotoSt>);
inline void _1e3ed9c19_check_postfix(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3344294_AssignSt>);
inline jule::Bool _1e3eda027_is_new_assign_ident(_1e3ed06d2_ScopeChecker*, jule::Str);
inline jule::Bool _1e3eda49a_check_structure_assign_op(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3352093_StructIns>&, jule::Ptr<_1e3344294_AssignSt>&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e3eda731_check_single_assign(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3344294_AssignSt>&);
inline void _1e3edac70___process_end_part_of_multi_assign(_1e3ed06d2_ScopeChecker*, jule::Ptr<_1e3ecde2d_MultiAssign>, jule::Ptr<_1e3344294_AssignSt>, jule::Ptr<_1e3343c55_AssignLeft>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e40662e5_Data>);
inline void _1e3edaee5_check_ret_multi_assign(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3344294_AssignSt>&);
inline void _1e3edb26a_check_multi_assign(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3344294_AssignSt>&);
inline void _1e3edb4e0_check_assign_st(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3344294_AssignSt>);
inline jule::Ptr<_1e3e547aa_Scope> _1e3edb897_check_case_scope(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3ece538_Case>&, jule::Ptr<_1e3345839_ScopeTree>&);
inline jule::Ptr<_1e3ece538_Case> _1e3edbd92_check_case(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3ece11a_Match>, jule::I64, jule::Ptr<_1e334c0e3_Case>, jule::Ptr<_1e40662e5_Data>);
inline void _1e3edc25a_check_cases(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334c7b9_MatchCase>&, jule::Ptr<_1e3ece11a_Match>, jule::Ptr<_1e40662e5_Data>);
inline jule::Ptr<_1e3ece538_Case> _1e3edc612_check_default(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3ece11a_Match>, jule::Ptr<_1e334b026_Else>);
inline void _1e3edc887_check_comptime_panic(_1e3ed06d2_ScopeChecker*, jule::Ptr<_1e3e547aa_Scope>&);
inline void _1e3edcba6_push_type_match(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3ece11a_Match>, jule::Ptr<_1e334c7b9_MatchCase>&);
inline void _1e3edce2b_check_type_match(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334c7b9_MatchCase>&);
inline void _1e3edd1a1_check_common_match(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334c7b9_MatchCase>&);
inline void _1e3edd426_check_match(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334c7b9_MatchCase>);
inline void _1e3edd69b_check_fall(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334364a_FallSt>);
inline jule::Ptr<_1e3ecd48d_BreakSt> _1e3edd9a9_check_break_with_label(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334a344_BreakSt>);
inline jule::Ptr<_1e3ecd48d_BreakSt> _1e3eddcb7_check_plain_break(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334a344_BreakSt>);
inline void _1e3ede03c_check_break(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e334a344_BreakSt>);
inline void _1e3ede2b2_check_ret(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e33486b6_RetSt>);
inline void _1e3ede537_check_use_expr(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e333a6b9_UseExpr>);
inline void _1e3ede7ac_check_node(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Any&);
inline void _1e3ede988_check_result(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline void _1e3edeb64_check_tree(jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline void _1e3edee83_check_goto(_1e3ed06d2_ScopeChecker*, jule::Ptr<_1e3ececdb_ScopeGoto>&, jule::Ptr<_1e3eceaee_ScopeLabel>&);
inline void _1e3ee015e_check_gotos(_1e3ed06d2_ScopeChecker*);
inline void _1e3ee033a_check_labels(_1e3ed06d2_ScopeChecker*);
inline void _1e3ee0516_check_vars(_1e3ed06d2_ScopeChecker*);
inline void _1e3ee06e2_check_aliases(_1e3ed06d2_ScopeChecker*);
inline void _1e3ee0a11_check(jule::Ptr<_1e3ed06d2_ScopeChecker>, jule::Ptr<_1e3345839_ScopeTree>&, jule::Ptr<_1e3e547aa_Scope>&);
inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ee0c75_new_child_checker(jule::Ptr<_1e3ed06d2_ScopeChecker>);
struct _1e3ed06d2_ScopeChecker {
	jule::Ptr<_1e1c31ee6_Token> _field_called_from = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Ptr<_1e3404651_FnIns> _field_owner = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3ed06d2_ScopeChecker> _field_parent = jule::Ptr<_1e3ed06d2_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1e4061466_SymbolTable> _field_table = jule::Ptr<_1e4061466_SymbolTable>();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	jule::Ptr<_1e3345839_ScopeTree> _field_tree = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Ptr<_1e3404651_FnIns> _field_result = jule::Ptr<_1e3404651_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1e3eceaee_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e3eceaee_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e3ececdb_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e3ececdb_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1e3ed06d2_ScopeChecker(void) = default;

	inline bool operator==(_1e3ed06d2_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e3ed06d2_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e3ee1c65_check_cdef(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee1eda_check_typedef(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee2260_check_derive(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee24d5_check_namespace(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee275a_check_deprecated(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee29d0_check_test(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee2c55_check_directive(_1e3ee1825_DirectiveChecker*, jule::Ptr<_1e330242d_Directive>&);
inline void _1e3ee2e31_check(_1e3ee1825_DirectiveChecker*);
struct _1e3ee1825_DirectiveChecker {
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e330242d_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1e330242d_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1e3ee1825_DirectiveChecker(void) = default;

	inline bool operator==(_1e3ee1825_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e3ee1825_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ee7a4b_find_package(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ee7d59_select_package(_1e3ee752e_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
inline jule::Ptr<_1e401a92b_Var> _1e3ee8211_find_var(_1e3ee752e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e3ee85b8_find_type_alias(_1e3ee752e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e3ee8970_find_struct(_1e3ee752e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e3ee8d27_find_fn(_1e3ee752e_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e3ee9135_find_trait(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e3ee9443_find_enum(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ee9751_find_type_enum(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Bool _1e3ee9ae7_is_lookupable(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Bool _1e3ee9e05_exist_ident(_1e3ee752e_ImportInfo*, jule::Str);
inline jule::Bool _1e3eea18b_is_accessible_via_selection(_1e3ee752e_ImportInfo*);
struct _1e3ee752e_ImportInfo {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_selected = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Ptr<_1e3eea488_Package> _field_package = jule::Ptr<_1e3eea488_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1e3ee752e_ImportInfo(void) = default;

	inline bool operator==(_1e3ee752e_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1e3ee752e_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3eea961_find_package(_1e3eea488_Package*, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3eeac6e_select_package(_1e3eea488_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
inline jule::Ptr<_1e401a92b_Var> _1e3eeb126_find_var(_1e3eea488_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e3eeb4cd_find_type_alias(_1e3eea488_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e3eeb885_find_struct(_1e3eea488_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e3eebc3c_find_fn(_1e3eea488_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e3eec04a_find_trait(_1e3eea488_Package*, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e3eec358_find_enum(_1e3eea488_Package*, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3eec666_find_type_enum(_1e3eea488_Package*, jule::Str);
struct _1e3eea488_Package {
	jule::Slice<jule::Ptr<_1e4061466_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>();
	

	_1e3eea488_Package(void) = default;

	inline bool operator==(_1e3eea488_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1e3eea488_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4000b97_find_package(_1e400067a_Sema*, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4000ea5_select_package(_1e400067a_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
inline jule::Ptr<_1e401a92b_Var> _1e400135c_find_var(_1e400067a_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e4001714_find_type_alias(_1e400067a_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e4001abb_find_struct(_1e400067a_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e4001e73_find_fn(_1e400067a_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e4002281_find_trait(_1e400067a_Sema*, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e400258e_find_enum(_1e400067a_Sema*, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e400289c_find_type_enum(_1e400067a_Sema*, jule::Str);
inline jule::Bool _1e4002bee_is_flag(_1e400067a_Sema*, jule::I64);
inline void _1e4002e74_set_current_file(_1e400067a_Sema*, jule::Ptr<_1e4061466_SymbolTable>);
inline void _1e400333c_push_err(_1e400067a_Sema*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e400365b_push_suggestion(_1e400067a_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e4003a13_is_accessible_define(_1e400067a_Sema*, jule::Bool, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e4003e64_is_duplicated_ident(_1e400067a_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1e4004283_check_directives(jule::Ptr<_1e400067a_Sema>, jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Any);
inline jule::Bool _1e40046d4_check_generic_quantity(_1e400067a_Sema*, jule::I64, jule::I64, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e4004aad_is_duplicated_import_selection(_1e400067a_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1e4004e76_get_import_def(_1e400067a_Sema*, jule::Str, jule::Ptr<_1e3ee752e_ImportInfo>&);
inline jule::Bool _1e40052a6_check_import_selections(_1e400067a_Sema*, jule::Ptr<_1e3ee752e_ImportInfo>&);
inline jule::Bool _1e40055e7_is_use_alias_duplication(_1e400067a_Sema*, jule::Ptr<_1e3ee752e_ImportInfo>&);
inline jule::Bool _1e4005916_check_import(_1e400067a_Sema*, jule::Ptr<_1e3ee752e_ImportInfo>&);
inline void _1e4005ae2_check_imports(_1e400067a_Sema*);
inline void _1e4005cbd_impl_file_impls(jule::Ptr<_1e400067a_Sema>);
inline void _1e4005e99_impl_impls(jule::Ptr<_1e400067a_Sema>);
inline void _1e4006175_check_enums(jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e40065c6_check_type_with_refers(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4095775_TypeSymbol>&, jule::Trait<_1e40abe84_Lookup>, jule::Ptr<_1e409db02_Referencer>);
inline jule::Bool _1e400697d_check_type(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4095775_TypeSymbol>&, jule::Trait<_1e40abe84_Lookup>);
inline jule::Ptr<_1e4091661_TypeKind> _1e4006e01_build_type_with_generics(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3335807_TypeDecl>&, jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>, jule::Ptr<_1e3406e17_ReferenceStack>);
inline jule::Ptr<_1e4091661_TypeKind> _1e4007220_build_type(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3335807_TypeDecl>&);
inline jule::Ptr<_1e4091661_TypeKind> _1e400752d_select_type(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3335807_TypeDecl>&);
inline jule::Ptr<_1e4067d63_Eval> _1e400797e_evalpd(jule::Ptr<_1e400067a_Sema>, jule::Trait<_1e40abe84_Lookup>, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e401a92b_Var>);
inline jule::Ptr<_1e4067d63_Eval> _1e4007d36_evalp(jule::Ptr<_1e400067a_Sema>, jule::Trait<_1e40abe84_Lookup>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Ptr<_1e4067d63_Eval> _1e4008144_eval(jule::Ptr<_1e400067a_Sema>, jule::Trait<_1e40abe84_Lookup>);
inline jule::Bool _1e400863e_check_assign_type(jule::Ptr<_1e400067a_Sema>, jule::Bool, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e4008ab2_check_type_compatibility(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Ptr<_1e4091661_TypeKind> _1e4008e9c_build_non_generic_type_kind(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3335807_TypeDecl>&, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>&);
inline void _1e4009255_build_fn_non_generic_type_kinds(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Ptr<_1e3404651_FnIns> _1e4009596_get_trait_check_fn_kind(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline jule::Bool _1e40098b5_reload_fn_ins_types(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Bool _1e4009d49_check_ref_validity_for_init_expr(jule::Ptr<_1e400067a_Sema>, jule::Bool, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e400a443_check_validity_for_init_expr(jule::Ptr<_1e400067a_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e400a7ea_check_type_alias_decl_kind(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4090929_TypeAlias>&, jule::Trait<_1e40abe84_Lookup>);
inline void _1e400ab2a_check_type_alias_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4090929_TypeAlias>&, jule::Trait<_1e40abe84_Lookup>);
inline void _1e400adc2_check_type_alias_decl_dup(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e4090929_TypeAlias>&);
inline jule::Bool _1e400b147_check_type_alias_decls(jule::Ptr<_1e400067a_Sema>);
inline void _1e669832b_check_enum_items_dup(_1e400067a_Sema*, jule::Slice<jule::Ptr<_1e35972d8_EnumItem>>);
inline void _1e66a3bc7_check_enum_items_dup(_1e400067a_Sema*, jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>>);
inline void _1e400b642_check_enum_items_str(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34189c8_Enum>&);
inline void _1e400b8b7_check_enum_items_int(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34189c8_Enum>&);
inline void _1e400bb3c_check_enum_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34189c8_Enum>&);
inline void _1e400bdb2_check_type_enum_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e37eea6d_TypeEnum>&);
inline jule::Bool _1e400c126_check_enum_decls(jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e400c38a_check_type_enum_decls(jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e400c698_check_decl_generics(_1e400067a_Sema*, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>&);
inline jule::Bool _1e400c9c8_check_fn_decl_params_dup(_1e400067a_Sema*, jule::Ptr<_1e34019a0_Fn>&);
inline jule::Bool _1e400cd19_check_fn_decl_result_dup(_1e400067a_Sema*, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e400d0c2_check_fn_decl_prototype(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e400d37a_check_trait_decl_method(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e400d633_check_trait_decl_methods(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e374ee30_Trait>&);
inline void _1e400d8b9_check_trait_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e374ee30_Trait>&);
inline jule::Bool _1e400db2d_check_trait_decls(jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e400e007_check_trait_impl_methods(_1e400067a_Sema*, jule::Ptr<_1e374ee30_Trait>&, jule::Ptr<_1e35092a0_Impl>&);
inline jule::Bool _1e400e3c0_impl_to_struct(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&, jule::Ptr<_1e35092a0_Impl>&);
inline void _1e400e645_impl_trait(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e35092a0_Impl>&);
inline void _1e400e8ba_impl_struct(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e35092a0_Impl>&);
inline void _1e400eb40_impl_impl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e35092a0_Impl>&);
inline void _1e400ee5e_check_var_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e401a92b_Var>&, jule::Trait<_1e40abe84_Lookup>);
inline void _1e40101d4_check_global_var_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e401a92b_Var>&);
inline jule::Bool _1e4010448_check_global_decls(jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e4010822_check_struct_trait_impl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&, jule::Ptr<_1e374ee30_Trait>&);
inline jule::Bool _1e4010b41_check_struct_impls(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&);
inline jule::Bool _1e4010e4e_check_struct_fields(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e40111c4_check_struct_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&);
inline jule::Bool _1e4011438_check_struct_decls(jule::Ptr<_1e400067a_Sema>);
inline void _1e40116ad_check_fn_decl(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline jule::Bool _1e4011922_check_fn_decls(jule::Ptr<_1e400067a_Sema>);
inline void _1e4011cda_push_cycle_error(_1e400067a_Sema*, jule::Ptr<_1e3318840_Struct>&, jule::Ptr<_1e3318840_Struct>&, jule::Str&);
inline jule::Bool _1e401223b_check_cross_cycle(_1e400067a_Sema*, jule::Ptr<_1e3318840_Struct>&, jule::Ptr<_1e3318840_Struct>&, jule::Str&);
inline jule::Bool _1e40126c0_check_struct_derive_illegal_cycles(_1e400067a_Sema*, jule::Str, jule::Ptr<_1e3318840_Struct>&, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e4012a00_check_struct_ins_derive_clone(_1e400067a_Sema*, jule::Ptr<_1e3352093_StructIns>);
inline void _1e4012bdc_check_package_decls(jule::Ptr<_1e400067a_Sema>);
inline void _1e401302d_check_data_for_type_inference(_1e400067a_Sema*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline void _1e40132b4_check_var(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e401a92b_Var>&);
inline void _1e40135d3_check_type_var(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e401a92b_Var>&, jule::Trait<_1e40abe84_Lookup>);
inline void _1e40137ae_check_global_types(jule::Ptr<_1e400067a_Sema>);
inline jule::Ptr<_1e3404651_FnIns> _1e4013b66_ready_to_check_fn(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e4013e85_check_type_method(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&, jule::Ptr<_1e34019a0_Fn>&);
inline jule::Ptr<_1e3404651_FnIns> _1e40143d6_check_struct_ins_op(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&, jule::Ptr<_1e34019a0_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>);
inline jule::Bool _1e40146e4_check_fields(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&);
inline jule::Bool _1e4014a02_precheck_struct_ins(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e4014c77_check_struct_ins(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e4014eec_check_type_struct(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e40151c8_check_struct_types(jule::Ptr<_1e400067a_Sema>);
inline void _1e4015470_check_struct_ins_operators(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3352093_StructIns>);
inline void _1e4015706_precheck_struct_type(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e40158d2_precheck_struct_types(jule::Ptr<_1e400067a_Sema>);
inline void _1e4015b57_check_rets(_1e400067a_Sema*, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e4015e76_check_fn_ins_sc(_1e400067a_Sema*, jule::Ptr<_1e3404651_FnIns>&, jule::Ptr<_1e3ed06d2_ScopeChecker>&);
inline void _1e4016295_check_fn_ins_caller(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3404651_FnIns>&, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e401651a_check_fn_ins(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e4016790_check_type_fn(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e4016a15_check_test_fn(_1e400067a_Sema*, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e4016c8a_precheck_type_fn(jule::Ptr<_1e400067a_Sema>, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e4016e66_precheck_fn_types(jule::Ptr<_1e400067a_Sema>);
inline void _1e4017142_check_fn_types(jule::Ptr<_1e400067a_Sema>);
inline void _1e401731d_check_package_types(jule::Ptr<_1e400067a_Sema>);
inline void _1e40174e9_set_file_sema_fields(jule::Ptr<_1e400067a_Sema>);
inline void _1e40176c5_set_sema_fields(jule::Ptr<_1e400067a_Sema>);
inline void _1e401794a_check(jule::Ptr<_1e400067a_Sema>, jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&);
struct _1e400067a_Sema {
	jule::Slice<_1e1905060_Log> _field_errors = jule::Slice<_1e1905060_Log>();
	jule::Slice<jule::Ptr<_1e4061466_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>();
	jule::Ptr<_1e4061466_SymbolTable> _field_file = jule::Ptr<_1e4061466_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1e400067a_Sema(void) = default;

	inline bool operator==(_1e400067a_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1e400067a_Sema _other) { return !this->operator==(_other); }


};
inline _1e4017d02_MissingRetChecker static__1e40181ba_new(void);
inline jule::Bool _1e4018495_check_conditional(_1e4017d02_MissingRetChecker*, jule::Ptr<_1e3ecc9ed_Conditional>);
inline jule::Bool _1e40187a3_check_match(_1e4017d02_MissingRetChecker*, jule::Ptr<_1e3ece11a_Match>);
inline jule::Bool _1e4018ab1_check_inf_iter(_1e4017d02_MissingRetChecker*, jule::Ptr<_1e3eccbda_InfIter>);
inline jule::Bool _1e4018dbe_check_scope(_1e4017d02_MissingRetChecker*, jule::Ptr<_1e3e547aa_Scope>);
inline jule::Bool _1e40191cc_check(_1e4017d02_MissingRetChecker*, jule::Ptr<_1e3e547aa_Scope>);
struct _1e4017d02_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1e4017d02_MissingRetChecker(void) = default;

	inline bool operator==(_1e4017d02_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1e4017d02_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1e40199b3_IterRelation {
	jule::Ptr<_1e401a92b_Var> _field_range = jule::Ptr<_1e401a92b_Var>();
	

	_1e40199b3_IterRelation(void) = default;

	inline bool operator==(_1e40199b3_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1e40199b3_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e401acd3_is_initialized(_1e401a92b_Var*);
inline jule::Bool _1e401b047_is_type_inferred(_1e401a92b_Var*);
struct _1e401a92b_Var {
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Ptr<_1e406736d_Value> _field_value = jule::Ptr<_1e406736d_Value>();
	jule::Ptr<_1e3406e17_ReferenceStack> _field_refers = jule::Ptr<_1e3406e17_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Ptr<_1e40199b3_IterRelation> _field_iter_relation = jule::Ptr<_1e40199b3_IterRelation>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_depends = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	

	_1e401a92b_Var(void) = default;

	inline bool operator==(_1e401a92b_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1e401a92b_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e401bac5_dispose(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401bd6c_to_str(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401c1ad_logical(jule::Ptr<_1e34019a0_Fn>&, jule::Str);
inline jule::Bool static__1e401c455_eq(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401c6ec_gt(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401c994_gt_eq(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401cc3b_lt(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401ced3_lt_eq(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401d324_result(jule::Ptr<_1e34019a0_Fn>&, jule::Str);
inline jule::Bool static__1e401d5bb_shl(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401d863_shr(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401db0a_add(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401dda2_sub(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401e149_div(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401e3e1_mul(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401e688_mod(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401e930_bit_and(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401ebc7_bit_or(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e401ee6e_bit_xor(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e40202b0_unary(jule::Ptr<_1e34019a0_Fn>&, jule::Str);
inline jule::Bool static__1e4020557_neg(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e40207ee_pos(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4020a96_bit_not(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4020dd7_assign(jule::Ptr<_1e34019a0_Fn>&, jule::Str);
inline jule::Bool static__1e402117e_add_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4021426_sub_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e40216bd_div_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4021965_mul_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4021c0c_mod_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4021ea4_shl_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e402224b_shr_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e40224e3_bit_or_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e402278a_bit_and_assign(jule::Ptr<_1e34019a0_Fn>);
inline jule::Bool static__1e4022a32_bit_xor_assign(jule::Ptr<_1e34019a0_Fn>);
struct _1e401b454_FuncPattern {
	

	_1e401b454_FuncPattern(void) = default;

	inline bool operator==(_1e401b454_FuncPattern _other) { return true; }

	inline bool operator!=(_1e401b454_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1e4052347_push_err(_1e4051d2a_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e40525ab_check_trait(_1e4051d2a_TypeCompatibilityChecker*);
inline jule::Bool _1e4052820_check_ptr(_1e4051d2a_TypeCompatibilityChecker*);
inline jule::Bool _1e4052a84_check_prim(_1e4051d2a_TypeCompatibilityChecker*);
inline jule::Bool _1e4052e3b___type_enum(_1e4051d2a_TypeCompatibilityChecker*, jule::Ptr<_1e37eea6d_TypeEnum>&, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40531a0_check_type_enum(_1e4051d2a_TypeCompatibilityChecker*);
inline jule::Bool _1e4053414_check(_1e4051d2a_TypeCompatibilityChecker*);
struct _1e4051d2a_TypeCompatibilityChecker {
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Ptr<_1e4091661_TypeKind> _field_dest = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e4091661_TypeKind> _field_src = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e4051d2a_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1e4051d2a_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1e4051d2a_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1e4053db5_push_err(_1e4053953_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e4054129_check_validity(_1e4053953_AssignTypeChecker*);
inline jule::Bool _1e405438d_check_const(_1e4053953_AssignTypeChecker*);
inline jule::Bool _1e4054602_is_prim(_1e4053953_AssignTypeChecker*);
inline jule::Bool _1e4054866_check_compatibility(_1e4053953_AssignTypeChecker*);
inline jule::Bool _1e4054aca_check(_1e4053953_AssignTypeChecker*);
struct _1e4053953_AssignTypeChecker {
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Ptr<_1e4091661_TypeKind> _field_dest = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e40662e5_Data> _field_d = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e4053953_AssignTypeChecker(void) = default;

	inline bool operator==(_1e4053953_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1e4053953_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1e4055834_push_generic(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&, jule::I64);
inline jule::Bool _1e4055b0e_annotate_prim(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e4055e1c_annotate_slc(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40562c4_check_map_key(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40565d2_annotate_map(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40568e0_annotate_fn(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e4056bed_annotate_ptr(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e405700b_annotate_sptr(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e4057319_annotate_any(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e4057627_annotate_kind(_1e40552a1_DynamicTypeAnnotation*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e405788b_annotate(_1e40552a1_DynamicTypeAnnotation*);
struct _1e40552a1_DynamicTypeAnnotation {
	jule::Ptr<_1e4067d63_Eval> _field_e = jule::Ptr<_1e4067d63_Eval>();
	jule::Ptr<_1e3404651_FnIns> _field_f = jule::Ptr<_1e3404651_FnIns>();
	jule::Ptr<_1e3403782_ParamIns> _field_p = jule::Ptr<_1e3403782_ParamIns>();
	jule::Ptr<_1e40662e5_Data> _field_a = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e4091661_TypeKind>* _field_k = nullptr;
	

	_1e40552a1_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1e40552a1_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1e40552a1_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1e40585b2_push_err_token(_1e4058062_FnCallArgChecker*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e40588d1_push_err(_1e4058062_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e3403782_ParamIns>> _1e4058b45_get_params(_1e4058062_FnCallArgChecker*);
inline jule::Bool _1e4058e53_check_counts(_1e4058062_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>&);
inline jule::Bool _1e40593a4_check_arg(_1e4058062_FnCallArgChecker*, jule::Ptr<_1e3403782_ParamIns>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Bool _1e405975b_push(_1e4058062_FnCallArgChecker*, jule::Ptr<_1e3403782_ParamIns>&, jule::Ptr<_1e3339d28_Expr>);
inline jule::Bool _1e4059b13_push_variadic(_1e4058062_FnCallArgChecker*, jule::Ptr<_1e3403782_ParamIns>&, jule::I64);
inline jule::Bool _1e4059e21_check_args(_1e4058062_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>&);
inline jule::Bool _1e405a1a7_check_dynamic_type_annotation(_1e4058062_FnCallArgChecker*);
inline jule::Bool _1e405a42c_check(_1e4058062_FnCallArgChecker*);
struct _1e4058062_FnCallArgChecker {
	jule::Ptr<_1e4067d63_Eval> _field_e = jule::Ptr<_1e4067d63_Eval>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_args = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3404651_FnIns> _field_f = jule::Ptr<_1e3404651_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1e4058062_FnCallArgChecker(void) = default;

	inline bool operator==(_1e4058062_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1e4058062_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1e405ae77_push_err(_1e405a96b_StructLitChecker*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e405b296_push_suggestion(_1e405a96b_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e405b65e_push_match(_1e405a96b_StructLitChecker*, jule::Ptr<_1e332d657_FieldIns>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline void _1e405b97d_check_pair(_1e405a96b_StructLitChecker*, jule::Ptr<_1e333eb41_FieldExprPair>&, jule::Slice<jule::Ptr<_1e3339d28_Expr>>&);
inline jule::Bool _1e405bc8b_ready_exprs(_1e405a96b_StructLitChecker*, jule::Slice<jule::Ptr<_1e3339d28_Expr>>&);
inline void _1e405c011_check(_1e405a96b_StructLitChecker*, jule::Slice<jule::Ptr<_1e3339d28_Expr>>&);
struct _1e405a96b_StructLitChecker {
	jule::Ptr<_1e4067d63_Eval> _field_e = jule::Ptr<_1e4067d63_Eval>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Ptr<_1e3352093_StructIns> _field_s = jule::Ptr<_1e3352093_StructIns>();
	jule::Slice<jule::Ptr<_1e33e9910_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e33e9910_StructArgExprModel>>();
	

	_1e405a96b_StructLitChecker(void) = default;

	inline bool operator==(_1e405a96b_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e405a96b_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e401a92b_Var> _1e405c9e5_build_var(_1e405c550_RangeChecker*, jule::Ptr<_1e334830e_VarDecl>&);
inline void _1e405cbc1_set_size_key(_1e405c550_RangeChecker*);
inline void _1e405d0ab_check_range_expr_validity(_1e405c550_RangeChecker*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e401a92b_Var>&, jule::Ptr<_1e4091661_TypeKind>&);
inline void _1e405d298_check_slice(_1e405c550_RangeChecker*);
inline void _1e405d474_check_array(_1e405c550_RangeChecker*);
inline void _1e405d650_check_map_key_a(_1e405c550_RangeChecker*);
inline void _1e405d82b_check_map_key_b(_1e405c550_RangeChecker*);
inline void _1e405da07_check_map(_1e405c550_RangeChecker*);
inline void _1e405dbd3_check_str(_1e405c550_RangeChecker*);
inline jule::Bool _1e405de47_check(_1e405c550_RangeChecker*);
struct _1e405c550_RangeChecker {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _field_sc = jule::Ptr<_1e3ed06d2_ScopeChecker>();
	jule::Ptr<_1e3349e8c_RangeKind> _field_rang = jule::Ptr<_1e3349e8c_RangeKind>();
	jule::Ptr<_1e3ecd0b4_RangeIter> _field_kind = jule::Ptr<_1e3ecd0b4_RangeIter>();
	jule::Ptr<_1e40662e5_Data> _field_d = jule::Ptr<_1e40662e5_Data>();
	

	_1e405c550_RangeChecker(void) = default;

	inline bool operator==(_1e405c550_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e405c550_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1e405eb90_prepare_types(_1e405e6d9_RetTypeChecker*);
inline void _1e405ee15_prepare_exprs(_1e405e6d9_RetTypeChecker*, jule::Ptr<_1e3339d28_Expr>&);
inline void _1e40600e1_ret_vars(_1e405e6d9_RetTypeChecker*);
inline void _1e40602bc_check_exprs(_1e405e6d9_RetTypeChecker*);
inline jule::Bool _1e40605ca_check(_1e405e6d9_RetTypeChecker*, jule::Ptr<_1e3339d28_Expr>&);
struct _1e405e6d9_RetTypeChecker {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _field_sc = jule::Ptr<_1e3ed06d2_ScopeChecker>();
	jule::Ptr<_1e3404651_FnIns> _field_f = jule::Ptr<_1e3404651_FnIns>();
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e4091661_TypeKind>>();
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_vars = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_model = jule::Any();
	

	_1e405e6d9_RetTypeChecker(void) = default;

	inline bool operator==(_1e405e6d9_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e405e6d9_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4061983_find_package(_1e4061466_SymbolTable*, jule::Str);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4061c91_select_package(_1e4061466_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
inline jule::Ptr<_1e401a92b_Var> _1e4062148_find_var(_1e4061466_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e4062500_find_type_alias(_1e4061466_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e40628a7_find_struct(_1e4061466_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e4062c5e_find_fn(_1e4061466_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e406306c_find_trait(_1e4061466_SymbolTable*, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e406337a_find_enum(_1e4061466_SymbolTable*, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e4063688_find_type_enum(_1e4061466_SymbolTable*, jule::Str);
inline jule::Ptr<_1e401a92b_Var> _1e4063c0a___find_var(_1e4061466_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e406415b___find_type_alias(_1e4061466_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1e4064513_def_by_ident(_1e4061466_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1e4064964_is_duplicated_ident(_1e4061466_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1e4061466_SymbolTable {
	jule::Ptr<_1e1c37381_File> _field_file = jule::Ptr<_1e1c37381_File>();
	jule::Slice<_1e34082d1_Pass> _field_passes = jule::Slice<_1e34082d1_Pass>();
	jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_vars = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e3318840_Struct>>();
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1e34019a0_Fn>>();
	jule::Slice<jule::Ptr<_1e374ee30_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e374ee30_Trait>>();
	jule::Slice<jule::Ptr<_1e34189c8_Enum>> _field_enums = jule::Slice<jule::Ptr<_1e34189c8_Enum>>();
	jule::Slice<jule::Ptr<_1e37eea6d_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_1e37eea6d_TypeEnum>>();
	jule::Slice<jule::Ptr<_1e35092a0_Impl>> _field_impls = jule::Slice<jule::Ptr<_1e35092a0_Impl>>();
	

	_1e4061466_SymbolTable(void) = default;

	inline bool operator==(_1e4061466_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1e4061466_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e40666d0_is_nil(_1e40662e5_Data*);
inline jule::Bool _1e4066944_is_void(_1e40662e5_Data*);
inline jule::Bool _1e4066ba8_is_const(_1e40662e5_Data*);
inline jule::Bool _1e4066eb6_good_operand(_1e40662e5_Data*, jule::Ptr<_1e40662e5_Data>&);
struct _1e40662e5_Data {
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1e3388a47_Const> _field_constant = jule::Ptr<_1e3388a47_Const>();
	

	_1e40662e5_Data(void) = default;

	inline bool operator==(_1e40662e5_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1e40662e5_Data _other) { return !this->operator==(_other); }


};
struct _1e406736d_Value {
	jule::Ptr<_1e3339d28_Expr> _field_expr = jule::Ptr<_1e3339d28_Expr>();
	jule::Ptr<_1e40662e5_Data> _field_data = jule::Ptr<_1e40662e5_Data>();
	

	_1e406736d_Value(void) = default;

	inline bool operator==(_1e406736d_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e406736d_Value _other) { return !this->operator==(_other); }


};
inline void _1e406836e_push_err(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e406868d_push_suggestion(_1e4067d63_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e4068869_allow_builtin(_1e4067d63_Eval*);
inline void _1e4068a45_disallow_builtin(_1e4067d63_Eval*);
inline jule::Bool _1e4068ca9_is_unsafe(_1e4067d63_Eval*);
inline jule::Bool _1e406901d_is_global(_1e4067d63_Eval*);
inline jule::Bool _1e40692e8_apply_numeric_prefix(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e406955c_lit_nil(_1e4067d63_Eval*);
inline jule::Ptr<_1e40662e5_Data> _1e406986a_lit_str(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e4069b78_lit_bool(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e4069e86_lit_rune(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e406a294_lit_float(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e406a5a2_lit_int(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e406a8b0_lit_num(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e406abbd_eval_lit(_1e4067d63_Eval*, jule::Ptr<_1e333ad5c_LitExpr>);
inline jule::Any _1e406aecb_find_builtins(_1e4067d63_Eval*, jule::Str);
inline jule::Any _1e406b383_get_def(_1e4067d63_Eval*, jule::Str, jule::Bool);
inline void _1e6959db2_push_reference(_1e4067d63_Eval*, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e696e9ba_push_reference(_1e4067d63_Eval*, jule::Ptr<_1e401a92b_Var>&);
inline void _1e6a045aa_push_reference(_1e4067d63_Eval*, jule::Ptr<_1e3352093_StructIns>&);
inline jule::Ptr<_1e40662e5_Data> _1e406b916___eval_enum(_1e4067d63_Eval*, jule::Ptr<_1e34189c8_Enum>);
inline jule::Ptr<_1e40662e5_Data> _1e406bcbd_eval_enum(_1e4067d63_Eval*, jule::Ptr<_1e34189c8_Enum>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406c0cb___eval_type_enum(_1e4067d63_Eval*, jule::Ptr<_1e37eea6d_TypeEnum>);
inline jule::Ptr<_1e40662e5_Data> _1e406c483_eval_type_enum(_1e4067d63_Eval*, jule::Ptr<_1e37eea6d_TypeEnum>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406c791___eval_struct(_1e4067d63_Eval*, jule::Ptr<_1e3352093_StructIns>);
inline jule::Ptr<_1e40662e5_Data> _1e406cb48_eval_struct(_1e4067d63_Eval*, jule::Ptr<_1e3352093_StructIns>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406ce56_eval_fn_ins(_1e4067d63_Eval*, jule::Ptr<_1e3404651_FnIns>);
inline void _1e406d275_check_deprecated(_1e4067d63_Eval*, jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406d62c_eval_fn(_1e4067d63_Eval*, jule::Ptr<_1e34019a0_Fn>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e406da17_push_illegal_cycle_error(_1e4067d63_Eval*, jule::Ptr<_1e401a92b_Var>&, jule::Ptr<_1e401a92b_Var>&, jule::Str&);
inline jule::Bool _1e406ddd0_check_cross_cycle(_1e4067d63_Eval*, jule::Ptr<_1e401a92b_Var>&, jule::Str&);
inline jule::Bool _1e406e287_check_illegal_cycles(_1e4067d63_Eval*, jule::Ptr<_1e401a92b_Var>&, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406e63e_eval_var(_1e4067d63_Eval*, jule::Ptr<_1e401a92b_Var>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406e9e6_eval_type_alias(_1e4067d63_Eval*, jule::Ptr<_1e4090929_TypeAlias>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e406ed9d_eval_def(_1e4067d63_Eval*, jule::Any, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e40701ab_eval_ident(_1e4067d63_Eval*, jule::Ptr<_1e333bd91_IdentExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e40704b9_eval_unary(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333c59a_UnaryExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e40707c7_eval_variadic(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333c952_VariadicExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4070ad5_eval_unsafe(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333b566_UnsafeExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4070de3_eval_arr(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e334179c_SliceExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4071344_eval_exp_slc(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e334179c_SliceExpr>, jule::Ptr<_1e4091661_TypeKind>, jule::Any);
inline jule::Ptr<_1e40662e5_Data> _1e4071652_eval_slice_expr(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e334179c_SliceExpr>);
inline void _1e4071993_check_integer_indexing_by_data(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e4071d6c_indexing_ptr(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline void _1e4072235_indexing_arr(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline void _1e40725ed_indexing_slc(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline void _1e40729b6_indexing_map(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline void _1e4072d7e_indexing_str(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline void _1e4073247_to_indexing(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline jule::Bool _1e40736cb_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333d634_SubIdentExpr>&, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline jule::Bool _1e4073ad8_push_generics_from_index_data(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e4073e90_eval_ident_decl_from_indexing(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e334213d_IndexingExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e40742ae_eval_indexing(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e334213d_IndexingExpr>);
inline std::tuple<jule::Ptr<_1e40662e5_Data>,jule::Ptr<_1e40662e5_Data>> _1e40745bc_eval_slicing_exprs(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3342748_SlicingExpr>&);
inline void _1e4074842_slicing_arr(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&);
inline void _1e4074c0a_slicing_str(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e407516c_check_slicing(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e3342748_SlicingExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e407547a_eval_slicing(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3342748_SlicingExpr>);
inline void _1e4075843_cast_ptr(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e4075c0b_cast_struct(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e40760c4_cast_ref(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e407648c_cast_slc(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e40767ab_cast_str(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e4076b74_cast_int(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e407703c_cast_num(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e4077405_cast_prim(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e4077724_cast_constant(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e4077adc_cast_type_enum(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Ptr<_1e40662e5_Data> _1e4078060_eval_cast_by_type_n_data(_1e4067d63_Eval*, jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407837e_eval_cast(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333cd09_CastExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e407868c_eval_ns_selection(_1e4067d63_Eval*, jule::Ptr<_1e333d1b1_NsSelectionExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4078b10_eval_struct_lit_explicit(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3352093_StructIns>, jule::Slice<jule::Ptr<_1e3339d28_Expr>>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4078e2e_eval_struct_lit(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e334038e_StructLit>);
inline jule::Ptr<_1e40662e5_Data> _1e407923c_eval_type(_1e4067d63_Eval*, jule::Ptr<_1e3335807_TypeDecl>);
inline void _1e407955b_call_type_fn(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1e4079913_check_fn_call_generics(_1e4067d63_Eval*, jule::Ptr<_1e3404651_FnIns>, jule::Ptr<_1e333e1b2_FnCallExpr>);
inline void _1e4079c32_call_builtin_fn(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e407a073_check_fn_of_concurrent_call(_1e4067d63_Eval*, jule::Ptr<_1e3404651_FnIns>&, jule::Ptr<_1e1c31ee6_Token>);
inline void _1e407a46e_process_exceptional_handler(_1e4067d63_Eval*, jule::Ptr<_1e3404651_FnIns>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e407a79e_call_fn(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e407aaac_eval_fn_call(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333e1b2_FnCallExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e407ae64_eval_enum_static(_1e4067d63_Eval*, jule::Ptr<_1e34189c8_Enum>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407b31b_eval_type_enum_static(_1e4067d63_Eval*, jule::Ptr<_1e37eea6d_TypeEnum>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407b6c3_eval_struct_static(_1e4067d63_Eval*, jule::Ptr<_1e3352093_StructIns>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407bb24_eval_trait_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e374ee30_Trait>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407c11e_eval_struct_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e3352093_StructIns>, jule::Ptr<_1e333d634_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e40662e5_Data> _1e407c4c6_eval_slice_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407c87d_eval_array_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407cc35_eval_map_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407d0dc_eval_str_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407d3ea_eval_int_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407d708_eval_uint_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407da16_eval_i8_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407dd24_eval_i16_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407e132_eval_i32_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407e440_eval_i64_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407e74d_eval_u8_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407ea5b_eval_u16_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e407ed69_eval_u32_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4080177_eval_u64_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4080485_eval_f32_type_tatic(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4080793_eval_f64_type_static(_1e4067d63_Eval*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4080b4a_eval_prim_static(_1e4067d63_Eval*, jule::Str, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e40662e5_Data> _1e4081002_eval_type_static(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e333d634_SubIdentExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e40813a9_eval_obj_sub_ident(_1e4067d63_Eval*, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e333d634_SubIdentExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e40816b7_eval_sub_ident(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333d634_SubIdentExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e40819c5_eval_tuple(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333a9a5_TupleExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4081d7c_eval_map(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e409b65a_Map>, jule::Ptr<_1e3340812_BraceLit>);
inline jule::Ptr<_1e40662e5_Data> _1e408218a_eval_brace_lit(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3340812_BraceLit>);
inline jule::Ptr<_1e40662e5_Data> _1e4082498_eval_anon_fn(_1e4067d63_Eval*, jule::Ptr<_1e3347330_FnDecl>);
inline jule::Ptr<_1e40662e5_Data> _1e40827a6_eval_binop(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e333daa7_BinopExpr>);
inline jule::Ptr<_1e40662e5_Data> _1e4082ab4_eval_expr_kind(jule::Ptr<_1e4067d63_Eval>, jule::Any);
inline jule::Ptr<_1e40662e5_Data> _1e4082dc2_eval(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3339d28_Expr>);
inline jule::Ptr<_1e40662e5_Data> _1e40831d0_eval_expr(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e3339d28_Expr>);
struct _1e4067d63_Eval {
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Trait<_1e40abe84_Lookup> _field_lookup = jule::Trait<_1e40abe84_Lookup>();
	jule::Ptr<_1e4091661_TypeKind> _field_prefix = jule::Ptr<_1e4091661_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1e401a92b_Var> _field_owner = jule::Ptr<_1e401a92b_Var>();
	jule::Ptr<_1e332d657_FieldIns> _field_field = jule::Ptr<_1e332d657_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1e4067d63_Eval(void) = default;

	inline bool operator==(_1e4067d63_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e4067d63_Eval _other) { return !this->operator==(_other); }


};
inline _1e4083653_UnaryEval static__1e4083b09_new(jule::Ptr<_1e4067d63_Eval>);
inline void _1e4083cd5_minus(_1e4083653_UnaryEval*);
inline void _1e4083eb1_plus(_1e4083653_UnaryEval*);
inline void _1e408418c_caret(_1e4083653_UnaryEval*);
inline void _1e4084368_excl(_1e4083653_UnaryEval*);
inline void _1e4084544_star(_1e4083653_UnaryEval*);
inline void _1e4084720_amper(_1e4083653_UnaryEval*);
inline void _1e40848eb_type_decl(_1e4083653_UnaryEval*);
inline void _1e4084ac7_eval_data(_1e4083653_UnaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4084da2_eval(_1e4083653_UnaryEval*, jule::Ptr<_1e333c59a_UnaryExpr>);
struct _1e4083653_UnaryEval {
	jule::Ptr<_1e4067d63_Eval> _field_e = jule::Ptr<_1e4067d63_Eval>();
	jule::Ptr<_1e40662e5_Data> _field_d = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e333c59a_UnaryExpr> _field_u = jule::Ptr<_1e333c59a_UnaryExpr>();
	

	_1e4083653_UnaryEval(void) = default;

	inline bool operator==(_1e4083653_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e4083653_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1e40853e1_BinaryEval static__1e40859a7_new_plain(jule::Ptr<_1e4067d63_Eval>);
inline _1e40853e1_BinaryEval static__1e4085ce8_new(jule::Ptr<_1e4067d63_Eval>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e408607e_check_type_compatibility(_1e40853e1_BinaryEval*);
inline jule::Bool _1e4086337_check_struct_common_operator_compatibility(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e40865ce_eval_nil(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4086843_eval_enum(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4086aa7_eval_type_enum(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4086d1b_eval_sptr(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4087080_eval_ptr(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e40872e4_eval_arr(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4087558_eval_slc(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e40877bc_eval_fn(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4087a31_eval_struct(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4087c95_eval_trait(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4088009_eval_any(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e408826d_eval_bool(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e40884d2_eval_str(_1e40853e1_BinaryEval*);
inline void _1e40886ad_set_type_to_greater(_1e40853e1_BinaryEval*);
inline void _1e4088900_check_mod_data(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&);
inline void _1e4088acb_mod(_1e40853e1_BinaryEval*);
inline jule::Bool _1e4088ea5_numbers_are_compatibile(_1e40853e1_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1e40662e5_Data> _1e408922a_eval_float(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e408948e_eval_int(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4089703_eval_prim(_1e40853e1_BinaryEval*);
inline jule::Ptr<_1e40662e5_Data> _1e4089967_eval_op(_1e40853e1_BinaryEval*);
inline void _1e4089bdc_eval_const(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&);
inline void _1e4089e62_check_data(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&);
inline void _1e408a13d_check_datas(_1e40853e1_BinaryEval*);
inline void _1e408a3b3_set_model(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&);
inline void _1e408a638_post_eval(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e408a9e0_solve_explicit(_1e40853e1_BinaryEval*, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e408aced_eval(_1e40853e1_BinaryEval*, jule::Ptr<_1e333daa7_BinopExpr>&);
struct _1e40853e1_BinaryEval {
	jule::Ptr<_1e4067d63_Eval> _field_e = jule::Ptr<_1e4067d63_Eval>();
	jule::Ptr<_1e40662e5_Data> _field_l = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e40662e5_Data> _field_r = jule::Ptr<_1e40662e5_Data>();
	jule::Ptr<_1e1c31ee6_Token> _field_op = jule::Ptr<_1e1c31ee6_Token>();
	

	_1e40853e1_BinaryEval(void) = default;

	inline bool operator==(_1e40853e1_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e40853e1_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1e4090929_TypeAlias {
	jule::Ptr<_1e3345839_ScopeTree> _field_scope = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e4095775_TypeSymbol> _field_kind = jule::Ptr<_1e4095775_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>();
	

	_1e4090929_TypeAlias(void) = default;

	inline bool operator==(_1e4090929_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e4090929_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1e4091a18_to_str(_1e4091661_TypeKind*);
inline jule::Bool _1e4091d26_equals(jule::Ptr<_1e4091661_TypeKind>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e40922cc_cpp_linked(_1e4091661_TypeKind*);
inline jule::Bool _1e4092541_is_nil(_1e4091661_TypeKind*);
inline jule::Bool _1e40927a5_void(_1e4091661_TypeKind*);
inline jule::Bool _1e4092a19_mutable(_1e4091661_TypeKind*);
inline jule::Bool _1e4092c7d_nil_compatible(_1e4091661_TypeKind*);
inline jule::Bool _1e4092ee2_performs_rc(_1e4091661_TypeKind*);
inline jule::Bool _1e4093256_supports_cloning(_1e4091661_TypeKind*);
inline jule::Bool _1e40934ba_variadicable(_1e4091661_TypeKind*);
inline jule::Ptr<_1e4096138_Prim> _1e409372e_prim(_1e4091661_TypeKind*);
inline jule::Ptr<_1e4099647_Sptr> _1e4093993_sptr(_1e4091661_TypeKind*);
inline jule::Ptr<_1e409cbab_Ptr> _1e4093c07_ptr(_1e4091661_TypeKind*);
inline jule::Ptr<_1e34189c8_Enum> _1e4093e6b_enm(_1e4091661_TypeKind*);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40941d0_tenm(_1e4091661_TypeKind*);
inline jule::Ptr<_1e409c24e_Arr> _1e4094444_arr(_1e4091661_TypeKind*);
inline jule::Ptr<_1e409a0a4_Slc> _1e40946a8_slc(_1e4091661_TypeKind*);
inline jule::Ptr<_1e3404651_FnIns> _1e409491c_fnc(_1e4091661_TypeKind*);
inline jule::Ptr<_1e3352093_StructIns> _1e4094b81_strct(_1e4091661_TypeKind*);
inline jule::Ptr<_1e374ee30_Trait> _1e4094de5_trt(_1e4091661_TypeKind*);
inline jule::Ptr<_1e409b65a_Map> _1e4095159_map(_1e4091661_TypeKind*);
inline jule::Ptr<_1e409aa99_Tuple> _1e40953bd_tup(_1e4091661_TypeKind*);
struct _1e4091661_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1e4091232_Kind> _field_kind = jule::Trait<_1e4091232_Kind>();
	

	_1e4091661_TypeKind(void) = default;

	inline bool operator==(_1e4091661_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e4091661_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e4095b71_checked(_1e4095775_TypeSymbol*);
inline void _1e4095d4c_remove_kind(_1e4095775_TypeSymbol*);
struct _1e4095775_TypeSymbol {
	jule::Ptr<_1e3335807_TypeDecl> _field_decl = jule::Ptr<_1e3335807_TypeDecl>();
	jule::Ptr<_1e4091661_TypeKind> _field_kind = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e4095775_TypeSymbol(void) = default;

	inline bool operator==(_1e4095775_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e4095775_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409649b_to_str(_1e4096138_Prim*);
inline jule::Bool _1e40967a9_equals(jule::Ptr<_1e4096138_Prim>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e4096c1b_is_i8(_1e4096138_Prim*);
inline jule::Bool _1e4096e80_is_i16(_1e4096138_Prim*);
inline jule::Bool _1e40971e4_is_i32(_1e4096138_Prim*);
inline jule::Bool _1e4097458_is_i64(_1e4096138_Prim*);
inline jule::Bool _1e40976bc_is_u8(_1e4096138_Prim*);
inline jule::Bool _1e4097931_is_u16(_1e4096138_Prim*);
inline jule::Bool _1e4097b95_is_u32(_1e4096138_Prim*);
inline jule::Bool _1e4097e09_is_u64(_1e4096138_Prim*);
inline jule::Bool _1e409816d_is_f32(_1e4096138_Prim*);
inline jule::Bool _1e40983d2_is_f64(_1e4096138_Prim*);
inline jule::Bool _1e4098646_is_int(_1e4096138_Prim*);
inline jule::Bool _1e40988aa_is_uint(_1e4096138_Prim*);
inline jule::Bool _1e4098b1e_is_uintptr(_1e4096138_Prim*);
inline jule::Bool _1e4098d83_is_bool(_1e4096138_Prim*);
inline jule::Bool _1e40990e7_is_str(_1e4096138_Prim*);
inline jule::Bool _1e409935b_is_any(_1e4096138_Prim*);
struct _1e4096138_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1e4096138_Prim(void) = default;

	inline bool operator==(_1e4096138_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e4096138_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1e40999aa_to_str(_1e4099647_Sptr*);
inline jule::Bool _1e4099cb8_equals(jule::Ptr<_1e4099647_Sptr>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e4099647_Sptr {
	jule::Ptr<_1e4091661_TypeKind> _field_elem = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e4099647_Sptr(void) = default;

	inline bool operator==(_1e4099647_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e4099647_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409a527_to_str(_1e409a0a4_Slc*);
inline jule::Bool _1e409a835_equals(jule::Ptr<_1e409a0a4_Slc>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e409a0a4_Slc {
	jule::Ptr<_1e4091661_TypeKind> _field_elem = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e409a0a4_Slc(void) = default;

	inline bool operator==(_1e409a0a4_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e409a0a4_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409b01c_to_str(_1e409aa99_Tuple*);
inline jule::Bool _1e409b32a_equals(jule::Ptr<_1e409aa99_Tuple>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e409aa99_Tuple {
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e4091661_TypeKind>>();
	

	_1e409aa99_Tuple(void) = default;

	inline bool operator==(_1e409aa99_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1e409aa99_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409b9bd_to_str(_1e409b65a_Map*);
inline jule::Bool _1e409bccb_equals(jule::Ptr<_1e409b65a_Map>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e409b65a_Map {
	jule::Ptr<_1e4091661_TypeKind> _field_key = jule::Ptr<_1e4091661_TypeKind>();
	jule::Ptr<_1e4091661_TypeKind> _field_val = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e409b65a_Map(void) = default;

	inline bool operator==(_1e409b65a_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e409b65a_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409c5b2_to_str(_1e409c24e_Arr*);
inline jule::Bool _1e409c8c0_equals(jule::Ptr<_1e409c24e_Arr>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e409c24e_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1e4091661_TypeKind> _field_elem = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e409c24e_Arr(void) = default;

	inline bool operator==(_1e409c24e_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e409c24e_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e409d01e_to_str(_1e409cbab_Ptr*);
inline jule::Bool _1e409d32c_equals(jule::Ptr<_1e409cbab_Ptr>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e409d67e_is_unsafe(_1e409cbab_Ptr*);
struct _1e409cbab_Ptr {
	jule::Ptr<_1e4091661_TypeKind> _field_elem = jule::Ptr<_1e4091661_TypeKind>();
	

	_1e409cbab_Ptr(void) = default;

	inline bool operator==(_1e409cbab_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e409cbab_Ptr _other) { return !this->operator==(_other); }


};
struct _1e409db02_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1e409db02_Referencer(void) = default;

	inline bool operator==(_1e409db02_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1e409db02_Referencer _other) { return !this->operator==(_other); }


};
inline void _1e40a0054_push_err(_1e409e84a_TypeChecker*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e40a0230_allow_builtin(_1e409e84a_TypeChecker*);
inline void _1e40a040b_disallow_builtin(_1e409e84a_TypeChecker*);
inline jule::Ptr<_1e4096138_Prim> _1e40a0719_build_prim(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&);
inline void _1e6c85198_push_reference(_1e409e84a_TypeChecker*, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e6c88168_push_reference(_1e409e84a_TypeChecker*, jule::Ptr<_1e374ee30_Trait>&);
inline void _1e40a0c14_push_reference_by_kind(_1e409e84a_TypeChecker*, jule::Ptr<_1e4091661_TypeKind>&);
inline void _1e40a10cc_push_cycle_error(_1e409e84a_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1e40a1484_check_cross_cycle(_1e409e84a_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1e40a183b_check_illegal_cycles(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1e4091232_Kind> _1e40a1be3_from_type_alias(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e4090929_TypeAlias>&);
inline jule::Ptr<_1e34189c8_Enum> _1e40a209a_from_enum(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e34189c8_Enum>&);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40a2452_from_type_enum(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e37eea6d_TypeEnum>&);
inline jule::Ptr<_1e374ee30_Trait> _1e40a2809_from_trait(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e374ee30_Trait>&);
inline jule::Bool _1e40a2bb1_check_struct_ins(_1e409e84a_TypeChecker*, jule::Ptr<_1e3352093_StructIns>&, jule::Ptr<_1e1c31ee6_Token>&);
inline void _1e40a2e58_append_used_struct_reference(_1e409e84a_TypeChecker*, jule::Ptr<_1e3318840_Struct>&);
inline jule::Ptr<_1e3352093_StructIns> _1e40a3321_build_struct_instance(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e3318840_Struct>&);
inline jule::Ptr<_1e3352093_StructIns> _1e40a36c8_from_struct(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&, jule::Ptr<_1e3318840_Struct>&);
inline jule::Trait<_1e4091232_Kind> _1e40a39d6_get_def(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>&);
inline jule::Trait<_1e4091232_Kind> _1e40a3ce4_build_ident(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335dbd_IdentTypeDecl>);
inline jule::Trait<_1e4091232_Kind> _1e40a4102_build_sub_ident(_1e409e84a_TypeChecker*, jule::Ptr<_1e333651c_SubIdentTypeDecl>);
inline jule::Ptr<_1e4099647_Sptr> _1e40a4410_build_sptr_from_type(_1e409e84a_TypeChecker*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Ptr<_1e4099647_Sptr> _1e40a471d_build_sptr(_1e409e84a_TypeChecker*, jule::Ptr<_1e3336bb0_SptrTypeDecl>);
inline jule::Ptr<_1e409cbab_Ptr> _1e40a4a2b_build_ptr_from_type(_1e409e84a_TypeChecker*, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Ptr<_1e409cbab_Ptr> _1e40a4d39_build_ptr(_1e409e84a_TypeChecker*, jule::Ptr<_1e3337683_PtrTypeDecl>);
inline jule::Ptr<_1e409a0a4_Slc> _1e40a5147_build_slc(_1e409e84a_TypeChecker*, jule::Ptr<_1e33370ab_SlcTypeDecl>);
inline jule::Ptr<_1e409c24e_Arr> _1e40a5455_build_arr(_1e409e84a_TypeChecker*, jule::Ptr<_1e3337d15_ArrTypeDecl>);
inline jule::Ptr<_1e409b65a_Map> _1e40a5763_build_map(_1e409e84a_TypeChecker*, jule::Ptr<_1e3338563_MapTypeDecl>);
inline jule::Ptr<_1e409aa99_Tuple> _1e40a5a71_build_tuple(_1e409e84a_TypeChecker*, jule::Ptr<_1e3337397_TupleTypeDecl>);
inline jule::Bool _1e40a5d7e_check_fn_types(_1e409e84a_TypeChecker*, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Ptr<_1e3404651_FnIns> _1e40a618c_build_fn(_1e409e84a_TypeChecker*, jule::Ptr<_1e3347330_FnDecl>);
inline jule::Trait<_1e4091232_Kind> _1e40a649a_build_by_namespace(_1e409e84a_TypeChecker*, jule::Ptr<_1e33368c4_NamespaceTypeDecl>);
inline jule::Ptr<_1e4091661_TypeKind> _1e40a67a8_build(_1e409e84a_TypeChecker*, jule::Any&);
inline jule::Ptr<_1e4091661_TypeKind> _1e40a6ab6_check_decl(_1e409e84a_TypeChecker*, jule::Ptr<_1e3335807_TypeDecl>&);
inline void _1e40a6d3b_check(_1e409e84a_TypeChecker*, jule::Ptr<_1e4095775_TypeSymbol>&);
struct _1e409e84a_TypeChecker {
	jule::Ptr<_1e400067a_Sema> _field_s = jule::Ptr<_1e400067a_Sema>();
	jule::Trait<_1e40abe84_Lookup> _field_lookup = jule::Trait<_1e40abe84_Lookup>();
	jule::Ptr<_1e409db02_Referencer> _field_referencer = jule::Ptr<_1e409db02_Referencer>();
	jule::Ptr<_1e3406e17_ReferenceStack> _field_refers = jule::Ptr<_1e3406e17_ReferenceStack>();
	jule::Ptr<_1e1c31ee6_Token> _field_error_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1e4090929_TypeAlias> _field_owner_alias = jule::Ptr<_1e4090929_TypeAlias>();
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1e409e84a_TypeChecker(void) = default;

	inline bool operator==(_1e409e84a_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1e409e84a_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e40a749b___ident_type_decl(jule::Str&, jule::Ptr<_1e3335dbd_IdentTypeDecl>);
inline jule::Bool static__1e40a77dc_exist(jule::Str&, jule::Any&);
struct _1e40a705b_IdentTypeLookup {
	

	_1e40a705b_IdentTypeLookup(void) = default;

	inline bool operator==(_1e40a705b_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1e40a705b_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e479d235_FileInfo {
	jule::Ptr<_1e3301383_Ast> _field_ast = jule::Ptr<_1e3301383_Ast>();
	jule::Slice<_1e1905060_Log> _field_errors = jule::Slice<_1e1905060_Log>();
	

	_1e479d235_FileInfo(void) = default;

	inline bool operator==(_1e479d235_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e479d235_FileInfo _other) { return !this->operator==(_other); }


};
struct _1e47ee918_stmt {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1e47ee918_stmt(void) = default;

	inline bool operator==(_1e47ee918_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1e47ee918_stmt _other) { return !this->operator==(_other); }


};
inline void _1e48008c5_stop(_1e4800243_ScopeParser*);
inline jule::Bool _1e4800b39_stopped(_1e4800243_ScopeParser*);
inline jule::Bool _1e4800d9d_finished(_1e4800243_ScopeParser*);
inline jule::Bool _1e4801112_is_last_st(_1e4800243_ScopeParser*);
inline void _1e4801431_push_err(_1e4800243_ScopeParser*, jule::Ptr<_1e1c31ee6_Token>, jule::Str);
inline void _1e4801750_push_suggestion(_1e4800243_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e48019c5_insert_as_next(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e47ee918_stmt> _1e4801c39_next(_1e4800243_ScopeParser*);
inline jule::Ptr<_1e3345839_ScopeTree> _1e48020e1_build_scope(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e334830e_VarDecl> _1e48023ee_build_var_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e33486b6_RetSt> _1e480270c_build_ret_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3348d26_Iter> _1e4802a1a_build_while_next_iter(_1e4800243_ScopeParser*, jule::Ptr<_1e47ee918_stmt>&);
inline jule::Ptr<_1e33495eb_WhileKind> _1e4802d28_build_while_iter_kind(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4803158_get_range_kind_keys_tokens(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334830e_VarDecl> _1e4803477_build_range_kind_key(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _1e4803785_build_range_kind_keys(_1e4800243_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>&);
inline void _1e4803ac6_setup_range_kind_keys_plain(_1e4800243_ScopeParser*, jule::Ptr<_1e3349e8c_RangeKind>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4803e28_setup_range_kind_keys_explicit(_1e4800243_ScopeParser*, jule::Ptr<_1e3349e8c_RangeKind>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4804258_setup_range_kind_keys(_1e4800243_ScopeParser*, jule::Ptr<_1e3349e8c_RangeKind>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3349e8c_RangeKind> _1e48046a9_build_range_iter_kind(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Any _1e4804a61_build_common_iter_kind(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Ptr<_1e3348d26_Iter> _1e4804d6e_build_common_iter(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3348d26_Iter> _1e480517c_build_iter_st(_1e4800243_ScopeParser*, jule::Ptr<_1e47ee918_stmt>&);
inline jule::Ptr<_1e334a344_BreakSt> _1e480548a_build_break_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334a6eb_ContSt> _1e4805798_build_cont_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334ab6e_If> _1e4805aa6_build_if(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334b026_Else> _1e4805db4_build_else(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334b499_Conditional> _1e48061c2_build_if_else_chain(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333b91d_CoExpr> _1e48064d0_build_co_call_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334335e_GotoSt> _1e48067dd_build_goto_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334364a_FallSt> _1e4806aeb_build_fall_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e4806e09_build_type_alias_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e480736b_push_case_expr(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Ptr<_1e1c31ee6_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e3339d28_Expr>>&);
inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e4807723_build_case_exprs(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Bool);
inline jule::Ptr<_1e3345839_ScopeTree> _1e4807a31_build_case_scope(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Ptr<_1e334c0e3_Case>,jule::Bool> _1e4807dd8_build_case(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1e334c0e3_Case>>,jule::Ptr<_1e334b026_Else>> _1e4808290_build_cases(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Bool);
inline jule::Ptr<_1e334c7b9_MatchCase> _1e480859d_build_match_case(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3345839_ScopeTree> _1e48088ab_build_scope_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3342ea7_LabelSt> _1e4808bb9_build_label_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1e4808ec7_build_id_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e481802a_AssignInfo> _1e48092d5_build_assign_info(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3343c55_AssignLeft> _1e48095e3_build_assign_l(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e3343c55_AssignLeft>> _1e4809901_build_assign_ls(_1e4800243_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>&);
inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e4809c0e_build_plain_assign(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e480a01c_build_decl_assign(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e480a32a_build_assign_st(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333a6b9_UseExpr> _1e480a638_build_use_expr(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e480a946_build_st(_1e4800243_ScopeParser*, jule::Ptr<_1e47ee918_stmt>&);
inline void _1e480ac65_build(_1e4800243_ScopeParser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e3345839_ScopeTree>&);
struct _1e4800243_ScopeParser {
	jule::Ptr<_1e481b1b5_Parser> _field_p = jule::Ptr<_1e481b1b5_Parser>();
	jule::Ptr<_1e3345839_ScopeTree> _field_s = jule::Ptr<_1e3345839_ScopeTree>();
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1e47ee918_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1e4800243_ScopeParser(void) = default;

	inline bool operator==(_1e4800243_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e4800243_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1e480b815_CallData {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	

	_1e480b815_CallData(void) = default;

	inline bool operator==(_1e480b815_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1e480b815_CallData _other) { return !this->operator==(_other); }


};
inline void _1e480d55e_push_err(_1e480cc9a_ExprBuilder*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e480d87d_push_suggestion(_1e480cc9a_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e333a9a5_TupleExpr> _1e480db8b_build_tuple(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>&);
inline jule::Ptr<_1e333ad5c_LitExpr> _1e480de99_build_lit(_1e480cc9a_ExprBuilder*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e3335807_TypeDecl> _1e480e2a7_build_primitive_type(_1e480cc9a_ExprBuilder*, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Any _1e480e5b5_build_single(_1e480cc9a_ExprBuilder*, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e333bd91_IdentExpr> _1e480e8c3_build_cpp_linked_ident(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333c59a_UnaryExpr> _1e480ebd1_build_unary(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333d634_SubIdentExpr> _1e480eede_build_obj_sub_ident(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333d1b1_NsSelectionExpr> _1e48102ec_build_ns_sub_ident(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3335807_TypeDecl> _1e481060a_build_type(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e4810918_build_sub_ident(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333c952_VariadicExpr> _1e4810c26_build_variadic(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Any _1e4811034_build_op_right(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333a114_RangeExpr> _1e4811364_build_between_parentheses(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333cd09_CastExpr> _1e4811683_try_build_cast(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4811a4b_push_arg(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e3339d28_Expr>>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e4811d59_build_args(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _1e4812167_build_call_generics(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333e1b2_FnCallExpr> _1e481251e_build_fn_call(_1e480cc9a_ExprBuilder*, jule::Ptr<_1e1c31ee6_Token>&, jule::Ptr<_1e480b815_CallData>&);
inline jule::Any _1e481284e_build_parentheses_range(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333b566_UnsafeExpr> _1e4812b6d_build_unsafe_expr(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3347330_FnDecl> _1e4812e7b_build_anon_fn(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e4813289_build_unsafe(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4813652_push_range_lit_part(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Ptr<_1e1c31ee6_Token>, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4813982_get_brace_range_lit_expr_parts(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e333eb41_FieldExprPair> _1e4813ca1_build_field_expr_pair(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3339d28_Expr> _1e48140ae_build_struct_lit_expr(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e48143bc_build_struct_lit_exprs(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334038e_StructLit> _1e48146ec_build_typed_struct_literal(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3339d28_Expr> _1e4814a1b_build_brace_lit_part(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3340812_BraceLit> _1e4814d29_build_brace_lit(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e4815137_build_brace_range(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4815445_get_enumerable_parts(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334179c_SliceExpr> _1e4815753_build_slice(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334213d_IndexingExpr> _1e4815ba4_build_indexing(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Ptr<_1e3342748_SlicingExpr> _1e4816248_build_slicing(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&, jule::Ptr<_1e1c31ee6_Token>&, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Any _1e4816556_build_bracket_range(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Any _1e4816864_build_data(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333daa7_BinopExpr> _1e4816c1b_build_binop(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64);
inline jule::Any _1e4817029_build(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e4817337_build_kind(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3339d28_Expr> _1e4817645_build_from_tokens(_1e480cc9a_ExprBuilder*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
struct _1e480cc9a_ExprBuilder {
	jule::Ptr<_1e481b1b5_Parser> _field_p = jule::Ptr<_1e481b1b5_Parser>();
	

	_1e480cc9a_ExprBuilder(void) = default;

	inline bool operator==(_1e480cc9a_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e480cc9a_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1e481802a_AssignInfo {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_l = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_r = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Ptr<_1e1c31ee6_Token> _field_setter = jule::Ptr<_1e1c31ee6_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1e481802a_AssignInfo(void) = default;

	inline bool operator==(_1e481802a_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1e481802a_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1e481b4e5_stop(_1e481b1b5_Parser*);
inline jule::Bool _1e481b759_stopped(_1e481b1b5_Parser*);
inline void _1e481bb22_push_err(_1e481b1b5_Parser*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e481be41_push_suggestion(_1e481b1b5_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e3339d28_Expr> _1e481c24e_build_expr(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e330242d_Directive> _1e481c55c_build_directive(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e481c7d2_push_directive(_1e481b1b5_Parser*, jule::Ptr<_1e330242d_Directive>);
inline jule::Ptr<_1e3345839_ScopeTree> _1e481cb89_build_scope(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e1c31ee6_Token>);
inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e481d0da___build_type(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e481d53b_build_type(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e481d849_build_type_alias_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e481db8a_build_var_type_and_expr(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e334830e_VarDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e481de43_build_var_common(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e334830e_VarDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e481e30b_build_var_begin(_1e481b1b5_Parser*, jule::Ptr<_1e334830e_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334830e_VarDecl> _1e481e619_build_var(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3342b00_GenericDecl> _1e481e927_build_generic(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _1e481ecce_build_generics(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Ptr<_1e1c31ee6_Token>&);
inline jule::Ptr<_1e3346010_ParamDecl> _1e48200dc_build_self_param(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e48204a5_param_type_begin(_1e481b1b5_Parser*, jule::Ptr<_1e3346010_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e48207c4_build_param_type(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e3346010_ParamDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4820ae3_build_param_body(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e3346010_ParamDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3346010_ParamDecl> _1e4820e01_build_param(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e4821176_check_params(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e3346010_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1e3346010_ParamDecl>> _1e482152d_build_params(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1e333891a_RetTypeDecl>,jule::Bool> _1e48218d5_build_multi_ret_type(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e333891a_RetTypeDecl>,jule::Bool> _1e4821c8c_build_ret_type(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&);
inline jule::Ptr<_1e3347330_FnDecl> _1e48221dd_build_fn_prototype(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1e3347330_FnDecl> _1e482263e_build_fn(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e482294c_get_use_decl_selectors(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e4822c6b_build_cpp_use_decl(_1e481b1b5_Parser*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e482308a_build_std_use_decl(_1e481b1b5_Parser*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e48233a9_build_ident_use_decl(_1e481b1b5_Parser*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e48236c8_parse_use_decl(_1e481b1b5_Parser*, jule::Ptr<_1e334d05b_UseDecl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334d05b_UseDecl> _1e4823a80_build_use_decl(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>, jule::Bool);
inline jule::Ptr<_1e3335807_TypeDecl> _1e4823e59_build_type_enum_item_kind(jule::Ptr<_1e481b1b5_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>> _1e4824278_build_type_enum_items(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3350118_TypeEnumDecl> _1e4824586_build_type_enum_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3339d28_Expr> _1e482493d_build_enum_item_expr(jule::Ptr<_1e481b1b5_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>> _1e4824c4b_build_enum_items(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e334e007_EnumDecl> _1e4825059_build_enum_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Any _1e4825367_build_node_enum_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3350316_FieldDecl> _1e4825675_build_field(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Slice<jule::Ptr<_1e3350316_FieldDecl>> _1e48259a5_build_struct_decl_fields(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3350ab9_StructDecl> _1e4825cc4_build_struct_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4826049_check_method_receiver(_1e481b1b5_Parser*, jule::Ptr<_1e3347330_FnDecl>&);
inline jule::Slice<jule::Ptr<_1e3347330_FnDecl>> _1e4826357_build_trait_methods(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e33511c4_TraitDecl> _1e4826665_build_trait_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3347330_FnDecl> _1e4826973_build_cpp_link_fn(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334830e_VarDecl> _1e4826c81_build_cpp_link_var(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e3350ab9_StructDecl> _1e482708e_build_cpp_link_struct(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e48273be_build_cpp_link_type_alias(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e334d05b_UseDecl> _1e48276dd_build_cpp_link_use(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Any _1e48279eb_build_cpp_link(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3347330_FnDecl> _1e4827d09_get_method(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4828128_parse_impl_body(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e33517ce_Impl>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e33517ce_Impl> _1e4828436_build_impl(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Any _1e4828744_build_node_data(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4828a63_apply_fn_meta(_1e481b1b5_Parser*, jule::Ptr<_1e3347330_FnDecl>&, jule::Bool);
inline void _1e4828d82_apply_meta(_1e481b1b5_Parser*, _1e3302032_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1e48291b2_build_general_scope_node_data(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline void _1e4829448_push_use_decl(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e334d05b_UseDecl>&);
inline jule::Bool _1e4829756_push_meta_nodes(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline _1e3302032_Node _1e4829a64_parse_node(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e4829cd9_append_node(jule::Ptr<_1e481b1b5_Parser>, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e482a24b_remove_range(_1e481b1b5_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Slice<jule::I64>&);
inline void _1e482a636_push_wrong_order_close_err(_1e481b1b5_Parser*, jule::Ptr<_1e1c31ee6_Token>&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Slice<jule::I64>&);
inline void _1e482aaa9_push_range_close(_1e481b1b5_Parser*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::Slice<jule::I64>&);
inline void _1e482ad2e_check_ranges(_1e481b1b5_Parser*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline void _1e482b0a4_parse(jule::Ptr<_1e481b1b5_Parser>, jule::Ptr<_1e1c37381_File>&);
struct _1e481b1b5_Parser {
	jule::Ptr<_1e3301383_Ast> _field_ast = jule::Ptr<_1e3301383_Ast>();
	jule::Slice<jule::Ptr<_1e330242d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e330242d_Directive>>();
	jule::Slice<_1e1905060_Log> _field_errors = jule::Slice<_1e1905060_Log>();
	

	_1e481b1b5_Parser(void) = default;

	inline bool operator==(_1e481b1b5_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e481b1b5_Parser _other) { return !this->operator==(_other); }


};
inline void _1e482cb33_push_err(_1e482c58e_TypeBuilder*, jule::Ptr<_1e1c31ee6_Token>, jule::Str);
inline void _1e482ce52_push_suggestion(_1e482c58e_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482d1b6_build_prim(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482d42a_build_namespace(_1e482c58e_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _1e482d68e_build_generics(_1e482c58e_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e482d903_ident_generics(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482db67_build_ident(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482ddcb_build_cpp_link(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482e140_build_fn(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482e3a4_build_ptr(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482e618_build_sptr(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482e87c_build_op(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482eae1_build_slc(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482ed55_build_arr(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e483020c_build_map(_1e482c58e_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3335807_TypeDecl> _1e4830471_build_enumerable(_1e482c58e_TypeBuilder*);
inline jule::Ptr<_1e3335807_TypeDecl> _1e48306d5_step(_1e482c58e_TypeBuilder*);
inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e4830949_build(_1e482c58e_TypeBuilder*);
struct _1e482c58e_TypeBuilder {
	jule::Ptr<_1e481b1b5_Parser> _field_p = jule::Ptr<_1e481b1b5_Parser>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _field_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1e482c58e_TypeBuilder(void) = default;

	inline bool operator==(_1e482c58e_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1e482c58e_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1e4171114_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1e4171114_CompileInfo(void) = default;

	inline bool operator==(_1e4171114_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1e4171114_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1e41729b7_push_err(_1e4172467_DirectiveEval*, jule::Ptr<_1e1c31ee6_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4172d6e_split_operans(_1e4172467_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Bool _1e417317c_eval_directive_ident(_1e4172467_DirectiveEval*, jule::Str);
inline jule::Bool _1e417348a_eval_directive_part(_1e4172467_DirectiveEval*, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Bool _1e41736ee_eval(_1e4172467_DirectiveEval*);
struct _1e4172467_DirectiveEval {
	jule::Slice<_1e1905060_Log> _field_logs = jule::Slice<_1e1905060_Log>();
	jule::Ptr<_1e330242d_Directive> _field_d = jule::Ptr<_1e330242d_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e4172467_DirectiveEval(void) = default;

	inline bool operator==(_1e4172467_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e4172467_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e426a131_JuleImporter> static__1e427de58_new(_1e4171114_CompileInfo);
inline jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _1e429182d_all_packages(_1e426a131_JuleImporter*);
inline void _1e4295d4e_set_mod_path(_1e426a131_JuleImporter*, jule::Str);
inline jule::Str _1e42c49d7_get_mod_path(_1e426a131_JuleImporter*);
inline jule::Str _1e42d4e37_mod_by_id(_1e426a131_JuleImporter*, jule::I64);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e42de260_get_import(_1e426a131_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e3301383_Ast>>,jule::Slice<_1e1905060_Log>> _1e42e01ea_import_package(_1e426a131_JuleImporter*, jule::Str, jule::Bool);
inline void _1e4306376_imported(_1e426a131_JuleImporter*, jule::Ptr<_1e3ee752e_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1e1905060_Log>> _1e431a478_is_pass_build_directives(_1e426a131_JuleImporter*, jule::Ptr<_1e3301383_Ast>&);
struct _1e426a131_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e426a131_JuleImporter(void) = default;

	inline bool operator==(_1e426a131_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e426a131_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1e4488151_OrderedDefines {
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e3318840_Struct>>();
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_globals = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	

	_1e4488151_OrderedDefines(void) = default;

	inline bool operator==(_1e4488151_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1e4488151_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e733634d_is_common_ordered(jule::Slice<jule::Ptr<_1e3318840_Struct>>&, jule::Ptr<_1e3318840_Struct>);
inline jule::Bool _1e733e653_is_common_ordered(jule::Slice<jule::Ptr<_1e401a92b_Var>>&, jule::Ptr<_1e401a92b_Var>);
inline void _1e7332415_order_common(jule::Slice<jule::Ptr<_1e3318840_Struct>>&);
inline void _1e7332ec6_order_common(jule::Slice<jule::Ptr<_1e401a92b_Var>>&);
inline void static__1e445686c_order_structures(jule::Slice<jule::Ptr<_1e3318840_Struct>>&);
inline void static__1e446d8a6_order_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>&);
struct _1e425c91a_DefineOrderer {
	

	_1e425c91a_DefineOrderer(void) = default;

	inline bool operator==(_1e425c91a_DefineOrderer _other) { return true; }

	inline bool operator!=(_1e425c91a_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1e48e2c92_LiveTable {
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _field_vars = jule::Slice<jule::Ptr<_1e401a92b_Var>>();
	jule::Slice<jule::Ptr<_1e3404651_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1e3404651_FnIns>>();
	jule::Slice<jule::Ptr<_1e3352093_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1e3352093_StructIns>>();
	jule::Slice<jule::Ptr<_1e374ee30_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e374ee30_Trait>>();
	

	_1e48e2c92_LiveTable(void) = default;

	inline bool operator==(_1e48e2c92_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1e48e2c92_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1e4925775_optimize_child(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3e547aa_Scope>&);
inline void _1e49259ea_optimize_body_child(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3e547aa_Scope>&);
inline void _1e4925c70_optimize_expr_model(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Any&);
inline void _1e4925e4b_eliminate_followed(_1e49252ad_ScopeDeadCode*);
inline void _1e49261c1_push_goto(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecd867_GotoSt>);
inline void _1e4926446_push_label(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecd67a_Label>);
inline void _1e49266bb_optimize_range_iter(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecd0b4_RangeIter>);
inline void _1e4926941_optimize_while_iter(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3eccdc7_WhileIter>);
inline void _1e4926bb6_optimize_inf_iter(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3eccbda_InfIter>);
inline void _1e4926e3b_optimize_conditional(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecc9ed_Conditional>);
inline void _1e49271b1_optimize_match(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ece11a_Match>);
inline void _1e4927436_optimize_assign(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecdc41_Assign>);
inline void _1e49276ab_optimize_multi_assign(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Ptr<_1e3ecde2d_MultiAssign>);
inline void _1e4927931_optimize_stmt(jule::Ptr<_1e49252ad_ScopeDeadCode>, jule::Any);
inline void _1e4927b0c_optimize_stmts(jule::Ptr<_1e49252ad_ScopeDeadCode>);
struct _1e49252ad_ScopeDeadCode {
	jule::Ptr<_1e49252ad_ScopeDeadCode> _field_parent = jule::Ptr<_1e49252ad_ScopeDeadCode>();
	jule::Ptr<_1e3e547aa_Scope> _field_s = jule::Ptr<_1e3e547aa_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd67a_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd67a_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>>>();
	

	_1e49252ad_ScopeDeadCode(void) = default;

	inline bool operator==(_1e49252ad_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1e49252ad_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1e4928e82_ExprDeadCode static__1e492957b_new(jule::Ptr<_1e49252ad_ScopeDeadCode>&);
inline void _1e4929801_binary(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33e9536_BinopExprModel>);
inline void _1e4929a76_unary(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33e9723_UnaryExprModel>);
inline void _1e4929ceb_structure_lit(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33e9aec_StructLitExprModel>);
inline void _1e492a071_alloc_structure(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>);
inline void _1e492a2e6_casting(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33e9ec6_CastingExprModel>);
inline void _1e492a56b_args(_1e4928e82_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1e492a7e1_func_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ea1b3_FnCallExprModel>);
inline void _1e492aa66_slice(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ea3a0_SliceExprModel>);
inline void _1e492acdb_array(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eb824_ArrayExprModel>);
inline void _1e492b061_indexing(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ea58c_IndexingExprModel>);
inline void _1e492b2d6_anon_func(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ea779_AnonFnExprModel>);
inline void _1e492b55b_map(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eab53_MapExprModel>);
inline void _1e492b7d1_slicing(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ead40_SlicingExprModel>);
inline void _1e492ba56_trait_sub(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>);
inline void _1e492bccb_structure_sub(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eb44a_StructSubIdentExprModel>);
inline void _1e492c051_common_sub(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>);
inline void _1e492c2c6_tuple(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ebdda_TupleExprModel>);
inline void _1e492c54b_new_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>);
inline void _1e492c7c1_out_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>);
inline void _1e492ca46_outln_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>);
inline void _1e492ccbb_panic_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>);
inline void _1e492d041_assert_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>);
inline void _1e492d2b6_error_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>);
inline void _1e492d53b_make_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>);
inline void _1e492d7b1_append_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>);
inline void _1e492da36_clone_call(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>);
inline void _1e492dcab_sizeof(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33eb219_SizeofExprModel>);
inline void _1e492e031_alignof(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ed97a_AlignofExprModel>);
inline void _1e492e2a6_integrated_to_str(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33edd54_IntegratedToStrExprModel>);
inline void _1e492e52b_free(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ee22d_FreeExprModel>);
inline void _1e492e7a1_backend_emit(_1e4928e82_ExprDeadCode*, jule::Ptr<_1e33ee041_BackendEmitExprModel>);
inline void _1e492ea26_optimize(_1e4928e82_ExprDeadCode*, jule::Any&);
struct _1e4928e82_ExprDeadCode {
	jule::Ptr<_1e49252ad_ScopeDeadCode> _field_s = jule::Ptr<_1e49252ad_ScopeDeadCode>();
	

	_1e4928e82_ExprDeadCode(void) = default;

	inline bool operator==(_1e4928e82_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1e4928e82_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1e1c5d462_UnsafeBinopExprModel {
	jule::Ptr<_1e33e9536_BinopExprModel> _field_node = jule::Ptr<_1e33e9536_BinopExprModel>();
	

	_1e1c5d462_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1e1c5d462_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1e1c5d462_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e271c1d9_UnsafeIndexingExprModel {
	jule::Ptr<_1e33ea58c_IndexingExprModel> _field_node = jule::Ptr<_1e33ea58c_IndexingExprModel>();
	

	_1e271c1d9_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1e271c1d9_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1e271c1d9_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e27a0ed7_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1e33ea3a0_SliceExprModel> _field_elems = jule::Ptr<_1e33ea3a0_SliceExprModel>();
	

	_1e27a0ed7_PushToSliceExprModel(void) = default;

	inline bool operator==(_1e27a0ed7_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e27a0ed7_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e2ae7680_MutSlicingExprModel {
	jule::Ptr<_1e1c31ee6_Token> _field_token = jule::Ptr<_1e1c31ee6_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1e2ae7680_MutSlicingExprModel(void) = default;

	inline bool operator==(_1e2ae7680_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e2ae7680_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e1c9a9ee_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1e1c9a9ee_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1e1c9a9ee_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e1c9a9ee_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e1c9b978_ScopeOptimizer> static__1e1c56191_new(jule::Ptr<_1e3e547aa_Scope>);
inline void _1e1c6e2a8_set_current_stmt(_1e1c9b978_ScopeOptimizer*, jule::Any);
inline void _1e1c98700_optimize_data(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e40662e5_Data>);
inline void _1e1c9c65a_optimize_var(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e401a92b_Var>);
inline void _1e1c9d183_optimize_conditional(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecc9ed_Conditional>);
inline void _1e1ca0905_build_default_constat_true_case(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ece538_Case>, jule::I64&, jule::Ptr<_1e3ece11a_Match>&);
inline void _1e1ca2352_optimize_match(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ece11a_Match>);
inline void _1e1ca2bd2_optimize_range_iter(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecd0b4_RangeIter>);
inline void _1e1cd83dd_optimize_while_iter(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3eccdc7_WhileIter>);
inline jule::Bool _1e1cd8c7e_substr(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecdc41_Assign>);
inline jule::Bool _1e1d822ab_str_insert(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecdc41_Assign>);
inline jule::Bool _1e1d85c3d_str_assign(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecdc41_Assign>);
inline void _1e1d8a506_optimize_assign(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecdc41_Assign>);
inline void _1e1d8d6b3_optimize_multi_assign(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ecde2d_MultiAssign>);
inline void _1e1d8eede_optimize_ret(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3ece912_RetSt>);
inline void _1e1d94895_optimize_stmt(_1e1c9b978_ScopeOptimizer*, jule::Any);
inline void _1e1d8a1e8_optimize_child(_1e1c9b978_ScopeOptimizer*, jule::Ptr<_1e3e547aa_Scope>);
inline void _1e1d9c628_optimize(_1e1c9b978_ScopeOptimizer*);
struct _1e1c9b978_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1e3e547aa_Scope> _field_scope = jule::Ptr<_1e3e547aa_Scope>();
	

	_1e1c9b978_ScopeOptimizer(void) = default;

	inline bool operator==(_1e1c9b978_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e1c9b978_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1e1de552d_optimize(jule::Any&);
inline jule::Bool _1e2074a75_str_cond(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9536_BinopExprModel>);
inline void _1e207db7d_binary(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9536_BinopExprModel>);
inline void _1e2084c72_unary(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9723_UnaryExprModel>);
inline void _1e2085cea_structure_lit(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9aec_StructLitExprModel>);
inline void _1e2074459_alloc_structure(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>);
inline void _1e2089b9a_casting(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33e9ec6_CastingExprModel>);
inline void _1e2093357_args(_1e20883e6_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1e2093e3a_scope(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e3e547aa_Scope>&);
inline void _1e2097191_func_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ea1b3_FnCallExprModel>);
inline void _1e209a00c_slice(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ea3a0_SliceExprModel>);
inline void _1e20a2597_array(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eb824_ArrayExprModel>);
inline void _1e20a39a5_indexing(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ea58c_IndexingExprModel>);
inline void _1e20a4c5e_anon_func(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ea779_AnonFnExprModel>);
inline void _1e20a6502_map(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eab53_MapExprModel>);
inline void _1e20cdb01_slicing(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ead40_SlicingExprModel>);
inline void _1e20d3dd1_trait_sub(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>);
inline void _1e21003b4_structure_sub(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eb44a_StructSubIdentExprModel>);
inline void _1e2102bad_common_sub(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>);
inline void _1e2107322_tuple(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ebdda_TupleExprModel>);
inline void _1e2115385_new_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>);
inline void _1e211761d_out_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>);
inline void _1e2137044_outln_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>);
inline void _1e213ca50_panic_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>);
inline void _1e213cbd7_assert_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>);
inline void _1e2180554_error_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>);
inline void _1e21b0be4_make_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>);
inline void _1e21c25eb_append_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>);
inline void _1e21c59d9_clone_call(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>);
inline void _1e225c048_sizeof(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33eb219_SizeofExprModel>);
inline void _1e225d445_alignof(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ed97a_AlignofExprModel>);
inline void _1e225e820_integrated_to_str(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33edd54_IntegratedToStrExprModel>);
inline void _1e226533c_free(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ee22d_FreeExprModel>);
inline void _1e22680ed_backend_emit(_1e20883e6_ExprOptimizer*, jule::Ptr<_1e33ee041_BackendEmitExprModel>);
inline void _1e226b420_do(_1e20883e6_ExprOptimizer*);
struct _1e20883e6_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1e20883e6_ExprOptimizer(void) = default;

	inline bool operator==(_1e20883e6_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e20883e6_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4896817_Optimizer> static__1e4862b68_new(jule::Ptr<_1e4675e54_IR>&);
inline void _1e48917ce_optimize_global(_1e4896817_Optimizer*, jule::Ptr<_1e401a92b_Var>&);
inline void _1e48a02d2_optimize_function(_1e4896817_Optimizer*, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e48a78a0_optimize_struct(_1e4896817_Optimizer*, jule::Ptr<_1e3318840_Struct>&);
inline void _1e48a85d7_optimize_globals(_1e4896817_Optimizer*, jule::Ptr<_1e3eea488_Package>&);
inline void _1e48b8c68_optimize_functions(_1e4896817_Optimizer*, jule::Ptr<_1e3eea488_Package>&);
inline void _1e48b9340_optimize_structs(_1e4896817_Optimizer*, jule::Ptr<_1e3eea488_Package>&);
inline void _1e48e448b_optimize_package(_1e4896817_Optimizer*, jule::Ptr<_1e3eea488_Package>&);
inline void _1e48ec4b6_optimize(_1e4896817_Optimizer*);
struct _1e4896817_Optimizer {
	jule::Ptr<_1e4675e54_IR> _field_ir = jule::Ptr<_1e4675e54_IR>();
	

	_1e4896817_Optimizer(void) = default;

	inline bool operator==(_1e4896817_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e4896817_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1e4932c5a_reset(void);
inline void static__1e4934135_print(jule::Str, jule::Str);
struct _1e4933e48_AnsiEscape {
	

	_1e4933e48_AnsiEscape(void) = default;

	inline bool operator==(_1e4933e48_AnsiEscape _other) { return true; }

	inline bool operator!=(_1e4933e48_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1e493571e_log_flat(_1e1905060_Log&);
inline void static__1e493592d_log_error(_1e1905060_Log&);
inline void static__1e4935b3c_log(_1e1905060_Log&);
inline void static__1e4935d4b_print_logs(jule::Slice<_1e1905060_Log>&);
struct _1e4935466_Logger {
	

	_1e4935466_Logger(void) = default;

	inline bool operator==(_1e4935466_Logger _other) { return true; }

	inline bool operator!=(_1e4935466_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1e501687c_unix(_1e50164c5_AbsTime*);
struct _1e50164c5_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1e50164c5_AbsTime(void) = default;

	inline bool operator==(_1e50164c5_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1e50164c5_AbsTime _other) { return !this->operator==(_other); }


};
inline _1e5016b68_Time static__1e501700e_unix(jule::U64);
inline _1e5016b68_Time static__1e501720c_now(void);
inline jule::U64 _1e501765d_unix(_1e5016b68_Time*);
inline jule::U64 _1e50178c2_day(_1e5016b68_Time*);
inline jule::U64 _1e5017b36_month(_1e5016b68_Time*);
inline jule::U64 _1e5017d9a_year(_1e5016b68_Time*);
inline jule::U64 _1e501810e_second(_1e5016b68_Time*);
inline jule::U64 _1e5018373_minute(_1e5016b68_Time*);
inline jule::U64 _1e50185d7_hour(_1e5016b68_Time*);
inline _1e50164c5_AbsTime _1e501884b_abs(_1e5016b68_Time*);
struct _1e5016b68_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1e5016b68_Time(void) = default;

	inline bool operator==(_1e5016b68_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1e5016b68_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4e9055e_ScopeCoder> static__1e4e90b47_new(jule::Ptr<_1e501c366_ObjectCoder>&);
inline void _1e4e90dbc_range_index_iter(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd0b4_RangeIter>&);
inline void _1e4e91142_range_hashmap_iter(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd0b4_RangeIter>&);
inline void _1e4e913b7_if_case(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3eb7ea0_If>);
inline void _1e4e9163c_conditional(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecc9ed_Conditional>);
inline void _1e4e918b2_inf_iter(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3eccbda_InfIter>);
inline void _1e4e91b37_while_iter(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3eccdc7_WhileIter>);
inline void _1e4e91dac_range_iter(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd0b4_RangeIter>);
inline void _1e4e92132_cont(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd2a1_ContSt>);
inline void _1e4e923a7_label(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd67a_Label>);
inline void _1e4e9262c_goto_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd867_GotoSt>);
inline void _1e4e928a2_postfix(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecda54_Postfix>);
inline void _1e4e92b27_assign(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecdc41_Assign>);
inline void _1e4e92d9c_multi_assign(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecde2d_MultiAssign>);
inline jule::Fn<void(void)> _1e4e931aa_match_expr(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece11a_Match>);
inline void _1e4e934c9_case(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece11a_Match>, jule::Ptr<_1e3ece538_Case>);
inline void _1e4e9374e_match_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece11a_Match>);
inline void _1e4e939c4_fall_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece725_FallSt>);
inline void _1e4e93c49_break_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ecd48d_BreakSt>);
inline void _1e4e93ebe_ret_with_vars(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece912_RetSt>);
inline void _1e4e94244_ret_tuple(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece912_RetSt>);
inline void _1e4e944b9_ret_with_exprs(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece912_RetSt>);
inline void _1e4e9473e_ret_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3ece912_RetSt>);
inline void _1e4e94c39_var(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e401a92b_Var>);
inline void _1e4e94eae_st(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Any);
inline void _1e4e95234_scope_stmts(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3e547aa_Scope>&);
inline void _1e4e954a9_scope(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3e547aa_Scope>);
inline void _1e4e9572e_func_scope(jule::Ptr<_1e4e9055e_ScopeCoder>, jule::Ptr<_1e3404651_FnIns>);
struct _1e4e9055e_ScopeCoder {
	jule::Ptr<_1e501c366_ObjectCoder> _field_oc = jule::Ptr<_1e501c366_ObjectCoder>();
	

	_1e4e9055e_ScopeCoder(void) = default;

	inline bool operator==(_1e4e9055e_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e4e9055e_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4e980a0_ExprCoder> static__1e4e9849b_new(jule::Ptr<_1e501c366_ObjectCoder>&);
inline void _1e4e98721_string(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3388a47_Const>&);
inline void _1e4e98996_boolean(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3388a47_Const>&);
inline void _1e4e98b72_nil_lit(jule::Ptr<_1e4e980a0_ExprCoder>);
inline jule::Bool _1e4e98e80_ftoa_special_cases(jule::Ptr<_1e4e980a0_ExprCoder>, jule::F64&);
inline void _1e4e99205_float32(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3388a47_Const>&);
inline void _1e4e9947a_float64(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3388a47_Const>&);
inline void _1e4e99799_constant(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3388a47_Const>, jule::Bool);
inline void _1e4e99b62_div_by_zero_binary(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e1c31ee6_Token>&, jule::Ptr<_1e33cb073_OperandExprModel>&, jule::Ptr<_1e33cb073_OperandExprModel>&);
inline void _1e4e99dd7_unsafe_binary(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9536_BinopExprModel>);
inline void _1e4e9a15c_binary(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9536_BinopExprModel>);
inline void _1e4e9a3d2_var(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e401a92b_Var>);
inline void _1e4e9a657_structure_ins(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3352093_StructIns>);
inline void _1e4e9a8cc_unary(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9723_UnaryExprModel>);
inline void _1e4e9ab52_structure_lit(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9aec_StructLitExprModel>);
inline void _1e4e9adc7_alloc_structure(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>);
inline void _1e4e9b14c_casting(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33e9ec6_CastingExprModel>);
inline void _1e4e9b3c2_args(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Slice<jule::Any>);
inline void _1e4e9b647_model_for_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Any);
inline void _1e4e9b8bc_push_call_inf(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea1b3_FnCallExprModel>&);
inline jule::Bool _1e4e9bbca_is_wrapped(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea1b3_FnCallExprModel>&);
inline void _1e4e9be50_pure_func_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea1b3_FnCallExprModel>&);
inline void _1e4e9c1c5_func_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea1b3_FnCallExprModel>);
inline void _1e4e9c44a_slice(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea3a0_SliceExprModel>);
inline void _1e4e9c6c0_indexing(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea58c_IndexingExprModel>);
inline void _1e4e9c945_unsafe_indexing(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e271c1d9_UnsafeIndexingExprModel>);
inline void _1e4e9cbba_anon_func(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ea779_AnonFnExprModel>);
inline void _1e4e9ce40_map(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eab53_MapExprModel>);
inline void _1e4e9d1b5_slicing(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ead40_SlicingExprModel>);
inline void _1e4e9d43a_trait_sub(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>);
inline void _1e4e9d6b0_structure_sub(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eb44a_StructSubIdentExprModel>);
inline void _1e4e9d935_common_ident(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eba11_CommonIdentExprModel>);
inline void _1e4e9dbaa_common_sub(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>);
inline void _1e4e9de30_array(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eb824_ArrayExprModel>);
inline void _1e4e9e1a5_func_ins_common(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3404651_FnIns>);
inline void _1e4e9e42a_func_ins(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e3404651_FnIns>);
inline void _1e4e9e6a0_tuple(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ebdda_TupleExprModel>);
inline void _1e4e9e925_new_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>);
inline void _1e4e9eb9a_out_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>);
inline void _1e4e9ee20_outln_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>);
inline void _1e4ea0195_panic_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>);
inline void _1e4ea041a_assert_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>);
inline void _1e4ea0690_error_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>);
inline void _1e4ea0915_copy_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ed12d_BuiltinCopyCallExprModel>);
inline void _1e4ea0b8a_make_call_slice(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>&);
inline void _1e4ea0e10_make_call_str(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>&);
inline void _1e4ea1185_make_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>);
inline void _1e4ea140a_push_to_slice(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e27a0ed7_PushToSliceExprModel>);
inline void _1e4ea1680_append_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>);
inline void _1e4ea1905_clone_call(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>);
inline void _1e4ea1b7a_sizeof(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eb219_SizeofExprModel>);
inline void _1e4ea1e00_alignof(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ed97a_AlignofExprModel>);
inline jule::Str _1e4ea220d_rune_lit(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33edb67_RuneExprModel>);
inline void _1e4ea2483_structure_static(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33eb637_StructStaticIdentExprModel>);
inline void _1e4ea2708_integrated_to_str(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33edd54_IntegratedToStrExprModel>);
inline void _1e4ea297d_backend_emit(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ee041_BackendEmitExprModel>);
inline void _1e4ea2c03_free(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e33ee22d_FreeExprModel>);
inline void _1e4ea2e78_mut_slicing(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e2ae7680_MutSlicingExprModel>);
inline void _1e4ea31ed_str_insert_begin(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel>);
inline void _1e4ea3473_model(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Any);
inline void _1e4ea36e8_expr(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Any);
inline void _1e4ea396d_val(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e406736d_Value>);
inline void _1e4ea3be3_init_expr(jule::Ptr<_1e4e980a0_ExprCoder>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e4e980a0_ExprCoder {
	jule::Ptr<_1e501c366_ObjectCoder> _field_oc = jule::Ptr<_1e501c366_ObjectCoder>();
	

	_1e4e980a0_ExprCoder(void) = default;

	inline bool operator==(_1e4e980a0_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e4e980a0_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e4ea6256_clone_func_decl(jule::Ptr<_1e3318840_Struct>&);
inline jule::Str static__1e4ea64ed_clone_func_def(jule::Ptr<_1e3318840_Struct>&);
struct _1e4ea5e9d_DeriveCoder {
	

	_1e4ea5e9d_DeriveCoder(void) = default;

	inline bool operator==(_1e4ea5e9d_DeriveCoder _other) { return true; }

	inline bool operator!=(_1e4ea5e9d_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4ea73cd_TestCoder> static__1e4ea7851_new(jule::Ptr<_1e501c366_ObjectCoder>&);
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4ea7ab5_find_testing_package(jule::Ptr<_1e4ea73cd_TestCoder>);
inline void _1e4ea7d3a_append_test(jule::Ptr<_1e4ea73cd_TestCoder>, jule::Ptr<_1e3404651_FnIns>);
inline void _1e4ea80b0_append_package_tests(jule::Ptr<_1e4ea73cd_TestCoder>, jule::Ptr<_1e3eea488_Package>&);
inline jule::Bool _1e4ea8324_ready_testing_package(jule::Ptr<_1e4ea73cd_TestCoder>);
inline void _1e4ea8500_call_tm_reset(jule::Ptr<_1e4ea73cd_TestCoder>);
inline void _1e4ea86cb_call_tm_failed(jule::Ptr<_1e4ea73cd_TestCoder>);
inline void _1e4ea88a7_call_tm_skipped(jule::Ptr<_1e4ea73cd_TestCoder>);
inline void _1e4ea8a83_serialize(jule::Ptr<_1e4ea73cd_TestCoder>);
struct _1e4ea73cd_TestCoder {
	jule::Ptr<_1e3352093_StructIns> _field_t = jule::Ptr<_1e3352093_StructIns>();
	jule::Ptr<_1e34019a0_Fn> _field_tm_reset = jule::Ptr<_1e34019a0_Fn>();
	jule::Ptr<_1e34019a0_Fn> _field_tm_failed = jule::Ptr<_1e34019a0_Fn>();
	jule::Ptr<_1e34019a0_Fn> _field_tm_skipped = jule::Ptr<_1e34019a0_Fn>();
	jule::Ptr<_1e501c366_ObjectCoder> _field_oc = jule::Ptr<_1e501c366_ObjectCoder>();
	

	_1e4ea73cd_TestCoder(void) = default;

	inline bool operator==(_1e4ea73cd_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e4ea73cd_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e4eaa03a_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1e4eaa425_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1e4eaa6bc_func(jule::Ptr<_1e34019a0_Fn>&);
inline jule::Str static__1e4eaa964_func_ins(jule::Ptr<_1e3404651_FnIns>&);
inline jule::Str static__1e4eaac0b_trait_decl(jule::Ptr<_1e374ee30_Trait>);
inline jule::Str static__1e4eaaea3_param(jule::Ptr<_1e3400163_Param>&);
inline jule::Str static__1e4eab24a_structure(jule::Ptr<_1e3318840_Struct>&);
inline jule::Str static__1e4eab4e2_structure_ins(jule::Ptr<_1e3352093_StructIns>&);
inline jule::Str static__1e4eab789_field(jule::Ptr<_1e3325ee0_Field>&);
inline jule::Str static__1e4eaba31_var(jule::Ptr<_1e401a92b_Var>);
inline jule::Str static__1e4eabcc8_iter_begin(jule::Uintptr);
inline jule::Str static__1e4eac070_iter_end(jule::Uintptr);
inline jule::Str static__1e4eac317_iter_next(jule::Uintptr);
inline jule::Str static__1e4eac5ae_label(jule::Str&);
inline jule::Str static__1e4eac856_match_end(jule::Uintptr);
inline jule::Str static__1e4eacaed_case_begin(jule::Uintptr);
struct _1e4ea9a2e_IdentCoder {
	

	_1e4ea9a2e_IdentCoder(void) = default;

	inline bool operator==(_1e4ea9a2e_IdentCoder _other) { return true; }

	inline bool operator!=(_1e4ea9a2e_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1e501be8c_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1e501be8c_SerializationInfo(void) = default;

	inline bool operator==(_1e501be8c_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1e501be8c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1e501c179_TraitHash {
	jule::Ptr<_1e374ee30_Trait> _field_t = jule::Ptr<_1e374ee30_Trait>();
	jule::Ptr<_1e3352093_StructIns> _field_s = jule::Ptr<_1e3352093_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1e501c179_TraitHash(void) = default;

	inline bool operator==(_1e501c179_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e501c179_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1e50231a2_to_str(_1e5022dd8_CustomType*);
inline jule::Bool _1e50234b0_equals(jule::Ptr<_1e5022dd8_CustomType>, jule::Ptr<_1e4091661_TypeKind>);
struct _1e5022dd8_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1e5022dd8_CustomType(void) = default;

	inline bool operator==(_1e5022dd8_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e5022dd8_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e5023c0d_to_type(jule::Str);
inline jule::Str static__1e5023ea5_prim(jule::Ptr<_1e4096138_Prim>);
inline jule::Str static__1e502424c_tuple(jule::Ptr<_1e409aa99_Tuple>);
inline jule::Str static__1e50244e4_as_sptr(jule::Str);
inline jule::Str static__1e502478b_as_ptr(jule::Str);
inline jule::Str static__1e5024a33_sptr(jule::Ptr<_1e4099647_Sptr>);
inline jule::Str static__1e5024cca_ptr(jule::Ptr<_1e409cbab_Ptr>);
inline jule::Str static__1e5025072_enum_decl(jule::Ptr<_1e34189c8_Enum>);
inline jule::Str static__1e5025319_type_enum_decl(jule::Ptr<_1e37eea6d_TypeEnum>);
inline jule::Str static__1e50255b1_as_slice(jule::Ptr<_1e4091661_TypeKind>);
inline jule::Str static__1e5025858_slice(jule::Ptr<_1e409a0a4_Slc>);
inline jule::Str static__1e5025b00_map(jule::Ptr<_1e409b65a_Map>);
inline jule::Str static__1e5025d97_trait_ident(jule::Str);
inline jule::Str static__1e502613e_trait_decl(jule::Ptr<_1e374ee30_Trait>);
inline jule::Str static__1e50263d6_structure(jule::Ptr<_1e3318840_Struct>);
inline jule::Str static__1e502667d_structure_ins(jule::Ptr<_1e3352093_StructIns>);
inline jule::Str static__1e5026925_array(jule::Ptr<_1e409c24e_Arr>);
inline jule::Str static__1e5026e64_param_ins(jule::Ptr<_1e3403782_ParamIns>&);
inline jule::Str static__1e50274a3_func_ins_result(jule::Ptr<_1e3404651_FnIns>&);
inline jule::Str static__1e502774a_anon_func(jule::Ptr<_1e3404651_FnIns>);
inline jule::Str static__1e50279e2_func(jule::Ptr<_1e3404651_FnIns>);
inline jule::Str static__1e5027c89_kind(jule::Ptr<_1e4091661_TypeKind>);
struct _1e50236d0_TypeCoder {
	

	_1e50236d0_TypeCoder(void) = default;

	inline bool operator==(_1e50236d0_TypeCoder _other) { return true; }

	inline bool operator!=(_1e50236d0_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e76773e7_name(_1e787ba91_Flag*);
inline jule::Str _1e7677529_what(_1e787ba91_Flag*);
inline void _1e787be7b_reset(_1e787ba91_Flag*);
inline jule::I32 _1e787c0ad_short(_1e787ba91_Flag*);
struct _1e787ba91_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1e787ba91_Flag(void) = default;

	inline bool operator==(_1e787ba91_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e787ba91_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e7880248_name(_1e78806ee_Flag*);
inline jule::Str _1e78809b8_what(_1e78806ee_Flag*);
inline void _1e7880aea_reset(_1e78806ee_Flag*);
inline jule::I32 _1e7880c2c_short(_1e78806ee_Flag*);
struct _1e78806ee_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1e78806ee_Flag(void) = default;

	inline bool operator==(_1e78806ee_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e78806ee_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e7883bca_name(_1e7884181_Flag*);
inline jule::Str _1e788444a_what(_1e7884181_Flag*);
inline void _1e788457c_reset(_1e7884181_Flag*);
inline jule::I32 _1e78846ae_short(_1e7884181_Flag*);
struct _1e7884181_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1e7884181_Flag(void) = default;

	inline bool operator==(_1e7884181_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e7884181_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e78876a1_name(_1e7887b57_Flag*);
inline jule::Str _1e7887e21_what(_1e7887b57_Flag*);
inline void _1e7888053_reset(_1e7887b57_Flag*);
inline jule::I32 _1e7888185_short(_1e7887b57_Flag*);
struct _1e7887b57_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1e7887b57_Flag(void) = default;

	inline bool operator==(_1e7887b57_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e7887b57_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e788b133_name(_1e788b5d9_Flag*);
inline jule::Str _1e788b8a3_what(_1e788b5d9_Flag*);
inline void _1e788b9d5_reset(_1e788b5d9_Flag*);
inline jule::I32 _1e788bb17_short(_1e788b5d9_Flag*);
struct _1e788b5d9_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1e788b5d9_Flag(void) = default;

	inline bool operator==(_1e788b5d9_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e788b5d9_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e50595d4_FlagSet> static__1e50598c0_new(void);
inline jule::Trait<_1e505733a_CommonFlag> _1e5059d54_find_flag(_1e50595d4_FlagSet*, jule::Str);
inline jule::Trait<_1e505733a_CommonFlag> _1e505a162_find_flag_short(_1e50595d4_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1e505733a_CommonFlag>> _1e505a3c6_flags(_1e50595d4_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1e505a6d4_parse(_1e50595d4_FlagSet*, jule::Slice<jule::Str>);
inline void _1e505a8b0_reset(_1e50595d4_FlagSet*);
inline jule::Ptr<_1e788b5d9_Flag> _1e791330e_add_flag_common(_1e50595d4_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1e7887b57_Flag> _1e7921b25_add_flag_common(_1e50595d4_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1e7910d12_add_var(_1e50595d4_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1e791e617_add_var(_1e50595d4_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1e50595d4_FlagSet {
	jule::Slice<jule::Trait<_1e505733a_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1e505733a_CommonFlag>>();
	

	_1e50595d4_FlagSet(void) = default;

	inline bool operator==(_1e50595d4_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1e50595d4_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1e4675e54_IR>,jule::Slice<_1e1905060_Log>> static__1e1c9dd43_build(jule::Str, jule::I64);
inline void _1e208d0cc_append_structs(_1e4675e54_IR*, jule::Ptr<_1e3eea488_Package>&, jule::Slice<jule::Ptr<_1e3318840_Struct>>&);
inline jule::Slice<jule::Ptr<_1e3318840_Struct>> _1e2aea034_get_all_structures(_1e4675e54_IR*);
inline void _1e2b02129_append_globals(_1e4675e54_IR*, jule::Ptr<_1e3eea488_Package>&, jule::Slice<jule::Ptr<_1e401a92b_Var>>&);
inline jule::Slice<jule::Ptr<_1e401a92b_Var>> _1e415722c_get_all_globals(_1e4675e54_IR*);
inline void _1e41638cb_order(_1e4675e54_IR*);
struct _1e4675e54_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e3eea488_Package> _field_main = jule::Ptr<_1e3eea488_Package>();
	jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>>();
	_1e4488151_OrderedDefines _field_ordered = _1e4488151_OrderedDefines();
	

	_1e4675e54_IR(void) = default;

	inline bool operator==(_1e4675e54_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1e4675e54_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1e331ace8_to_str(_1e3352093_StructIns*);
inline jule::Bool _1e331b4ad_equals(jule::Ptr<_1e3352093_StructIns>, jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e3327bc3_same(_1e3352093_StructIns*, jule::Ptr<_1e3352093_StructIns>);
inline jule::Ptr<_1e34019a0_Fn> _1e3328d39_find_method(_1e3352093_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e332d657_FieldIns> _1e332b18d_find_field(_1e3352093_StructIns*, jule::Str);
struct _1e3352093_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1e3318840_Struct> _field_decl = jule::Ptr<_1e3318840_Struct>();
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1e4091661_TypeKind>>();
	jule::Slice<jule::Ptr<_1e332d657_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1e332d657_FieldIns>>();
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e34019a0_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1e3406e17_ReferenceStack> _field_refers = jule::Ptr<_1e3406e17_ReferenceStack>();
	_1e332791a_Operators _field_operators = _1e332791a_Operators();
	

	_1e3352093_StructIns(void) = default;

	inline bool operator==(_1e3352093_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1e3352093_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e48e305b_ObjectDeadCode> static__1e48e3457_new(jule::Ptr<_1e4675e54_IR>&);
inline jule::Bool _1e7368d0e_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e374ee30_Trait>&);
inline jule::Bool _1e736e8a3_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Bool _1e7375cd8_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3352093_StructIns>&);
inline jule::Bool _1e737c8c2_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e401a92b_Var>&);
inline void _1e736bd45_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e374ee30_Trait>);
inline void _1e73730b0_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3404651_FnIns>);
inline void _1e737625b_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3352093_StructIns>);
inline void _1e7381211_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e401a92b_Var>);
inline void _1e4922123_set_references_as_live(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3406e17_ReferenceStack>&);
inline void _1e4922398_inits(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3eea488_Package>&);
inline void _1e492261d_collect_live_package(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3eea488_Package>&);
inline void _1e49227e9_collect_live(jule::Ptr<_1e48e305b_ObjectDeadCode>);
inline void _1e4922a6e_remove_dead_globals(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e401a92b_Var>>&);
inline void _1e4922ce4_remove_dead_fns(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e34019a0_Fn>>&);
inline void _1e4923069_remove_dead_structs(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e3318840_Struct>>&);
inline void _1e49232de_remove_dead_traits(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e374ee30_Trait>>&);
inline void _1e4923564_remove_deads_file(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e4061466_SymbolTable>&);
inline void _1e49237d9_remove_deads_package(jule::Ptr<_1e48e305b_ObjectDeadCode>, jule::Ptr<_1e3eea488_Package>&);
inline void _1e49239b5_remove_deads(jule::Ptr<_1e48e305b_ObjectDeadCode>);
inline void _1e4923b91_elimanate(jule::Ptr<_1e48e305b_ObjectDeadCode>);
struct _1e48e305b_ObjectDeadCode {
	_1e48e2c92_LiveTable _field_live = _1e48e2c92_LiveTable();
	jule::Ptr<_1e4675e54_IR> _field_ir = jule::Ptr<_1e4675e54_IR>();
	

	_1e48e305b_ObjectDeadCode(void) = default;

	inline bool operator==(_1e48e305b_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e48e305b_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e501c366_ObjectCoder> static__1e5000349_new(jule::Ptr<_1e4675e54_IR>&, _1e501be8c_SerializationInfo);
inline void _1e5000679_write(jule::Ptr<_1e501c366_ObjectCoder>, jule::Str);
inline void _1e5000e1b_add_indent(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5001e0b_done_indent(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5002659_indent(jule::Ptr<_1e501c366_ObjectCoder>);
inline jule::I64 _1e5003a89_find_type_offset(_1e501c366_ObjectCoder*, jule::Ptr<_1e374ee30_Trait>, jule::Ptr<_1e4091661_TypeKind>);
inline void _1e4ed562b_loc_info(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e1c31ee6_Token>&);
inline void _1e4ed2edb_head(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5001669_links(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e4eddc72_prepare_structures(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e4edeb85_iter_packages(jule::Ptr<_1e501c366_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>);
inline void _1e4ee036c_build_trait_map(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e4ee0a54_trait_decls(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e4edcaa6_structure_plain_decl(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e4ed6819_structure_plain_decls(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e4edd6de_field_decl(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e332d657_FieldIns>&);
inline void _1e4ed7bd3_structure_destructor(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e4ee123b_structure_derive_defs_decls(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e501c90a_structure_operator_eq(jule::Ptr<_1e501c366_ObjectCoder>, jule::Str&, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e501ca3c_structure_operator_not_eq(jule::Ptr<_1e501c366_ObjectCoder>, jule::Str&, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e501cb6e_structure_operator(jule::Ptr<_1e501c366_ObjectCoder>, jule::Str&, jule::Ptr<_1e3404651_FnIns>&, jule::Str);
inline void _1e501cca1_structure_operators(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e501cdd3_structure_ins_decl(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e501d015_structure_decl(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e501d147_structure_decls(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501d279_params_decls(jule::Ptr<_1e501c366_ObjectCoder>, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>&);
inline void _1e501d3ab_func_head(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3404651_FnIns>&, jule::Bool);
inline void _1e501d4dd_func_decl(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e34019a0_Fn>&, jule::Bool);
inline void _1e501d620_func_decls(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501d752_trait_data_types(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501d961_param_ins(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3403782_ParamIns>&);
inline void _1e501dbd6_params_ins(jule::Ptr<_1e501c366_ObjectCoder>, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>&);
inline void _1e501e005_var_init_expr(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e401a92b_Var>&, jule::Fn<void(void)>);
inline void _1e501e27a_var(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e401a92b_Var>);
inline void _1e501e500_func(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e34019a0_Fn>&);
inline void _1e501e6cb_trait_wrappers(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501e8a7_trait_datas(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501ea83_globals(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501ec5e_decls(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e501eed4_structure_methods(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e5020259_structure_derive_defs(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e50204ce_structure_ostream(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e5020754_structure_ins(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3352093_StructIns>&);
inline void _1e50209c9_structure(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3318840_Struct>&);
inline void _1e5020ba5_structures(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5020d81_funcs(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5021106_push_init(jule::Ptr<_1e501c366_ObjectCoder>, jule::Ptr<_1e3eea488_Package>&);
inline void _1e50212d2_init_caller(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e50214ad_end(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5021689_serialize_head(jule::Ptr<_1e501c366_ObjectCoder>);
inline void _1e5021865_serialize(jule::Ptr<_1e501c366_ObjectCoder>);
struct _1e501c366_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1e4675e54_IR> _field_ir = jule::Ptr<_1e4675e54_IR>();
	_1e501be8c_SerializationInfo _field_info = _1e501be8c_SerializationInfo();
	jule::Slice<jule::Ptr<_1e501c179_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1e501c179_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1e4e980a0_ExprCoder> _field_ec = jule::Ptr<_1e4e980a0_ExprCoder>();
	jule::Ptr<_1e4e9055e_ScopeCoder> _field_sc = jule::Ptr<_1e4e9055e_ScopeCoder>();
	

	_1e501c366_ObjectCoder(void) = default;

	inline bool operator==(_1e501c366_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1e501c366_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1e78a07a7_parse_integer(_1e505bcac_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1e78a8617_parse_integer(_1e505bcac_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1e505c5a4_get_data(_1e505bcac_ArgParser*);
inline jule::VoidExceptional _1e505c7e6_process_flag(_1e505bcac_ArgParser*, jule::Trait<_1e505733a_CommonFlag>&);
inline jule::VoidExceptional _1e505ca6b_single_dash(_1e505bcac_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1e505cce1_double_dash(_1e505bcac_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1e505cebc_try_arg(_1e505bcac_ArgParser*);
inline jule::VoidExceptional _1e505d198_parse(_1e505bcac_ArgParser*);
struct _1e505bcac_ArgParser {
	_1e50595d4_FlagSet _field_set = _1e50595d4_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1e505bcac_ArgParser(void) = default;

	inline bool operator==(_1e505bcac_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e505bcac_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _2163acd45_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _2163ad0dc_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _2163ad6a3_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _2163ad9b1_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _21639833b_utf16_from_str(jule::Str);
inline jule::Str _216398e74_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _2163990a6_u16_ptr_to_str(jule::U16*);
inline jule::I64 _22ebde350_get_last_errno(void);
inline jule::Uintptr _2163b00cd_get_std_handle(jule::Uintptr);
inline jule::I64 _2163b052e_wstat(jule::U16*, struct stat*);
inline jule::I64 _2163b0919__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _2163b0b17_get_last_error(void);
inline jule::U32 _2163b0e58_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _2163b1497_delete_file(jule::U16*);
inline jule::Bool _2163b173e_create_directory(jule::U16*);
inline jule::Bool _2163b19d6_remove_directory(jule::U16*);
inline _WDIR* _2163b1c7d__wopendir(jule::U16*);
inline struct _wdirent* _2163b2025__wreaddir(_WDIR*);
inline jule::I64 _2163b22bc__wclosedir(_WDIR*);
inline jule::U32 _2163b2993_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _2163b2cd4_get_console_mode(jule::Uintptr, jule::I64&);
inline jule::Bool _2163b3125_set_console_mode(jule::Uintptr, jule::I64);
inline jule::Bool _2163b3653_write_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _2163b3b81_read_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _2163b6018_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2163b6403_read(jule::I64, void*, jule::U64);
inline jule::I64 _2163b6777_close(jule::I64);
inline jule::I64 _2163b6b62_write(jule::I64, void*, jule::U64);
inline void _2163b6d71_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _216495b75_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _21649623b_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _21649677a_rune_len(jule::I32);
inline jule::I64 _216496b98_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _216496ed9_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _21649732a_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _216497869_rune_count_str(jule::Str);
inline jule::Bool _216497b11_rune_start(jule::U8);
inline jule::I64 _223380cc8_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _223384b45_args(void);
inline jule::Exceptional<jule::Str> _2233850b8_working_dir(void);
inline jule::Exceptional<jule::Str> _223385eba___getwd(void);
inline jule::Slice<jule::U8> _22341b88b_stobs(jule::Str&);
inline jule::Bool _1e181878c_is_letter(jule::I32);
inline jule::Bool _1e188abb6_is16(jule::Slice<_1e1889104_Range16>, jule::U16);
inline jule::Bool _1e188b007_is32(jule::Slice<_1e1889577_Range32>, jule::U32);
inline jule::Bool _1e188b799_is_excluding_latin(jule::Ptr<_1e18899ea_RangeTable>, jule::I32);
inline jule::Str _1e17ddb08_repeat(jule::Str, jule::I64);
inline jule::Bool _1e16bd136__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e17de125_has_prefix(jule::Str, jule::Str);
inline jule::Bool _1e17de642__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1e188be1a_has_suffix(jule::Str, jule::Str);
inline jule::I64 _1e188c04c_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e188c2b1_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1e188c3e3_find_last(jule::Str, jule::Str);
inline jule::I64 _1e188c9ed__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1e188ce93_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _1e188d46b_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1e188d6d0_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1e188d812_contains(jule::Str, jule::Str);
inline jule::Bool _1e188dba8_contains_any(jule::Str, jule::Str);
inline jule::Str _1e188de1c_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1e188cc62__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e188e868_trim_left(jule::Str, jule::Str);
inline void _1e188e99a__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1e188ec0e_trim(jule::Str, jule::Str);
inline jule::Bool _223362073_is_path_sep(jule::U8);
inline jule::Bool _22335aad8_is_slash(jule::U8);
inline jule::U8 _22335ad5d_to_upper(jule::U8);
inline jule::I64 _22335b424_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _22335b6bb_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _22335b963_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _22335bcd7___abs(jule::Str);
inline jule::Str _22335c07e___join(jule::Slice<jule::Str>);
inline jule::Str _1e1890506_clean(jule::Str);
inline jule::Str _1e189076a_from_slash(jule::Str);
inline jule::Str _1e189089c_join(jule::Slice<jule::Str>);
inline jule::Str _1e18909ce_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e1890b11_abs(jule::Str);
inline jule::Str _1e1890c43_base(jule::Str);
inline jule::Str _1e1890d75_dir(jule::Str);
inline jule::Str _1e1890ea7_volume_name(jule::Str);
inline jule::I64 _2162d05d6_get_last_fs_error(void);
inline jule::Bool _21642b0d3_is_console_handle(jule::Uintptr);
inline jule::I64 _1e19447ec_get_last_process_error(void);
inline jule::Slice<wchar_t*> _1e1959515_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1e19597ac_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1e1959b0e_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _1e1959ee9_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1e195ac20_exit(jule::I64);
inline jule::Str _1e195ae1d_executable(void);
inline jule::Bool _1e18e866e_is_std_header_path(jule::Str);
inline jule::Bool _1e18e87a1_is_valid_header_ext(jule::Str);
inline jule::Bool _1e18e89e3_is_valid_cpp_ext(jule::Str);
inline jule::Str _1e19054a0_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e190578b_arg_to_str(jule::Any);
inline jule::I64 _1e1905a33_find_next_fmt(jule::Str);
inline jule::Str _1e1905db8_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e1906e85_is_top_directive(jule::Str);
inline jule::Bool _1e1908a58_is_windows(jule::Str);
inline jule::Bool _1e1908d44_is_darwin(jule::Str);
inline jule::Bool _1e19090db_is_linux(jule::Str);
inline jule::Bool _1e190940a_is_i386(jule::Str);
inline jule::Bool _1e19096a2_is_amd64(jule::Str);
inline jule::Bool _1e1909949_is_arm64(jule::Str);
inline jule::Bool _1e1909be1_is_unix(jule::Str);
inline jule::Bool _1e190a065_is_32bit(jule::Str);
inline jule::Bool _1e190a30c_is_64bit(jule::Str);
inline void _1e19176e3_init(void);
inline jule::Bool _1e1c32700_is_unary_op(jule::Str);
inline jule::Bool _1e1c329db_is_bin_op(jule::Str);
inline jule::Bool _1e1c330a2_is_str(jule::Str);
inline jule::Bool _1e1c33349_is_raw_str(jule::Str);
inline jule::Bool _1e1c335e1_is_rune(jule::Str);
inline jule::Bool _1e1c33c0c_is_bool(jule::Str);
inline jule::Bool _1e1c33ea4_is_float(jule::Str);
inline jule::Bool _1e1c3424b_is_num(jule::Str);
inline jule::Bool _1e1c3478a_is_ignore_ident(jule::Str);
inline jule::Bool _1e1c34a32_is_anon_ident(jule::Str);
inline jule::Bool _1e1c35071_is_space(jule::I32);
inline jule::Bool _1e1c354c2_is_letter(jule::I32);
inline jule::Bool _1e1c35a11_is_decimal(jule::U8);
inline jule::Bool _1e1c35ca8_is_binary(jule::U8);
inline jule::Bool _1e1c36050_is_octal(jule::U8);
inline jule::Bool _1e1c362e7_is_hex(jule::U8);
inline jule::Bool _1e1c3658e_is_assign(jule::U64);
inline jule::Bool _1e1c36836_is_postfix_op(jule::Str);
inline jule::Bool _1e1c36acd_is_assign_op(jule::Str);
inline jule::Ptr<_1e1c37381_File> _1e1c388b0_new_file_set(jule::Str);
inline _1e1905060_Log _1e1c3a1db_make_err(jule::I64, jule::I64, jule::Ptr<_1e1c37381_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e1c3a571_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1e1c3a8b2_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3ac47_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3b088_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3b3c9_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3b71a_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3bb6b_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3be13_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3c1aa_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1e1c3c4eb_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _1e1c3c83c_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _1e1c3cb7d_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e1c3cebe_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1e1c3d310_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3d761_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3da08_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3dd49_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1e1c3e113_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3e2cd_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3e586_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1e1c3e82d_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1e1905060_Log> _1e1c44327_lex(jule::Ptr<_1e1c37381_File>, jule::I64);
inline void _1e33e90c4_lshift_unsig(_1e3388a47_Const&, _1e3388a47_Const&);
inline void _1e33e93c1_rshift_unsig(_1e3388a47_Const&, _1e3388a47_Const&);
inline jule::I64 _1e3e0b960_leading_zeros64(jule::U64);
inline jule::I64 _1e3e0c9b6_trailing_zeros(jule::U64);
inline jule::I64 _1e3e0d3ac_trailing_zeros32(jule::U32);
inline jule::I64 _1e3e0d654_trailing_zeros64(jule::U64);
inline jule::I64 _1e3e13dc9_len32(jule::U32);
inline jule::I64 _1e3e14171_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e3e14d31_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e3e164b4_mul64(jule::U64, jule::U64);
inline jule::U32 _1e3d305a9_f32_bits(jule::F32);
inline jule::F32 _1e3d30895_f32_from_bits(jule::U32);
inline jule::U64 _1e3d30b3c_f64_bits(jule::F64);
inline jule::F64 _1e3d30e5b_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1e3d33568_frexp(jule::F64);
inline jule::F64 _1e3dacca7_nan(void);
inline jule::Bool _1e3db3395_is_nan(jule::F64);
inline jule::F64 _1e3db53db_inf(jule::I64);
inline jule::Bool _1e3dbe02c_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1e3dd50a9_normalize(jule::F64);
inline jule::F64 _1e3dc6b17_log(jule::F64);
inline jule::F64 _1e3dae913_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e3e1ed5d_modf(jule::F64);
inline jule::F64 _1e3e20622_log2(jule::F64);
inline jule::Str _1e3874cbe_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e387583b_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e388a09d_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline jule::Slice<jule::U8> _1e38e37cc_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e391b23e_DecimalSlice, jule::I64, jule::U8);
inline void _1e391a8c0_round_shortest(_1e3e4bdac_Decimal&, jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline jule::Slice<jule::U8> _1e392be86_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1e391b23e_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e392d619_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1e391b23e_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e39e7d76_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline jule::Slice<jule::U8> _1e3a1b65d_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline jule::I64 _1e3a21a3c_min(jule::I64, jule::I64);
inline jule::I64 _1e3a7d390_max(jule::I64, jule::I64);
inline jule::U8 _1e3a9d679_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1e3ac0e3d___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e3b5319b_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e3b7493c_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1e38665eb_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e3bdd456_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e3b0d3cb_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e392adca_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e3be3ec8_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e388ab3c_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e38ac521_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1e3901b3c_atof_hex(jule::Str, _1e3a1a607_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1e3952396_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e3ac7708_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e3b537b7_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e3b9eb98_parse_float(jule::Str, jule::I64);
inline void _1e3cb374b_ryu_ftoa_fixed32(_1e391b23e_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1e3d1a7c5_ryu_ftoa_fixed64(_1e391b23e_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1e3d2225a_format_decimal(_1e391b23e_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e38d0a50_ryu_ftoa_shortest(_1e391b23e_DecimalSlice&, jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline jule::I64 _1e391cb25_mul_by_log2_log10(jule::I64);
inline jule::I64 _1e392b749_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e392c63a_compute_bounds(jule::U64, jule::I64, _1e3a1a607_FloatInfo&);
inline void _1e3cb1a35_ryu_digits(_1e391b23e_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e3e4ae66_ryu_digits32(_1e391b23e_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e3e4b098_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e3e4b1ca_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e3e4b30c_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1e3e4b43e_divmod1e9(jule::U64);
inline void _1e3e4c918_trim(_1e3e4bdac_Decimal&);
inline void _1e3e4ca4a_right_shift(_1e3e4bdac_Decimal&, jule::U64);
inline jule::Bool _1e3e4cb7c_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e3e4ccae_left_shift(_1e3e4bdac_Decimal&, jule::U64);
inline jule::Bool _1e3e4cde1_should_round_up(_1e3e4bdac_Decimal&, jule::I64);
inline jule::Str _1e3e4d96e_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1e3e4daa1_fmt_int(jule::I64, jule::I64);
inline jule::Str _1e3e4dbd3_itoa(jule::I64);
inline jule::Str _1e3e4dd15_small(jule::I64);
inline jule::Bool _1e3e4de47_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e3e4e079_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1e3ec0370_real_kind_of(jule::Str);
inline jule::I64 _1e3ec0617_bitsize_of(jule::Str);
inline jule::Str _1e3ec0936_int_from_bits(jule::I64);
inline jule::Str _1e3ec0bcd_uint_from_bits(jule::I64);
inline jule::Str _1e3ec0e75_float_from_bits(jule::I64);
inline jule::Bool _1e3ec1a25_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1e3ec1cbc_bitsize_of_float(jule::F64);
inline jule::I64 _1e3ec2064_bitsize_of_int(jule::I64);
inline jule::I64 _1e3ec230b_bitsize_of_uint(jule::U64);
inline void _1e3ec2471_update_target(void);
inline void _1e3ec25d6_init(void);
inline jule::F64 _1e3ec6893_min(jule::Str);
inline jule::F64 _1e3ec6b7e_max(jule::Str);
inline jule::Bool _1e3ec7003_is_i8_compatible(jule::Str);
inline jule::Bool _1e3ec72de_is_i16_compatible(jule::Str);
inline jule::Bool _1e3ec7586_is_i32_compatible(jule::Str);
inline jule::Bool _1e3ec78a5_is_i64_compatible(jule::Str);
inline jule::Bool _1e3ec7b4c_is_u8_compatible(jule::Str);
inline jule::Bool _1e3ec7de4_is_u16_compatible(jule::Str);
inline jule::Bool _1e3ec818b_is_u32_compatible(jule::Str);
inline jule::Bool _1e3ec8510_is_u64_compatible(jule::Str);
inline jule::Bool _1e3ec87a7_is_f32_compatible(jule::Str);
inline jule::Bool _1e3ec8a4e_is_f64_compatible(jule::Str);
inline jule::Bool _1e3ec8d90_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1e3ec9137_is_i16_greater(jule::Str);
inline jule::Bool _1e3ec93ce_is_i32_greater(jule::Str);
inline jule::Bool _1e3ec9676_is_i64_greater(jule::Str);
inline jule::Bool _1e3ec991d_is_u16_greater(jule::Str);
inline jule::Bool _1e3ec9d6e_is_u32_greater(jule::Str);
inline jule::Bool _1e3eca116_is_u64_greater(jule::Str);
inline jule::Bool _1e3eca3ad_is_f32_greater(jule::Str);
inline jule::Bool _1e3eca655_is_f64_greater(jule::Str);
inline jule::Bool _1e3eca996_is_greater(jule::Str, jule::Str);
inline jule::Bool _1e3ecb9ca_is_sig_int(jule::Str);
inline jule::Bool _1e3ecbcb6_is_unsig_int(jule::Str);
inline jule::Bool _1e3ecc05d_is_int(jule::Str);
inline jule::Bool _1e3ecc37c_is_float(jule::Str);
inline jule::Bool _1e3ecc624_is_num(jule::Str);
inline jule::Bool _1e403c662_is_ascii(jule::I32);
inline jule::I32 _1e404e3dd_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1e4033e0b_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1e405107c_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1e4051324_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1e4051632_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1e4051973_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1e413ac49_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1e410a301_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e4109ad6_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1e41196ea_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e4123380_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e413c652_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e413b909_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e3406147_parameter_uses_generics(jule::Ptr<_1e3400163_Param>&, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>&);
inline jule::Ptr<_1e4095775_TypeSymbol> _1e3408633_build_type(jule::Ptr<_1e3335807_TypeDecl>);
inline jule::Ptr<_1e406736d_Value> _1e340891e_build_expr(jule::Ptr<_1e3339d28_Expr>);
inline jule::Ptr<_1e4090929_TypeAlias> _1e3408bb6_build_type_alias(jule::Ptr<_1e334bb70_TypeAliasDecl>);
inline jule::Ptr<_1e3325ee0_Field> _1e3408ed5_build_field(jule::Ptr<_1e3350316_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e3325ee0_Field>> _1e340927c_build_fields(jule::Slice<jule::Ptr<_1e3350316_FieldDecl>>&);
inline jule::Ptr<_1e3318840_Struct> _1e3409524_build_struct(jule::Ptr<_1e3350ab9_StructDecl>);
inline jule::Ptr<_1e3400163_Param> _1e34097bb_build_param(jule::Ptr<_1e3346010_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e3400163_Param>> _1e3409b40_build_params(jule::Slice<jule::Ptr<_1e3346010_ParamDecl>>&);
inline jule::Ptr<_1e33ee9c0_RetType> _1e3409dd7_build_ret_type(jule::Ptr<_1e333891a_RetTypeDecl>);
inline jule::Ptr<_1e34019a0_Fn> _1e340a17e_build_fn(jule::Ptr<_1e3347330_FnDecl>);
inline jule::Slice<jule::Ptr<_1e34019a0_Fn>> _1e340a426_build_methods(jule::Slice<jule::Ptr<_1e3347330_FnDecl>>&);
inline jule::Ptr<_1e374ee30_Trait> _1e340a6bd_build_trait(jule::Ptr<_1e33511c4_TraitDecl>);
inline jule::Ptr<_1e35972d8_EnumItem> _1e340a965_build_enum_item(jule::Ptr<_1e334d4ce_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e35972d8_EnumItem>> _1e340ac0c_build_enum_items(jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>>&);
inline jule::Ptr<_1e34189c8_Enum> _1e340aea4_build_enum(jule::Ptr<_1e334e007_EnumDecl>);
inline jule::Ptr<_1e3584902_TypeEnumItem> _1e340b405_build_type_enum_item(jule::Ptr<_1e334ea0d_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>> _1e340b69c_build_type_enum_items(jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>>&);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e340b944_build_type_enum(jule::Ptr<_1e3350118_TypeEnumDecl>);
inline jule::Ptr<_1e401a92b_Var> _1e340bbdb_build_var(jule::Ptr<_1e334830e_VarDecl>);
inline jule::Slice<jule::Ptr<_1e401a92b_Var>> _1e340be83_build_vars(jule::Slice<jule::Ptr<_1e334830e_VarDecl>>);
inline jule::Ptr<_1e35092a0_Impl> _1e340c22a_build_impl(jule::Ptr<_1e33517ce_Impl>);
inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3e66723_new_scope_checker_base(jule::Ptr<_1e400067a_Sema>&, jule::Ptr<_1e3404651_FnIns>);
inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3e682d5_new_scope_checker(jule::Ptr<_1e400067a_Sema>&, jule::Ptr<_1e3404651_FnIns>);
inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3e7c629_find_label_parent(jule::Str, jule::Ptr<_1e3ed06d2_ScopeChecker>);
inline jule::Bool _1e3e97732_model_is_goto_scope(jule::Any, jule::Ptr<_1e3e547aa_Scope>&);
inline jule::Bool _1e3e9957a_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1e3e547aa_Scope>&);
inline jule::I64 _1e3e9a768_count_match_type(jule::Ptr<_1e3ece11a_Match>&, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Slice<jule::Ptr<_1e40662e5_Data>> _1e3e9aeb6_get_datas_from_tuple_data(jule::Ptr<_1e40662e5_Data>&);
inline jule::Slice<jule::Any> _1e3e9dc99_get_expr_models(jule::Any&);
inline jule::Bool _1e3e9e4e7_check_mut(jule::Ptr<_1e400067a_Sema>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e3ea6ee4_check_assign(jule::Ptr<_1e400067a_Sema>&, jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e40662e5_Data>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e3ea7a72_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1e3ea8930_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1e3e9c913_stmt_is_def(jule::Any&);
inline jule::Ptr<_1e401a92b_Var> _1e3ee50ba_find_var_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e4090929_TypeAlias> _1e3ee551b_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e3318840_Struct> _1e3ee5917_find_struct_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e34019a0_Fn> _1e3ee5d79_find_fn_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e374ee30_Trait> _1e3ee6187_find_trait_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e34189c8_Enum> _1e3ee64c8_find_enum_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ee683b_find_type_enum_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Str);
inline jule::Bool _1e3eeca62_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1e3eed7bb_is_valid_model_for_ref(jule::Any&);
inline _1e1905060_Log _1e3eedc61_compiler_err(jule::Ptr<_1e1c31ee6_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e3eee0a2_imp_is_lookupable(jule::Ptr<_1e3ee752e_ImportInfo>&, jule::Str);
inline void _1e3eee39e_append_ret_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>&, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e3eee657_append_param_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>&, jule::Ptr<_1e3404651_FnIns>&);
inline void _1e3eee932_append_generic_type_aliases(jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>&, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Ptr<_1e4061466_SymbolTable> _1e3eeec84_find_file(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>&, jule::Ptr<_1e1c37381_File>&);
inline void _1e40001e6_push_suggestion(_1e1905060_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e404688b_trait_has_reference_receiver(jule::Ptr<_1e374ee30_Trait>&);
inline jule::Bool _1e4034060_float_assignable(jule::Str, jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e4034192_sig_assignable(jule::Str, jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e4050aa4_unsig_assignable(jule::Str, jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e4050bd6_int_assignable(jule::Str, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e330242d_Directive> _1e408b1e9_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline jule::Any _1e408b57e_find_builtins_import(jule::Str, jule::Ptr<_1e3ee752e_ImportInfo>);
inline void _1e408b78d_fit_bitsize(jule::Ptr<_1e40662e5_Data>&);
inline void _1e408ba8a_make_struct_lit_alloc(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e33e9aec_StructLitExprModel>&);
inline jule::Ptr<_1e401a92b_Var> _1e408bdcb_build_error_var(jule::Ptr<_1e3e547aa_Scope>&, jule::Ptr<_1e333e1b2_FnCallExpr>&);
inline jule::Any _1e408c21c_find_builtins_sema(jule::Str, jule::Ptr<_1e400067a_Sema>);
inline jule::Bool _1e408c4b4_is_ok_for_shifting(jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e408c86b_is_instanced_struct(jule::Ptr<_1e3352093_StructIns>);
inline jule::Bool _1e408cb46_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e40662e5_Data>&);
inline void _1e408cd77_apply_cast_kind_model(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e4091661_TypeKind>&);
inline void _1e408d130_apply_cast_kind(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Ptr<_1e40662e5_Data> _1e408d32d_build_void_data(void);
inline jule::Str _1e408d5e7_check_data_for_integer_indexing(jule::Ptr<_1e40662e5_Data>&);
inline void _1e408d8d3_apply_cast_model_by_enum(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e34189c8_Enum>);
inline void _1e408db9c_cast_const_by_type(jule::Str&, jule::Ptr<_1e40662e5_Data>&);
inline void _1e408e1a8_update_model_to_generic_ins(jule::Ptr<_1e33ea1b3_FnCallExprModel>&, jule::Ptr<_1e3404651_FnIns>&);
inline jule::Bool _1e408e41c_push_sub_ident_from_expr(jule::Any, jule::Ptr<_1e333651c_SubIdentTypeDecl>&);
inline jule::Bool _1e40a7bd8_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>&);
inline jule::Bool _1e40a806d_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline jule::Bool _1e40a8315_can_get_ptr(jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e40a8634_is_valid_for_sptr_type(jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40a88cb_is_valid_for_ref(jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Bool _1e40a8b95_is_builtin_str_convertable(jule::Ptr<_1e4091661_TypeKind>&);
inline jule::Str _1e40a8e3c_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e4096138_Prim> _1e40a9305_build_prim_type(jule::Str);
inline jule::Ptr<_1e3318840_Struct> _1e40a959c_get_struct_from_kind(jule::Ptr<_1e4091661_TypeKind>);
inline jule::Bool _1e40a9844_is_prim(jule::Str);
inline void _1e40a9aec_apply_implicit_cast(jule::Ptr<_1e4091661_TypeKind>&, jule::Ptr<_1e40662e5_Data>&);
inline std::tuple<jule::Ptr<_1e4061466_SymbolTable>,jule::Slice<_1e1905060_Log>> _1e40ac9e0_build_symbols(jule::Ptr<_1e3301383_Ast>&, jule::Trait<_1e3ee4c35_Importer>&, jule::Ptr<_1e340c77a_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1e3eea488_Package>,jule::Slice<_1e1905060_Log>> _1e40ace1e___analyze_package(jule::Slice<jule::Ptr<_1e3301383_Ast>>&, jule::Trait<_1e3ee4c35_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e3eea488_Package>,jule::Slice<_1e1905060_Log>> _1e40ad309_analyze_package(jule::Slice<jule::Ptr<_1e3301383_Ast>>, jule::Trait<_1e3ee4c35_Importer>, jule::I64);
inline jule::Ptr<_1e3404651_FnIns> _1e40ba019_find_builtin_fn(jule::Str);
inline jule::Ptr<_1e4090929_TypeAlias> _1e40baa97_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1e374ee30_Trait> _1e40e5055_find_builtin_trait(jule::Str);
inline jule::Any _1e40b827b_find_builtin_def(jule::Str);
inline jule::Any _1e40d2a04_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1e4119101_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1e4123a56_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1e4119ca0_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1e40662e5_Data> _1e410960d_builtin_caller_common_plain(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e41394c8_builtin_caller_common(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e4121e0b_builtin_caller_common_mut(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e411a0be_builtin_caller_error(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&);
inline jule::Ptr<_1e40662e5_Data> _1e41187e8_builtin_caller_out(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40b59d7_builtin_caller_outln(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e412e26a_builtin_caller_new(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40d22c8_builtin_caller_panic(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40d240a_builtin_caller_make(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40bce2e_builtin_caller_append(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40bd061_caller_copy_slice(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40edd94_caller_copy_str(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e40edec6_builtin_caller_copy(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414953d_builtin_caller_clone(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e4149670_builtin_caller_assert(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414984b_builtin_caller_std_mem_size_of(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e4149b59_builtin_caller_std_mem_align_of(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414a077_builtin_caller_std_mem_free(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414a4a6_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414a8c4_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414ad14_builtin_caller_std_debug_out(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Ptr<_1e40662e5_Data> _1e414b1ee_builtin_caller_std_debug_outln(jule::Ptr<_1e4067d63_Eval>&, jule::Ptr<_1e333e1b2_FnCallExpr>&, jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e4182378_find_module_file(jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>&);
inline jule::Str _1e41824aa_find_module_file_deep(jule::Str);
inline jule::Slice<_1e1905060_Log> _1e4182741_check_module_file(jule::Str);
inline jule::Ptr<_1e479d235_FileInfo> _1e47a5eeb_parse_file(jule::Ptr<_1e1c37381_File>);
inline std::tuple<jule::Ptr<_1e3301383_Ast>,jule::Slice<_1e1905060_Log>> _1e47ecdab_parse_fileset(jule::Ptr<_1e1c37381_File>);
inline jule::Ptr<_1e3345839_ScopeTree> _1e47ed7b3_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1e47edac1_is_st(jule::Ptr<_1e1c31ee6_Token>, jule::Ptr<_1e1c31ee6_Token>);
inline jule::Bool _1e47ede34_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1e47ee2ca_next_st_pos(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Bool> _1e47ee61b_skip_st(jule::I64&, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Slice<jule::Ptr<_1e47ee918_stmt>> _1e47eecae_split_stmts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e480b815_CallData> _1e480bb78_get_call_data(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e480be64_get_block_expr(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e480c20b_split_colon(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::I64 _1e480c52a_find_lowest_prec_op(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e333bd91_IdentExpr> _1e480c7c2_build_ident_expr(jule::Ptr<_1e1c31ee6_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::I64> _1e480ca69_get_range_expr_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Bool _1e48183c1_check_assign_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline _1e1905060_Log _1e48192b2_make_err(jule::I64, jule::I64, jule::Ptr<_1e1c37381_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e4819757_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e48199ee_range_last(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>,jule::Slice<_1e1905060_Log>> _1e4819e61_parts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1e481a22a_get_close_kind_of_brace(jule::Str);
inline _1e1905060_Log _1e481a5e3_compiler_err(jule::Ptr<_1e1c31ee6_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1e481a945_push_suggestion(_1e1905060_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e481acec_tokstoa(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482b9cd_build_void_type(void);
inline jule::Ptr<_1e3335807_TypeDecl> _1e482bc42_build_prim_type(jule::Ptr<_1e1c31ee6_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::I64> _1e482c083_split_map_range(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1e415b8b3_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1e4156847_check_arch(jule::Str);
inline jule::Bool _1e4156979_is_pass_file_annotation(jule::Str);
inline void _1e4171422_set_os_vars(jule::Slice<jule::Str>&);
inline void _1e4171675_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1e417192d_init_vars(jule::Slice<jule::Str>&, _1e4171114_CompileInfo&);
inline jule::Slice<jule::U8> _1e4247d89_read_buff(jule::Str);
inline _1e1905060_Log _1e4264757_flat_compiler_err(jule::Str);
inline void _1e43c7b73_push_passes(jule::Ptr<_1e3eea488_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1e43c6941_get_all_unique_passes(jule::Ptr<_1e3eea488_Package>&, jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>>);
inline _1e4171114_CompileInfo _1e43dd75a_build_compile_info(void);
inline void _1e4923e5a_eliminate_defines(jule::Ptr<_1e4675e54_IR>&);
inline jule::Ptr<_1e330242d_Directive> _1e49242e0_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline jule::Bool _1e4924631_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline void _1e4927de8_eliminate_dead_code_of_scope(jule::Ptr<_1e3e547aa_Scope>);
inline void _1e492817e_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e34019a0_Fn>>&);
inline void _1e49283d2_eliminate_functions_scope_package(jule::Ptr<_1e3eea488_Package>&);
inline void _1e492868a_eliminate_scope_package(jule::Ptr<_1e3eea488_Package>&);
inline void _1e4928877_eliminate_scopes(jule::Ptr<_1e4675e54_IR>&);
inline jule::Bool _1e1da186e_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1e1da2ad4_is_constant_valid_conditional_case(jule::Ptr<_1e3eb7ea0_If>&);
inline jule::Bool _1e1dabcdb_is_unreachable_expr(jule::Any&);
inline jule::Bool _1e1dc771e_is_constant_valid_match_case(jule::Ptr<_1e3ece538_Case>&);
inline jule::Bool _1e1dd36d6_is_unreachable_conditional_case(jule::Ptr<_1e3eb7ea0_If>&);
inline jule::Bool _1e1ddb28d_is_unreachable_match_case(jule::Ptr<_1e3ece538_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1e226c09c_check_for_bit_shift_opt(jule::Ptr<_1e33cb073_OperandExprModel>&, jule::Ptr<_1e33cb073_OperandExprModel>&);
inline void _1e226cc90_push_opt_level(jule::I64);
inline void _1e4901e8d_detect_enabled(void);
inline void _1e49367b9_throw(jule::Str);
inline jule::U64 _1e501b651_unix(void);
inline jule::U64 _1e501b992_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1e501bd27_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1e4e95a81_is_copy_optimizable(jule::Ptr<_1e40662e5_Data>&);
inline jule::Bool _1e4e95e38_is_iter_copy_optimizable(jule::Ptr<_1e40662e5_Data>&, jule::Ptr<_1e401a92b_Var>&);
inline jule::Str _1e4ea4045_decompose_common_esq(jule::U8);
inline jule::Str _1e4ea4331_sbtoa(jule::U8);
inline jule::Str _1e4ea45c8_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1e4ea48e7_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1e4ea4c05_ftoa(jule::F64, jule::I64);
inline jule::Str _1e4ea4e9c_itoa(jule::I64);
inline jule::Str _1e4ea5244_utoa(jule::U64);
inline jule::Bool _1e4ea55eb_is_forwarded(jule::Ptr<_1e3e547aa_Scope>&);
inline jule::Bool _1e4ea58b5_is_builtin_call_has_debuginf(jule::Ptr<_1e33ea1b3_FnCallExprModel>&);
inline void _1e5021bc8_iter_files(jule::Ptr<_1e3eea488_Package>&, jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>);
inline void _1e5021e2b_prepare_structure(jule::Ptr<_1e3318840_Struct>&);
inline jule::Str _1e50221c3_concat_all_parts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>);
inline jule::Ptr<_1e330242d_Directive> _1e502a5e9_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline jule::Bool _1e502a97e_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>&, jule::Str);
inline void _1e18be568_print_error_message(jule::Str);
inline void _1e18c046a_help(jule::Slice<jule::Str>&);
inline void _1e18d4bdd_version(jule::Slice<jule::Str>&);
inline void _1e18d65a2_tool_distos(void);
inline void _1e18d6d00_tool_distarch(void);
inline void _1e18d754d_tool(jule::Slice<jule::Str>&);
inline void _1e18d7c9b_julenv(jule::Slice<jule::Str>&);
inline void _1e18d84e9_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1e18d9077_process_command(jule::Slice<jule::Str>&);
inline void _1e18e7508_show_info(void);
void entry_point(void);
inline void _1e18c66c4_enable_vtp(void);
inline void _1e18de6a9_init(void);
inline void _1e4a28504_init(void);
inline jule::Ptr<_2163c3355_File> _1e4dcebb8_open_output(jule::Str&);
inline void _1e502e5cb_clear_objects(void);
inline void _1e50311c1_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1e4e5d5e8_is_cpp_source_file(jule::Str);
inline void _1e502c92b_push_comp_cmd_clang(jule::Str&);
inline void _1e4e304bb_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1e4e70099_gen_compile_cmd(jule::Str, jule::Ptr<_1e4675e54_IR>&);
inline jule::Str _1e4d73e59_get_compile_path(void);
inline void _1e50382a5_apply_target_independent_optimizations(jule::Ptr<_1e4675e54_IR>&);
inline void _1e4cbc7ed_check_compiler_flag(void);
inline void _1e505d3b8_check_target_arch(jule::Str);
inline void _1e505d4ea_check_target_os(jule::Str);
inline void _1e505d62c_check_target_flag(jule::Str&);
inline void _1e505d75e_check_opt_flag(jule::Str&);
inline void _1e505dac2_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1e505dc04_check_flags(jule::Slice<jule::Str>&);
inline void _1e505dd36_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1e4675e54_IR> _1e505de68_build_ir(jule::Slice<jule::Str>&);
inline void _1e505e09a_compile_command(jule::Slice<jule::Str>&);


struct _1e3ee4c35_ImporterMptrData {
	void(*_1e3ee3b57_set_mod_path)(jule::Trait<_1e3ee4c35_Importer>, jule::Str);
	jule::Str(*_1e3ee3d99_get_mod_path)(jule::Trait<_1e3ee4c35_Importer>);
	jule::Str(*_1e3ee41a7_mod_by_id)(jule::Trait<_1e3ee4c35_Importer>, jule::I64);
	jule::Ptr<_1e3ee752e_ImportInfo>(*_1e3ee44b5_get_import)(jule::Trait<_1e3ee4c35_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1e3301383_Ast>>,jule::Slice<_1e1905060_Log>>(*_1e3ee486c_import_package)(jule::Trait<_1e3ee4c35_Importer>, jule::Str, jule::Bool);
	void(*_1e3ee4ae2_imported)(jule::Trait<_1e3ee4c35_Importer>, jule::Ptr<_1e3ee752e_ImportInfo>);
};

struct _1e4091232_KindMptrData {
	jule::Str(*_1e4090cd1_to_str)(jule::Trait<_1e4091232_Kind>);
	jule::Bool(*_1e40910de_equals)(jule::Trait<_1e4091232_Kind>, jule::Ptr<_1e4091661_TypeKind>);
};

struct _1e40abe84_LookupMptrData {
	jule::Ptr<_1e3ee752e_ImportInfo>(*_1e40aa13b_find_package)(jule::Trait<_1e40abe84_Lookup>, jule::Str);
	jule::Ptr<_1e3ee752e_ImportInfo>(*_1e40aa449_select_package)(jule::Trait<_1e40abe84_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>);
	jule::Ptr<_1e401a92b_Var>(*_1e40aa801_find_var)(jule::Trait<_1e40abe84_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e4090929_TypeAlias>(*_1e40aaba8_find_type_alias)(jule::Trait<_1e40abe84_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e3318840_Struct>(*_1e40ab060_find_struct)(jule::Trait<_1e40abe84_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e34019a0_Fn>(*_1e40ab417_find_fn)(jule::Trait<_1e40abe84_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e374ee30_Trait>(*_1e40ab725_find_trait)(jule::Trait<_1e40abe84_Lookup>, jule::Str);
	jule::Ptr<_1e34189c8_Enum>(*_1e40aba33_find_enum)(jule::Trait<_1e40abe84_Lookup>, jule::Str);
	jule::Ptr<_1e37eea6d_TypeEnum>(*_1e40abd41_find_type_enum)(jule::Trait<_1e40abe84_Lookup>, jule::Str);
};

struct _1e505733a_CommonFlagMptrData {
	jule::Str(*_1e503b1cb_name)(jule::Trait<_1e505733a_CommonFlag>);
	jule::I32(*_1e5057b98_short)(jule::Trait<_1e505733a_CommonFlag>);
	jule::Str(*_1e5057cca_what)(jule::Trait<_1e505733a_CommonFlag>);
	void(*_1e5057e0c_reset)(jule::Trait<_1e505733a_CommonFlag>);
};



inline void _1e3ee3b57_set_mod_path_0(jule::Trait<_1e3ee4c35_Importer> _self_, jule::Str _1735_path) {
	_1e4295d4e_set_mod_path(_self_.safe_ptr<_1e426a131_JuleImporter>(), _1735_path);
}
inline jule::Str _1e3ee3d99_get_mod_path_0(jule::Trait<_1e3ee4c35_Importer> _self_) {
	return _1e42c49d7_get_mod_path(_self_.safe_ptr<_1e426a131_JuleImporter>());
}
inline jule::Str _1e3ee41a7_mod_by_id_0(jule::Trait<_1e3ee4c35_Importer> _self_, jule::I64 _2528_id) {
	return _1e42d4e37_mod_by_id(_self_.safe_ptr<_1e426a131_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ee44b5_get_import_0(jule::Trait<_1e3ee4c35_Importer> _self_, jule::Str _3133_path) {
	return _1e42de260_get_import(_self_.safe_ptr<_1e426a131_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1e3301383_Ast>>,jule::Slice<_1e1905060_Log>> _1e3ee486c_import_package_0(jule::Trait<_1e3ee4c35_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1e42e01ea_import_package(_self_.safe_ptr<_1e426a131_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1e3ee4ae2_imported_0(jule::Trait<_1e3ee4c35_Importer> _self_, jule::Ptr<_1e3ee752e_ImportInfo> _4135__0) {
	_1e4306376_imported(_self_.safe_ptr<_1e426a131_JuleImporter>(), _4135__0);
}
inline jule::Str _1e4090cd1_to_str_0(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e331ace8_to_str(_self_.safe_ptr<_1e3352093_StructIns>());
}
inline jule::Bool _1e40910de_equals_0(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e331b4ad_equals(_self_.data.as<_1e3352093_StructIns>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_1(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e3404981_to_str(_self_.safe_ptr<_1e3404651_FnIns>());
}
inline jule::Bool _1e40910de_equals_1(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e3404c8e_equals(_self_.data.as<_1e3404651_FnIns>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_2(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e3468819_to_str(_self_.safe_ptr<_1e374ee30_Trait>());
}
inline jule::Bool _1e40910de_equals_2(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e3468c6a_equals(_self_.data.as<_1e374ee30_Trait>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_3(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e3500719_to_str(_self_.safe_ptr<_1e34189c8_Enum>());
}
inline jule::Bool _1e40910de_equals_3(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e3507e3b_equals(_self_.data.as<_1e34189c8_Enum>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_4(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e367a4a9_to_str(_self_.safe_ptr<_1e37eea6d_TypeEnum>());
}
inline jule::Bool _1e40910de_equals_4(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e369971a_equals(_self_.data.as<_1e37eea6d_TypeEnum>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_5(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e4091a18_to_str(_self_.safe_ptr<_1e4091661_TypeKind>());
}
inline jule::Bool _1e40910de_equals_5(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e4091d26_equals(_self_.data.as<_1e4091661_TypeKind>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_6(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409649b_to_str(_self_.safe_ptr<_1e4096138_Prim>());
}
inline jule::Bool _1e40910de_equals_6(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e40967a9_equals(_self_.data.as<_1e4096138_Prim>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_7(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e40999aa_to_str(_self_.safe_ptr<_1e4099647_Sptr>());
}
inline jule::Bool _1e40910de_equals_7(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e4099cb8_equals(_self_.data.as<_1e4099647_Sptr>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_8(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409a527_to_str(_self_.safe_ptr<_1e409a0a4_Slc>());
}
inline jule::Bool _1e40910de_equals_8(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e409a835_equals(_self_.data.as<_1e409a0a4_Slc>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_9(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409b01c_to_str(_self_.safe_ptr<_1e409aa99_Tuple>());
}
inline jule::Bool _1e40910de_equals_9(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e409b32a_equals(_self_.data.as<_1e409aa99_Tuple>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_10(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409b9bd_to_str(_self_.safe_ptr<_1e409b65a_Map>());
}
inline jule::Bool _1e40910de_equals_10(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e409bccb_equals(_self_.data.as<_1e409b65a_Map>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_11(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409c5b2_to_str(_self_.safe_ptr<_1e409c24e_Arr>());
}
inline jule::Bool _1e40910de_equals_11(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e409c8c0_equals(_self_.data.as<_1e409c24e_Arr>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_12(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e409d01e_to_str(_self_.safe_ptr<_1e409cbab_Ptr>());
}
inline jule::Bool _1e40910de_equals_12(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e409d32c_equals(_self_.data.as<_1e409cbab_Ptr>(), _5026_other);
}
inline jule::Str _1e4090cd1_to_str_13(jule::Trait<_1e4091232_Kind> _self_) {
	return _1e50231a2_to_str(_self_.safe_ptr<_1e5022dd8_CustomType>());
}
inline jule::Bool _1e40910de_equals_13(jule::Trait<_1e4091232_Kind> _self_, jule::Ptr<_1e4091661_TypeKind> _5026_other) {
	return _1e50234b0_equals(_self_.data.as<_1e5022dd8_CustomType>(), _5026_other);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa13b_find_package_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _935_ident) {
	return _1e3ed0b33_find_package(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa449_select_package_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _1337_selector) {
	return _1e3ed0e41_select_package(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1e401a92b_Var> _1e40aa801_find_var_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e3ed12e8_find_var(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1e4090929_TypeAlias> _1e40aaba8_find_type_alias_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e3ed16a0_find_type_alias(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e3318840_Struct> _1e40ab060_find_struct_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e3ed1a57_find_struct(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e34019a0_Fn> _1e40ab417_find_fn_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e3ed1e0e_find_fn(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e374ee30_Trait> _1e40ab725_find_trait_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3333_ident) {
	return _1e3ed221c_find_trait(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1e34189c8_Enum> _1e40aba33_find_enum_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3732_ident) {
	return _1e3ed252a_find_enum(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40abd41_find_type_enum_0(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _4137_ident) {
	return _1e3ed2838_find_type_enum(_self_.safe_ptr<_1e3ed06d2_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa13b_find_package_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _935_ident) {
	return _1e3ee7a4b_find_package(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa449_select_package_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _1337_selector) {
	return _1e3ee7d59_select_package(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1e401a92b_Var> _1e40aa801_find_var_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e3ee8211_find_var(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1e4090929_TypeAlias> _1e40aaba8_find_type_alias_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e3ee85b8_find_type_alias(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e3318840_Struct> _1e40ab060_find_struct_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e3ee8970_find_struct(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e34019a0_Fn> _1e40ab417_find_fn_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e3ee8d27_find_fn(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e374ee30_Trait> _1e40ab725_find_trait_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3333_ident) {
	return _1e3ee9135_find_trait(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1e34189c8_Enum> _1e40aba33_find_enum_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3732_ident) {
	return _1e3ee9443_find_enum(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40abd41_find_type_enum_1(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _4137_ident) {
	return _1e3ee9751_find_type_enum(_self_.safe_ptr<_1e3ee752e_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa13b_find_package_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _935_ident) {
	return _1e3eea961_find_package(_self_.safe_ptr<_1e3eea488_Package>(), _935_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa449_select_package_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _1337_selector) {
	return _1e3eeac6e_select_package(_self_.safe_ptr<_1e3eea488_Package>(), _1337_selector);
}
inline jule::Ptr<_1e401a92b_Var> _1e40aa801_find_var_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e3eeb126_find_var(_self_.safe_ptr<_1e3eea488_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1e4090929_TypeAlias> _1e40aaba8_find_type_alias_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e3eeb4cd_find_type_alias(_self_.safe_ptr<_1e3eea488_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e3318840_Struct> _1e40ab060_find_struct_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e3eeb885_find_struct(_self_.safe_ptr<_1e3eea488_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e34019a0_Fn> _1e40ab417_find_fn_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e3eebc3c_find_fn(_self_.safe_ptr<_1e3eea488_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e374ee30_Trait> _1e40ab725_find_trait_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3333_ident) {
	return _1e3eec04a_find_trait(_self_.safe_ptr<_1e3eea488_Package>(), _3333_ident);
}
inline jule::Ptr<_1e34189c8_Enum> _1e40aba33_find_enum_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3732_ident) {
	return _1e3eec358_find_enum(_self_.safe_ptr<_1e3eea488_Package>(), _3732_ident);
}
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40abd41_find_type_enum_2(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _4137_ident) {
	return _1e3eec666_find_type_enum(_self_.safe_ptr<_1e3eea488_Package>(), _4137_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa13b_find_package_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _935_ident) {
	return _1e4000b97_find_package(_self_.safe_ptr<_1e400067a_Sema>(), _935_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa449_select_package_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _1337_selector) {
	return _1e4000ea5_select_package(_self_.safe_ptr<_1e400067a_Sema>(), _1337_selector);
}
inline jule::Ptr<_1e401a92b_Var> _1e40aa801_find_var_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e400135c_find_var(_self_.safe_ptr<_1e400067a_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1e4090929_TypeAlias> _1e40aaba8_find_type_alias_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e4001714_find_type_alias(_self_.safe_ptr<_1e400067a_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e3318840_Struct> _1e40ab060_find_struct_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e4001abb_find_struct(_self_.safe_ptr<_1e400067a_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e34019a0_Fn> _1e40ab417_find_fn_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e4001e73_find_fn(_self_.safe_ptr<_1e400067a_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e374ee30_Trait> _1e40ab725_find_trait_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3333_ident) {
	return _1e4002281_find_trait(_self_.safe_ptr<_1e400067a_Sema>(), _3333_ident);
}
inline jule::Ptr<_1e34189c8_Enum> _1e40aba33_find_enum_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3732_ident) {
	return _1e400258e_find_enum(_self_.safe_ptr<_1e400067a_Sema>(), _3732_ident);
}
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40abd41_find_type_enum_3(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _4137_ident) {
	return _1e400289c_find_type_enum(_self_.safe_ptr<_1e400067a_Sema>(), _4137_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa13b_find_package_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _935_ident) {
	return _1e4061983_find_package(_self_.safe_ptr<_1e4061466_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1e3ee752e_ImportInfo> _1e40aa449_select_package_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _1337_selector) {
	return _1e4061c91_select_package(_self_.safe_ptr<_1e4061466_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1e401a92b_Var> _1e40aa801_find_var_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e4062148_find_var(_self_.safe_ptr<_1e4061466_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1e4090929_TypeAlias> _1e40aaba8_find_type_alias_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e4062500_find_type_alias(_self_.safe_ptr<_1e4061466_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e3318840_Struct> _1e40ab060_find_struct_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e40628a7_find_struct(_self_.safe_ptr<_1e4061466_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e34019a0_Fn> _1e40ab417_find_fn_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e4062c5e_find_fn(_self_.safe_ptr<_1e4061466_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e374ee30_Trait> _1e40ab725_find_trait_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3333_ident) {
	return _1e406306c_find_trait(_self_.safe_ptr<_1e4061466_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1e34189c8_Enum> _1e40aba33_find_enum_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _3732_ident) {
	return _1e406337a_find_enum(_self_.safe_ptr<_1e4061466_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40abd41_find_type_enum_4(jule::Trait<_1e40abe84_Lookup> _self_, jule::Str _4137_ident) {
	return _1e4063688_find_type_enum(_self_.safe_ptr<_1e4061466_SymbolTable>(), _4137_ident);
}
inline jule::Str _1e503b1cb_name_0(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e76773e7_name(_self_.safe_ptr<_1e787ba91_Flag>());
}
inline jule::I32 _1e5057b98_short_0(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e787c0ad_short(_self_.safe_ptr<_1e787ba91_Flag>());
}
inline jule::Str _1e5057cca_what_0(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7677529_what(_self_.safe_ptr<_1e787ba91_Flag>());
}
inline void _1e5057e0c_reset_0(jule::Trait<_1e505733a_CommonFlag> _self_) {
	_1e787be7b_reset(_self_.safe_ptr<_1e787ba91_Flag>());
}
inline jule::Str _1e503b1cb_name_1(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7880248_name(_self_.safe_ptr<_1e78806ee_Flag>());
}
inline jule::I32 _1e5057b98_short_1(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7880c2c_short(_self_.safe_ptr<_1e78806ee_Flag>());
}
inline jule::Str _1e5057cca_what_1(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e78809b8_what(_self_.safe_ptr<_1e78806ee_Flag>());
}
inline void _1e5057e0c_reset_1(jule::Trait<_1e505733a_CommonFlag> _self_) {
	_1e7880aea_reset(_self_.safe_ptr<_1e78806ee_Flag>());
}
inline jule::Str _1e503b1cb_name_2(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7883bca_name(_self_.safe_ptr<_1e7884181_Flag>());
}
inline jule::I32 _1e5057b98_short_2(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e78846ae_short(_self_.safe_ptr<_1e7884181_Flag>());
}
inline jule::Str _1e5057cca_what_2(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e788444a_what(_self_.safe_ptr<_1e7884181_Flag>());
}
inline void _1e5057e0c_reset_2(jule::Trait<_1e505733a_CommonFlag> _self_) {
	_1e788457c_reset(_self_.safe_ptr<_1e7884181_Flag>());
}
inline jule::Str _1e503b1cb_name_3(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e78876a1_name(_self_.safe_ptr<_1e7887b57_Flag>());
}
inline jule::I32 _1e5057b98_short_3(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7888185_short(_self_.safe_ptr<_1e7887b57_Flag>());
}
inline jule::Str _1e5057cca_what_3(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e7887e21_what(_self_.safe_ptr<_1e7887b57_Flag>());
}
inline void _1e5057e0c_reset_3(jule::Trait<_1e505733a_CommonFlag> _self_) {
	_1e7888053_reset(_self_.safe_ptr<_1e7887b57_Flag>());
}
inline jule::Str _1e503b1cb_name_4(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e788b133_name(_self_.safe_ptr<_1e788b5d9_Flag>());
}
inline jule::I32 _1e5057b98_short_4(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e788bb17_short(_self_.safe_ptr<_1e788b5d9_Flag>());
}
inline jule::Str _1e5057cca_what_4(jule::Trait<_1e505733a_CommonFlag> _self_) {
	return _1e788b8a3_what(_self_.safe_ptr<_1e788b5d9_Flag>());
}
inline void _1e5057e0c_reset_4(jule::Trait<_1e505733a_CommonFlag> _self_) {
	_1e788b9d5_reset(_self_.safe_ptr<_1e788b5d9_Flag>());
}


static _1e3ee4c35_ImporterMptrData _1e3ee4c35_Importer_mptr_data[] = {
	{
		._1e3ee3b57_set_mod_path=_1e3ee3b57_set_mod_path_0,
		._1e3ee3d99_get_mod_path=_1e3ee3d99_get_mod_path_0,
		._1e3ee41a7_mod_by_id=_1e3ee41a7_mod_by_id_0,
		._1e3ee44b5_get_import=_1e3ee44b5_get_import_0,
		._1e3ee486c_import_package=_1e3ee486c_import_package_0,
		._1e3ee4ae2_imported=_1e3ee4ae2_imported_0,
	},
};
static _1e4091232_KindMptrData _1e4091232_Kind_mptr_data[] = {
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_0,
		._1e40910de_equals=_1e40910de_equals_0,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_1,
		._1e40910de_equals=_1e40910de_equals_1,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_2,
		._1e40910de_equals=_1e40910de_equals_2,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_3,
		._1e40910de_equals=_1e40910de_equals_3,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_4,
		._1e40910de_equals=_1e40910de_equals_4,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_5,
		._1e40910de_equals=_1e40910de_equals_5,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_6,
		._1e40910de_equals=_1e40910de_equals_6,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_7,
		._1e40910de_equals=_1e40910de_equals_7,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_8,
		._1e40910de_equals=_1e40910de_equals_8,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_9,
		._1e40910de_equals=_1e40910de_equals_9,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_10,
		._1e40910de_equals=_1e40910de_equals_10,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_11,
		._1e40910de_equals=_1e40910de_equals_11,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_12,
		._1e40910de_equals=_1e40910de_equals_12,
	},
	{
		._1e4090cd1_to_str=_1e4090cd1_to_str_13,
		._1e40910de_equals=_1e40910de_equals_13,
	},
};
static _1e40abe84_LookupMptrData _1e40abe84_Lookup_mptr_data[] = {
	{
		._1e40aa13b_find_package=_1e40aa13b_find_package_0,
		._1e40aa449_select_package=_1e40aa449_select_package_0,
		._1e40aa801_find_var=_1e40aa801_find_var_0,
		._1e40aaba8_find_type_alias=_1e40aaba8_find_type_alias_0,
		._1e40ab060_find_struct=_1e40ab060_find_struct_0,
		._1e40ab417_find_fn=_1e40ab417_find_fn_0,
		._1e40ab725_find_trait=_1e40ab725_find_trait_0,
		._1e40aba33_find_enum=_1e40aba33_find_enum_0,
		._1e40abd41_find_type_enum=_1e40abd41_find_type_enum_0,
	},
	{
		._1e40aa13b_find_package=_1e40aa13b_find_package_1,
		._1e40aa449_select_package=_1e40aa449_select_package_1,
		._1e40aa801_find_var=_1e40aa801_find_var_1,
		._1e40aaba8_find_type_alias=_1e40aaba8_find_type_alias_1,
		._1e40ab060_find_struct=_1e40ab060_find_struct_1,
		._1e40ab417_find_fn=_1e40ab417_find_fn_1,
		._1e40ab725_find_trait=_1e40ab725_find_trait_1,
		._1e40aba33_find_enum=_1e40aba33_find_enum_1,
		._1e40abd41_find_type_enum=_1e40abd41_find_type_enum_1,
	},
	{
		._1e40aa13b_find_package=_1e40aa13b_find_package_2,
		._1e40aa449_select_package=_1e40aa449_select_package_2,
		._1e40aa801_find_var=_1e40aa801_find_var_2,
		._1e40aaba8_find_type_alias=_1e40aaba8_find_type_alias_2,
		._1e40ab060_find_struct=_1e40ab060_find_struct_2,
		._1e40ab417_find_fn=_1e40ab417_find_fn_2,
		._1e40ab725_find_trait=_1e40ab725_find_trait_2,
		._1e40aba33_find_enum=_1e40aba33_find_enum_2,
		._1e40abd41_find_type_enum=_1e40abd41_find_type_enum_2,
	},
	{
		._1e40aa13b_find_package=_1e40aa13b_find_package_3,
		._1e40aa449_select_package=_1e40aa449_select_package_3,
		._1e40aa801_find_var=_1e40aa801_find_var_3,
		._1e40aaba8_find_type_alias=_1e40aaba8_find_type_alias_3,
		._1e40ab060_find_struct=_1e40ab060_find_struct_3,
		._1e40ab417_find_fn=_1e40ab417_find_fn_3,
		._1e40ab725_find_trait=_1e40ab725_find_trait_3,
		._1e40aba33_find_enum=_1e40aba33_find_enum_3,
		._1e40abd41_find_type_enum=_1e40abd41_find_type_enum_3,
	},
	{
		._1e40aa13b_find_package=_1e40aa13b_find_package_4,
		._1e40aa449_select_package=_1e40aa449_select_package_4,
		._1e40aa801_find_var=_1e40aa801_find_var_4,
		._1e40aaba8_find_type_alias=_1e40aaba8_find_type_alias_4,
		._1e40ab060_find_struct=_1e40ab060_find_struct_4,
		._1e40ab417_find_fn=_1e40ab417_find_fn_4,
		._1e40ab725_find_trait=_1e40ab725_find_trait_4,
		._1e40aba33_find_enum=_1e40aba33_find_enum_4,
		._1e40abd41_find_type_enum=_1e40abd41_find_type_enum_4,
	},
};
static _1e505733a_CommonFlagMptrData _1e505733a_CommonFlag_mptr_data[] = {
	{
		._1e503b1cb_name=_1e503b1cb_name_0,
		._1e5057b98_short=_1e5057b98_short_0,
		._1e5057cca_what=_1e5057cca_what_0,
		._1e5057e0c_reset=_1e5057e0c_reset_0,
	},
	{
		._1e503b1cb_name=_1e503b1cb_name_1,
		._1e5057b98_short=_1e5057b98_short_1,
		._1e5057cca_what=_1e5057cca_what_1,
		._1e5057e0c_reset=_1e5057e0c_reset_1,
	},
	{
		._1e503b1cb_name=_1e503b1cb_name_2,
		._1e5057b98_short=_1e5057b98_short_2,
		._1e5057cca_what=_1e5057cca_what_2,
		._1e5057e0c_reset=_1e5057e0c_reset_2,
	},
	{
		._1e503b1cb_name=_1e503b1cb_name_3,
		._1e5057b98_short=_1e5057b98_short_3,
		._1e5057cca_what=_1e5057cca_what_3,
		._1e5057e0c_reset=_1e5057e0c_reset_3,
	},
	{
		._1e503b1cb_name=_1e503b1cb_name_4,
		._1e5057b98_short=_1e5057b98_short_4,
		._1e5057cca_what=_1e5057cca_what_4,
		._1e5057e0c_reset=_1e5057e0c_reset_4,
	},
};


jule::Str _1e502bd9d_OUT_DIR = jule::Str("dist", 4);
jule::Str _1e5031886_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1e50333c1_OUT = jule::Str();
jule::Str _22eb5ca0a_COMPILER = jule::Str();
jule::Str _22eb5cc6e_COMPILER_PATH = jule::Str();
jule::Str _22eb5ced3_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _22eb5d247_SHADOWING = false;
jule::Bool _22eb5d4ab_TRANSPILATION = false;
jule::Bool _22eb5d753_TEST = false;
jule::Bool _22eb5da50_RC = true;
jule::Bool _22eb5de6d_SAFETY = true;
jule::Bool _22eb5e27b_PRODUCTION = false;
jule::Ptr<_1e18899ea_RangeTable> _1e181a9e2__L = jule::new_ptr<_1e18899ea_RangeTable>(_1e18899ea_RangeTable{._field_r16=jule::Slice<_1e1889104_Range16>::make({_1e1889104_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_1e1889104_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_1e1889104_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_1e1889104_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_1e1889104_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_1e1889104_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_1e1889104_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_1e1889104_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_1e1889104_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_1e1889104_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_1e1889104_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_1e1889104_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_1e1889104_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_1e1889104_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_1e1889104_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_1e1889104_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_1e1889104_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_1e1889104_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_1e1889104_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_1e1889104_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_1e1889104_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_1e1889104_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_1e1889104_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_1e1889104_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_1e1889104_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_1e1889104_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_1e1889104_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_1e1889104_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_1e1889104_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_1e1889104_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_1e1889104_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_1e1889104_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_1e1889104_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_1e1889104_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_1e1889104_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_1e1889104_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_1e1889104_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_1e1889104_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_1e1889104_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_1e1889104_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_1e1889104_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_1e1889104_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_1e1889104_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_1e1889104_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_1e1889104_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_1e1889577_Range32>::make({_1e1889577_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_1e1889577_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_1e1889577_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_1e1889577_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_1e1889577_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_1e1889577_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_1e1889577_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_1e1889577_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_1e1889577_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_1e1889577_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_1e1889577_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_1e1889577_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_1e1889577_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_1e1889577_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_1e1889577_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_1e1889577_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_1e1889577_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_1e1889577_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_1e1889577_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_1e1889577_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_1e1889577_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_1e1889577_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_1e1889577_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_1e1889577_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_1e1889577_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_1e1889577_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_1e1889577_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _22eb67c57_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1e18e701e_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1e18e8581_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _1e1908470_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _1e1908805_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _1e1927934_PATH_STDLIB = jule::Str();
jule::Str _1e192858e_PATH_EXEC = jule::Str();
jule::Str _1e19294c4_PATH_WD = jule::Str();
jule::Str _1e1943389_PATH_API = jule::Str();
jule::Array<jule::I32,5> _1e1b8174d_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1e1b819b2_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1e1b81d03_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1e1c2b4b8_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1e1c2b809_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1e1c393d8_KindPair,47> _1e1c3986c_KEYWORDS = jule::Array<_1e1c393d8_KindPair,47>({_1e1c393d8_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1e1c393d8_KindPair,39> _1e1c39c02_BASIC_OPS = jule::Array<_1e1c393d8_KindPair,39>({_1e1c393d8_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1e1c393d8_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1e3e0c114_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e3e0c763_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e3a1a607_FloatInfo _1e386551d_F32_INFO = _1e3a1a607_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e3a1a607_FloatInfo _1e386aa0c_F64_INFO = _1e3a1a607_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e3917b31_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e395aa86_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e3972938_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e39d96b4_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1e3a1c780_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e3e4ba49_LeftCheat> _1e3a43c3a_LEFTCHEATS = jule::Slice<_1e3e4ba49_LeftCheat>::make({_1e3e4ba49_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e3e4ba49_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e3e4ba49_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e3e4ba49_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e3e4ba49_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e3e4ba49_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e3e4ba49_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e3e4ba49_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e3e4ba49_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e3e4ba49_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e3e4ba49_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e3e4ba49_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e3e4ba49_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e3e4ba49_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e3e4ba49_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e3e4ba49_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e3e4ba49_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e3e4ba49_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e3e4ba49_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e3e4ba49_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e3e4ba49_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e3e4ba49_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e3e4ba49_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e3e4ba49_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e3e4ba49_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e3e4ba49_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e3e4ba49_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e3e4ba49_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e3e4ba49_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e3e4ba49_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e3e4ba49_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e3e4ba49_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e3e4ba49_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e3e4ba49_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e3e4ba49_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e3e4ba49_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e3e4ba49_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e3e4ba49_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e3e4ba49_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e3e4ba49_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e3e4ba49_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e3e4ba49_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e3e4ba49_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e3e4ba49_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e3e4ba49_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e3e4ba49_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e3e4ba49_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e3e4ba49_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e3e4ba49_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e3e4ba49_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e3e4ba49_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e3e4ba49_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e3e4ba49_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e3e4ba49_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e3e4ba49_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e3e4ba49_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e3e4ba49_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e3e4ba49_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e3e4ba49_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e3e4ba49_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e3e4ba49_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e3ebe76a_BIT_SIZE = 0LL;
jule::Str _1e3ebe9ce_SYS_INT = jule::Str();
jule::Str _1e3ebec43_SYS_UINT = jule::Str();
jule::Bool _1e1c5d781_COPY = false;
jule::Bool _1e1c67779_DEADCODE = false;
jule::Bool _1e1c6bcab_APPEND = false;
jule::Bool _1e1c5789b_MATH = false;
jule::Bool _1e1c736b9_ACCESS = false;
jule::Bool _1e1c789aa_INLINE = false;
jule::Bool _1e1c91880_PTR = false;
jule::Bool _1e1c99080_COND = false;
jule::Bool _1e4832d58_expr_enabled = false;
jule::Bool _1e4833ead_scope_enabled = false;
jule::Array<jule::U64,12> _1e5015a68_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Uintptr _216397824_STDERR = _2163b00cd_get_std_handle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<_216495092_accept_range,16> _216495405_ACCEPT_RANGES = jule::Array<_216495092_accept_range,16>({_216495092_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_216495092_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_216495092_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_216495092_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_216495092_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1e18c87b4_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_1e18899ea_RangeTable> _1e182370e_LETTER = _1e181a9e2__L;
jule::Uintptr _21637b583_STDIN = _2163b00cd_get_std_handle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Str _1e1943b70_OS = jule::Str("windows", 7);
jule::Str _1e1926d40_ARCH = jule::Str("amd64", 5);
jule::Uintptr _21639b10d_STDOUT = _2163b00cd_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Array<jule::U8,256> _216494a20_FIRST = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1e1882ce0__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _216495092_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1889104_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1889577_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e18899ea_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e1890160_index(_1e188ee73_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1e1890292_append(_1e188ee73_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1e18903c4_string(_1e188ee73_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e188ee73_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2162e46d8_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>> static__1e18910d9_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_2162e46d8_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _21639833b_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _2163b1c7d__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>>(_2162d05d6_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _2163b2025__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1e581ac30;
			};
			jule::Str _2617_name = _2163990a6_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_2163c371d_Status> _2721_stat = ({
				auto except = static__1e189165b_of(_1e189089c_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>>(except.error);
				} jule::Ptr<_2163c371d_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_2162e46d8_DirEntry>(_2162e46d8_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1e581ac30:;
	}
	_iter_end_1e581ac30:;;
	_2163b22bc__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1e189121b_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _21639833b_utf16_from_str(_4026_path);;
	if ((!(_2163b173e_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_2162d05d6_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e189134d_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _21639833b_utf16_from_str(_5426_path);;
	if ((!(_2163b19d6_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_2162d05d6_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2162e6421_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2163c3355_File> static__2162d0d9a_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_2163c3355_File>(_2163c3355_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2163c3355_File>> static__2162d3dae_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2163c3355_File>>(jule::Any(),({
		auto except = static__21642b7ed_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2163c3355_File>>(except.error);
		} jule::Ptr<_2163c3355_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2162e5233_read(jule::Str _6724_path) {
	jule::Ptr<_2163c371d_Status> _6813_s = ({
		auto except = static__1e189165b_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2163c371d_Status>();});
	});;
	if ((!(_22ebe5b70_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2163c3355_File> _7817_f = ({
		auto except = static__21642b7ed_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2163c3355_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2162e660d_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _21642ca96_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__2162e540e_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2163c3355_File> _9217_f = ({
		auto except = static__21642b7ed_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2163c3355_File>();});
	});;
	({
		auto except = _2164685e8_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2162e660d_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2162e8951_seek(_2163c3355_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _2163b6018_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162d05d6_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2162e660d_close(_2163c3355_File* _self_) {
	if ((_2163b6777_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_2162d05d6_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2163c3355_File>> static__21642b7ed_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _21639833b_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _2163b0919__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2163c3355_File>>(_2162d05d6_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_2163c3355_File>>(jule::Any(),static__2162d0d9a_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__21645774c_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _21639833b_utf16_from_str(_3426_path);;
	if ((!(_2163b1497_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_2162d05d6_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2164685e8_write(_2163c3355_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_21642b0d3_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _21639833b_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _2163b3653_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_2162d05d6_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_2163b6b62_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162d05d6_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _21642ca96_read(_2163c3355_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_21642b0d3_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _2163b3b81_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_2162d05d6_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _2163ad6a3_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1e58348b4:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _21649677a_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1e58348b4;
					};
					_216496b98_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1e58348b4:;
				++it;
				goto _iter_begin_1e58348b4;
			}
			_iter_end_1e58348b4:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_2163b6403_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162d05d6_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _2163c3355_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22ebe5e06_is_dir(_2163c371d_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _22ebe5b70_is_reg(_2163c371d_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_2163c371d_Status>> static__1e189165b_of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2163c371d_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16_path = _21639833b_utf16_from_str(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _2163b052e_wstat((&(_1613_utf16_path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2163c371d_Status>>(jule::Any(),jule::new_ptr<_2163c371d_Status>(_2163c371d_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2163c371d_Status>>(_2162d05d6_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _2163c371d_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e194507d_Cmd> static__1e19454ac_new(jule::Str _2023_path) {
	return jule::new_ptr<_1e194507d_Cmd>(_1e194507d_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _1e1945721_spawn(_1e194507d_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1e195a3e5___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1e195a3e5___spawn(_1e194507d_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_1e1959b0e_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_1e1959ee9_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e19447ec_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e19447ec_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1e194507d_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1905060_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e1c3239d_prec(_1e1c31ee6_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e5901398:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e590140e:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e5900c8d:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e5900d04:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e5900d6a:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1e5900a5c:;
			{
				return 0LLU;
			}
		}
		_match_end_1e5900188:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c31ee6_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e1c3778d_is_ok(_1e1c37381_File* _self_) {
	({
		auto except = static__1e189165b_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2163c371d_Status>();});
	});
	return true;
}



inline void _1e1c37a13_fill(_1e1c37381_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1e1c37c77_dir(_1e1c37381_File* _self_) {
	return _1e1890d75_dir((*_self_)._field_path);
}



inline jule::Str _1e1c37edb_name(_1e1c37381_File* _self_) {
	return _1e1890c43_base((*_self_)._field_path);
}



inline jule::Uintptr _1e1c38250_addr(_1e1c37381_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1e1c3855d_get_row(_1e1c37381_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1e590604b;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1e590604b:;
	}
	_iter_end_1e590604b:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c37381_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c393d8_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1e1c405a9_push_err(_1e1c40015_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e1c3a1db_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _1e1c408c8_push_err_tok(_1e1c40015_Lex* _self_, jule::Ptr<_1e1c31ee6_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e1c3a1db_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _1e1c40aa4_lex(_1e1c40015_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1e1c42aa6_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_1e1c31ee6_Token> _47321_token = _1e1c43e2b_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1e593ce0c:;
	}
	_iter_end_1e593ce0c:;;
}



inline jule::Str _1e1c40db2_id(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _216495b75_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_1e1c354c2_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _216495b75_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1e1c35a11_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1e1c354c2_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1e59412d9:;
	}
	_iter_end_1e59412d9:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1e1c41126_resume(_1e1c40015_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_1e1c35071_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1e5945e9d:;
						{
							_1e1c42aa6_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1e5946014:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1e5943dbe:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1e5945a08:;
				};
				goto _iter_next_1e5944177;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1e5944dc0;
					};
				}
			_iter_next_1e5944dc0:;
			}
			_iter_end_1e5944dc0:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1e5944177:;
	}
	_iter_end_1e5944177:;;
	return nullptr;
}



inline void _1e1c4139b_lex_line_comment(_1e1c40015_Lex* _self_, jule::Ptr<_1e1c31ee6_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1e594891d;
			};
		}
	_iter_next_1e594891d:;
	}
	_iter_end_1e594891d:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _1e1c41621_lex_range_comment(_1e1c40015_Lex* _self_, jule::Ptr<_1e1c31ee6_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1e594bcc8;
			};
			if ((_55517_r == '\n')) {
				_1e1c42aa6_new_line(&(*_self_));
				goto _iter_next_1e594bcc8;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1e594bcc8:;
	}
	_iter_end_1e594bcc8:;;
	_1e1c405a9_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1e1c4192e_num(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_1e1c3da08_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1e1c3d761_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1e1c3c1aa_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1e1c3be13_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _1e1c41c3c_escape_seq(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1e5956e59:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e5956b5c:;
			{
				_60217_seq=_1e1c3e113_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1e5956bc3:;
			{
				_60217_seq=_1e1c3e2cd_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e5956c39:;
			{
				_60217_seq=_1e1c3e586_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1e59563dc:;
			{
				_60217_seq=_1e1c3e82d_byte_escape(_60130_txt);
			}
		}
		_match_end_1e5956a19:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1e1c405a9_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _1e1c420e4_get_rune(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _1e1c41c3c_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _216495b75_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1e1c42402_lex_rune(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1e595de3e;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_1e1c405a9_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1e1c42aa6_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _1e1c420e4_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_216497869_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1e595de3e;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1e595de3e:;
	}
	_iter_end_1e595de3e:;;
	if ((_64417_n == 0LL)) {
		_1e1c405a9_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1e1c405a9_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _1e1c42666_lex_str(_1e1c40015_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1e5964ebc;
			};
			if ((_68917_ch == '\n')) {
				_1e1c42aa6_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1e1c405a9_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _1e1c420e4_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_216497869_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1e5964ebc;
			};
		}
	_iter_next_1e5964ebc:;
	}
	_iter_end_1e5964ebc:;;
	return _68117_s;
}



inline jule::Bool _1e1c428ca_is_first_token_of_line(_1e1c40015_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1e1c42aa6_new_line(_1e1c40015_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1e1c430a1_is_op(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_1e1c31ee6_Token>& _72267_t) {
	if ((!(_1e1c3a571_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _1e1c43458_lex_basic_ops(_1e1c40015_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_1e1c31ee6_Token>& _73350_tok) {
	{
		auto &expr = _1e1c39c02_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1e596b5ab:;
		if (it != expr.end()) {
			_1e1c393d8_KindPair &_73416_pair = *it;
			{
				if (_1e1c430a1_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1e596b5ab:;
			++it;
			goto _iter_begin_1e596b5ab;
		}
		_iter_end_1e596b5ab:;
	};
	return false;
}



inline jule::Bool _1e1c43810_lex_id(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_1e1c31ee6_Token>& _74344_t) {
	jule::Str _74413_lex = _1e1c40db2_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1e1c43bb7_lex_num(_1e1c40015_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_1e1c31ee6_Token>& _75445_t) {
	jule::Str _75513_lex = _1e1c4192e_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1e1c31ee6_Token> _1e1c43e2b_token(_1e1c40015_Lex* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _76717_t = jule::new_ptr<_1e1c31ee6_Token>(_1e1c31ee6_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _1e1c41126_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1e1c43bb7_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1e597299c:;
			{
				goto _match_end_1e59714e5;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1e5972a13:;
			{
				_76717_t.get()._field_kind=_1e1c42402_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1e5973629:;
			{
				_76717_t.get()._field_kind=_1e1c42666_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_1e1c3a571_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1e5973690:;
			{
				_1e1c4139b_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1e1c3a571_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1e5973706:;
			{
				_1e1c41621_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c430a1_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1e1c43458_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1e5971e1e:;
			{
				goto _match_end_1e59714e5;
			}
		}
		else if (_1e1c43810_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1e5971e85:;
			{
				{
					auto &expr = _1e1c3986c_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1e5978b29:;
					if (it != expr.end()) {
						_1e1c393d8_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1e5978b29;
							};
						}
						_iter_next_1e5978b29:;
						++it;
						goto _iter_begin_1e5978b29;
					}
					_iter_end_1e5978b29:;
				};
			}
		}
		else {
			_case_begin_1e5971da8:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _216495b75_decode_rune(_77213_txt);
				_1e1c405a9_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1e59714e5:;
	};
	(*_self_)._field_column+=_216497869_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c40015_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3301383_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3302032_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e330242d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3335807_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3336231_is_prim(_1e3335dbd_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3335dbd_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333651c_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33368c4_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3336bb0_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33370ab_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3337397_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e33379d5_is_unsafe(_1e3337683_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3337683_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e33381de_auto_sized(_1e3337d15_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3337d15_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3338563_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333891a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3339d28_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333a114_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333a6b9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333a9a5_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e333b1ae_is_nil(_1e333ad5c_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e333ad5c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333b566_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333b91d_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e333c1e3_is_self(_1e333bd91_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1e333bd91_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333c59a_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333c952_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333cd09_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333d1b1_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333d634_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e333daa7_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e333e525_unhandled(_1e333e1b2_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1e333e789_ignored(_1e333e1b2_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1e333e1b2_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e333ee93_is_targeted(_1e333eb41_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e333eb41_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334038e_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3340e83_is_empty(_1e3340812_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3340812_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3341329_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3341aee_is_empty(_1e334179c_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e334179c_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334213d_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3342748_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3342b00_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3342ea7_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334335e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334364a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3343c55_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3344294_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334522e_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3345839_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3346373_is_self(_1e3346010_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1e33465d7_is_ref(_1e3346010_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3346010_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3347682_is_anon(_1e3347330_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3347330_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334830e_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33486b6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3349178_is_inf(_1e3348d26_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3348d26_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e334994d_is_while_next(_1e33495eb_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e33495eb_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3349e8c_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334a344_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334a6eb_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334ab6e_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334b026_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334b499_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334bb70_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334c0e3_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334c7b9_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334d05b_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e334d831_auto_expr(_1e334d4ce_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e334d4ce_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e334e58a_default_typed(_1e334e007_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e334e007_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e334ea0d_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3350118_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3350316_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3350ab9_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33511c4_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3351b42_is_trait_impl(_1e33517ce_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e3351da6_is_struct_impl(_1e33517ce_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e33517ce_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e1165_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e1297_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e13c9_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e160a_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e18a2_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1e3388a47_Const> static__1e33e1aa0_new_nil(void) {
	return jule::new_ptr<_1e3388a47_Const>(_1e3388a47_Const{._field_data=nullptr});
}



inline jule::I64 _1e33e2199_read_i64(_1e3388a47_Const* _self_) {
	if ((!(_1e33e4542_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1e33e240d_read_u64(_1e3388a47_Const* _self_) {
	if ((!(_1e33e47a6_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1e33e2672_read_bool(_1e3388a47_Const* _self_) {
	if ((!(_1e33e4a1a_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1e33e28d6_read_str(_1e3388a47_Const* _self_) {
	if ((!(_1e33e4c7e_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1e33e2b4a_read_f64(_1e3388a47_Const* _self_) {
	if ((!(_1e33e4ee3_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1e33e2dae_as_i64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e59da130:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e59da196:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e59d9a25:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1e59d997b:;
			{
				return 0LL;
			}
		}
		_match_end_1e59d9926:;
	};
}



inline jule::U64 _1e33e3123_as_u64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e59db0cb:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e59dbb6a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e59dbbd1:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1e59d9e54:;
			{
				return 0LLU;
			}
		}
		_match_end_1e59d9dee:;
	};
}



inline jule::F64 _1e33e3387_as_f64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e59dcb16:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e59dd6a5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e59dd71b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1e59dbd8a:;
			{
				return 0LL;
			}
		}
		_match_end_1e59dbd35:;
	};
}



inline void _1e33e360c_set_i64(_1e3388a47_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1e33e3882_set_u64(_1e3388a47_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1e33e3b07_set_bool(_1e3388a47_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1e33e3d7c_set_str(_1e3388a47_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1e33e4102_set_f64(_1e3388a47_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1e33e42cd_set_nil(_1e3388a47_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1e33e4542_is_i64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e59e2456:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e2379:;
			{
				return false;
			}
		}
		_match_end_1e59e2324:;
	};
}



inline jule::Bool _1e33e47a6_is_u64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e59e3028:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e2c09:;
			{
				return false;
			}
		}
		_match_end_1e59e291d:;
	};
}



inline jule::Bool _1e33e4a1a_is_bool(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1e59e3a51:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e3732:;
			{
				return false;
			}
		}
		_match_end_1e59e3424:;
	};
}



inline jule::Bool _1e33e4c7e_is_str(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e59e4579:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e425a:;
			{
				return false;
			}
		}
		_match_end_1e59e3e4c:;
	};
}



inline jule::Bool _1e33e4ee3_is_f64(_1e3388a47_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e59e50a2:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e4c83:;
			{
				return false;
			}
		}
		_match_end_1e59e4975:;
	};
}



inline jule::Bool _1e33e5257_is_nil(_1e3388a47_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1e33e5565_are_same_types(_1e3388a47_Const* _self_, _1e3388a47_Const _21033_x) {
	{
		
		if ((_1e33e4542_is_i64(&(*_self_)) == _1e33e4542_is_i64(&_21033_x))) {
			_case_begin_1e59e6944:;
			{
				return true;
			}
		}
		else if ((_1e33e47a6_is_u64(&(*_self_)) == _1e33e47a6_is_u64(&_21033_x))) {
			_case_begin_1e59e61d5:;
			{
				return true;
			}
		}
		else if ((_1e33e4ee3_is_f64(&(*_self_)) == _1e33e4ee3_is_f64(&_21033_x))) {
			_case_begin_1e59e625c:;
			{
				return true;
			}
		}
		else if ((_1e33e4a1a_is_bool(&(*_self_)) == _1e33e4a1a_is_bool(&_21033_x))) {
			_case_begin_1e59e62d4:;
			{
				return true;
			}
		}
		else if ((_1e33e4c7e_is_str(&(*_self_)) == _1e33e4c7e_is_str(&_21033_x))) {
			_case_begin_1e59e635b:;
			{
				return true;
			}
		}
		else if ((_1e33e5257_is_nil(&(*_self_)) == _1e33e5257_is_nil(&_21033_x))) {
			_case_begin_1e59e6603:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e59e615d:;
			{
				return false;
			}
		}
		_match_end_1e59e6081:;
	};
}



inline jule::Bool _1e33e5873_and(_1e3388a47_Const* _self_, _1e3388a47_Const _23522_x) {
	{
		
		if ((_1e33e4a1a_is_bool(&(*_self_)) && _1e33e4a1a_is_bool(&_23522_x))) {
			_case_begin_1e59e9da9:;
			{
				return (_1e33e2672_read_bool(&(*_self_)) && _1e33e2672_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1e59e94b3:;
			{
				return false;
			}
		}
		_match_end_1e59e93d6:;
	};
}



inline jule::Bool _1e33e5b81_or(_1e3388a47_Const* _self_, _1e3388a47_Const _24621_x) {
	{
		
		if ((_1e33e4a1a_is_bool(&(*_self_)) && _1e33e4a1a_is_bool(&_24621_x))) {
			_case_begin_1e59eb2c8:;
			{
				return (_1e33e2672_read_bool(&(*_self_)) || _1e33e2672_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1e59ea21c:;
			{
				return false;
			}
		}
		_match_end_1e59ea140:;
	};
}



inline jule::Bool _1e33e5e8e_eq(_1e3388a47_Const* _self_, _1e3388a47_Const _25721_x) {
	{
		
		if (_1e33e5257_is_nil(&(*_self_))) {
			_case_begin_1e59ec74c:;
			{
				return _1e33e5257_is_nil(&_25721_x);
			}
		}
		else if (_1e33e4a1a_is_bool(&(*_self_))) {
			_case_begin_1e59ec032:;
			{
				return (_1e33e4a1a_is_bool(&_25721_x) && (_1e33e2672_read_bool(&(*_self_)) == _1e33e2672_read_bool(&_25721_x)));
			}
		}
		else if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e59ec098:;
			{
				return (_1e33e4c7e_is_str(&_25721_x) && (_1e33e28d6_read_str(&(*_self_)) == _1e33e28d6_read_str(&_25721_x)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e59ec120:;
			{
				return (_1e33e2199_read_i64(&(*_self_)) == _1e33e2dae_as_i64(&_25721_x));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e59ec197:;
			{
				return (_1e33e240d_read_u64(&(*_self_)) == _1e33e3123_as_u64(&_25721_x));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e59ec42d:;
			{
				return (_1e33e2b4a_read_f64(&(*_self_)) == _1e33e3387_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1e59eb66e:;
			{
				return false;
			}
		}
		_match_end_1e59eb592:;
	};
}



inline jule::Bool _1e33e629c_lt(_1e3388a47_Const* _self_, _1e3388a47_Const _28421_x) {
	{
		
		if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e5a019a4:;
			{
				return (_1e33e4c7e_is_str(&_28421_x) && (_1e33e28d6_read_str(&(*_self_)) < _1e33e28d6_read_str(&_28421_x)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a01355:;
			{
				return (_1e33e2199_read_i64(&(*_self_)) < _1e33e2dae_as_i64(&_28421_x));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a013bb:;
			{
				return (_1e33e240d_read_u64(&(*_self_)) < _1e33e3123_as_u64(&_28421_x));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a01432:;
			{
				return (_1e33e2b4a_read_f64(&(*_self_)) < _1e33e3387_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1e59eca7c:;
			{
				return false;
			}
		}
		_match_end_1e5a00cb1:;
	};
}



inline jule::Bool _1e33e65aa_lt_eq(_1e3388a47_Const* _self_, _1e3388a47_Const _30724_x) {
	{
		
		if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e5a04a40:;
			{
				return (_1e33e4c7e_is_str(&_30724_x) && (_1e33e28d6_read_str(&(*_self_)) <= _1e33e28d6_read_str(&_30724_x)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a043e1:;
			{
				return (_1e33e2199_read_i64(&(*_self_)) <= _1e33e2dae_as_i64(&_30724_x));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a04457:;
			{
				return (_1e33e240d_read_u64(&(*_self_)) <= _1e33e3123_as_u64(&_30724_x));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a044bd:;
			{
				return (_1e33e2b4a_read_f64(&(*_self_)) <= _1e33e3387_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1e5a01bb3:;
			{
				return false;
			}
		}
		_match_end_1e5a03b0a:;
	};
}



inline jule::Bool _1e33e68b8_gt(_1e3388a47_Const* _self_, _1e3388a47_Const _33021_x) {
	{
		
		if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e5a07acb:;
			{
				return (_1e33e4c7e_is_str(&_33021_x) && (_1e33e28d6_read_str(&(*_self_)) > _1e33e28d6_read_str(&_33021_x)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a0747c:;
			{
				return (_1e33e2199_read_i64(&(*_self_)) > _1e33e2dae_as_i64(&_33021_x));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a074e3:;
			{
				return (_1e33e240d_read_u64(&(*_self_)) > _1e33e3123_as_u64(&_33021_x));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a07559:;
			{
				return (_1e33e2b4a_read_f64(&(*_self_)) > _1e33e3387_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1e5a04c4e:;
			{
				return false;
			}
		}
		_match_end_1e5a06b96:;
	};
}



inline jule::Bool _1e33e6bc6_gt_eq(_1e3388a47_Const* _self_, _1e3388a47_Const _35324_x) {
	{
		
		if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e5a0ab67:;
			{
				return (_1e33e4c7e_is_str(&_35324_x) && (_1e33e28d6_read_str(&(*_self_)) >= _1e33e28d6_read_str(&_35324_x)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a0a518:;
			{
				return (_1e33e2199_read_i64(&(*_self_)) >= _1e33e2dae_as_i64(&_35324_x));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a0a57e:;
			{
				return (_1e33e240d_read_u64(&(*_self_)) >= _1e33e3123_as_u64(&_35324_x));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a0a5e5:;
			{
				return (_1e33e2b4a_read_f64(&(*_self_)) >= _1e33e3387_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1e5a07cda:;
			{
				return false;
			}
		}
		_match_end_1e5a09c32:;
	};
}



inline jule::Bool _1e33e6ed4_add(_1e3388a47_Const* _self_, _1e3388a47_Const _37426_x) {
	{
		
		if (_1e33e4c7e_is_str(&(*_self_))) {
			_case_begin_1e5a0dc03:;
			{
				if ((!(_1e33e4c7e_is_str(&_37426_x)))) {
					return false;
				};
				_1e33e3d7c_set_str(&(*_self_), (_1e33e28d6_read_str(&(*_self_)) + _1e33e28d6_read_str(&_37426_x)));
			}
		}
		else if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a0d5a4:;
			{
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e2b4a_read_f64(&(*_self_)) + _1e33e3387_as_f64(&_37426_x))));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a0d61a:;
			{
				if (_1e33e4ee3_is_f64(&_37426_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) + _1e33e2b4a_read_f64(&_37426_x))));
				} else {
					_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) + _1e33e2dae_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a0d681:;
			{
				if (_1e33e4ee3_is_f64(&_37426_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) + _1e33e2b4a_read_f64(&_37426_x))));
				} else {
					_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) + _1e33e3123_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1e5a0ad76:;
			{
				return false;
			}
		}
		_match_end_1e5a0ccbd:;
	};
	return true;
}



inline jule::Bool _1e33e72e2_sub(_1e3388a47_Const* _self_, _1e3388a47_Const _40326_x) {
	{
		
		if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a1937e:;
			{
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e2b4a_read_f64(&(*_self_)) - _1e33e3387_as_f64(&_40326_x))));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a13d18:;
			{
				if (_1e33e4ee3_is_f64(&_40326_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) - _1e33e2b4a_read_f64(&_40326_x))));
				} else {
					_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) - _1e33e2dae_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a13d7e:;
			{
				if (_1e33e4ee3_is_f64(&_40326_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) - _1e33e2b4a_read_f64(&_40326_x))));
				} else {
					_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) - _1e33e3123_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1e5a13ca2:;
			{
				return false;
			}
		}
		_match_end_1e5a13433:;
	};
	return true;
}



inline jule::Bool _1e33e7600_mul(_1e3388a47_Const* _self_, _1e3388a47_Const _42726_x) {
	{
		
		if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a1db03:;
			{
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e2b4a_read_f64(&(*_self_)) * _1e33e3387_as_f64(&_42726_x))));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a1d40a:;
			{
				if (_1e33e4ee3_is_f64(&_42726_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) * _1e33e2b4a_read_f64(&_42726_x))));
				} else {
					_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) * _1e33e2dae_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a1d471:;
			{
				if (_1e33e4ee3_is_f64(&_42726_x)) {
					_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>((_1e33e3387_as_f64(&(*_self_)) * _1e33e2b4a_read_f64(&_42726_x))));
				} else {
					_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) * _1e33e3123_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1e5a1d394:;
			{
				return false;
			}
		}
		_match_end_1e5a1c849:;
	};
	return true;
}



inline jule::Bool _1e33e790d_div(_1e3388a47_Const* _self_, _1e3388a47_Const _45526_x) {
	{
		
		if (_1e33e4ee3_is_f64(&(*_self_))) {
			_case_begin_1e5a23377:;
			{
				jule::F64 _45817_l = _1e33e3387_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e33e2b4a_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a22b7e:;
			{
				jule::F64 _46417_l = _1e33e3387_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e33e3387_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a22be5:;
			{
				jule::F64 _47017_l = _1e33e3387_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1e33e4102_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e33e3387_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1e5a22b18:;
			{
				return false;
			}
		}
		_match_end_1e5a220bd:;
	};
	return true;
}



inline jule::Bool _1e33e7c1b_mod(_1e3388a47_Const* _self_, _1e3388a47_Const _48426_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a27b51:;
			{
				jule::I64 _48717_l = _1e33e2dae_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1e33e2199_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a27425:;
			{
				jule::U64 _49317_l = _1e33e3123_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1e33e240d_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1e5a273ae:;
			{
				return false;
			}
		}
		_match_end_1e5a272d2:;
	};
	return true;
}



inline jule::Bool _1e33e8029_bitwise_and(_1e3388a47_Const* _self_, _1e3388a47_Const _50634_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a2aea6:;
			{
				_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) & _1e33e2dae_as_i64(&_50634_x))));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a2a77a:;
			{
				_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) & _1e33e3123_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1e5a2a714:;
			{
				return false;
			}
		}
		_match_end_1e5a2a637:;
	};
	return true;
}



inline jule::Bool _1e33e8337_bitwise_or(_1e3388a47_Const* _self_, _1e3388a47_Const _52033_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a2d140:;
			{
				_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) | _1e33e2dae_as_i64(&_52033_x))));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a2c914:;
			{
				_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) | _1e33e3123_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1e5a2c89d:;
			{
				return false;
			}
		}
		_match_end_1e5a2c7c1:;
	};
	return true;
}



inline jule::Bool _1e33e8645_xor(_1e3388a47_Const* _self_, _1e3388a47_Const _53426_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a302c9:;
			{
				_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_1e33e2199_read_i64(&(*_self_)) ^ _1e33e2dae_as_i64(&_53426_x))));
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a2ea9d:;
			{
				_1e33e3882_set_u64(&(*_self_), static_cast<jule::U64>((_1e33e240d_read_u64(&(*_self_)) ^ _1e33e3123_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1e5a2ea37:;
			{
				return false;
			}
		}
		_match_end_1e5a2e95a:;
	};
	return true;
}



inline jule::Bool _1e33e8953_lshift(_1e3388a47_Const* _self_, _1e3388a47_Const _54829_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a32463:;
			{
				jule::I64 _55117_l = _1e33e2dae_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1e33e3123_as_u64(&_54829_x);;
					_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1e33e90c4_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a31c37:;
			{
				_1e33e90c4_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1e5a31bc1:;
			{
				return false;
			}
		}
		_match_end_1e5a31ae4:;
	};
	return true;
}



inline jule::Bool _1e33e8c61_rshift(_1e3388a47_Const* _self_, _1e3388a47_Const _56829_x) {
	{
		
		if (_1e33e4542_is_i64(&(*_self_))) {
			_case_begin_1e5a34e9e:;
			{
				jule::I64 _57117_l = _1e33e2dae_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1e33e3123_as_u64(&_56829_x);;
					_1e33e360c_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1e33e93c1_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1e33e47a6_is_u64(&(*_self_))) {
			_case_begin_1e5a34773:;
			{
				_1e33e93c1_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1e5a3470c:;
			{
				return false;
			}
		}
		_match_end_1e5a34630:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3388a47_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3a1a607_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e391b23e_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3e4ba49_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3c1e5a8_set(_1e3e4bdac_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1e60764bd:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1e6076534:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1e6076325:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1e60787bc:;
					{
						goto _iter_next_1e6078008;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1e6078844:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1e6078008;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1e60788bb:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1e6078008;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1e6078008;
					}
				}
				_match_end_1e607868a:;
			};
			goto _iter_end_1e6078008;
		}
	_iter_next_1e6078008:;
	}
	_iter_end_1e6078008:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e3a9d679_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1e608130d;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1e608130d:;
		}
		_iter_end_1e608130d:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e3c5cc01_float_bits(_1e3e4bdac_Decimal* _self_, _1e3a1a607_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1e395aa86_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e395aa86_POWTAB[(*_self_)._field_dp];
			};
			_1e3e4c1cb_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1e6087d1a:;
	}
	_iter_end_1e6087d1a:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1e395aa86_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e395aa86_POWTAB[(-((*_self_)._field_dp))];
			};
			_1e3e4c1cb_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1e6088524:;
	}
	_iter_end_1e6088524:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1e3e4c1cb_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e3e4c1cb_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e3e4c6a4_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1e3e4c099_assign(_1e3e4bdac_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1e609b4e3:;
	}
	_iter_end_1e609b4e3:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1e609c9cd:;
	}
	_iter_end_1e609c9cd:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1e3e4c918_trim((*_self_));
}



inline void _1e3e4c1cb_shift(_1e3e4bdac_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1e609e150:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1e609e1c7:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1e3e4ccae_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1e609e804:;
				}
				_iter_end_1e609e804:;;
				_1e3e4ccae_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1e609e24e:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1e3e4ca4a_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1e60a05a2:;
				}
				_iter_end_1e60a05a2:;;
				_1e3e4ca4a_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1e609e01d:;
	};
}



inline void _1e3e4c30d_round_down(_1e3e4bdac_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1e3e4c918_trim((*_self_));
}



inline void _1e3e4c440_round_up(_1e3e4bdac_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1e60a3bc1:;
	}
	_iter_end_1e60a3bc1:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1e3e4c572_round(_1e3e4bdac_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1e3e4cde1_should_round_up((*_self_),_29124_nd)) {
		_1e3e4c440_round_up(&(*_self_), _29124_nd);
	} else {
		_1e3e4c30d_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1e3e4c6a4_rounded_integer(_1e3e4bdac_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1e60a7059:;
	}
	_iter_end_1e60a7059:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1e60a95bc:;
	}
	_iter_end_1e60a95bc:;;
	if (_1e3e4cde1_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3e4bdac_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e332d657_FieldIns> _1e3307620_instance(jule::Ptr<_1e3325ee0_Field> _self_) {
	return jule::new_ptr<_1e332d657_FieldIns>(_1e332d657_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1e3325ee0_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e332791a_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3352093_StructIns> _1e330d714_instance(jule::Ptr<_1e3318840_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1e3352093_StructIns> _9917_ins = jule::new_ptr<_1e3352093_StructIns>(_1e3352093_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1e332d657_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1e3407203_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1e6373677:;
		if (it != expr.end()) {
			jule::Ptr<_1e3325ee0_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1e3307620_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1e4092a19_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1e6373677:;
			++it;
			goto _iter_begin_1e6373677;
		}
		_iter_end_1e6373677:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1e34019a0_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1e63768ab:;
			if (it != expr.end()) {
				jule::Ptr<_1e34019a0_Fn> _11625_f = *it;
				{
					jule::Ptr<_1e34019a0_Fn> _11725_fins = jule::new_ptr<_1e34019a0_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1e63768ab:;
				++it;
				goto _iter_begin_1e63768ab;
			}
			_iter_end_1e63768ab:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1e3352093_StructIns> _1e331297c_append_instance(_1e3318840_Struct* _self_, jule::Ptr<_1e3352093_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1e6378c43:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _13421_ains = *it;
			{
				if (_1e3327bc3_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1e6378c43:;
			++it;
			goto _iter_begin_1e6378c43;
		}
		_iter_end_1e6378c43:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1e34019a0_Fn> _1e33136d6_find_method(_1e3318840_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1e637a294:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1e637a294:;
			++it;
			goto _iter_begin_1e637a294;
		}
		_iter_end_1e637a294:;
	};
	return nullptr;
}



inline jule::Ptr<_1e401a92b_Var> _1e331593b_find_static(_1e3318840_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1e637b4e8:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1e637b4e8:;
			++it;
			goto _iter_begin_1e637b4e8;
		}
		_iter_end_1e637b4e8:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3325ee0_Field> _1e331694d_find_field(_1e3318840_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1e637c483:;
		if (it != expr.end()) {
			jule::Ptr<_1e3325ee0_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1e637c483:;
			++it;
			goto _iter_begin_1e637c483;
		}
		_iter_end_1e637c483:;
	};
	return nullptr;
}



inline jule::Bool _1e3315d8c_is_implements(_1e3318840_Struct* _self_, jule::Ptr<_1e374ee30_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1e637c95b:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1e637c95b:;
			++it;
			goto _iter_begin_1e637c95b;
		}
		_iter_end_1e637c95b:;
	};
	return false;
}



inline jule::Bool _1e3318169_is_derives(_1e3318840_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1e637d96d:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1e637d96d:;
			++it;
			goto _iter_begin_1e637d96d;
		}
		_iter_end_1e637d96d:;
	};
	return false;
}



inline jule::Bool _1e3317575_is_uses(_1e3318840_Struct* _self_, jule::Ptr<_1e3318840_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1e6381223:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1e63819c6:;
				}
				_iter_end_1e63819c6:;;
			}
			_iter_next_1e6381223:;
			++it;
			goto _iter_begin_1e6381223;
		}
		_iter_end_1e6381223:;
	};
	return false;
}



inline jule::Bool _1e3318c91_has_ref_accessible(_1e3318840_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1e6381bc4:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1e3400a04_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1e6381bc4:;
			++it;
			goto _iter_begin_1e6381bc4;
		}
		_iter_end_1e6381bc4:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3318840_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e332d657_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33cb073_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9536_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9723_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9910_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9aec_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9cd9_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e9ec6_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea1b3_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea3a0_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea58c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea779_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea966_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eab53_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ead40_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eb02c_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eb44a_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eb637_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eb824_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eba11_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ebbed_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ebdda_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ec0c7_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ec2b4_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ec4a1_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ec68d_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ec87a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eca67_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ecc54_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ece41_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ed12d_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ed31a_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33eb219_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ed97a_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33edb67_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33edd54_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ee041_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ee22d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ee9c0_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3403782_ParamIns> _1e340052b_instance(jule::Ptr<_1e3400163_Param> _self_) {
	return jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1e3400790_is_self(_1e3400163_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1e3400a04_is_ref(_1e3400163_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3400163_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3401e12_is_void(_1e34019a0_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1e3402176_is_method(_1e34019a0_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1e34023da_is_entry_point(_1e34019a0_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1e340264e_is_init(_1e34019a0_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1e34028b3_is_anon(_1e34019a0_Fn* _self_) {
	return _1e1c34a32_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1e3402b27_any_var(_1e34019a0_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1e3404651_FnIns> _1e3402d8b_instance_force(jule::Ptr<_1e34019a0_Fn> _self_) {
	jule::Ptr<_1e3404651_FnIns> _10017_ins = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1e3e547aa_Scope>(), ._field_refers=static__1e3407203_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e6394eb2:;
		if (it != expr.end()) {
			jule::Ptr<_1e3400163_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1e340052b_instance(_10721_p));;
			}
			_iter_next_1e6394eb2:;
			++it;
			goto _iter_begin_1e6394eb2;
		}
		_iter_end_1e6394eb2:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1e3404651_FnIns> _1e3403100_instance(jule::Ptr<_1e34019a0_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1e3402d8b_instance_force(_self_);
}



inline jule::Ptr<_1e3404651_FnIns> _1e34033ca_append_instance(_1e34019a0_Fn* _self_, jule::Ptr<_1e3404651_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1e6399307:;
		if (it != expr.end()) {
			jule::Ptr<_1e3404651_FnIns> _14421_ains = *it;
			{
				if (_1e340591b_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1e6399307:;
			++it;
			goto _iter_begin_1e6399307;
		}
		_iter_end_1e6399307:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e34019a0_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3403b5b_to_str(_1e3403782_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e3400790_is_self((*_self_)._field_decl.ptr())) {
		if (_1e3400a04_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1e4091a18_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3403782_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3404981_to_str(_1e3404651_FnIns* _self_) {
	;
	return _1e3405c29_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1e3404c8e_equals(jule::Ptr<_1e3404651_FnIns> _self_, jule::Ptr<_1e4091661_TypeKind> _21726_other) {
	jule::Ptr<_1e3404651_FnIns> _21813_f = _1e409491c_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1e3401e12_is_void(_self_.get()._field_decl.ptr()) != _1e3401e12_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1e4091d26_equals(_self_.get()._field_generics[_23917_i], _21813_f.get()._field_generics[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1e63a3179:;
	}
	_iter_end_1e63a3179:;;
	jule::Fn<jule::Bool(jule::Ptr<_1e3403782_ParamIns>,jule::Ptr<_1e3403782_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1e3403782_ParamIns>,jule::Ptr<_1e3403782_ParamIns>)>([=](jule::Ptr<_1e3403782_ParamIns> _24631_p1, jule::Ptr<_1e3403782_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1e3400790_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1e3400790_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1e3400a04_is_ref(_24631_p1.get()._field_decl.ptr()) != _1e3400a04_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1e4091d26_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1e63a51c0:;
	}
	_iter_end_1e63a51c0:;;
	if ((!(_1e3401e12_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1e4091d26_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _1e3405135_types(_1e3404651_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1e63aac42:;
			{
				return nullptr;
			}
		}
		else if ((_1e40953bd_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1e63aaca8:;
			{
				return jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1e63aabcb:;
			{
				return _1e40953bd_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1e63aaaee:;
	};
}



inline jule::Bool _1e3405399_is_builtin(_1e3404651_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1e340560d_is_anon(_1e3404651_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1e34028b3_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1e340591b_same(_1e3404651_FnIns* _self_, jule::Ptr<_1e3404651_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1e63ae65d:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_1e4091661_TypeKind> &_32816_g = *it;
			{
				if ((!(_1e4091d26_equals(_32816_g, _32323_f.get()._field_generics[_32813_i])))) {
					return false;
				};
			}
			_iter_next_1e63ae65d:;
			++it;
			_32813_i++;
			goto _iter_begin_1e63ae65d;
		}
		_iter_end_1e63ae65d:;
	};
	return true;
}



inline jule::Str _1e3405c29_get_kind_str(_1e3404651_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1e63b2cc1:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_1e4091661_TypeKind> &_35420_t = *it;
				{
					_34017_s+=_1e4091a18_to_str(_35420_t.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1e63b2cc1:;
				++it;
				_35417_i++;
				goto _iter_begin_1e63b2cc1;
			}
			_iter_end_1e63b2cc1:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1e63b4c3a:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_1e3342b00_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1e63b4c3a:;
				++it;
				_36317_i++;
				goto _iter_begin_1e63b4c3a;
			}
			_iter_end_1e63b4c3a:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1e63b7435:;
			if (it != expr.end()) {
				jule::Ptr<_1e3403782_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1e3403b5b_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1e63b7435:;
				++it;
				goto _iter_begin_1e63b7435;
			}
			_iter_end_1e63b7435:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1e3401e12_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1e4091a18_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3404651_FnIns _Src) {
	_Stream << _1e3404981_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e3406e17_ReferenceStack> static__1e3407203_new(void) {
	return jule::new_ptr<_1e3406e17_ReferenceStack>(_1e3406e17_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1e3407588_len(_1e3406e17_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1e3407896_at(_1e3406e17_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1e3407b1b_push(_1e3406e17_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1e695c6cd_exist(_1e3406e17_ReferenceStack* _self_, jule::Ptr<_1e3404651_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e695d899:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e695d899:;
			++it;
			goto _iter_begin_1e695d899;
		}
		_iter_end_1e695d899:;
	};
	return false;
}

inline jule::Bool _1e697210a_exist(_1e3406e17_ReferenceStack* _self_, jule::Ptr<_1e401a92b_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e6973282:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e6973282:;
			++it;
			goto _iter_begin_1e6973282;
		}
		_iter_end_1e6973282:;
	};
	return false;
}

inline jule::Bool _1e6a06d82_exist(_1e3406e17_ReferenceStack* _self_, jule::Ptr<_1e3352093_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e6a0804d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e6a0804d:;
			++it;
			goto _iter_begin_1e6a0804d;
		}
		_iter_end_1e6a0804d:;
	};
	return false;
}

inline jule::Bool _1e6c89ca2_exist(_1e3406e17_ReferenceStack* _self_, jule::Ptr<_1e374ee30_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e6c8ae29:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e6c8ae29:;
			++it;
			goto _iter_begin_1e6c8ae29;
		}
		_iter_end_1e6c8ae29:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3406e17_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e34082d1_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e340c77a_SymbolBuilder> _1e340cc31_get_root(jule::Ptr<_1e340c77a_SymbolBuilder> _self_) {
	jule::Ptr<_1e340c77a_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1e63d0b35:;
	}
	_iter_end_1e63d0b35:;;
	return _31617_root;
}



inline void _1e340d0e9_push_err(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e1c31ee6_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e3eedc61_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _1e340d4b2_push_err_text(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e1c31ee6_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e3eedc61_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _1e340d7d1_push_suggestion(_1e340c77a_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_1e40001e6_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _1e340dbaa_check_cpp_use_decl_path(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e334d05b_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _1e18909ce_ext(_33659_path);;
	if (((!(_1e18e87a1_is_valid_header_ext(_33713_ext))) && (!(_1e18e89e3_is_valid_cpp_ext(_33713_ext))))) {
		_1e340d0e9_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_2163c371d_Status> _34413_info = ({
		auto except = static__1e189165b_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_1e340d0e9_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_2163c371d_Status>();});
	});;
	if (_22ebe5e06_is_dir(_34413_info.ptr())) {
		_1e340d0e9_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340deb8_build_cpp_header_import(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e334d05b_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_1e18e866e_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_1e189089c_join(jule::Slice<jule::Str>::make({_1e1c37c77_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _1e340dbaa_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1e1890b11_abs(_35717_path);
		if ((!(_36121_ok))) {
			_1e340d0e9_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1e3ee752e_ImportInfo>(_1e3ee752e_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e2d7_build_std_import(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e334d05b_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_1e188de1c_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_1e189089c_join(jule::Slice<jule::Str>::make({_1e1927934_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1e1890b11_abs(_38517_path);
	if ((!(_38820_ok))) {
		_1e340d0e9_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2163c371d_Status> _39513_info = ({
		auto except = static__1e189165b_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1e340d0e9_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2163c371d_Status>();});
	});;
	if ((!(_22ebe5e06_is_dir(_39513_info.ptr())))) {
		_1e340d0e9_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1e188c3e3_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_1e3ee752e_ImportInfo>(_1e3ee752e_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_1e3eea488_Package>(_1e3eea488_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e5e5_build_ident_import(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e334d05b_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3d99_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_1e340d0e9_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1e340d7d1_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_1e188de1c_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_1e189089c_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1e1890b11_abs(_43117_path);
	if ((!(_43520_ok))) {
		_1e340d0e9_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2163c371d_Status> _44213_info = ({
		auto except = static__1e189165b_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1e340d0e9_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2163c371d_Status>();});
	});;
	if ((!(_22ebe5e06_is_dir(_44213_info.ptr())))) {
		_1e340d0e9_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1e188c3e3_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_1e3ee752e_ImportInfo>(_1e3ee752e_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_1e3eea488_Package>(_1e3eea488_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e340e903_build_import(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e334d05b_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_1e63e9742:;
			{
				return _1e340deb8_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_1e63e99c8:;
			{
				return _1e340e2d7_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_1e63e8ec2:;
			{
				return _1e340e5e5_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_1e63e8de5:;
	};
}



inline jule::Bool _1e340ec33_check_duplicate_use_decl(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_1e3ee752e_ImportInfo> _48313_lpkg = _1e4061c91_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>([=](jule::Ptr<_1e3ee752e_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_1e340d0e9_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_1e340d7d1_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _1e3410063_impl_import_selections(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _49546_imp, jule::Ptr<_1e334d05b_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1e63ed548:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_1e63ee0c6:;
					if (it != expr.end()) {
						jule::Ptr<_1e1c31ee6_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1e63ee0c6;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_1e340d0e9_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_1e340d7d1_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1e63ee0c6;
							};
						}
						_iter_next_1e63ee0c6:;
						++it;
						goto _iter_begin_1e63ee0c6;
					}
					_iter_end_1e63ee0c6:;
				};
			}
			_iter_next_1e63ed548:;
			++it;
			goto _iter_begin_1e63ed548;
		}
		_iter_end_1e63ed548:;
	};
}



inline jule::Str _1e3410371_get_as_link_path(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_1e17de125_has_prefix(_51040_path,_1e1927934_PATH_STDLIB)) {
		(_51040_path).mut_slice(_1e1927934_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _1e188de1c_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1e1890b11_abs(_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3d99_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 92LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _1e188de1c_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1e3410739_push_cycle_error(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e340c77a_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _1e19054a0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1e3410371_get_as_link_path(_self_, _1e1c37c77_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1e3410371_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_1e17ddb08_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _1e3410b02_push_cross_cycle_error(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e340c77a_SymbolBuilder>& _53443_target, jule::Ptr<_1e3ee752e_ImportInfo>& _53468_imp, jule::Ptr<_1e1c31ee6_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_1e3410739_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_1e340c77a_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e340c77a_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_1e3410739_push_cycle_error(_self_, _54017_old.get()._field_owner,_1e1c37c77_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_1e3410739_push_cycle_error(_self_, _53443_target,_1e1c37c77_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_1e6405bb0;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_1e6405bb0:;
	}
	_iter_end_1e6405bb0:;;
	_1e340d0e9_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _1e3410ea9_check_import_cycles(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e3ee752e_ImportInfo> _55739_imp, jule::Ptr<_1e334d05b_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _1e1c37c77_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1e340d0e9_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1e3410371_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1e1c37c77_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1e3410b02_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1e340c77a_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1e1c37c77_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1e3410b02_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1e3411394_check_package_accessibility(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e334d05b_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_1e3ee4c35_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1e3ee3d99_get_mod_path((*_self_)._field_importer) != _59364_mod) && _1e188d812_contains(_59375_path,jule::Str("internal", 8)))) {
		_1e340d0e9_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e341175c_import_package(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _59939_imp, jule::Ptr<_1e334d05b_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_1e3ee752e_ImportInfo> _60417_port = _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee44b5_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3d99_get_mod_path(_self_.get()._field_importer);;
		_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3b57_set_mod_path(_self_.get()._field_importer, _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee41a7_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_1e3411394_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3b57_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_1e3410ea9_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3d99_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3b57_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee3b57_set_mod_path(_self_.get()._field_importer, _1e1927934_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1e3301383_Ast>> _62322_asts;;
		jule::Slice<_1e1905060_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee486c_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_1e3411394_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_1e6416a28:;
			if (it != expr.end()) {
				jule::Ptr<_1e3301383_Ast> _63125_ast = *it;
				{
					jule::Ptr<_1e4061466_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _1e40ac9e0_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_1e340d4b2_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_1e6416a28:;
				++it;
				goto _iter_begin_1e6416a28;
			}
			_iter_end_1e6416a28:;
		};
	};
	_1e3410063_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3411a6a_import_use_decl(jule::Ptr<_1e340c77a_SymbolBuilder> _self_, jule::Ptr<_1e334d05b_UseDecl>& _65140_decl) {
	jule::Ptr<_1e3ee752e_ImportInfo> _65217_imp = _1e340e903_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _1e340ec33_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_1e341175c_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_1e3ee4c35_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3ee4ae2_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _1e3411c46_import_use_decls(jule::Ptr<_1e340c77a_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1e641c2c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e334d05b_UseDecl> _67321_decl = *it;
			{
				_1e3411a6a_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1e641c2c0;
				};
			}
			_iter_next_1e641c2c0:;
			++it;
			goto _iter_begin_1e641c2c0;
		}
		_iter_end_1e641c2c0:;
	};
}



inline void _1e3411ebb_append_node(_1e340c77a_SymbolBuilder* _self_, _1e3302032_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e33517ce_Impl>>()) {
			_case_begin_1e641dcd8:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1e340c22a_build_impl(_68335_node._field_data.operator jule::Ptr<_1e33517ce_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334bb70_TypeAliasDecl>>()) {
			_case_begin_1e641c9b8:;
			{
				jule::Ptr<_1e4090929_TypeAlias> _68821_ta = _1e3408bb6_build_type_alias(_68335_node._field_data.operator jule::Ptr<_1e334bb70_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3350ab9_StructDecl>>()) {
			_case_begin_1e641d8dc:;
			{
				jule::Ptr<_1e3318840_Struct> _69121_srct = _1e3409524_build_struct(_68335_node._field_data.operator jule::Ptr<_1e3350ab9_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3347330_FnDecl>>()) {
			_case_begin_1e641d953:;
			{
				jule::Ptr<_1e34019a0_Fn> _69421_f = _1e340a17e_build_fn(_68335_node._field_data.operator jule::Ptr<_1e3347330_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33511c4_TraitDecl>>()) {
			_case_begin_1e641e239:;
			{
				jule::Ptr<_1e374ee30_Trait> _69721_t = _1e340a6bd_build_trait(_68335_node._field_data.operator jule::Ptr<_1e33511c4_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334830e_VarDecl>>()) {
			_case_begin_1e641e2a0:;
			{
				jule::Ptr<_1e401a92b_Var> _70021_v = _1e340bbdb_build_var(_68335_node._field_data.operator jule::Ptr<_1e334830e_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334e007_EnumDecl>>()) {
			_case_begin_1e641e316:;
			{
				jule::Ptr<_1e34189c8_Enum> _70321_e = _1e340aea4_build_enum(_68335_node._field_data.operator jule::Ptr<_1e334e007_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3350118_TypeEnumDecl>>()) {
			_case_begin_1e641e37c:;
			{
				jule::Ptr<_1e37eea6d_TypeEnum> _70621_e = _1e340b944_build_type_enum(_68335_node._field_data.operator jule::Ptr<_1e3350118_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_1e641d799:;
			{
				_1e340d0e9_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e641ca73:;
	};
}



inline void _1e3412197_append_nodes(_1e340c77a_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1e6427000:;
		if (it != expr.end()) {
			_1e3302032_Node _71421_node = *it;
			{
				_1e3411ebb_append_node(&(*_self_), _71421_node);
			}
			_iter_next_1e6427000:;
			++it;
			goto _iter_begin_1e6427000;
		}
		_iter_end_1e6427000:;
	};
}



inline void _1e341241c_push_directive_pass(_1e340c77a_SymbolBuilder* _self_, jule::Ptr<_1e330242d_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_1e340d0e9_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1e1c31ee6_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_1e340d0e9_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e1c31ee6_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e340d0e9_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_1e340d0e9_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1e34082d1_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1e34125e8_append_top_directives(_1e340c77a_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1e642d479:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1e642db83:;
						{
							_1e341241c_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_1e642dac8:;
				};
			}
			_iter_next_1e642d479:;
			++it;
			goto _iter_begin_1e642d479;
		}
		_iter_end_1e642d479:;
	};
}



inline void _1e34127c4_build(jule::Ptr<_1e340c77a_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1e4061466_SymbolTable>(_1e4061466_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1e34125e8_append_top_directives(_self_.ptr());
	_1e3411c46_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e3412197_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e340c77a_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3468819_to_str(_1e374ee30_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e3468c6a_equals(jule::Ptr<_1e374ee30_Trait> _self_, jule::Ptr<_1e4091661_TypeKind> _2626_other) {
	jule::Ptr<_1e374ee30_Trait> _2713_trt = _1e4094de5_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1e3487e76_is_builtin(_1e374ee30_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1e34019a0_Fn> _1e34a019c_find_method(_1e374ee30_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1e6432aee:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1e6432aee:;
			++it;
			goto _iter_begin_1e6432aee;
		}
		_iter_end_1e6432aee:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e374ee30_Trait _Src) {
	_Stream << _1e3468819_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e34b41b1_auto_expr(_1e35972d8_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e35972d8_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3500719_to_str(_1e34189c8_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e3507e3b_equals(jule::Ptr<_1e34189c8_Enum> _self_, jule::Ptr<_1e4091661_TypeKind> _3826_other) {
	jule::Ptr<_1e34189c8_Enum> _3913_enm = _1e4093e6b_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1e35972d8_EnumItem> _1e35854e6_find_item(_1e34189c8_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1e64353b5:;
		if (it != expr.end()) {
			jule::Ptr<_1e35972d8_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1e64353b5:;
			++it;
			goto _iter_begin_1e64353b5;
		}
		_iter_end_1e64353b5:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e34189c8_Enum _Src) {
	_Stream << _1e3500719_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3584902_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e367a4a9_to_str(_1e37eea6d_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e369971a_equals(jule::Ptr<_1e37eea6d_TypeEnum> _self_, jule::Ptr<_1e4091661_TypeKind> _8026_other) {
	jule::Ptr<_1e37eea6d_TypeEnum> _8113_tenm = _1e40941d0_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1e3584902_TypeEnumItem> _1e375076b_find_item(_1e37eea6d_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1e643761a:;
		if (it != expr.end()) {
			jule::Ptr<_1e3584902_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1e643761a:;
			++it;
			goto _iter_begin_1e643761a;
		}
		_iter_end_1e643761a:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e37eea6d_TypeEnum _Src) {
	_Stream << _1e367a4a9_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e3768894_is_trait_impl(_1e35092a0_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e37690c0_is_struct_impl(_1e35092a0_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e35092a0_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3e547aa_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3eb7ea0_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ebe45c_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecc9ed_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3eccbda_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3ea98ed_is_while_next(_1e3eccdc7_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3eccdc7_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecd0b4_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecd2a1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecd48d_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecd67a_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecd867_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecda54_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecdc41_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ecde2d_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3eaa7ab_is_generic_type_match(_1e3ece11a_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ece11a_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3eb8973_is_default(_1e3ece538_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ece538_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ece725_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ece912_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3eceaee_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ececdb_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ed0b33_find_package(_1e3ed06d2_ScopeChecker* _self_, jule::Str _45635_ident) {
	return _1e4000b97_find_package((*_self_)._field_s.ptr(), _45635_ident);
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ed0e41_select_package(_1e3ed06d2_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _46637_selector) {
	return _1e4000ea5_select_package((*_self_)._field_s.ptr(), _46637_selector);
}



inline jule::Ptr<_1e401a92b_Var> _1e3ed12e8_find_var(_1e3ed06d2_ScopeChecker* _self_, jule::Str _47731_ident, jule::Bool _47743_cpp_linked) {
	;
	jule::Ptr<_1e401a92b_Var> _48017_v = _1e4063c0a___find_var((*_self_)._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1e4063c0a___find_var(_48517_parent.get()._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1e6461446:;
	}
	_iter_end_1e6461446:;;
	return _1e400135c_find_var((*_self_)._field_s.ptr(), _47731_ident,_47743_cpp_linked);
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e3ed16a0_find_type_alias(_1e3ed06d2_ScopeChecker* _self_, jule::Str _50438_ident, jule::Bool _50450_cpp_linked) {
	;
	jule::Ptr<_1e4090929_TypeAlias> _50717_ta = _1e406415b___find_type_alias((*_self_)._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1e406415b___find_type_alias(_51217_parent.get()._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1e6464328:;
	}
	_iter_end_1e6464328:;;
	return _1e4001714_find_type_alias((*_self_)._field_s.ptr(), _50438_ident,_50450_cpp_linked);
}



inline jule::Ptr<_1e3318840_Struct> _1e3ed1a57_find_struct(_1e3ed06d2_ScopeChecker* _self_, jule::Str _52934_ident, jule::Bool _52946_cpp_linked) {
	return _1e4001abb_find_struct((*_self_)._field_s.ptr(), _52934_ident,_52946_cpp_linked);
}



inline jule::Ptr<_1e34019a0_Fn> _1e3ed1e0e_find_fn(_1e3ed06d2_ScopeChecker* _self_, jule::Str _53830_ident, jule::Bool _53842_cpp_linked) {
	return _1e4001e73_find_fn((*_self_)._field_s.ptr(), _53830_ident,_53842_cpp_linked);
}



inline jule::Ptr<_1e374ee30_Trait> _1e3ed221c_find_trait(_1e3ed06d2_ScopeChecker* _self_, jule::Str _54733_ident) {
	return _1e4002281_find_trait((*_self_)._field_s.ptr(), _54733_ident);
}



inline jule::Ptr<_1e34189c8_Enum> _1e3ed252a_find_enum(_1e3ed06d2_ScopeChecker* _self_, jule::Str _55632_ident) {
	return _1e400258e_find_enum((*_self_)._field_s.ptr(), _55632_ident);
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ed2838_find_type_enum(_1e3ed06d2_ScopeChecker* _self_, jule::Str _56537_ident) {
	return _1e400289c_find_type_enum((*_self_)._field_s.ptr(), _56537_ident);
}



inline jule::Bool _1e3ed2b68_is_unsafe(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e3ed2dcc_is_root(_1e3ed06d2_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1e3ed30a8_stop(_1e3ed06d2_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1e3ed331c_stopped(_1e3ed06d2_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1e3ed3581_is_deferred(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ed37e5_get_root(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1e646d9c5:;
	}
	_iter_end_1e646d9c5:;;
	return _62417_root;
}



inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ed3a59_get_hard_root(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1e646ec90:;
	}
	_iter_end_1e646ec90:;;
	return _63417_root;
}



inline jule::Ptr<_1e3ecd67a_Label> _1e3ed3d67_find_label(_1e3ed06d2_ScopeChecker* _self_, jule::Str _64429_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1e6470a4e:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e3ecd67a_Label>>()) {
						_case_begin_1e6471357:;
						{
							jule::Ptr<_1e3ecd67a_Label> _64825_label = _64521_st.operator jule::Ptr<_1e3ecd67a_Label>();;
							if ((_64825_label.get()._field_ident == _64429_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1e6471258:;
				};
			}
			_iter_next_1e6470a4e:;
			++it;
			goto _iter_begin_1e6470a4e;
		}
		_iter_end_1e6470a4e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3ed4175_find_label_scope(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Str _66036_ident) {
	jule::Ptr<_1e3eceaee_ScopeLabel> _66117_label = _1e3ed4483_find_label_all(_self_.ptr(), _66036_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3ed4483_find_label_all(_1e3ed06d2_ScopeChecker* _self_, jule::Str _67233_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1e6473744:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eceaee_ScopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_ident == _67233_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1e6473744:;
			++it;
			goto _iter_begin_1e6473744;
		}
		_iter_end_1e6473744:;
	};
	return nullptr;
}



inline jule::Bool _1e3ed483a_is_duplicated_ident(_1e3ed06d2_ScopeChecker* _self_, jule::Uintptr _68438_itself, jule::Str _68455_ident) {
	jule::Ptr<_1e401a92b_Var> _68513_v = _1e3ed12e8_find_var(&(*_self_), _68455_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68438_itself))) {
		if ((_68513_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_scope == (*_self_)._field_scope) || (!(_1e4002bee_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1e4090929_TypeAlias> _69313_ta = _1e3ed16a0_find_type_alias(&(*_self_), _68455_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68438_itself))) {
		if ((_69313_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1e4002bee_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1e3ed4ab0_check_var_decl(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334830e_VarDecl> _70438_decl) {
	jule::Ptr<_1e401a92b_Var> _70517_v = _1e340bbdb_build_var(_70438_decl);;
	_70517_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1e3ed483a_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_ident)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _70517_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e3ed30a8_stop(_self_.ptr());
		return;;
	};
	_1e400ee5e_check_var_decl(_self_.get()._field_s, _70517_v,jule::Trait<_1e40abe84_Lookup>(_self_, 0));
	if (((!(_1e401b047_is_type_inferred(_70517_v.ptr()))) && ((_70517_v.get()._field_kind == nullptr) || (_70517_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1e40135d3_check_type_var(_self_.get()._field_s, _70517_v,jule::Trait<_1e40abe84_Lookup>(_self_, 0));
}



inline void _1e3ed4d35_check_type_alias_decl(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334bb70_TypeAliasDecl> _72845_decl) {
	jule::Ptr<_1e4090929_TypeAlias> _72917_ta = _1e3408bb6_build_type_alias(_72845_decl);;
	if (_1e3ed483a_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_ident)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _72917_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e3ed30a8_stop(_self_.ptr());
		return;;
	};
	_1e400ab2a_check_type_alias_decl(_self_.get()._field_s, _72917_ta,jule::Trait<_1e40abe84_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1e3ed30a8_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5099_get_child(_1e3ed06d2_ScopeChecker* _self_) {
	return jule::new_ptr<_1e3e547aa_Scope>(_1e3e547aa_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1e3ed5462_check_child_ssc(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3345839_ScopeTree>& _75240_tree, jule::Ptr<_1e3e547aa_Scope>& _75263_s, jule::Ptr<_1e3ed06d2_ScopeChecker>& _75279_ssc) {
	_75279_ssc.get()._field_parent=_self_;
	_1e3ee0a11_check(_75279_ssc, _75240_tree,_75263_s);
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5819_check_child_sc(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3345839_ScopeTree>& _75739_tree, jule::Ptr<_1e3ed06d2_ScopeChecker>& _75762_ssc) {
	jule::Ptr<_1e3e547aa_Scope> _75817_s = _1e3ed5099_get_child(_self_.ptr());;
	_1e3ed5462_check_child_ssc(_self_, _75739_tree,_75817_s,_75762_ssc);
	return _75817_s;
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3ed5b27_check_child(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3345839_ScopeTree>& _76336_tree) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _76417_ssc = _1e3ee0c75_new_child_checker(_self_);;
	return _1e3ed5819_check_child_sc(_self_, _76336_tree,_76417_ssc);
}



inline void _1e3ed5d9c_check_anon_scope(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3345839_ScopeTree> _76840_tree) {
	jule::Ptr<_1e3e547aa_Scope> _76917_s = _1e3ed5b27_check_child(_self_, _76840_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1e3ed61bb_process_error_call(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>& _77343_m, jule::Ptr<_1e1c31ee6_Token> _77374_err) {
	if (_1e3ed3581_is_deferred(_self_)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _77817_root = _1e3ed37e5_get_root(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77343_m.get()._field_func=_77817_root.get()._field_owner;
}



inline void _1e3ed6441_check_expr(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3339d28_Expr> _78634_expr) {
	jule::Ptr<_1e4067d63_Eval> _78717_eval = _1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1e40662e5_Data> _78917_d = _1e40831d0_eval_expr(_78717_eval, _78634_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e648a162:;
			{
				jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_model.operator jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>();;
				_1e3ed61bb_process_error_call(_self_, _79621_m,_78634_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee041_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ed12d_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ee22d_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e648a371:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1e648a00d:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _78634_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e6489ea8:;
	};
}



inline void _1e3ed66b6_check_co_expr(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e333b91d_CoExpr> _81537_expr) {
	jule::Ptr<_1e4067d63_Eval> _81617_eval = _1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1e40662e5_Data> _81817_d = _1e40831d0_eval_expr(_81617_eval, _81537_expr.get()._field_expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e6490475:;
			{
				jule::Ptr<_1e33ea1b3_FnCallExprModel> _82521_model = _81817_d.get()._field_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>();;
				if (_82521_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1e400333c_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_is_co=true;
				_1e407a073_check_fn_of_concurrent_call(_81617_eval.ptr(), _82521_model.get()._field_func,_81537_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1e6490321:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e64902bb:;
	};
}



inline jule::Ptr<_1e3eb7ea0_If> _1e3ed69c4_check_if(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334ab6e_If> _83932_i) {
	jule::Ptr<_1e3e547aa_Scope> _84017_s = _1e3ed5b27_check_child(_self_, _83932_i.get()._field_scope);;
	jule::Ptr<_1e40662e5_Data> _84217_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _83932_i.get()._field_expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e4096138_Prim> _84717_prim = _1e409372e_prim(_84217_d.get()._field_kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1e4098d83_is_bool(_84717_prim.ptr()))))) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _83932_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e3eb7ea0_If>(_1e3eb7ea0_If{._field_expr=_84217_d.get()._field_model, ._field_scope=_84017_s});
}



inline jule::Ptr<_1e3ebe45c_Else> _1e3ed6cd2_check_else(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334b026_Else> _85934_e) {
	return jule::new_ptr<_1e3ebe45c_Else>(_1e3ebe45c_Else{._field_scope=_1e3ed5b27_check_child(_self_, _85934_e.get()._field_scope)});
}



inline void _1e3ed7057_check_conditional(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334b499_Conditional> _86541_conditional) {
	jule::Ptr<_1e3ecc9ed_Conditional> _86617_c = jule::new_ptr<_1e3ecc9ed_Conditional>(_1e3ecc9ed_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_elifs=jule::Slice<jule::Ptr<_1e3eb7ea0_If>>::alloc(0LL,(_86541_conditional.get()._field_tail.len() + 1LL));
	_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1e3ed69c4_check_if(_self_, _86541_conditional.get()._field_head));;
	{
		auto &expr = _86541_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1e64997c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e334ab6e_If> _87221_elif = *it;
			{
				_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1e3ed69c4_check_if(_self_, _87221_elif));;
			}
			_iter_next_1e64997c0:;
			++it;
			goto _iter_begin_1e64997c0;
		}
		_iter_end_1e64997c0:;
	};
	if ((_86541_conditional.get()._field_default != nullptr)) {
		_86617_c.get()._field_default=_1e3ed6cd2_check_else(_self_, _86541_conditional.get()._field_default);
	};
}



inline void _1e3ed74b9_check_iter_scope_ssc(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Uintptr _88140_it, jule::Ptr<_1e3345839_ScopeTree> _88157_tree, jule::Ptr<_1e3e547aa_Scope>& _88180_s, jule::Ptr<_1e3ed06d2_ScopeChecker> _88195_ssc) {
	_88195_ssc.get()._field_it=_88140_it;
	_1e3ed5462_check_child_ssc(_self_, _88157_tree,_88180_s,_88195_ssc);
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3ed791a_check_iter_scope_sc(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Uintptr _88639_it, jule::Ptr<_1e3345839_ScopeTree> _88656_tree, jule::Ptr<_1e3ed06d2_ScopeChecker> _88678_ssc) {
	jule::Ptr<_1e3e547aa_Scope> _88717_scope = _1e3ed5099_get_child(_self_.ptr());;
	_1e3ed74b9_check_iter_scope_ssc(_self_, _88639_it,_88656_tree,_88717_scope,_88678_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3ed7cc2_check_iter_scope(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Uintptr _89236_it, jule::Ptr<_1e3345839_ScopeTree>& _89254_tree) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _89317_ssc = _1e3ee0c75_new_child_checker(_self_);;
	return _1e3ed791a_check_iter_scope_sc(_self_, _89236_it,_89254_tree,_89317_ssc);
}



inline void _1e3ed8047_check_inf_iter(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3348d26_Iter>& _89739_it) {
	jule::Ptr<_1e3eccbda_InfIter> _89817_kind = jule::new_ptr<_1e3eccbda_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_scope=_1e3ed7cc2_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89739_it.get()._field_scope);
}



inline void _1e3ed82bc_check_while_iter(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3348d26_Iter>& _90341_it) {
	jule::Ptr<_1e33495eb_WhileKind> _90417_wh = _90341_it.get()._field_kind.operator jule::Ptr<_1e33495eb_WhileKind>();;
	if (((_90417_wh.get()._field_expr == nullptr) && (_90417_wh.get()._field_next == nullptr))) {
		_1e3ed8047_check_inf_iter(_self_, _90341_it);
		return;;
	};
	jule::Ptr<_1e3eccdc7_WhileIter> _91017_kind = jule::new_ptr<_1e3eccdc7_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_scope=_1e3ed7cc2_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90341_it.get()._field_scope);
	if ((_90417_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1e40662e5_Data> _91521_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _90417_wh.get()._field_expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e4096138_Prim> _92017_prim = _1e409372e_prim(_91521_d.get()._field_kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e4098d83_is_bool(_92017_prim.ptr())))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_expr=_91521_d.get()._field_model;
	};
	if (_1e334994d_is_while_next(_90417_wh.ptr())) {
		if ((!(_1e3ea7a72_is_valid_ast_st_for_next_st(_90417_wh.get()._field_next)))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1e3ede7ac_check_node(_self_, _90417_wh.get()._field_next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_94017_n);
			if ((!(_1e3ea8930_is_valid_st_for_next_st(_94325_st)))) {
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_next=_94325_st;
		};
	};
}



inline void _1e3ed8542_check_range_iter(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3348d26_Iter>& _95441_it) {
	jule::Ptr<_1e3349e8c_RangeKind> _95517_rang = _95441_it.get()._field_kind.operator jule::Ptr<_1e3349e8c_RangeKind>();;
	jule::Ptr<_1e40662e5_Data> _95717_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _95517_rang.get()._field_expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3ecd0b4_RangeIter> _96217_kind = jule::new_ptr<_1e3ecd0b4_RangeIter>(_1e3ecd0b4_RangeIter{._field_expr=_95717_d, });;
	_1e405c550_RangeChecker _96617_rc = _1e405c550_RangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _1e405de47_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_1e3ed06d2_ScopeChecker> _97917_ssc = _1e3ee0c75_new_child_checker(_self_);;
	jule::Ptr<_1e3e547aa_Scope> _98017_scope = _1e3ed5099_get_child(_self_.ptr());;
	if ((_96217_kind.get()._field_key_a != nullptr)) {
		if (((!(_1e4002bee_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e3ed483a_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_a.get()._field_ident))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_a.get()._field_ident)}));
			_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_a.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_a);;
	};
	if ((_96217_kind.get()._field_key_b != nullptr)) {
		if (((!(_1e4002bee_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e3ed483a_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_b.get()._field_ident))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_b.get()._field_ident)}));
			_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_b.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_b);;
	};
	_1e3ed74b9_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95441_it.get()._field_scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_scope=_98017_scope;
}



inline void _1e3ed87b7_check_iter(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3348d26_Iter> _100434_it) {
	if (_1e3349178_is_inf(_100434_it.ptr())) {
		_1e3ed8047_check_inf_iter(_self_, _100434_it);
		return;;
	};
	{
		auto &_match_expr{ _100434_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e33495eb_WhileKind>>()) {
			_case_begin_1e64bb47e:;
			{
				_1e3ed82bc_check_while_iter(_self_, _100434_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3349e8c_RangeKind>>()) {
			_case_begin_1e64ba8e0:;
			{
				_1e3ed8542_check_range_iter(_self_, _100434_it);
			}
		}
		else {
			_case_begin_1e64ba79c:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1e64bae95:;
	};
}



inline jule::Bool _1e3ed8ac5_check_valid_cont_label(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Uintptr _102042_it) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102042_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e3ed8e05_check_valid_break_label(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Uintptr _103643_ptr) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103643_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_1e3ece538_Case*)(_103717_scope.get()._field_cse))->_field_owner);;
		if ((_104517_mtch == _103643_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e3ecd2a1_ContSt> _1e3ed9224_check_cont_valid_scope(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334a6eb_ContSt> _105942_c) {
	if (_1e3ed3581_is_deferred(_self_)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105942_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1e3ecd2a1_ContSt>();
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_1e64c3ab3:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_1e64c3b3a:;
			{
				return jule::new_ptr<_1e3ecd2a1_ContSt>(_1e3ecd2a1_ContSt{._field_it=_106917_scope.get()._field_it});
			}
		}
		_match_end_1e64c3a3b:;
	};
	_1e400333c_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e3ed9499_check_cont(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334a6eb_ContSt> _108330_c) {
	jule::Ptr<_1e3ecd2a1_ContSt> _108417_cont = _1e3ed9224_check_cont_valid_scope(_self_, _108330_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108330_c.get()._field_label != nullptr)) {
		jule::Ptr<_1e3eceaee_ScopeLabel> _109021_label = _1e3e7c629_find_label_parent(_108330_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
					_case_begin_1e64c9514:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1e3eccbda_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
					_case_begin_1e64cc58e:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1e3ecd0b4_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
					_case_begin_1e64cc605:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1e3eccdc7_WhileIter>()));
					}
				}
				else {
					_case_begin_1e64cc43a:;
					{
						_1e400333c_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1e64cc35d:;
			};
		};
	};
	if ((_108417_cont.get()._field_it != 0LLU)) {
		if ((!(_1e3ed8ac5_check_valid_cont_label(_self_, _108417_cont.get()._field_it)))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _1e3ed971e_check_label(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3342ea7_LabelSt> _113035_l) {
	if ((_1e3ed3d67_find_label(_self_.ptr(), _113035_l.get()._field_ident) != nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _113035_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113035_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1e3ecd67a_Label> _113617_label = jule::new_ptr<_1e3ecd67a_Label>(_1e3ecd67a_Label{._field_ident=_113035_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e3eceaee_ScopeLabel>>::make({jule::new_ptr<_1e3eceaee_ScopeLabel>(_1e3eceaee_ScopeLabel{._field_token=_113035_l.get()._field_token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e3ed9994_push_goto(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334335e_GotoSt> _114933_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e3ecd867_GotoSt>(_1e3ecd867_GotoSt{._field_ident=_114933_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e3ececdb_ScopeGoto>>::make({jule::new_ptr<_1e3ececdb_ScopeGoto>(_1e3ececdb_ScopeGoto{._field_gt=_114933_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1e3ed9c19_check_postfix(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3344294_AssignSt> _116137_a) {
	if ((_116137_a.get()._field_left.len() > 1LL)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3339d28_Expr> _116717_expr = _116137_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1e40662e5_Data> _116817_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_1e3ea6ee4_check_assign(_self_.get()._field_s,_116817_d,nullptr,_116137_a.get()._field_setter);
	if ((_1e4093c07_ptr(_116817_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e409cbab_Ptr> _117621_ptr = _1e4093c07_ptr(_116817_d.get()._field_kind.ptr());;
		if (_1e409d67e_is_unsafe(_117621_ptr.ptr())) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1e4091a18_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1e409372e_prim(_116817_d.get()._field_kind.ptr()) == nullptr) || (!(_1e3ecc624_is_num(_1e409372e_prim(_116817_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1e4091a18_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e3ecda54_Postfix>(_1e3ecda54_Postfix{._field_expr=_116817_d.get()._field_model, ._field_op=_116137_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1e3eda027_is_new_assign_ident(_1e3ed06d2_ScopeChecker* _self_, jule::Str _119438_ident) {
	if ((_1e1c3478a_is_ignore_ident(_119438_ident) || _119438_ident.empty())) {
		return false;
	};
	return (_1e4064513_def_by_ident((*_self_)._field_table.ptr(), _119438_ident,false) == nullptr);
}



inline jule::Bool _1e3eda49a_check_structure_assign_op(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3352093_StructIns>& _120250_s, jule::Ptr<_1e3344294_AssignSt>& _120270_a, jule::Ptr<_1e40662e5_Data>& _120289_r) {
	jule::Ptr<_1e3404651_FnIns> _120517_overload = nullptr;;
	{
		auto &_match_expr{ _120270_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1e64e0173:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1e64e01d9:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1e64e10b9:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1e64e1130:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1e64e1196:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1e64e120c:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1e64e1273:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1e64e132d:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1e64e1394:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1e64e140a:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1e64e0041:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1e331ace8_to_str(_120250_s.ptr()))}));
				return false;
			}
		}
		_match_end_1e64deedb:;
	};
	if ((_120517_overload == nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1e331ace8_to_str(_120250_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1e3403782_ParamIns> _123717_p = _120517_overload.get()._field_params[1LL];;
	return _1e400863e_check_assign_type(_self_.get()._field_s, _123717_p.get()._field_decl.get()._field_reference,_123717_p.get()._field_kind,_120289_r,_120270_a.get()._field_setter);
}



inline void _1e3eda731_check_single_assign(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3344294_AssignSt>& _124144_a) {
	jule::Ptr<_1e40662e5_Data> _124217_l = nullptr;;
	if ((!(_1e1c3478a_is_ignore_ident(_124144_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1e3339d28_Expr> _124521_expr = _124144_a.get()._field_left[0LL].get()._field_expr;;
		_124217_l=_1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _124521_expr);
		if ((_124217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e4067d63_Eval> _125217_eval = nullptr;;
	if ((_124217_l != nullptr)) {
		_125217_eval=_1e4007d36_evalp(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0),_124217_l.get()._field_kind);
	} else {
		_125217_eval=_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0));
	};
	_125217_eval.get()._field_unsafety=_1e3ed2b68_is_unsafe(_self_);
	jule::Ptr<_1e40662e5_Data> _125917_r = _1e40831d0_eval_expr(_125217_eval, _124144_a.get()._field_right);;
	if ((_125917_r == nullptr)) {
		return;;
	};
	if ((_124217_l == nullptr)) {
		if (_1e40927a5_void(_125917_r.get()._field_kind.ptr())) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_125917_r));;
		return;;
	};
	if ((!(_1e3ea6ee4_check_assign(_self_.get()._field_s,_124217_l,_125917_r,_124144_a.get()._field_setter)))) {
		return;;
	};
	if ((_1e40953bd_tup(_125917_r.get()._field_kind.ptr()) != nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e33cb073_OperandExprModel> _128117_lm = jule::new_ptr<_1e33cb073_OperandExprModel>(_1e33cb073_OperandExprModel{._field_kind=_124217_l.get()._field_kind, ._field_model=_124217_l.get()._field_model});;
	jule::Ptr<_1e33cb073_OperandExprModel> _128517_rm = jule::new_ptr<_1e33cb073_OperandExprModel>(_1e33cb073_OperandExprModel{._field_kind=_125917_r.get()._field_kind, ._field_model=_125917_r.get()._field_model});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e3ecdc41_Assign>(_1e3ecdc41_Assign{._field_l=_128117_lm, ._field_r=_128517_rm, ._field_op=_124144_a.get()._field_setter})));;
	if ((_124144_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1e3352093_StructIns> _129221_strct = _1e4094b81_strct(_124217_l.get()._field_kind.ptr());;
		if ((_129221_strct != nullptr)) {
			_1e3eda49a_check_structure_assign_op(_self_, _129221_strct,_124144_a,_125917_r);
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind=_124144_a.get()._field_setter.get()._field_kind.slice(0LL,(_124144_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1e40853e1_BinaryEval _129921_solver = static__1e4085ce8_new(_125217_eval,_124144_a.get()._field_setter);;
		_125917_r=_1e408a9e0_solve_explicit(&_129921_solver, _124217_l,_125917_r);
		if ((_125917_r == nullptr)) {
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1e4053953_AssignTypeChecker _130817_checker = _1e4053953_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124217_l.get()._field_kind, ._field_d=_125917_r, ._field_error_token=_124144_a.get()._field_setter};;
	if (_1e4054aca_check(&_130817_checker)) {
		_128517_rm.get()._field_model=_125917_r.get()._field_model;
		_128117_lm.get()._field_model=_124217_l.get()._field_model;
	};
}



inline void _1e3edac70___process_end_part_of_multi_assign(_1e3ed06d2_ScopeChecker* _self_, jule::Ptr<_1e3ecde2d_MultiAssign> _132057_st, jule::Ptr<_1e3344294_AssignSt> _132113_a, jule::Ptr<_1e3343c55_AssignLeft> _132131_lexpr, jule::Ptr<_1e40662e5_Data> _132155_l, jule::Ptr<_1e40662e5_Data> _132169_r) {
	if (_1e1c3478a_is_ignore_ident(_132131_lexpr.get()._field_ident)) {
		if (_1e40927a5_void(_132169_r.get()._field_kind.ptr())) {
			_1e400333c_push_err((*_self_)._field_s.ptr(), _132113_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_132113_a.get()._field_declarative && _1e3eda027_is_new_assign_ident(&(*_self_), _132131_lexpr.get()._field_ident))) {
		if (_1e3ed483a_is_duplicated_ident(&(*_self_), 0LLU,_132131_lexpr.get()._field_ident)) {
			_1e400333c_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
			_1e400365b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1e3ed30a8_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1e401a92b_Var> _133921_v = jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_scope=(*_self_)._field_scope, ._field_token=_132131_lexpr.get()._field_token, ._field_ident=_132131_lexpr.get()._field_ident, ._field_mutable=_132131_lexpr.get()._field_mutable, ._field_reference=_132131_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_expr=_132113_a.get()._field_right, ._field_data=_132169_r}), });;
		_1e40132b4_check_var((*_self_)._field_s, _133921_v);
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(static_cast<jule::Any>(_133921_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_133921_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_133921_v));;
		return;;
	};
	if ((_132131_lexpr.get()._field_mutable || _132131_lexpr.get()._field_reference)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
		_1e400365b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1e3ea6ee4_check_assign((*_self_)._field_s,_132155_l,_132169_r,_132113_a.get()._field_setter)))) {
		return;;
	};
	;
	_1e400a443_check_validity_for_init_expr((*_self_)._field_s, _132155_l.get()._field_mutable,false,_132155_l.get()._field_kind,_132169_r,_132113_a.get()._field_setter);
	_1e4053953_AssignTypeChecker _137417_checker = _1e4053953_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132155_l.get()._field_kind, ._field_d=_132169_r, ._field_error_token=_132113_a.get()._field_setter};;
	_1e4054aca_check(&_137417_checker);
	_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(_132155_l.get()._field_model);;
}



inline void _1e3edaee5_check_ret_multi_assign(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3344294_AssignSt>& _138547_a) {
	jule::Ptr<_1e40662e5_Data> _138617_rd = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _138547_a.get()._field_right);;
	if ((_138617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e40662e5_Data>> _139117_r = _1e3e9aeb6_get_datas_from_tuple_data(_138617_rd);;
	{
		
		if ((_138547_a.get()._field_left.len() > _139117_r.len())) {
			_case_begin_1e65111b6:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138547_a.get()._field_left.len() < _139117_r.len())) {
			_case_begin_1e651123d:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e651112d:;
	};
	jule::Ptr<_1e3ecde2d_MultiAssign> _140217_st = jule::new_ptr<_1e3ecde2d_MultiAssign>(_1e3ecde2d_MultiAssign{._field_r=_138617_rd.get()._field_model});;
	if ((_1e40953bd_tup(_138617_rd.get()._field_kind.ptr()) == nullptr)) {
		_140217_st.get()._field_r=static_cast<jule::Any>(jule::new_ptr<_1e33ebdda_TupleExprModel>(_1e33ebdda_TupleExprModel{._field_datas=_139117_r}));
	};
	{
		auto &expr = _138547_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1e6513e11:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			{
				jule::Ptr<_1e3343c55_AssignLeft> _141121_lexpr = _138547_a.get()._field_left[_141013_i];;
				jule::Ptr<_1e40662e5_Data> _141221_l = nullptr;;
				if (((!(_1e1c3478a_is_ignore_ident(_141121_lexpr.get()._field_ident))) && ((!(_138547_a.get()._field_declarative)) || (!(_1e3eda027_is_new_assign_ident(_self_.ptr(), _141121_lexpr.get()._field_ident)))))) {
					_141221_l=_1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _141121_lexpr.get()._field_expr);
					if ((_141221_l == nullptr)) {
						goto _iter_next_1e6513e11;
					};
				};
				_1e3edac70___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_138547_a,_141121_lexpr,_141221_l,_139117_r[_141013_i]);
			}
			_iter_next_1e6513e11:;
			++it;
			_141013_i++;
			goto _iter_begin_1e6513e11;
		}
		_iter_end_1e6513e11:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_140217_st));;
}



inline void _1e3edb26a_check_multi_assign(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3344294_AssignSt>& _142843_a) {
	{
		auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333e1b2_FnCallExpr>>()) {
			_case_begin_1e6517e48:;
			{
				_1e3edaee5_check_ret_multi_assign(_self_, _142843_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333b566_UnsafeExpr>>()) {
			_case_begin_1e6517ec0:;
			{
				{
					auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1e333b566_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e333e1b2_FnCallExpr>>()) {
						_case_begin_1e65192ce:;
						{
							_1e3edaee5_check_ret_multi_assign(_self_, _142843_a);
							return;;
						}
					}
					_match_end_1e6519279:;
				};
			}
		}
		_match_end_1e6517de3:;
	};
	jule::Slice<jule::Any> _144117_right = _1e3e9dc99_get_expr_models(_142843_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_142843_a.get()._field_left.len() > _144117_right.len())) {
			_case_begin_1e651a115:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142843_a.get()._field_left.len() < _144117_right.len())) {
			_case_begin_1e651a18c:;
			{
				_1e400333c_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e6519eb1:;
	};
	jule::Ptr<_1e33ebdda_TupleExprModel> _145217_right_tuple = jule::new_ptr<_1e33ebdda_TupleExprModel>();;
	jule::Ptr<_1e3ecde2d_MultiAssign> _145417_st = jule::new_ptr<_1e3ecde2d_MultiAssign>(_1e3ecde2d_MultiAssign{._field_r=static_cast<jule::Any>(_145217_right_tuple)});;
	{
		auto &expr = _142843_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1e651c964:;
		if (it != expr.end()) {
			jule::I64 _145813_i = it - expr.begin();
			{
				jule::Ptr<_1e3343c55_AssignLeft> _145921_lexpr = _142843_a.get()._field_left[_145813_i];;
				jule::Ptr<_1e40662e5_Data> _146021_l = nullptr;;
				if (((!(_1e1c3478a_is_ignore_ident(_145921_lexpr.get()._field_ident))) && ((!(_142843_a.get()._field_declarative)) || (!(_1e3eda027_is_new_assign_ident(_self_.ptr(), _145921_lexpr.get()._field_ident)))))) {
					_146021_l=_1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _145921_lexpr.get()._field_expr);
					if ((_146021_l == nullptr)) {
						goto _iter_next_1e651c964;
					};
				};
				jule::Ptr<_1e3339d28_Expr> _147021_expr = jule::new_ptr<_1e3339d28_Expr>(_1e3339d28_Expr{._field_token=_142843_a.get()._field_right.get()._field_token, ._field_kind=_144117_right[_145813_i]});;
				jule::Ptr<_1e4067d63_Eval> _147421_eval = nullptr;;
				if ((_146021_l != nullptr)) {
					_147421_eval=_1e4007d36_evalp(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0),_146021_l.get()._field_kind);
				} else {
					_147421_eval=_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0));
				};
				jule::Ptr<_1e40662e5_Data> _148021_r = _1e40831d0_eval_expr(_147421_eval, _147021_expr);;
				if ((_148021_r == nullptr)) {
					goto _iter_next_1e651c964;
				};
				_145217_right_tuple.get()._field_datas = jule::alloc_for_append(_145217_right_tuple.get()._field_datas,1);_145217_right_tuple.get()._field_datas.__push(_148021_r);;
				_1e3edac70___process_end_part_of_multi_assign(_self_.ptr(), _145417_st,_142843_a,_145921_lexpr,_146021_l,_148021_r);
			}
			_iter_next_1e651c964:;
			++it;
			_145813_i++;
			goto _iter_begin_1e651c964;
		}
		_iter_end_1e651c964:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_145417_st));;
}



inline void _1e3edb4e0_check_assign_st(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3344294_AssignSt> _149339_a) {
	{
		
		if (_1e1c36836_is_postfix_op(_149339_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1e6524570:;
			{
				_1e3ed9c19_check_postfix(_self_, _149339_a);
			}
		}
		else if (((_149339_a.get()._field_left.len() == 1LL) && (!(_149339_a.get()._field_declarative)))) {
			_case_begin_1e6524240:;
			{
				_1e3eda731_check_single_assign(_self_, _149339_a);
			}
		}
		else {
			_case_begin_1e65241c9:;
			{
				_1e3edb26a_check_multi_assign(_self_, _149339_a);
			}
		}
		_match_end_1e6523b68:;
	};
}



inline jule::Ptr<_1e3e547aa_Scope> _1e3edb897_check_case_scope(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3ece538_Case>& _150437_c, jule::Ptr<_1e3345839_ScopeTree>& _150452_tree) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _150517_ssc = _1e3ee0c75_new_child_checker(_self_);;
	_150517_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150437_c));
	return _1e3ed5819_check_child_sc(_self_, _150452_tree,_150517_ssc);
}



inline jule::Ptr<_1e3ece538_Case> _1e3edbd92_check_case(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3ece11a_Match> _151034_m, jule::I64 _151045_i, jule::Ptr<_1e334c0e3_Case> _151057_c, jule::Ptr<_1e40662e5_Data> _151076_expr) {
	jule::Ptr<_1e3ece538_Case> _151117__case = _151034_m.get()._field_cases[_151045_i];;
	_151117__case.get()._field_exprs=jule::Slice<jule::Ptr<_1e40662e5_Data>>::alloc(0LL,_151057_c.get()._field_exprs.len());
	jule::Bool _151317_generic_matched = false;;
	jule::Ptr<_1e4067d63_Eval> _151417_eval = _1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0));;
	{
		auto &expr = _151057_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e6529344:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _151521_e = *it;
			{
				jule::Ptr<_1e40662e5_Data> _151621_d = _1e4082ab4_eval_expr_kind(_151417_eval, _151521_e.get()._field_kind);;
				if ((_151621_d == nullptr)) {
					goto _iter_next_1e6529344;
				};
				if (_151034_m.get()._field_type_match) {
					_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
					if ((_1e3e9a768_count_match_type(_151034_m,_151621_d.get()._field_kind) > 1LL)) {
						_1e400333c_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_151621_d.get()._field_kind.ptr()))}));
					};
					if (_151076_expr.get()._field_kind.get()._field_generic) {
						_151317_generic_matched=(_151317_generic_matched || _1e4091d26_equals(_151076_expr.get()._field_kind, _151621_d.get()._field_kind));
					} else {
						if ((_1e40941d0_tenm(_151076_expr.get()._field_kind.ptr()) != nullptr)) {
							_1e4008ab2_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
						} else {
							jule::Ptr<_1e374ee30_Trait> _153129_trt = _1e4094de5_trt(_151076_expr.get()._field_kind.ptr());;
							if ((_153129_trt != nullptr)) {
								_1e4008ab2_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
							};
						};
					};
					goto _iter_next_1e6529344;
				};
				if (_151621_d.get()._field_decl) {
					_1e400333c_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1e6529344;
				};
				_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
				_1e4053953_AssignTypeChecker _154921_checker = _1e4053953_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_151076_expr.get()._field_kind, ._field_d=_151621_d, ._field_error_token=_151521_e.get()._field_token};;
				_1e4054aca_check(&_154921_checker);
			}
			_iter_next_1e6529344:;
			++it;
			goto _iter_begin_1e6529344;
		}
		_iter_end_1e6529344:;
	};
	if ((((!(_151034_m.get()._field_type_match)) || (!(_151076_expr.get()._field_kind.get()._field_generic))) || _151317_generic_matched)) {
		_151117__case.get()._field_scope=_1e3edb897_check_case_scope(_self_, _151117__case,_151057_c.get()._field_scope);
	};
	return _151117__case;
}



inline void _1e3edc25a_check_cases(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334c7b9_MatchCase>& _156336_m, jule::Ptr<_1e3ece11a_Match> _156355_rm, jule::Ptr<_1e40662e5_Data> _156371_expr) {
	_156355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1e3ece538_Case>>::alloc(0LL,_156336_m.get()._field_cases.len());
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e65333a3:;
		if (it != expr.end()) {
			jule::I64 _156513_i = it - expr.begin();
			{
				jule::Ptr<_1e3ece538_Case> _156621__case = jule::new_ptr<_1e3ece538_Case>(_1e3ece538_Case{._field_owner=_156355_rm, });;
				if ((_156513_i > 0LL)) {
					_156355_rm.get()._field_cases[(_156513_i - 1LL)].get()._field_next=_156621__case;
				};
				_156355_rm.get()._field_cases = jule::alloc_for_append(_156355_rm.get()._field_cases,1);_156355_rm.get()._field_cases.__push(_156621__case);;
			}
			_iter_next_1e65333a3:;
			++it;
			_156513_i++;
			goto _iter_begin_1e65333a3;
		}
		_iter_end_1e65333a3:;
	};
	if (((_156355_rm.get()._field_default != nullptr) && (_156336_m.get()._field_cases.len() > 0LL))) {
		_156355_rm.get()._field_cases[(_156355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_156355_rm.get()._field_default;
	};
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e6536340:;
		if (it != expr.end()) {
			jule::I64 _157914_i = it - expr.begin();
			jule::Ptr<_1e334c0e3_Case> _157921_c = *it;
			{
				_1e3edbd92_check_case(_self_, _156355_rm,_157914_i,_157921_c,_156371_expr);
			}
			_iter_next_1e6536340:;
			++it;
			_157914_i++;
			goto _iter_begin_1e6536340;
		}
		_iter_end_1e6536340:;
	};
}



inline jule::Ptr<_1e3ece538_Case> _1e3edc612_check_default(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3ece11a_Match> _158437_m, jule::Ptr<_1e334b026_Else> _158452_d) {
	jule::Ptr<_1e3ece538_Case> _158517_def = jule::new_ptr<_1e3ece538_Case>(_1e3ece538_Case{._field_owner=_158437_m, });;
	_158517_def.get()._field_scope=_1e3edb897_check_case_scope(_self_, _158517_def,_158452_d.get()._field_scope);
	return _158517_def;
}



inline void _1e3edc887_check_comptime_panic(_1e3ed06d2_ScopeChecker* _self_, jule::Ptr<_1e3e547aa_Scope>& _159240_s) {
	if ((_159240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159713_stmt = _159240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _159713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e6539673:;
			{
				jule::Ptr<_1e40662e5_Data> _160017_d = _159713_stmt.operator jule::Ptr<_1e40662e5_Data>();;
				{
					auto &_match_expr{ _160017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1e653a4a9:;
						{
							jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel> _160321_m = _160017_d.get()._field_model.operator jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
									_case_begin_1e653b499:;
									{
										jule::Ptr<_1e3388a47_Const> _160625_c = _160321_m.get()._field_expr.operator jule::Ptr<_1e3388a47_Const>();;
										if (_1e33e4c7e_is_str(_160625_c.ptr())) {
											_1e400333c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1e33e28d6_read_str(_160625_c.ptr()))}));
										};
									}
								}
								_match_end_1e653b28a:;
							};
						}
					}
					_match_end_1e653a300:;
				};
			}
		}
		_match_end_1e653961d:;
	};
}



inline void _1e3edcba6_push_type_match(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3ece11a_Match> _161539_tm, jule::Ptr<_1e334c7b9_MatchCase>& _161556_m) {
	if (_161539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _161539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1e6539a2a:;
			if (it != expr.end()) {
				jule::Ptr<_1e3ece538_Case> _161925_c = *it;
				{
					if ((_161925_c.get()._field_scope != nullptr)) {
						_1e3edc887_check_comptime_panic(_self_.ptr(), _161925_c.get()._field_scope);
						_161539_tm.get()._field_default=_161925_c;
						_161539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1e6539a2a:;
				++it;
				goto _iter_begin_1e6539a2a;
			}
			_iter_end_1e6539a2a:;
		};
		if ((_161556_m.get()._field_default != nullptr)) {
			_161539_tm.get()._field_cases=nullptr;
			_161539_tm.get()._field_default=_1e3edc612_check_default(_self_, _161539_tm,_161556_m.get()._field_default);
			if ((_161539_tm.get()._field_default != nullptr)) {
				_1e3edc887_check_comptime_panic(_self_.ptr(), _161539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_161539_tm));;
}



inline void _1e3edce2b_check_type_match(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334c7b9_MatchCase>& _163941_m) {
	jule::Ptr<_1e40662e5_Data> _164017_d = _1e4082dc2_eval(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _163941_m.get()._field_expr);;
	if ((_164017_d == nullptr)) {
		return;;
	};
	if (((!(_164017_d.get()._field_kind.get()._field_generic)) && (!(((((_1e409372e_prim(_164017_d.get()._field_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim(_164017_d.get()._field_kind.ptr()).ptr())) || (_1e4094de5_trt(_164017_d.get()._field_kind.ptr()) != nullptr)) || (_1e40941d0_tenm(_164017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _163941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3ece11a_Match> _165117_tm = jule::new_ptr<_1e3ece11a_Match>(_1e3ece11a_Match{._field_expr=_164017_d, ._field_type_match=true, });;
	if (((!(_165117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_163941_m.get()._field_default != nullptr))) {
		_165117_tm.get()._field_default=_1e3edc612_check_default(_self_, _165117_tm,_163941_m.get()._field_default);
	};
	_1e3edc25a_check_cases(_self_, _163941_m,_165117_tm,_164017_d);
	_1e3edcba6_push_type_match(_self_, _165117_tm,_163941_m);
}



inline void _1e3edd1a1_check_common_match(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334c7b9_MatchCase>& _166443_m) {
	jule::Ptr<_1e40662e5_Data> _166517_d = nullptr;;
	if ((_166443_m.get()._field_expr == nullptr)) {
		_166517_d=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__1e33e13c9_new_bool(true)});
		_166517_d.get()._field_model=static_cast<jule::Any>(_166517_d.get()._field_constant);
	} else {
		_166517_d=_1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _166443_m.get()._field_expr);
		if ((_166517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e3ece11a_Match> _167917_mc = jule::new_ptr<_1e3ece11a_Match>(_1e3ece11a_Match{._field_expr=_166517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_167917_mc));;
	if ((_166443_m.get()._field_default != nullptr)) {
		_167917_mc.get()._field_default=_1e3edc612_check_default(_self_, _167917_mc,_166443_m.get()._field_default);
	};
	_1e3edc25a_check_cases(_self_, _166443_m,_167917_mc,_166517_d);
}



inline void _1e3edd426_check_match(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334c7b9_MatchCase> _169135_m) {
	if (_169135_m.get()._field_type_match) {
		_1e3edce2b_check_type_match(_self_, _169135_m);
		return;;
	};
	_1e3edd1a1_check_common_match(_self_, _169135_m);
}



inline void _1e3edd69b_check_fall(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334364a_FallSt> _169930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1e3ed3581_is_deferred(_self_))) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1e3ece538_Case* _170717__case = ((_1e3ece538_Case*)(_self_.get()._field_cse));;
	if ((_170717__case->_field_next == nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e3ece725_FallSt>(_1e3ece725_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170717__case->_field_next))})));;
}



inline jule::Ptr<_1e3ecd48d_BreakSt> _1e3edd9a9_check_break_with_label(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334a344_BreakSt> _171942_b) {
	jule::Ptr<_1e3ecd48d_BreakSt> _172017_brk = _1e3eddcb7_check_plain_break(_self_, _171942_b);;
	if ((_172017_brk == nullptr)) {
		return nullptr;
	};
	_172017_brk.get()._field_it=0LLU;
	_172017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1e3eceaee_ScopeLabel> _173017_label = _1e3e7c629_find_label_parent(_171942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_173017_label == nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_173017_label.get()._field_used=true;
	if (((_173017_label.get()._field_pos + 1LL) >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _174313_i = (_173017_label.get()._field_pos + 1LL);;
	if ((_174313_i >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _174721_st = _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_174313_i];;
		{
			auto &_match_expr{ _174721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
				_case_begin_1e6554748:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1e3eccbda_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
				_case_begin_1e6557c9b:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1e3ecd0b4_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
				_case_begin_1e6557d12:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1e3eccdc7_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
				_case_begin_1e6557d78:;
				{
					_172017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1e3ece11a_Match>()));
				}
			}
			else {
				_case_begin_1e6557b47:;
				{
					_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1e6557a6a:;
		};
	};
	if ((_172017_brk.get()._field_it != 0LLU)) {
		if ((!(_1e3ed8e05_check_valid_break_label(_self_, _172017_brk.get()._field_it)))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_172017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1e3ed8e05_check_valid_break_label(_self_, _172017_brk.get()._field_mtch)))) {
			_1e400333c_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _172017_brk;
}



inline jule::Ptr<_1e3ecd48d_BreakSt> _1e3eddcb7_check_plain_break(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334a344_BreakSt> _177737_b) {
	if (_1e3ed3581_is_deferred(_self_)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _178317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178317_scope.get()._field_it == 0LLU) && (_178317_scope.get()._field_cse == 0LLU)) && (_178317_scope.get()._field_parent != nullptr)) && (_178317_scope.get()._field_owner == nullptr))) {
			_case_begin_1e655e148:;
			{
				_178317_scope=_178317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178317_scope.get()._field_it != 0LLU)) {
			_case_begin_1e655e1c0:;
			{
				return jule::new_ptr<_1e3ecd48d_BreakSt>(_1e3ecd48d_BreakSt{._field_it=_178317_scope.get()._field_it, });
			}
		}
		else if ((_178317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1e655e247:;
			{
				return jule::new_ptr<_1e3ecd48d_BreakSt>(_1e3ecd48d_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e3ece538_Case*)(_178317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1e655e07c:;
	};
	_1e400333c_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e3ede03c_check_break(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e334a344_BreakSt> _179931_b) {
	if ((_179931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1e3ecd48d_BreakSt> _180121_brk = _1e3edd9a9_check_break_with_label(_self_, _179931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180121_brk));;
		return;;
	};
	jule::Ptr<_1e3ecd48d_BreakSt> _180617_brk = _1e3eddcb7_check_plain_break(_self_, _179931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180617_brk));;
}



inline void _1e3ede2b2_check_ret(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e33486b6_RetSt> _181033_r) {
	if (_1e3ed3581_is_deferred(_self_)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _181033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e3ece912_RetSt> _181517_rt = jule::new_ptr<_1e3ece912_RetSt>(_1e3ece912_RetSt{._field_func=_1e3ed37e5_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_181517_rt));;
	jule::Ptr<_1e405e6d9_RetTypeChecker> _182017_rtc = jule::new_ptr<_1e405e6d9_RetTypeChecker>(_1e405e6d9_RetTypeChecker{._field_sc=_self_, ._field_f=_181517_rt.get()._field_func, ._field_error_token=_181033_r.get()._field_token, });;
	jule::Bool _182513_ok = _1e40605ca_check(_182017_rtc.ptr(), _181033_r.get()._field_expr);;
	if ((!(_182513_ok))) {
		return;;
	};
	if (((_181033_r.get()._field_expr == nullptr) && (_182017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181517_rt.get()._field_vars=_182017_rtc.get()._field_vars;
	if ((_181033_r.get()._field_expr != nullptr)) {
		_181517_rt.get()._field_expr=_182017_rtc.get()._field_model;
	};
}



inline void _1e3ede537_check_use_expr(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e333a6b9_UseExpr> _184134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1e3ed3581_is_deferred(_self_)) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1e400333c_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1e3ede7ac_check_node(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Any& _185735_node) {
	{
		auto &_match_expr{ _185735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1e3345839_ScopeTree>>()) {
			_case_begin_1e656c71c:;
			{
				_1e3ed5d9c_check_anon_scope(_self_, _185735_node.operator jule::Ptr<_1e3345839_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334830e_VarDecl>>()) {
			_case_begin_1e656c211:;
			{
				_1e3ed4ab0_check_var_decl(_self_, _185735_node.operator jule::Ptr<_1e334830e_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334bb70_TypeAliasDecl>>()) {
			_case_begin_1e656c61d:;
			{
				_1e3ed4d35_check_type_alias_decl(_self_, _185735_node.operator jule::Ptr<_1e334bb70_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3339d28_Expr>>()) {
			_case_begin_1e656c95e:;
			{
				_1e3ed6441_check_expr(_self_, _185735_node.operator jule::Ptr<_1e3339d28_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333b91d_CoExpr>>()) {
			_case_begin_1e656cb18:;
			{
				_1e3ed66b6_check_co_expr(_self_, _185735_node.operator jule::Ptr<_1e333b91d_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334b499_Conditional>>()) {
			_case_begin_1e656cb7e:;
			{
				_1e3ed7057_check_conditional(_self_, _185735_node.operator jule::Ptr<_1e334b499_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3348d26_Iter>>()) {
			_case_begin_1e656cbe5:;
			{
				_1e3ed87b7_check_iter(_self_, _185735_node.operator jule::Ptr<_1e3348d26_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334a6eb_ContSt>>()) {
			_case_begin_1e656cc5b:;
			{
				_1e3ed9499_check_cont(_self_, _185735_node.operator jule::Ptr<_1e334a6eb_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3342ea7_LabelSt>>()) {
			_case_begin_1e656ccc2:;
			{
				_1e3ed971e_check_label(_self_, _185735_node.operator jule::Ptr<_1e3342ea7_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334335e_GotoSt>>()) {
			_case_begin_1e656cd38:;
			{
				_1e3ed9994_push_goto(_self_, _185735_node.operator jule::Ptr<_1e334335e_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3344294_AssignSt>>()) {
			_case_begin_1e656cd9e:;
			{
				_1e3edb4e0_check_assign_st(_self_, _185735_node.operator jule::Ptr<_1e3344294_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334c7b9_MatchCase>>()) {
			_case_begin_1e656ce15:;
			{
				_1e3edd426_check_match(_self_, _185735_node.operator jule::Ptr<_1e334c7b9_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334364a_FallSt>>()) {
			_case_begin_1e656ce7b:;
			{
				_1e3edd69b_check_fall(_self_, _185735_node.operator jule::Ptr<_1e334364a_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334a344_BreakSt>>()) {
			_case_begin_1e656cee2:;
			{
				_1e3ede03c_check_break(_self_, _185735_node.operator jule::Ptr<_1e334a344_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33486b6_RetSt>>()) {
			_case_begin_1e656d058:;
			{
				_1e3ede2b2_check_ret(_self_, _185735_node.operator jule::Ptr<_1e33486b6_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333a6b9_UseExpr>>()) {
			_case_begin_1e656d0be:;
			{
				_1e3ede537_check_use_expr(_self_, _185735_node.operator jule::Ptr<_1e333a6b9_UseExpr>());
			}
		}
		else {
			_case_begin_1e656c387:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1e656c2aa:;
	};
}



inline void _1e3ede988_check_result(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	_1e334522e_Stmt _189717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e333a6b9_UseExpr>>()) {
			_case_begin_1e657722c:;
			{
				jule::Ptr<_1e333a6b9_UseExpr> _190021_ue = _189717_stmt._field_data.operator jule::Ptr<_1e333a6b9_UseExpr>();;
				jule::Ptr<_1e40662e5_Data> _190121_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _190021_ue.get()._field_expr);;
				if ((_190121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_190121_d));;
				jule::Ptr<_1e405e6d9_RetTypeChecker> _190621_rtc = jule::new_ptr<_1e405e6d9_RetTypeChecker>(_1e405e6d9_RetTypeChecker{._field_sc=_self_, ._field_types=_1e3405135_types(_self_.get()._field_result.ptr()), ._field_error_token=_190021_ue.get()._field_expr.get()._field_token, });;
				_1e40605ca_check(_190621_rtc.ptr(), _190021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3339d28_Expr>>()) {
			_case_begin_1e6577293:;
			{
				jule::Ptr<_1e3339d28_Expr> _191321_expr = _189717_stmt._field_data.operator jule::Ptr<_1e3339d28_Expr>();;
				jule::Ptr<_1e40662e5_Data> _191421_d = _1e40831d0_eval_expr(_1e4008144_eval(_self_.get()._field_s, jule::Trait<_1e40abe84_Lookup>(_self_, 0)), _191321_expr);;
				if ((_191421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
						_case_begin_1e657c012:;
						{
							jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel> _192025_m = _191421_d.get()._field_model.operator jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>();;
							_1e3ed61bb_process_error_call(_self_, _192025_m,_191321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_191421_d));;
						}
					}
					else {
						_case_begin_1e657b819:;
						{
							return;;
						}
					}
					_match_end_1e657b7b4:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334335e_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1e334a344_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1e334a6eb_ContSt>>() || _match_expr.type_is<jule::Ptr<_1e33486b6_RetSt>>()) {
			_case_begin_1e6576902:;
			{
				_1e3ede7ac_check_node(_self_, _189717_stmt._field_data);
			}
		}
		else {
			_case_begin_1e657688b:;
			{
				_1e3ede7ac_check_node(_self_, _189717_stmt._field_data);
				return;;
			}
		}
		_match_end_1e6576715:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e3edeb64_check_tree(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194217_n)--;
	};
	for (; (_self_.get()._field_i < _194217_n); (_self_.get()._field_i)++) {
		{
			_1e334522e_Stmt _195021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1e3ede7ac_check_node(_self_, _195021_stmt._field_data);
			if (_1e3ed331c_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1e657ee05:;
	}
	_iter_end_1e657ee05:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1e3ede988_check_result(_self_);
	};
}



inline void _1e3edee83_check_goto(_1e3ed06d2_ScopeChecker* _self_, jule::Ptr<_1e3ececdb_ScopeGoto>& _196134_gt, jule::Ptr<_1e3eceaee_ScopeLabel>& _196155_label) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _196217_gtsc = _196134_gt.get()._field_scope;;
	while (((_196217_gtsc.get()._field_child_index - 1LL) > _196155_label.get()._field_scope.get()._field_child_index)) {
		{
			_196217_gtsc=_196217_gtsc.get()._field_parent;
		}
	_iter_next_1e658303a:;
	}
	_iter_end_1e658303a:;;
	jule::I64 _196717_n = 0LL;;
	if ((_196217_gtsc.get()._field_scope == _196155_label.get()._field_scope.get()._field_scope)) {
		if ((_196134_gt.get()._field_pos > _196155_label.get()._field_pos)) {
			return;;
		};
		_196717_n=_196134_gt.get()._field_pos;
	};
	jule::I64 _198017_i = (_196155_label.get()._field_pos - 1LL);;
	if ((_196717_n == 0LL)) {
		{
			auto &expr = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1e6585636:;
			if (it != expr.end()) {
				jule::I64 _198317_j = it - expr.begin();
				jule::Any _198320_stmt = *it;
				{
					if (_1e3e9957a_stmt_is_goto_scope(_198320_stmt,_196217_gtsc.get()._field_scope)) {
						_196717_n=_198317_j;
						goto _iter_end_1e6585636;
					};
				}
				_iter_next_1e6585636:;
				++it;
				_198317_j++;
				goto _iter_begin_1e6585636;
			}
			_iter_end_1e6585636:;
		};
	};
	for (; (_198017_i >= _196717_n); (_198017_i)--) {
		{
			jule::Any _199321_stmt = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_198017_i];;
			if (_1e3e9c913_stmt_is_def(_199321_stmt)) {
				_1e400333c_push_err((*_self_)._field_s.ptr(), _196134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_196134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1e6585207:;
	}
	_iter_end_1e6585207:;;
}



inline void _1e3ee015e_check_gotos(_1e3ed06d2_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1e658754a:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ececdb_ScopeGoto> _200221_gt = *it;
			{
				jule::Ptr<_1e3eceaee_ScopeLabel> _200321_label = _1e3ed4483_find_label_all(&(*_self_), _200221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_200321_label == nullptr)) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _200221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1e658754a;
				};
				_200321_label.get()._field_used=true;
				_1e3edee83_check_goto(&(*_self_), _200221_gt,_200321_label);
			}
			_iter_next_1e658754a:;
			++it;
			goto _iter_begin_1e658754a;
		}
		_iter_end_1e658754a:;
	};
}



inline void _1e3ee033a_check_labels(_1e3ed06d2_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1e6588826:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eceaee_ScopeLabel> _201516_l = *it;
			{
				if ((!(_201516_l.get()._field_used))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _201516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1e6588826:;
			++it;
			goto _iter_begin_1e6588826;
		}
		_iter_end_1e6588826:;
	};
}



inline void _1e3ee0516_check_vars(_1e3ed06d2_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1e658b065:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _202316_v = *it;
			{
				if (((((!(_202316_v.get()._field_used)) && (!(_1e1c3478a_is_ignore_ident(_202316_v.get()._field_ident)))) && (!(_1e1c34a32_is_anon_ident(_202316_v.get()._field_ident)))) && (_202316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _202316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202316_v.get()._field_ident)}));
				};
			}
			_iter_next_1e658b065:;
			++it;
			goto _iter_begin_1e658b065;
		}
		_iter_end_1e658b065:;
	};
}



inline void _1e3ee06e2_check_aliases(_1e3ed06d2_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1e658cc15:;
		if (it != expr.end()) {
			jule::Ptr<_1e4090929_TypeAlias> _203116_a = *it;
			{
				if ((((!(_203116_a.get()._field_used)) && (!(_1e1c3478a_is_ignore_ident(_203116_a.get()._field_ident)))) && (!(_1e1c34a32_is_anon_ident(_203116_a.get()._field_ident))))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _203116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_203116_a.get()._field_ident)}));
				};
			}
			_iter_next_1e658cc15:;
			++it;
			goto _iter_begin_1e658cc15;
		}
		_iter_end_1e658cc15:;
	};
}



inline void _1e3ee0a11_check(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_, jule::Ptr<_1e3345839_ScopeTree>& _203930_tree, jule::Ptr<_1e3e547aa_Scope>& _203953_s) {
	_203953_s.get()._field_deferred=_203930_tree.get()._field_deferred;
	_203953_s.get()._field_unsafety=_203930_tree.get()._field_unsafety;
	jule::I64 _204313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203930_tree;
	_self_.get()._field_scope=_203953_s;
	_1e3edeb64_check_tree(_self_);
	if ((_204313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e3ee0516_check_vars(_self_.ptr());
		_1e3ee06e2_check_aliases(_self_.ptr());
		if (_1e3ed2dcc_is_root(_self_.ptr())) {
			_1e3ee015e_check_gotos(_self_.ptr());
			_1e3ee033a_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3ee0c75_new_child_checker(jule::Ptr<_1e3ed06d2_ScopeChecker> _self_) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _206317_base = _1e3e66723_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_206317_base.get()._field_parent=_self_;
	_206317_base.get()._field_labels=_self_.get()._field_labels;
	_206317_base.get()._field_gotos=_self_.get()._field_gotos;
	_206317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _206317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ed06d2_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e3ee1c65_check_cdef(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
			_case_begin_1e65955d0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e34019a0_Fn>().get()._field_cpp_linked) {
					goto _match_end_1e6595822;
				};
				goto _case_begin_1e6595877;
			}
		}
		else {
			_case_begin_1e6595877:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e6595822:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e3ee1eda_check_typedef(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e65986b0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e3318840_Struct>().get()._field_cpp_linked) {
					goto _match_end_1e6598072;
				};
				goto _case_begin_1e65980c7;
			}
		}
		else {
			_case_begin_1e65980c7:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e6598072:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e3ee2260_check_derive(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e659a5c4:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e3318840_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1e659a7e4;
				};
				goto _case_begin_1e659a849;
			}
		}
		else {
			_case_begin_1e659a849:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e659a7e4:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1e659e2cb:;
		}
		else {
			_case_begin_1e659a97b:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1e659dd8b:;
	};
}



inline void _1e3ee24d5_check_namespace(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e65a0343:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e3318840_Struct>().get()._field_cpp_linked))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
			_case_begin_1e65a07d8:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e34019a0_Fn>().get()._field_cpp_linked))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e65a084e:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e401a92b_Var>().get()._field_cpp_linked))) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1e65a06a6:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e65a0651:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e1c31ee6_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e65a8dda:;
			{
				if ((_1e408b1e9_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e330242d_Directive> _11625_typedef = jule::new_ptr<_1e330242d_Directive>(_1e330242d_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1e330242d_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1e65a8868:;
	};
}



inline void _1e3ee275a_check_deprecated(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e65ab8c1:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e3318840_Struct>().get()._field_cpp_linked) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
			_case_begin_1e65aa903:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e34019a0_Fn>().get()._field_cpp_linked) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e65ab173:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e401a92b_Var>().get()._field_cpp_linked) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1e65aaace:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e65aa98b:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e1c31ee6_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1e3ee29d0_check_test(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
			_case_begin_1e65b3972:;
			{
				jule::Ptr<_1e34019a0_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1e34019a0_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1e340264e_is_init(_16717_f.ptr())))) && (!(_1e34023da_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1e65b4489;
				};
				if (_1e3402176_is_method(_16717_f.ptr())) {
					_1e400333c_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1e65b4489;
				};
				goto _case_begin_1e65b44de;
			}
		}
		else {
			_case_begin_1e65b44de:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e65b4489:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1e400333c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e3ee2c55_check_directive(_1e3ee1825_DirectiveChecker* _self_, jule::Ptr<_1e330242d_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1e65b8ceb:;
			{
				_1e3ee1c65_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1e65b84c1:;
			{
				_1e3ee1eda_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1e65b8537:;
			{
				_1e3ee2260_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1e65b859d:;
			{
				_1e3ee24d5_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1e65b8614:;
			{
				_1e3ee275a_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1e65b925d:;
			{
				_1e3ee29d0_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1e65b92c4:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1e65b845a:;
			{
				_1e400333c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1e65b83a0:;
	};
}



inline void _1e3ee2e31_check(_1e3ee1825_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1e65bba02:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _20821_d = *it;
			{
				_1e3ee2c55_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1e65bba02:;
			++it;
			goto _iter_begin_1e65bba02;
		}
		_iter_end_1e65bba02:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ee1825_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ee7a4b_find_package(_1e3ee752e_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3ee7d59_select_package(_1e3ee752e_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e401a92b_Var> _1e3ee8211_find_var(_1e3ee752e_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _1e3ee50ba_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e3ee85b8_find_type_alias(_1e3ee752e_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _1e3ee551b_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_1e3318840_Struct> _1e3ee8970_find_struct(_1e3ee752e_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _1e3ee5917_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_1e34019a0_Fn> _1e3ee8d27_find_fn(_1e3ee752e_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _1e3ee5d79_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_1e374ee30_Trait> _1e3ee9135_find_trait(_1e3ee752e_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _1e3ee6187_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_1e34189c8_Enum> _1e3ee9443_find_enum(_1e3ee752e_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _1e3ee64c8_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ee9751_find_type_enum(_1e3ee752e_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_1e3ee9ae7_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _1e3ee683b_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _1e3ee9ae7_is_lookupable(_1e3ee752e_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1e3ee9e05_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1e3ee9e05_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1e3ee9e05_exist_ident(_1e3ee752e_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1e65d19e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_1e65d19e5:;
			++it;
			goto _iter_begin_1e65d19e5;
		}
		_iter_end_1e65d19e5:;
	};
	return false;
}



inline jule::Bool _1e3eea18b_is_accessible_via_selection(_1e3ee752e_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1e3ee9e05_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3ee752e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3eea961_find_package(_1e3eea488_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e3eeac6e_select_package(_1e3eea488_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e401a92b_Var> _1e3eeb126_find_var(_1e3eea488_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _1e3ee50ba_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e3eeb4cd_find_type_alias(_1e3eea488_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _1e3ee551b_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_1e3318840_Struct> _1e3eeb885_find_struct(_1e3eea488_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _1e3ee5917_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_1e34019a0_Fn> _1e3eebc3c_find_fn(_1e3eea488_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _1e3ee5d79_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_1e374ee30_Trait> _1e3eec04a_find_trait(_1e3eea488_Package* _self_, jule::Str _33333_ident) {
	return _1e3ee6187_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_1e34189c8_Enum> _1e3eec358_find_enum(_1e3eea488_Package* _self_, jule::Str _33932_ident) {
	return _1e3ee64c8_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3eec666_find_type_enum(_1e3eea488_Package* _self_, jule::Str _34537_ident) {
	return _1e3ee683b_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3eea488_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4000b97_find_package(_1e400067a_Sema* _self_, jule::Str _22435_ident) {
	return _1e4061983_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4000ea5_select_package(_1e400067a_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _23437_selector) {
	return _1e4061c91_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1e401a92b_Var> _1e400135c_find_var(_1e400067a_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1e401a92b_Var> _24617_v = _1e3ee50ba_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e660440d:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1e660440d;
				};
				_24617_v=_1e3ee8211_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1e660440d:;
			++it;
			goto _iter_begin_1e660440d;
		}
		_iter_end_1e660440d:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e4001714_find_type_alias(_1e400067a_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1e4090929_TypeAlias> _27317_ta = _1e3ee551b_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e6606e16:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1e6606e16;
				};
				_27317_ta=_1e3ee85b8_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1e6606e16:;
			++it;
			goto _iter_begin_1e6606e16;
		}
		_iter_end_1e6606e16:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3318840_Struct> _1e4001abb_find_struct(_1e400067a_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1e3318840_Struct> _30017_s = _1e3ee5917_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e66098ec:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1e66098ec;
				};
				_30017_s=_1e3ee8970_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1e66098ec:;
			++it;
			goto _iter_begin_1e66098ec;
		}
		_iter_end_1e66098ec:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34019a0_Fn> _1e4001e73_find_fn(_1e400067a_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1e34019a0_Fn> _32717_f = _1e3ee5d79_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e660c3c2:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1e660c3c2;
				};
				_32717_f=_1e3ee8d27_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1e660c3c2:;
			++it;
			goto _iter_begin_1e660c3c2;
		}
		_iter_end_1e660c3c2:;
	};
	return nullptr;
}



inline jule::Ptr<_1e374ee30_Trait> _1e4002281_find_trait(_1e400067a_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1e374ee30_Trait> _35417_t = _1e3ee6187_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e660ea45:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1e660ea45;
				};
				_35417_t=_1e3ee9135_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1e660ea45:;
			++it;
			goto _iter_begin_1e660ea45;
		}
		_iter_end_1e660ea45:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34189c8_Enum> _1e400258e_find_enum(_1e400067a_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1e34189c8_Enum> _38117_e = _1e3ee64c8_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e66122a6:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1e66122a6;
				};
				_38117_e=_1e3ee9443_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1e66122a6:;
			++it;
			goto _iter_begin_1e66122a6;
		}
		_iter_end_1e66122a6:;
	};
	return nullptr;
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e400289c_find_type_enum(_1e400067a_Sema* _self_, jule::Str _40637_ident) {
	jule::Ptr<_1e37eea6d_TypeEnum> _40817_e = _1e3ee683b_find_type_enum_in_package((*_self_)._field_files,_40637_ident);;
	if ((_40817_e != nullptr)) {
		return _40817_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e6614a17:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _41421_imp = *it;
			{
				if ((!(_1e3eee0a2_imp_is_lookupable(_41421_imp,_40637_ident)))) {
					goto _iter_next_1e6614a17;
				};
				_40817_e=_1e3ee9751_find_type_enum(_41421_imp.ptr(), _40637_ident);
				if (((_40817_e != nullptr) && _1e4003a13_is_accessible_define(&(*_self_), _40817_e.get()._field_public,_40817_e.get()._field_token))) {
					return _40817_e;
				};
			}
			_iter_next_1e6614a17:;
			++it;
			goto _iter_begin_1e6614a17;
		}
		_iter_end_1e6614a17:;
	};
	return nullptr;
}



inline jule::Bool _1e4002bee_is_flag(_1e400067a_Sema* _self_, jule::I64 _43022_flags) {
	return (((*_self_)._field_flags & _43022_flags) == _43022_flags);
}



inline void _1e4002e74_set_current_file(_1e400067a_Sema* _self_, jule::Ptr<_1e4061466_SymbolTable> _43239_f) {
	(*_self_)._field_file=_43239_f;
}



inline void _1e400333c_push_err(_1e400067a_Sema* _self_, jule::Ptr<_1e1c31ee6_Token> _43427_token, jule::Str _43442_fmt, jule::Slice<jule::Any> _43455_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e3eedc61_compiler_err(_43427_token,true,_43442_fmt,jule::Any(_43455_args)));;
}



inline void _1e400365b_push_suggestion(_1e400067a_Sema* _self_, jule::Str _43934_fmt, jule::Slice<jule::Any> _43947_args) {
	{
		_1e40001e6_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43934_fmt,jule::Any(_43947_args));
	};
}



inline jule::Bool _1e4003a13_is_accessible_define(_1e400067a_Sema* _self_, jule::Bool _44435_public, jule::Ptr<_1e1c31ee6_Token> _44449_token) {
	return ((_44435_public || (_44449_token.get()._field_file == nullptr)) || (_1e1c37c77_dir((*_self_)._field_file.get()._field_file.ptr()) == _1e1c37c77_dir(_44449_token.get()._field_file.ptr())));
}



inline jule::Bool _1e4003e64_is_duplicated_ident(_1e400067a_Sema* _self_, jule::Uintptr _45134_itself, jule::Str _45151_ident, jule::Bool _45163_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e661b6de:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> &_45216_f = *it;
			{
				if (_1e4064964_is_duplicated_ident(_45216_f.ptr(), _45134_itself,_45151_ident,_45163_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _45216_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1e661c0a2:;
					if (it != expr.end()) {
						jule::Ptr<_1e3ee752e_ImportInfo> &_45720_imp = *it;
						{
							{
								auto &expr = _45720_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1e661ce4e:;
								if (it != expr.end()) {
									jule::Ptr<_1e1c31ee6_Token> &_45824_selected = *it;
									{
										if ((_45824_selected.get()._field_kind == _45151_ident)) {
											return true;
										};
									}
									_iter_next_1e661ce4e:;
									++it;
									goto _iter_begin_1e661ce4e;
								}
								_iter_end_1e661ce4e:;
							};
						}
						_iter_next_1e661c0a2:;
						++it;
						goto _iter_begin_1e661c0a2;
					}
					_iter_end_1e661c0a2:;
				};
			}
			_iter_next_1e661b6de:;
			++it;
			goto _iter_begin_1e661b6de;
		}
		_iter_end_1e661b6de:;
	};
	return false;
}



inline void _1e4004283_check_directives(jule::Ptr<_1e400067a_Sema> _self_, jule::Slice<jule::Ptr<_1e330242d_Directive>>& _46841_d, jule::Any _46867_o) {
	_1e3ee1825_DirectiveChecker _46917_dc = _1e3ee1825_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e330242d_Directive>>>)((&(_46841_d)))), ._field_o=jule::Any(_46867_o)};;
	_1e3ee2e31_check(&_46917_dc);
}



inline jule::Bool _1e40046d4_check_generic_quantity(_1e400067a_Sema* _self_, jule::I64 _47741_required, jule::I64 _47756_given, jule::Ptr<_1e1c31ee6_Token> _47768_token) {
	jule::Bool _47785_ok = jule::Bool();
	{
		
		if (((_47741_required == 0LL) && (_47756_given > 0LL))) {
			_case_begin_1e6625a28:;
			{
				_1e400333c_push_err(&(*_self_), _47768_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if (((_47741_required > 0LL) && (_47756_given == 0LL))) {
			_case_begin_1e6625b05:;
			{
				_1e400333c_push_err(&(*_self_), _47768_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required < _47756_given)) {
			_case_begin_1e6625b6b:;
			{
				_1e400333c_push_err(&(*_self_), _47768_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required > _47756_given)) {
			_case_begin_1e662584c:;
			{
				_1e400333c_push_err(&(*_self_), _47768_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else {
			_case_begin_1e66253b8:;
			{
				_47785_ok = true;
				return _47785_ok;
			}
		}
		_match_end_1e66252db:;
	};
}



inline jule::Bool _1e4004aad_is_duplicated_import_selection(_1e400067a_Sema* _self_, jule::Uintptr _49645_itself, jule::Str _49662_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e6628aa3:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> &_49716_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49716_imp) == _49645_itself)) {
					goto _iter_end_1e6628aa3;
				};
				if (_1e3ee9e05_exist_ident(_49716_imp.ptr(), _49662_ident)) {
					return true;
				};
			}
			_iter_next_1e6628aa3:;
			++it;
			goto _iter_begin_1e6628aa3;
		}
		_iter_end_1e6628aa3:;
	};
	return false;
}



inline jule::Any _1e4004e76_get_import_def(_1e400067a_Sema* _self_, jule::Str _51129_ident, jule::Ptr<_1e3ee752e_ImportInfo>& _51146_imp) {
	if ((_1e4119ca0_find_package_builtin_def(_51146_imp.get()._field_link_path,_51129_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _51146_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e662a3ce:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _51621_f = *it;
			{
				;
				jule::Any _51821_def = _1e4064513_def_by_ident(_51621_f.ptr(), _51129_ident,false);;
				if ((_51821_def != nullptr)) {
					return jule::Any(_51821_def);
				};
			}
			_iter_next_1e662a3ce:;
			++it;
			goto _iter_begin_1e662a3ce;
		}
		_iter_end_1e662a3ce:;
	};
	return nullptr;
}



inline jule::Bool _1e40052a6_check_import_selections(_1e400067a_Sema* _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _52747_imp) {
	jule::Bool _52767_ok = jule::Bool();
	_52767_ok=true;
	{
		auto &expr = _52747_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1e662c986:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> _52916_ident = *it;
			{
				if ((_52916_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1e662c986;
				};
				if (_1e4004aad_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52747_imp)),_52916_ident.get()._field_kind)) {
					_1e400333c_push_err(&(*_self_), _52916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
					_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52767_ok=false;
					goto _iter_next_1e662c986;
				};
				jule::Any _54121_def = _1e4004e76_get_import_def(&(*_self_), _52916_ident.get()._field_kind,_52747_imp);;
				{
					auto &_match_expr{ _54121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1e662d228:;
						{
							goto _iter_next_1e662c986;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
						_case_begin_1e66304e4:;
						{
							jule::Ptr<_1e401a92b_Var> _54725_v = _54121_def.operator jule::Ptr<_1e401a92b_Var>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _54725_v.get()._field_public,_54725_v.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
						_case_begin_1e663055a:;
						{
							jule::Ptr<_1e4090929_TypeAlias> _55225_ta = _54121_def.operator jule::Ptr<_1e4090929_TypeAlias>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _55225_ta.get()._field_public,_55225_ta.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
						_case_begin_1e663114e:;
						{
							jule::Ptr<_1e3318840_Struct> _55725_strct = _54121_def.operator jule::Ptr<_1e3318840_Struct>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _55725_strct.get()._field_public,_55725_strct.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e374ee30_Trait>>()) {
						_case_begin_1e66311b5:;
						{
							jule::Ptr<_1e374ee30_Trait> _56225_t = _54121_def.operator jule::Ptr<_1e374ee30_Trait>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _56225_t.get()._field_public,_56225_t.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e34189c8_Enum>>()) {
						_case_begin_1e663122b:;
						{
							jule::Ptr<_1e34189c8_Enum> _56725_e = _54121_def.operator jule::Ptr<_1e34189c8_Enum>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _56725_e.get()._field_public,_56725_e.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e37eea6d_TypeEnum>>()) {
						_case_begin_1e6631292:;
						{
							jule::Ptr<_1e37eea6d_TypeEnum> _57225_e = _54121_def.operator jule::Ptr<_1e37eea6d_TypeEnum>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _57225_e.get()._field_public,_57225_e.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
						_case_begin_1e6631308:;
						{
							jule::Ptr<_1e34019a0_Fn> _57725_f = _54121_def.operator jule::Ptr<_1e34019a0_Fn>();;
							if (_1e4003a13_is_accessible_define(&(*_self_), _57725_f.get()._field_public,_57725_f.get()._field_token)) {
								goto _iter_next_1e662c986;
							};
						}
					}
					else {
						_case_begin_1e6630291:;
						{
							_1e400333c_push_err(&(*_self_), _52916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
							_52767_ok=false;
							goto _iter_next_1e662c986;
						}
					}
					_match_end_1e662edea:;
				};
				_1e400333c_push_err(&(*_self_), _52916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
				_1e400365b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52767_ok=false;
			}
			_iter_next_1e662c986:;
			++it;
			goto _iter_begin_1e662c986;
		}
		_iter_end_1e662c986:;
	};
	return _52767_ok;
}



inline jule::Bool _1e40055e7_is_use_alias_duplication(_1e400067a_Sema* _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _59444_imp) {
	if ((_59444_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e6638ec0:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _59921_imp2 = *it;
			{
				if ((_59921_imp2 == _59444_imp)) {
					goto _iter_end_1e6638ec0;
				};
				if ((_59921_imp2.get()._field_alias == _59444_imp.get()._field_alias)) {
					return true;
				};
				if (((_59921_imp2.get()._field_ident == _59921_imp2.get()._field_link_path) && (_59921_imp2.get()._field_ident == _59444_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1e6638ec0:;
			++it;
			goto _iter_begin_1e6638ec0;
		}
		_iter_end_1e6638ec0:;
	};
	return false;
}



inline jule::Bool _1e4005916_check_import(_1e400067a_Sema* _self_, jule::Ptr<_1e3ee752e_ImportInfo>& _61536_imp) {
	if ((_61536_imp.get()._field_cpp_linked || (_61536_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1e40055e7_is_use_alias_duplication(&(*_self_), _61536_imp)) {
		_1e400333c_push_err(&(*_self_), _61536_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61536_imp.get()._field_alias)}));
		_1e400365b_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61536_imp.get()._field_duplicate))) {
		jule::Ptr<_1e400067a_Sema> _62621_sema = jule::new_ptr<_1e400067a_Sema>(_1e400067a_Sema{._field_flags=(*_self_)._field_flags});;
		_1e401794a_check(_62621_sema, _61536_imp.get()._field_package.get()._field_files);
		if ((_62621_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62621_sema.get()._field_errors);
			_62621_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1e40052a6_check_import_selections(&(*_self_), _61536_imp);
}



inline void _1e4005ae2_check_imports(_1e400067a_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e663cb50:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _64021_file = *it;
			{
				_1e4002e74_set_current_file(&(*_self_), _64021_file);
				{
					auto &expr = _64021_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1e66408cd:;
					if (it != expr.end()) {
						jule::Ptr<_1e3ee752e_ImportInfo> _64325_imp = *it;
						{
							jule::Bool _64421_ok = _1e4005916_check_import(&(*_self_), _64325_imp);;
							if ((!(_64421_ok))) {
								_1e400333c_push_err(&(*_self_), _64325_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_64325_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1e66408cd:;
						++it;
						goto _iter_begin_1e66408cd;
					}
					_iter_end_1e66408cd:;
				};
			}
			_iter_next_1e663cb50:;
			++it;
			goto _iter_begin_1e663cb50;
		}
		_iter_end_1e663cb50:;
	};
}



inline void _1e4005cbd_impl_file_impls(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1e664100a:;
		if (it != expr.end()) {
			jule::Ptr<_1e35092a0_Impl> _65621_imp = *it;
			{
				_1e400eb40_impl_impl(_self_, _65621_imp);
			}
			_iter_next_1e664100a:;
			++it;
			goto _iter_begin_1e664100a;
		}
		_iter_end_1e664100a:;
	};
}



inline void _1e4005e99_impl_impls(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e664278c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _66221_file = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _66221_file);
				_1e4005cbd_impl_file_impls(_self_);
			}
			_iter_next_1e664278c:;
			++it;
			goto _iter_begin_1e664278c;
		}
		_iter_end_1e664278c:;
	};
}



inline void _1e4006175_check_enums(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e6643d21:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _66921_file = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _66921_file);
				_1e400c126_check_enum_decls(_self_);
			}
			_iter_next_1e6643d21:;
			++it;
			goto _iter_begin_1e6643d21;
		}
		_iter_end_1e6643d21:;
	};
}



inline jule::Bool _1e40065c6_check_type_with_refers(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4095775_TypeSymbol>& _67747_t, jule::Trait<_1e40abe84_Lookup> _67813_l, jule::Ptr<_1e409db02_Referencer> _67828_referencer) {
	jule::Bool _67855_ok = jule::Bool();
	if (_1e4095b71_checked(_67747_t.ptr())) {
		_67855_ok = true;
		return _67855_ok;
	};
	_1e409e84a_TypeChecker _68217_tc = _1e409e84a_TypeChecker{._field_s=_self_, ._field_lookup=_67813_l, ._field_referencer=_67828_referencer, };;
	{
		auto &_match_expr{ _67813_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e6645e11:;
			{
				jule::Ptr<_1e3ed06d2_ScopeChecker> _69021_hard = _1e3ed3a59_get_hard_root(_67813_l.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());;
				_68217_tc._field_refers=_69021_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_1e6645d89:;
	};
	if (((_67828_referencer != nullptr) && (_67828_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67828_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
				_case_begin_1e6647374:;
				{
					_68217_tc._field_owner_alias=_67828_referencer.get()._field_owner.operator jule::Ptr<_1e4090929_TypeAlias>();
				}
			}
			_match_end_1e664731e:;
		};
	};
	_1e40a6d3b_check(&_68217_tc, _67747_t);
	_67855_ok = _1e4095b71_checked(_67747_t.ptr());
	return _67855_ok;
}



inline jule::Bool _1e400697d_check_type(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4095775_TypeSymbol>& _71035_t, jule::Trait<_1e40abe84_Lookup> _71055_l) {
	return _1e40065c6_check_type_with_refers(_self_, _71035_t,_71055_l,nullptr);
}



inline jule::Ptr<_1e4091661_TypeKind> _1e4006e01_build_type_with_generics(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3335807_TypeDecl>& _71649_t, jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _71713_generics, jule::Ptr<_1e3406e17_ReferenceStack> _71741_refers) {
	jule::Ptr<_1e409e84a_TypeChecker> _71817_tc = jule::new_ptr<_1e409e84a_TypeChecker>(_1e409e84a_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e40abe84_Lookup>(_self_, 3), ._field_refers=_71741_refers, ._field_use_generics=_71713_generics, });;
	return _1e40a6ab6_check_decl(_71817_tc.ptr(), _71649_t);
}



inline jule::Ptr<_1e4091661_TypeKind> _1e4007220_build_type(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3335807_TypeDecl>& _72835_t) {
	return _1e4006e01_build_type_with_generics(_self_, _72835_t,nullptr,nullptr);
}



inline jule::Ptr<_1e4091661_TypeKind> _1e400752d_select_type(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3335807_TypeDecl>& _73336_t) {
	jule::Ptr<_1e409e84a_TypeChecker> _73417_tc = jule::new_ptr<_1e409e84a_TypeChecker>(_1e409e84a_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e40abe84_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1e40a6ab6_check_decl(_73417_tc.ptr(), _73336_t);
}



inline jule::Ptr<_1e4067d63_Eval> _1e400797e_evalpd(jule::Ptr<_1e400067a_Sema> _self_, jule::Trait<_1e40abe84_Lookup> _74430_l, jule::Ptr<_1e4091661_TypeKind> _74445_p, jule::Ptr<_1e401a92b_Var> _74463_owner) {
	jule::Ptr<_1e4067d63_Eval> _74517_e = jule::new_ptr<_1e4067d63_Eval>(_1e4067d63_Eval{._field_s=_self_, ._field_lookup=_74430_l, ._field_owner=_74463_owner, });;
	{
		auto &_match_expr{ _74430_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e664ce4b:;
			{
				_74517_e.get()._field_unsafety=_1e3ed2b68_is_unsafe(_74430_l.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());
			}
		}
		_match_end_1e664cde6:;
	};
	_74517_e.get()._field_prefix=_74445_p;
	return _74517_e;
}



inline jule::Ptr<_1e4067d63_Eval> _1e4007d36_evalp(jule::Ptr<_1e400067a_Sema> _self_, jule::Trait<_1e40abe84_Lookup> _76229_l, jule::Ptr<_1e4091661_TypeKind> _76244_p) {
	return _1e400797e_evalpd(_self_, _76229_l,_76244_p,nullptr);
}



inline jule::Ptr<_1e4067d63_Eval> _1e4008144_eval(jule::Ptr<_1e400067a_Sema> _self_, jule::Trait<_1e40abe84_Lookup> _76728_l) {
	return _1e4007d36_evalp(_self_, _76728_l,nullptr);
}



inline jule::Bool _1e400863e_check_assign_type(jule::Ptr<_1e400067a_Sema> _self_, jule::Bool _77137_dest_is_ref, jule::Ptr<_1e4091661_TypeKind>& _77161_dest, jule::Ptr<_1e40662e5_Data>& _77214_d, jule::Ptr<_1e1c31ee6_Token> _77228_error_token) {
	if (_77214_d.get()._field_decl) {
		_1e400333c_push_err(_self_.ptr(), _77228_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77137_dest_is_ref) {
		if ((!(_1e4091d26_equals(_77161_dest, _77214_d.get()._field_kind)))) {
			_1e400333c_push_err(_self_.ptr(), _77228_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_77161_dest.ptr())),jule::Any(_1e4091a18_to_str(_77214_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1e4053953_AssignTypeChecker> _78321_atc = jule::new_ptr<_1e4053953_AssignTypeChecker>(_1e4053953_AssignTypeChecker{._field_s=_self_, ._field_dest=_77161_dest, ._field_d=_77214_d, ._field_error_token=_77228_error_token});;
		jule::Bool _78917_ok = _1e4054aca_check(_78321_atc.ptr());;
		if ((!(_78917_ok))) {
			return false;
		};
	};
	if (((!(_1e4066ba8_is_const(_77214_d.ptr()))) || (_1e409372e_prim(_77161_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79917_kind = _1e409372e_prim(_77161_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e3ecb9ca_is_sig_int(_79917_kind)) {
			_case_begin_1e66547d2:;
			{
				_1e33e360c_set_i64(_77214_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_77214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e3ecbcb6_is_unsig_int(_79917_kind)) {
			_case_begin_1e6654859:;
			{
				_1e33e3882_set_u64(_77214_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_77214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e3ecc37c_is_float(_79917_kind)) {
			_case_begin_1e66548d1:;
			{
				_1e33e4102_set_f64(_77214_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e33e3387_as_f64(_77214_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1e6654716:;
	};
	return true;
}



inline jule::Bool _1e4008ab2_check_type_compatibility(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4091661_TypeKind>& _81349_dest, jule::Ptr<_1e4091661_TypeKind>& _81414_src, jule::Ptr<_1e1c31ee6_Token>& _81435_error_token) {
	if ((_81414_src == nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_81349_dest.ptr())),jule::Any(_1e4091a18_to_str(_81414_src.ptr()))}));
		return false;
	};
	if ((_1e40953bd_tup(_81414_src.ptr()) != nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_81349_dest.ptr())),jule::Any(_1e4091a18_to_str(_81414_src.ptr()))}));
		return false;
	};
	_1e4051d2a_TypeCompatibilityChecker _82817_tcc = _1e4051d2a_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81349_dest, ._field_src=_81414_src, ._field_error_token=_81435_error_token};;
	if (_1e4053414_check(&_82817_tcc)) {
		return true;
	};
	_1e400333c_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_81349_dest.ptr())),jule::Any(_1e4091a18_to_str(_81414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1e4091661_TypeKind> _1e4008e9c_build_non_generic_type_kind(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3335807_TypeDecl>& _84952_ast, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>& _85014_generics) {
	jule::Ptr<_1e409e84a_TypeChecker> _85117_tc = jule::new_ptr<_1e409e84a_TypeChecker>(_1e409e84a_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e40abe84_Lookup>(_self_, 3), ._field_ignore_generics=_85014_generics, });;
	return _1e40a6ab6_check_decl(_85117_tc.ptr(), _84952_ast);
}



inline void _1e4009255_build_fn_non_generic_type_kinds(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3404651_FnIns>& _85956_f) {
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _86017_generics = nullptr;;
	if (_1e3402176_is_method(_85956_f.get()._field_decl.ptr())) {
		_86017_generics=jule::append(_85956_f.get()._field_decl.get()._field_generics,_85956_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86017_generics=_85956_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _85956_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e665d203:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> _86721_p = *it;
			{
				if ((!(_1e3400790_is_self(_86721_p.get()._field_decl.ptr())))) {
					_86721_p.get()._field_kind=_1e4008e9c_build_non_generic_type_kind(_self_, _86721_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
				};
			}
			_iter_next_1e665d203:;
			++it;
			goto _iter_begin_1e665d203;
		}
		_iter_end_1e665d203:;
	};
	if ((!(_1e3401e12_is_void(_85956_f.get()._field_decl.ptr())))) {
		_85956_f.get()._field_result=_1e4008e9c_build_non_generic_type_kind(_self_, _85956_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
	};
}



inline jule::Ptr<_1e3404651_FnIns> _1e4009596_get_trait_check_fn_kind(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _87748_f) {
	if ((_87748_f.get()._field_instances.len() == 1LL)) {
		return _87748_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1e3404651_FnIns> _88117_ins = _1e3402d8b_instance_force(_87748_f);;
	jule::Ptr<_1e409e84a_TypeChecker> _88317_tc = jule::new_ptr<_1e409e84a_TypeChecker>(_1e409e84a_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e40abe84_Lookup>(_self_, 3), });;
	{
		auto &expr = _88117_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e6661cd9:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> _88721_p = *it;
			{
				if ((!(_1e3400790_is_self(_88721_p.get()._field_decl.ptr())))) {
					_88721_p.get()._field_kind=_1e40a6ab6_check_decl(_88317_tc.ptr(), _88721_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1e6661cd9:;
			++it;
			goto _iter_begin_1e6661cd9;
		}
		_iter_end_1e6661cd9:;
	};
	if ((!(_1e3401e12_is_void(_87748_f.ptr())))) {
		_88117_ins.get()._field_result=_1e40a6ab6_check_decl(_88317_tc.ptr(), _87748_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88117_ins;
}



inline jule::Bool _1e40098b5_reload_fn_ins_types(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3404651_FnIns>& _89944_f) {
	jule::Bool _89957_ok = jule::Bool();
	if ((_1e3405399_is_builtin(_89944_f.ptr()) || _1e340560d_is_anon(_89944_f.ptr()))) {
		_89957_ok = true;
		return _89957_ok;
	};
	jule::Ptr<_1e400067a_Sema> _90417_sema = _89944_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1e4061466_SymbolTable> _90617_old = _89944_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e4002e74_set_current_file(_89944_f.get()._field_decl.get()._field_sema.ptr(), _90617_old);
	});;
	jule::Ptr<_1e4061466_SymbolTable> _90817_file = _1e3eeec84_find_file(_89944_f.get()._field_decl.get()._field_sema.get()._field_files,_89944_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_90817_file != nullptr)) {
		_1e4002e74_set_current_file(_89944_f.get()._field_decl.get()._field_sema.ptr(), _90817_file);
	};
	jule::I64 _91317_size = _89944_f.get()._field_generics.len();;
	if (((_89944_f.get()._field_decl != nullptr) && (_89944_f.get()._field_decl.get()._field_owner != nullptr))) {
		_91317_size+=_89944_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _91817_generics = jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>::alloc(0LL,_91317_size);;
	{
		auto &expr = _89944_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e6668b8c:;
		if (it != expr.end()) {
			jule::I64 _92014_i = it - expr.begin();
			jule::Ptr<_1e4091661_TypeKind> _92021_g = *it;
			{
				_91817_generics = jule::alloc_for_append(_91817_generics,1);_91817_generics.__push(jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_ident=_89944_f.get()._field_decl.get()._field_generics[_92014_i].get()._field_ident, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_92021_g}), }));;
			}
			_iter_next_1e6668b8c:;
			++it;
			_92014_i++;
			goto _iter_begin_1e6668b8c;
		}
		_iter_end_1e6668b8c:;
	};
	if (((_89944_f.get()._field_decl != nullptr) && (_89944_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1e3352093_StructIns> _93021_owner = _89944_f.get()._field_owner;;
		{
			auto &expr = _93021_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1e666a771:;
			if (it != expr.end()) {
				jule::I64 _93118_i = it - expr.begin();
				jule::Ptr<_1e4091661_TypeKind> _93125_g = *it;
				{
					_91817_generics = jule::alloc_for_append(_91817_generics,1);_91817_generics.__push(jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_ident=_93021_owner.get()._field_decl.get()._field_generics[_93118_i].get()._field_ident, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_93125_g}), }));;
				}
				_iter_next_1e666a771:;
				++it;
				_93118_i++;
				goto _iter_begin_1e666a771;
			}
			_iter_end_1e666a771:;
		};
	};
	_89957_ok=true;
	{
		auto &expr = _89944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e666b3ba:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> _94221_p = *it;
			{
				if (_1e3400790_is_self(_94221_p.get()._field_decl.ptr())) {
					if (_1e3400a04_is_ref(_94221_p.get()._field_decl.ptr())) {
						_94221_p.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e4099647_Sptr>(_1e4099647_Sptr{._field_elem=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_89944_f.get()._field_owner, 0)})}), 7)});
					} else {
						_94221_p.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_89944_f.get()._field_owner, 0)});
					};
				} else {
					_94221_p.get()._field_kind=_1e4006e01_build_type_with_generics(_90417_sema, _94221_p.get()._field_decl.get()._field_kind.get()._field_decl,_91817_generics,_89944_f.get()._field_refers);
					if ((_94221_p.get()._field_kind != nullptr)) {
						_94221_p.get()._field_kind.get()._field_variadic=_94221_p.get()._field_decl.get()._field_variadic;
						if ((_94221_p.get()._field_decl.get()._field_reference && (!(_1e40a88cb_is_valid_for_ref(_94221_p.get()._field_kind))))) {
							_1e400333c_push_err(_self_.ptr(), _94221_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_94221_p.get()._field_kind.ptr()))}));
						};
					} else {
						_89957_ok=false;
					};
				};
			}
			_iter_next_1e666b3ba:;
			++it;
			goto _iter_begin_1e666b3ba;
		}
		_iter_end_1e666b3ba:;
	};
	if ((!(_1e3401e12_is_void(_89944_f.get()._field_decl.ptr())))) {
		_89944_f.get()._field_result=_1e4006e01_build_type_with_generics(_90417_sema, _89944_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_91817_generics,_89944_f.get()._field_refers);
		_89957_ok=((_89944_f.get()._field_result != nullptr) && _89957_ok);
	};
	if ((_90417_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_90417_sema.get()._field_errors);
		_90417_sema.get()._field_errors=nullptr;
	};
	return _89957_ok;
}



inline jule::Bool _1e4009d49_check_ref_validity_for_init_expr(jule::Ptr<_1e400067a_Sema> _self_, jule::Bool _98352_left_mut, jule::Ptr<_1e40662e5_Data>& _98373_d, jule::Ptr<_1e1c31ee6_Token>& _98388_error_token) {
	{
		auto &_match_expr{ _98373_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e66741b4:;
			{
				goto _match_end_1e6673e1c;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
			_case_begin_1e667422a:;
			{
				jule::Ptr<_1e33eb02c_TraitSubIdentExprModel> _98821_model = _98373_d.get()._field_model.operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>();;
				if ((!(_1e3eed7bb_is_valid_model_for_ref(_98821_model.get()._field_expr)))) {
					_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_98821_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e6674291:;
			{
				jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _99421_model = _98373_d.get()._field_model.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>();;
				if ((!(_1e3eed7bb_is_valid_model_for_ref(_99421_model.get()._field_expr.get()._field_model)))) {
					_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99421_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eba11_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>>()) {
			_case_begin_1e6674a00:;
			{
				_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
			_case_begin_1e6674a66:;
			{
				jule::Ptr<_1e33e9723_UnaryExprModel> _100421_unary = _98373_d.get()._field_model.operator jule::Ptr<_1e33e9723_UnaryExprModel>();;
				if ((_100421_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1e3eed7bb_is_valid_model_for_ref(_98373_d.get()._field_model)))) {
						_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1e6673e1c;
				};
				goto _case_begin_1e66740b5;
			}
		}
		else {
			_case_begin_1e66740b5:;
			{
				_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1e6673e1c:;
	};
	if ((_98352_left_mut && (!(_98373_d.get()._field_mutable)))) {
		_1e400333c_push_err(_self_.ptr(), _98388_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1e400a443_check_validity_for_init_expr(jule::Ptr<_1e400067a_Sema> _self_, jule::Bool _102548_left_mut, jule::Bool _102564_left_ref, jule::Ptr<_1e4091661_TypeKind>& _102610_left_kind, jule::Ptr<_1e40662e5_Data>& _102637_d, jule::Ptr<_1e1c31ee6_Token>& _102652_error_token) {
	if (((_102548_left_mut && (!(_102637_d.get()._field_mutable))) && _1e4092a19_mutable(_102637_d.get()._field_kind.ptr()))) {
		_1e400333c_push_err(_self_.ptr(), _102652_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_102637_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_102564_left_ref) {
		if ((!(_1e4009d49_check_ref_validity_for_init_expr(_self_, _102548_left_mut,_102637_d,_102652_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1e4053953_AssignTypeChecker> _103717_atc = jule::new_ptr<_1e4053953_AssignTypeChecker>(_1e4053953_AssignTypeChecker{._field_s=_self_, ._field_d=_102637_d, ._field_error_token=_102652_error_token});;
	return _1e4054129_check_validity(_103717_atc.ptr());
}



inline jule::Bool _1e400a7ea_check_type_alias_decl_kind(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4090929_TypeAlias>& _104551_ta, jule::Trait<_1e40abe84_Lookup> _104571_l) {
	jule::Bool _104584_ok = jule::Bool();
	jule::Ptr<_1e4061466_SymbolTable> _104617_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e4002e74_set_current_file(_self_.ptr(), _104617_old);
	});;
	if ((_104551_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1e4061466_SymbolTable> _105121_file = _1e3eeec84_find_file(_self_.get()._field_files,_104551_ta.get()._field_token.get()._field_file);;
		if ((_105121_file != nullptr)) {
			_1e4002e74_set_current_file(_self_.ptr(), _105121_file);
		};
	};
	_104584_ok=_1e40065c6_check_type_with_refers(_self_, _104551_ta.get()._field_kind,_104571_l,jule::new_ptr<_1e409db02_Referencer>(_1e409db02_Referencer{._field_ident=_104551_ta.get()._field_ident, ._field_owner=jule::Any(_104551_ta), ._field_refs=(&(_104551_ta.get()._field_refers))}));
	if (((_104584_ok && (_1e4094444_arr(_104551_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1e4094444_arr(_104551_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1e400333c_push_err(_self_.ptr(), _104551_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_104584_ok=false;
	};
	return _104584_ok;
}



inline void _1e400ab2a_check_type_alias_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4090929_TypeAlias>& _106846_ta, jule::Trait<_1e40abe84_Lookup> _106866_l) {
	if (_1e1c3478a_is_ignore_ident(_106846_ta.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _106846_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e400a7ea_check_type_alias_decl_kind(_self_, _106846_ta,_106866_l);
}



inline void _1e400adc2_check_type_alias_decl_dup(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e4090929_TypeAlias>& _107650_ta) {
	if (_1e1c3478a_is_ignore_ident(_107650_ta.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _107650_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_107650_ta)),_107650_ta.get()._field_ident,_107650_ta.get()._field_cpp_linked)) {
		_1e400333c_push_err(_self_.ptr(), _107650_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_107650_ta.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e400a7ea_check_type_alias_decl_kind(_self_, _107650_ta,jule::Trait<_1e40abe84_Lookup>(_self_, 3));
}



inline jule::Bool _1e400b147_check_type_alias_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _108844_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1e6686dca:;
		if (it != expr.end()) {
			jule::Ptr<_1e4090929_TypeAlias> _108921_ta = *it;
			{
				_1e400adc2_check_type_alias_decl_dup(_self_, _108921_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_108844_ok = false;
					return _108844_ok;
				};
			}
			_iter_next_1e6686dca:;
			++it;
			goto _iter_begin_1e6686dca;
		}
		_iter_end_1e6686dca:;
	};
	_108844_ok = true;
	return _108844_ok;
}



inline void _1e669832b_check_enum_items_dup(_1e400067a_Sema* _self_, jule::Slice<jule::Ptr<_1e35972d8_EnumItem>> _110042_items) {
	{
		auto &expr = _110042_items;
		auto it = expr.begin();
		_iter_begin_1e66996d4:;
		if (it != expr.end()) {
			jule::Ptr<_1e35972d8_EnumItem> &_110116_item = *it;
			{
				if (_110116_item.get()._field_ident.empty()) {
					goto _iter_next_1e66996d4;
				} else if (_1e1c3478a_is_ignore_ident(_110116_item.get()._field_ident)) {
					_1e400333c_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110042_items;
						auto it = expr.begin();
						_iter_begin_1e669a40a:;
						if (it != expr.end()) {
							jule::Ptr<_1e35972d8_EnumItem> &_110724_citem = *it;
							{
								if ((_110116_item == _110724_citem)) {
									goto _iter_end_1e669a40a;
								} else if ((_110116_item.get()._field_ident == _110724_citem.get()._field_ident)) {
									_1e400333c_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110116_item.get()._field_ident)}));
									_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1e669a40a;
								};
							}
							_iter_next_1e669a40a:;
							++it;
							goto _iter_begin_1e669a40a;
						}
						_iter_end_1e669a40a:;
					};
				};
			}
			_iter_next_1e66996d4:;
			++it;
			goto _iter_begin_1e66996d4;
		}
		_iter_end_1e66996d4:;
	};
}

inline void _1e66a3bc7_check_enum_items_dup(_1e400067a_Sema* _self_, jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>> _110042_items) {
	{
		auto &expr = _110042_items;
		auto it = expr.begin();
		_iter_begin_1e66a503b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3584902_TypeEnumItem> &_110116_item = *it;
			{
				if (_110116_item.get()._field_ident.empty()) {
					goto _iter_next_1e66a503b;
				} else if (_1e1c3478a_is_ignore_ident(_110116_item.get()._field_ident)) {
					_1e400333c_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110042_items;
						auto it = expr.begin();
						_iter_begin_1e66a5c62:;
						if (it != expr.end()) {
							jule::Ptr<_1e3584902_TypeEnumItem> &_110724_citem = *it;
							{
								if ((_110116_item == _110724_citem)) {
									goto _iter_end_1e66a5c62;
								} else if ((_110116_item.get()._field_ident == _110724_citem.get()._field_ident)) {
									_1e400333c_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110116_item.get()._field_ident)}));
									_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1e66a5c62;
								};
							}
							_iter_next_1e66a5c62:;
							++it;
							goto _iter_begin_1e66a5c62;
						}
						_iter_end_1e66a5c62:;
					};
				};
			}
			_iter_next_1e66a503b:;
			++it;
			goto _iter_begin_1e66a503b;
		}
		_iter_end_1e66a503b:;
	};
}



inline void _1e400b642_check_enum_items_str(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34189c8_Enum>& _112045_e) {
	jule::Ptr<_1e4067d63_Eval> _112117_eval = _1e4008144_eval(_self_, jule::Trait<_1e40abe84_Lookup>(_self_, 3));;
	{
		auto &expr = _112045_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1e6688c01:;
		if (it != expr.end()) {
			jule::Ptr<_1e35972d8_EnumItem> _112221_item = *it;
			{
				if (_1e34b41b1_auto_expr(_112221_item.ptr())) {
					_112221_item.get()._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_data=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_constant=static__1e33e160a_new_str(_112221_item.get()._field_ident)})});
					_112221_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_112221_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1e40662e5_Data> _113125_d = _1e40831d0_eval_expr(_112117_eval, _112221_item.get()._field_value.get()._field_expr);;
					if ((_113125_d == nullptr)) {
						goto _iter_next_1e6688c01;
					};
					if ((!(_1e4066ba8_is_const(_113125_d.ptr())))) {
						_1e400333c_push_err(_self_.ptr(), _112221_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e400863e_check_assign_type(_self_, false,_112045_e.get()._field_kind.get()._field_kind,_113125_d,_112221_item.get()._field_token);
					_112221_item.get()._field_value.get()._field_data=_113125_d;
				};
			}
			_iter_next_1e6688c01:;
			++it;
			goto _iter_begin_1e6688c01;
		}
		_iter_end_1e6688c01:;
	};
}



inline void _1e400b8b7_check_enum_items_int(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34189c8_Enum>& _114645_e) {
	jule::Ptr<_1e4096138_Prim> _114713_prim = _1e409372e_prim(_114645_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _114817_max = static_cast<jule::U64>(_1e3ec6b7e_max(_1e409649b_to_str(_114713_prim.ptr())));;
	jule::Ptr<_1e4067d63_Eval> _114917_eval = _1e4008144_eval(_self_, jule::Trait<_1e40abe84_Lookup>(_self_, 3));;
	{
		auto &expr = _114645_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1e668e201:;
		if (it != expr.end()) {
			jule::I64 _115014_i = it - expr.begin();
			jule::Ptr<_1e35972d8_EnumItem> _115021_item = *it;
			{
				if ((_114817_max == 0LLU)) {
					_1e400333c_push_err(_self_.ptr(), _115021_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_114817_max)--;
				};
				if (_1e34b41b1_auto_expr(_115021_item.ptr())) {
					_115021_item.get()._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_data=jule::new_ptr<_1e40662e5_Data>()});
					{
						
						if (_1e3ecb9ca_is_sig_int(_1e409649b_to_str(_114713_prim.ptr()))) {
							_case_begin_1e6691786:;
							{
								_115021_item.get()._field_value.get()._field_data.get()._field_constant=static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_114817_max - (_114817_max - static_cast<jule::U64>(_115014_i))))));
							}
						}
						else {
							_case_begin_1e66913e0:;
							{
								_115021_item.get()._field_value.get()._field_data.get()._field_constant=static__1e33e1297_new_u64(static_cast<jule::U64>((_114817_max - (_114817_max - static_cast<jule::U64>(_115014_i)))));
							}
						}
						_match_end_1e6691379:;
					};
					_115021_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_115021_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1e40662e5_Data> _116825_d = _1e40831d0_eval_expr(_114917_eval, _115021_item.get()._field_value.get()._field_expr);;
					if ((_116825_d == nullptr)) {
						goto _iter_next_1e668e201;
					};
					if ((!(_1e4066ba8_is_const(_116825_d.ptr())))) {
						_1e400333c_push_err(_self_.ptr(), _115021_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e400863e_check_assign_type(_self_, false,_114645_e.get()._field_kind.get()._field_kind,_116825_d,_115021_item.get()._field_token);
					_115021_item.get()._field_value.get()._field_data=_116825_d;
				};
			}
			_iter_next_1e668e201:;
			++it;
			_115014_i++;
			goto _iter_begin_1e668e201;
		}
		_iter_end_1e668e201:;
	};
}



inline void _1e400bb3c_check_enum_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34189c8_Enum>& _118340_e) {
	if (_1e1c3478a_is_ignore_ident(_118340_e.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118340_e)),_118340_e.get()._field_ident,false)) {
		_1e400333c_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118340_e.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118340_e.get()._field_items.len() == 0LL)) {
		_1e400333c_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118340_e.get()._field_ident)}));
	};
	_1e669832b_check_enum_items_dup(_self_.ptr(), _118340_e.get()._field_items);
	if ((_118340_e.get()._field_kind != nullptr)) {
		if ((!(_1e400697d_check_type(_self_, _118340_e.get()._field_kind,jule::Trait<_1e40abe84_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118340_e.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1e4096138_Prim> _121017_t = _1e409372e_prim(_118340_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_121017_t == nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e40990e7_is_str(_121017_t.ptr())) {
			_case_begin_1e669e9c5:;
			{
				_1e400b642_check_enum_items_str(_self_, _118340_e);
			}
		}
		else if (_1e3ecc05d_is_int(_1e409649b_to_str(_121017_t.ptr()))) {
			_case_begin_1e669e794:;
			{
				_1e400b8b7_check_enum_items_int(_self_, _118340_e);
			}
		}
		else {
			_case_begin_1e669dc27:;
			{
				_1e400333c_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e669da90:;
	};
}



inline void _1e400bdb2_check_type_enum_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e37eea6d_TypeEnum>& _122745_e) {
	if (_1e1c3478a_is_ignore_ident(_122745_e.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122745_e)),_122745_e.get()._field_ident,false)) {
		_1e400333c_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122745_e.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122745_e.get()._field_items.len() == 0LL)) {
		_1e400333c_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122745_e.get()._field_ident)}));
		return;;
	};
	_1e66a3bc7_check_enum_items_dup(_self_.ptr(), _122745_e.get()._field_items);
	{
		auto &expr = _122745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1e66a1158:;
		if (it != expr.end()) {
			jule::Ptr<_1e3584902_TypeEnumItem> _124121_item = *it;
			{
				if ((_124121_item.get()._field_kind == nullptr)) {
					_1e400333c_push_err(_self_.ptr(), _124121_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1e66a1158;
				};
				jule::Bool _124617_ok = _1e400697d_check_type(_self_, _124121_item.get()._field_kind,jule::Trait<_1e40abe84_Lookup>(_self_, 3));;
				if ((!(_124617_ok))) {
					goto _iter_next_1e66a1158;
				};
				jule::Ptr<_1e4096138_Prim> _125017_p = _1e409372e_prim(_124121_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_125017_p != nullptr) && _1e409935b_is_any(_125017_p.ptr()))) {
					_1e400333c_push_err(_self_.ptr(), _124121_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e66a1158:;
			++it;
			goto _iter_begin_1e66a1158;
		}
		_iter_end_1e66a1158:;
	};
	if ((_122745_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_1e3584902_TypeEnumItem> _125621_item = _122745_e.get()._field_items[0LL];;
		_1e4091661_TypeKind _125717_tk = _1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_122745_e, 4)};;
		if (((_125621_item.get()._field_kind.get()._field_kind != nullptr) && _1e4091d26_equals(_125621_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_1e4091661_TypeKind>)((&(_125717_tk))))))) {
			_1e400333c_push_err(_self_.ptr(), _125621_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1e367a4a9_to_str(_122745_e.ptr()))}));
		};
	};
}



inline jule::Bool _1e400c126_check_enum_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _126738_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1e66ad440:;
		if (it != expr.end()) {
			jule::Ptr<_1e34189c8_Enum> _126821_e = *it;
			{
				_1e400bb3c_check_enum_decl(_self_, _126821_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_126738_ok = false;
					return _126738_ok;
				};
			}
			_iter_next_1e66ad440:;
			++it;
			goto _iter_begin_1e66ad440;
		}
		_iter_end_1e66ad440:;
	};
	_126738_ok = true;
	return _126738_ok;
}



inline jule::Bool _1e400c38a_check_type_enum_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _128043_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1e66aeb4a:;
		if (it != expr.end()) {
			jule::Ptr<_1e37eea6d_TypeEnum> _128121_e = *it;
			{
				_1e400bdb2_check_type_enum_decl(_self_, _128121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128043_ok = false;
					return _128043_ok;
				};
			}
			_iter_next_1e66aeb4a:;
			++it;
			goto _iter_begin_1e66aeb4a;
		}
		_iter_end_1e66aeb4a:;
	};
	_128043_ok = true;
	return _128043_ok;
}



inline jule::Bool _1e400c698_check_decl_generics(_1e400067a_Sema* _self_, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>& _129239_generics) {
	jule::Bool _129272_ok = jule::Bool();
	_129272_ok=true;
	{
		auto &expr = _129239_generics;
		auto it = expr.begin();
		_iter_begin_1e66b14a9:;
		if (it != expr.end()) {
			jule::I64 _129413_i = it - expr.begin();
			jule::Ptr<_1e3342b00_GenericDecl> &_129416_g = *it;
			{
				if (_1e1c3478a_is_ignore_ident(_129416_g.get()._field_ident)) {
					_1e400333c_push_err(&(*_self_), _129416_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129272_ok=false;
					goto _iter_next_1e66b14a9;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _129239_generics;
					auto it = expr.begin();
					_iter_begin_1e66b2554:;
					if (it != expr.end()) {
						jule::I64 _130317_j = it - expr.begin();
						jule::Ptr<_1e3342b00_GenericDecl> &_130320_ct = *it;
						{
							{
								
								if ((_130317_j >= _129413_i)) {
									_case_begin_1e66b3da2:;
									{
										goto _iter_end_1e66b2554;
									}
								}
								else if ((_129416_g.get()._field_ident == _130320_ct.get()._field_ident)) {
									_case_begin_1e66b3e29:;
									{
										_1e400333c_push_err(&(*_self_), _129416_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129416_g.get()._field_ident)}));
										_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129272_ok=false;
										goto _iter_end_1e66b2554;
									}
								}
								_match_end_1e66b3c81:;
							};
						}
						_iter_next_1e66b2554:;
						++it;
						_130317_j++;
						goto _iter_begin_1e66b2554;
					}
					_iter_end_1e66b2554:;
				};
			}
			_iter_next_1e66b14a9:;
			++it;
			_129413_i++;
			goto _iter_begin_1e66b14a9;
		}
		_iter_end_1e66b14a9:;
	};
	return _129272_ok;
}



inline jule::Bool _1e400c9c8_check_fn_decl_params_dup(_1e400067a_Sema* _self_, jule::Ptr<_1e34019a0_Fn>& _131944_f) {
	jule::Bool _131954_ok = jule::Bool();
	_131954_ok=true;
	_julec_label_check:;
	{
		auto &expr = _131944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e66b62a0:;
		if (it != expr.end()) {
			jule::I64 _132213_i = it - expr.begin();
			jule::Ptr<_1e3400163_Param> &_132216_p = *it;
			{
				{
					auto &expr = _131944_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1e66b701a:;
					if (it != expr.end()) {
						jule::Ptr<_1e3342b00_GenericDecl> &_132420_g = *it;
						{
							if ((_132216_p.get()._field_ident == _132420_g.get()._field_ident)) {
								_131954_ok=false;
								_1e400333c_push_err(&(*_self_), _132216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132216_p.get()._field_ident)}));
								_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1e66b62a0;
							};
						}
						_iter_next_1e66b701a:;
						++it;
						goto _iter_begin_1e66b701a;
					}
					_iter_end_1e66b701a:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _131944_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1e66b7a32:;
					if (it != expr.end()) {
						jule::I64 _133417_j = it - expr.begin();
						jule::Ptr<_1e3400163_Param> &_133420_jp = *it;
						{
							{
								
								if ((_133417_j >= _132213_i)) {
									_case_begin_1e66b979d:;
									{
										goto _iter_end_1e66b7a32;
									}
								}
								else if ((_1e1c34a32_is_anon_ident(_132216_p.get()._field_ident) || _1e1c34a32_is_anon_ident(_133420_jp.get()._field_ident))) {
									_case_begin_1e66b9825:;
									{
										goto _iter_end_1e66b7a32;
									}
								}
								else if ((_132216_p.get()._field_ident == _133420_jp.get()._field_ident)) {
									_case_begin_1e66b989c:;
									{
										_131954_ok=false;
										_1e400333c_push_err(&(*_self_), _132216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132216_p.get()._field_ident)}));
										_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1e66b62a0;
									}
								}
								_match_end_1e66b966b:;
							};
						}
						_iter_next_1e66b7a32:;
						++it;
						_133417_j++;
						goto _iter_begin_1e66b7a32;
					}
					_iter_end_1e66b7a32:;
				};
			}
			_iter_next_1e66b62a0:;
			++it;
			_132213_i++;
			goto _iter_begin_1e66b62a0;
		}
		_iter_end_1e66b62a0:;
	};
	return _131954_ok;
}



inline jule::Bool _1e400cd19_check_fn_decl_result_dup(_1e400067a_Sema* _self_, jule::Ptr<_1e34019a0_Fn>& _135344_f) {
	jule::Bool _135354_ok = jule::Bool();
	_135354_ok=true;
	if (_1e3401e12_is_void(_135344_f.ptr())) {
		return _135354_ok;
	};
	{
		auto &expr = _135344_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1e66bc471:;
		if (it != expr.end()) {
			jule::I64 _136013_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> &_136016_v = *it;
			{
				if ((_1e1c3478a_is_ignore_ident(_136016_v.get()._field_kind) || _1e1c34a32_is_anon_ident(_136016_v.get()._field_kind))) {
					goto _iter_next_1e66bc471;
				};
				{
					auto &expr = _135344_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1e66bdbc0:;
					if (it != expr.end()) {
						jule::Ptr<_1e3342b00_GenericDecl> &_136520_g = *it;
						{
							if ((_136016_v.get()._field_kind == _136520_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e66bdbc0:;
						++it;
						goto _iter_begin_1e66bdbc0;
					}
					_iter_end_1e66bdbc0:;
				};
				{
					auto &expr = _135344_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1e66bee46:;
					if (it != expr.end()) {
						jule::Ptr<_1e3400163_Param> &_137120_p = *it;
						{
							if ((_136016_v.get()._field_kind == _137120_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e66bee46:;
						++it;
						goto _iter_begin_1e66bee46;
					}
					_iter_end_1e66bee46:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135344_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1e66c11de:;
					if (it != expr.end()) {
						jule::I64 _137917_j = it - expr.begin();
						jule::Ptr<_1e1c31ee6_Token> &_137920_jv = *it;
						{
							{
								
								if ((_137917_j >= _136013_i)) {
									_case_begin_1e66c1e7b:;
									{
										goto _iter_end_1e66c11de;
									}
								}
								else if ((_137920_jv.get()._field_kind == _136016_v.get()._field_kind)) {
									_case_begin_1e66c2003:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1e66c1d5a:;
							};
						}
						_iter_next_1e66c11de:;
						++it;
						_137917_j++;
						goto _iter_begin_1e66c11de;
					}
					_iter_end_1e66c11de:;
				};
				goto _iter_next_1e66bc471;
				_julec_label_exist:;
				_1e400333c_push_err(&(*_self_), _136016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136016_v.get()._field_kind)}));
				_1e400365b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135354_ok=false;
			}
			_iter_next_1e66bc471:;
			++it;
			_136013_i++;
			goto _iter_begin_1e66bc471;
		}
		_iter_end_1e66bc471:;
	};
	return _135354_ok;
}



inline void _1e400d0c2_check_fn_decl_prototype(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _140048_f) {
	if ((_140048_f.get()._field_exceptional && _140048_f.get()._field_cpp_linked)) {
		_1e400333c_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_140048_f.get()._field_exceptional) {
		if (_1e34023da_is_entry_point(_140048_f.ptr())) {
			_1e400333c_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1e340264e_is_init(_140048_f.ptr())) {
			_1e400333c_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e400c698_check_decl_generics(_self_.ptr(), _140048_f.get()._field_generics)))) {
			_case_begin_1e66c5259:;
		}
		else if ((!(_1e400c9c8_check_fn_decl_params_dup(_self_.ptr(), _140048_f)))) {
			_case_begin_1e66c52d1:;
		}
		else if ((!(_1e400cd19_check_fn_decl_result_dup(_self_.ptr(), _140048_f)))) {
			_case_begin_1e66c6711:;
		}
		_match_end_1e66c50c2:;
	};
}



inline void _1e400d37a_check_trait_decl_method(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _142148_f) {
	if (_1e1c3478a_is_ignore_ident(_142148_f.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_142148_f.get()._field_sema=_self_;
	_1e400d0c2_check_fn_decl_prototype(_self_, _142148_f);
	jule::Ptr<_1e3404651_FnIns> _142817_ins = _1e3403100_instance(_142148_f);;
	_1e40098b5_reload_fn_ins_types(_self_, _142817_ins);
	_142817_ins.get()._field_reloaded=true;
	_1e34033ca_append_instance(_142148_f.ptr(), _142817_ins);
}



inline void _1e400d633_check_trait_decl_methods(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e374ee30_Trait>& _143449_t) {
	{
		auto &expr = _143449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e66c9d52:;
		if (it != expr.end()) {
			jule::I64 _143514_i = it - expr.begin();
			jule::Ptr<_1e34019a0_Fn> _143521_f = *it;
			{
				_1e400d37a_check_trait_decl_method(_self_, _143521_f);
				_143449_t.get()._field_mutable=(_143449_t.get()._field_mutable || _143521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _143449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e66cbabd:;
					if (it != expr.end()) {
						jule::I64 _144617_j = it - expr.begin();
						jule::Ptr<_1e34019a0_Fn> _144620_jf = *it;
						{
							{
								
								if ((_144617_j >= _143514_i)) {
									_case_begin_1e66ccc56:;
									{
										goto _iter_end_1e66cbabd;
									}
								}
								else if ((_143521_f.get()._field_ident == _144620_jf.get()._field_ident)) {
									_case_begin_1e66ccccd:;
									{
										_1e400333c_push_err(_self_.ptr(), _143521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143521_f.get()._field_ident)}));
										_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1e66cbabd;
									}
								}
								_match_end_1e66ccb35:;
							};
						}
						_iter_next_1e66cbabd:;
						++it;
						_144617_j++;
						goto _iter_begin_1e66cbabd;
					}
					_iter_end_1e66cbabd:;
				};
			}
			_iter_next_1e66c9d52:;
			++it;
			_143514_i++;
			goto _iter_begin_1e66c9d52;
		}
		_iter_end_1e66c9d52:;
	};
}



inline void _1e400d8b9_check_trait_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e374ee30_Trait>& _146541_t) {
	if (_1e1c3478a_is_ignore_ident(_146541_t.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _146541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146541_t)),_146541_t.get()._field_ident,false)) {
		_1e400333c_push_err(_self_.ptr(), _146541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146541_t.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e400d633_check_trait_decl_methods(_self_, _146541_t);
}



inline jule::Bool _1e400db2d_check_trait_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _147739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1e66d1c9e:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> _147821_t = *it;
			{
				_1e400d8b9_check_trait_decl(_self_, _147821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_147739_ok = false;
					return _147739_ok;
				};
			}
			_iter_next_1e66d1c9e:;
			++it;
			goto _iter_begin_1e66d1c9e;
		}
		_iter_end_1e66d1c9e:;
	};
	_147739_ok = true;
	return _147739_ok;
}



inline jule::Bool _1e400e007_check_trait_impl_methods(_1e400067a_Sema* _self_, jule::Ptr<_1e374ee30_Trait>& _148948_base, jule::Ptr<_1e35092a0_Impl>& _148963_ipl) {
	jule::Bool _148977_ok = jule::Bool();
	_148977_ok=true;
	{
		auto &expr = _148963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e66d3a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> &_149116_f = *it;
			{
				if ((_1e34a019c_find_method(_148948_base.ptr(), _149116_f.get()._field_ident) == nullptr)) {
					_1e400333c_push_err(&(*_self_), _149116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_148948_base.get()._field_ident),jule::Any(_149116_f.get()._field_ident)}));
					_148977_ok=false;
				};
			}
			_iter_next_1e66d3a4d:;
			++it;
			goto _iter_begin_1e66d3a4d;
		}
		_iter_end_1e66d3a4d:;
	};
	return _148977_ok;
}



inline jule::Bool _1e400e3c0_impl_to_struct(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _150039_dest, jule::Ptr<_1e35092a0_Impl>& _150059_ipl) {
	jule::Bool _150073_ok = jule::Bool();
	_150073_ok=true;
	{
		auto &expr = _150059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e66d5db3:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _150421_f = *it;
			{
				if (((_1e33136d6_find_method(_150039_dest.ptr(), _150421_f.get()._field_ident,_150421_f.get()._field_statically) != nullptr) || (_1e331694d_find_field(_150039_dest.ptr(), _150421_f.get()._field_ident) != nullptr))) {
					_1e400333c_push_err(_self_.ptr(), _150421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150039_dest.get()._field_ident),jule::Any(_150421_f.get()._field_ident)}));
					_150073_ok=false;
					goto _iter_next_1e66d5db3;
				};
				if (((_150039_dest.get()._field_generics.len() > 0LL) && (_150421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _150421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1e66d8503:;
						if (it != expr.end()) {
							jule::Ptr<_1e3342b00_GenericDecl> _151224_fg = *it;
							{
								{
									auto &expr = _150039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1e66d8d3e:;
									if (it != expr.end()) {
										jule::Ptr<_1e3342b00_GenericDecl> _151328_dg = *it;
										{
											if ((_151224_fg.get()._field_ident == _151328_dg.get()._field_ident)) {
												_1e400333c_push_err(_self_.ptr(), _151224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_150073_ok=false;
											};
										}
										_iter_next_1e66d8d3e:;
										++it;
										goto _iter_begin_1e66d8d3e;
									}
									_iter_end_1e66d8d3e:;
								};
							}
							_iter_next_1e66d8503:;
							++it;
							goto _iter_begin_1e66d8503;
						}
						_iter_end_1e66d8503:;
					};
				};
				_1e4004283_check_directives(_self_, _150421_f.get()._field_directives,jule::Any(_150421_f));
				_150421_f.get()._field_sema=_self_;
				_150421_f.get()._field_owner=_150039_dest;
				_150039_dest.get()._field_methods = jule::alloc_for_append(_150039_dest.get()._field_methods,1);_150039_dest.get()._field_methods.__push(_150421_f);;
			}
			_iter_next_1e66d5db3:;
			++it;
			goto _iter_begin_1e66d5db3;
		}
		_iter_end_1e66d5db3:;
	};
	{
		auto &expr = _150059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1e66db4e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _152921_v = *it;
			{
				;
				if (((_1e33136d6_find_method(_150039_dest.ptr(), _152921_v.get()._field_ident,true) != nullptr) || (_1e331593b_find_static(_150039_dest.ptr(), _152921_v.get()._field_ident) != nullptr))) {
					_1e400333c_push_err(_self_.ptr(), _152921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150039_dest.get()._field_ident),jule::Any(_152921_v.get()._field_ident)}));
					_150073_ok=false;
					goto _iter_next_1e66db4e5;
				};
				_1e400ee5e_check_var_decl(_self_, _152921_v,jule::Trait<_1e40abe84_Lookup>(_self_, 3));
				_1e40135d3_check_type_var(_self_, _152921_v,jule::Trait<_1e40abe84_Lookup>(_self_, 3));
				_150039_dest.get()._field_statics = jule::alloc_for_append(_150039_dest.get()._field_statics,1);_150039_dest.get()._field_statics.__push(_152921_v);;
			}
			_iter_next_1e66db4e5:;
			++it;
			goto _iter_begin_1e66db4e5;
		}
		_iter_end_1e66db4e5:;
	};
	return _150073_ok;
}



inline void _1e400e645_impl_trait(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e35092a0_Impl>& _154535_decl) {
	jule::Ptr<_1e4091661_TypeKind> _154617_base_t = _1e400752d_select_type(_self_, _154535_decl.get()._field_base);;
	if ((_154617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e374ee30_Trait> _155017_base = _1e4094de5_trt(_154617_base_t.ptr());;
	if ((_155017_base == nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _154535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_154617_base_t.ptr()))}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4091661_TypeKind> _155717_dest_t = _1e400752d_select_type(_self_, _154535_decl.get()._field_dest);;
	if ((_155717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3352093_StructIns> _156117_dest_s = _1e4094b81_strct(_155717_dest_t.ptr());;
	if ((_156117_dest_s == nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _154535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_155717_dest_t.ptr()))}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3318840_Struct> _156817_dest = _156117_dest_s.get()._field_decl;;
	if ((_1e1c37c77_dir(_156817_dest.get()._field_token.get()._field_file.ptr()) != _1e1c37c77_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e400333c_push_err(_self_.ptr(), _154535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_155017_base.get()._field_implemented = jule::alloc_for_append(_155017_base.get()._field_implemented,1);_155017_base.get()._field_implemented.__push(_156817_dest);;
	_156817_dest.get()._field_implements = jule::alloc_for_append(_156817_dest.get()._field_implements,1);_156817_dest.get()._field_implements.__push(_155017_base);;
	if ((_154535_decl.get()._field_statics.len() > 0LL)) {
		_1e400333c_push_err(_self_.ptr(), _154535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e400e007_check_trait_impl_methods(_self_.ptr(), _155017_base,_154535_decl)))) {
			_case_begin_1e66e66cb:;
			{
				return;;
			}
		}
		else if ((!(_1e400e3c0_impl_to_struct(_self_, _156817_dest,_154535_decl)))) {
			_case_begin_1e66e6742:;
			{
				return;;
			}
		}
		_match_end_1e66e5c3b:;
	};
}



inline void _1e400e8ba_impl_struct(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e35092a0_Impl>& _159036_decl) {
	jule::Ptr<_1e4091661_TypeKind> _159117_dest_t = _1e400752d_select_type(_self_, _159036_decl.get()._field_dest);;
	if ((_159117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3352093_StructIns> _159517_dest_s = _1e4094b81_strct(_159117_dest_t.ptr());;
	if ((_159517_dest_s == nullptr)) {
		_1e400333c_push_err(_self_.ptr(), _159036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_159117_dest_t.ptr()))}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3318840_Struct> _160217_dest = _159517_dest_s.get()._field_decl;;
	if ((_1e1c37c77_dir(_160217_dest.get()._field_token.get()._field_file.ptr()) != _1e1c37c77_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e400333c_push_err(_self_.ptr(), _159036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e400e3c0_impl_to_struct(_self_, _160217_dest,_159036_decl)))) {
			_case_begin_1e66eb318:;
			{
				return;;
			}
		}
		_match_end_1e66e85ce:;
	};
}



inline void _1e400eb40_impl_impl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e35092a0_Impl>& _161534_decl) {
	{
		
		if (_1e3768894_is_trait_impl(_161534_decl.ptr())) {
			_case_begin_1e66ebe0c:;
			{
				_1e400e645_impl_trait(_self_, _161534_decl);
			}
		}
		else if (_1e37690c0_is_struct_impl(_161534_decl.ptr())) {
			_case_begin_1e66ebe84:;
			{
				_1e400e8ba_impl_struct(_self_, _161534_decl);
			}
		}
		_match_end_1e66ebcdb:;
	};
}



inline void _1e400ee5e_check_var_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e401a92b_Var>& _162639_decl, jule::Trait<_1e40abe84_Lookup> _162655_l) {
	if (_1e1c3478a_is_ignore_ident(_162639_decl.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e401b047_is_type_inferred(_162639_decl.ptr())) {
		if ((!(_1e401acd3_is_initialized(_162639_decl.ptr())))) {
			_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1e400697d_check_type(_self_, _162639_decl.get()._field_kind,_162655_l);
	};
	if ((_162639_decl.get()._field_constant && _162639_decl.get()._field_reference)) {
		_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1e401acd3_is_initialized(_162639_decl.ptr())))) {
		if (_162639_decl.get()._field_constant) {
			_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162639_decl.get()._field_statically) {
			_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162639_decl.get()._field_reference) {
			_1e400333c_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1e40101d4_check_global_var_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e401a92b_Var>& _165846_decl) {
	if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165846_decl)),_165846_decl.get()._field_ident,_165846_decl.get()._field_cpp_linked)) {
		_1e400333c_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165846_decl.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165846_decl.get()._field_cpp_linked && _165846_decl.get()._field_constant)) {
		_1e400333c_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165846_decl.get()._field_cpp_linked)) && (!(_165846_decl.get()._field_constant))) && (!(_165846_decl.get()._field_statically)))) {
		_1e400333c_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1e4004283_check_directives(_self_, _165846_decl.get()._field_directives,jule::Any(_165846_decl));
	_1e400ee5e_check_var_decl(_self_, _165846_decl,jule::Trait<_1e40abe84_Lookup>(_self_, 3));
}



inline jule::Bool _1e4010448_check_global_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _167740_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1e67069c7:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _167821_decl = *it;
			{
				_1e40101d4_check_global_var_decl(_self_, _167821_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167740_ok = false;
					return _167740_ok;
				};
			}
			_iter_next_1e67069c7:;
			++it;
			goto _iter_begin_1e67069c7;
		}
		_iter_end_1e67069c7:;
	};
	_167740_ok = true;
	return _167740_ok;
}



inline jule::Bool _1e4010822_check_struct_trait_impl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _168948_strct, jule::Ptr<_1e374ee30_Trait>& _168969_trt) {
	jule::Bool _168984_ok = jule::Bool();
	{
		auto &expr = _168969_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e6708523:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _169021_tf = *it;
			{
				jule::Bool _169121_exist = false;;
				jule::Ptr<_1e34019a0_Fn> _169221_sf = _1e33136d6_find_method(_168948_strct.ptr(), _169021_tf.get()._field_ident,_169021_tf.get()._field_statically);;
				jule::Ptr<_1e3404651_FnIns> _169317_tf_k = _1e4009596_get_trait_check_fn_kind(_self_, _169021_tf);;
				if ((_169221_sf != nullptr)) {
					jule::Ptr<_1e3404651_FnIns> _169525_sf_k = _1e4009596_get_trait_check_fn_kind(_self_, _169221_sf);;
					_169121_exist=(((_169317_tf_k.get()._field_decl.get()._field_public == _169525_sf_k.get()._field_decl.get()._field_public) && (_169317_tf_k.get()._field_decl.get()._field_ident == _169525_sf_k.get()._field_decl.get()._field_ident)) && _1e3404c8e_equals(_169317_tf_k, jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_169525_sf_k, 1)})));
				};
				if (_169121_exist) {
					jule::Ptr<_1e330242d_Directive> _170121_d = _1e408b1e9_find_directive(_169221_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_170121_d != nullptr)) {
						_1e400333c_push_err(_self_.ptr(), _170121_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168984_ok=false;
				} else {
					;
					jule::Str _170825_s = _1e3405c29_get_kind_str(_169317_tf_k.ptr(), true);;
					if (_169021_tf.get()._field_public) {
						(_170825_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1e400333c_push_err(_self_.ptr(), _168948_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168969_trt.get()._field_ident),jule::Any(_170825_s)}));
					_168984_ok=false;
				};
			}
			_iter_next_1e6708523:;
			++it;
			goto _iter_begin_1e6708523;
		}
		_iter_end_1e6708523:;
	};
	return _168984_ok;
}



inline jule::Bool _1e4010b41_check_struct_impls(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _171943_s) {
	jule::Bool _171957_ok = jule::Bool();
	_171957_ok=true;
	{
		auto &expr = _171943_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1e6710371:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> _172121_trt = *it;
			{
				_171957_ok=(_1e4010822_check_struct_trait_impl(_self_, _171943_s,_172121_trt) && _171957_ok);
			}
			_iter_next_1e6710371:;
			++it;
			goto _iter_begin_1e6710371;
		}
		_iter_end_1e6710371:;
	};
	return _171957_ok;
}



inline jule::Bool _1e4010e4e_check_struct_fields(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _172744_st) {
	jule::Bool _172759_ok = jule::Bool();
	_172759_ok=true;
	{
		auto &expr = _172744_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1e67117c3:;
		if (it != expr.end()) {
			jule::Ptr<_1e3325ee0_Field> _172921_f = *it;
			{
				_172921_f.get()._field_owner=_172744_st;
				{
					auto &expr = _172744_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1e67123b7:;
					if (it != expr.end()) {
						jule::Ptr<_1e3325ee0_Field> _173120_cf = *it;
						{
							if ((_172921_f == _173120_cf)) {
								goto _iter_end_1e67123b7;
							} else if ((_172921_f.get()._field_ident == _173120_cf.get()._field_ident)) {
								_1e400333c_push_err(_self_.ptr(), _172921_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172921_f.get()._field_ident)}));
								_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172759_ok=false;
							};
						}
						_iter_next_1e67123b7:;
						++it;
						goto _iter_begin_1e67123b7;
					}
					_iter_end_1e67123b7:;
				};
			}
			_iter_next_1e67117c3:;
			++it;
			goto _iter_begin_1e67117c3;
		}
		_iter_end_1e67117c3:;
	};
	return _172759_ok;
}



inline void _1e40111c4_check_struct_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _174442_s) {
	if (_1e1c3478a_is_ignore_ident(_174442_s.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _174442_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174442_s)),_174442_s.get()._field_ident,_174442_s.get()._field_cpp_linked)) {
		_1e400333c_push_err(_self_.ptr(), _174442_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174442_s.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e4004283_check_directives(_self_, _174442_s.get()._field_directives,jule::Any(_174442_s));
	{
		
		if ((!(_1e400c698_check_decl_generics(_self_.ptr(), _174442_s.get()._field_generics)))) {
			_case_begin_1e6716311:;
		}
		else if ((!(_1e4010e4e_check_struct_fields(_self_, _174442_s)))) {
			_case_begin_1e6716377:;
		}
		else if ((!(_1e4010b41_check_struct_impls(_self_, _174442_s)))) {
			_case_begin_1e67163dd:;
		}
		_match_end_1e67161bd:;
	};
}



inline jule::Bool _1e4011438_check_struct_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _176240_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1e671770d:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _176321_s = *it;
			{
				_1e40111c4_check_struct_decl(_self_, _176321_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176240_ok = false;
					return _176240_ok;
				};
			}
			_iter_next_1e671770d:;
			++it;
			goto _iter_begin_1e671770d;
		}
		_iter_end_1e671770d:;
	};
	_176240_ok = true;
	return _176240_ok;
}



inline void _1e40116ad_check_fn_decl(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _177538_f) {
	if (_1e1c3478a_is_ignore_ident(_177538_f.get()._field_ident)) {
		_1e400333c_push_err(_self_.ptr(), _177538_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e4004283_check_directives(_self_, _177538_f.get()._field_directives,jule::Any(_177538_f));
	_177538_f.get()._field_sema=_self_;
	_1e400d0c2_check_fn_decl_prototype(_self_, _177538_f);
	if (_1e4003e64_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177538_f)),_177538_f.get()._field_ident,_177538_f.get()._field_cpp_linked)) {
		if ((_177538_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1e34019a0_Fn> _178721_init = _1e4001e73_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178721_init != nullptr)) {
				return;;
			};
		};
		_1e400333c_push_err(_self_.ptr(), _177538_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177538_f.get()._field_ident)}));
		_1e400365b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e4011922_check_fn_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	jule::Bool _179836_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e671c878:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _179921_f = *it;
			{
				_1e40116ad_check_fn_decl(_self_, _179921_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179836_ok = false;
					return _179836_ok;
				};
			}
			_iter_next_1e671c878:;
			++it;
			goto _iter_begin_1e671c878;
		}
		_iter_end_1e671c878:;
	};
	_179836_ok = true;
	return _179836_ok;
}



inline void _1e4011cda_push_cycle_error(_1e400067a_Sema* _self_, jule::Ptr<_1e3318840_Struct>& _181032_st1, jule::Ptr<_1e3318840_Struct>& _181047_st2, jule::Str& _181066_message) {
	;
	jule::Str _181313_refers_to = _1e19054a0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_181032_st1.get()._field_ident),jule::Any(_181047_st2.get()._field_ident)}));;
	(_181066_message).buffer.insert(0, (((_1e17ddb08_repeat(jule::Str(" ", 1),4LL) + _181313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e401223b_check_cross_cycle(_1e400067a_Sema* _self_, jule::Ptr<_1e3318840_Struct>& _181733_st1, jule::Ptr<_1e3318840_Struct>& _181748_st2, jule::Str& _181767_message) {
	{
		auto &expr = _181748_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1e672101e:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> &_181816_u = *it;
			{
				if ((_181816_u == _181733_st1)) {
					_1e4011cda_push_cycle_error(&(*_self_), _181748_st2,_181816_u,_181767_message);
					return false;
				};
				if ((!(_1e401223b_check_cross_cycle(&(*_self_), _181733_st1,_181816_u,_181767_message)))) {
					_1e4011cda_push_cycle_error(&(*_self_), _181748_st2,_181816_u,_181767_message);
					return false;
				};
			}
			_iter_next_1e672101e:;
			++it;
			goto _iter_begin_1e672101e;
		}
		_iter_end_1e672101e:;
	};
	return true;
}



inline jule::Bool _1e40126c0_check_struct_derive_illegal_cycles(_1e400067a_Sema* _self_, jule::Str _183353_derive, jule::Ptr<_1e3318840_Struct>& _183367_st1, jule::Ptr<_1e4091661_TypeKind>& _183386_k) {
	jule::Bool _1833102_ok = jule::Bool();
	jule::Ptr<_1e3318840_Struct> _183417_st2 = _1e40a959c_get_struct_from_kind(_183386_k);;
	if ((_183417_st2 == nullptr)) {
		_1833102_ok = true;
		return _1833102_ok;
	};
	if ((_183367_st1 == _183417_st2)) {
		_1e400333c_push_err(&(*_self_), _183367_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_183353_derive),jule::Any(_183367_st1.get()._field_ident)}));
		_1833102_ok = false;
		return _1833102_ok;
	};
	jule::Str _184617_message = jule::Str();;
	if ((!(_1e401223b_check_cross_cycle(&(*_self_), _183367_st1,_183417_st2,_184617_message)))) {
		jule::Str _184921_err_msg = _184617_message;;
		_184617_message=jule::Str();
		_1e4011cda_push_cycle_error(&(*_self_), _183367_st1,_183417_st2,_184617_message);
		_184921_err_msg=(_184921_err_msg + _184617_message);
		_1e400333c_push_err(&(*_self_), _183367_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_183353_derive),jule::Any(_184921_err_msg)}));
		_1833102_ok = false;
		return _1833102_ok;
	};
	_1833102_ok = true;
	return _1833102_ok;
}



inline jule::Bool _1e4012a00_check_struct_ins_derive_clone(_1e400067a_Sema* _self_, jule::Ptr<_1e3352093_StructIns> _186052_st) {
	jule::Bool _186070_ok = jule::Bool();
	if ((!(_1e3318169_is_derives(_186052_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_186070_ok = true;
		return _186070_ok;
	};
	{
		auto &expr = _186052_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1e67270e1:;
		if (it != expr.end()) {
			jule::Ptr<_1e332d657_FieldIns> _186521_f = *it;
			{
				if ((_186521_f.get()._field_kind == nullptr)) {
					goto _iter_next_1e67270e1;
				};
				if ((!(_1e4093256_supports_cloning(_186521_f.get()._field_kind.ptr())))) {
					_1e400333c_push_err(&(*_self_), _186052_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_186521_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_186070_ok = false;
					return _186070_ok;
				};
				if ((!(_1e40126c0_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_186052_st.get()._field_decl,_186521_f.get()._field_kind)))) {
					_186070_ok = false;
					return _186070_ok;
				};
			}
			_iter_next_1e67270e1:;
			++it;
			goto _iter_begin_1e67270e1;
		}
		_iter_end_1e67270e1:;
	};
	_186070_ok = true;
	return _186070_ok;
}



inline void _1e4012bdc_check_package_decls(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e672a006:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _188621_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _188621_f);
				if ((!(_1e400c38a_check_type_enum_decls(_self_)))) {
					return;;
				};
				if ((!(_1e400b147_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e672a006:;
			++it;
			goto _iter_begin_1e672a006;
		}
		_iter_end_1e672a006:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e672b678:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _189621_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _189621_f);
				if ((!(_1e400db2d_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e672b678:;
			++it;
			goto _iter_begin_1e672b678;
		}
		_iter_end_1e672b678:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e672b612:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _190321_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _190321_f);
				if ((!(_1e4010448_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e672b612:;
			++it;
			goto _iter_begin_1e672b612;
		}
		_iter_end_1e672b612:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e672d14c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _191021_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _191021_f);
				{
					
					if ((!(_1e4011922_check_fn_decls(_self_)))) {
						_case_begin_1e672ddc8:;
					}
					else if ((!(_1e4011438_check_struct_decls(_self_)))) {
						_case_begin_1e672de3e:;
					}
					else {
						_case_begin_1e672dd62:;
						{
							goto _iter_next_1e672d14c;
						}
					}
					_match_end_1e672dceb:;
				};
				return;;
			}
			_iter_next_1e672d14c:;
			++it;
			goto _iter_begin_1e672d14c;
		}
		_iter_end_1e672d14c:;
	};
}



inline void _1e401302d_check_data_for_type_inference(_1e400067a_Sema* _self_, jule::Ptr<_1e40662e5_Data>& _192249_d, jule::Ptr<_1e1c31ee6_Token>& _192260_err_token) {
	{
		
		if (_1e40666d0_is_nil(_192249_d.ptr())) {
			_case_begin_1e672ee40:;
			{
				_1e400333c_push_err(&(*_self_), _192260_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1e4066944_is_void(_192249_d.ptr())) {
			_case_begin_1e672eeb7:;
			{
				_1e400333c_push_err(&(*_self_), _192260_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_192249_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1e673003e:;
			{
				_1e400333c_push_err(&(*_self_), _192260_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e672ed0d:;
	};
}



inline void _1e40132b4_check_var(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e401a92b_Var>& _193334_v) {
	if (_193334_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1e401b047_is_type_inferred(_193334_v.ptr())) {
		_193334_v.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_193334_v.get()._field_value.get()._field_data.get()._field_kind});
		_1e401302d_check_data_for_type_inference(_self_.ptr(), _193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1e409c24e_Arr> _194421_arr = _1e4094444_arr(_193334_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_194421_arr != nullptr)) {
			if (_194421_arr.get()._field_auto) {
				jule::Ptr<_1e409c24e_Arr> _194725_data_arr = _1e4094444_arr(_193334_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_194725_data_arr != nullptr)) {
					_194421_arr.get()._field_n=_194725_data_arr.get()._field_n;
				};
			};
		};
		_1e400863e_check_assign_type(_self_, _193334_v.get()._field_reference,_193334_v.get()._field_kind.get()._field_kind,_193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_193334_v.get()._field_reference && (!(_1e40a88cb_is_valid_for_ref(_193334_v.get()._field_kind.get()._field_kind))))) {
		_1e400333c_push_err(_self_.ptr(), _193334_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_193334_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1e400a443_check_validity_for_init_expr(_self_, _193334_v.get()._field_mutable,_193334_v.get()._field_reference,_193334_v.get()._field_kind.get()._field_kind,_193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_193334_v.get()._field_constant) {
		if ((!(_1e4066ba8_is_const(_193334_v.get()._field_value.get()._field_data.ptr())))) {
			_1e400333c_push_err(_self_.ptr(), _193334_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_193334_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1e40953bd_tup(_193334_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_193334_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1e40135d3_check_type_var(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e401a92b_Var>& _198239_decl, jule::Trait<_1e40abe84_Lookup> _198255_l) {
	if ((_198239_decl.get()._field_cpp_linked || (!(_1e401acd3_is_initialized(_198239_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e4067d63_Eval> _198717_eval = nullptr;;
	if ((_198239_decl.get()._field_kind != nullptr)) {
		_198717_eval=_1e400797e_evalpd(_self_, _198255_l,_198239_decl.get()._field_kind.get()._field_kind,_198239_decl);
	} else {
		_198717_eval=_1e400797e_evalpd(_self_, _198255_l,nullptr,_198239_decl);
	};
	_198717_eval.get()._field_immutable=(!(_198239_decl.get()._field_mutable));
	_198239_decl.get()._field_value.get()._field_data=_1e40831d0_eval_expr(_198717_eval, _198239_decl.get()._field_value.get()._field_expr);
	if ((_198239_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1e40132b4_check_var(_self_, _198239_decl);
}



inline void _1e40137ae_check_global_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1e673d316:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _200421_decl = *it;
			{
				if (((_1e401acd3_is_initialized(_200421_decl.ptr()) && (_200421_decl.get()._field_value.get()._field_data == nullptr)) || (_1e401b047_is_type_inferred(_200421_decl.ptr()) && (_200421_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1e40135d3_check_type_var(_self_, _200421_decl,jule::Trait<_1e40abe84_Lookup>(_self_, 3));
				};
			}
			_iter_next_1e673d316:;
			++it;
			goto _iter_begin_1e673d316;
		}
		_iter_end_1e673d316:;
	};
}



inline jule::Ptr<_1e3404651_FnIns> _1e4013b66_ready_to_check_fn(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _201542_s, jule::Ptr<_1e34019a0_Fn>& _201562_f) {
	jule::Ptr<_1e3404651_FnIns> _201617_ins = _1e3403100_instance(_201562_f);;
	if ((_201562_f.get()._field_instances.len() != 0LL)) {
		return _201617_ins;
	};
	_201617_ins.get()._field_owner=_201542_s;
	_1e34033ca_append_instance(_201562_f.ptr(), _201617_ins);
	_201617_ins.get()._field_reloaded=true;
	if (_1e40098b5_reload_fn_ins_types(_self_, _201617_ins)) {
		return _201617_ins;
	};
	return nullptr;
}



inline void _1e4013e85_check_type_method(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _202942_s, jule::Ptr<_1e34019a0_Fn>& _202962_f) {
	if ((_202962_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e3404651_FnIns> _203417_ins = _202962_f.get()._field_instances[0LL];;
	if ((_203417_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_1e401651a_check_fn_ins(_self_, _203417_ins);
}



inline jule::Ptr<_1e3404651_FnIns> _1e40143d6_check_struct_ins_op(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _204244_s, jule::Ptr<_1e34019a0_Fn>& _204264_f, jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)> _204272_p) {
	if ((((_204264_f == nullptr) || (_204264_f.get()._field_generics.len() > 0LL)) || (!(_204272_p(_204264_f))))) {
		return nullptr;
	};
	return _204264_f.get()._field_instances[0LL];
}



inline jule::Bool _1e40146e4_check_fields(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _204937_s) {
	jule::Bool _204954_ok = jule::Bool();
	_1e409e84a_TypeChecker _205017_tc = _1e409e84a_TypeChecker{._field_s=_204937_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1e40abe84_Lookup>(_204937_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1e409db02_Referencer>(_1e409db02_Referencer{._field_ident=_204937_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_204937_s.get()._field_decl), }), ._field_refers=_204937_s.get()._field_refers, };;
	if ((_204937_s.get()._field_generics.len() > 0LL)) {
		_205017_tc._field_use_generics=jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>::alloc(0LL,_204937_s.get()._field_generics.len());
		{
			auto &expr = _204937_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1e6747441:;
			if (it != expr.end()) {
				jule::I64 _206218_i = it - expr.begin();
				jule::Ptr<_1e4091661_TypeKind> _206225_g = *it;
				{
					_205017_tc._field_use_generics = jule::alloc_for_append(_205017_tc._field_use_generics,1);_205017_tc._field_use_generics.__push(jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_ident=_204937_s.get()._field_decl.get()._field_generics[_206218_i].get()._field_ident, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_206225_g}), }));;
				}
				_iter_next_1e6747441:;
				++it;
				_206218_i++;
				goto _iter_begin_1e6747441;
			}
			_iter_end_1e6747441:;
		};
	};
	jule::Ptr<_1e4061466_SymbolTable> _207217_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e4002e74_set_current_file(_self_.ptr(), _207217_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _204937_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1e4061466_SymbolTable> _207621_file = _1e3eeec84_find_file(_self_.get()._field_files,_204937_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_207621_file != nullptr)) {
			_1e4002e74_set_current_file(_self_.ptr(), _207621_file);
		};
	};
	jule::Ptr<_1e4067d63_Eval> _208217_eval = _1e4008144_eval(_self_, jule::Trait<_1e40abe84_Lookup>(_self_, 3));;
	_204954_ok=true;
	{
		auto &expr = _204937_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1e6747de2:;
		if (it != expr.end()) {
			jule::Ptr<_1e332d657_FieldIns> _208421_f = *it;
			{
				jule::Ptr<_1e4091661_TypeKind> _208521_kind = _1e40a6ab6_check_decl(&_205017_tc, _208421_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_204954_ok=((_208521_kind != nullptr) && _204954_ok);
				if ((_208521_kind == nullptr)) {
					if (((_self_ != _204937_s.get()._field_decl.get()._field_sema) && (_204937_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204937_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_204937_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1e6747de2;
				};
				_208421_f.get()._field_kind=_208521_kind;
				_204937_s.get()._field_mutable=(_204937_s.get()._field_mutable || ((!(_208421_f.get()._field_decl.get()._field_mutable)) && _1e4092a19_mutable(_208421_f.get()._field_kind.ptr())));
				_1e4012a00_check_struct_ins_derive_clone(_self_.ptr(), _204937_s);
				if ((_208421_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1e6747de2;
				};
				_208217_eval.get()._field_prefix=_208421_f.get()._field_kind;
				_208217_eval.get()._field_field=_208421_f;
				_208421_f.get()._field_default=_1e40831d0_eval_expr(_208217_eval, _208421_f.get()._field_decl.get()._field_default);
				if ((_208421_f.get()._field_default == nullptr)) {
					goto _iter_next_1e6747de2;
				};
				;
				_1e400863e_check_assign_type(_self_, false,_208421_f.get()._field_kind,_208421_f.get()._field_default,_208421_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1e6747de2:;
			++it;
			goto _iter_begin_1e6747de2;
		}
		_iter_end_1e6747de2:;
	};
	return _204954_ok;
}



inline jule::Bool _1e4014a02_precheck_struct_ins(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _211844_s) {
	jule::Bool _211861_ok = jule::Bool();
	_211861_ok=_1e40146e4_check_fields(_self_, _211844_s);
	if ((!(_211861_ok))) {
		_211861_ok = false;
		return _211861_ok;
	};
	{
		auto &expr = _211844_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e67530ea:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _212321_f = *it;
			{
				if ((_212321_f.get()._field_generics.len() == 0LL)) {
					if ((_1e4013b66_ready_to_check_fn(_self_, _211844_s,_212321_f) == nullptr)) {
						_211861_ok = false;
						return _211861_ok;
					};
				};
			}
			_iter_next_1e67530ea:;
			++it;
			goto _iter_begin_1e67530ea;
		}
		_iter_end_1e67530ea:;
	};
	_211861_ok = true;
	return _211861_ok;
}



inline void _1e4014c77_check_struct_ins(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns>& _213341_s) {
	{
		auto &expr = _213341_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e6754b35:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _213421_f = *it;
			{
				_1e4013e85_check_type_method(_self_, _213341_s,_213421_f);
			}
			_iter_next_1e6754b35:;
			++it;
			goto _iter_begin_1e6754b35;
		}
		_iter_end_1e6754b35:;
	};
}



inline void _1e4014eec_check_type_struct(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _213942_s) {
	if (_213942_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_213942_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _213942_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e6756164:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _215221_ins = *it;
			{
				_1e4014c77_check_struct_ins(_self_, _215221_ins);
			}
			_iter_next_1e6756164:;
			++it;
			goto _iter_begin_1e6756164;
		}
		_iter_end_1e6756164:;
	};
}



inline void _1e40151c8_check_struct_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1e675720e:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _215821_s = *it;
			{
				_1e4014eec_check_type_struct(_self_, _215821_s);
			}
			_iter_next_1e675720e:;
			++it;
			goto _iter_begin_1e675720e;
		}
		_iter_end_1e675720e:;
	};
}



inline void _1e4015470_check_struct_ins_operators(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3352093_StructIns> _216350_s) {
	{
		auto &expr = _216350_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e67580de:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _216421_m = *it;
			{
				{
					auto &_match_expr{ _216421_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1e6758d9d:;
						{
							_216350_s.get()._field_operators._field_eq=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _216768_f) mutable -> jule::Bool {
								return static__1e401c455_eq(_216768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1e6758e14:;
						{
							_216350_s.get()._field_operators._field_gt=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _216968_f) mutable -> jule::Bool {
								return static__1e401c6ec_gt(_216968_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1e6758e8b:;
						{
							_216350_s.get()._field_operators._field_gt_eq=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _217171_f) mutable -> jule::Bool {
								return static__1e401c994_gt_eq(_217171_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1e6759013:;
						{
							_216350_s.get()._field_operators._field_lt=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _217368_f) mutable -> jule::Bool {
								return static__1e401cc3b_lt(_217368_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1e675908a:;
						{
							_216350_s.get()._field_operators._field_lt_eq=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _217571_f) mutable -> jule::Bool {
								return static__1e401ced3_lt_eq(_217571_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1e6759112:;
						{
							_216350_s.get()._field_operators._field_shl=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _217769_f) mutable -> jule::Bool {
								return static__1e401d5bb_shl(_217769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1e6759189:;
						{
							_216350_s.get()._field_operators._field_shr=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _217969_f) mutable -> jule::Bool {
								return static__1e401d863_shr(_217969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1e6759211:;
						{
							_216350_s.get()._field_operators._field_add=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _218169_f) mutable -> jule::Bool {
								return static__1e401db0a_add(_218169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1e6759288:;
						{
							_216350_s.get()._field_operators._field_sub=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _218369_f) mutable -> jule::Bool {
								return static__1e401dda2_sub(_218369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1e6759310:;
						{
							_216350_s.get()._field_operators._field_div=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _218569_f) mutable -> jule::Bool {
								return static__1e401e149_div(_218569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1e6759387:;
						{
							_216350_s.get()._field_operators._field_mul=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _218769_f) mutable -> jule::Bool {
								return static__1e401e3e1_mul(_218769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1e675940e:;
						{
							_216350_s.get()._field_operators._field_mod=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _218969_f) mutable -> jule::Bool {
								return static__1e401e688_mod(_218969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1e6759486:;
						{
							_216350_s.get()._field_operators._field_bit_and=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _219173_f) mutable -> jule::Bool {
								return static__1e401e930_bit_and(_219173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1e675950d:;
						{
							_216350_s.get()._field_operators._field_bit_or=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _219372_f) mutable -> jule::Bool {
								return static__1e401ebc7_bit_or(_219372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1e6759585:;
						{
							_216350_s.get()._field_operators._field_bit_xor=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _219573_f) mutable -> jule::Bool {
								return static__1e401ee6e_bit_xor(_219573_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1e675960c:;
						{
							_216350_s.get()._field_operators._field_neg=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _219769_f) mutable -> jule::Bool {
								return static__1e4020557_neg(_219769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1e6759684:;
						{
							_216350_s.get()._field_operators._field_pos=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _219969_f) mutable -> jule::Bool {
								return static__1e40207ee_pos(_219969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1e675970b:;
						{
							_216350_s.get()._field_operators._field_bit_not=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _220173_f) mutable -> jule::Bool {
								return static__1e4020a96_bit_not(_220173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1e6759783:;
						{
							_216350_s.get()._field_operators._field_add_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _220376_f) mutable -> jule::Bool {
								return static__1e402117e_add_assign(_220376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1e675980a:;
						{
							_216350_s.get()._field_operators._field_sub_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _220576_f) mutable -> jule::Bool {
								return static__1e4021426_sub_assign(_220576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1e6759882:;
						{
							_216350_s.get()._field_operators._field_div_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _220776_f) mutable -> jule::Bool {
								return static__1e40216bd_div_assign(_220776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1e6759909:;
						{
							_216350_s.get()._field_operators._field_mul_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _220976_f) mutable -> jule::Bool {
								return static__1e4021965_mul_assign(_220976_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1e6759981:;
						{
							_216350_s.get()._field_operators._field_mod_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _221176_f) mutable -> jule::Bool {
								return static__1e4021c0c_mod_assign(_221176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1e6759a08:;
						{
							_216350_s.get()._field_operators._field_shl_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _221376_f) mutable -> jule::Bool {
								return static__1e4021ea4_shl_assign(_221376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1e6759a80:;
						{
							_216350_s.get()._field_operators._field_shr_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _221576_f) mutable -> jule::Bool {
								return static__1e402224b_shr_assign(_221576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1e6759b07:;
						{
							_216350_s.get()._field_operators._field_bit_or_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _221779_f) mutable -> jule::Bool {
								return static__1e40224e3_bit_or_assign(_221779_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1e6759b7e:;
						{
							_216350_s.get()._field_operators._field_bit_and_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _221980_f) mutable -> jule::Bool {
								return static__1e402278a_bit_and_assign(_221980_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1e6759c06:;
						{
							_216350_s.get()._field_operators._field_bit_xor_assign=_1e40143d6_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1e34019a0_Fn>)>([=](jule::Ptr<_1e34019a0_Fn> _222180_f) mutable -> jule::Bool {
								return static__1e4022a32_bit_xor_assign(_222180_f);
							}));
						}
					}
					_match_end_1e6758980:;
				};
			}
			_iter_next_1e67580de:;
			++it;
			goto _iter_begin_1e67580de;
		}
		_iter_end_1e67580de:;
	};
}



inline void _1e4015706_precheck_struct_type(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3318840_Struct>& _222645_s) {
	if (_222645_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_222645_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_222645_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e3352093_StructIns> _223721_ins = _1e330d714_instance(_222645_s);;
		_223721_ins.get()._field_checked=true;
		_1e331297c_append_instance(_222645_s.ptr(), _223721_ins);
		_1e4014a02_precheck_struct_ins(_self_, _223721_ins);
	};
	_1e4015470_check_struct_ins_operators(_self_, _222645_s.get()._field_instances[0LL]);
}



inline void _1e40158d2_precheck_struct_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1e678a055:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _224721_s = *it;
			{
				_1e4015706_precheck_struct_type(_self_, _224721_s);
			}
			_iter_next_1e678a055:;
			++it;
			goto _iter_begin_1e678a055;
		}
		_iter_end_1e678a055:;
	};
}



inline void _1e4015b57_check_rets(_1e400067a_Sema* _self_, jule::Ptr<_1e3404651_FnIns>& _225234_f) {
	if (_1e3401e12_is_void(_225234_f.get()._field_decl.ptr())) {
		return;;
	};
	_1e4017d02_MissingRetChecker _225613_mrc = static__1e40181ba_new();;
	jule::Bool _225713_ok = _1e40191cc_check(&_225613_mrc, _225234_f.get()._field_scope);;
	if ((!(_225713_ok))) {
		_1e400333c_push_err(&(*_self_), _225234_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1e4015e76_check_fn_ins_sc(_1e400067a_Sema* _self_, jule::Ptr<_1e3404651_FnIns>& _226339_f, jule::Ptr<_1e3ed06d2_ScopeChecker>& _226355_sc) {
	if (_226339_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1e3eee39e_append_ret_vars(_226355_sc.get()._field_table.get()._field_vars,_226339_f);
	_1e3eee657_append_param_vars(_226355_sc.get()._field_table.get()._field_vars,_226339_f);
	_1e3eee932_append_generic_type_aliases(_226355_sc.get()._field_table.get()._field_type_aliases,_226339_f);
	_1e3ee0a11_check(_226355_sc, _226339_f.get()._field_decl.get()._field_scope,_226339_f.get()._field_scope);
	if ((!(_1e3ed331c_stopped(_226355_sc.ptr())))) {
		_1e4015b57_check_rets(&(*_self_), _226339_f);
	};
}



inline void _1e4016295_check_fn_ins_caller(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3404651_FnIns>& _228044_f, jule::Ptr<_1e1c31ee6_Token> _228059_caller) {
	if (_228044_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1e4061466_SymbolTable> _228517_old = _228044_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e4002e74_set_current_file(_228044_f.get()._field_decl.get()._field_sema.ptr(), _228517_old);
	});;
	jule::Ptr<_1e4061466_SymbolTable> _228717_file = _1e3eeec84_find_file(_228044_f.get()._field_decl.get()._field_sema.get()._field_files,_228044_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_228717_file != nullptr)) {
		_1e4002e74_set_current_file(_228044_f.get()._field_decl.get()._field_sema.ptr(), _228717_file);
	};
	jule::Ptr<_1e3ed06d2_ScopeChecker> _229217_sc = _1e3e682d5_new_scope_checker(_228044_f.get()._field_decl.get()._field_sema,_228044_f);;
	_229217_sc.get()._field_called_from=_228059_caller;
	_1e4015e76_check_fn_ins_sc(_self_.ptr(), _228044_f,_229217_sc);
	if ((_228044_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_228044_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_228044_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e401651a_check_fn_ins(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e3404651_FnIns>& _230237_f) {
	_1e4016295_check_fn_ins_caller(_self_, _230237_f,nullptr);
}



inline void _1e4016790_check_type_fn(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _230638_f) {
	if (_230638_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_230638_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230638_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e6795bba:;
		if (it != expr.end()) {
			jule::Ptr<_1e3404651_FnIns> _231621_ins = *it;
			{
				_1e401651a_check_fn_ins(_self_, _231621_ins);
			}
			_iter_next_1e6795bba:;
			++it;
			goto _iter_begin_1e6795bba;
		}
		_iter_end_1e6795bba:;
	};
}



inline void _1e4016a15_check_test_fn(_1e400067a_Sema* _self_, jule::Ptr<_1e3404651_FnIns>& _232137_f) {
	if (_232137_f.get()._field_decl.get()._field_public) {
		_1e400333c_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_232137_f.get()._field_params.len() != 1LL) || (_232137_f.get()._field_result != nullptr))) {
		_1e400333c_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4099647_Sptr> _233417_sptr = _1e4093993_sptr(_232137_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_233417_sptr == nullptr)) {
		_1e400333c_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3352093_StructIns> _234113_s = _1e4094b81_strct(_233417_sptr.get()._field_elem.ptr());;
	if (((_234113_s == nullptr) || (!(_1e3eeca62_is_std_package(_234113_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1e400333c_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e400365b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e4016c8a_precheck_type_fn(jule::Ptr<_1e400067a_Sema> _self_, jule::Ptr<_1e34019a0_Fn>& _234941_f) {
	if (_234941_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_234941_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_234941_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e3404651_FnIns> _236021_ins = _1e3403100_instance(_234941_f);;
		_234941_f.get()._field_instances = jule::alloc_for_append(_234941_f.get()._field_instances,1);_234941_f.get()._field_instances.__push(_236021_ins);;
		_1e40098b5_reload_fn_ins_types(_self_, _236021_ins);
		_236021_ins.get()._field_reloaded=true;
		if (_1e40a806d_has_directive(_234941_f.get()._field_directives,jule::Str("test", 4))) {
			_1e4016a15_check_test_fn(_self_.ptr(), _236021_ins);
		};
	};
}



inline void _1e4016e66_precheck_fn_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1e67a080c:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> _237321_decl = *it;
			{
				{
					auto &expr = _237321_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e67a11c0:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _237425_m = *it;
						{
							_1e4016c8a_precheck_type_fn(_self_, _237425_m);
						}
						_iter_next_1e67a11c0:;
						++it;
						goto _iter_begin_1e67a11c0;
					}
					_iter_end_1e67a11c0:;
				};
			}
			_iter_next_1e67a080c:;
			++it;
			goto _iter_begin_1e67a080c;
		}
		_iter_end_1e67a080c:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e67a0dd4:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _237821_decl = *it;
			{
				_1e4016c8a_precheck_type_fn(_self_, _237821_decl);
			}
			_iter_next_1e67a0dd4:;
			++it;
			goto _iter_begin_1e67a0dd4;
		}
		_iter_end_1e67a0dd4:;
	};
}



inline void _1e4017142_check_fn_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e67a20e4:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _238521_decl = *it;
			{
				_1e4016790_check_type_fn(_self_, _238521_decl);
			}
			_iter_next_1e67a20e4:;
			++it;
			goto _iter_begin_1e67a20e4;
		}
		_iter_end_1e67a20e4:;
	};
}



inline void _1e401731d_check_package_types(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e67a337b:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _239321_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _239321_f);
				_1e40137ae_check_global_types(_self_);
				_1e4016e66_precheck_fn_types(_self_);
				_1e40158d2_precheck_struct_types(_self_);
			}
			_iter_next_1e67a337b:;
			++it;
			goto _iter_begin_1e67a337b;
		}
		_iter_end_1e67a337b:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e67a4cc8:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _240421_f = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _240421_f);
				_1e4017142_check_fn_types(_self_);
				_1e40151c8_check_struct_types(_self_);
			}
			_iter_next_1e67a4cc8:;
			++it;
			goto _iter_begin_1e67a4cc8;
		}
		_iter_end_1e67a4cc8:;
	};
}



inline void _1e40174e9_set_file_sema_fields(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e67a53b1:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _241221_f = *it;
			{
				_241221_f.get()._field_sema=_self_;
			}
			_iter_next_1e67a53b1:;
			++it;
			goto _iter_begin_1e67a53b1;
		}
		_iter_end_1e67a53b1:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1e67a6516:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _241621_st = *it;
			{
				_241621_st.get()._field_sema=_self_;
			}
			_iter_next_1e67a6516:;
			++it;
			goto _iter_begin_1e67a6516;
		}
		_iter_end_1e67a6516:;
	};
}



inline void _1e40176c5_set_sema_fields(jule::Ptr<_1e400067a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e67a701c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _242221_file = *it;
			{
				_1e4002e74_set_current_file(_self_.ptr(), _242221_file);
				_1e40174e9_set_file_sema_fields(_self_);
			}
			_iter_next_1e67a701c:;
			++it;
			goto _iter_begin_1e67a701c;
		}
		_iter_end_1e67a701c:;
	};
}



inline void _1e401794a_check(jule::Ptr<_1e400067a_Sema> _self_, jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _242830_files) {
	_self_.get()._field_files=_242830_files;
	_1e4005ae2_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e40176c5_set_sema_fields(_self_);
	_1e4006175_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e4005e99_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e4012bdc_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e401731d_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e400067a_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e4017d02_MissingRetChecker static__1e40181ba_new(void) {
	return _1e4017d02_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1e4018495_check_conditional(_1e4017d02_MissingRetChecker* _self_, jule::Ptr<_1e3ecc9ed_Conditional> _247136_c) {
	{
		auto &expr = _247136_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e67ab571:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eb7ea0_If> _247221_elif = *it;
			{
				if ((_247221_elif == nullptr)) {
					return false;
				};
				if ((!(_1e4018dbe_check_scope(&(*_self_), _247221_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1e67ab571:;
			++it;
			goto _iter_begin_1e67ab571;
		}
		_iter_end_1e67ab571:;
	};
	return ((_247136_c.get()._field_default != nullptr) && _1e4018dbe_check_scope(&(*_self_), _247136_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e40187a3_check_match(_1e4017d02_MissingRetChecker* _self_, jule::Ptr<_1e3ece11a_Match> _248330_m) {
	{
		auto &expr = _248330_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e67ad9e6:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ece538_Case> _248421_c = *it;
			{
				if ((_248421_c == nullptr)) {
					return false;
				};
				jule::I64 _248817_n = (*_self_)._field_breaked.len();;
				jule::Bool _248917_ok = _1e4018dbe_check_scope(&(*_self_), _248421_c.get()._field_scope);;
				{
					
					if ((_248817_n != (*_self_)._field_breaked.len())) {
						_case_begin_1e67b0762:;
						{
							return false;
						}
					}
					else if ((!(_248917_ok))) {
						_case_begin_1e67b07d9:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1e67b0861;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1e67b0861:;
						{
							(*_self_)._field_falled=false;
							if ((_248421_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1e67ad9e6;
						}
					}
					_match_end_1e67b06b8:;
				};
			}
			_iter_next_1e67ad9e6:;
			++it;
			goto _iter_begin_1e67ad9e6;
		}
		_iter_end_1e67ad9e6:;
	};
	return ((_248330_m.get()._field_default != nullptr) && _1e4018dbe_check_scope(&(*_self_), _248330_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e4018ab1_check_inf_iter(_1e4017d02_MissingRetChecker* _self_, jule::Ptr<_1e3eccbda_InfIter> _250933_it) {
	jule::I64 _251013_n = (*_self_)._field_breaked.len();;
	if (_1e4018dbe_check_scope(&(*_self_), _250933_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
		return true;
	};
	if ((_251013_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251617_itaddr = static_cast<jule::Uintptr>(_250933_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_251013_n);
			auto it = expr.begin();
			_iter_begin_1e67b45ce:;
			if (it != expr.end()) {
				jule::Uintptr _251720_addr = *it;
				{
					if ((_251617_itaddr == _251720_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
						return false;
					};
				}
				_iter_next_1e67b45ce:;
				++it;
				goto _iter_begin_1e67b45ce;
			}
			_iter_end_1e67b45ce:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
	};
	return true;
}



inline jule::Bool _1e4018dbe_check_scope(_1e4017d02_MissingRetChecker* _self_, jule::Ptr<_1e3e547aa_Scope> _252830_s) {
	if ((_252830_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252830_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1e67b62b2:;
		if (it != expr.end()) {
			jule::Any _253221_st = *it;
			{
				{
					auto &_match_expr{ _253221_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e3ece725_FallSt>>()) {
						_case_begin_1e67b6ba8:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3ecd48d_BreakSt>>()) {
						_case_begin_1e67b6c52:;
						{
							jule::Uintptr _253821_addr = _253221_st.operator jule::Ptr<_1e3ecd48d_BreakSt>().get()._field_it;;
							if ((_253821_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253821_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3ecd2a1_ContSt>>()) {
						_case_begin_1e67b6cb8:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
						_case_begin_1e67b6d2e:;
						{
							if (_1e4018ab1_check_inf_iter(&(*_self_), _253221_st.operator jule::Ptr<_1e3eccbda_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3ece912_RetSt>>()) {
						_case_begin_1e67b6d95:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3e547aa_Scope>>()) {
						_case_begin_1e67b6e0b:;
						{
							if (_1e4018dbe_check_scope(&(*_self_), _253221_st.operator jule::Ptr<_1e3e547aa_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
						_case_begin_1e67b6e83:;
						{
							{
								auto &_match_expr{ _253221_st.operator jule::Ptr<_1e40662e5_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
									_case_begin_1e67bab13:;
									{
										return true;
									}
								}
								_match_end_1e67baa69:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3ecc9ed_Conditional>>()) {
						_case_begin_1e67b700a:;
						{
							if (_1e4018495_check_conditional(&(*_self_), _253221_st.operator jule::Ptr<_1e3ecc9ed_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
						_case_begin_1e67b7082:;
						{
							if (_1e40187a3_check_match(&(*_self_), _253221_st.operator jule::Ptr<_1e3ece11a_Match>())) {
								return true;
							};
						}
					}
					_match_end_1e67b6a10:;
				};
			}
			_iter_next_1e67b62b2:;
			++it;
			goto _iter_begin_1e67b62b2;
		}
		_iter_end_1e67b62b2:;
	};
	return false;
}



inline jule::Bool _1e40191cc_check(_1e4017d02_MissingRetChecker* _self_, jule::Ptr<_1e3e547aa_Scope> _257424_s) {
	return _1e4018dbe_check_scope(&(*_self_), _257424_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4017d02_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e40199b3_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e401acd3_is_initialized(_1e401a92b_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1e401b047_is_type_inferred(_1e401a92b_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1e401a92b_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e401bac5_dispose(jule::Ptr<_1e34019a0_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1e3401e12_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1e3400a04_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1e401bd6c_to_str(jule::Ptr<_1e34019a0_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1e3401e12_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1e3400a04_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e3404651_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1e4096138_Prim> _4113_prim = _1e409372e_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1e40990e7_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1e401c1ad_logical(jule::Ptr<_1e34019a0_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1e3401e12_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1e3400a04_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e3404651_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1e4096138_Prim> _6713_prim = _1e409372e_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1e4098d83_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1e4094b81_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1e401c455_eq(jule::Ptr<_1e34019a0_Fn> _7522_f) {
	return static__1e401c1ad_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1e401c6ec_gt(jule::Ptr<_1e34019a0_Fn> _8022_f) {
	return static__1e401c1ad_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1e401c994_gt_eq(jule::Ptr<_1e34019a0_Fn> _8525_f) {
	return static__1e401c1ad_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1e401cc3b_lt(jule::Ptr<_1e34019a0_Fn> _9022_f) {
	return static__1e401c1ad_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1e401ced3_lt_eq(jule::Ptr<_1e34019a0_Fn> _9525_f) {
	return static__1e401c1ad_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1e401d324_result(jule::Ptr<_1e34019a0_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1e3401e12_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1e3400a04_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e3404651_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1e4094b81_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1e401d5bb_shl(jule::Ptr<_1e34019a0_Fn> _12223_f) {
	return static__1e401d324_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1e401d863_shr(jule::Ptr<_1e34019a0_Fn> _12723_f) {
	return static__1e401d324_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1e401db0a_add(jule::Ptr<_1e34019a0_Fn> _13223_f) {
	return static__1e401d324_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1e401dda2_sub(jule::Ptr<_1e34019a0_Fn> _13723_f) {
	return static__1e401d324_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1e401e149_div(jule::Ptr<_1e34019a0_Fn> _14223_f) {
	return static__1e401d324_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1e401e3e1_mul(jule::Ptr<_1e34019a0_Fn> _14723_f) {
	return static__1e401d324_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1e401e688_mod(jule::Ptr<_1e34019a0_Fn> _15223_f) {
	return static__1e401d324_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1e401e930_bit_and(jule::Ptr<_1e34019a0_Fn> _15727_f) {
	return static__1e401d324_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1e401ebc7_bit_or(jule::Ptr<_1e34019a0_Fn> _16226_f) {
	return static__1e401d324_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1e401ee6e_bit_xor(jule::Ptr<_1e34019a0_Fn> _16727_f) {
	return static__1e401d324_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1e40202b0_unary(jule::Ptr<_1e34019a0_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1e3401e12_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1e3400a04_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e3404651_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1e4094b81_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1e4020557_neg(jule::Ptr<_1e34019a0_Fn> _19223_f) {
	return static__1e40202b0_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1e40207ee_pos(jule::Ptr<_1e34019a0_Fn> _19723_f) {
	return static__1e40202b0_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1e4020a96_bit_not(jule::Ptr<_1e34019a0_Fn> _20227_f) {
	return static__1e40202b0_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1e4020dd7_assign(jule::Ptr<_1e34019a0_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1e3401e12_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1e3400a04_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1e402117e_add_assign(jule::Ptr<_1e34019a0_Fn> _22730_f) {
	return static__1e4020dd7_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1e4021426_sub_assign(jule::Ptr<_1e34019a0_Fn> _23230_f) {
	return static__1e4020dd7_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1e40216bd_div_assign(jule::Ptr<_1e34019a0_Fn> _23730_f) {
	return static__1e4020dd7_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1e4021965_mul_assign(jule::Ptr<_1e34019a0_Fn> _24230_f) {
	return static__1e4020dd7_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1e4021c0c_mod_assign(jule::Ptr<_1e34019a0_Fn> _24730_f) {
	return static__1e4020dd7_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1e4021ea4_shl_assign(jule::Ptr<_1e34019a0_Fn> _25230_f) {
	return static__1e4020dd7_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1e402224b_shr_assign(jule::Ptr<_1e34019a0_Fn> _25730_f) {
	return static__1e4020dd7_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1e40224e3_bit_or_assign(jule::Ptr<_1e34019a0_Fn> _26233_f) {
	return static__1e4020dd7_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1e402278a_bit_and_assign(jule::Ptr<_1e34019a0_Fn> _26734_f) {
	return static__1e4020dd7_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1e4022a32_bit_xor_assign(jule::Ptr<_1e34019a0_Fn> _27234_f) {
	return static__1e4020dd7_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1e401b454_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e4052347_push_err(_1e4051d2a_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1e400333c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1e40525ab_check_trait(_1e4051d2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1e4092541_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1e374ee30_Trait> _12513_trt = _1e4094de5_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1e4093993_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e68058ea:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1e4093993_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1e4094b81_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1e68059d8;
			}
		}
		else if ((_1e4094b81_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e68059d8:;
			{
				jule::Ptr<_1e3352093_StructIns> _13617_s = _1e4094b81_strct((*_self_)._field_src.ptr());;
				if ((!(_1e3315d8c_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _1e404688b_trait_has_reference_receiver(_12513_trt))) {
					_1e4052347_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1e4094de5_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e6805a4e:;
			{
				_12132_ok = (_12513_trt == _1e4094de5_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1e680528a:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1e6805235:;
	};
}



inline jule::Bool _1e4052820_check_ptr(_1e4051d2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_1e4092541_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_1e409cbab_Ptr> _15617_dest = _1e4093c07_ptr((*_self_)._field_dest.ptr());;
	if (_1e409d67e_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _1e4091d26_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _1e4052a84_check_prim(_1e4051d2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1e4096138_Prim> _16517_prim = _1e409372e_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1e409935b_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _1e4091d26_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _1e4052e3b___type_enum(_1e4051d2a_TypeCompatibilityChecker* _self_, jule::Ptr<_1e37eea6d_TypeEnum>& _17331_e, jule::Ptr<_1e4091661_TypeKind>& _17350_t2) {
	jule::Bool _17367_ok = jule::Bool();
	{
		auto &expr = _17331_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1e680d5e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e3584902_TypeEnumItem> _17421_item = *it;
			{
				if (_1e4091d26_equals(_17421_item.get()._field_kind.get()._field_kind, _17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
				jule::Ptr<_1e37eea6d_TypeEnum> _17821_ke = _1e40941d0_tenm(_17421_item.get()._field_kind.get()._field_kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1e680d5e5;
				};
				if (_1e4052e3b___type_enum(&(*_self_), _17821_ke,_17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
			}
			_iter_next_1e680d5e5:;
			++it;
			goto _iter_begin_1e680d5e5;
		}
		_iter_end_1e680d5e5:;
	};
	_17367_ok = false;
	return _17367_ok;
}



inline jule::Bool _1e40531a0_check_type_enum(_1e4051d2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _18936_ok = jule::Bool();
	if (_1e4091d26_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18936_ok = true;
		return _18936_ok;
	};
	jule::Ptr<_1e37eea6d_TypeEnum> _19317_e = _1e40941d0_tenm((*_self_)._field_dest.ptr());;
	_18936_ok = _1e4052e3b___type_enum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18936_ok;
}



inline jule::Bool _1e4053414_check(_1e4051d2a_TypeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1e4093c07_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1e4052820_check_ptr(&(*_self_));
		return _19726_ok;
	};
	if (_1e4092c7d_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1e4092541_is_nil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1e409372e_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e6813c05:;
			{
				_19726_ok = _1e4052a84_check_prim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e40941d0_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e6813a90:;
			{
				_19726_ok = _1e40531a0_check_type_enum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e4094de5_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e6813b06:;
			{
				_19726_ok = _1e40525ab_check_trait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1e6812c37:;
			{
				_19726_ok = _1e4091d26_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1e6812ae4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4051d2a_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e4053db5_push_err(_1e4053953_AssignTypeChecker* _self_, jule::Str _22927_fmt, jule::Slice<jule::Any> _22940_args) {
	_1e400333c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22927_fmt,jule::Any(_22940_args));
}



inline jule::Bool _1e4054129_check_validity(_1e4053953_AssignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1e409491c_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6817269:;
			{
				jule::Ptr<_1e3404651_FnIns> _23717_f = _1e409491c_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1e3405399_is_builtin(_23717_f.ptr())) {
						_case_begin_1e6818842:;
						{
							_1e4053db5_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1e68188b9:;
						{
							_1e4053db5_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_1e3402176_is_method(_23717_f.get()._field_decl.ptr())) {
						_case_begin_1e6818941:;
						{
							_1e4053db5_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if ((_23717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1e68189b8:;
						{
							_1e4053db5_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1e6818765:;
				};
			}
		}
		else if ((_1e40953bd_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e68172e1:;
			{
				_1e4053db5_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1e68171ae:;
	};
	return _23417_valid;
}



inline jule::Bool _1e405438d_check_const(_1e4053953_AssignTypeChecker* _self_) {
	if (((((!(_1e4066ba8_is_const((*_self_)._field_d.ptr()))) || (_1e409372e_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1e3ecc624_is_num(_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _27313_kind = _1e409372e_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e3ecc37c_is_float(_27313_kind)) {
			_case_begin_1e682031b:;
			{
				if ((!(_1e4034060_float_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1e4053db5_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1e3ecc05d_is_int(_27313_kind)) {
			_case_begin_1e681eb34:;
			{
				if ((!(_1e4050bd6_int_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1e4053db5_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1e681eabd:;
			{
				return false;
			}
		}
		_match_end_1e681ea68:;
	};
	return true;
}



inline jule::Bool _1e4054602_is_prim(_1e4053953_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1e40922cc_cpp_linked((*_self_)._field_dest.ptr()) || _1e40922cc_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1e409372e_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1e4054866_check_compatibility(_1e4053953_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1e6823e35:;
			{
				return false;
			}
		}
		else if ((!(_1e4054129_check_validity(&(*_self_))))) {
			_case_begin_1e6823eac:;
			{
				return false;
			}
		}
		else if (_1e405438d_check_const(&(*_self_))) {
			_case_begin_1e6824034:;
			{
				return true;
			}
		}
		else if ((_1e4093e6b_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e68240ab:;
			{
				jule::Ptr<_1e4091661_TypeKind> _31521_dkind = (*_self_)._field_dest;;
				if ((_1e4093e6b_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31521_dkind=_1e4093e6b_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1e409372e_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1e6823d14;
				};
				if (_1e3ec8d90_types_are_compatible(_1e409372e_prim(_1e4093e6b_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1e409372e_prim(_31521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1e4054602_is_prim(&(*_self_))) {
			_case_begin_1e6824133:;
			{
				jule::Ptr<_1e4096138_Prim> _32517_dest = _1e409372e_prim((*_self_)._field_dest.ptr());;
				if (_1e409935b_is_any(_32517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1e4096138_Prim> _32921_src = _1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1e3ec8d90_types_are_compatible(_32517_dest.get()._field_kind,_32921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1e6823d14:;
	};
	return _1e4008ab2_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1e4054aca_check(_1e4053953_AssignTypeChecker* _self_) {
	jule::Bool _33813_ok = _1e4054866_check_compatibility(&(*_self_));;
	if (_33813_ok) {
		_1e40a9aec_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4053953_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e4055834_push_generic(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _35636_k, jule::I64 _35650_i) {
	(*_self_)._field_f.get()._field_generics[_35650_i]=_35636_k;
}



inline jule::Bool _1e4055b0e_annotate_prim(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _36044_k) {
	jule::Bool _36060_ok = jule::Bool();
	jule::Str _36113_kind = _1e4091a18_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e682c944:;
		if (it != expr.end()) {
			jule::I64 _36213_i = it - expr.begin();
			jule::Ptr<_1e3342b00_GenericDecl> _36216_g = *it;
			{
				if ((_36113_kind != _36216_g.get()._field_ident)) {
					goto _iter_next_1e682c944;
				};
				jule::Ptr<_1e4091661_TypeKind> _36717_t = (*_self_)._field_f.get()._field_generics[_36213_i];;
				{
					
					if ((_36717_t == nullptr)) {
						_case_begin_1e682e5e4:;
						{
							_1e4055834_push_generic(&(*_self_), _36044_k,_36213_i);
						}
					}
					else if ((!(_1e4091d26_equals(_36717_t, _36044_k)))) {
						_case_begin_1e682e66b:;
						{
							_36060_ok = false;
							return _36060_ok;
						}
					}
					_match_end_1e682e4a1:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_36044_k.get()._field_kind;
				_36060_ok = true;
				return _36060_ok;
			}
			_iter_next_1e682c944:;
			++it;
			_36213_i++;
			goto _iter_begin_1e682c944;
		}
		_iter_end_1e682c944:;
	};
	_36060_ok = false;
	return _36060_ok;
}



inline jule::Bool _1e4055e1c_annotate_slc(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _38343_k) {
	jule::Bool _38359_ok = jule::Bool();
	jule::Ptr<_1e409a0a4_Slc> _38417_pslc = _1e40946a8_slc((*((*_self_)._field_k)).ptr());;
	if ((_38417_pslc == nullptr)) {
		_38359_ok = false;
		return _38359_ok;
	};
	jule::Ptr<_1e409a0a4_Slc> _38917_slc = _1e40946a8_slc(_38343_k.ptr());;
	(*_self_)._field_k=(&(_38417_pslc.get()._field_elem));
	_38359_ok = _1e4057627_annotate_kind(&(*_self_), _38917_slc.get()._field_elem);
	return _38359_ok;
}



inline jule::Bool _1e40562c4_check_map_key(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>* _39443_k, jule::Ptr<_1e4091661_TypeKind>& _39463_ck) {
	jule::Bool _39480_ok = jule::Bool();
	jule::Ptr<_1e4091661_TypeKind>* _39517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_39443_k;
	_39480_ok=_1e4057627_annotate_kind(&(*_self_), _39463_ck);
	(*_self_)._field_k=_39517_old;
	return _39480_ok;
}



inline jule::Bool _1e40565d2_annotate_map(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _40243_k) {
	jule::Bool _40259_ok = jule::Bool();
	jule::Ptr<_1e409b65a_Map> _40317_pmap = _1e4095159_map((*((*_self_)._field_k)).ptr());;
	if ((_40317_pmap == nullptr)) {
		_40259_ok = false;
		return _40259_ok;
	};
	jule::Ptr<_1e409b65a_Map> _40817_m = _1e4095159_map(_40243_k.ptr());;
	_40259_ok = (_1e40562c4_check_map_key(&(*_self_), (&(_40317_pmap.get()._field_key)),_40817_m.get()._field_key) && _1e40562c4_check_map_key(&(*_self_), (&(_40317_pmap.get()._field_val)),_40817_m.get()._field_val));
	return _40259_ok;
}



inline jule::Bool _1e40568e0_annotate_fn(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _41442_k) {
	jule::Bool _41458_ok = jule::Bool();
	jule::Ptr<_1e3404651_FnIns> _41517_pf = _1e409491c_fnc((*((*_self_)._field_k)).ptr());;
	if ((_41517_pf == nullptr)) {
		_41458_ok = false;
		return _41458_ok;
	};
	jule::Ptr<_1e3404651_FnIns> _41917_f = _1e409491c_fnc(_41442_k.ptr());;
	{
		
		if ((_41517_pf.get()._field_params.len() != _41917_f.get()._field_params.len())) {
			_case_begin_1e6837d17:;
			{
				_41458_ok = false;
				return _41458_ok;
			}
		}
		else if ((_1e3401e12_is_void(_41517_pf.get()._field_decl.ptr()) != _1e3401e12_is_void(_41917_f.get()._field_decl.ptr()))) {
			_case_begin_1e6837d8e:;
			{
				_41458_ok = false;
				return _41458_ok;
			}
		}
		_match_end_1e6837c90:;
	};
	_41458_ok=true;
	jule::Ptr<_1e4091661_TypeKind>* _42817_old = (*_self_)._field_k;;
	{
		auto &expr = _41917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e6839775:;
		if (it != expr.end()) {
			jule::I64 _42914_i = it - expr.begin();
			jule::Ptr<_1e3403782_ParamIns> _42921_fp = *it;
			{
				(*_self_)._field_k=(&(_41517_pf.get()._field_params[_42914_i].get()._field_kind));
				_41458_ok=(_1e4057627_annotate_kind(&(*_self_), _42921_fp.get()._field_kind) && _41458_ok);
			}
			_iter_next_1e6839775:;
			++it;
			_42914_i++;
			goto _iter_begin_1e6839775;
		}
		_iter_end_1e6839775:;
	};
	if ((!(_1e3401e12_is_void(_41517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_41517_pf.get()._field_result));
		_41458_ok=(_1e4057627_annotate_kind(&(*_self_), _41917_f.get()._field_result) && _41458_ok);
	};
	(*_self_)._field_k=_42817_old;
	return _41458_ok;
}



inline jule::Bool _1e4056bed_annotate_ptr(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _44343_k) {
	jule::Bool _44359_ok = jule::Bool();
	jule::Ptr<_1e409cbab_Ptr> _44417_pptr = _1e4093c07_ptr((*((*_self_)._field_k)).ptr());;
	if ((_44417_pptr == nullptr)) {
		_44359_ok = false;
		return _44359_ok;
	};
	jule::Ptr<_1e409cbab_Ptr> _44917_ptr = _1e4093c07_ptr(_44343_k.ptr());;
	(*_self_)._field_k=(&(_44417_pptr.get()._field_elem));
	_44359_ok = _1e4057627_annotate_kind(&(*_self_), _44917_ptr.get()._field_elem);
	return _44359_ok;
}



inline jule::Bool _1e405700b_annotate_sptr(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _45444_k) {
	jule::Bool _45460_ok = jule::Bool();
	jule::Ptr<_1e4099647_Sptr> _45517_ssptr = _1e4093993_sptr((*((*_self_)._field_k)).ptr());;
	if ((_45517_ssptr == nullptr)) {
		_45460_ok = false;
		return _45460_ok;
	};
	jule::Ptr<_1e4099647_Sptr> _46017_sptr = _1e4093993_sptr(_45444_k.ptr());;
	(*_self_)._field_k=(&(_45517_ssptr.get()._field_elem));
	_45460_ok = _1e4057627_annotate_kind(&(*_self_), _46017_sptr.get()._field_elem);
	return _45460_ok;
}



inline jule::Bool _1e4057319_annotate_any(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _46543_k) {
	jule::Bool _46559_ok = jule::Bool();
	jule::Str _46613_kind = _1e4091a18_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e6841c88:;
		if (it != expr.end()) {
			jule::I64 _46713_i = it - expr.begin();
			jule::Ptr<_1e3342b00_GenericDecl> _46716_g = *it;
			{
				if ((_46613_kind != _46716_g.get()._field_ident)) {
					goto _iter_next_1e6841c88;
				};
				jule::Ptr<_1e4091661_TypeKind> _47217_t = (*_self_)._field_f.get()._field_generics[_46713_i];;
				{
					
					if ((_47217_t == nullptr)) {
						_case_begin_1e6843938:;
						{
							_1e4055834_push_generic(&(*_self_), _46543_k,_46713_i);
						}
					}
					else if ((!(_1e4091d26_equals(_47217_t, _46543_k)))) {
						_case_begin_1e68439b0:;
						{
							_46559_ok = false;
							return _46559_ok;
						}
					}
					_match_end_1e68437e5:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_46543_k.get()._field_kind;
				_46559_ok = true;
				return _46559_ok;
			}
			_iter_next_1e6841c88:;
			++it;
			_46713_i++;
			goto _iter_begin_1e6841c88;
		}
		_iter_end_1e6841c88:;
	};
	_46559_ok = false;
	return _46559_ok;
}



inline jule::Bool _1e4057627_annotate_kind(_1e40552a1_DynamicTypeAnnotation* _self_, jule::Ptr<_1e4091661_TypeKind>& _48844_k) {
	jule::Bool _48860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _48860_ok;
	};
	{
		
		if (_1e4057319_annotate_any(&(*_self_), _48844_k)) {
			_case_begin_1e6846573:;
			{
				_48860_ok = true;
				return _48860_ok;
			}
		}
		else if ((_1e409372e_prim(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e68465d9:;
			{
				_48860_ok = _1e4055b0e_annotate_prim(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1e40946a8_slc(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e6846287:;
			{
				_48860_ok = _1e4055e1c_annotate_slc(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1e4095159_map(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e68462ed:;
			{
				_48860_ok = _1e40565d2_annotate_map(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1e409491c_fnc(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e6846364:;
			{
				_48860_ok = _1e40568e0_annotate_fn(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1e4093c07_ptr(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e6845d8b:;
			{
				_48860_ok = _1e4056bed_annotate_ptr(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1e4093993_sptr(_48844_k.ptr()) != nullptr)) {
			_case_begin_1e6845e02:;
			{
				_48860_ok = _1e405700b_annotate_sptr(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else {
			_case_begin_1e6845d25:;
			{
				_48860_ok = false;
				return _48860_ok;
			}
		}
		_match_end_1e6845cc0:;
	};
}



inline jule::Bool _1e405788b_annotate(_1e40552a1_DynamicTypeAnnotation* _self_) {
	jule::Bool _51336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_51336_ok = _1e4057627_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _51336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e40552a1_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1e40585b2_push_err_token(_1e4058062_FnCallArgChecker* _self_, jule::Ptr<_1e1c31ee6_Token> _52933_token, jule::Str _52948_fmt, jule::Slice<jule::Any> _52961_args) {
	_1e400333c_push_err((*_self_)._field_e.get()._field_s.ptr(), _52933_token,_52948_fmt,jule::Any(_52961_args));
}



inline void _1e40588d1_push_err(_1e4058062_FnCallArgChecker* _self_, jule::Str _53327_fmt, jule::Slice<jule::Any> _53340_args) {
	_1e40585b2_push_err_token(&(*_self_), (*_self_)._field_error_token,_53327_fmt,jule::Any(_53340_args));
}



inline jule::Slice<jule::Ptr<_1e3403782_ParamIns>> _1e4058b45_get_params(_1e4058062_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1e3400790_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1e4058e53_check_counts(_1e4058062_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>& _54632_params) {
	jule::Bool _54655_ok = jule::Bool();
	jule::I64 _54717_n = _54632_params.len();;
	if (((_54717_n > 0LL) && _1e3400790_is_self(_54632_params[0LL].get()._field_decl.ptr()))) {
		(_54717_n)--;
	};
	jule::I64 _55217_diff = (_54717_n - (*_self_)._field_args.len());;
	{
		
		if ((_55217_diff == 0LL)) {
			_case_begin_1e6851a78:;
			{
				_54655_ok = true;
				return _54655_ok;
			}
		}
		else if (((_54717_n > 0LL) && _54632_params[(_54717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1e6851ade:;
			{
				_54655_ok = true;
				return _54655_ok;
			}
		}
		else if (((_55217_diff < 0LL) || (_55217_diff > _54632_params.len()))) {
			_case_begin_1e6851b55:;
			{
				_1e40588d1_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_54655_ok = false;
				return _54655_ok;
			}
		}
		_match_end_1e68519ce:;
	};
	jule::Str _56317_idents = jule::Str();;
	for (; (_55217_diff > 0LL); (_55217_diff)--) {
		{
			_56317_idents+=(jule::Str(", ", 2) + _54632_params[(_54717_n - _55217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1e6853c34:;
	}
	_iter_end_1e6853c34:;;
	(_56317_idents).mut_slice(2LL);;
	_1e40588d1_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_56317_idents)}));
	_54655_ok = false;
	return _54655_ok;
}



inline jule::Bool _1e40593a4_check_arg(_1e4058062_FnCallArgChecker* _self_, jule::Ptr<_1e3403782_ParamIns>& _57333_p, jule::Ptr<_1e40662e5_Data>& _57352_arg, jule::Ptr<_1e1c31ee6_Token>& _57369_error_token) {
	jule::Bool _57392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1e3406147_parameter_uses_generics(_57333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_57392_ok=(!(_57333_p.get()._field_decl.get()._field_variadic));
		if (_57392_ok) {
			_1e40552a1_DynamicTypeAnnotation _57725_dta = _1e40552a1_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_57333_p, ._field_a=_57352_arg, ._field_error_token=_57369_error_token, };;
			_57392_ok=_1e405788b_annotate(&_57725_dta);
		};
		if ((!(_57392_ok))) {
			_1e40585b2_push_err_token(&(*_self_), _57369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_57392_ok = false;
			return _57392_ok;
		};
	};
	if (_1e400a443_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _57333_p.get()._field_decl.get()._field_mutable,_57333_p.get()._field_decl.get()._field_reference,_57333_p.get()._field_kind,_57352_arg,_57369_error_token)) {
		_1e400863e_check_assign_type((*_self_)._field_e.get()._field_s, _57333_p.get()._field_decl.get()._field_reference,_57333_p.get()._field_kind,_57352_arg,_57369_error_token);
	};
	_57392_ok = true;
	return _57392_ok;
}



inline jule::Bool _1e405975b_push(_1e4058062_FnCallArgChecker* _self_, jule::Ptr<_1e3403782_ParamIns>& _60028_p, jule::Ptr<_1e3339d28_Expr> _60046_arg) {
	jule::Bool _60060_ok = jule::Bool();
	jule::Ptr<_1e4091661_TypeKind> _60117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _60213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1e40662e5_Data> _60317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_60028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_60028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_60028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_60317_d=_1e4082ab4_eval_expr_kind((*_self_)._field_e, _60046_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_60117_old;
	(*_self_)._field_e.get()._field_immutable=_60213_old_immut;
	if ((_60317_d == nullptr)) {
		_60060_ok = false;
		return _60060_ok;
	};
	_60060_ok=_1e40593a4_check_arg(&(*_self_), _60028_p,_60317_d,_60046_arg.get()._field_token);
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_60317_d.get()._field_model);;
	return _60060_ok;
}



inline jule::Bool _1e4059b13_push_variadic(_1e4058062_FnCallArgChecker* _self_, jule::Ptr<_1e3403782_ParamIns>& _62537_p, jule::I64 _62555_i) {
	jule::Bool _62565_ok = jule::Bool();
	_62565_ok=true;
	jule::Bool _62717_variadiced = false;;
	jule::Bool _62813_more = ((_62555_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1e33ea3a0_SliceExprModel> _62917_model = jule::new_ptr<_1e33ea3a0_SliceExprModel>(_1e33ea3a0_SliceExprModel{._field_elem_kind=_62537_p.get()._field_kind, });;
	jule::Ptr<_1e4091661_TypeKind> _63317_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _63813_variadic = _62537_p.get()._field_kind.get()._field_variadic;;
	_62537_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_62537_p.get()._field_kind.get()._field_variadic=_63813_variadic;
	});;
	for (; (_62555_i < (*_self_)._field_args.len()); (_62555_i)++) {
		{
			jule::Ptr<_1e3339d28_Expr> _64521_arg = (*_self_)._field_args[_62555_i];;
			{
				auto &_match_expr{ _64521_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1e333c952_VariadicExpr>>()) {
					_case_begin_1e6862418:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_62537_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_1e6862d31:;
					{
						(*_self_)._field_e.get()._field_prefix=_62537_p.get()._field_kind;
					}
				}
				_match_end_1e6862ccb:;
			};
			jule::Ptr<_1e40662e5_Data> _65821_d = _1e4082dc2_eval((*_self_)._field_e, _64521_arg);;
			if ((_65821_d == nullptr)) {
				_62565_ok=false;
				goto _iter_next_1e6861901;
			};
			if (_65821_d.get()._field_kind.get()._field_variadic) {
				_62717_variadiced=true;
				_62537_p.get()._field_kind.get()._field_variadic=true;
				_62565_ok=(_62565_ok && _1e40593a4_check_arg(&(*_self_), _62537_p,_65821_d,_64521_arg.get()._field_token));
				{
					auto &_match_expr{ _65821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
						_case_begin_1e6865053:;
						{
							_62917_model=_65821_d.get()._field_model.operator jule::Ptr<_1e33ea3a0_SliceExprModel>();
							_62917_model.get()._field_elem_kind=_62537_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1e6865dab:;
						{
							_62917_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_65821_d.get()._field_model);;
						}
					}
					_match_end_1e6865d56:;
				};
				(_62555_i)++;
				goto _iter_end_1e6861901;
			};
			_62565_ok=(_62565_ok && _1e40593a4_check_arg(&(*_self_), _62537_p,_65821_d,_64521_arg.get()._field_token));
			_62917_model.get()._field_elems = jule::alloc_for_append(_62917_model.get()._field_elems,1);_62917_model.get()._field_elems.__push(_65821_d.get()._field_model);;
		}
	_iter_next_1e6861901:;
	}
	_iter_end_1e6861901:;;
	(*_self_)._field_e.get()._field_prefix=_63317_old;
	if ((_62717_variadiced && _62813_more)) {
		_1e40585b2_push_err_token(&(*_self_), (*_self_)._field_args[_62555_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_62917_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(static_cast<jule::Any>(_62917_model));;
	};
	return _62565_ok;
}



inline jule::Bool _1e4059e21_check_args(_1e4058062_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>& _70134_params) {
	jule::Bool _70157_ok = jule::Bool();
	jule::Bool _70213_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_70157_ok=true;
	jule::I64 _70617_i = 0LL;;
	if (((_70134_params.len() > 0LL) && _1e3400790_is_self(_70134_params[0LL].get()._field_decl.ptr()))) {
		(_70617_i)++;
	};
	_julec_label_iter:;
	while ((_70617_i < _70134_params.len())) {
		{
			jule::Ptr<_1e3403782_ParamIns> _71321_p = _70134_params[_70617_i];;
			{
				
				if (_71321_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1e686c489:;
					{
						_70157_ok=(_1e4059b13_push_variadic(&(*_self_), _71321_p,_70617_i) && _70157_ok);
						goto _iter_end_1e686a993;
					}
				}
				else if (((*_self_)._field_args.len() <= _70617_i)) {
					_case_begin_1e686bb09:;
					{
						_70157_ok=false;
						goto _iter_end_1e686a993;
					}
				}
				else {
					_case_begin_1e686c0e3:;
					{
						_70157_ok=(_1e405975b_push(&(*_self_), _71321_p,(*_self_)._field_args[_70617_i]) && _70157_ok);
					}
				}
				_match_end_1e686c07c:;
			};
			(_70617_i)++;
		}
	_iter_next_1e686a993:;
	}
	_iter_end_1e686a993:;;
	(*_self_)._field_e.get()._field_arg=_70213_arg;
	return _70157_ok;
}



inline jule::Bool _1e405a1a7_check_dynamic_type_annotation(_1e4058062_FnCallArgChecker* _self_) {
	jule::Bool _73250_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e686e524:;
		if (it != expr.end()) {
			jule::Ptr<_1e4091661_TypeKind> _73316_g = *it;
			{
				if ((_73316_g == nullptr)) {
					_1e40588d1_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_73250_ok = false;
					return _73250_ok;
				};
			}
			_iter_next_1e686e524:;
			++it;
			goto _iter_begin_1e686e524;
		}
		_iter_end_1e686e524:;
	};
	_73250_ok = true;
	return _73250_ok;
}



inline jule::Bool _1e405a42c_check(_1e4058062_FnCallArgChecker* _self_) {
	jule::Bool _74226_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e3403782_ParamIns>> _74317_params = _1e4058b45_get_params(&(*_self_));;
	_74226_ok=_1e4058e53_check_counts(&(*_self_), _74317_params);
	if ((!(_74226_ok))) {
		_74226_ok = false;
		return _74226_ok;
	};
	_74226_ok=_1e4059e21_check_args(&(*_self_), _74317_params);
	if ((_74226_ok && (*_self_)._field_dynamic_annotation)) {
		_74226_ok=_1e405a1a7_check_dynamic_type_annotation(&(*_self_));
	};
	return _74226_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4058062_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1e405ae77_push_err(_1e405a96b_StructLitChecker* _self_, jule::Ptr<_1e1c31ee6_Token> _76627_token, jule::Str _76642_fmt, jule::Slice<jule::Any> _76655_args) {
	_1e406836e_push_err((*_self_)._field_e.ptr(), _76627_token,_76642_fmt,jule::Any(_76655_args));
}



inline void _1e405b296_push_suggestion(_1e405a96b_StructLitChecker* _self_, jule::Str _77134_fmt, jule::Slice<jule::Any> _77147_args) {
	_1e406868d_push_suggestion((*_self_)._field_e.ptr(), _77134_fmt,jule::Any(_77147_args));
}



inline void _1e405b65e_push_match(_1e405a96b_StructLitChecker* _self_, jule::Ptr<_1e332d657_FieldIns>& _77534_f, jule::Ptr<_1e40662e5_Data>& _77553_d, jule::Ptr<_1e1c31ee6_Token>& _77568_error_token) {
	;
	if (_1e400a443_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_77534_f.get()._field_kind,_77553_d,_77568_error_token)) {
		_1e400863e_check_assign_type((*_self_)._field_e.get()._field_s, false,_77534_f.get()._field_kind,_77553_d,_77568_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1e33e9910_StructArgExprModel>(_1e33e9910_StructArgExprModel{._field_field=_77534_f, ._field_expr=_77553_d.get()._field_model}));;
}



inline void _1e405b97d_check_pair(_1e405a96b_StructLitChecker* _self_, jule::Ptr<_1e333eb41_FieldExprPair>& _78834_pair, jule::Slice<jule::Ptr<_1e3339d28_Expr>>& _78861_exprs) {
	jule::Ptr<_1e332d657_FieldIns> _79017_f = _1e332b18d_find_field((*_self_)._field_s.ptr(), _78834_pair.get()._field_field.get()._field_kind);;
	if ((_79017_f == nullptr)) {
		_1e405ae77_push_err(&(*_self_), _78834_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_78834_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _79017_f.get()._field_decl.get()._field_public,_79017_f.get()._field_decl.get()._field_token)))) {
		_1e405ae77_push_err(&(*_self_), _78834_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_78834_pair.get()._field_field.get()._field_kind)}));
		_1e405b296_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _78861_exprs;
		auto it = expr.begin();
		_iter_begin_1e687971b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _80221_expr = *it;
			{
				{
					auto &_match_expr{ _80221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e333eb41_FieldExprPair>>()) {
						_case_begin_1e687a0ce:;
						{
							jule::Ptr<_1e333eb41_FieldExprPair> _80525_dpair = _80221_expr.get()._field_kind.operator jule::Ptr<_1e333eb41_FieldExprPair>();;
							{
								
								if ((_78834_pair == _80525_dpair)) {
									_case_begin_1e687b09c:;
									{
										goto _iter_end_1e687971b;
									}
								}
								else if ((_78834_pair.get()._field_field.get()._field_kind == _80525_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1e687b124:;
									{
										_1e405ae77_push_err(&(*_self_), _78834_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_78834_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1e687971b;
									}
								}
								_match_end_1e687aee2:;
							};
						}
					}
					_match_end_1e6879e25:;
				};
			}
			_iter_next_1e687971b:;
			++it;
			goto _iter_begin_1e687971b;
		}
		_iter_end_1e687971b:;
	};
	jule::Ptr<_1e4091661_TypeKind> _81617_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_81617_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_79017_f.get()._field_kind;
	jule::Ptr<_1e40662e5_Data> _82017_d = _1e4082ab4_eval_expr_kind((*_self_)._field_e, _78834_pair.get()._field_expr.get()._field_kind);;
	if ((_82017_d == nullptr)) {
		return;;
	};
	_1e405b65e_push_match(&(*_self_), _79017_f,_82017_d,_78834_pair.get()._field_field);
}



inline jule::Bool _1e405bc8b_ready_exprs(_1e405a96b_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e3339d28_Expr>>& _82735_exprs) {
	jule::Bool _82817_ok = true;;
	{
		auto &expr = _82735_exprs;
		auto it = expr.begin();
		_iter_begin_1e687eb0b:;
		if (it != expr.end()) {
			jule::I64 _82914_i = it - expr.begin();
			jule::Ptr<_1e3339d28_Expr> _82921_expr = *it;
			{
				{
					auto &_match_expr{ _82921_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e3341329_KeyValPair>>()) {
						_case_begin_1e6880865:;
						{
							jule::Ptr<_1e3341329_KeyValPair> _83225_pair = _82921_expr.get()._field_kind.operator jule::Ptr<_1e3341329_KeyValPair>();;
							{
								auto &_match_expr{ _83225_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
									_case_begin_1e68811d4:;
									{
										goto _match_end_1e6881668;
									}
								}
								else {
									_case_begin_1e68818dd:;
									{
										_1e405ae77_push_err(&(*_self_), _83225_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_82817_ok=false;
										goto _iter_next_1e687eb0b;
									}
								}
								_match_end_1e6881668:;
							};
							_82735_exprs[_82914_i].get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e333eb41_FieldExprPair>(_1e333eb41_FieldExprPair{._field_field=_83225_pair.get()._field_key.get()._field_token, ._field_expr=_83225_pair.get()._field_val}));
						}
					}
					_match_end_1e68806ab:;
				};
			}
			_iter_next_1e687eb0b:;
			++it;
			_82914_i++;
			goto _iter_begin_1e687eb0b;
		}
		_iter_end_1e687eb0b:;
	};
	return _82817_ok;
}



inline void _1e405c011_check(_1e405a96b_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e3339d28_Expr>>& _85129_exprs) {
	if ((_85129_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1e405bc8b_ready_exprs(&(*_self_), _85129_exprs)))) {
		return;;
	};
	jule::Bool _86017_paired = false;;
	{
		auto &expr = _85129_exprs;
		auto it = expr.begin();
		_iter_begin_1e687e996:;
		if (it != expr.end()) {
			jule::I64 _86114_i = it - expr.begin();
			jule::Ptr<_1e3339d28_Expr> _86121_expr = *it;
			{
				{
					auto &_match_expr{ _86121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e333eb41_FieldExprPair>>()) {
						_case_begin_1e6889583:;
						{
							jule::Ptr<_1e333eb41_FieldExprPair> _86425_pair = _86121_expr.get()._field_kind.operator jule::Ptr<_1e333eb41_FieldExprPair>();;
							if (((_86114_i > 0LL) && (!(_86017_paired)))) {
								_1e405ae77_push_err(&(*_self_), _86425_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_86017_paired=true;
							_1e405b97d_check_pair(&(*_self_), _86425_pair,_85129_exprs);
						}
					}
					else {
						_case_begin_1e6884b99:;
						{
							if (_86017_paired) {
								_1e405ae77_push_err(&(*_self_), _86121_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_86114_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1e405ae77_push_err(&(*_self_), _86121_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1e687e996;
							};
							jule::Ptr<_1e332d657_FieldIns> _87925_field = (*_self_)._field_s.get()._field_fields[_86114_i];;
							if ((!(_1e4003a13_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _87925_field.get()._field_decl.get()._field_public,_87925_field.get()._field_decl.get()._field_token)))) {
								_1e405ae77_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1e405b296_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e4091661_TypeKind> _88725_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_88725_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_87925_field.get()._field_kind;
							jule::Ptr<_1e40662e5_Data> _89125_d = _1e4082ab4_eval_expr_kind((*_self_)._field_e, _86121_expr.get()._field_kind);;
							if ((_89125_d == nullptr)) {
								goto _iter_next_1e687e996;
							};
							_1e405b65e_push_match(&(*_self_), _87925_field,_89125_d,_86121_expr.get()._field_token);
						}
					}
					_match_end_1e6884a23:;
				};
			}
			_iter_next_1e687e996:;
			++it;
			_86114_i++;
			goto _iter_begin_1e687e996;
		}
		_iter_end_1e687e996:;
	};
	if ((!(_86017_paired))) {
		jule::I64 _90217_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _90321_diff = (_90217_n - _85129_exprs.len());;
		{
			
			if ((_90321_diff <= 0LL)) {
				_case_begin_1e688c6b8:;
				{
					return;;
				}
			}
			_match_end_1e688c564:;
		};
		jule::Str _90921_idents = jule::Str();;
		for (; (_90321_diff > 0LL); (_90321_diff)--) {
			{
				_90921_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_90217_n - _90321_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1e688d114:;
		}
		_iter_end_1e688d114:;;
		(_90921_idents).mut_slice(2LL);;
		_1e405ae77_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_90921_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e405a96b_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e401a92b_Var> _1e405c9e5_build_var(_1e405c550_RangeChecker* _self_, jule::Ptr<_1e334830e_VarDecl>& _92829_decl) {
	jule::Ptr<_1e401a92b_Var> _92917_v = _1e340bbdb_build_var(_92829_decl);;
	return _92917_v;
}



inline void _1e405cbc1_set_size_key(_1e405c550_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e6891d2c:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1e40199b3_IterRelation>(_1e40199b3_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e401a92b_Var>()});
			}
		}
		_match_end_1e6891c72:;
	};
}



inline void _1e405d0ab_check_range_expr_validity(_1e405c550_RangeChecker* _self_, jule::Ptr<_1e40662e5_Data>& _95949_d, jule::Ptr<_1e401a92b_Var>& _95960_key, jule::Ptr<_1e4091661_TypeKind>& _95976_k) {
	jule::Bool _96017__mut = _95960_key.get()._field_mutable;;
	if ((_96017__mut && (!(_1e4092a19_mutable(_95976_k.ptr()))))) {
		_96017__mut=false;
	};
	_1e400a443_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _96017__mut,_95960_key.get()._field_reference,_95960_key.get()._field_kind.get()._field_kind,_95949_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1e405d298_check_slice(_1e405c550_RangeChecker* _self_) {
	_1e405cbc1_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1e409a0a4_Slc> _97817_slc = _1e40946a8_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_97817_slc.get()._field_elem});
	_1e405d0ab_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97817_slc.get()._field_elem);
}



inline void _1e405d474_check_array(_1e405c550_RangeChecker* _self_) {
	_1e405cbc1_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1e409c24e_Arr> _99117_arr = _1e4094444_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_99117_arr.get()._field_elem});
	_1e405d0ab_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_99117_arr.get()._field_elem);
}



inline void _1e405d650_check_map_key_a(_1e405c550_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1e409b65a_Map> _100317_m = _1e4095159_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_100317_m.get()._field_key});
	jule::Ptr<_1e40662e5_Data> _100717_d = jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d)));;
	_100717_d.get()._field_kind=_100317_m.get()._field_key;
	_1e405d0ab_check_range_expr_validity(&(*_self_), _100717_d,(*_self_)._field_kind.get()._field_key_a,_100317_m.get()._field_key);
}



inline void _1e405d82b_check_map_key_b(_1e405c550_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1e409b65a_Map> _101817_m = _1e4095159_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_101817_m.get()._field_val});
	jule::Ptr<_1e40662e5_Data> _102217_d = jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d)));;
	_102217_d.get()._field_kind=_101817_m.get()._field_val;
	_1e405d0ab_check_range_expr_validity(&(*_self_), _102217_d,(*_self_)._field_kind.get()._field_key_b,_101817_m.get()._field_val);
}



inline void _1e405da07_check_map(_1e405c550_RangeChecker* _self_) {
	_1e405d650_check_map_key_a(&(*_self_));
	_1e405d82b_check_map_key_b(&(*_self_));
}



inline void _1e405dbd3_check_str(_1e405c550_RangeChecker* _self_) {
	_1e405cbc1_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1e1c3478a_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1e405c9e5_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1e405de47_check(_1e405c550_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1e68a5bcb:;
		}
		else if ((_1e40946a8_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e68a5978:;
			{
				_1e405d298_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1e4094444_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e68a4c74:;
			{
				_1e405d474_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1e4095159_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e68a4cda:;
			{
				_1e405da07_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1e68a4c0d:;
			{
				jule::Ptr<_1e4096138_Prim> _106117_prim = _1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_106117_prim != nullptr) && _1e40990e7_is_str(_106117_prim.ptr()))) {
					_1e405dbd3_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1e68a4b31:;
	};
	_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e405c550_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e405eb90_prepare_types(_1e405e6d9_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1e3405135_types((*_self_)._field_f.ptr());
	};
}



inline void _1e405ee15_prepare_exprs(_1e405e6d9_RetTypeChecker* _self_, jule::Ptr<_1e3339d28_Expr>& _109037_e) {
	if ((_109037_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _109037_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333a9a5_TupleExpr>>()) {
			_case_begin_1e68aac14:;
			{
				(*_self_)._field_exprs=_109037_e.get()._field_kind.operator jule::Ptr<_1e333a9a5_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1e68aa87e:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_109037_e);;
			}
		}
		_match_end_1e68aa43e:;
	};
}



inline void _1e40600e1_ret_vars(_1e405e6d9_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1e3401e12_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1e401a92b_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1e3ed06d2_ScopeChecker> _110817_root_scope = _1e3ed37e5_get_root((*_self_)._field_sc);;
	jule::I64 _111017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1e68ad81b:;
		if (it != expr.end()) {
			jule::I64 _111113_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _111116_ident = *it;
			{
				if (((!(_1e1c3478a_is_ignore_ident(_111116_ident.get()._field_kind))) && (!(_1e1c34a32_is_anon_ident(_111116_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_110817_root_scope.get()._field_table.get()._field_vars[_111017_j]);;
					(_111017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=(*_self_)._field_types[_111113_i]}), }));;
				};
			}
			_iter_next_1e68ad81b:;
			++it;
			_111113_i++;
			goto _iter_begin_1e68ad81b;
		}
		_iter_end_1e68ad81b:;
	};
	if ((_111017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1e40602bc_check_exprs(_1e405e6d9_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e40662e5_Data>> _113417_datas = jule::Slice<jule::Ptr<_1e40662e5_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e68b1c1a:;
		if (it != expr.end()) {
			jule::I64 _113614_i = it - expr.begin();
			jule::Ptr<_1e3339d28_Expr> _113621_expr = *it;
			{
				if ((_113614_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1e68b1c1a;
				};
				jule::Ptr<_1e4091661_TypeKind> _114121_t = (*_self_)._field_types[_113614_i];;
				jule::Ptr<_1e40662e5_Data> _114321_d = _1e40831d0_eval_expr(_1e4007d36_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1e40abe84_Lookup>((*_self_)._field_sc, 0),_114121_t), _113621_expr);;
				if ((_114321_d == nullptr)) {
					goto _iter_next_1e68b1c1a;
				};
				_113417_datas = jule::alloc_for_append(_113417_datas,1);_113417_datas.__push(_114321_d);;
				if (((!(_114321_d.get()._field_mutable)) && _1e4092a19_mutable(_114321_d.get()._field_kind.ptr()))) {
					_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1e4053953_AssignTypeChecker _115521_ac = _1e4053953_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_114121_t, ._field_d=_114321_d, ._field_error_token=(*_self_)._field_error_token};;
				_1e4054aca_check(&_115521_ac);
			}
			_iter_next_1e68b1c1a:;
			++it;
			_113614_i++;
			goto _iter_begin_1e68b1c1a;
		}
		_iter_end_1e68b1c1a:;
	};
	if ((_113417_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebdda_TupleExprModel>(_1e33ebdda_TupleExprModel{._field_datas=_113417_datas}));
	} else if ((_113417_datas.len() == 1LL)) {
		(*_self_)._field_model=_113417_datas[0LL].get()._field_model;
	};
}



inline jule::Bool _1e40605ca_check(_1e405e6d9_RetTypeChecker* _self_, jule::Ptr<_1e3339d28_Expr>& _117429_e) {
	_1e405eb90_prepare_types(&(*_self_));
	_1e405ee15_prepare_exprs(&(*_self_), _117429_e);
	_1e40600e1_ret_vars(&(*_self_));
	jule::I64 _117913_n = (*_self_)._field_exprs.len();;
	if (((_117913_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1e3402b27_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_117913_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1e3401e12_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_117913_n > (*_self_)._field_types.len())) {
		_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_117913_n < (*_self_)._field_types.len())) {
		_1e400333c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1e40602bc_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e405e6d9_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4061983_find_package(_1e4061466_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1e68bdbd3:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1e68bdbd3:;
			++it;
			goto _iter_begin_1e68bdbd3;
		}
		_iter_end_1e68bdbd3:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4061c91_select_package(_1e4061466_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1e68beb7e:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_1e68beb7e:;
			++it;
			goto _iter_begin_1e68beb7e;
		}
		_iter_end_1e68beb7e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e401a92b_Var> _1e4062148_find_var(_1e4061466_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _1e4063c0a___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e4062500_find_type_alias(_1e4061466_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _1e406415b___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_1e3318840_Struct> _1e40628a7_find_struct(_1e4061466_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1e68c26dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_1e68c26dc:;
			++it;
			goto _iter_begin_1e68c26dc;
		}
		_iter_end_1e68c26dc:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34019a0_Fn> _1e4062c5e_find_fn(_1e4061466_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e68c3b72:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_1e68c3b72:;
			++it;
			goto _iter_begin_1e68c3b72;
		}
		_iter_end_1e68c3b72:;
	};
	return nullptr;
}



inline jule::Ptr<_1e374ee30_Trait> _1e406306c_find_trait(_1e4061466_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1e68c4de8:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_1e68c4de8:;
			++it;
			goto _iter_begin_1e68c4de8;
		}
		_iter_end_1e68c4de8:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34189c8_Enum> _1e406337a_find_enum(_1e4061466_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1e68c5d83:;
		if (it != expr.end()) {
			jule::Ptr<_1e34189c8_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_1e68c5d83:;
			++it;
			goto _iter_begin_1e68c5d83;
		}
		_iter_end_1e68c5d83:;
	};
	return nullptr;
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e4063688_find_type_enum(_1e4061466_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1e68c635b:;
		if (it != expr.end()) {
			jule::Ptr<_1e37eea6d_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_1e68c635b:;
			++it;
			goto _iter_begin_1e68c635b;
		}
		_iter_end_1e68c635b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e401a92b_Var> _1e4063c0a___find_var(_1e4061466_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I64 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_1e401a92b_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_1e68c8da8:;
		}
		_iter_end_1e68c8da8:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1e68c8814:;
			if (it != expr.end()) {
				jule::Ptr<_1e401a92b_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_1e68c8814:;
				++it;
				goto _iter_begin_1e68c8814;
			}
			_iter_end_1e68c8814:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e406415b___find_type_alias(_1e4061466_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I64 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_1e4090929_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_1e68cc186:;
		}
		_iter_end_1e68cc186:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1e68cbae2:;
			if (it != expr.end()) {
				jule::Ptr<_1e4090929_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_1e68cbae2:;
				++it;
				goto _iter_begin_1e68cbae2;
			}
			_iter_end_1e68cbae2:;
		};
	};
	return nullptr;
}



inline jule::Any _1e4064513_def_by_ident(_1e4061466_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1e68cdac2:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_1e68cdac2:;
			++it;
			goto _iter_begin_1e68cdac2;
		}
		_iter_end_1e68cdac2:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1e68d03ed:;
		if (it != expr.end()) {
			jule::Ptr<_1e4090929_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_1e68d03ed:;
			++it;
			goto _iter_begin_1e68d03ed;
		}
		_iter_end_1e68d03ed:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1e68d11e0:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_1e68d11e0:;
			++it;
			goto _iter_begin_1e68d11e0;
		}
		_iter_end_1e68d11e0:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e68d206a:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_1e68d206a:;
			++it;
			goto _iter_begin_1e68d206a;
		}
		_iter_end_1e68d206a:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1e68d3412:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_1e68d3412:;
			++it;
			goto _iter_begin_1e68d3412;
		}
		_iter_end_1e68d3412:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1e68d3d4c:;
		if (it != expr.end()) {
			jule::Ptr<_1e34189c8_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_1e68d3d4c:;
			++it;
			goto _iter_begin_1e68d3d4c;
		}
		_iter_end_1e68d3d4c:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1e68d4ac8:;
		if (it != expr.end()) {
			jule::Ptr<_1e37eea6d_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_1e68d4ac8:;
			++it;
			goto _iter_begin_1e68d4ac8;
		}
		_iter_end_1e68d4ac8:;
	};
	return nullptr;
}



inline jule::Bool _1e4064964_is_duplicated_ident(_1e4061466_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1e68d5227:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1e68d5227:;
			++it;
			goto _iter_begin_1e68d5227;
		}
		_iter_end_1e68d5227:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1e68dbc12:;
		if (it != expr.end()) {
			jule::Ptr<_1e4090929_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1e68dbc12:;
			++it;
			goto _iter_begin_1e68dbc12;
		}
		_iter_end_1e68dbc12:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1e68db10c:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1e68db10c:;
			++it;
			goto _iter_begin_1e68db10c;
		}
		_iter_end_1e68db10c:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1e68dca26:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1e68dca26:;
			++it;
			goto _iter_begin_1e68dca26;
		}
		_iter_end_1e68dca26:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1e68e062d:;
		if (it != expr.end()) {
			jule::Ptr<_1e374ee30_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1e68e062d:;
			++it;
			goto _iter_begin_1e68e062d;
		}
		_iter_end_1e68e062d:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1e68e12bb:;
		if (it != expr.end()) {
			jule::Ptr<_1e34189c8_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1e68e12bb:;
			++it;
			goto _iter_begin_1e68e12bb;
		}
		_iter_end_1e68e12bb:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1e68e229a:;
		if (it != expr.end()) {
			jule::Ptr<_1e37eea6d_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1e68e229a:;
			++it;
			goto _iter_begin_1e68e229a;
		}
		_iter_end_1e68e229a:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4061466_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e40666d0_is_nil(_1e40662e5_Data* _self_) {
	return _1e4092541_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1e4066944_is_void(_1e40662e5_Data* _self_) {
	return _1e40927a5_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1e4066ba8_is_const(_1e40662e5_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1e4066eb6_good_operand(_1e40662e5_Data* _self_, jule::Ptr<_1e40662e5_Data>& _9636_other) {
	if ((_1e40941d0_tenm(_9636_other.get()._field_kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1e409372e_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1e409935b_is_any(_1e409372e_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1e4094de5_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1e4092541_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1e40662e5_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e406736d_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1e406836e_push_err(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _12727_token, jule::Str _12742_fmt, jule::Slice<jule::Any> _12755_args) {
	_1e400333c_push_err((*_self_)._field_s.ptr(), _12727_token,_12742_fmt,jule::Any(_12755_args));
}



inline void _1e406868d_push_suggestion(_1e4067d63_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1e400365b_push_suggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1e4068869_allow_builtin(_1e4067d63_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1e4068a45_disallow_builtin(_1e4067d63_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1e4068ca9_is_unsafe(_1e4067d63_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1e406901d_is_global(_1e4067d63_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e400067a_Sema>>()) {
			_case_begin_1e6922594:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e6922484:;
			{
				return false;
			}
		}
		_match_end_1e6922099:;
	};
}



inline jule::Bool _1e40692e8_apply_numeric_prefix(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _15944_d) {
	if (((((_15944_d == nullptr) || (!(_1e4066ba8_is_const(_15944_d.ptr())))) || (_1e409372e_prim(_15944_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1e4096138_Prim> _16613_prim = _1e409372e_prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1e3ecc37c_is_float(_1e409649b_to_str(_16613_prim.ptr()))) {
			_case_begin_1e6924d9e:;
			{
				_15944_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>((*((*_self_)._field_prefix)));
				_1e33e4102_set_f64(_15944_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e33e3387_as_f64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e3ecb9ca_is_sig_int(_1e409649b_to_str(_16613_prim.ptr()))) {
			_case_begin_1e6924e15:;
			{
				if ((!(_1e4034192_sig_assignable(_1e409649b_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>((*((*_self_)._field_prefix)));
				_1e33e360c_set_i64(_15944_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e3ecbcb6_is_unsig_int(_1e409649b_to_str(_16613_prim.ptr()))) {
			_case_begin_1e6924e7b:;
			{
				if ((!(_1e4050aa4_unsig_assignable(_1e409649b_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>((*((*_self_)._field_prefix)));
				_1e33e3882_set_u64(_15944_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_15944_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1e6924b5c:;
	};
	return true;
}



inline jule::Ptr<_1e40662e5_Data> _1e406955c_lit_nil(_1e4067d63_Eval* _self_) {
	jule::Ptr<_1e3388a47_Const> _19517_constant = static__1e33e1aa0_new_nil();;
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_19517_constant), ._field_decl=false, ._field_constant=_19517_constant});
}



inline jule::Ptr<_1e40662e5_Data> _1e406986a_lit_str(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _20623_l) {
	jule::Str _20717_s = _20623_l.get()._field_value.slice(1LL,(_20623_l.get()._field_value.len() - 1LL));;
	if (_1e1c33349_is_raw_str(_20623_l.get()._field_value)) {
		_20717_s=_1e4033e0b_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_1e405107c_to_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_1e3388a47_Const> _21317_constant = static__1e33e160a_new_str(_20717_s);;
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_21317_constant), ._field_decl=false, ._field_constant=_21317_constant});
}



inline jule::Ptr<_1e40662e5_Data> _1e4069b78_lit_bool(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _22724_l) {
	jule::Ptr<_1e3388a47_Const> _22817_constant = static__1e33e13c9_new_bool((_22724_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_22817_constant), ._field_decl=false, ._field_constant=_22817_constant});
}



inline jule::Ptr<_1e40662e5_Data> _1e4069e86_lit_rune(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _24124_l) {
	;
	;
	jule::Str _24513_lt = _24124_l.get()._field_value.slice(1LL,(_24124_l.get()._field_value.len() - 1LL));;
	jule::I32 _24613_r = _1e404e3dd_to_rune(static_cast<jule::Slice<jule::U8>>(_24513_lt));;
	jule::Ptr<_1e40662e5_Data> _24717_data = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24613_r)))});;
	jule::Bool _25513_is_ascii = _1e403c662_is_ascii(_24613_r);;
	if (_25513_is_ascii) {
		_24717_data.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24717_data.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24717_data.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33edb67_RuneExprModel>(_1e33edb67_RuneExprModel{._field_code=_24613_r}));
	_24717_data.get()._field_is_rune=true;
	return _24717_data;
}



inline jule::Ptr<_1e40662e5_Data> _1e406a294_lit_float(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _27125_l) {
	;
	jule::F64 _27413_f = ({
		auto except = _1e3b9eb98_parse_float(_27125_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e3388a47_Const> _27517_constant = static__1e33e18a2_new_f64(_27413_f);;
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_27517_constant), ._field_decl=false, ._field_constant=_27517_constant});
}



inline jule::Ptr<_1e40662e5_Data> _1e406a5a2_lit_int(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _28927_l) {
	;
	jule::Str _29217_lit = _28927_l.get()._field_value;;
	jule::I64 _29317_base = 0LL;;
	{
		
		if (_1e17de125_has_prefix(_29217_lit,jule::Str("0x", 2))) {
			_case_begin_1e6936ad6:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=16LL;
			}
		}
		else if (_1e17de125_has_prefix(_29217_lit,jule::Str("0b", 2))) {
			_case_begin_1e69367b7:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=2LL;
			}
		}
		else if (_1e17de125_has_prefix(_29217_lit,jule::Str("0o", 2))) {
			_case_begin_1e693682d:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=8LL;
			}
		}
		else if (((_29217_lit[0LL] == '0') && (_29217_lit.len() > 1LL))) {
			_case_begin_1e69364a9:;
			{
				(_29217_lit).mut_slice(1LL);;
				_29317_base=8LL;
			}
		}
		else {
			_case_begin_1e6936443:;
			{
				_29317_base=10LL;
			}
		}
		_match_end_1e69363dd:;
	};
	jule::Ptr<_1e40662e5_Data> _31317_d = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31917_ok = true;;
	jule::I64 _32013_sig = ({
		auto except = _1e3b7493c_parse_int(_29217_lit,_29317_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31917_ok=false;
			0LL;
		});
	});;
	if (_31917_ok) {
		_31317_d.get()._field_constant=static__1e33e1165_new_i64(_32013_sig);
		_31317_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _33017_unsig = ({
			auto except = _1e3b5319b_parse_uint(_29217_lit,_29317_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1e406836e_push_err(&(*_self_), _28927_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1e406868d_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_31317_d.get()._field_constant=static__1e33e1297_new_u64(_33017_unsig);
		_31317_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_31317_d.get()._field_model=static_cast<jule::Any>(_31317_d.get()._field_constant);
	if ((!(_1e40692e8_apply_numeric_prefix(&(*_self_), _31317_d)))) {
		_1e408b78d_fit_bitsize(_31317_d);
	};
	return _31317_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e406a8b0_lit_num(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr>& _35127_l) {
	{
		
		if (_1e1c33ea4_is_float(_35127_l.get()._field_value)) {
			_case_begin_1e693e979:;
			{
				return _1e406a294_lit_float(&(*_self_), _35127_l);
			}
		}
		else {
			_case_begin_1e693e209:;
			{
				return _1e406a5a2_lit_int(&(*_self_), _35127_l);
			}
		}
		_match_end_1e693e14e:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e406abbd_eval_lit(_1e4067d63_Eval* _self_, jule::Ptr<_1e333ad5c_LitExpr> _36027_lit) {
	{
		
		if (_1e333b1ae_is_nil(_36027_lit.ptr())) {
			_case_begin_1e6940bbc:;
			{
				return _1e406955c_lit_nil(&(*_self_));
			}
		}
		else if (_1e1c330a2_is_str(_36027_lit.get()._field_value)) {
			_case_begin_1e69405c3:;
			{
				return _1e406986a_lit_str(&(*_self_), _36027_lit);
			}
		}
		else if (_1e1c33c0c_is_bool(_36027_lit.get()._field_value)) {
			_case_begin_1e694064a:;
			{
				return _1e4069b78_lit_bool(&(*_self_), _36027_lit);
			}
		}
		else if (_1e1c335e1_is_rune(_36027_lit.get()._field_value)) {
			_case_begin_1e69406c2:;
			{
				return _1e4069e86_lit_rune(&(*_self_), _36027_lit);
			}
		}
		else if (_1e1c3424b_is_num(_36027_lit.get()._field_value)) {
			_case_begin_1e69408c0:;
			{
				return _1e406a8b0_lit_num(&(*_self_), _36027_lit);
			}
		}
		else {
			_case_begin_1e694002e:;
			{
				return nullptr;
			}
		}
		_match_end_1e693ee74:;
	};
}



inline jule::Any _1e406aecb_find_builtins(_1e4067d63_Eval* _self_, jule::Str _37732_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ee752e_ImportInfo>>()) {
			_case_begin_1e6940e75:;
			{
				jule::Any _38021_def = _1e408b57e_find_builtins_import(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e3ee752e_ImportInfo>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e400067a_Sema>>()) {
			_case_begin_1e6940eec:;
			{
				jule::Any _38521_def = _1e408c21c_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e400067a_Sema>());;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e6943351:;
			{
				jule::Any _39021_def = _1e408c21c_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>().get()._field_s);;
				if ((_39021_def != nullptr)) {
					return jule::Any(_39021_def);
				};
			}
		}
		_match_end_1e6940e20:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1e40b827b_find_builtin_def(_37732_ident));
}



inline jule::Any _1e406b383_get_def(_1e4067d63_Eval* _self_, jule::Str _40126_ident, jule::Bool _40138_cpp_linked) {
	if ((!(_40138_cpp_linked))) {
		jule::Ptr<_1e34189c8_Enum> _40321_enm = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aba33_find_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40321_enm != nullptr)) {
			return jule::Any(_40321_enm);
		};
		jule::Ptr<_1e37eea6d_TypeEnum> _40821_tenm = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40abd41_find_type_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40821_tenm != nullptr)) {
			return jule::Any(_40821_tenm);
		};
	};
	jule::Ptr<_1e401a92b_Var> _41417_v = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aa801_find_var((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41417_v != nullptr)) {
		return jule::Any(_41417_v);
	};
	jule::Ptr<_1e34019a0_Fn> _41917_f = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40ab417_find_fn((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41917_f != nullptr)) {
		return jule::Any(_41917_f);
	};
	jule::Ptr<_1e3318840_Struct> _42417_s = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40ab060_find_struct((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42417_s != nullptr)) {
		return jule::Any(_42417_s);
	};
	jule::Ptr<_1e4090929_TypeAlias> _42917_ta = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aaba8_find_type_alias((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42917_ta != nullptr)) {
		return jule::Any(_42917_ta);
	};
	return jule::Any(_1e406aecb_find_builtins(&(*_self_), _40126_ident));
}



inline void _1e6959db2_push_reference(_1e4067d63_Eval* _self_, jule::Ptr<_1e3404651_FnIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e695e8de:;
			{
				jule::Ptr<_1e3ed06d2_ScopeChecker> _44021_sc = _1e3ed3a59_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());;
				if ((!(_1e695c6cd_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1e3407b1b_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1e695b369:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e695c6cd_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1e3407b1b_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1e695b314:;
	};
}

inline void _1e696e9ba_push_reference(_1e4067d63_Eval* _self_, jule::Ptr<_1e401a92b_Var>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e697148e:;
			{
				jule::Ptr<_1e3ed06d2_ScopeChecker> _44021_sc = _1e3ed3a59_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());;
				if ((!(_1e697210a_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1e3407b1b_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1e6970cb8:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e697210a_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1e3407b1b_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1e6970c63:;
	};
}

inline void _1e6a045aa_push_reference(_1e4067d63_Eval* _self_, jule::Ptr<_1e3352093_StructIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e6a06216:;
			{
				jule::Ptr<_1e3ed06d2_ScopeChecker> _44021_sc = _1e3ed3a59_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());;
				if ((!(_1e6a06d82_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1e3407b1b_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1e6a05a40:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e6a06d82_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1e3407b1b_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1e6a059da:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e406b916___eval_enum(_1e4067d63_Eval* _self_, jule::Ptr<_1e34189c8_Enum> _45130_enm) {
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_45130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e40662e5_Data> _1e406bcbd_eval_enum(_1e4067d63_Eval* _self_, jule::Ptr<_1e34189c8_Enum> _46332_enm, jule::Ptr<_1e1c31ee6_Token> _46344_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _46332_enm.get()._field_public,_46332_enm.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _46344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46332_enm.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e406b916___eval_enum(&(*_self_), _46332_enm);
}



inline jule::Ptr<_1e40662e5_Data> _1e406c0cb___eval_type_enum(_1e4067d63_Eval* _self_, jule::Ptr<_1e37eea6d_TypeEnum> _47235_enm) {
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_47235_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e40662e5_Data> _1e406c483_eval_type_enum(_1e4067d63_Eval* _self_, jule::Ptr<_1e37eea6d_TypeEnum> _48437_enm, jule::Ptr<_1e1c31ee6_Token> _48453_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _48437_enm.get()._field_public,_48437_enm.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _48453_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48437_enm.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e406c0cb___eval_type_enum(&(*_self_), _48437_enm);
}



inline jule::Ptr<_1e40662e5_Data> _1e406c791___eval_struct(_1e4067d63_Eval* _self_, jule::Ptr<_1e3352093_StructIns> _49332_s) {
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_49332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_49332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e40662e5_Data> _1e406cb48_eval_struct(_1e4067d63_Eval* _self_, jule::Ptr<_1e3352093_StructIns> _50634_s, jule::Ptr<_1e1c31ee6_Token> _50649_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _50634_s.get()._field_decl.get()._field_public,_50634_s.get()._field_decl.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _50649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50634_s.get()._field_decl.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e406d275_check_deprecated(&(*_self_), _50634_s.get()._field_decl.get()._field_directives,_50649_error_token);
	return _1e406c791___eval_struct(&(*_self_), _50634_s);
}



inline jule::Ptr<_1e40662e5_Data> _1e406ce56_eval_fn_ins(_1e4067d63_Eval* _self_, jule::Ptr<_1e3404651_FnIns> _51630_f) {
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_51630_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_51630_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1e406d275_check_deprecated(_1e4067d63_Eval* _self_, jule::Slice<jule::Ptr<_1e330242d_Directive>>& _52940_directives, jule::Ptr<_1e1c31ee6_Token> _52971_tok) {
	if (_1e4068ca9_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1e330242d_Directive> _53413_d = _1e408b1e9_find_directive(_52940_directives,jule::Str("deprecated", 10));;
	if ((_53413_d != nullptr)) {
		if ((_53413_d.get()._field_args.len() == 0LL)) {
			_1e406836e_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1e406836e_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_53413_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1e406868d_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e406d62c_eval_fn(_1e4067d63_Eval* _self_, jule::Ptr<_1e34019a0_Fn> _54530_f, jule::Ptr<_1e1c31ee6_Token> _54538_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _54530_f.get()._field_public,_54530_f.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _54538_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54530_f.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e406d275_check_deprecated(&(*_self_), _54530_f.get()._field_directives,_54538_error_token);
	jule::Ptr<_1e3404651_FnIns> _55417_ins = _1e3403100_instance(_54530_f);;
	_1e6959db2_push_reference(&(*_self_), _55417_ins);
	return _1e406ce56_eval_fn_ins(&(*_self_), _55417_ins);
}



inline void _1e406da17_push_illegal_cycle_error(_1e4067d63_Eval* _self_, jule::Ptr<_1e401a92b_Var>& _55944_v1, jule::Ptr<_1e401a92b_Var>& _55955_v2, jule::Str& _55970_message) {
	;
	jule::Str _56113_refers_to = _1e19054a0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55944_v1.get()._field_ident),jule::Any(_55955_v2.get()._field_ident)}));;
	(_55970_message).buffer.insert(0, (((_1e17ddb08_repeat(jule::Str(" ", 1),4LL) + _56113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e406ddd0_check_cross_cycle(_1e4067d63_Eval* _self_, jule::Ptr<_1e401a92b_Var>& _56537_v, jule::Str& _56551_message) {
	{
		auto &expr = _56537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1e6962a02:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> &_56616_d = *it;
			{
				if ((_56616_d == (*_self_)._field_owner)) {
					_1e406da17_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
				if ((!(_1e406ddd0_check_cross_cycle(&(*_self_), _56616_d,_56551_message)))) {
					_1e406da17_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
			}
			_iter_next_1e6962a02:;
			++it;
			goto _iter_begin_1e6962a02;
		}
		_iter_end_1e6962a02:;
	};
	return true;
}



inline jule::Bool _1e406e287_check_illegal_cycles(_1e4067d63_Eval* _self_, jule::Ptr<_1e401a92b_Var>& _58444_v, jule::Ptr<_1e1c31ee6_Token> _58453_decl_token) {
	jule::Bool _58475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_58475_ok = true;
		return _58475_ok;
	};
	if (((*_self_)._field_owner == _58444_v)) {
		_1e406836e_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_58475_ok = false;
		return _58475_ok;
	};
	jule::Str _59617_message = jule::Str();;
	if ((!(_1e406ddd0_check_cross_cycle(&(*_self_), _58444_v,_59617_message)))) {
		jule::Str _59921_err_msg = _59617_message;;
		_59617_message=jule::Str();
		_1e406da17_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_58444_v,_59617_message);
		_59921_err_msg=(_59921_err_msg + _59617_message);
		_1e406836e_push_err(&(*_self_), _58453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59921_err_msg)}));
		_58475_ok = false;
		return _58475_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_58444_v);;
	_58475_ok = true;
	return _58475_ok;
}



inline jule::Ptr<_1e40662e5_Data> _1e406e63e_eval_var(_1e4067d63_Eval* _self_, jule::Ptr<_1e401a92b_Var> _61131_v, jule::Ptr<_1e1c31ee6_Token> _61140_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _61131_v.get()._field_public,_61131_v.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _61140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e406d275_check_deprecated(&(*_self_), _61131_v.get()._field_directives,_61140_error_token);
	_61131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e400067a_Sema>>()) {
			_case_begin_1e696a71e:;
			{
				jule::Bool _62517_ok = _1e406e287_check_illegal_cycles(&(*_self_), _61131_v,_61140_error_token);;
				if ((!(_62517_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e696a7c9:;
			{
				if (((!(_61131_v.get()._field_reference)) || _1e4068ca9_is_unsafe(&(*_self_)))) {
					goto _match_end_1e696a6b9;
				};
				jule::Ptr<_1e3ed06d2_ScopeChecker> _63321_s = (*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>();;
				while (((_63321_s.get()._field_owner == nullptr) && (_63321_s.get()._field_parent != nullptr))) {
					{
						_63321_s=_63321_s.get()._field_parent;
					}
				_iter_next_1e696c8a8:;
				}
				_iter_end_1e696c8a8:;;
				if ((((_63321_s.get()._field_owner != nullptr) && _63321_s.get()._field_owner.get()._field_anon) && (_61131_v.get()._field_scope != _63321_s.get()._field_owner.get()._field_scope))) {
					_1e406836e_push_err(&(*_self_), _61140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1e696a6b9:;
	};
	if ((_61131_v.get()._field_scope == nullptr)) {
		_1e696e9ba_push_reference(&(*_self_), _61131_v);
	};
	if (((!(_61131_v.get()._field_cpp_linked)) && ((_61131_v.get()._field_value == nullptr) || (_61131_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_61131_v.get()._field_constant) {
			_1e40135d3_check_type_var((*_self_)._field_s, _61131_v,jule::Trait<_1e40abe84_Lookup>((*_self_)._field_s, 3));
			if ((_61131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_61131_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1e40135d3_check_type_var((*_self_)._field_s, _61131_v,(*_self_)._field_lookup);
		if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1e40662e5_Data> _67617_d = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=_61131_v.get()._field_kind.get()._field_kind, ._field_mutable=_61131_v.get()._field_mutable, ._field_reference=_61131_v.get()._field_reference, ._field_lvalue=(!(_61131_v.get()._field_constant)), ._field_model=static_cast<jule::Any>(_61131_v), });;
	if ((((!(_61131_v.get()._field_cpp_linked)) && _1e401acd3_is_initialized(_61131_v.ptr())) && (_61131_v.get()._field_value.get()._field_data != nullptr))) {
		_67617_d.get()._field_is_rune=_61131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_61131_v.get()._field_constant && (_61131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67617_d.get()._field_constant=jule::new_ptr<_1e3388a47_Const>((*(_61131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67617_d.get()._field_model=static_cast<jule::Any>(_67617_d.get()._field_constant);
	};
	if (_1e4066ba8_is_const(_67617_d.ptr())) {
		_1e40692e8_apply_numeric_prefix(&(*_self_), _67617_d);
	};
	return _67617_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e406e9e6_eval_type_alias(_1e4067d63_Eval* _self_, jule::Ptr<_1e4090929_TypeAlias> _70038_ta, jule::Ptr<_1e1c31ee6_Token> _70054_error_token) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _70038_ta.get()._field_public,_70038_ta.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _70054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_70038_ta.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70038_ta.get()._field_used=true;
	jule::Trait<_1e4091232_Kind> _70917_kind = _70038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1e40662e5_Data> _71017_d = nullptr;;
	{
		auto &_match_expr{ _70917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3352093_StructIns>>()) {
			_case_begin_1e698079a:;
			{
				_71017_d=_1e406c791___eval_struct(&(*_self_), _70917_kind.operator jule::Ptr<_1e3352093_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e34189c8_Enum>>()) {
			_case_begin_1e6980cea:;
			{
				_71017_d=_1e406b916___eval_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1e34189c8_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e37eea6d_TypeEnum>>()) {
			_case_begin_1e697e8ed:;
			{
				_71017_d=_1e406c0cb___eval_type_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1e37eea6d_TypeEnum>());
			}
		}
		else {
			_case_begin_1e697e777:;
			{
				_71017_d=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=_70038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_70038_ta.get()._field_cpp_linked) {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_ident;
				} else {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_71017_d.get()._field_model=static_cast<jule::Any>(_71017_d.get()._field_kind);
			}
		}
		_match_end_1e697e722:;
	};
	_71017_d.get()._field_kind.get()._field_generic=_70038_ta.get()._field_generic;
	return _71017_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e406ed9d_eval_def(_1e4067d63_Eval* _self_, jule::Any _73631_def, jule::Ptr<_1e1c31ee6_Token> _73641_ident) {
	{
		auto &_match_expr{ _73631_def };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e6983759:;
			{
				return _1e406e63e_eval_var(&(*_self_), _73631_def.operator jule::Ptr<_1e401a92b_Var>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e34189c8_Enum>>()) {
			_case_begin_1e69837c0:;
			{
				return _1e406bcbd_eval_enum(&(*_self_), _73631_def.operator jule::Ptr<_1e34189c8_Enum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e37eea6d_TypeEnum>>()) {
			_case_begin_1e6983836:;
			{
				return _1e406c483_eval_type_enum(&(*_self_), _73631_def.operator jule::Ptr<_1e37eea6d_TypeEnum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e69838ad:;
			{
				return _1e406cb48_eval_struct(&(*_self_), _1e330d714_instance(_73631_def.operator jule::Ptr<_1e3318840_Struct>()),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e34019a0_Fn>>()) {
			_case_begin_1e6983924:;
			{
				jule::Ptr<_1e34019a0_Fn> _74721_f = _73631_def.operator jule::Ptr<_1e34019a0_Fn>();;
				if ((_74721_f.get()._field_ident != jule::Str("init", 4))) {
					return _1e406d62c_eval_fn(&(*_self_), _74721_f,_73641_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
			_case_begin_1e698399b:;
			{
				return _1e406ce56_eval_fn_ins(&(*_self_), _73631_def.operator jule::Ptr<_1e3404651_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
			_case_begin_1e6983a23:;
			{
				return _1e406e9e6_eval_type_alias(&(*_self_), _73631_def.operator jule::Ptr<_1e4090929_TypeAlias>(),_73641_ident);
			}
		}
		_match_end_1e698366b:;
	};
	_1e406836e_push_err(&(*_self_), _73641_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73641_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1e40662e5_Data> _1e40701ab_eval_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e333bd91_IdentExpr> _76029_ident) {
	jule::Any _76117_def = _1e406b383_get_def(&(*_self_), _76029_ident.get()._field_ident,_76029_ident.get()._field_cpp_linked);;
	return _1e406ed9d_eval_def(&(*_self_), jule::Any(_76117_def),_76029_ident.get()._field_token);
}



inline jule::Ptr<_1e40662e5_Data> _1e40704b9_eval_unary(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333c59a_UnaryExpr> _76534_u) {
	_1e4083653_UnaryEval _76617_unary = static__1e4083b09_new(_self_);;
	return _1e4084da2_eval(&_76617_unary, _76534_u);
}



inline jule::Ptr<_1e40662e5_Data> _1e40707c7_eval_variadic(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333c952_VariadicExpr> _77037_v) {
	if ((_77037_v.get()._field_expr == nullptr)) {
		_1e406836e_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4091661_TypeKind> _77617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77617_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _78017_d = _1e4082ab4_eval_expr_kind(_self_, _77037_v.get()._field_expr.get()._field_kind);;
	if ((_78017_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e40934ba_variadicable(_78017_d.get()._field_kind.ptr())))) {
		_1e406836e_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_78017_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1e409a0a4_Slc> _79013_slc = _1e40946a8_slc(_78017_d.get()._field_kind.ptr());;
	_78017_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_cpp_ident=_79013_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_79013_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_79013_slc.get()._field_elem.get()._field_kind});
	return _78017_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e4070ad5_eval_unsafe(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333b566_UnsafeExpr> _80035_u) {
	jule::Bool _80113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1e40662e5_Data> _80417_d = _1e4082ab4_eval_expr_kind(_self_, _80035_u.get()._field_expr.get()._field_kind);;
	_self_.get()._field_unsafety=_80113_unsafety;
	return _80417_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e4070de3_eval_arr(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e334179c_SliceExpr> _81132_s) {
	jule::Ptr<_1e409c24e_Arr> _81317_pt = _1e4094444_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1e409c24e_Arr> _81517_arr = jule::new_ptr<_1e409c24e_Arr>(_1e409c24e_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_81317_pt.get()._field_elem});;
	jule::Bool _82117_filled = false;;
	if ((_81132_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _81132_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e333c952_VariadicExpr>>()) {
				_case_begin_1e6993280:;
				{
					if ((_81132_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1e333c952_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1e699322a;
					};
					if (_81317_pt.get()._field_auto) {
						_1e406836e_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_82117_filled=true;
					_81132_s.get()._field_exprs=_81132_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1e699322a:;
		};
	};
	_81517_arr.get()._field_n=static_cast<jule::I64>(_81132_s.get()._field_exprs.len());
	if ((!(_81317_pt.get()._field_auto))) {
		if ((_81517_arr.get()._field_n > _81317_pt.get()._field_n)) {
			_1e406836e_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81517_arr.get()._field_n < _81317_pt.get()._field_n)) {
			_81517_arr.get()._field_n=_81317_pt.get()._field_n;
		};
	};
	jule::Ptr<_1e33eb824_ArrayExprModel> _85017_model = jule::new_ptr<_1e33eb824_ArrayExprModel>(_1e33eb824_ArrayExprModel{._field_kind=_81517_arr, });;
	if (_82117_filled) {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_81132_s.get()._field_exprs.len());
	};
	jule::Ptr<_1e4091661_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81517_arr.get()._field_elem;
	{
		auto &expr = _81132_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e6998043:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1e40662e5_Data> _86221_d = _1e4082ab4_eval_expr_kind(_self_, _86121_elem.get()._field_kind);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1e6998043;
				};
				_1e400863e_check_assign_type(_self_.get()._field_s, false,_81517_arr.get()._field_elem,_86221_d,_81132_s.get()._field_token);
				_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(_86221_d.get()._field_model);;
			}
			_iter_next_1e6998043:;
			++it;
			goto _iter_begin_1e6998043;
		}
		_iter_end_1e6998043:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	if (_82117_filled) {
		_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_81517_arr, 11)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_85017_model), });
}



inline jule::Ptr<_1e40662e5_Data> _1e4071344_eval_exp_slc(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e334179c_SliceExpr> _88636_s, jule::Ptr<_1e4091661_TypeKind> _88655_t, jule::Any _88673_first) {
	jule::Ptr<_1e409a0a4_Slc> _88717_slc = jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_88655_t});;
	jule::Ptr<_1e33ea3a0_SliceExprModel> _89117_model = jule::new_ptr<_1e33ea3a0_SliceExprModel>(_1e33ea3a0_SliceExprModel{._field_elem_kind=_88655_t, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88636_s.get()._field_exprs.len())});;
	if ((_88673_first != nullptr)) {
		_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_88673_first);;
		_88636_s.get()._field_exprs=_88636_s.get()._field_exprs.slice(1LL);
	};
	jule::Ptr<_1e4091661_TypeKind> _90017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88717_slc.get()._field_elem;
	{
		auto &expr = _88636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e699d7da:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _90221_elem = *it;
			{
				jule::Ptr<_1e40662e5_Data> _90321_d = _1e4082ab4_eval_expr_kind(_self_, _90221_elem.get()._field_kind);;
				if ((_90321_d == nullptr)) {
					goto _iter_next_1e699d7da;
				};
				_1e400863e_check_assign_type(_self_.get()._field_s, false,_88717_slc.get()._field_elem,_90321_d,_88636_s.get()._field_token);
				_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_90321_d.get()._field_model);;
			}
			_iter_next_1e699d7da:;
			++it;
			goto _iter_begin_1e699d7da;
		}
		_iter_end_1e699d7da:;
	};
	_self_.get()._field_prefix=_90017_prefix;
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_88717_slc, 8)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_89117_model), });
}



inline jule::Ptr<_1e40662e5_Data> _1e4071652_eval_slice_expr(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e334179c_SliceExpr> _92139_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1e4094444_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e69a1843:;
				{
					return _1e4070de3_eval_arr(_self_, _92139_s);
				}
			}
			else if ((_1e40946a8_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e69a18ba:;
				{
					jule::Ptr<_1e409a0a4_Slc> _92725_pt = _1e40946a8_slc(_self_.get()._field_prefix.ptr());;
					return _1e4071344_eval_exp_slc(_self_, _92139_s,_92725_pt.get()._field_elem,nullptr);
				}
			}
			_match_end_1e69a1722:;
		};
	};
	jule::Ptr<_1e4091661_TypeKind> _93217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_92139_s.get()._field_exprs.len() == 0LL)) {
		_1e406836e_push_err(_self_.ptr(), _92139_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _94017_first_elem = _1e4082ab4_eval_expr_kind(_self_, _92139_s.get()._field_exprs[0LL].get()._field_kind);;
	if ((_94017_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _94517_d = _1e4071344_eval_exp_slc(_self_, _92139_s,_94017_first_elem.get()._field_kind,_94017_first_elem.get()._field_model);;
	_self_.get()._field_prefix=_93217_prefix;
	return _94517_d;
}



inline void _1e4071993_check_integer_indexing_by_data(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _95154_d, jule::Ptr<_1e1c31ee6_Token> _95164_token) {
	jule::Str _95213_err_key = _1e408d5e7_check_data_for_integer_indexing(_95154_d);;
	{
		auto &_match_expr{ _95213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e69a7580:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1e69a6b78:;
			{
				_1e406836e_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_95154_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1e69a7052:;
			{
				_1e406836e_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1e69a6e75:;
	};
}



inline void _1e4071d6c_indexing_ptr(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _96336_d, jule::Ptr<_1e40662e5_Data>& _96351_index, jule::Ptr<_1e334213d_IndexingExpr>& _96366_i) {
	_1e4071993_check_integer_indexing_by_data(&(*_self_), _96351_index,_96366_i.get()._field_token);
	jule::Ptr<_1e409cbab_Ptr> _96617_ptr = _1e4093c07_ptr(_96336_d.get()._field_kind.ptr());;
	{
		
		if (_1e409d67e_is_unsafe(_96617_ptr.ptr())) {
			_case_begin_1e69a99d3:;
			{
				_1e406836e_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e4068ca9_is_unsafe(&(*_self_))))) {
			_case_begin_1e69a9a49:;
			{
				_1e406836e_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e69a987e:;
	};
	_96336_d.get()._field_kind=_96617_ptr.get()._field_elem;
}



inline void _1e4072235_indexing_arr(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _97836_d, jule::Ptr<_1e40662e5_Data>& _97851_index, jule::Ptr<_1e334213d_IndexingExpr>& _97866_i) {
	jule::Ptr<_1e409c24e_Arr> _97917_arr = _1e4094444_arr(_97836_d.get()._field_kind.ptr());;
	_97836_d.get()._field_kind=_97917_arr.get()._field_elem;
	_1e4071993_check_integer_indexing_by_data(&(*_self_), _97851_index,_97866_i.get()._field_token);
	if ((_1e4066ba8_is_const(_97851_index.ptr()) && (_1e33e3387_as_f64(_97851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97917_arr.get()._field_n)))) {
		_1e406836e_push_err(&(*_self_), _97866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e40725ed_indexing_slc(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _98736_d, jule::Ptr<_1e40662e5_Data>& _98751_index, jule::Ptr<_1e334213d_IndexingExpr>& _98766_i) {
	jule::Ptr<_1e409a0a4_Slc> _98817_slc = _1e40946a8_slc(_98736_d.get()._field_kind.ptr());;
	_98736_d.get()._field_kind=_98817_slc.get()._field_elem;
	_1e4071993_check_integer_indexing_by_data(&(*_self_), _98751_index,_98766_i.get()._field_token);
	if ((!(_1e4066ba8_is_const(_98751_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _98736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
			_case_begin_1e69b0225:;
			{
				jule::Ptr<_1e33ea3a0_SliceExprModel> _99821_m = _98736_d.get()._field_model.operator jule::Ptr<_1e33ea3a0_SliceExprModel>();;
				jule::F64 _99917_indx = _1e33e3387_as_f64(_98751_index.get()._field_constant.ptr());;
				if ((_99917_indx >= static_cast<jule::F64>(_99821_m.get()._field_elems.len()))) {
					_1e406836e_push_err(&(*_self_), _98766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_98736_d.get()._field_model=_99821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_99917_indx))];
					_98736_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1e69b0478:;
	};
}



inline void _1e40729b6_indexing_map(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _100936_d, jule::Ptr<_1e40662e5_Data>& _100951_index, jule::Ptr<_1e334213d_IndexingExpr>& _100970_i) {
	if ((_100951_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1e409b65a_Map> _101417_m = _1e4095159_map(_100936_d.get()._field_kind.ptr());;
	_1e4053953_AssignTypeChecker _101517_atc = _1e4053953_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_101417_m.get()._field_key, ._field_d=_100951_index, ._field_error_token=_100970_i.get()._field_token};;
	_1e4054aca_check(&_101517_atc);
	_100936_d.get()._field_kind=_101417_m.get()._field_val;
}



inline void _1e4072d7e_indexing_str(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _102636_d, jule::Ptr<_1e40662e5_Data>& _102651_index, jule::Ptr<_1e334213d_IndexingExpr>& _102666_i) {
	;
	_102636_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_102651_index == nullptr)) {
		return;;
	};
	_1e4071993_check_integer_indexing_by_data(&(*_self_), _102651_index,_102666_i.get()._field_token);
	if ((!(_1e4066ba8_is_const(_102651_index.ptr())))) {
		_102636_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1e4066ba8_is_const(_102636_d.ptr())) {
		jule::Ptr<_1e1c31ee6_Token> _104217_error_token = _102666_i.get()._field_token;;
		jule::I64 _104317_j = _1e33e2dae_as_i64(_102651_index.get()._field_constant.ptr());;
		jule::Str _104417_s = _1e33e28d6_read_str(_102636_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_104317_j) >= _104417_s.len())) {
			_1e406836e_push_err(&(*_self_), _104217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1e33e3882_set_u64(_102636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_104417_s[_104317_j])));
		};
	};
}



inline void _1e4073247_to_indexing(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _105335_d, jule::Ptr<_1e40662e5_Data>& _105350_index, jule::Ptr<_1e334213d_IndexingExpr>& _105369_i) {
	{
		
		if ((_1e4093c07_ptr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69ba362:;
			{
				_1e4071d6c_indexing_ptr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1e4094444_arr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69ba3d9:;
			{
				_1e4072235_indexing_arr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1e40946a8_slc(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69ba461:;
			{
				_1e40725ed_indexing_slc(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1e4095159_map(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69ba4d8:;
			{
				_1e40729b6_indexing_map(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1e409372e_prim(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69ba560:;
			{
				jule::Ptr<_1e4096138_Prim> _106817_prim = _1e409372e_prim(_105335_d.get()._field_kind.ptr());;
				{
					
					if (_1e40990e7_is_str(_106817_prim.ptr())) {
						_case_begin_1e69be6c9:;
						{
							_1e4072d7e_indexing_str(&(*_self_), _105335_d,_105350_index,_105369_i);
							return;;
						}
					}
					_match_end_1e69be630:;
				};
			}
		}
		_match_end_1e69ba20d:;
	};
	_1e406836e_push_err(&(*_self_), _105369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_105335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1e40736cb_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333d634_SubIdentExpr>& _107967_expr, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _108014_decl, jule::Ptr<_1e334213d_IndexingExpr>& _108041_i) {
	jule::Ptr<_1e333651c_SubIdentTypeDecl> _108117_t = jule::new_ptr<_1e333651c_SubIdentTypeDecl>();;
	if ((!(_1e408e41c_push_sub_ident_from_expr(static_cast<jule::Any>(_107967_expr),_108117_t)))) {
		_1e406836e_push_err(_self_.ptr(), _108041_i.get()._field_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_108014_decl.get()._field_generics = jule::alloc_for_append(_108014_decl.get()._field_generics,1);_108014_decl.get()._field_generics.__push(jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_kind=static_cast<jule::Any>(_108117_t)}));;
	return true;
}



inline jule::Bool _1e4073ad8_push_generics_from_index_data(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _109254_decl, jule::Ptr<_1e334213d_IndexingExpr>& _109281_i) {
	{
		auto &_match_expr{ _109281_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333c59a_UnaryExpr>>()) {
			_case_begin_1e69c30b2:;
			{
				jule::Ptr<_1e40662e5_Data> _109721_d = _1e40704b9_eval_unary(_self_, _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e333c59a_UnaryExpr>());;
				if ((!(_109721_d.get()._field_decl))) {
					_1e406836e_push_err(_self_.ptr(), _109281_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_kind=(*(((jule::Any*)((&(_109721_d.get()._field_kind.get()._field_kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3335807_TypeDecl>>()) {
			_case_begin_1e69c3128:;
			{
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(_109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e3335807_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333d634_SubIdentExpr>>()) {
			_case_begin_1e69c318e:;
			{
				jule::Ptr<_1e333d634_SubIdentExpr> _110821_expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e333d634_SubIdentExpr>();;
				return _1e40736cb_push_generics_from_indexing_data_sub_ident(_self_, _110821_expr,_109254_decl,_109281_i);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
			_case_begin_1e69c3986:;
			{
				jule::Ptr<_1e333bd91_IdentExpr> _111121_expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e333bd91_IdentExpr>();;
				_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_111121_expr.get()._field_token, ._field_ident=_111121_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333a9a5_TupleExpr>>()) {
			_case_begin_1e69c39ec:;
			{
				{
					auto &expr = _109281_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e333a9a5_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1e69c8590:;
					if (it != expr.end()) {
						jule::Ptr<_1e3339d28_Expr> _111925_expr = *it;
						{
							{
								auto &_match_expr{ _111925_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e3335807_TypeDecl>>()) {
									_case_begin_1e69c99c0:;
									{
										_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(_111925_expr.get()._field_kind.operator jule::Ptr<_1e3335807_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
									_case_begin_1e69c9a36:;
									{
										jule::Ptr<_1e333bd91_IdentExpr> _112429_idexpr = _111925_expr.get()._field_kind.operator jule::Ptr<_1e333bd91_IdentExpr>();;
										_109254_decl.get()._field_generics = jule::alloc_for_append(_109254_decl.get()._field_generics,1);_109254_decl.get()._field_generics.__push(jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_112429_idexpr.get()._field_token, ._field_ident=_112429_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1e69c97b1:;
							};
						}
						_iter_next_1e69c8590:;
						++it;
						goto _iter_begin_1e69c8590;
					}
					_iter_end_1e69c8590:;
				};
			}
		}
		else {
			_case_begin_1e69c2ed5:;
			{
				_1e406836e_push_err(_self_.ptr(), _109281_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1e69c2e80:;
	};
	return true;
}



inline jule::Ptr<_1e40662e5_Data> _1e4073e90_eval_ident_decl_from_indexing(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e40662e5_Data>& _114054_d, jule::Ptr<_1e334213d_IndexingExpr>& _114069_i) {
	jule::Ptr<_1e3335807_TypeDecl> _114117_tdecl = jule::new_ptr<_1e3335807_TypeDecl>();;
	jule::Ptr<_1e3335dbd_IdentTypeDecl> _114217_decl = nullptr;;
	{
		auto &_match_expr{ _114069_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
			_case_begin_1e69cc709:;
			{
				jule::Ptr<_1e333bd91_IdentExpr> _114521_expr = _114069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e333bd91_IdentExpr>();;
				_114217_decl=jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_114521_expr.get()._field_token, ._field_ident=_114521_expr.get()._field_ident, });
				_114117_tdecl.get()._field_kind=static_cast<jule::Any>(_114217_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333d1b1_NsSelectionExpr>>()) {
			_case_begin_1e69cc770:;
			{
				jule::Ptr<_1e333d1b1_NsSelectionExpr> _115221_expr = _114069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e333d1b1_NsSelectionExpr>();;
				_114217_decl=jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_115221_expr.get()._field_ident, ._field_ident=_115221_expr.get()._field_ident.get()._field_kind, });
				_114117_tdecl.get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e33368c4_NamespaceTypeDecl>(_1e33368c4_NamespaceTypeDecl{._field_idents=_115221_expr.get()._field_ns, ._field_kind=jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_114217_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_114217_decl)})}));
			}
		}
		else {
			_case_begin_1e69cc693:;
			{
				_1e406836e_push_err(_self_.ptr(), _114069_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e69cc561:;
	};
	if ((!(_1e4073ad8_push_generics_from_index_data(_self_, _114217_decl,_114069_i)))) {
		return nullptr;
	};
	return _1e407923c_eval_type(_self_.ptr(), _114117_tdecl);
}



inline jule::Ptr<_1e40662e5_Data> _1e40742ae_eval_indexing(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e334213d_IndexingExpr> _117437_i) {
	jule::Ptr<_1e4091661_TypeKind> _117517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_117517_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _117917_d = _1e4082ab4_eval_expr_kind(_self_, _117437_i.get()._field_expr.get()._field_kind);;
	if ((_117917_d == nullptr)) {
		return nullptr;
	};
	if (_117917_d.get()._field_decl) {
		return _1e4073e90_eval_ident_decl_from_indexing(_self_, _117917_d,_117437_i);
	};
	_1e40662e5_Data _118917_old_d = (*(_117917_d));;
	jule::Ptr<_1e40662e5_Data> _119117_index = _1e4082ab4_eval_expr_kind(_self_, _117437_i.get()._field_index.get()._field_kind);;
	if ((_119117_index == nullptr)) {
		return nullptr;
	};
	_117917_d.get()._field_decl=false;
	_1e4073247_to_indexing(_self_.ptr(), _117917_d,_119117_index,_117437_i);
	if (_1e4066ba8_is_const(_117917_d.ptr())) {
		_117917_d.get()._field_decl=false;
		_117917_d.get()._field_model=static_cast<jule::Any>(_117917_d.get()._field_constant);
	} else if (_117917_d.get()._field_decl) {
		_117917_d.get()._field_decl=false;
	} else {
		_117917_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ea58c_IndexingExprModel>(_1e33ea58c_IndexingExprModel{._field_token=_117437_i.get()._field_token, ._field_expr=jule::new_ptr<_1e40662e5_Data>(_118917_old_d), ._field_index=_119117_index}));
	};
	return _117917_d;
}



inline std::tuple<jule::Ptr<_1e40662e5_Data>,jule::Ptr<_1e40662e5_Data>> _1e40745bc_eval_slicing_exprs(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3342748_SlicingExpr>& _122243_s) {
	jule::Ptr<_1e4091661_TypeKind> _122317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122317_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _122717_l = nullptr;;
	jule::Ptr<_1e40662e5_Data> _122817_r = nullptr;;
	if ((_122243_s.get()._field_start != nullptr)) {
		_122717_l=_1e4082ab4_eval_expr_kind(_self_, _122243_s.get()._field_start.get()._field_kind);
		if ((_122717_l != nullptr)) {
			_1e4071993_check_integer_indexing_by_data(_self_.ptr(), _122717_l,_122243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_122717_l=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__1e33e1165_new_i64(0LL)});
		_122717_l.get()._field_model=static_cast<jule::Any>(_122717_l.get()._field_constant);
	};
	if ((_122243_s.get()._field_to != nullptr)) {
		_122817_r=_1e4082ab4_eval_expr_kind(_self_, _122243_s.get()._field_to.get()._field_kind);
		if ((_122817_r != nullptr)) {
			_1e4071993_check_integer_indexing_by_data(_self_.ptr(), _122817_r,_122243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_122717_l,_122817_r);
}



inline void _1e4074842_slicing_arr(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _125731_d) {
	jule::Ptr<_1e4091661_TypeKind> _125817_elem_type = _1e4094444_arr(_125731_d.get()._field_kind.ptr()).get()._field_elem;;
	_125731_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_125817_elem_type}), 8)});
	_125731_d.get()._field_lvalue=false;
	_125731_d.get()._field_mutable=(_125731_d.get()._field_mutable || (!(_1e4092a19_mutable(_125817_elem_type.ptr()))));
}



inline void _1e4074c0a_slicing_str(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _127231_d, jule::Ptr<_1e40662e5_Data>& _127242_l, jule::Ptr<_1e40662e5_Data>& _127253_r) {
	_127231_d.get()._field_lvalue=false;
	_127231_d.get()._field_mutable=true;
	if ((!(_1e4066ba8_is_const(_127231_d.ptr())))) {
		return;;
	};
	if (((_127242_l == nullptr) || (_127253_r == nullptr))) {
		_127231_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1e4066ba8_is_const(_127242_l.ptr()) && _1e4066ba8_is_const(_127253_r.ptr()))) {
		jule::I64 _128517_left = _1e33e2dae_as_i64(_127242_l.get()._field_constant.ptr());;
		if ((_128517_left < 0LL)) {
			return;;
		};
		jule::Str _129017_s = _1e33e28d6_read_str(_127231_d.get()._field_constant.ptr());;
		jule::I64 _129121_right = 0LL;;
		if ((_127253_r == nullptr)) {
			_129121_right=static_cast<jule::I64>(static_cast<jule::I64>(_129017_s.len()));
		} else {
			_129121_right=static_cast<jule::I64>(_1e33e2dae_as_i64(_127253_r.get()._field_constant.ptr()));
		};
		if ((_128517_left > _129121_right)) {
			return;;
		};
		_1e33e3d7c_set_str(_127231_d.get()._field_constant.ptr(), _129017_s.slice(_128517_left,_129121_right));
		_127231_d.get()._field_decl=true;
	} else {
		_127231_d.get()._field_constant=nullptr;
	};
}



inline void _1e407516c_check_slicing(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data>& _130837_d, jule::Ptr<_1e40662e5_Data>& _130848_l, jule::Ptr<_1e40662e5_Data>& _130859_r, jule::Ptr<_1e3342748_SlicingExpr>& _130870_s) {
	{
		
		if ((_1e4094444_arr(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69e4336:;
			{
				_1e4074842_slicing_arr(&(*_self_), _130837_d);
				return;;
			}
		}
		else if ((_1e40946a8_slc(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69e43ad:;
			{
				return;;
			}
		}
		else if ((_1e409372e_prim(_130837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e69e4435:;
			{
				jule::Ptr<_1e4096138_Prim> _131617_prim = _1e409372e_prim(_130837_d.get()._field_kind.ptr());;
				{
					
					if (_1e40990e7_is_str(_131617_prim.ptr())) {
						_case_begin_1e69e6921:;
						{
							_1e4074c0a_slicing_str(&(*_self_), _130837_d,_130848_l,_130859_r);
							return;;
						}
					}
					_match_end_1e69e6877:;
				};
			}
		}
		_match_end_1e69e4204:;
	};
	_1e406836e_push_err(&(*_self_), _130870_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_130837_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1e40662e5_Data> _1e407547a_eval_slicing(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3342748_SlicingExpr> _132736_s) {
	jule::Ptr<_1e40662e5_Data> _132817_d = _1e4082ab4_eval_expr_kind(_self_, _132736_s.get()._field_expr.get()._field_kind);;
	if ((_132817_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _133318_l;;
	jule::Ptr<_1e40662e5_Data> _133325_r;;
	std::tie(_133318_l,_133325_r) = _1e40745bc_eval_slicing_exprs(_self_, _132736_s);
	if ((_133318_l == nullptr)) {
		return _132817_d;
	};
	_132817_d.get()._field_decl=false;
	_1e407516c_check_slicing(_self_.ptr(), _132817_d,_133318_l,_133325_r,_132736_s);
	if (_1e4066ba8_is_const(_132817_d.ptr())) {
		_132817_d.get()._field_decl=false;
		_132817_d.get()._field_model=static_cast<jule::Any>(_132817_d.get()._field_constant);
	} else if (_132817_d.get()._field_decl) {
		_132817_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1e33ead40_SlicingExprModel> _135121_model = jule::new_ptr<_1e33ead40_SlicingExprModel>(_1e33ead40_SlicingExprModel{._field_token=_132736_s.get()._field_token, ._field_expr=_132817_d.get()._field_model, ._field_left=_133318_l.get()._field_model, });;
		if ((_133325_r != nullptr)) {
			_135121_model.get()._field_right=_133325_r.get()._field_model;
		};
		_132817_d.get()._field_model=static_cast<jule::Any>(_135121_model);
	};
	return _132817_d;
}



inline void _1e4075843_cast_ptr(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _136431_t, jule::Ptr<_1e40662e5_Data> _136449_d, jule::Ptr<_1e1c31ee6_Token> _136459_error_token) {
	jule::Ptr<_1e4099647_Sptr> _136513_sptr = _1e4093993_sptr(_136449_d.get()._field_kind.ptr());;
	if ((_136513_sptr != nullptr)) {
		if ((!(_1e4091d26_equals(_1e4093c07_ptr(_136431_t.ptr()).get()._field_elem, _136513_sptr.get()._field_elem)))) {
			_1e406836e_push_err(&(*_self_), _136459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_136449_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_136431_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1e4068ca9_is_unsafe(&(*_self_))))) {
		_1e406836e_push_err(&(*_self_), _136459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e4096138_Prim> _137813_prim = _1e409372e_prim(_136449_d.get()._field_kind.ptr());;
	if (((_1e4093c07_ptr(_136449_d.get()._field_kind.ptr()) == nullptr) && ((_137813_prim == nullptr) || (!(_1e3ecc05d_is_int(_1e409649b_to_str(_137813_prim.ptr()))))))) {
		_1e406836e_push_err(&(*_self_), _136459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_136449_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_136431_t.ptr()))}));
	};
	_136449_d.get()._field_constant=nullptr;
}



inline void _1e4075c0b_cast_struct(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _138634_t, jule::Ptr<_1e40662e5_Data> _138652_d, jule::Ptr<_1e1c31ee6_Token> _138662_error_token) {
	jule::Ptr<_1e374ee30_Trait> _138717_tr = _1e4094de5_trt(_138652_d.get()._field_kind.ptr());;
	if ((_138717_tr == nullptr)) {
		_1e406836e_push_err(&(*_self_), _138662_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_138652_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_138634_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1e3352093_StructIns> _139317_s = _1e4094b81_strct(_138634_t.ptr());;
	_1e6a045aa_push_reference(&(*_self_), _139317_s);
	if ((!(_1e3315d8c_is_implements(_139317_s.get()._field_decl.ptr(), _138717_tr)))) {
		_1e406836e_push_err(&(*_self_), _138662_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_138652_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_138634_t.ptr()))}));
	};
}



inline void _1e40760c4_cast_ref(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _140131_t, jule::Ptr<_1e40662e5_Data> _140149_d, jule::Ptr<_1e1c31ee6_Token> _140159_error_token) {
	jule::Ptr<_1e4099647_Sptr> _140217_sptr = _1e4093993_sptr(_140131_t.ptr());;
	jule::Ptr<_1e409cbab_Ptr> _140417_ptr = _1e4093c07_ptr(_140149_d.get()._field_kind.ptr());;
	if (((_140417_ptr != nullptr) && _1e4091d26_equals(_140217_sptr.get()._field_elem, _140417_ptr.get()._field_elem))) {
		if ((!(_1e4068ca9_is_unsafe(&(*_self_))))) {
			_1e406836e_push_err(&(*_self_), _140159_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e4094b81_strct(_140217_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1e4075c0b_cast_struct(&(*_self_), _140217_sptr.get()._field_elem,_140149_d,_140159_error_token);
		return;;
	};
	_1e406836e_push_err(&(*_self_), _140159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_140149_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_140131_t.ptr()))}));
}



inline void _1e407648c_cast_slc(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _142231_t, jule::Ptr<_1e40662e5_Data> _142249_d, jule::Ptr<_1e1c31ee6_Token> _142259_error_token) {
	if ((_1e4093e6b_enm(_142249_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1e409372e_prim(_1e4093e6b_enm(_142249_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1e40990e7_is_str(_1e409372e_prim(_1e4093e6b_enm(_142249_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1e406836e_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_142231_t.ptr()))}));
			return;;
		};
	} else if (((_1e409372e_prim(_142249_d.get()._field_kind.ptr()) == nullptr) || (!(_1e40990e7_is_str(_1e409372e_prim(_142249_d.get()._field_kind.ptr()).ptr()))))) {
		_1e406836e_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_142231_t.ptr()))}));
		return;;
	};
	_142231_t=_1e40946a8_slc(_142231_t.ptr()).get()._field_elem;
	jule::Ptr<_1e4096138_Prim> _143413_prim = _1e409372e_prim(_142231_t.ptr());;
	if (((_143413_prim == nullptr) || ((!(_1e40976bc_is_u8(_143413_prim.ptr()))) && (!(_1e40971e4_is_i32(_143413_prim.ptr())))))) {
		_1e406836e_push_err(&(*_self_), _142259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_142249_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_142231_t.ptr()))}));
	};
}



inline void _1e40767ab_cast_str(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _144031_d, jule::Ptr<_1e1c31ee6_Token> _144041_error_token) {
	if ((_1e4093e6b_enm(_144031_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e34189c8_Enum> _144221_e = _1e4093e6b_enm(_144031_d.get()._field_kind.ptr());;
		if (((_1e409372e_prim(_144221_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1e40990e7_is_str(_1e409372e_prim(_144221_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1e409372e_prim(_144031_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4096138_Prim> _144917_prim = _1e409372e_prim(_144031_d.get()._field_kind.ptr());;
		if (((!(_1e40976bc_is_u8(_144917_prim.ptr()))) && (!(_1e40971e4_is_i32(_144917_prim.ptr()))))) {
			_1e406836e_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e4091a18_to_str(_144031_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1e40946a8_slc(_144031_d.get()._field_kind.ptr()) == nullptr)) {
		_1e406836e_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e4091a18_to_str(_144031_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1e4091661_TypeKind> _146117_t = _1e40946a8_slc(_144031_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1e4096138_Prim> _146213_prim = _1e409372e_prim(_146117_t.ptr());;
	if (((_146213_prim == nullptr) || ((!(_1e40976bc_is_u8(_146213_prim.ptr()))) && (!(_1e40971e4_is_i32(_146213_prim.ptr())))))) {
		_1e406836e_push_err(&(*_self_), _144041_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e4091a18_to_str(_144031_d.get()._field_kind.ptr()))}));
	};
}



inline void _1e4076b74_cast_int(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _146831_t, jule::Ptr<_1e40662e5_Data> _146849_d, jule::Ptr<_1e1c31ee6_Token> _146859_error_token) {
	if (_1e4066ba8_is_const(_146849_d.ptr())) {
		jule::Ptr<_1e4096138_Prim> _147017_prim = _1e409372e_prim(_146831_t.ptr());;
		{
			
			if (_1e3ecb9ca_is_sig_int(_147017_prim.get()._field_kind)) {
				_case_begin_1e6a1e20c:;
				{
					_1e33e360c_set_i64(_146849_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_146849_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e3ecbcb6_is_unsig_int(_147017_prim.get()._field_kind)) {
				_case_begin_1e6a1e284:;
				{
					_1e33e3882_set_u64(_146849_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_146849_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1e6a1e152:;
		};
	};
	if ((_1e4093e6b_enm(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e34189c8_Enum> _148017_e = _1e4093e6b_enm(_146849_d.get()._field_kind.ptr());;
		if (_1e3ecc624_is_num(_1e4091a18_to_str(_148017_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1e4093993_sptr(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4096138_Prim> _148717_prim = _1e409372e_prim(_146831_t.ptr());;
		if ((!(_1e4098b1e_is_uintptr(_148717_prim.ptr())))) {
			_1e406836e_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_146831_t.ptr()))}));
		};
		return;;
	};
	if ((_1e4093c07_ptr(_146849_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e4096138_Prim> _149417_prim = _1e409372e_prim(_146831_t.ptr());;
		if (_1e4098b1e_is_uintptr(_149417_prim.ptr())) {
		} else if ((!(_1e4068ca9_is_unsafe(&(*_self_))))) {
			_1e406836e_push_err(&(*_self_), _146859_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1e40971e4_is_i32(_149417_prim.ptr()))) && (!(_1e4097458_is_i64(_149417_prim.ptr())))) && (!(_1e4097931_is_u16(_149417_prim.ptr())))) && (!(_1e4097b95_is_u32(_149417_prim.ptr())))) && (!(_1e4097e09_is_u64(_149417_prim.ptr()))))) {
			_1e406836e_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_146831_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1e4096138_Prim> _150513_prim = _1e409372e_prim(_146849_d.get()._field_kind.ptr());;
	if (((_150513_prim != nullptr) && _1e3ecc624_is_num(_1e409649b_to_str(_150513_prim.ptr())))) {
		return;;
	};
	_1e406836e_push_err(&(*_self_), _146859_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_146849_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_146831_t.ptr()))}));
}



inline void _1e407703c_cast_num(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _151331_t, jule::Ptr<_1e40662e5_Data> _151349_d, jule::Ptr<_1e1c31ee6_Token> _151359_error_token) {
	if (_1e4066ba8_is_const(_151349_d.ptr())) {
		jule::Ptr<_1e4096138_Prim> _151517_prim = _1e409372e_prim(_151331_t.ptr());;
		{
			
			if (_1e3ecc37c_is_float(_151517_prim.get()._field_kind)) {
				_case_begin_1e6a29734:;
				{
					_1e33e4102_set_f64(_151349_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e33e3387_as_f64(_151349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e3ecb9ca_is_sig_int(_151517_prim.get()._field_kind)) {
				_case_begin_1e6a297ab:;
				{
					_1e33e360c_set_i64(_151349_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_151349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e3ecbcb6_is_unsig_int(_151517_prim.get()._field_kind)) {
				_case_begin_1e6a29833:;
				{
					_1e33e3882_set_u64(_151349_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_151349_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1e6a29668:;
		};
	};
	if ((_1e4093e6b_enm(_151349_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e34189c8_Enum> _152717_e = _1e4093e6b_enm(_151349_d.get()._field_kind.ptr());;
		if (_1e3ecc624_is_num(_1e4091a18_to_str(_152717_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e4096138_Prim> _153313_prim = _1e409372e_prim(_151349_d.get()._field_kind.ptr());;
	if (((_153313_prim != nullptr) && _1e3ecc624_is_num(_1e409649b_to_str(_153313_prim.ptr())))) {
		return;;
	};
	_1e406836e_push_err(&(*_self_), _151359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_151349_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_151331_t.ptr()))}));
}



inline void _1e4077405_cast_prim(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _154132_t, jule::Ptr<_1e40662e5_Data> _154150_d, jule::Ptr<_1e1c31ee6_Token> _154160_error_token) {
	jule::Ptr<_1e4096138_Prim> _154213_prim = _1e409372e_prim(_154132_t.ptr());;
	{
		
		if (_1e409935b_is_any(_154213_prim.ptr())) {
			_case_begin_1e6a3021d:;
		}
		else if (_1e40990e7_is_str(_154213_prim.ptr())) {
			_case_begin_1e6a30790:;
			{
				_1e40767ab_cast_str(&(*_self_), _154150_d,_154160_error_token);
			}
		}
		else if (_1e3ecc05d_is_int(_1e409649b_to_str(_154213_prim.ptr()))) {
			_case_begin_1e6a30806:;
			{
				_1e4076b74_cast_int(&(*_self_), _154132_t,_154150_d,_154160_error_token);
			}
		}
		else if (_1e3ecc624_is_num(_1e409649b_to_str(_154213_prim.ptr()))) {
			_case_begin_1e6a3086c:;
			{
				_1e407703c_cast_num(&(*_self_), _154132_t,_154150_d,_154160_error_token);
			}
		}
		else {
			_case_begin_1e6a30729:;
			{
				_1e406836e_push_err(&(*_self_), _154160_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_154132_t.ptr()))}));
			}
		}
		_match_end_1e6a306b3:;
	};
}



inline void _1e4077724_cast_constant(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind>& _155737_t, jule::Ptr<_1e40662e5_Data>& _155756_d) {
	if (((_155756_d == nullptr) || (!(_1e4066ba8_is_const(_155756_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e4096138_Prim> _156113_prim = _1e409372e_prim(_155737_t.ptr());;
	_1e408db9c_cast_const_by_type(_156113_prim.get()._field_kind,_155756_d);
	_155756_d.get()._field_model=static_cast<jule::Any>(_155756_d.get()._field_constant);
}



inline void _1e4077adc_cast_type_enum(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind>& _156638_t, jule::Ptr<_1e40662e5_Data>& _156657_d, jule::Ptr<_1e1c31ee6_Token>& _156672_error_token) {
	jule::I64 _156713_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1e4008ab2_check_type_compatibility((*_self_)._field_s, _156657_d.get()._field_kind,_156638_t,_156672_error_token)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_156713_n);
		_1e406836e_push_err(&(*_self_), _156672_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_156657_d.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_156638_t.ptr()))}));
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4078060_eval_cast_by_type_n_data(_1e4067d63_Eval* _self_, jule::Ptr<_1e4091661_TypeKind> _157447_t, jule::Ptr<_1e40662e5_Data> _157465_d, jule::Ptr<_1e1c31ee6_Token> _157479_error_token) {
	if (((_157465_d != nullptr) && _157465_d.get()._field_decl)) {
		_1e406836e_push_err(&(*_self_), _157479_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1e409372e_prim(_157465_d.get()._field_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim(_157465_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e6a383d0:;
			{
				if ((_1e4093e6b_enm(_157447_t.ptr()) != nullptr)) {
					_1e406836e_push_err(&(*_self_), _157479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1e406868d_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1e40941d0_tenm(_157447_t.ptr()) != nullptr)) {
					_1e406836e_push_err(&(*_self_), _157479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1e40941d0_tenm(_157465_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6a38446:;
			{
				_1e4077adc_cast_type_enum(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1e4093c07_ptr(_157447_t.ptr()) != nullptr)) {
			_case_begin_1e6a384ac:;
			{
				_1e4075843_cast_ptr(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1e4093993_sptr(_157447_t.ptr()) != nullptr)) {
			_case_begin_1e6a38523:;
			{
				_1e40760c4_cast_ref(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1e40946a8_slc(_157447_t.ptr()) != nullptr)) {
			_case_begin_1e6a391b1:;
			{
				_1e407648c_cast_slc(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1e4094b81_strct(_157447_t.ptr()) != nullptr)) {
			_case_begin_1e6a39227:;
			{
				_1e4075c0b_cast_struct(&(*_self_), _157447_t,_157465_d,_157479_error_token);
			}
		}
		else if ((_1e409372e_prim(_157447_t.ptr()) != nullptr)) {
			_case_begin_1e6a3928d:;
			{
				_1e4077405_cast_prim(&(*_self_), _157447_t,_157465_d,_157479_error_token);
				_1e4077724_cast_constant(&(*_self_), _157447_t,_157465_d);
			}
		}
		else {
			_case_begin_1e6a38369:;
			{
				_1e406836e_push_err(&(*_self_), _157479_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_157447_t.ptr()))}));
				_157465_d=nullptr;
			}
		}
		_match_end_1e6a38314:;
	};
	if ((_157465_d == nullptr)) {
		return nullptr;
	};
	_157465_d.get()._field_mutable=(_157465_d.get()._field_mutable || ((!(_1e4092a19_mutable(_157465_d.get()._field_kind.ptr()))) && _1e4092a19_mutable(_157447_t.ptr())));
	_157465_d.get()._field_lvalue=false;
	_157465_d.get()._field_decl=false;
	if (((_1e4093e6b_enm(_157465_d.get()._field_kind.ptr()) == nullptr) || (!(_1e4091d26_equals(_1e4093e6b_enm(_157465_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _157447_t))))) {
		_1e408d130_apply_cast_kind(_157465_d,_157447_t);
		_157465_d.get()._field_model.operator jule::Ptr<_1e33e9ec6_CastingExprModel>().get()._field_token=_157479_error_token;
	} else {
		_157465_d.get()._field_kind=_157447_t;
	};
	return _157465_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e407837e_eval_cast(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333cd09_CastExpr> _162733_c) {
	jule::Ptr<_1e4095775_TypeSymbol> _162817_t = _1e3408633_build_type(_162733_c.get()._field_kind);;
	jule::Bool _162913_ok = _1e400697d_check_type(_self_.get()._field_s, _162817_t,_self_.get()._field_lookup);;
	if ((!(_162913_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e4091661_TypeKind> _163417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_163417_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _163817_d = _1e4082ab4_eval_expr_kind(_self_, _162733_c.get()._field_expr.get()._field_kind);;
	if ((_163817_d == nullptr)) {
		return nullptr;
	};
	return _1e4078060_eval_cast_by_type_n_data(_self_.ptr(), _162817_t.get()._field_kind,_163817_d,_162733_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1e40662e5_Data> _1e407868c_eval_ns_selection(_1e4067d63_Eval* _self_, jule::Ptr<_1e333d1b1_NsSelectionExpr> _164636_s) {
	jule::Str _164713_path = _1e40a8e3c_build_link_path_by_tokens(_164636_s.get()._field_ns);;
	jule::Ptr<_1e3ee752e_ImportInfo> _164817_imp = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aa449_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>([=](jule::Ptr<_1e3ee752e_ImportInfo> _164853_imp) mutable -> jule::Bool {
		if (((_164636_s.get()._field_ns.len() == 1LL) && (_164853_imp.get()._field_alias == _164713_path))) {
			return true;
		};
		return ((_164853_imp.get()._field_link_path == _164713_path) && _1e3eea18b_is_accessible_via_selection(_164853_imp.ptr()));
	}));;
	if ((_164817_imp == nullptr)) {
		_1e406836e_push_err(&(*_self_), _164636_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_164713_path)}));
		return nullptr;
	};
	jule::Trait<_1e40abe84_Lookup> _166017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e40abe84_Lookup>(_164817_imp, 1);
	;
	_1e4068a45_disallow_builtin(&(*_self_));
	jule::Any _166517_def = _1e406b383_get_def(&(*_self_), _164636_s.get()._field_ident.get()._field_kind,false);;
	_1e4068869_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_166017_lookup;
	jule::Ptr<_1e40662e5_Data> _166917_d = _1e406ed9d_eval_def(&(*_self_), jule::Any(_166517_def),_164636_s.get()._field_ident);;
	return _166917_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e4078b10_eval_struct_lit_explicit(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3352093_StructIns> _167448_s, jule::Slice<jule::Ptr<_1e3339d28_Expr>> _167513_exprs, jule::Ptr<_1e1c31ee6_Token> _167533_error_token) {
	jule::Bool _167613_ok = _1e40046d4_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_167448_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_167448_s.get()._field_generics.len()),_167533_error_token);;
	if ((!(_167613_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _167448_s.get()._field_decl))) {
		_1e406836e_push_err(_self_.ptr(), _167533_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_167448_s.get()._field_decl.get()._field_ident)}));
	};
	_1e6a045aa_push_reference(_self_.ptr(), _167448_s);
	_1e406d275_check_deprecated(_self_.ptr(), _167448_s.get()._field_decl.get()._field_directives,_167533_error_token);
	_1e405a96b_StructLitChecker _168917_slc = _1e405a96b_StructLitChecker{._field_e=_self_, ._field_error_token=_167533_error_token, ._field_s=_167448_s, };;
	_1e405c011_check(&_168917_slc, _167513_exprs);
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_167448_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9aec_StructLitExprModel>(_1e33e9aec_StructLitExprModel{._field_strct=_167448_s, ._field_args=_168917_slc._field_args})), });
}



inline jule::Ptr<_1e40662e5_Data> _1e4078e2e_eval_struct_lit(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e334038e_StructLit> _170839_lit) {
	jule::Ptr<_1e4095775_TypeSymbol> _170917_t = _1e3408633_build_type(_170839_lit.get()._field_kind);;
	jule::Bool _171013_ok = _1e400697d_check_type(_self_.get()._field_s, _170917_t,_self_.get()._field_lookup);;
	if ((!(_171013_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e3352093_StructIns> _171517_s = _1e4094b81_strct(_170917_t.get()._field_kind.ptr());;
	if ((_171517_s == nullptr)) {
		if ((_1e4093993_sptr(_170917_t.get()._field_kind.ptr()) != nullptr)) {
			_171517_s=_1e4094b81_strct(_1e4093993_sptr(_170917_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_171517_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1e406836e_push_err(_self_.ptr(), _170839_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1e40662e5_Data> _172817_d = _1e4078b10_eval_struct_lit_explicit(_self_, _171517_s,_170839_lit.get()._field_exprs,_170839_lit.get()._field_kind.get()._field_token);;
	if ((_1e4093993_sptr(_170917_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e33e9aec_StructLitExprModel> _173021_model = _172817_d.get()._field_model.operator jule::Ptr<_1e33e9aec_StructLitExprModel>();;
		_1e408ba8a_make_struct_lit_alloc(_172817_d,_173021_model);
	};
	return _172817_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e407923c_eval_type(_1e4067d63_Eval* _self_, jule::Ptr<_1e3335807_TypeDecl> _173632_t) {
	jule::Ptr<_1e4095775_TypeSymbol> _173717_tk = _1e3408633_build_type(_173632_t);;
	jule::Bool _173813_ok = _1e400697d_check_type((*_self_)._field_s, _173717_tk,(*_self_)._field_lookup);;
	if ((!(_173813_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=_173717_tk.get()._field_kind, ._field_model=static_cast<jule::Any>(_173717_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1e407955b_call_type_fn(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333e1b2_FnCallExpr>& _174937_fc, jule::Ptr<_1e40662e5_Data>& _174959_d) {
	if ((_174937_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_self_.ptr(), _174937_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_174959_d.get()._field_kind.ptr()))}));
	} else if ((_174937_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_self_.ptr(), _174937_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_174937_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_self_.ptr(), _174937_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_174937_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1e4091661_TypeKind> _175921_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1e40662e5_Data> _176121_arg = _1e4082ab4_eval_expr_kind(_self_, _174937_fc.get()._field_args[0LL].get()._field_kind);;
		_self_.get()._field_prefix=_175921_prefix;
		if ((_176121_arg != nullptr)) {
			_174959_d=_1e4078060_eval_cast_by_type_n_data(_self_.ptr(), _174959_d.get()._field_kind,_176121_arg,_174937_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_174959_d != nullptr)) {
		_174959_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1e4079913_check_fn_call_generics(_1e4067d63_Eval* _self_, jule::Ptr<_1e3404651_FnIns> _177345_f, jule::Ptr<_1e333e1b2_FnCallExpr> _177413_fc) {
	jule::Bool _177432_ok = jule::Bool();
	jule::Bool _177442_dynamic_annotation = jule::Bool();
	{
		
		if ((((_177345_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_177413_fc.get()._field_generics.len() == 0LL)) && (_177345_f.get()._field_params.len() > 0LL))) {
			_case_begin_1e6a67783:;
			{
				_177442_dynamic_annotation=true;
				_177345_f.get()._field_generics=jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::alloc(_177345_f.get()._field_decl.get()._field_generics.len());
				_177432_ok = true;
				_177442_dynamic_annotation = true;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		else if ((!(_1e40046d4_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_177345_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_177413_fc.get()._field_generics.len()),_177413_fc.get()._field_token)))) {
			_case_begin_1e6a677e9:;
			{
				_177432_ok = false;
				_177442_dynamic_annotation = false;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		else {
			_case_begin_1e6a664eb:;
			{
				_177345_f.get()._field_generics=jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::alloc(0LL,_177345_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _177413_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1e6a66e25:;
					if (it != expr.end()) {
						jule::Ptr<_1e3335807_TypeDecl> _178625_g = *it;
						{
							jule::Ptr<_1e4095775_TypeSymbol> _178725_k = _1e3408633_build_type(_178625_g);;
							_177432_ok=_1e400697d_check_type((*_self_)._field_s, _178725_k,(*_self_)._field_lookup);
							if ((!(_177432_ok))) {
								_177432_ok = false;
								_177442_dynamic_annotation = false;
								return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
							};
							_177345_f.get()._field_generics = jule::alloc_for_append(_177345_f.get()._field_generics,1);_177345_f.get()._field_generics.__push(_178725_k.get()._field_kind);;
						}
						_iter_next_1e6a66e25:;
						++it;
						goto _iter_begin_1e6a66e25;
					}
					_iter_end_1e6a66e25:;
				};
				_177432_ok = true;
				_177442_dynamic_annotation = false;
				return std::make_tuple(_177432_ok,_177442_dynamic_annotation);
			}
		}
		_match_end_1e6a6641e:;
	};
}



inline void _1e4079c32_call_builtin_fn(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333e1b2_FnCallExpr>& _179940_fc, jule::Ptr<_1e40662e5_Data>& _179962_d) {
	_179962_d=_1e409491c_fnc(_179962_d.get()._field_kind.ptr()).get()._field_caller(_self_,_179940_fc,_179962_d);
	if ((_179962_d == nullptr)) {
		return;;
	};
	_179962_d.get()._field_mutable=true;
}



inline void _1e407a073_check_fn_of_concurrent_call(_1e4067d63_Eval* _self_, jule::Ptr<_1e3404651_FnIns>& _180747_f, jule::Ptr<_1e1c31ee6_Token> _180758_error_token) {
	if (_1e4068ca9_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _180747_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e6a6dec6:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> &_181216_p = *it;
			{
				if (_181216_p.get()._field_decl.get()._field_reference) {
					_1e406836e_push_err(&(*_self_), _180758_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1e6a6dec6:;
			++it;
			goto _iter_begin_1e6a6dec6;
		}
		_iter_end_1e6a6dec6:;
	};
}



inline void _1e407a46e_process_exceptional_handler(_1e4067d63_Eval* _self_, jule::Ptr<_1e3404651_FnIns>& _182051_f, jule::Ptr<_1e333e1b2_FnCallExpr>& _182067_fc, jule::Ptr<_1e40662e5_Data>& _182089_d) {
	jule::Bool _182113_result_needed = ((!(_1e3401e12_is_void(_182051_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1e3ed06d2_ScopeChecker> _182217_csc = nullptr;;
	jule::Ptr<_1e3e547aa_Scope> _182317_ch = nullptr;;
	jule::Ptr<_1e33ea1b3_FnCallExprModel> _182517_model = _182089_d.get()._field_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>();;
	jule::Ptr<_1e3ed06d2_ScopeChecker> _182917_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>();;
	_182217_csc=_1e3ee0c75_new_child_checker(_182917_sc);
	if (_182113_result_needed) {
		_182217_csc.get()._field_result=_182051_f;
	};
	_182317_ch=_1e3ed5099_get_child(_182917_sc.ptr());
	_182067_fc.get()._field_exception.get()._field_parent=_182917_sc.get()._field_tree;
	_182217_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_182217_csc.get()._field_table.get()._field_vars,1);_182217_csc.get()._field_table.get()._field_vars.__push(_1e408bdcb_build_error_var(_182317_ch,_182067_fc));;
	_1e3ed5462_check_child_ssc(_182917_sc, _182067_fc.get()._field_exception,_182317_ch,_182217_csc);
	_182517_model.get()._field_assigned=_182113_result_needed;
	_182517_model.get()._field_except=_182317_ch;
	if ((_182113_result_needed && (_182217_csc.get()._field_result != nullptr))) {
		_1e406836e_push_err(&(*_self_), _182067_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e407a79e_call_fn(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333e1b2_FnCallExpr>& _184732_fc, jule::Ptr<_1e40662e5_Data>& _184754_d) {
	jule::Ptr<_1e3404651_FnIns> _184817_f = _1e409491c_fnc(_184754_d.get()._field_kind.ptr());;
	if ((_1e406901d_is_global(_self_.ptr()) && _184817_f.get()._field_decl.get()._field_exceptional)) {
		_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1e406868d_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_184754_d=nullptr;
		return;;
	};
	if (_1e3405399_is_builtin(_184817_f.ptr())) {
		_1e4079c32_call_builtin_fn(_self_, _184732_fc,_184754_d);
		return;;
	};
	if (((!(_1e3402176_is_method(_184817_f.get()._field_decl.ptr()))) && _1e40a806d_has_directive(_184817_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_184754_d=nullptr;
		return;;
	};
	if (((((!(_184754_d.get()._field_mutable)) && _1e3402176_is_method(_184817_f.get()._field_decl.ptr())) && (!(_184817_f.get()._field_decl.get()._field_statically))) && _184817_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1e4068ca9_is_unsafe(_self_.ptr()))) && _184817_f.get()._field_decl.get()._field_unsafety)) {
		_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _187318_ok;;
	jule::Bool _187322_dynamic_annotation;;
	std::tie(_187318_ok,_187322_dynamic_annotation) = _1e4079913_check_fn_call_generics(_self_.ptr(), _184817_f,_184732_fc);
	if ((!(_187318_ok))) {
		_184754_d=nullptr;
		return;;
	};
	jule::Ptr<_1e400067a_Sema> _187917_old = _self_.get()._field_s;;
	if ((_184817_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_184817_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_187917_old != _self_.get()._field_s)) {
			_187917_old.get()._field_errors=jule::append(_187917_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_187917_old;
	});;
	if ((!(_187322_dynamic_annotation))) {
		if ((!(_184817_f.get()._field_reloaded))) {
			_187318_ok=_1e40098b5_reload_fn_ins_types(_self_.get()._field_s, _184817_f);
			if ((!(_187318_ok))) {
				_184754_d=nullptr;
				return;;
			};
			_184817_f.get()._field_reloaded=true;
		};
	} else if ((_184817_f.get()._field_generics.len() > 0LL)) {
		_1e4009255_build_fn_non_generic_type_kinds(_self_.get()._field_s, _184817_f);
	};
	_1e4058062_FnCallArgChecker _190517_fcac = _1e4058062_FnCallArgChecker{._field_e=_self_, ._field_args=_184732_fc.get()._field_args, ._field_error_token=_184732_fc.get()._field_token, ._field_f=_184817_f, ._field_dynamic_annotation=_187322_dynamic_annotation, };;
	if ((_184817_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_187917_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187917_old);
		_187318_ok=_1e405a42c_check(&_190517_fcac);
		std::tie(_187917_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187917_old);
	} else {
		_187318_ok=_1e405a42c_check(&_190517_fcac);
	};
	if (((!(_187318_ok)) && _187322_dynamic_annotation)) {
		_184754_d=nullptr;
		return;;
	};
	if (_187322_dynamic_annotation) {
		_187318_ok=_1e40098b5_reload_fn_ins_types(_self_.get()._field_s, _184817_f);
		if ((!(_187318_ok))) {
			_184754_d=nullptr;
			return;;
		};
		_184817_f.get()._field_reloaded=true;
	};
	jule::Ptr<_1e3404651_FnIns> _193417_exist_instance = _1e34033ca_append_instance(_184817_f.get()._field_decl.ptr(), _184817_f);;
	if ((_193417_exist_instance != nullptr)) {
		_184817_f=_193417_exist_instance;
	};
	jule::Any _193917_call_model = _184754_d.get()._field_model;;
	if (_1e3401e12_is_void(_184817_f.get()._field_decl.ptr())) {
		_184754_d=_1e408d32d_build_void_data();
	} else {
		_184754_d.get()._field_kind=_184817_f.get()._field_result;
		_184754_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1e33ea1b3_FnCallExprModel> _194817_model = jule::new_ptr<_1e33ea1b3_FnCallExprModel>(_1e33ea1b3_FnCallExprModel{._field_token=_184732_fc.get()._field_token, ._field_func=_184817_f, ._field_expr=_193917_call_model, ._field_args=_190517_fcac._field_arg_models, });;
	_184754_d.get()._field_model=static_cast<jule::Any>(_194817_model);
	_184754_d.get()._field_mutable=true;
	if (_184817_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1e333e525_unhandled(_184732_fc.ptr())) {
				_case_begin_1e6a87110:;
				{
					_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1e406868d_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1e333e789_ignored(_184732_fc.ptr())) {
				_case_begin_1e6a86cd0:;
				{
					goto _match_end_1e6a86b8c;
				}
			}
			else {
				_case_begin_1e6a86c69:;
				{
					_1e407a46e_process_exceptional_handler(_self_.ptr(), _184817_f,_184732_fc,_184754_d);
				}
			}
			_match_end_1e6a86b8c:;
		};
	} else if ((!(_1e333e525_unhandled(_184732_fc.ptr())))) {
		_1e406836e_push_err(_self_.ptr(), _184732_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_184817_f.get()._field_generics.len() > 0LL)) {
		if ((_193417_exist_instance != nullptr)) {
			_1e408e1a8_update_model_to_generic_ins(_194817_model,_184817_f);
		} else {
			_1e4016295_check_fn_ins_caller(_self_.get()._field_s, _184817_f,_184732_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407aaac_eval_fn_call(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333e1b2_FnCallExpr> _198736_fc) {
	jule::Ptr<_1e4091661_TypeKind> _198817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198817_prefix;
	});;
	{
		auto &_match_expr{ _198736_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
			_case_begin_1e6a8a91b:;
			{
				if ((_198736_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1e411a0be_builtin_caller_error(_self_,_198736_fc);
				};
			}
		}
		_match_end_1e6a8a8b6:;
	};
	jule::Ptr<_1e40662e5_Data> _200117_d = _1e4082ab4_eval_expr_kind(_self_, _198736_fc.get()._field_expr.get()._field_kind);;
	if ((_200117_d == nullptr)) {
		return nullptr;
	};
	if (_200117_d.get()._field_decl) {
		_1e407955b_call_type_fn(_self_, _198736_fc,_200117_d);
		return _200117_d;
	};
	if ((_1e409491c_fnc(_200117_d.get()._field_kind.ptr()) == nullptr)) {
		_1e406836e_push_err(_self_.ptr(), _198736_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e407a79e_call_fn(_self_, _198736_fc,_200117_d);
	return _200117_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e407ae64_eval_enum_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e34189c8_Enum> _202039_enm, jule::Ptr<_1e1c31ee6_Token> _202051_ident) {
	jule::Ptr<_1e40662e5_Data> _202117_d = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_202039_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1e35972d8_EnumItem> _203017_item = _1e35854e6_find_item(_202039_enm.ptr(), _202051_ident.get()._field_kind);;
	if ((_203017_item == nullptr)) {
		_1e406836e_push_err(&(*_self_), _202051_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_202039_enm.get()._field_ident),jule::Any(_202051_ident.get()._field_kind)}));
	} else {
		_202117_d.get()._field_constant=jule::new_ptr<_1e3388a47_Const>((*(_203017_item.get()._field_value.get()._field_data.get()._field_constant)));
		_202117_d.get()._field_model=static_cast<jule::Any>(_202117_d.get()._field_constant);
		_1e408d8d3_apply_cast_model_by_enum(_202117_d,_202039_enm);
	};
	return _202117_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e407b31b_eval_type_enum_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e37eea6d_TypeEnum> _204244_enm, jule::Ptr<_1e1c31ee6_Token> _204260_ident) {
	jule::Ptr<_1e3584902_TypeEnumItem> _204317_item = _1e375076b_find_item(_204244_enm.ptr(), _204260_ident.get()._field_kind);;
	if ((_204317_item == nullptr)) {
		_1e406836e_push_err(&(*_self_), _204260_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204244_enm.get()._field_ident),jule::Any(_204260_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_1e4093e6b_enm(_204317_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6a946e4:;
			{
				return _1e406b916___eval_enum(&(*_self_), _1e4093e6b_enm(_204317_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1e40941d0_tenm(_204317_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6a948e2:;
			{
				return _1e406c0cb___eval_type_enum(&(*_self_), _1e40941d0_tenm(_204317_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1e4094b81_strct(_204317_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6a93b11:;
			{
				return _1e406c791___eval_struct(&(*_self_), _1e4094b81_strct(_204317_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_1e6a92d96:;
			{
				jule::Ptr<_1e40662e5_Data> _205621_d = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=_204317_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_205621_d.get()._field_model=static_cast<jule::Any>(_205621_d.get()._field_kind);
				return _205621_d;
			}
		}
		_match_end_1e6a92d30:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407b6c3_eval_struct_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e3352093_StructIns> _206541_s, jule::Ptr<_1e1c31ee6_Token> _206556_ident) {
	jule::Ptr<_1e40662e5_Data> _206617_d = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1e34019a0_Fn> _207417_method = _1e3328d39_find_method(_206541_s.ptr(), _206556_ident.get()._field_kind,true);;
	if ((_207417_method != nullptr)) {
		if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _207417_method.get()._field_public,_207417_method.get()._field_token)))) {
			_1e406836e_push_err(&(*_self_), _206556_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206556_ident.get()._field_kind)}));
			_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e3404651_FnIns> _208121_ins = _1e3403100_instance(_207417_method);;
		_208121_ins.get()._field_owner=_206541_s;
		_1e6959db2_push_reference(&(*_self_), _208121_ins);
		_206617_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33eb637_StructStaticIdentExprModel>(_1e33eb637_StructStaticIdentExprModel{._field_structure=_206541_s, ._field_expr=_206617_d.get()._field_model, ._field_method=_208121_ins}));
		_206617_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_208121_ins, 1)});
		return _206617_d;
	};
	jule::Ptr<_1e401a92b_Var> _209517_sttc = _1e331593b_find_static(_206541_s.get()._field_decl.ptr(), _206556_ident.get()._field_kind);;
	if ((_209517_sttc != nullptr)) {
		return _1e406e63e_eval_var(&(*_self_), _209517_sttc,_206556_ident);
	};
	_1e406836e_push_err(&(*_self_), _206556_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206541_s.get()._field_decl.get()._field_ident),jule::Any(_206556_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1e40662e5_Data> _1e407bb24_eval_trait_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _210443_d, jule::Ptr<_1e374ee30_Trait> _210457_trt, jule::Ptr<_1e1c31ee6_Token> _210474_ident) {
	jule::Ptr<_1e34019a0_Fn> _210517_f = _1e34a019c_find_method(_210457_trt.ptr(), _210474_ident.get()._field_kind);;
	if ((_210517_f == nullptr)) {
		_1e406836e_push_err(&(*_self_), _210474_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_210457_trt.get()._field_ident),jule::Any(_210474_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e3403100_instance(_210517_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33eb02c_TraitSubIdentExprModel>(_1e33eb02c_TraitSubIdentExprModel{._field_token=_210474_ident, ._field_expr=_210443_d.get()._field_model, ._field_method=_210517_f, ._field_trt=_210457_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1e40662e5_Data> _1e407c11e_eval_struct_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _212744_d, jule::Ptr<_1e3352093_StructIns> _212758_s, jule::Ptr<_1e333d634_SubIdentExpr> _212777_si, jule::Bool _212796_ref) {
	jule::Ptr<_1e332d657_FieldIns> _212817_f = _1e332b18d_find_field(_212758_s.ptr(), _212777_si.get()._field_ident.get()._field_kind);;
	if ((_212817_f != nullptr)) {
		if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _212817_f.get()._field_decl.get()._field_public,_212817_f.get()._field_decl.get()._field_token)))) {
			_1e406836e_push_err(&(*_self_), _212777_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_212817_f.get()._field_decl.get()._field_ident)}));
			_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _213521_model = jule::new_ptr<_1e33eb44a_StructSubIdentExprModel>(_1e33eb44a_StructSubIdentExprModel{._field_token=_212777_si.get()._field_ident, ._field_expr=jule::new_ptr<_1e40662e5_Data>((*(_212744_d))), ._field_expr_kind=_212744_d.get()._field_kind, ._field_field=_212817_f});;
		_212744_d.get()._field_model=static_cast<jule::Any>(_213521_model);
		_212744_d.get()._field_kind=_212817_f.get()._field_kind;
		_212744_d.get()._field_lvalue=true;
		if ((_212817_f.get()._field_decl.get()._field_mutable && (!(_212744_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
					_case_begin_1e6aa5b89:;
					{
						jule::Ptr<_1e3ed06d2_ScopeChecker> _214925_scope = _1e3ed37e5_get_root((*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>());;
						_212744_d.get()._field_mutable=((_214925_scope.get()._field_owner != nullptr) && (_214925_scope.get()._field_owner.get()._field_owner == _212758_s));
					}
				}
				_match_end_1e6aa5b34:;
			};
		};
		return _212744_d;
	};
	;
	jule::Ptr<_1e34019a0_Fn> _215817_m = _1e3328d39_find_method(_212758_s.ptr(), _212777_si.get()._field_ident.get()._field_kind,false);;
	if ((_215817_m == nullptr)) {
		_1e406836e_push_err(&(*_self_), _212777_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212758_s.get()._field_decl.get()._field_ident),jule::Any(_212777_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _215817_m.get()._field_public,_215817_m.get()._field_token)))) {
		_1e406836e_push_err(&(*_self_), _212777_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215817_m.get()._field_ident)}));
		_1e406868d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1e3400a04_is_ref(_215817_m.get()._field_params[0LL].ptr()) && (!(_212796_ref)))) {
		_1e406836e_push_err(&(*_self_), _212777_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1e406d275_check_deprecated(&(*_self_), _215817_m.get()._field_directives,_212777_si.get()._field_ident);
	jule::Ptr<_1e3404651_FnIns> _217417_ins = _1e3403100_instance(_215817_m);;
	_217417_ins.get()._field_owner=_212758_s;
	_1e6959db2_push_reference(&(*_self_), _217417_ins);
	jule::Ptr<_1e40662e5_Data> _217717_model = jule::new_ptr<_1e40662e5_Data>((*(_212744_d)));;
	_212744_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33eb44a_StructSubIdentExprModel>(_1e33eb44a_StructSubIdentExprModel{._field_token=_212777_si.get()._field_ident, ._field_expr=_217717_model, ._field_expr_kind=_212744_d.get()._field_kind, ._field_method=_217417_ins, }));
	_212744_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_217417_ins, 1)});
	return _212744_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e407c4c6_eval_slice_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _218843_d, jule::Ptr<_1e1c31ee6_Token> _218857_ident) {
	{
		auto &_match_expr{ _218857_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e6aae698:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_218843_d.get()._field_kind, ._field_expr=_218843_d.get()._field_model, ._field_token=_218857_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1e6aae70e:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_218843_d.get()._field_kind, ._field_expr=_218843_d.get()._field_model, ._field_token=_218857_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e6aae775:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::make({jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_218843_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_218843_d.get()._field_kind, ._field_expr=_218843_d.get()._field_model, ._field_token=_218857_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1e6aae632:;
			{
				_1e406836e_push_err(&(*_self_), _218857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_218843_d.get()._field_kind.ptr())),jule::Any(_218857_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6aae3e0:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407c87d_eval_array_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _224743_d, jule::Ptr<_1e1c31ee6_Token> _224757_ident) {
	{
		auto &_match_expr{ _224757_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e6ab09a7:;
			{
				jule::Ptr<_1e3388a47_Const> _225021_c = static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e4094444_arr(_224743_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(_225021_c), ._field_constant=_225021_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e6ab58ad:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::make({jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_224743_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_224743_d.get()._field_kind, ._field_expr=_224743_d.get()._field_model, ._field_token=_224757_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1e6ab488a:;
			{
				_1e406836e_push_err(&(*_self_), _224757_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_224743_d.get()._field_kind.ptr())),jule::Any(_224757_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ab47d0:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407cc35_eval_map_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _229241_d, jule::Ptr<_1e1c31ee6_Token> _229255_ident) {
	jule::Ptr<_1e409b65a_Map> _229317_map_kind = _1e4095159_map(_229241_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _229255_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e6aba73c:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1e6aba7a3:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_229241_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1e6aba62c:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_result=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_229317_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_229241_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1e6aba693:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_result=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_229317_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_229241_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1e6ab98b2:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::make({jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_229317_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e41394c8_builtin_caller_common), }), 1)}), ._field_mutable=_229241_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1e6ab9928:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::make({jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_229317_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4121e0b_builtin_caller_common_mut), }), 1)}), ._field_mutable=_229241_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_229241_d.get()._field_kind, ._field_expr=_229241_d.get()._field_model, ._field_token=_229255_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1e6ab984b:;
			{
				_1e406836e_push_err(&(*_self_), _229255_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e409b9bd_to_str(_229317_map_kind.ptr())),jule::Any(_229255_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ab97a2:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407d0dc_eval_str_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _241541_d, jule::Ptr<_1e1c31ee6_Token> _241555_ident) {
	jule::Ptr<_1e4091661_TypeKind> _241617_str_kind = jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _241555_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e6ac40d6:;
			{
				jule::Ptr<_1e40662e5_Data> _241921_sd = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1e4066ba8_is_const(_241541_d.ptr())) {
					_241921_sd.get()._field_constant=static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e33e28d6_read_str(_241541_d.get()._field_constant.ptr()).len())));
					_241921_sd.get()._field_model=static_cast<jule::Any>(_241921_sd.get()._field_constant);
				} else {
					_241921_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_241541_d.get()._field_kind, ._field_expr=_241541_d.get()._field_model, ._field_token=_241555_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _241921_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1e6ac414c:;
			{
				jule::Ptr<_1e40662e5_Data> _243521_sd = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1e4066ba8_is_const(_241541_d.ptr())) {
					_243521_sd.get()._field_constant=static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e33e28d6_read_str(_241541_d.get()._field_constant.ptr()).cap())));
					_243521_sd.get()._field_model=static_cast<jule::Any>(_243521_sd.get()._field_constant);
				} else {
					_243521_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_241541_d.get()._field_kind, ._field_expr=_241541_d.get()._field_model, ._field_token=_241555_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _243521_sd;
			}
		}
		else {
			_case_begin_1e6ac4070:;
			{
				_1e406836e_push_err(&(*_self_), _241555_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_241617_str_kind.ptr())),jule::Any(_241555_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ac3ec6:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407d3ea_eval_int_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _245639_ident) {
	;
	{
		auto &_match_expr{ _245639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6aca351:;
			{
				jule::Ptr<_1e3388a47_Const> _246121_c = static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e3ec6b7e_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_246121_c), ._field_constant=_246121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6aca3b7:;
			{
				jule::Ptr<_1e3388a47_Const> _246821_c = static__1e33e1165_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e3ec6893_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_246821_c), ._field_constant=_246821_c});
			}
		}
		else {
			_case_begin_1e6aca2a7:;
			{
				_1e406836e_push_err(&(*_self_), _245639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_245639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6aca10e:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407d708_eval_uint_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _248040_ident) {
	;
	{
		auto &_match_expr{ _248040_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6acdbe5:;
			{
				jule::Ptr<_1e3388a47_Const> _248521_c = static__1e33e1297_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1e3ec6b7e_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=static_cast<jule::Any>(_248521_c), ._field_constant=_248521_c});
			}
		}
		else {
			_case_begin_1e6acdb4b:;
			{
				_1e406836e_push_err(&(*_self_), _248040_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_248040_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6acd9a3:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407da16_eval_i8_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _249738_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249738_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ad1bb5:;
			{
				jule::Ptr<_1e3388a47_Const> _250421_c = static__1e33e1165_new_i64(127LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_250421_c), ._field_constant=_250421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6ad1c2b:;
			{
				jule::Ptr<_1e3388a47_Const> _251121_c = static__1e33e1165_new_i64(-128LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_251121_c), ._field_constant=_251121_c});
			}
		}
		else {
			_case_begin_1e6ad1b0a:;
			{
				_1e406836e_push_err(&(*_self_), _249738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_249738_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ad1aa5:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407dd24_eval_i16_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _252339_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _252339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ad589a:;
			{
				jule::Ptr<_1e3388a47_Const> _253021_c = static__1e33e1165_new_i64(32767LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_253021_c), ._field_constant=_253021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6ad5911:;
			{
				jule::Ptr<_1e3388a47_Const> _253721_c = static__1e33e1165_new_i64(-32768LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_253721_c), ._field_constant=_253721_c});
			}
		}
		else {
			_case_begin_1e6ad57e0:;
			{
				_1e406836e_push_err(&(*_self_), _252339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_252339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ad578a:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407e132_eval_i32_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _254939_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _254939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ad9580:;
			{
				jule::Ptr<_1e3388a47_Const> _255621_c = static__1e33e1165_new_i64(2147483647LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_255621_c), ._field_constant=_255621_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6ad95e6:;
			{
				jule::Ptr<_1e3388a47_Const> _256321_c = static__1e33e1165_new_i64(-2147483648LL);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_256321_c), ._field_constant=_256321_c});
			}
		}
		else {
			_case_begin_1e6ad94c5:;
			{
				_1e406836e_push_err(&(*_self_), _254939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_254939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ad9470:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407e440_eval_i64_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _257539_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _257539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6add265:;
			{
				jule::Ptr<_1e3388a47_Const> _258221_c = static__1e33e1165_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_258221_c), ._field_constant=_258221_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6add2cb:;
			{
				jule::Ptr<_1e3388a47_Const> _258921_c = static__1e33e1165_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_258921_c), ._field_constant=_258921_c});
			}
		}
		else {
			_case_begin_1e6add1aa:;
			{
				_1e406836e_push_err(&(*_self_), _257539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_257539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6add155:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407e74d_eval_u8_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _260138_ident) {
	;
	;
	{
		auto &_match_expr{ _260138_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ae23e0:;
			{
				jule::Ptr<_1e3388a47_Const> _260721_c = static__1e33e1297_new_u64(255LLU);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_260721_c), ._field_constant=_260721_c});
			}
		}
		else {
			_case_begin_1e6ade09b:;
			{
				_1e406836e_push_err(&(*_self_), _260138_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_260138_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ae1873:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407ea5b_eval_u16_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _261939_ident) {
	;
	;
	{
		auto &_match_expr{ _261939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ae4c94:;
			{
				jule::Ptr<_1e3388a47_Const> _262521_c = static__1e33e1297_new_u64(65535LLU);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_262521_c), ._field_constant=_262521_c});
			}
		}
		else {
			_case_begin_1e6ae32c0:;
			{
				_1e406836e_push_err(&(*_self_), _261939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_261939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ae4227:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e407ed69_eval_u32_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _263739_ident) {
	;
	;
	{
		auto &_match_expr{ _263739_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ae7648:;
			{
				jule::Ptr<_1e3388a47_Const> _264321_c = static__1e33e1297_new_u64(4294967295LLU);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_264321_c), ._field_constant=_264321_c});
			}
		}
		else {
			_case_begin_1e6ae5b74:;
			{
				_1e406836e_push_err(&(*_self_), _263739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_263739_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ae6acb:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4080177_eval_u64_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _265539_ident) {
	;
	;
	{
		auto &_match_expr{ _265539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6ae9eec:;
			{
				jule::Ptr<_1e3388a47_Const> _266121_c = static__1e33e1297_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_266121_c), ._field_constant=_266121_c});
			}
		}
		else {
			_case_begin_1e6ae8528:;
			{
				_1e406836e_push_err(&(*_self_), _265539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_265539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6ae9480:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4080485_eval_f32_type_tatic(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _267338_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _267338_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6aec7a2:;
			{
				jule::Ptr<_1e3388a47_Const> _268121_c = static__1e33e18a2_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_268121_c), ._field_constant=_268121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6aec818:;
			{
				jule::Ptr<_1e3388a47_Const> _268821_c = static__1e33e18a2_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_268821_c), ._field_constant=_268821_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1e6aec87e:;
			{
				jule::Ptr<_1e3388a47_Const> _269521_c = static__1e33e18a2_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_269521_c), ._field_constant=_269521_c});
			}
		}
		else {
			_case_begin_1e6aec65e:;
			{
				_1e406836e_push_err(&(*_self_), _267338_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_267338_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6aec5e8:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4080793_eval_f64_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e1c31ee6_Token> _270739_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270739_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1e6b0271e:;
			{
				jule::Ptr<_1e3388a47_Const> _271521_c = static__1e33e18a2_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_271521_c), ._field_constant=_271521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1e6b02785:;
			{
				jule::Ptr<_1e3388a47_Const> _272221_c = static__1e33e18a2_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272221_c), ._field_constant=_272221_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1e6b027eb:;
			{
				jule::Ptr<_1e3388a47_Const> _272921_c = static__1e33e18a2_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272921_c), ._field_constant=_272921_c});
			}
		}
		else {
			_case_begin_1e6b025cb:;
			{
				_1e406836e_push_err(&(*_self_), _270739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_270739_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6b02565:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4080b4a_eval_prim_static(_1e4067d63_Eval* _self_, jule::Str _274135_kind, jule::Ptr<_1e1c31ee6_Token> _274146_ident) {
	{
		auto &_match_expr{ _274135_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e6b066e0:;
			{
				return _1e407d3ea_eval_int_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e6b06756:;
			{
				return _1e407d708_eval_uint_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e6b070d6:;
			{
				return _1e407da16_eval_i8_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e6b0714c:;
			{
				return _1e407dd24_eval_i16_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e6b071b3:;
			{
				return _1e407e132_eval_i32_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e6b07229:;
			{
				return _1e407e440_eval_i64_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e6b07290:;
			{
				return _1e407e74d_eval_u8_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e6b07306:;
			{
				return _1e407ea5b_eval_u16_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e6b0736c:;
			{
				return _1e407ed69_eval_u32_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e6b073d3:;
			{
				return _1e4080177_eval_u64_type_static(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e6b07449:;
			{
				return _1e4080485_eval_f32_type_tatic(&(*_self_), _274146_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e6b074b0:;
			{
				return _1e4080793_eval_f64_type_static(&(*_self_), _274146_ident);
			}
		}
		else {
			_case_begin_1e6b0658b:;
			{
				_1e406836e_push_err(&(*_self_), _274146_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_274135_kind),jule::Any(_274146_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6b06404:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4081002_eval_type_static(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _277339_d, jule::Ptr<_1e333d634_SubIdentExpr> _277353_si) {
	{
		
		if ((_1e409372e_prim(_277339_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b0bb57:;
			{
				return _1e4080b4a_eval_prim_static(&(*_self_), _1e409649b_to_str(_1e409372e_prim(_277339_d.get()._field_kind.ptr()).ptr()),_277353_si.get()._field_ident);
			}
		}
		else if ((_1e4093e6b_enm(_277339_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b0bbbd:;
			{
				return _1e407ae64_eval_enum_static(&(*_self_), _1e4093e6b_enm(_277339_d.get()._field_kind.ptr()),_277353_si.get()._field_ident);
			}
		}
		else if ((_1e40941d0_tenm(_277339_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b0bc34:;
			{
				return _1e407b31b_eval_type_enum_static(&(*_self_), _1e40941d0_tenm(_277339_d.get()._field_kind.ptr()),_277353_si.get()._field_ident);
			}
		}
		else if ((_1e4094b81_strct(_277339_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b0bc9a:;
			{
				return _1e407b6c3_eval_struct_static(&(*_self_), _1e4094b81_strct(_277339_d.get()._field_kind.ptr()),_277353_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1e6b0bae1:;
			{
				_1e406836e_push_err(&(*_self_), _277353_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_277339_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6b0ba36:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e40813a9_eval_obj_sub_ident(_1e4067d63_Eval* _self_, jule::Ptr<_1e40662e5_Data> _278941_d, jule::Ptr<_1e333d634_SubIdentExpr> _278955_si) {
	if (_1e1c3478a_is_ignore_ident(_278955_si.get()._field_ident.get()._field_kind)) {
		_1e406836e_push_err(&(*_self_), _278955_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e4091661_TypeKind> _279517_kind = _278941_d.get()._field_kind;;
	{
		
		if ((_1e4093c07_ptr(_278941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b128a5:;
			{
				jule::Ptr<_1e409cbab_Ptr> _279817_ptr = _1e4093c07_ptr(_278941_d.get()._field_kind.ptr());;
				if (_1e409d67e_is_unsafe(_279817_ptr.ptr())) {
					goto _match_end_1e6b12751;
				};
				if (((!(_278955_si.get()._field_is_self)) && (!(_1e4068ca9_is_unsafe(&(*_self_)))))) {
					_1e406836e_push_err(&(*_self_), _278955_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_279517_kind=_1e4093c07_ptr(_278941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1e4093993_sptr(_278941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b1291b:;
			{
				_279517_kind=_1e4093993_sptr(_278941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1e6b12751:;
	};
	{
		
		if ((_1e4094de5_trt(_278941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b1538b:;
			{
				return _1e407bb24_eval_trait_sub_ident(&(*_self_), _278941_d,_1e4094de5_trt(_278941_d.get()._field_kind.ptr()),_278955_si.get()._field_ident);
			}
		}
		else if ((_1e4094b81_strct(_279517_kind.ptr()) != nullptr)) {
			_case_begin_1e6b15413:;
			{
				jule::Ptr<_1e3352093_StructIns> _281417_s = _1e4094b81_strct(_279517_kind.ptr());;
				if (_1e408c86b_is_instanced_struct(_281417_s)) {
					jule::Bool _281625_used_reference_elem = (_1e4093993_sptr(_278941_d.get()._field_kind.ptr()) != nullptr);;
					return _1e407c11e_eval_struct_sub_ident(&(*_self_), _278941_d,_1e4094b81_strct(_279517_kind.ptr()),_278955_si,_281625_used_reference_elem);
				};
			}
		}
		else if ((_1e40946a8_slc(_279517_kind.ptr()) != nullptr)) {
			_case_begin_1e6b1548a:;
			{
				return _1e407c4c6_eval_slice_sub_ident(&(*_self_), _278941_d,_278955_si.get()._field_ident);
			}
		}
		else if ((_1e4094444_arr(_279517_kind.ptr()) != nullptr)) {
			_case_begin_1e6b15512:;
			{
				return _1e407c87d_eval_array_sub_ident(&(*_self_), _278941_d,_278955_si.get()._field_ident);
			}
		}
		else if ((_1e4095159_map(_279517_kind.ptr()) != nullptr)) {
			_case_begin_1e6b15a73:;
			{
				return _1e407cc35_eval_map_sub_ident(&(*_self_), _278941_d,_278955_si.get()._field_ident);
			}
		}
		else if ((_1e409372e_prim(_279517_kind.ptr()) != nullptr)) {
			_case_begin_1e6b15aea:;
			{
				jule::Ptr<_1e4096138_Prim> _282617_p = _1e409372e_prim(_279517_kind.ptr());;
				{
					auto &_match_expr{ _282617_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1e6b1b3c5:;
						{
							return _1e407d0dc_eval_str_sub_ident(&(*_self_), _278941_d,_278955_si.get()._field_ident);
						}
					}
					_match_end_1e6b1b21b:;
				};
			}
		}
		_match_end_1e6b1528c:;
	};
	_1e406836e_push_err(&(*_self_), _278955_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_278941_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1e40662e5_Data> _1e40816b7_eval_sub_ident(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333d634_SubIdentExpr> _283638_si) {
	jule::Ptr<_1e4091661_TypeKind> _283717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_283717_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _284117_d = _1e4082ab4_eval_expr_kind(_self_, _283638_si.get()._field_expr.get()._field_kind);;
	if ((_284117_d == nullptr)) {
		return nullptr;
	};
	if (_284117_d.get()._field_decl) {
		return _1e4081002_eval_type_static(_self_.ptr(), _284117_d,_283638_si);
	};
	return _1e40813a9_eval_obj_sub_ident(_self_.ptr(), _284117_d,_283638_si);
}



inline jule::Ptr<_1e40662e5_Data> _1e40819c5_eval_tuple(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333a9a5_TupleExpr> _285334_tup) {
	jule::Ptr<_1e409aa99_Tuple> _285417_tup_t = jule::new_ptr<_1e409aa99_Tuple>(_1e409aa99_Tuple{});;
	_285417_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::alloc(0LL,_285334_tup.get()._field_expr.len());
	jule::Ptr<_1e33ebdda_TupleExprModel> _285717_model = jule::new_ptr<_1e33ebdda_TupleExprModel>(_1e33ebdda_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1e40662e5_Data>>::alloc(0LL,_285334_tup.get()._field_expr.len())});;
	jule::Bool _286117_ok = true;;
	{
		auto &expr = _285334_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1e6b216c7:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _286221_expr = *it;
			{
				jule::Ptr<_1e40662e5_Data> _286321_d = _1e4082ab4_eval_expr_kind(_self_, _286221_expr.get()._field_kind);;
				if ((_286321_d == nullptr)) {
					_286117_ok=false;
					goto _iter_next_1e6b216c7;
				};
				_285417_tup_t.get()._field_types = jule::alloc_for_append(_285417_tup_t.get()._field_types,1);_285417_tup_t.get()._field_types.__push(_286321_d.get()._field_kind);;
				_285717_model.get()._field_datas = jule::alloc_for_append(_285717_model.get()._field_datas,1);_285717_model.get()._field_datas.__push(_286321_d);;
			}
			_iter_next_1e6b216c7:;
			++it;
			goto _iter_begin_1e6b216c7;
		}
		_iter_end_1e6b216c7:;
	};
	if ((!(_286117_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_285417_tup_t, 9)}), ._field_model=static_cast<jule::Any>(_285717_model), });
}



inline jule::Ptr<_1e40662e5_Data> _1e4081d7c_eval_map(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e409b65a_Map> _288232_m, jule::Ptr<_1e3340812_BraceLit> _288245_lit) {
	jule::Ptr<_1e33eab53_MapExprModel> _288317_model = jule::new_ptr<_1e33eab53_MapExprModel>(_1e33eab53_MapExprModel{._field_key_kind=_288232_m.get()._field_key, ._field_val_kind=_288232_m.get()._field_val, });;
	{
		auto &expr = _288245_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e6b24994:;
		if (it != expr.end()) {
			jule::Ptr<_1e3339d28_Expr> _288821_expr = *it;
			{
				{
					auto &_match_expr{ _288821_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e3341329_KeyValPair>>()) {
						_case_begin_1e6b254cd:;
						{
							goto _match_end_1e6b252ad;
						}
					}
					else {
						_case_begin_1e6b25434:;
						{
							_1e406836e_push_err(_self_.ptr(), _288245_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1e6b252ad:;
				};
				jule::Ptr<_1e3341329_KeyValPair> _289821_pair = _288821_expr.get()._field_kind.operator jule::Ptr<_1e3341329_KeyValPair>();;
				jule::Ptr<_1e40662e5_Data> _290021_key = _1e4082ab4_eval_expr_kind(_self_, _289821_pair.get()._field_key.get()._field_kind);;
				if ((_290021_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1e40662e5_Data> _290521_val = _1e4082ab4_eval_expr_kind(_self_, _289821_pair.get()._field_val.get()._field_kind);;
				if ((_290521_val == nullptr)) {
					return nullptr;
				};
				_1e400863e_check_assign_type(_self_.get()._field_s, false,_288232_m.get()._field_key,_290021_key,_289821_pair.get()._field_colon);
				_1e400863e_check_assign_type(_self_.get()._field_s, false,_288232_m.get()._field_val,_290521_val,_289821_pair.get()._field_colon);
				_288317_model.get()._field_entries = jule::alloc_for_append(_288317_model.get()._field_entries,1);_288317_model.get()._field_entries.__push(jule::new_ptr<_1e33ea966_KeyValPairExprModel>(_1e33ea966_KeyValPairExprModel{._field_key=_290021_key.get()._field_model, ._field_val=_290521_val.get()._field_model}));;
			}
			_iter_next_1e6b24994:;
			++it;
			goto _iter_begin_1e6b24994;
		}
		_iter_end_1e6b24994:;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_288232_m, 10)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_288317_model), });
}



inline jule::Ptr<_1e40662e5_Data> _1e408218a_eval_brace_lit(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3340812_BraceLit> _292638_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1e6b29c96:;
			{
				_1e406836e_push_err(_self_.ptr(), _292638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1e4095159_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e6b29d0c:;
			{
				return _1e4081d7c_eval_map(_self_, _1e4095159_map(_self_.get()._field_prefix.ptr()),_292638_lit);
			}
		}
		else if ((_1e4094b81_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e6b29d73:;
			{
				return _1e4078b10_eval_struct_lit_explicit(_self_, _1e4094b81_strct(_self_.get()._field_prefix.ptr()),_292638_lit.get()._field_exprs,_292638_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1e6b29bdb:;
			{
				_1e406836e_push_err(_self_.ptr(), _292638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6b29b31:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4082498_eval_anon_fn(_1e4067d63_Eval* _self_, jule::Ptr<_1e3347330_FnDecl> _294135_decl) {
	_1e409e84a_TypeChecker _294217_tc = _1e409e84a_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1e3404651_FnIns> _294617_ins = _1e40a618c_build_fn(&_294217_tc, _294135_decl);;
	_294617_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
			_case_begin_1e6b2da8b:;
			{
				jule::Ptr<_1e3ed06d2_ScopeChecker> _295121_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>();;
				jule::Ptr<_1e3ed06d2_ScopeChecker> _295221_scc = _1e3ee0c75_new_child_checker(_295121_sc);;
				_295221_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e3eceaee_ScopeLabel>>>(nullptr);
				_295221_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e3ececdb_ScopeGoto>>>(nullptr);
				_295221_scc.get()._field_owner=nullptr;
				_295221_scc.get()._field_child_index=0LL;
				_295221_scc.get()._field_it=0LLU;
				_295221_scc.get()._field_cse=0LLU;
				_295221_scc.get()._field_owner=_294617_ins;
				_1e4015e76_check_fn_ins_sc((*_self_)._field_s.ptr(), _294617_ins,_295221_scc);
			}
		}
		else {
			_case_begin_1e6b2e3d8:;
			{
				_1e401651a_check_fn_ins((*_self_)._field_s, _294617_ins);
			}
		}
		_match_end_1e6b2e383:;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_294617_ins, 1)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ea779_AnonFnExprModel>(_1e33ea779_AnonFnExprModel{._field_func=_294617_ins, ._field_global=_1e406901d_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1e40662e5_Data> _1e40827a6_eval_binop(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e333daa7_BinopExpr> _297434_op) {
	_1e40853e1_BinaryEval _297517_bs = static__1e40859a7_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1e4096138_Prim> _297917_prim = _1e409372e_prim(_self_.get()._field_prefix.ptr());;
		if (((_297917_prim == nullptr) || (!(_1e3ecc624_is_num(_1e409649b_to_str(_297917_prim.ptr())))))) {
			jule::Ptr<_1e4091661_TypeKind> _298125_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_298125_prefix;
			});;
			return _1e408aced_eval(&_297517_bs, _297434_op);
		};
	};
	return _1e408aced_eval(&_297517_bs, _297434_op);
}



inline jule::Ptr<_1e40662e5_Data> _1e4082ab4_eval_expr_kind(jule::Ptr<_1e4067d63_Eval> _self_, jule::Any _299138_kind) {
	jule::Ptr<_1e40662e5_Data> _299217_d = nullptr;;
	{
		auto &_match_expr{ _299138_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e333a114_RangeExpr>>()) {
			_case_begin_1e6b36a72:;
			{
				jule::Ptr<_1e333a114_RangeExpr> _299521_e = _299138_kind.operator jule::Ptr<_1e333a114_RangeExpr>();;
				_299217_d=_1e4082ab4_eval_expr_kind(_self_, _299521_e.get()._field_expr.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333ad5c_LitExpr>>()) {
			_case_begin_1e6b36ad8:;
			{
				_299217_d=_1e406abbd_eval_lit(_self_.ptr(), _299138_kind.operator jule::Ptr<_1e333ad5c_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
			_case_begin_1e6b36b4e:;
			{
				_299217_d=_1e40701ab_eval_ident(_self_.ptr(), _299138_kind.operator jule::Ptr<_1e333bd91_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333c59a_UnaryExpr>>()) {
			_case_begin_1e6b36bb5:;
			{
				_299217_d=_1e40704b9_eval_unary(_self_, _299138_kind.operator jule::Ptr<_1e333c59a_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333c952_VariadicExpr>>()) {
			_case_begin_1e6b36c2b:;
			{
				_299217_d=_1e40707c7_eval_variadic(_self_, _299138_kind.operator jule::Ptr<_1e333c952_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333b566_UnsafeExpr>>()) {
			_case_begin_1e6b36c92:;
			{
				_299217_d=_1e4070ad5_eval_unsafe(_self_, _299138_kind.operator jule::Ptr<_1e333b566_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334179c_SliceExpr>>()) {
			_case_begin_1e6b36d19:;
			{
				_299217_d=_1e4071652_eval_slice_expr(_self_, _299138_kind.operator jule::Ptr<_1e334179c_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334213d_IndexingExpr>>()) {
			_case_begin_1e6b36d91:;
			{
				_299217_d=_1e40742ae_eval_indexing(_self_, _299138_kind.operator jule::Ptr<_1e334213d_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3342748_SlicingExpr>>()) {
			_case_begin_1e6b36e18:;
			{
				_299217_d=_1e407547a_eval_slicing(_self_, _299138_kind.operator jule::Ptr<_1e3342748_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333cd09_CastExpr>>()) {
			_case_begin_1e6b36e90:;
			{
				_299217_d=_1e407837e_eval_cast(_self_, _299138_kind.operator jule::Ptr<_1e333cd09_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333d1b1_NsSelectionExpr>>()) {
			_case_begin_1e6b37017:;
			{
				_299217_d=_1e407868c_eval_ns_selection(_self_.ptr(), _299138_kind.operator jule::Ptr<_1e333d1b1_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334038e_StructLit>>()) {
			_case_begin_1e6b3708e:;
			{
				_299217_d=_1e4078e2e_eval_struct_lit(_self_, _299138_kind.operator jule::Ptr<_1e334038e_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3335807_TypeDecl>>()) {
			_case_begin_1e6b37116:;
			{
				_299217_d=_1e407923c_eval_type(_self_.ptr(), _299138_kind.operator jule::Ptr<_1e3335807_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333e1b2_FnCallExpr>>()) {
			_case_begin_1e6b3718d:;
			{
				_299217_d=_1e407aaac_eval_fn_call(_self_, _299138_kind.operator jule::Ptr<_1e333e1b2_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333d634_SubIdentExpr>>()) {
			_case_begin_1e6b37215:;
			{
				_299217_d=_1e40816b7_eval_sub_ident(_self_, _299138_kind.operator jule::Ptr<_1e333d634_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333a9a5_TupleExpr>>()) {
			_case_begin_1e6b3728c:;
			{
				_299217_d=_1e40819c5_eval_tuple(_self_, _299138_kind.operator jule::Ptr<_1e333a9a5_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3340812_BraceLit>>()) {
			_case_begin_1e6b37314:;
			{
				_299217_d=_1e408218a_eval_brace_lit(_self_, _299138_kind.operator jule::Ptr<_1e3340812_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3347330_FnDecl>>()) {
			_case_begin_1e6b3738b:;
			{
				_299217_d=_1e4082498_eval_anon_fn(_self_.ptr(), _299138_kind.operator jule::Ptr<_1e3347330_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333daa7_BinopExpr>>()) {
			_case_begin_1e6b37413:;
			{
				_299217_d=_1e40827a6_eval_binop(_self_, _299138_kind.operator jule::Ptr<_1e333daa7_BinopExpr>());
			}
		}
		_match_end_1e6b36874:;
	};
	return _299217_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e4082dc2_eval(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3339d28_Expr> _303928_expr) {
	jule::Ptr<_1e40662e5_Data> _304017_d = _1e4082ab4_eval_expr_kind(_self_, _303928_expr.get()._field_kind);;
	if (((_304017_d == nullptr) || (_304017_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1e409491c_fnc(_304017_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b42b38:;
			{
				jule::Ptr<_1e3404651_FnIns> _304721_f = _1e409491c_fnc(_304017_d.get()._field_kind.ptr());;
				if (_1e3405399_is_builtin(_304721_f.ptr())) {
					goto _match_end_1e6b429d4;
				};
				if ((_304721_f.get()._field_generics.len() != _304721_f.get()._field_decl.get()._field_generics.len())) {
					_1e400333c_push_err(_self_.get()._field_s.ptr(), _303928_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1e3402176_is_method(_304721_f.get()._field_decl.ptr())) {
					_1e400333c_push_err(_self_.get()._field_s.ptr(), _303928_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e6b429d4:;
	};
	return _304017_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40831d0_eval_expr(jule::Ptr<_1e4067d63_Eval> _self_, jule::Ptr<_1e3339d28_Expr> _306533_expr) {
	jule::Ptr<_1e40662e5_Data> _306617_d = _1e4082dc2_eval(_self_, _306533_expr);;
	{
		
		if ((_306617_d == nullptr)) {
			_case_begin_1e6b46477:;
			{
				return nullptr;
			}
		}
		else if (_306617_d.get()._field_decl) {
			_case_begin_1e6b464ee:;
			{
				_1e406836e_push_err(_self_.ptr(), _306533_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1e6b46411:;
			{
				return _306617_d;
			}
		}
		_match_end_1e6b463ab:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4067d63_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e4083653_UnaryEval static__1e4083b09_new(jule::Ptr<_1e4067d63_Eval> _308623_e) {
	return _1e4083653_UnaryEval{._field_e=_308623_e, };
}



inline void _1e4083cd5_minus(_1e4083653_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1e6b480a0:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b48501:;
			{
				if ((!(_1e3ecc624_is_num(_1e4091a18_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b48567:;
			{
				if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6b47c2b:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6b47a72:;
	};
	if (_1e4066ba8_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e33e4ee3_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b4b735:;
				{
					_1e33e4102_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1e33e2b4a_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e33e4542_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b4b7ac:;
				{
					_1e33e360c_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1e33e2199_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e33e47a6_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b4b834:;
				{
					_1e33e360c_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1e33e2dae_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1e6b4b603:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e4083eb1_plus(_1e4083653_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1e6b50cab:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b511eb:;
			{
				if ((!(_1e3ecc624_is_num(_1e4091a18_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b51262:;
			{
				if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6b50904:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6b50827:;
	};
	if (_1e4066ba8_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e33e4ee3_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b54430:;
				{
					_1e33e4102_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1e33e2b4a_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e33e4542_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b544a7:;
				{
					_1e33e360c_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1e33e2199_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e33e47a6_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b5452e:;
				{
					_1e33e360c_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1e33e2dae_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1e6b542ed:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e408418c_caret(_1e4083653_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1e6b589a6:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b58de6:;
			{
				if ((!(_1e3ecc05d_is_int(_1e4091a18_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b58e5c:;
			{
				if ((_1e4094b81_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e6b585ee:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6b58522:;
	};
	if (_1e4066ba8_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e33e4542_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b5c119:;
				{
					_1e33e360c_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1e33e2199_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e33e47a6_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b5c191:;
				{
					_1e33e3882_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1e33e240d_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1e6b5bee8:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e4084368_excl(_1e4083653_UnaryEval* _self_) {
	jule::Ptr<_1e4096138_Prim> _320513_t = _1e409372e_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_320513_t == nullptr) || (!(_1e4098d83_is_bool(_320513_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1e4066ba8_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e33e4a1a_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1e6b61a36:;
				{
					_1e33e3b07_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1e33e2672_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1e6b61926:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e4084544_star(_1e4083653_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1e4093c07_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b6494b:;
			{
				if ((!(_1e4068ca9_is_unsafe((*_self_)._field_e.ptr())))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e409cbab_Ptr> _323721_t = _1e4093c07_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1e409d67e_is_unsafe(_323721_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_323721_t.get()._field_elem;
			}
		}
		else if ((_1e4093993_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6b64d9c:;
			{
				(*_self_)._field_d.get()._field_kind=_1e4093993_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1e6b645a5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6b6453e:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1e4084720_amper(_1e4083653_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33e9aec_StructLitExprModel>>()) {
			_case_begin_1e6b69544:;
			{
				jule::Ptr<_1e33e9aec_StructLitExprModel> _325721_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e33e9aec_StructLitExprModel>();;
				_1e408ba8a_make_struct_lit_alloc((*_self_)._field_d,_325721_lit);
			}
		}
		else {
			_case_begin_1e6b68ce6:;
			{
				{
					
					if (_1e40a8315_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1e6b6992e:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409cbab_Ptr>(_1e409cbab_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1e6b6938a:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1e6b692ad:;
				};
			}
		}
		_match_end_1e6b68c6e:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1e40848eb_type_decl(_1e4083653_UnaryEval* _self_) {
	_1e409e84a_TypeChecker _328117_tc = _1e409e84a_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e6b7001c:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a4a2b_build_ptr_from_type(&_328117_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e6b70083:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a4410_build_sptr_from_type(&_328117_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_1e6b6d845:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e6b6d7e0:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1e4084ac7_eval_data(_1e4083653_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e6b6d8ab:;
			{
				jule::Ptr<_1e4091661_TypeKind> _330321_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1e4082ab4_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
				(*_self_)._field_e.get()._field_prefix=_330321_prefix;
			}
		}
		else {
			_case_begin_1e6b72052:;
			{
				(*_self_)._field_d=_1e4082ab4_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
			}
		}
		_match_end_1e6b71e97:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4084da2_eval(_1e4083653_UnaryEval* _self_, jule::Ptr<_1e333c59a_UnaryExpr> _331227_u) {
	(*_self_)._field_u=_331227_u;
	_1e4084ac7_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1e40848eb_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1e4091661_TypeKind> _332313_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e6b76793:;
			{
				_1e4083cd5_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e6b762dc:;
			{
				_1e4083eb1_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e6b76353:;
			{
				_1e408418c_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e6b763b9:;
			{
				_1e4084368_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e6b76430:;
			{
				_1e4084544_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e6b7695d:;
			{
				_1e4084720_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1e6b76276:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1e6b76221:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1e6b78883:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str(_332313_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1e4066ba8_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1e6b76c9e:;
			{
				(*_self_)._field_d.get()._field_model=static_cast<jule::Any>((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1e6b7881c:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4083653_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e40853e1_BinaryEval static__1e40859a7_new_plain(jule::Ptr<_1e4067d63_Eval> _336129_e) {
	return _1e40853e1_BinaryEval{._field_e=_336129_e, };
}



inline _1e40853e1_BinaryEval static__1e4085ce8_new(jule::Ptr<_1e4067d63_Eval> _336723_e, jule::Ptr<_1e1c31ee6_Token> _336737_op) {
	return _1e40853e1_BinaryEval{._field_e=_336723_e, ._field_op=_336737_op};
}



inline jule::Bool _1e408607e_check_type_compatibility(_1e40853e1_BinaryEval* _self_) {
	return _1e4008ab2_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1e4086337_check_struct_common_operator_compatibility(_1e40853e1_BinaryEval* _self_) {
	jule::Ptr<_1e3404651_FnIns> _338117_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e6b7d338:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e6b7d39e:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e6b7e38e:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e6b7e405:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e6b7e46b:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e6b7e4d2:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e6b7e548:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e6b7e5ae:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e6b7e658:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e6b7e6be:;
			{
				_338117_overload=_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1e6b7d206:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1e6b7d14b:;
	};
	if ((_338117_overload == nullptr)) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1e3403782_ParamIns> _341317_p = _338117_overload.get()._field_params[1LL];;
	return _1e400863e_check_assign_type((*_self_)._field_e.get()._field_s, _341317_p.get()._field_decl.get()._field_reference,_341317_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1e40662e5_Data> _1e40865ce_eval_nil(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e4092c7d_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1e4091a18_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6b885eb:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6b88541:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1e6b884db:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4086843_eval_enum(_1e40853e1_BinaryEval* _self_) {
	jule::Ptr<_1e34189c8_Enum> _343817_enm = _1e4093e6b_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6b8a80c:;
			{
				jule::Ptr<_1e4091661_TypeKind> _344221_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1e4093e6b_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_344221_rkind=_1e4093e6b_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1e4008ab2_check_type_compatibility((*_self_)._field_e.get()._field_s, _343817_enm.get()._field_kind.get()._field_kind,_344221_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e6b8a785:;
	};
	if (((_1e4093e6b_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_343817_enm != _1e4093e6b_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_343817_enm.get()._field_ident),jule::Any(_1e4091a18_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6b8ec95:;
			{
				if ((!(_1e3ecc624_is_num(_1e4091a18_to_str(_343817_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343817_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e6b8ed0b:;
			{
				if (((_1e409372e_prim(_343817_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1e3ecc05d_is_int(_1e409649b_to_str(_1e409372e_prim(_343817_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343817_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e6b8ec2e:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343817_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1e6b8eb41:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4086aa7_eval_type_enum(_1e40853e1_BinaryEval* _self_) {
	jule::Ptr<_1e37eea6d_TypeEnum> _348917_enm = _1e40941d0_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6b95bd0:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6b95394:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e367a4a9_to_str(_348917_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6b95a37:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4086d1b_eval_sptr(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6b97c48:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6b97bd2:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6b970ee:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4087080_eval_ptr(_1e40853e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e6b99b90:;
			{
				if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1e6b99c06:;
			{
				if ((_1e4093c07_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1e409d67e_is_unsafe(_1e4093c07_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1e408cb46_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e6b99343:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6b99288:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e40872e4_eval_arr(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6ba5b57:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6ba5ae1:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6ba5959:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4087558_eval_slc(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6ba7d9b:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6ba7d35:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6ba7252:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e40877bc_eval_fn(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6baa0e0:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6baa079:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6ba9496:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4087a31_eval_struct(_1e40853e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e6bab751:;
			{
				if ((_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e6bab7b7:;
			{
				if ((_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e6bab83e:;
			{
				if ((_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6bac037:;
			{
				if ((_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6bac09d:;
			{
				if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e6bab630:;
	};
	if ((!(_1e4086337_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1e40662e5_Data> _1e4087c95_eval_trait(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6bb6508:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6bb6492:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6bb630a:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4088009_eval_any(_1e40853e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6bb8450:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6bb7b03:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1e6bb7a48:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e408826d_eval_bool(_1e40853e1_BinaryEval* _self_) {
	if ((!(_1e408607e_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1e6bba265:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e6bba1ee:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e4091a18_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e6bb961b:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e40884d2_eval_str(_1e40853e1_BinaryEval* _self_) {
	jule::Str _373117_rk = _1e4091a18_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_373117_rk != jule::Str("str", 3))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_373117_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e6bbd2bd:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6bbe2e1:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e6bbc377:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1e6bbd268:;
	};
}



inline void _1e40886ad_set_type_to_greater(_1e40853e1_BinaryEval* _self_) {
	if (_1e4066ba8_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1e4066ba8_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1e4066ba8_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1e3eca996_is_greater(_1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1e4088900_check_mod_data(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _377438_d) {
	if ((!(_1e4066ba8_is_const(_377438_d.ptr())))) {
		if (((_1e409372e_prim(_377438_d.get()._field_kind.ptr()) == nullptr) || (!(_1e3ecc05d_is_int(_1e409372e_prim(_377438_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e4034192_sig_assignable(jule::Str("i64", 3),_377438_d)) {
			_case_begin_1e6bc52d6:;
			{
				_1e33e360c_set_i64(_377438_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_377438_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e4050aa4_unsig_assignable(jule::Str("u64", 3),_377438_d)) {
			_case_begin_1e6bc4eb7:;
			{
				_1e33e3882_set_u64(_377438_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_377438_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1e6bc4e51:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e6bc37e0:;
	};
}



inline void _1e4088acb_mod(_1e40853e1_BinaryEval* _self_) {
	_1e4088900_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1e4088900_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1e4088ea5_numbers_are_compatibile(_1e40853e1_BinaryEval* _self_, jule::Str& _379639_lk, jule::Str& _379649_rk) {
	if ((!(_1e3ecc624_is_num(_379649_rk)))) {
		return false;
	};
	if (_1e4066ba8_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_379639_lk == jule::Str("f32", 3))) {
		if (_1e4066ba8_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379649_rk == jule::Str("f32", 3));
	};
	if ((_379639_lk == jule::Str("f64", 3))) {
		if (_1e4066ba8_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379649_rk == jule::Str("f64", 3));
	};
	if (_1e4066ba8_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_379639_lk == _379649_rk);
}



inline jule::Ptr<_1e40662e5_Data> _1e408922a_eval_float(_1e40853e1_BinaryEval* _self_) {
	jule::Str _382613_lk = _1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _382713_rk = _1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1e4088ea5_numbers_are_compatibile(&(*_self_), _382613_lk,_382713_rk)))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382613_lk),jule::Any(_382713_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e6bccbd4:;
			{
				if (((!(_1e4066ba8_is_const((*_self_)._field_l.ptr()))) || (!(_1e4050bd6_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382613_lk),jule::Any(_382713_rk)}));
					return nullptr;
				};
				if (((!(_1e4066ba8_is_const((*_self_)._field_r.ptr()))) || (!(_1e4050bd6_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382613_lk),jule::Any(_382713_rk)}));
					return nullptr;
				};
				_1e33e360c_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1e33e3882_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1e408c4b4_is_ok_for_shifting((*_self_)._field_r)))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1e6bccb07:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6bd2546:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e6bd24e1:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1e6bd305d:;
			{
				_1e40886ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e6bd30c4:;
			{
				if ((!(_1e3ecc05d_is_int(_382713_rk)))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382613_lk),jule::Any(_382713_rk)}));
					return nullptr;
				};
				_1e4088acb_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1e6bd34ae:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6bd3459:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e408948e_eval_int(_1e40853e1_BinaryEval* _self_) {
	jule::Str _389013_lk = _1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _389113_rk = _1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e6bd313a:;
			{
				if (((!(_1e3ecc05d_is_int(_389013_lk))) || (!(_1e3ecc05d_is_int(_389113_rk))))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_389013_lk),jule::Any(_389113_rk)}));
					return nullptr;
				};
				if ((!(_1e408c4b4_is_ok_for_shifting((*_self_)._field_r)))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1e6bd779e:;
	};
	if ((!(_1e4088ea5_numbers_are_compatibile(&(*_self_), _389013_lk,_389113_rk)))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_389013_lk),jule::Any(_389113_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6bda8c3:;
			{
				return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e6bda7d5:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e6bdb20e:;
			{
				_1e40886ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e6bdb275:;
			{
				_1e4088acb_mod(&(*_self_));
				_1e40886ad_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e6bdb660:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1e6bdb60a:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4089703_eval_prim(_1e40853e1_BinaryEval* _self_) {
	jule::Ptr<_1e4096138_Prim> _394913_prim = _1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1e4098d83_is_bool(_394913_prim.ptr())) {
			_case_begin_1e6bde94e:;
			{
				return _1e408826d_eval_bool(&(*_self_));
			}
		}
		else if (_1e40990e7_is_str(_394913_prim.ptr())) {
			_case_begin_1e6bde9c6:;
			{
				return _1e40884d2_eval_str(&(*_self_));
			}
		}
		_match_end_1e6bde894:;
	};
	if ((_1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e409649b_to_str(_394913_prim.ptr())),jule::Any(_1e4091a18_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1e3ecc37c_is_float(_394913_prim.get()._field_kind)) {
			_case_begin_1e6be2402:;
			{
				return _1e408922a_eval_float(&(*_self_));
			}
		}
		else if (_1e3ecc05d_is_int(_394913_prim.get()._field_kind)) {
			_case_begin_1e6be1c70:;
			{
				return _1e408948e_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1e6be1c09:;
			{
				return nullptr;
			}
		}
		_match_end_1e6be1a0b:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e4089967_eval_op(_1e40853e1_BinaryEval* _self_) {
	{
		
		if (_1e40927a5_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1e6be3623:;
			{
				_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e6be3997:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be3700;
			}
		}
		else if (((_1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e6be3700:;
			{
				return _1e4088009_eval_any(&(*_self_));
			}
		}
		else if ((_1e40941d0_tenm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3766:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be37cc;
			}
		}
		else if ((_1e40941d0_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be37cc:;
			{
				return _1e4086aa7_eval_type_enum(&(*_self_));
			}
		}
		else if (_1e4092541_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1e6be3843:;
			{
				return _1e40865ce_eval_nil(&(*_self_));
			}
		}
		else if ((_1e4093e6b_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be38a9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be3a63;
			}
		}
		else if ((_1e4093e6b_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3a63:;
			{
				return _1e4086843_eval_enum(&(*_self_));
			}
		}
		else if ((_1e4093993_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3ac9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be3b40;
			}
		}
		else if ((_1e4093993_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3b40:;
			{
				return _1e4086d1b_eval_sptr(&(*_self_));
			}
		}
		else if ((_1e4093c07_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3bb7:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be3c3e;
			}
		}
		else if ((_1e4093c07_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3c3e:;
			{
				return _1e4087080_eval_ptr(&(*_self_));
			}
		}
		else if ((_1e4094444_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3cb6:;
			{
				return _1e40872e4_eval_arr(&(*_self_));
			}
		}
		else if ((_1e40946a8_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3d3d:;
			{
				return _1e4087558_eval_slc(&(*_self_));
			}
		}
		else if ((_1e409491c_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3db5:;
			{
				return _1e40877bc_eval_fn(&(*_self_));
			}
		}
		else if ((_1e4094de5_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3e3c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e6be3eb4;
			}
		}
		else if ((_1e4094de5_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be3eb4:;
			{
				return _1e4087c95_eval_trait(&(*_self_));
			}
		}
		else if ((_1e4094b81_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be403b:;
			{
				return _1e4087a31_eval_struct(&(*_self_));
			}
		}
		else if ((_1e409372e_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6be40b3:;
			{
				return _1e4089703_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1e6be2512:;
			{
				return nullptr;
			}
		}
		_match_end_1e6be2930:;
	};
}



inline void _1e4089bdc_eval_const(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _402434_d) {
	{
		
		if ((_402434_d == nullptr)) {
			_case_begin_1e6c02d6e:;
			{
				return;;
			}
		}
		else if ((!(_1e4066ba8_is_const((*_self_)._field_l.ptr()))) || (!(_1e4066ba8_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1e6c03501:;
			{
				_402434_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1e6c02c4d:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e6c04ab8:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e6c04b2e:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e6c04b95:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(_1e33e5b81_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e6c04c0b:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(_1e33e5873_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e6c04c72:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e6c04cd8:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e6c04d4e:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e6c04db5:;
			{
				_402434_d.get()._field_constant=static__1e33e13c9_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e6c04e2b:;
			{
				_1e33e6ed4_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e6c04e92:;
			{
				_1e33e72e2_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e6c05008:;
			{
				_1e33e7600_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e6c0506e:;
			{
				jule::Bool _406117_ok = _1e33e790d_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_406117_ok)) && (_1e33e3387_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1e4096138_Prim> _406621_prim = _1e409372e_prim(_402434_d.get()._field_kind.ptr());;
				{
					
					if (_1e3ecb9ca_is_sig_int(_406621_prim.get()._field_kind)) {
						_case_begin_1e6c1172e:;
						{
							_1e33e360c_set_i64(_402434_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_402434_d.get()._field_constant.ptr())));
						}
					}
					else if (_1e3ecbcb6_is_unsig_int(_406621_prim.get()._field_kind)) {
						_case_begin_1e6c117a6:;
						{
							_1e33e3882_set_u64(_402434_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_402434_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1e6c11674:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e6c050e6:;
			{
				jule::Bool _407417_ok = _1e33e7c1b_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_407417_ok)) && (_1e33e3387_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e6c0516d:;
			{
				_1e33e8337_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e6c051e5:;
			{
				_1e33e8029_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e6c0526c:;
			{
				_1e33e8645_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e6c052e4:;
			{
				_1e33e8953_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e6c0536b:;
			{
				_1e33e8c61_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_402434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1e6c04337:;
	};
	_1e408d8d3_apply_cast_model_by_enum(_402434_d,_1e4093e6b_enm(_402434_d.get()._field_kind.ptr()));
	jule::Ptr<_1e4096138_Prim> _409817_prim = _1e409372e_prim(_402434_d.get()._field_kind.ptr());;
	if (((_409817_prim == nullptr) || (!(_1e3ecc624_is_num(_1e409649b_to_str(_409817_prim.ptr())))))) {
		_402434_d.get()._field_model=static_cast<jule::Any>(_402434_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_402434_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_409817_prim=_1e409372e_prim(_402434_d.get()._field_kind.ptr());
		};
	};
	_1e408b78d_fit_bitsize(_402434_d);
	_1e408db9c_cast_const_by_type(_409817_prim.get()._field_kind,_402434_d);
}



inline void _1e4089e62_check_data(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _411434_d) {
	jule::Ptr<_1e3404651_FnIns> _411513_f = _1e409491c_fnc(_411434_d.get()._field_kind.ptr());;
	if ((((_411513_f != nullptr) && (_411513_f.get()._field_decl != nullptr)) && _1e3402176_is_method(_411513_f.get()._field_decl.ptr()))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1e408a13d_check_datas(_1e40853e1_BinaryEval* _self_) {
	_1e4089e62_check_data(&(*_self_), (*_self_)._field_l);
	_1e4089e62_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1e408a3b3_set_model(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _412633_d) {
	if (_1e4066ba8_is_const(_412633_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1e40662e5_Data> _413418_l = (*_self_)._field_l;;
	jule::Ptr<_1e40662e5_Data> _413425_r = (*_self_)._field_r;;
	std::tie(_413418_l,_413425_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1e4066eb6_good_operand(_413418_l.ptr(), _413425_r)))) {
		std::tie(_413418_l,_413425_r) = std::make_tuple(_413425_r,_413418_l);
	};
	_412633_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9536_BinopExprModel>(_1e33e9536_BinopExprModel{._field_left=jule::new_ptr<_1e33cb073_OperandExprModel>(_1e33cb073_OperandExprModel{._field_kind=_413418_l.get()._field_kind, ._field_model=_413418_l.get()._field_model}), ._field_right=jule::new_ptr<_1e33cb073_OperandExprModel>(_1e33cb073_OperandExprModel{._field_kind=_413425_r.get()._field_kind, ._field_model=_413425_r.get()._field_model}), ._field_op=(*_self_)._field_op}));
}



inline void _1e408a638_post_eval(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _415233_d) {
	_415233_d.get()._field_lvalue=false;
	_1e408a3b3_set_model(&(*_self_), _415233_d);
}



inline jule::Ptr<_1e40662e5_Data> _1e408a9e0_solve_explicit(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e40662e5_Data>& _415738_l, jule::Ptr<_1e40662e5_Data>& _415753_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415738_l,_415753_r);
	_1e408a13d_check_datas(&(*_self_));
	jule::Ptr<_1e40662e5_Data> _416217_d = _1e4089967_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415738_l,_415753_r);
	_1e4089bdc_eval_const(&(*_self_), _416217_d);
	if ((_416217_d != nullptr)) {
		_416217_d.get()._field_mutable=true;
		_1e408a638_post_eval(&(*_self_), _416217_d);
	};
	return _416217_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e408aced_eval(_1e40853e1_BinaryEval* _self_, jule::Ptr<_1e333daa7_BinopExpr>& _417728_op) {
	if ((_417728_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1e406836e_push_err((*_self_)._field_e.ptr(), _417728_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1e406868d_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _418417_l = _1e4082ab4_eval_expr_kind((*_self_)._field_e, _417728_op.get()._field_left.get()._field_kind);;
	if (((_418417_l == nullptr) || (_418417_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1e4091661_TypeKind> _418917_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_418417_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_418917_prefix;
	});;
	jule::Ptr<_1e40662e5_Data> _419217_r = _1e4082ab4_eval_expr_kind((*_self_)._field_e, _417728_op.get()._field_right.get()._field_kind);;
	if (((_419217_r == nullptr) || (_419217_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_417728_op.get()._field_op;
	jule::Ptr<_1e40662e5_Data> _419917_d = _1e408a9e0_solve_explicit(&(*_self_), _418417_l,_419217_r);;
	if ((((_419917_d != nullptr) && _418417_l.get()._field_is_rune) && _419217_r.get()._field_is_rune)) {
		_419917_d.get()._field_is_rune=true;
	};
	return _419917_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e40853e1_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4090929_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e4091a18_to_str(_1e4091661_TypeKind* _self_) {
	if (_1e4092541_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _6817_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_6817_kind+=jule::Str("...", 3);
	};
	if (_1e40922cc_cpp_linked(&(*_self_))) {
		_6817_kind+=jule::Str("cpp.", 4);
		_6817_kind+=(*_self_)._field_cpp_ident;
	} else {
		_6817_kind+=_1e4091232_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1e4090cd1_to_str((*_self_)._field_kind);
	};
	return _6817_kind;
}



inline jule::Bool _1e4091d26_equals(jule::Ptr<_1e4091661_TypeKind> _self_, jule::Ptr<_1e4091661_TypeKind> _8426_other) {
	if (_1e4092541_is_nil(_self_.ptr())) {
		return _1e4092541_is_nil(_8426_other.ptr());
	};
	if (_1e40922cc_cpp_linked(_self_.ptr())) {
		return (_1e40922cc_cpp_linked(_8426_other.ptr()) && (_self_.get()._field_cpp_ident == _8426_other.get()._field_cpp_ident));
	};
	return _1e4091232_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1e40910de_equals(_self_.get()._field_kind, _8426_other);
}



inline jule::Bool _1e40922cc_cpp_linked(_1e4091661_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1e4092541_is_nil(_1e4091661_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1e40927a5_void(_1e4091661_TypeKind* _self_) {
	jule::Ptr<_1e4096138_Prim> _10713_prim = _1e409372e_prim(&(*_self_));;
	return ((_10713_prim != nullptr) && (_10713_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1e4092a19_mutable(_1e4091661_TypeKind* _self_) {
	{
		_1e4091661_TypeKind* _11421__self = (&((*_self_)));;
		if ((_1e4094b81_strct(_11421__self) != nullptr)) {
			return _1e4094b81_strct(_11421__self).get()._field_mutable;
		};
		if ((_1e4094de5_trt(_11421__self) != nullptr)) {
			return _1e4094de5_trt(_11421__self).get()._field_mutable;
		};
		if ((_1e409372e_prim(_11421__self) != nullptr)) {
			jule::Ptr<_1e4096138_Prim> _12321_p = _1e409372e_prim(_11421__self);;
			return _1e409935b_is_any(_12321_p.ptr());
		};
		if ((_1e4094444_arr(_11421__self) != nullptr)) {
			return _1e4092a19_mutable(_1e4094444_arr(_11421__self).get()._field_elem.ptr());
		};
		return (((_1e40946a8_slc(_11421__self) != nullptr) || (_1e4093c07_ptr(_11421__self) != nullptr)) || (_1e4093993_sptr(_11421__self) != nullptr));
	};
}



inline jule::Bool _1e4092c7d_nil_compatible(_1e4091661_TypeKind* _self_) {
	{
		_1e4091661_TypeKind* _13821__self = (&((*_self_)));;
		jule::Ptr<_1e4096138_Prim> _14017_prim = _1e409372e_prim(_13821__self);;
		if (((_14017_prim != nullptr) && _1e409935b_is_any(_14017_prim.ptr()))) {
			return true;
		};
		return (((((((_1e4092541_is_nil(_13821__self) || (_1e409491c_fnc(_13821__self) != nullptr)) || (_1e4093993_sptr(_13821__self) != nullptr)) || (_1e4093c07_ptr(_13821__self) != nullptr)) || (_1e4094de5_trt(_13821__self) != nullptr)) || (_1e40946a8_slc(_13821__self) != nullptr)) || (_1e4095159_map(_13821__self) != nullptr)) || (_1e40941d0_tenm(_13821__self) != nullptr));
	};
}



inline jule::Bool _1e4092ee2_performs_rc(_1e4091661_TypeKind* _self_) {
	{
		_1e4091661_TypeKind* _15921__self = (&((*_self_)));;
		return (((_1e4093993_sptr(_15921__self) != nullptr) || (_1e40946a8_slc(_15921__self) != nullptr)) || (_1e4094de5_trt(_15921__self) != nullptr));
	};
}



inline jule::Bool _1e4093256_supports_cloning(_1e4091661_TypeKind* _self_) {
	{
		_1e4091661_TypeKind* _16721__self = (&((*_self_)));;
		{
			
			if ((_1e409372e_prim(_16721__self) != nullptr)) {
				_case_begin_1e6c527e7:;
				{
					return (!(_1e409935b_is_any(_1e409372e_prim(_16721__self).ptr())));
				}
			}
			else if ((_1e4093e6b_enm(_16721__self) != nullptr)) {
				_case_begin_1e6c5285d:;
				{
					return true;
				}
			}
			else if ((_1e409491c_fnc(_16721__self) != nullptr)) {
				_case_begin_1e6c52b5a:;
				{
					return true;
				}
			}
			else if ((_1e4093c07_ptr(_16721__self) != nullptr)) {
				_case_begin_1e6c52bc1:;
				{
					return true;
				}
			}
			else if ((_1e40946a8_slc(_16721__self) != nullptr)) {
				_case_begin_1e6c52c37:;
				{
					return _1e4093256_supports_cloning(_1e40946a8_slc(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1e4095159_map(_16721__self) != nullptr)) {
				_case_begin_1e6c52c9d:;
				{
					jule::Ptr<_1e409b65a_Map> _18021_m = _1e4095159_map(_16721__self);;
					return (_1e4093256_supports_cloning(_18021_m.get()._field_key.ptr()) && _1e4093256_supports_cloning(_18021_m.get()._field_val.ptr()));
				}
			}
			else if ((_1e4094444_arr(_16721__self) != nullptr)) {
				_case_begin_1e6c52d14:;
				{
					return _1e4093256_supports_cloning(_1e4094444_arr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1e4093993_sptr(_16721__self) != nullptr)) {
				_case_begin_1e6c52d7a:;
				{
					return _1e4093256_supports_cloning(_1e4093993_sptr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1e4094b81_strct(_16721__self) != nullptr)) {
				_case_begin_1e6c52e02:;
				{
					jule::Ptr<_1e3352093_StructIns> _18725_s = _1e4094b81_strct(_16721__self);;
					return (((_18725_s.get()._field_decl != nullptr) && (!(_18725_s.get()._field_decl.get()._field_cpp_linked))) && _1e3318169_is_derives(_18725_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1e6c526c6:;
				{
					return false;
				}
			}
			_match_end_1e6c52660:;
		};
	};
}



inline jule::Bool _1e40934ba_variadicable(_1e4091661_TypeKind* _self_) {
	{
		_1e4091661_TypeKind* _20021__self = (&((*_self_)));;
		return (_1e40946a8_slc(_20021__self) != nullptr);
	};
}



inline jule::Ptr<_1e4096138_Prim> _1e409372e_prim(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4096138_Prim>>()) {
			_case_begin_1e6c5a525:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e4096138_Prim>();
			}
		}
		else {
			_case_begin_1e6c59db5:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c59d60:;
	};
}



inline jule::Ptr<_1e4099647_Sptr> _1e4093993_sptr(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4099647_Sptr>>()) {
			_case_begin_1e6c5b218:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e4099647_Sptr>();
			}
		}
		else {
			_case_begin_1e6c5a822:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5ad1c:;
	};
}



inline jule::Ptr<_1e409cbab_Ptr> _1e4093c07_ptr(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e409cbab_Ptr>>()) {
			_case_begin_1e6c5be61:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e409cbab_Ptr>();
			}
		}
		else {
			_case_begin_1e6c5b56a:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5ba54:;
	};
}



inline jule::Ptr<_1e34189c8_Enum> _1e4093e6b_enm(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e34189c8_Enum>>()) {
			_case_begin_1e6c5cba9:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e34189c8_Enum>();
			}
		}
		else {
			_case_begin_1e6c5c2b3:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5c79c:;
	};
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40941d0_tenm(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e37eea6d_TypeEnum>>()) {
			_case_begin_1e6c5d902:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e37eea6d_TypeEnum>();
			}
		}
		else {
			_case_begin_1e6c5d00b:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5d4e5:;
	};
}



inline jule::Ptr<_1e409c24e_Arr> _1e4094444_arr(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e409c24e_Arr>>()) {
			_case_begin_1e6c5e64a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e409c24e_Arr>();
			}
		}
		else {
			_case_begin_1e6c5dc54:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5e23d:;
	};
}



inline jule::Ptr<_1e409a0a4_Slc> _1e40946a8_slc(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e409a0a4_Slc>>()) {
			_case_begin_1e6c60393:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e409a0a4_Slc>();
			}
		}
		else {
			_case_begin_1e6c5e99c:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c5ee86:;
	};
}



inline jule::Ptr<_1e3404651_FnIns> _1e409491c_fnc(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
			_case_begin_1e6c610db:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e3404651_FnIns>();
			}
		}
		else {
			_case_begin_1e6c606e5:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c60bce:;
	};
}



inline jule::Ptr<_1e3352093_StructIns> _1e4094b81_strct(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3352093_StructIns>>()) {
			_case_begin_1e6c61d34:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e3352093_StructIns>();
			}
		}
		else {
			_case_begin_1e6c6143d:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c61927:;
	};
}



inline jule::Ptr<_1e374ee30_Trait> _1e4094de5_trt(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e374ee30_Trait>>()) {
			_case_begin_1e6c62a7c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e374ee30_Trait>();
			}
		}
		else {
			_case_begin_1e6c62186:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c62670:;
	};
}



inline jule::Ptr<_1e409b65a_Map> _1e4095159_map(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e409b65a_Map>>()) {
			_case_begin_1e6c637c5:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e409b65a_Map>();
			}
		}
		else {
			_case_begin_1e6c62dce:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c633b8:;
	};
}



inline jule::Ptr<_1e409aa99_Tuple> _1e40953bd_tup(_1e4091661_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e409aa99_Tuple>>()) {
			_case_begin_1e6c6451d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e409aa99_Tuple>();
			}
		}
		else {
			_case_begin_1e6c63b27:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c64111:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4091661_TypeKind _Src) {
	_Stream << _1e4091a18_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e4095b71_checked(_1e4095775_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1e4095d4c_remove_kind(_1e4095775_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4095775_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e409649b_to_str(_1e4096138_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1e40967a9_equals(jule::Ptr<_1e4096138_Prim> _self_, jule::Ptr<_1e4091661_TypeKind> _35326_other) {
	jule::Ptr<_1e4096138_Prim> _35413_prim = _1e409372e_prim(_35326_other.ptr());;
	if ((_35413_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _35413_prim.get()._field_kind);
}



inline jule::Bool _1e4096c1b_is_i8(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1e4096e80_is_i16(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1e40971e4_is_i32(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1e4097458_is_i64(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1e40976bc_is_u8(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1e4097931_is_u16(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1e4097b95_is_u32(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1e4097e09_is_u64(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1e409816d_is_f32(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1e40983d2_is_f64(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1e4098646_is_int(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1e40988aa_is_uint(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1e4098b1e_is_uintptr(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1e4098d83_is_bool(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1e40990e7_is_str(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1e409935b_is_any(_1e4096138_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4096138_Prim _Src) {
	_Stream << _1e409649b_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e40999aa_to_str(_1e4099647_Sptr* _self_) {
	return (jule::Str("&", 1) + _1e4091a18_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1e4099cb8_equals(jule::Ptr<_1e4099647_Sptr> _self_, jule::Ptr<_1e4091661_TypeKind> _42226_other) {
	jule::Ptr<_1e4099647_Sptr> _42313_sptr = _1e4093993_sptr(_42226_other.ptr());;
	if ((_42313_sptr == nullptr)) {
		return false;
	};
	return _1e4091d26_equals(_self_.get()._field_elem, _42313_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4099647_Sptr _Src) {
	_Stream << _1e40999aa_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e409a527_to_str(_1e409a0a4_Slc* _self_) {
	return (jule::Str("[]", 2) + _1e4091a18_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1e409a835_equals(jule::Ptr<_1e409a0a4_Slc> _self_, jule::Ptr<_1e4091661_TypeKind> _44126_other) {
	jule::Ptr<_1e409a0a4_Slc> _44213_slc = _1e40946a8_slc(_44126_other.ptr());;
	if ((_44213_slc == nullptr)) {
		return false;
	};
	return _1e4091d26_equals(_self_.get()._field_elem, _44213_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e409a0a4_Slc _Src) {
	_Stream << _1e409a527_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e409b01c_to_str(_1e409aa99_Tuple* _self_) {
	jule::Str _45817_s = jule::Str("(", 1);;
	_45817_s+=_1e4091a18_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1e6c72196:;
		if (it != expr.end()) {
			jule::Ptr<_1e4091661_TypeKind> &_46016_t = *it;
			{
				_45817_s+=jule::Str(",", 1);
				_45817_s+=_1e4091a18_to_str(_46016_t.ptr());
			}
			_iter_next_1e6c72196:;
			++it;
			goto _iter_begin_1e6c72196;
		}
		_iter_end_1e6c72196:;
	};
	_45817_s+=jule::Str(")", 1);
	return _45817_s;
}



inline jule::Bool _1e409b32a_equals(jule::Ptr<_1e409aa99_Tuple> _self_, jule::Ptr<_1e4091661_TypeKind> _46926_other) {
	jule::Ptr<_1e409aa99_Tuple> _47013_tup = _1e40953bd_tup(_46926_other.ptr());;
	if ((_47013_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _47013_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _47917_i = 0LL;;
	for (; (_47917_i < _self_.get()._field_types.len()); (_47917_i)++) {
		{
			if ((!(_1e4091d26_equals(_self_.get()._field_types[_47917_i], _47013_tup.get()._field_types[_47917_i])))) {
				return false;
			};
		}
	_iter_next_1e6c75760:;
	}
	_iter_end_1e6c75760:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e409aa99_Tuple _Src) {
	_Stream << _1e409b01c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e409b9bd_to_str(_1e409b65a_Map* _self_) {
	jule::Str _49917_s = jule::Str("[", 1);;
	_49917_s+=_1e4091a18_to_str((*_self_)._field_key.ptr());
	_49917_s+=jule::Str(":", 1);
	_49917_s+=_1e4091a18_to_str((*_self_)._field_val.ptr());
	_49917_s+=jule::Str("]", 1);
	return _49917_s;
}



inline jule::Bool _1e409bccb_equals(jule::Ptr<_1e409b65a_Map> _self_, jule::Ptr<_1e4091661_TypeKind> _50826_other) {
	jule::Ptr<_1e409b65a_Map> _50913_map = _1e4095159_map(_50826_other.ptr());;
	if ((_50913_map == nullptr)) {
		return false;
	};
	return (_1e4091d26_equals(_self_.get()._field_key, _50913_map.get()._field_key) && _1e4091d26_equals(_self_.get()._field_val, _50913_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1e409b65a_Map _Src) {
	_Stream << _1e409b9bd_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e409c5b2_to_str(_1e409c24e_Arr* _self_) {
	jule::Str _52717_s = jule::Str("[", 1);;
	_52717_s+=_1e3e4dbd3_itoa((*_self_)._field_n);
	_52717_s+=jule::Str("]", 1);
	_52717_s+=_1e4091a18_to_str((*_self_)._field_elem.ptr());
	return _52717_s;
}



inline jule::Bool _1e409c8c0_equals(jule::Ptr<_1e409c24e_Arr> _self_, jule::Ptr<_1e4091661_TypeKind> _53526_other) {
	jule::Ptr<_1e409c24e_Arr> _53613_arr = _1e4094444_arr(_53526_other.ptr());;
	if ((_53613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _53613_arr.get()._field_n) && _1e4091d26_equals(_self_.get()._field_elem, _53613_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1e409c24e_Arr _Src) {
	_Stream << _1e409c5b2_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1e409d01e_to_str(_1e409cbab_Ptr* _self_) {
	if (_1e409d67e_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1e4091a18_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1e409d32c_equals(jule::Ptr<_1e409cbab_Ptr> _self_, jule::Ptr<_1e4091661_TypeKind> _55926_other) {
	jule::Ptr<_1e409cbab_Ptr> _56013_ptr = _1e4093c07_ptr(_55926_other.ptr());;
	if ((_56013_ptr == nullptr)) {
		return false;
	};
	return _1e4091d26_equals(_self_.get()._field_elem, _56013_ptr.get()._field_elem);
}



inline jule::Bool _1e409d67e_is_unsafe(_1e409cbab_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e409cbab_Ptr _Src) {
	_Stream << _1e409d01e_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e409db02_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e40a0054_push_err(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e1c31ee6_Token> _63727_token, jule::Str _63742_fmt, jule::Slice<jule::Any> _63755_args) {
	_1e400333c_push_err((*_self_)._field_s.ptr(), _63727_token,_63742_fmt,jule::Any(_63755_args));
}



inline void _1e40a0230_allow_builtin(_1e409e84a_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1e40a040b_disallow_builtin(_1e409e84a_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1e4096138_Prim> _1e40a0719_build_prim(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _64930_decl) {
	if ((!(_1e40a9844_is_prim(_64930_decl.get()._field_ident)))) {
		_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_64930_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _64930_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_64930_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1e40a9305_build_prim_type(_64930_decl.get()._field_ident);
}



inline void _1e6c85198_push_reference(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3352093_StructIns>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1e6a06d82_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1e3407b1b_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}

inline void _1e6c88168_push_reference(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e374ee30_Trait>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1e6c89ca2_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1e3407b1b_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}



inline void _1e40a0c14_push_reference_by_kind(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e4091661_TypeKind>& _67346_k) {
	{
		
		if ((_1e4094b81_strct(_67346_k.ptr()) != nullptr)) {
			_case_begin_1e6c83d01:;
			{
				jule::Ptr<_1e3352093_StructIns> _67621_t = _1e4094b81_strct(_67346_k.ptr());;
				_1e6c85198_push_reference(&(*_self_), _67621_t);
			}
		}
		else if ((_1e4094de5_trt(_67346_k.ptr()) != nullptr)) {
			_case_begin_1e6c83d78:;
			{
				jule::Ptr<_1e374ee30_Trait> _67921_t = _1e4094de5_trt(_67346_k.ptr());;
				_1e6c88168_push_reference(&(*_self_), _67921_t);
			}
		}
		_match_end_1e6c83bd0:;
	};
}



inline void _1e40a10cc_push_cycle_error(_1e409e84a_TypeChecker* _self_, jule::Any _68431_def1, jule::Any _68442_def2, jule::Str& _68458_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _68713_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _68729_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _68729_def };
			
			if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
				_case_begin_1e6c8d0a2:;
				{
					return _68729_def.operator jule::Ptr<_1e4090929_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
				_case_begin_1e6c8d118:;
				{
					return _68729_def.operator jule::Ptr<_1e3318840_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_1e6c8ce1a:;
				{
					return jule::Str();
				}
			}
			_match_end_1e6c8cd3d:;
		};
	});;
	jule::Str _69813_def1_ident = _68713_get_ident(_68431_def1);;
	jule::Str _69913_def2_ident = _68713_get_ident(_68442_def2);;
	jule::Str _70013_refers_to = _1e19054a0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_69813_def1_ident),jule::Any(_69913_def2_ident)}));;
	(_68458_message).buffer.insert(0, (((_1e17ddb08_repeat(jule::Str(" ", 1),4LL) + _70013_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e40a1484_check_cross_cycle(_1e409e84a_TypeChecker* _self_, jule::Any _70432_decl, jule::Str& _70448_message) {
	{
		auto &_match_expr{ _70432_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
			_case_begin_1e6c90912:;
			{
				jule::Ptr<_1e4090929_TypeAlias> _70717_ta = _70432_decl.operator jule::Ptr<_1e4090929_TypeAlias>();;
				{
					auto &expr = _70717_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1e6c9165a:;
					if (it != expr.end()) {
						jule::Any &_70820_d = *it;
						{
							{
								
								if ((_70820_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1e6c92150:;
									{
										_1e40a10cc_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1e40a1484_check_cross_cycle(&(*_self_), jule::Any(_70820_d),_70448_message)))) {
									_case_begin_1e6c921c7:;
									{
										_1e40a10cc_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								_match_end_1e6c9202e:;
							};
						}
						_iter_next_1e6c9165a:;
						++it;
						goto _iter_begin_1e6c9165a;
					}
					_iter_end_1e6c9165a:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e6c90978:;
			{
				jule::Ptr<_1e3318840_Struct> _71917_s = _70432_decl.operator jule::Ptr<_1e3318840_Struct>();;
				{
					auto &expr = _71917_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1e6c93c89:;
					if (it != expr.end()) {
						jule::Ptr<_1e3318840_Struct> &_72020_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72020_d)) {
									_case_begin_1e6c9477e:;
									{
										_1e40a10cc_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1e40a1484_check_cross_cycle(&(*_self_), jule::Any(_72020_d),_70448_message)))) {
									_case_begin_1e6c94806:;
									{
										_1e40a10cc_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								_match_end_1e6c9465d:;
							};
						}
						_iter_next_1e6c93c89:;
						++it;
						goto _iter_begin_1e6c93c89;
					}
					_iter_end_1e6c93c89:;
				};
			}
		}
		_match_end_1e6c90824:;
	};
	return true;
}



inline jule::Bool _1e40a183b_check_illegal_cycles(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _73840_ident, jule::Any _73867_decl) {
	jule::Bool _73880_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_73880_ok = true;
		return _73880_ok;
	};
	{
		auto &_match_expr{ _73867_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e6c942c8:;
			{
				if (((*_self_)._field_not_plain || _73867_decl.operator jule::Ptr<_1e3318840_Struct>().get()._field_cpp_linked)) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
			_case_begin_1e6c9441b:;
			{
				if (_73867_decl.operator jule::Ptr<_1e4090929_TypeAlias>().get()._field_cpp_linked) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		_match_end_1e6c94273:;
	};
	if ((_73867_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1e40a0054_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_73880_ok = false;
		return _73880_ok;
	};
	jule::Str _76117_message = jule::Str();;
	if ((!(_1e40a1484_check_cross_cycle(&(*_self_), jule::Any(_73867_decl),_76117_message)))) {
		jule::Str _76421_err_msg = _76117_message;;
		_76117_message=jule::Str();
		_1e40a10cc_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_73867_decl),_76117_message);
		_76421_err_msg=(_76421_err_msg + _76117_message);
		_1e40a0054_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_76421_err_msg)}));
		_73880_ok = false;
		return _73880_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e4090929_TypeAlias>>()) {
			_case_begin_1e6c9ac08:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_73867_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e6c9acc4:;
			{
				{
					auto &_match_expr{ _73867_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
						_case_begin_1e6c9b4ab:;
						{
							jule::Ptr<_1e3318840_Struct> _78025_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e3318840_Struct>();;
							_78025_s.get()._field_depends = jule::alloc_for_append(_78025_s.get()._field_depends,1);_78025_s.get()._field_depends.__push(_73867_decl.operator jule::Ptr<_1e3318840_Struct>());;
						}
					}
					_match_end_1e6c9b3bd:;
				};
			}
		}
		_match_end_1e6c9aba3:;
	};
	_73880_ok = true;
	return _73880_ok;
}



inline jule::Trait<_1e4091232_Kind> _1e40a1be3_from_type_alias(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _78835_decl, jule::Ptr<_1e4090929_TypeAlias>& _78862_ta) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _78862_ta.get()._field_public,_78862_ta.get()._field_token)))) {
		_1e40a0054_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	_78862_ta.get()._field_used=true;
	if ((_78835_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1e6ca0d95:;
			if (it != expr.end()) {
				jule::Ptr<_1e4090929_TypeAlias> _80520_bg = *it;
				{
					if (((_80520_bg == _78862_ta) || ((_78862_ta.get()._field_kind.get()._field_kind != nullptr) && _1e4091d26_equals(_78862_ta.get()._field_kind.get()._field_kind, _80520_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1e6ca0d95;
					};
				}
				_iter_next_1e6ca0d95:;
				++it;
				goto _iter_begin_1e6ca0d95;
			}
			_iter_end_1e6ca0d95:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1e6ca1747:;
			if (it != expr.end()) {
				jule::Ptr<_1e4090929_TypeAlias> _81620_bg = *it;
				{
					if ((_81620_bg == _78862_ta)) {
						_1e40a0054_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _78862_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1e6ca3628:;
						if (it != expr.end()) {
							jule::Ptr<_1e4090929_TypeAlias> _82124_dg = *it;
							{
								if ((_81620_bg == _82124_dg)) {
									_1e40a0054_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1e6ca3628:;
							++it;
							goto _iter_begin_1e6ca3628;
						}
						_iter_end_1e6ca3628:;
					};
				}
				_iter_next_1e6ca1747:;
				++it;
				goto _iter_begin_1e6ca1747;
			}
			_iter_end_1e6ca1747:;
		};
	};
	jule::Bool _83017_ok = _1e40a183b_check_illegal_cycles(&(*_self_), _78835_decl,jule::Any(_78862_ta));;
	if ((!(_83017_ok))) {
		return nullptr;
	};
	_83017_ok=_1e400a7ea_check_type_alias_decl_kind((*_self_)._field_s, _78862_ta,(*_self_)._field_lookup);
	if ((!(_83017_ok))) {
		return nullptr;
	};
	if ((_78862_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_78862_ta);;
	};
	jule::Ptr<_1e4091661_TypeKind> _84717_tk = jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_generic=_78862_ta.get()._field_generic, ._field_kind=_78862_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_1e40a0c14_push_reference_by_kind(&(*_self_), _84717_tk);
	if (_78862_ta.get()._field_cpp_linked) {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_ident;
	} else {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1e4091232_Kind>(_84717_tk, 5);
}



inline jule::Ptr<_1e34189c8_Enum> _1e40a209a_from_enum(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _86029_decl, jule::Ptr<_1e34189c8_Enum>& _86056_e) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _86056_e.get()._field_public,_86056_e.get()._field_token)))) {
		_1e40a0054_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_86029_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	return _86056_e;
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e40a2452_from_type_enum(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _87234_decl, jule::Ptr<_1e37eea6d_TypeEnum>& _87261_e) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _87261_e.get()._field_public,_87261_e.get()._field_token)))) {
		_1e40a0054_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87234_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87261_e;
}



inline jule::Ptr<_1e374ee30_Trait> _1e40a2809_from_trait(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _88430_decl, jule::Ptr<_1e374ee30_Trait>& _88457_t) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _88457_t.get()._field_public,_88457_t.get()._field_token)))) {
		_1e40a0054_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88430_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	_1e6c88168_push_reference(&(*_self_), _88457_t);
	return _88457_t;
}



inline jule::Bool _1e40a2bb1_check_struct_ins(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3352093_StructIns>& _89740_ins, jule::Ptr<_1e1c31ee6_Token>& _89758_error_token) {
	jule::Bool _89781_ok = jule::Bool();
	if (_89740_ins.get()._field_checked) {
		_89781_ok = true;
		return _89781_ok;
	};
	_89740_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _89740_ins.get()._field_decl))) {
		_89781_ok = true;
		return _89781_ok;
	};
	if ((!(_1e4014a02_precheck_struct_ins((*_self_)._field_s, _89740_ins)))) {
		_89781_ok = false;
		return _89781_ok;
	};
	if ((_89740_ins.get()._field_generics.len() > 0LL)) {
		_1e4015470_check_struct_ins_operators((*_self_)._field_s, _89740_ins);
		_1e4014c77_check_struct_ins((*_self_)._field_s, _89740_ins);
	};
	_89781_ok = true;
	return _89781_ok;
}



inline void _1e40a2e58_append_used_struct_reference(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3318840_Struct>& _91852_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e3318840_Struct>>()) {
			_case_begin_1e6cb47d2:;
			{
				jule::Ptr<_1e3318840_Struct> _92521_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e3318840_Struct>();;
				if ((!(_1e3317575_is_uses(_92521_ref_s.ptr(), _91852_s)))) {
					_92521_ref_s.get()._field_uses = jule::alloc_for_append(_92521_ref_s.get()._field_uses,1);_92521_ref_s.get()._field_uses.__push(_91852_s);;
				};
			}
		}
		_match_end_1e6cb44e6:;
	};
}



inline jule::Ptr<_1e3352093_StructIns> _1e40a3321_build_struct_instance(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _93245_decl, jule::Ptr<_1e3318840_Struct>& _93272_s) {
	jule::Ptr<_1e409db02_Referencer> _93417_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e4090929_TypeAlias>> _93617_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1e3ed06d2_ScopeChecker>>()) {
				_case_begin_1e6cb74d8:;
				{
					jule::Ptr<_1e3ed06d2_ScopeChecker> _94325_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e3ed06d2_ScopeChecker>();;
					jule::Ptr<_1e3ed06d2_ScopeChecker> _94425_hard = _1e3ed3a59_get_hard_root(_94325_sc);;
					if (((_94425_hard.get()._field_owner.get()._field_owner == nullptr) || (_94425_hard.get()._field_owner.get()._field_owner.get()._field_decl != _93272_s))) {
						goto _match_end_1e6cb7483;
					};
					jule::I64 _94821_n = (_94425_hard.get()._field_owner.get()._field_generics.len() + _94425_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_94425_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_94821_n);
				}
			}
			_match_end_1e6cb7483:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1e3352093_StructIns> _95817_ins = _1e330d714_instance(_93272_s);;
	_95817_ins.get()._field_generics=jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::alloc(0LL,_93245_decl.get()._field_generics.len());
	{
		auto &expr = _93245_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e6cbae7b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3335807_TypeDecl> _96021_g = *it;
			{
				jule::Ptr<_1e4091661_TypeKind> _96121_kind = _1e40a67a8_build(&(*_self_), _96021_g.get()._field_kind);;
				if ((_96121_kind == nullptr)) {
					return nullptr;
				};
				_95817_ins.get()._field_generics = jule::alloc_for_append(_95817_ins.get()._field_generics,1);_95817_ins.get()._field_generics.__push(_96121_kind);;
			}
			_iter_next_1e6cbae7b:;
			++it;
			goto _iter_begin_1e6cbae7b;
		}
		_iter_end_1e6cbae7b:;
	};
	(*_self_)._field_banned_generics=_93617_banned_generics;
	(*_self_)._field_referencer=_93417_referencer;
	return _95817_ins;
}



inline jule::Ptr<_1e3352093_StructIns> _1e40a36c8_from_struct(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _97535_decl, jule::Ptr<_1e3318840_Struct>& _97562_s) {
	if ((!(_1e4003a13_is_accessible_define((*_self_)._field_s.ptr(), _97562_s.get()._field_public,_97562_s.get()._field_token)))) {
		_1e40a0054_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_97535_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_97535_decl.get()._field_generics.len() > 0LL)) {
			_1e40a0054_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1e3352093_StructIns>(_1e3352093_StructIns{._field_decl=_97562_s, });
	};
	jule::Bool _99317_ok = ((*_self_)._field_not_plain || _1e40a183b_check_illegal_cycles(&(*_self_), _97535_decl,jule::Any(_97562_s)));;
	if ((!(_99317_ok))) {
		return nullptr;
	};
	_1e40a2e58_append_used_struct_reference(&(*_self_), _97562_s);
	jule::Ptr<_1e3352093_StructIns> _99917_ins = _1e40a3321_build_struct_instance(&(*_self_), _97535_decl,_97562_s);;
	if ((_99917_ins == nullptr)) {
		return nullptr;
	};
	_99317_ok=_1e40046d4_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_99917_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_99917_ins.get()._field_generics.len()),_97535_decl.get()._field_token);
	if ((!(_99317_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e3352093_StructIns> _100917_exist_instance = _1e331297c_append_instance(_97562_s.ptr(), _99917_ins);;
	if ((_100917_exist_instance != nullptr)) {
		_1e6c85198_push_reference(&(*_self_), _100917_exist_instance);
		return _100917_exist_instance;
	};
	if ((!(_1e40a2bb1_check_struct_ins(&(*_self_), _99917_ins,_97535_decl.get()._field_token)))) {
		return nullptr;
	};
	_1e6c85198_push_reference(&(*_self_), _99917_ins);
	return _99917_ins;
}



inline jule::Trait<_1e4091232_Kind> _1e40a39d6_get_def(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl>& _103031_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1e6cc54c4:;
		if (it != expr.end()) {
			jule::Ptr<_1e3342b00_GenericDecl> _103116_g = *it;
			{
				if ((_103116_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					return jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(_103116_g.get()._field_ident), 6);
				};
			}
			_iter_next_1e6cc54c4:;
			++it;
			goto _iter_begin_1e6cc54c4;
		}
		_iter_end_1e6cc54c4:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1e6cc5ddc:;
		if (it != expr.end()) {
			jule::Ptr<_1e4090929_TypeAlias> _103721_g = *it;
			{
				if ((_103721_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					jule::Ptr<_1e3352093_StructIns> _103925_st = _1e4094b81_strct(_103721_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_103925_st != nullptr)) {
						jule::Bool _104125_ok = _1e40a183b_check_illegal_cycles(&(*_self_), _103031_decl,jule::Any(_103925_st.get()._field_decl));;
						if ((!(_104125_ok))) {
							return nullptr;
						};
					};
					return _103721_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1e6cc5ddc:;
			++it;
			goto _iter_begin_1e6cc5ddc;
		}
		_iter_end_1e6cc5ddc:;
	};
	if ((!(_103031_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1e34189c8_Enum> _105121_e = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aba33_find_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105121_e != nullptr)) {
			return jule::Trait<_1e4091232_Kind>(_1e40a209a_from_enum(&(*_self_), _103031_decl,_105121_e), 3);
		};
		jule::Ptr<_1e37eea6d_TypeEnum> _105621_te = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40abd41_find_type_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105621_te != nullptr)) {
			return jule::Trait<_1e4091232_Kind>(_1e40a2452_from_type_enum(&(*_self_), _103031_decl,_105621_te), 4);
		};
		jule::Ptr<_1e374ee30_Trait> _106121_t = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40ab725_find_trait((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if (((_106121_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_106121_t=_1e40e5055_find_builtin_trait(_103031_decl.get()._field_ident);
		};
		if ((_106121_t != nullptr)) {
			return jule::Trait<_1e4091232_Kind>(_1e40a2809_from_trait(&(*_self_), _103031_decl,_106121_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1e40a0054_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3318840_Struct> _107317_s = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40ab060_find_struct((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if ((_107317_s != nullptr)) {
		return jule::Trait<_1e4091232_Kind>(_1e40a36c8_from_struct(&(*_self_), _103031_decl,_107317_s), 0);
	};
	jule::Ptr<_1e4090929_TypeAlias> _107817_ta = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aaba8_find_type_alias((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if (((_107817_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_107817_ta=_1e40baa97_find_builtin_type_alias(_103031_decl.get()._field_ident);
	};
	if ((_107817_ta != nullptr)) {
		return _1e40a1be3_from_type_alias(&(*_self_), _103031_decl,_107817_ta);
	};
	_1e40a0054_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_103031_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1e4091232_Kind> _1e40a3ce4_build_ident(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335dbd_IdentTypeDecl> _109034_decl) {
	{
		
		if (_1e40a9844_is_prim(_109034_decl.get()._field_ident)) {
			_case_begin_1e6cd17bb:;
			{
				return jule::Trait<_1e4091232_Kind>(_1e40a0719_build_prim(&(*_self_), _109034_decl), 6);
			}
		}
		else {
			_case_begin_1e6cd104b:;
			{
				return _1e40a39d6_get_def(&(*_self_), _109034_decl);
			}
		}
		_match_end_1e6cd0e6e:;
	};
}



inline jule::Trait<_1e4091232_Kind> _1e40a4102_build_sub_ident(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e333651c_SubIdentTypeDecl> _109938_decl) {
	jule::Trait<_1e4091232_Kind> _110017_ident = _1e40a3ce4_build_ident(&(*_self_), _109938_decl.get()._field_idents[0LL]);;
	if ((_110017_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _110017_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1e37eea6d_TypeEnum>>()) {
			_case_begin_1e6cd3317:;
			{
				goto _match_end_1e6cd323a;
			}
		}
		else {
			_case_begin_1e6cd3009:;
			{
				_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6cd323a:;
	};
	jule::Ptr<_1e37eea6d_TypeEnum> _111217_t = _110017_ident.operator jule::Ptr<_1e37eea6d_TypeEnum>();;
	jule::Slice<jule::Ptr<_1e3335dbd_IdentTypeDecl>> _111317_idents = _109938_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _111317_idents;
		auto it = expr.begin();
		_iter_begin_1e6cd4648:;
		if (it != expr.end()) {
			jule::I64 _111413_i = it - expr.begin();
			jule::Ptr<_1e3335dbd_IdentTypeDecl> _111416_id = *it;
			{
				jule::Ptr<_1e3584902_TypeEnumItem> _111521_item = _1e375076b_find_item(_111217_t.ptr(), _111416_id.get()._field_ident);;
				if ((_111521_item == nullptr)) {
					_1e40a0054_push_err(&(*_self_), _111416_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_111217_t.get()._field_ident),jule::Any(_111416_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_111317_idents.len() - _111413_i) == 1LL)) {
					_1e40a0c14_push_reference_by_kind(&(*_self_), _111521_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_1e4091232_Kind>(_111521_item.get()._field_kind.get()._field_kind, 5);
				};
				_111217_t=_1e40941d0_tenm(_111521_item.get()._field_kind.get()._field_kind.ptr());
				if ((_111217_t == nullptr)) {
					_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1e6cd4648:;
			++it;
			_111413_i++;
			goto _iter_begin_1e6cd4648;
		}
		_iter_end_1e6cd4648:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4099647_Sptr> _1e40a4410_build_sptr_from_type(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e4091661_TypeKind>& _113444_elem) {
	{
		
		if ((_113444_elem == nullptr)) {
			_case_begin_1e6cd510a:;
			{
				return nullptr;
			}
		}
		else if ((_1e4094b81_strct(_113444_elem.ptr()) != nullptr)) {
			_case_begin_1e6cd5182:;
			{
				jule::Ptr<_1e3352093_StructIns> _114017_s = _1e4094b81_strct(_113444_elem.ptr());;
				if (((_114017_s.get()._field_decl != nullptr) && _114017_s.get()._field_decl.get()._field_cpp_linked)) {
					_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1e4094444_arr(_113444_elem.ptr()) != nullptr) && _1e4094444_arr(_113444_elem.ptr()).get()._field_auto)) {
			_case_begin_1e6cd5209:;
			{
				_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6cd4ec8:;
	};
	return jule::new_ptr<_1e4099647_Sptr>(_1e4099647_Sptr{._field_elem=_113444_elem});
}



inline jule::Ptr<_1e4099647_Sptr> _1e40a471d_build_sptr(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3336bb0_SptrTypeDecl> _115433_decl) {
	jule::Bool _115513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_115513_not_plain;
	});;
	jule::Ptr<_1e4091661_TypeKind> _115917_elem = _1e40a6ab6_check_decl(&(*_self_), _115433_decl.get()._field_elem);;
	return _1e40a4410_build_sptr_from_type(&(*_self_), _115917_elem);
}



inline jule::Ptr<_1e409cbab_Ptr> _1e40a4a2b_build_ptr_from_type(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e4091661_TypeKind>& _116343_elem) {
	{
		
		if ((_116343_elem == nullptr)) {
			_case_begin_1e6cdd762:;
			{
				return nullptr;
			}
		}
		else if (((_1e4094444_arr(_116343_elem.ptr()) != nullptr) && _1e4094444_arr(_116343_elem.ptr()).get()._field_auto)) {
			_case_begin_1e6cdd7d9:;
			{
				_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1e409cbab_Ptr>();
			}
		}
		_match_end_1e6cdd641:;
	};
	return jule::new_ptr<_1e409cbab_Ptr>(_1e409cbab_Ptr{._field_elem=_116343_elem});
}



inline jule::Ptr<_1e409cbab_Ptr> _1e40a4d39_build_ptr(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3337683_PtrTypeDecl> _117832_decl) {
	jule::Bool _117913_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117913_not_plain;
	});;
	jule::Ptr<_1e4091661_TypeKind> _118317_elem = nullptr;;
	if ((!(_1e33379d5_is_unsafe(_117832_decl.ptr())))) {
		_118317_elem=_1e40a6ab6_check_decl(&(*_self_), _117832_decl.get()._field_elem);
		return _1e40a4a2b_build_ptr_from_type(&(*_self_), _118317_elem);
	};
	return jule::new_ptr<_1e409cbab_Ptr>(_1e409cbab_Ptr{._field_elem=_118317_elem});
}



inline jule::Ptr<_1e409a0a4_Slc> _1e40a5147_build_slc(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e33370ab_SlcTypeDecl> _119532_decl) {
	jule::Bool _119613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119613_not_plain;
	});;
	jule::Ptr<_1e4091661_TypeKind> _120017_elem = _1e40a6ab6_check_decl(&(*_self_), _119532_decl.get()._field_elem);;
	{
		
		if ((_120017_elem == nullptr)) {
			_case_begin_1e6ce3a31:;
			{
				return nullptr;
			}
		}
		else if (((_1e4094444_arr(_120017_elem.ptr()) != nullptr) && _1e4094444_arr(_120017_elem.ptr()).get()._field_auto)) {
			_case_begin_1e6ce3aa8:;
			{
				_1e40a0054_push_err(&(*_self_), _119532_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6ce3976:;
	};
	return jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=_120017_elem});
}



inline jule::Ptr<_1e409c24e_Arr> _1e40a5455_build_arr(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3337d15_ArrTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::I64 _122117_n = 0LL;;
	if ((!(_1e33381de_auto_sized(_121632_decl.ptr())))) {
		jule::Ptr<_1e40662e5_Data> _122421_size = _1e40831d0_eval_expr(_1e4008144_eval((*_self_)._field_s, (*_self_)._field_lookup), _121632_decl.get()._field_size);;
		if ((_122421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1e4066ba8_is_const(_122421_size.ptr())))) {
			_1e40a0054_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e409372e_prim(_122421_size.get()._field_kind.ptr()) == nullptr) || (!(_1e3ecc05d_is_int(_1e409372e_prim(_122421_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e40a0054_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122117_n=static_cast<jule::I64>(static_cast<jule::I64>(_1e33e2dae_as_i64(_122421_size.get()._field_constant.ptr())));
		if ((_122117_n < 0LL)) {
			_1e40a0054_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e3ebe76a_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_122117_n) > _1e3ec6b7e_max(jule::Str("int", 3))))) {
			_1e40a0054_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1e4091661_TypeKind> _124717_elem = _1e40a6ab6_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_124717_elem == nullptr)) {
			_case_begin_1e6cec573:;
			{
				return nullptr;
			}
		}
		else if (((_1e4094444_arr(_124717_elem.ptr()) != nullptr) && _1e4094444_arr(_124717_elem.ptr()).get()._field_auto)) {
			_case_begin_1e6cec5d9:;
			{
				_1e40a0054_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6cec2ed:;
	};
	return jule::new_ptr<_1e409c24e_Arr>(_1e409c24e_Arr{._field_auto=_1e33381de_auto_sized(_121632_decl.ptr()), ._field_n=_122117_n, ._field_elem=_124717_elem});
}



inline jule::Ptr<_1e409b65a_Map> _1e40a5763_build_map(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3338563_MapTypeDecl> _126532_decl) {
	jule::Bool _126613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126613_not_plain;
	});;
	jule::Ptr<_1e4091661_TypeKind> _127017_key = _1e40a6ab6_check_decl(&(*_self_), _126532_decl.get()._field_key);;
	if ((_127017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e4091661_TypeKind> _127517_val = _1e40a6ab6_check_decl(&(*_self_), _126532_decl.get()._field_val);;
	if ((_127517_val == nullptr)) {
		return nullptr;
	};
	if ((_1e4093e6b_enm(_127517_val.ptr()) != nullptr)) {
		_1e40a0054_push_err(&(*_self_), _126532_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1e409b65a_Map>(_1e409b65a_Map{._field_key=_127017_key, ._field_val=_127517_val});
}



inline jule::Ptr<_1e409aa99_Tuple> _1e40a5a71_build_tuple(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3337397_TupleTypeDecl> _128934_decl) {
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _129017_types = jule::Slice<jule::Ptr<_1e4091661_TypeKind>>::alloc(0LL,_128934_decl.get()._field_types.len());;
	{
		auto &expr = _128934_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1e6d02e08:;
		if (it != expr.end()) {
			jule::Ptr<_1e3335807_TypeDecl> _129121_t = *it;
			{
				jule::Ptr<_1e4091661_TypeKind> _129221_kind = _1e40a6ab6_check_decl(&(*_self_), _129121_t);;
				if ((_129221_kind == nullptr)) {
					return nullptr;
				};
				_129017_types = jule::alloc_for_append(_129017_types,1);_129017_types.__push(_129221_kind);;
			}
			_iter_next_1e6d02e08:;
			++it;
			goto _iter_begin_1e6d02e08;
		}
		_iter_end_1e6d02e08:;
	};
	return jule::new_ptr<_1e409aa99_Tuple>(_1e409aa99_Tuple{._field_types=_129017_types});
}



inline jule::Bool _1e40a5d7e_check_fn_types(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3404651_FnIns>& _130238_f) {
	jule::Bool _130251_ok = jule::Bool();
	{
		auto &expr = _130238_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e6d04b30:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> _130321_p = *it;
			{
				_130321_p.get()._field_kind=_1e40a67a8_build(&(*_self_), _130321_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_130251_ok=(_130321_p.get()._field_kind != nullptr);
				if ((!(_130251_ok))) {
					_130251_ok = false;
					return _130251_ok;
				};
			}
			_iter_next_1e6d04b30:;
			++it;
			goto _iter_begin_1e6d04b30;
		}
		_iter_end_1e6d04b30:;
	};
	if ((!(_1e3401e12_is_void(_130238_f.get()._field_decl.ptr())))) {
		_130238_f.get()._field_result=_1e40a67a8_build(&(*_self_), _130238_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_130251_ok = (_130238_f.get()._field_result != nullptr);
		return _130251_ok;
	};
	_130251_ok = true;
	return _130251_ok;
}



inline jule::Ptr<_1e3404651_FnIns> _1e40a618c_build_fn(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3347330_FnDecl> _131931_decl) {
	if ((_131931_decl.get()._field_generics.len() > 0LL)) {
		_1e40a0054_push_err(&(*_self_), _131931_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e34019a0_Fn> _132517_f = _1e340a17e_build_fn(_131931_decl);;
	jule::Ptr<_1e3404651_FnIns> _132617_ins = _1e3402d8b_instance_force(_132517_f);;
	_132617_ins.get()._field_anon=true;
	jule::Bool _132913_ok = _1e40a5d7e_check_fn_types(&(*_self_), _132617_ins);;
	if ((!(_132913_ok))) {
		return nullptr;
	};
	return _132617_ins;
}



inline jule::Trait<_1e4091232_Kind> _1e40a649a_build_by_namespace(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e33368c4_NamespaceTypeDecl> _133741_decl) {
	jule::Str _133813_path = _1e40a8e3c_build_link_path_by_tokens(_133741_decl.get()._field_idents);;
	jule::Ptr<_1e3ee752e_ImportInfo> _133917_imp = _1e40abe84_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e40aa449_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e3ee752e_ImportInfo>)>([=](jule::Ptr<_1e3ee752e_ImportInfo> _133953_imp) mutable -> jule::Bool {
		if (((_133741_decl.get()._field_idents.len() == 1LL) && (_133953_imp.get()._field_alias == _133813_path))) {
			return true;
		};
		return ((_133953_imp.get()._field_link_path == _133813_path) && _1e3eea18b_is_accessible_via_selection(_133953_imp.ptr()));
	}));;
	if (((_133917_imp == nullptr) || (!(_1e3ee9ae7_is_lookupable(_133917_imp.ptr(), jule::Str("self", 4)))))) {
		_1e40a0054_push_err(&(*_self_), _133741_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_133813_path)}));
		return nullptr;
	};
	_1e40a040b_disallow_builtin(&(*_self_));
	jule::Trait<_1e40abe84_Lookup> _135217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e40abe84_Lookup>(_133917_imp, 1);
	jule::Ptr<_1e4091661_TypeKind> _135417_kind = _1e40a6ab6_check_decl(&(*_self_), _133741_decl.get()._field_kind);;
	(*_self_)._field_lookup=_135217_lookup;
	_1e40a0230_allow_builtin(&(*_self_));
	return jule::Trait<_1e4091232_Kind>(_135417_kind, 5);
}



inline jule::Ptr<_1e4091661_TypeKind> _1e40a67a8_build(_1e409e84a_TypeChecker* _self_, jule::Any& _136129_decl_kind) {
	jule::Trait<_1e4091232_Kind> _136217_kind = nullptr;;
	{
		auto &_match_expr{ _136129_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3335dbd_IdentTypeDecl>>()) {
			_case_begin_1e6d160e7:;
			{
				jule::Trait<_1e4091232_Kind> _136521_t = _1e40a3ce4_build_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3335dbd_IdentTypeDecl>());;
				if ((_136521_t != nullptr)) {
					_136217_kind=_136521_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333651c_SubIdentTypeDecl>>()) {
			_case_begin_1e6d1615d:;
			{
				jule::Trait<_1e4091232_Kind> _137021_t = _1e40a4102_build_sub_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e333651c_SubIdentTypeDecl>());;
				if ((_137021_t != nullptr)) {
					_136217_kind=_137021_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3336bb0_SptrTypeDecl>>()) {
			_case_begin_1e6d16845:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e4099647_Sptr> _137621_t = _1e40a471d_build_sptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3336bb0_SptrTypeDecl>());;
				if ((_137621_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_137621_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337683_PtrTypeDecl>>()) {
			_case_begin_1e6d168ab:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e409cbab_Ptr> _138221_t = _1e40a4d39_build_ptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3337683_PtrTypeDecl>());;
				if ((_138221_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_138221_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33370ab_SlcTypeDecl>>()) {
			_case_begin_1e6d16922:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e409a0a4_Slc> _138821_t = _1e40a5147_build_slc(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e33370ab_SlcTypeDecl>());;
				if ((_138821_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_138821_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337d15_ArrTypeDecl>>()) {
			_case_begin_1e6d16988:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e409c24e_Arr> _139421_t = _1e40a5455_build_arr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3337d15_ArrTypeDecl>());;
				if ((_139421_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_139421_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3338563_MapTypeDecl>>()) {
			_case_begin_1e6d169ee:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e409b65a_Map> _140021_t = _1e40a5763_build_map(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3338563_MapTypeDecl>());;
				if ((_140021_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_140021_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337397_TupleTypeDecl>>()) {
			_case_begin_1e6d16a65:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e409aa99_Tuple> _140621_t = _1e40a5a71_build_tuple(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3337397_TupleTypeDecl>());;
				if ((_140621_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_140621_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3347330_FnDecl>>()) {
			_case_begin_1e6d16acb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e3404651_FnIns> _141221_t = _1e40a618c_build_fn(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e3347330_FnDecl>());;
				if ((_141221_t != nullptr)) {
					_136217_kind=jule::Trait<_1e4091232_Kind>(_141221_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33368c4_NamespaceTypeDecl>>()) {
			_case_begin_1e6d16b42:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1e4091232_Kind> _141821_t = _1e40a649a_build_by_namespace(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e33368c4_NamespaceTypeDecl>());;
				if ((_141821_t != nullptr)) {
					_136217_kind=_141821_t;
				};
			}
		}
		else {
			_case_begin_1e6d15d83:;
			{
				_1e40a0054_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6d15d2d:;
	};
	if ((_136217_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _136217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e4091661_TypeKind>>()) {
			_case_begin_1e6d237ca:;
			{
				return _136217_kind.operator jule::Ptr<_1e4091661_TypeKind>();
			}
		}
		else {
			_case_begin_1e6d16d95:;
			{
				return jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=_136217_kind});
			}
		}
		_match_end_1e6d16d40:;
	};
}



inline jule::Ptr<_1e4091661_TypeKind> _1e40a6ab6_check_decl(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e3335807_TypeDecl>& _143934_decl) {
	jule::Ptr<_1e1c31ee6_Token> _144117_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_143934_decl.get()._field_token;
	jule::Ptr<_1e4091661_TypeKind> _144417_kind = _1e40a67a8_build(&(*_self_), _143934_decl.get()._field_kind);;
	(*_self_)._field_error_token=_144117_error_token;
	return _144417_kind;
}



inline void _1e40a6d3b_check(_1e409e84a_TypeChecker* _self_, jule::Ptr<_1e4095775_TypeSymbol>& _145029_t) {
	if ((_145029_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1e4091661_TypeKind> _145417_kind = _1e40a6ab6_check_decl(&(*_self_), _145029_t.get()._field_decl);;
	if ((_145417_kind == nullptr)) {
		_1e4095d4c_remove_kind(_145029_t.ptr());
		return;;
	};
	_145029_t.get()._field_kind=_145417_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1e409e84a_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e40a749b___ident_type_decl(jule::Str& _146634_ident, jule::Ptr<_1e3335dbd_IdentTypeDecl> _146646_t) {
	if ((_146646_t.get()._field_ident == _146634_ident)) {
		return true;
	};
	{
		auto &expr = _146646_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e6d27427:;
		if (it != expr.end()) {
			jule::Ptr<_1e3335807_TypeDecl> &_147016_g = *it;
			{
				if (static__1e40a77dc_exist(_146634_ident,_147016_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_1e6d27427:;
			++it;
			goto _iter_begin_1e6d27427;
		}
		_iter_end_1e6d27427:;
	};
	return false;
}



inline jule::Bool static__1e40a77dc_exist(jule::Str& _147822_ident, jule::Any& _147835_k) {
	{
		auto &_match_expr{ _147835_k };
		
		if (_match_expr.type_is<jule::Ptr<_1e3335dbd_IdentTypeDecl>>()) {
			_case_begin_1e6d28527:;
			{
				return static__1e40a749b___ident_type_decl(_147822_ident,_147835_k.operator jule::Ptr<_1e3335dbd_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333651c_SubIdentTypeDecl>>()) {
			_case_begin_1e6d2858d:;
			{
				jule::Ptr<_1e333651c_SubIdentTypeDecl> _148317_sit = _147835_k.operator jule::Ptr<_1e333651c_SubIdentTypeDecl>();;
				{
					auto &expr = _148317_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1e6d29d42:;
					if (it != expr.end()) {
						jule::Ptr<_1e3335dbd_IdentTypeDecl> &_148420_id = *it;
						{
							if (static__1e40a749b___ident_type_decl(_147822_ident,_148420_id)) {
								return true;
							};
						}
						_iter_next_1e6d29d42:;
						++it;
						goto _iter_begin_1e6d29d42;
					}
					_iter_end_1e6d29d42:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3336bb0_SptrTypeDecl>>()) {
			_case_begin_1e6d28758:;
			{
				jule::Ptr<_1e3336bb0_SptrTypeDecl> _149117_sptr = _147835_k.operator jule::Ptr<_1e3336bb0_SptrTypeDecl>();;
				return static__1e40a77dc_exist(_147822_ident,_149117_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337683_PtrTypeDecl>>()) {
			_case_begin_1e6d287be:;
			{
				jule::Ptr<_1e3337683_PtrTypeDecl> _149417_ptr = _147835_k.operator jule::Ptr<_1e3337683_PtrTypeDecl>();;
				return static__1e40a77dc_exist(_147822_ident,_149417_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33370ab_SlcTypeDecl>>()) {
			_case_begin_1e6d28835:;
			{
				jule::Ptr<_1e33370ab_SlcTypeDecl> _149717_slc = _147835_k.operator jule::Ptr<_1e33370ab_SlcTypeDecl>();;
				return static__1e40a77dc_exist(_147822_ident,_149717_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337d15_ArrTypeDecl>>()) {
			_case_begin_1e6d2889b:;
			{
				jule::Ptr<_1e3337d15_ArrTypeDecl> _150017_arr = _147835_k.operator jule::Ptr<_1e3337d15_ArrTypeDecl>();;
				return static__1e40a77dc_exist(_147822_ident,_150017_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3338563_MapTypeDecl>>()) {
			_case_begin_1e6d28912:;
			{
				jule::Ptr<_1e3338563_MapTypeDecl> _150317_map = _147835_k.operator jule::Ptr<_1e3338563_MapTypeDecl>();;
				return (static__1e40a77dc_exist(_147822_ident,_150317_map.get()._field_key.get()._field_kind) || static__1e40a77dc_exist(_147822_ident,_150317_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3347330_FnDecl>>()) {
			_case_begin_1e6d28989:;
			{
				jule::Ptr<_1e3347330_FnDecl> _150717_f = _147835_k.operator jule::Ptr<_1e3347330_FnDecl>();;
				{
					auto &expr = _150717_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1e6d301dd:;
					if (it != expr.end()) {
						jule::Ptr<_1e3346010_ParamDecl> &_150820_p = *it;
						{
							if (_1e3346373_is_self(_150820_p.ptr())) {
								goto _iter_next_1e6d301dd;
							};
							if (static__1e40a77dc_exist(_147822_ident,_150820_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1e6d301dd:;
						++it;
						goto _iter_begin_1e6d301dd;
					}
					_iter_end_1e6d301dd:;
				};
				if ((_150717_f.get()._field_result != nullptr)) {
					return static__1e40a77dc_exist(_147822_ident,_150717_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3337397_TupleTypeDecl>>()) {
			_case_begin_1e6d28a11:;
			{
				jule::Ptr<_1e3337397_TupleTypeDecl> _152117_tup = _147835_k.operator jule::Ptr<_1e3337397_TupleTypeDecl>();;
				{
					auto &expr = _152117_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1e6d325b9:;
					if (it != expr.end()) {
						jule::Ptr<_1e3335807_TypeDecl> &_152220_t = *it;
						{
							if (static__1e40a77dc_exist(_147822_ident,_152220_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1e6d325b9:;
						++it;
						goto _iter_begin_1e6d325b9;
					}
					_iter_end_1e6d325b9:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33368c4_NamespaceTypeDecl>>()) {
			_case_begin_1e6d28a88:;
			{
				jule::Ptr<_1e33368c4_NamespaceTypeDecl> _152917_ns = _147835_k.operator jule::Ptr<_1e33368c4_NamespaceTypeDecl>();;
				return static__1e40a77dc_exist(_147822_ident,_152917_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_1e6d278ab:;
			{
				return false;
			}
		}
		_match_end_1e6d27856:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e40a705b_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e479d235_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e47ee918_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e48008c5_stop(_1e4800243_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1e4800b39_stopped(_1e4800243_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1e4800d9d_finished(_1e4800243_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1e4801112_is_last_st(_1e4800243_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1e4801431_push_err(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e1c31ee6_Token> _19227_token, jule::Str _19242_fmt) {
	_1e481bb22_push_err((*_self_)._field_p.ptr(), _19227_token,_19242_fmt,jule::Slice<jule::Any>());
}



inline void _1e4801750_push_suggestion(_1e4800243_ScopeParser* _self_, jule::Str _19734_fmt, jule::Slice<jule::Any> _19747_args) {
	_1e481be41_push_suggestion((*_self_)._field_p.ptr(), _19734_fmt,jule::Any(_19747_args));
}



inline void _1e48019c5_insert_as_next(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _20138_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1e47ee918_stmt>(_1e47ee918_stmt{._field_tokens=_20138_tokens, });
}



inline jule::Ptr<_1e47ee918_stmt> _1e4801c39_next(_1e4800243_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1e3345839_ScopeTree> _1e48020e1_build_scope(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _21135_tokens, jule::Ptr<_1e1c31ee6_Token> _21157_end) {
	jule::Ptr<_1e3345839_ScopeTree> _21217_s = _1e47ed7b3_new_scope();;
	_21217_s.get()._field_parent=(*_self_)._field_s;
	_21217_s.get()._field_end=_21157_end;
	_1e4800243_ScopeParser _21517_ssp = _1e4800243_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1e480ac65_build(&_21517_ssp, _21135_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1e334830e_VarDecl> _1e48023ee_build_var_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _22236_tokens) {
	jule::Ptr<_1e334830e_VarDecl> _22317_v = _1e481e619_build_var((*_self_)._field_p, _22236_tokens);;
	_22317_v.get()._field_scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1e33486b6_RetSt> _1e480270c_build_ret_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _22835_tokens) {
	jule::Ptr<_1e33486b6_RetSt> _22917_st = jule::new_ptr<_1e33486b6_RetSt>(_1e33486b6_RetSt{._field_token=_22835_tokens[0LL], });;
	if ((_22835_tokens.len() > 1LL)) {
		_22835_tokens=_22835_tokens.slice(1LL);
		_22917_st.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _22835_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1e3348d26_Iter> _1e4802a1a_build_while_next_iter(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e47ee918_stmt>& _23945_s) {
	jule::Ptr<_1e3348d26_Iter> _24017_it = jule::new_ptr<_1e3348d26_Iter>(_1e3348d26_Iter{._field_token=_23945_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _24317_tokens = _23945_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e33495eb_WhileKind> _24417_kind = jule::new_ptr<_1e33495eb_WhileKind>(_1e33495eb_WhileKind{});;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _24317_tokens);
	};
	if (_1e4801112_is_last_st(&(*_self_))) {
		_1e4801431_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1e4801c39_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _25617_st_tokens = _1e480be64_get_block_expr(_24317_tokens);;
	if ((_25617_st_tokens.len() > 0LL)) {
		jule::Ptr<_1e47ee918_stmt> _25821_stmt = jule::new_ptr<_1e47ee918_stmt>(_1e47ee918_stmt{._field_tokens=_25617_st_tokens, ._field_terminated=_23945_s.get()._field_terminated});;
		_24417_kind.get()._field_next_token=_25617_st_tokens[0LL];
		_24417_kind.get()._field_next=_1e480a946_build_st(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_st_tokens.len();;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _26717_block_tokens = _1e4819757_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_block_tokens == nullptr)) {
		_1e48008c5_stop(&(*_self_));
		_1e4801431_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("body is not exist", 17));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_scope=_1e48020e1_build_scope(&(*_self_), _26717_block_tokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1e33495eb_WhileKind> _1e4802d28_build_while_iter_kind(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _28445_tokens) {
	return jule::new_ptr<_1e33495eb_WhileKind>(_1e33495eb_WhileKind{._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _28445_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4803158_get_range_kind_keys_tokens(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _29050_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _29118_vars;;
	jule::Slice<_1e1905060_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1e4819e61_parts(_29050_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1e334830e_VarDecl> _1e4803477_build_range_kind_key(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _29644_tokens) {
	if ((_29644_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e334830e_VarDecl> _30017_key = jule::new_ptr<_1e334830e_VarDecl>(_1e334830e_VarDecl{._field_token=_29644_tokens[0LL], });;
	if ((_30017_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_mutable=true;
		if ((_29644_tokens.len() == 1LL)) {
			_1e4801431_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_token=_29644_tokens[1LL];
	} else if ((_29644_tokens.len() > 1LL)) {
		_1e4801431_push_err(&(*_self_), _29644_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e4801431_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_ident=_30017_key.get()._field_token.get()._field_kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _1e4803785_build_range_kind_keys(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>& _32145_parts) {
	jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32145_parts;
		auto it = expr.begin();
		_iter_begin_1e6e9ec53:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1e4803477_build_range_kind_key(&(*_self_), _32321_tokens));;
			}
			_iter_next_1e6e9ec53:;
			++it;
			goto _iter_begin_1e6e9ec53;
		}
		_iter_end_1e6e9ec53:;
	};
	return _32217_keys;
}



inline void _1e4803ac6_setup_range_kind_keys_plain(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e3349e8c_RangeKind>& _32951_rng, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _32973_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _33017_key_tokens = _1e4803158_get_range_kind_keys_tokens(&(*_self_), _32973_tokens);;
	if ((_33017_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_key_tokens.len() > 2LL)) {
		_1e4801431_push_err(&(*_self_), _32951_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _33717_keys = _1e4803785_build_range_kind_keys(&(*_self_), _33017_key_tokens);;
	_32951_rng.get()._field_key_a=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32951_rng.get()._field_key_b=_33717_keys[1LL];
	};
}



inline void _1e4803e28_setup_range_kind_keys_explicit(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e3349e8c_RangeKind>& _34454_rng, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _34476_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _34617_rang = _1e4819757_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34476_tokens);;
	if ((_34517_i < _34476_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _34454_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1e4803ac6_setup_range_kind_keys_plain(&(*_self_), _34454_rng,_34617_rang);
}



inline void _1e4804258_setup_range_kind_keys(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e3349e8c_RangeKind>& _35345_rng, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _35367_tokens) {
	if ((_35367_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35367_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1e4801431_push_err(&(*_self_), _35367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1e4803e28_setup_range_kind_keys_explicit(&(*_self_), _35345_rng,_35367_tokens);
		return;;
	};
	_1e4803ac6_setup_range_kind_keys_plain(&(*_self_), _35345_rng,_35367_tokens);
}



inline jule::Ptr<_1e3349e8c_RangeKind> _1e48046a9_build_range_iter_kind(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _36545_var_tokens, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _36614_expr_tokens, jule::Ptr<_1e1c31ee6_Token>& _36642_in_token) {
	jule::Ptr<_1e3349e8c_RangeKind> _36717_rng = jule::new_ptr<_1e3349e8c_RangeKind>(_1e3349e8c_RangeKind{._field_in_token=_36642_in_token, });;
	if ((_36614_expr_tokens.len() == 0LL)) {
		_1e4801431_push_err(&(*_self_), _36717_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _36614_expr_tokens);
	if ((_36545_var_tokens.len() > 0LL)) {
		_1e4804258_setup_range_kind_keys(&(*_self_), _36717_rng,_36545_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1e4804a61_build_common_iter_kind(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _38146_tokens, jule::Ptr<_1e1c31ee6_Token>& _38165_err_tok) {
	jule::I64 _38217_brace_n = 0LL;;
	{
		auto &expr = _38146_tokens;
		auto it = expr.begin();
		_iter_begin_1e6eaa8b8:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e6eab875:;
							{
								(_38217_brace_n)++;
								goto _iter_next_1e6eaa8b8;
							}
						}
						else {
							_case_begin_1e6eabb50:;
							{
								(_38217_brace_n)--;
							}
						}
						_match_end_1e6eab941:;
					};
				};
				if ((_38217_brace_n != 0LL)) {
					goto _iter_next_1e6eaa8b8;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1e6eab567:;
						{
							jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _40025_decl_tokens = _38146_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _40125_expr_tokens = _38146_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1e48046a9_build_range_iter_kind(&(*_self_), _40025_decl_tokens,_40125_expr_tokens,_38321_tok));
						}
					}
					_match_end_1e6eac117:;
				};
			}
			_iter_next_1e6eaa8b8:;
			++it;
			_38314_i++;
			goto _iter_begin_1e6eaa8b8;
		}
		_iter_end_1e6eaa8b8:;
	};
	return static_cast<jule::Any>(_1e4802d28_build_while_iter_kind(&(*_self_), _38146_tokens));
}



inline jule::Ptr<_1e3348d26_Iter> _1e4804d6e_build_common_iter(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _40840_tokens) {
	jule::Ptr<_1e3348d26_Iter> _40917_it = jule::new_ptr<_1e3348d26_Iter>(_1e3348d26_Iter{._field_token=_40840_tokens[0LL], });;
	_40840_tokens=_40840_tokens.slice(1LL);
	if ((_40840_tokens.len() == 0LL)) {
		_1e48008c5_stop(&(*_self_));
		_1e4801431_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _41917_expr_tokens = _1e480be64_get_block_expr(_40840_tokens);;
	if ((_41917_expr_tokens.len() > 0LL)) {
		_40917_it.get()._field_kind=_1e4804a61_build_common_iter_kind(&(*_self_), _41917_expr_tokens,_40917_it.get()._field_token);
	};
	jule::I64 _42317_i = _41917_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _42417_scope_tokens = _1e4819757_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40840_tokens);;
	if ((_42417_scope_tokens == nullptr)) {
		_1e48008c5_stop(&(*_self_));
		_1e4801431_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40840_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _40840_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_scope=_1e48020e1_build_scope(&(*_self_), _42417_scope_tokens,_40840_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1e3348d26_Iter> _1e480517c_build_iter_st(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e47ee918_stmt>& _43837_st) {
	if (_43837_st.get()._field_terminated) {
		return _1e4802a1a_build_while_next_iter(&(*_self_), _43837_st);
	};
	return _1e4804d6e_build_common_iter(&(*_self_), _43837_st.get()._field_tokens);
}



inline jule::Ptr<_1e334a344_BreakSt> _1e480548a_build_break_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _44538_tokens) {
	jule::Ptr<_1e334a344_BreakSt> _44617_brk = jule::new_ptr<_1e334a344_BreakSt>(_1e334a344_BreakSt{._field_token=_44538_tokens[0LL], });;
	if ((_44538_tokens.len() > 1LL)) {
		if ((_44538_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1e4801431_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e4801750_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_label=_44538_tokens[1LL];
			if ((_44538_tokens.len() > 2LL)) {
				_1e4801431_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1e334a6eb_ContSt> _1e4805798_build_cont_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _46337_tokens) {
	jule::Ptr<_1e334a6eb_ContSt> _46417_cont = jule::new_ptr<_1e334a6eb_ContSt>(_1e334a6eb_ContSt{._field_token=_46337_tokens[0LL], });;
	if ((_46337_tokens.len() > 1LL)) {
		if ((_46337_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1e4801431_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e4801750_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_label=_46337_tokens[1LL];
			if ((_46337_tokens.len() > 2LL)) {
				_1e4801431_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1e334ab6e_If> _1e4805aa6_build_if(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _48132_tokens) {
	jule::Ptr<_1e334ab6e_If> _48217_model = jule::new_ptr<_1e334ab6e_If>(_1e334ab6e_If{._field_token=_48132_tokens[0LL], });;
	_48132_tokens=_48132_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _48617_expr_tokens = _1e480be64_get_block_expr(_48132_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_expr_tokens.len() == 0LL)) {
		_1e4801431_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _49317_scope_tokens = _1e4819757_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48132_tokens);;
	if ((_49317_scope_tokens == nullptr)) {
		_1e48008c5_stop(&(*_self_));
		_1e4801431_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("body is not exist", 17));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e1c31ee6_Token> _50017_end = _48132_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48132_tokens.len())) {
		if ((_48132_tokens[_48717_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_48132_tokens=_48132_tokens.slice(_48717_i);
		} else {
			_1e4801431_push_err(&(*_self_), _48132_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48132_tokens=nullptr;
		};
	};
	_48217_model.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _48617_expr_tokens);
	_48217_model.get()._field_scope=_1e48020e1_build_scope(&(*_self_), _49317_scope_tokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1e334b026_Else> _1e4805db4_build_else(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _51434_tokens) {
	jule::Ptr<_1e334b026_Else> _51517_els = jule::new_ptr<_1e334b026_Else>(_1e334b026_Else{._field_token=_51434_tokens[0LL], });;
	_51434_tokens=_51434_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _52017_scope_tokens = _1e4819757_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51434_tokens);;
	if ((_52017_scope_tokens == nullptr)) {
		if ((_51917_i < _51434_tokens.len())) {
			_1e4801431_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1e48008c5_stop(&(*_self_));
			_1e4801431_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("body is not exist", 17));
			_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51434_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _51434_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_scope=_1e48020e1_build_scope(&(*_self_), _52017_scope_tokens,_51434_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1e334b499_Conditional> _1e48061c2_build_if_else_chain(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _53842_tokens) {
	jule::Ptr<_1e334b499_Conditional> _53917_chain = jule::new_ptr<_1e334b499_Conditional>(_1e334b499_Conditional{._field_head=_1e4805aa6_build_if(&(*_self_), _53842_tokens), });;
	if ((_53917_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53842_tokens.len() != 0LL)) {
		{
			if ((_53842_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1e6ec80bc;
			};
			if (((_53842_tokens.len() > 1LL) && (_53842_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53842_tokens=_53842_tokens.slice(1LL);
				jule::Ptr<_1e334ab6e_If> _55125_elif = _1e4805aa6_build_if(&(*_self_), _53842_tokens);;
				_53917_chain.get()._field_tail = jule::alloc_for_append(_53917_chain.get()._field_tail,1);_53917_chain.get()._field_tail.__push(_55125_elif);;
				goto _iter_next_1e6ec80bc;
			};
			_53917_chain.get()._field_default=_1e4805db4_build_else(&(*_self_), _53842_tokens);
			goto _iter_end_1e6ec80bc;
		}
	_iter_next_1e6ec80bc:;
	}
	_iter_end_1e6ec80bc:;;
	return _53917_chain;
}



inline jule::Ptr<_1e333b91d_CoExpr> _1e48064d0_build_co_call_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _56139_tokens) {
	jule::Ptr<_1e333b91d_CoExpr> _56217_c = jule::new_ptr<_1e333b91d_CoExpr>(_1e333b91d_CoExpr{._field_token=_56139_tokens[0LL], });;
	_56139_tokens=_56139_tokens.slice(1LL);
	_56217_c.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _56139_tokens);
	return _56217_c;
}



inline jule::Ptr<_1e334335e_GotoSt> _1e48067dd_build_goto_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _57037_tokens) {
	jule::Ptr<_1e334335e_GotoSt> _57117_gt = jule::new_ptr<_1e334335e_GotoSt>(_1e334335e_GotoSt{._field_token=_57037_tokens[0LL], });;
	if ((_57037_tokens.len() == 1LL)) {
		_1e4801431_push_err(&(*_self_), _57117_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57037_tokens.len() > 2LL)) {
		_1e4801431_push_err(&(*_self_), _57037_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e1c31ee6_Token> _58017_ident_token = _57037_tokens[1LL];;
	if ((_58017_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e4801431_push_err(&(*_self_), _58017_ident_token,jule::Str("invalid syntax", 14));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_label=_58017_ident_token;
	return _57117_gt;
}



inline jule::Ptr<_1e334364a_FallSt> _1e4806aeb_build_fall_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _59037_tokens) {
	jule::Ptr<_1e334364a_FallSt> _59117_fll = jule::new_ptr<_1e334364a_FallSt>(_1e334364a_FallSt{._field_token=_59037_tokens[0LL]});;
	if ((_59037_tokens.len() > 1LL)) {
		_1e4801431_push_err(&(*_self_), _59037_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e4806e09_build_type_alias_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _60043_tokens) {
	jule::Ptr<_1e334bb70_TypeAliasDecl> _60117_tad = _1e481d849_build_type_alias_decl((*_self_)._field_p, _60043_tokens);;
	_60117_tad.get()._field_scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1e480736b_push_case_expr(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _60637_tokens, jule::Ptr<_1e1c31ee6_Token> _60659_token, jule::Bool _6079_type_match, jule::Slice<jule::Ptr<_1e3339d28_Expr>>& _60732_exprs) {
	if ((_60637_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_type_match) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1e3335807_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1e481d53b_build_type((*_self_)._field_p, _60637_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(jule::new_ptr<_1e3339d28_Expr>(_1e3339d28_Expr{._field_token=_60637_tokens[0LL], ._field_end=_60637_tokens[(_60637_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60637_tokens.len())) {
				_1e4801431_push_err(&(*_self_), _60637_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(_1e481c24e_build_expr((*_self_)._field_p, _60637_tokens));;
}



inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e4807723_build_case_exprs(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _63040_tokens, jule::Bool _63058_type_match) {
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_brace_n = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63040_tokens;
		auto it = expr.begin();
		_iter_begin_1e6ed86b5:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1e6ed971b:;
							{
								(_63317_brace_n)++;
							}
						}
						else {
							_case_begin_1e6ed99e6:;
							{
								(_63317_brace_n)--;
							}
						}
						_match_end_1e6ed97d7:;
					};
					goto _iter_next_1e6ed86b5;
				} else if ((_63317_brace_n != 0LL)) {
					goto _iter_next_1e6ed86b5;
				};
				{
					
					if (((_63521_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1e6eda6d9:;
						{
							jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _65121_expr_tokens = _63040_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_expr_tokens.len() == 0LL)) {
								_1e4801431_push_err(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1e480736b_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1e6eda750:;
						{
							_1e480736b_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							_63040_tokens=_63040_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1e6eda277:;
				};
			}
			_iter_next_1e6ed86b5:;
			++it;
			_63514_i++;
			goto _iter_begin_1e6ed86b5;
		}
		_iter_end_1e6ed86b5:;
	};
	_1e4801431_push_err(&(*_self_), _63040_tokens[0LL],jule::Str("invalid syntax", 14));
	_63040_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e3345839_ScopeTree> _1e4807a31_build_case_scope(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _66940_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1e47ee61b_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1e6ede2ae;
			};
			jule::Ptr<_1e1c31ee6_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1e6ede2ae;
			};
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1e3345839_ScopeTree> _68321_scope = _1e48020e1_build_scope(&(*_self_), _68221_scope_tokens,_66940_tokens[_67017_n]);;
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1e6ede2ae:;
	}
	_iter_end_1e6ede2ae:;;
	jule::Ptr<_1e1c31ee6_Token> _68717_end = jule::Ptr<_1e1c31ee6_Token>();;
	if ((_66940_tokens.len() > 0LL)) {
		_68717_end=_66940_tokens[(_66940_tokens.len() - 1LL)];
	};
	jule::Ptr<_1e3345839_ScopeTree> _69117_scope = _1e48020e1_build_scope(&(*_self_), _66940_tokens,_68717_end);;
	_66940_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1e334c0e3_Case>,jule::Bool> _1e4807dd8_build_case(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _69634_tokens, jule::Bool _69652_type_match) {
	jule::Ptr<_1e334c0e3_Case> _69717_c = jule::new_ptr<_1e334c0e3_Case>(_1e334c0e3_Case{._field_token=_69634_tokens[0LL], });;
	_69634_tokens=_69634_tokens.slice(1LL);
	_69717_c.get()._field_exprs=_1e4807723_build_case_exprs(&(*_self_), _69634_tokens,_69652_type_match);
	_69717_c.get()._field_scope=_1e4807a31_build_case_scope(&(*_self_), _69634_tokens);
	jule::Bool _70313_is_default = (_69717_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e334c0e3_Case>>,jule::Ptr<_1e334b026_Else>> _1e4808290_build_cases(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _70734_tokens, jule::Bool _70752_type_match) {
	jule::Slice<jule::Ptr<_1e334c0e3_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1e334b026_Else> _70917_def = nullptr;;
	jule::Bool _71017_def_not_last = false;;
	while ((_70734_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1e1c31ee6_Token> _71221_tok = _70734_tokens[0LL];;
			if (((_71221_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1e4801431_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1e6ee6e98;
			};
			jule::Ptr<_1e334c0e3_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1e4807dd8_build_case(&(*_self_), _70734_tokens,_70752_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1e334b026_Else>(_1e334b026_Else{._field_token=_71722_c.get()._field_token, ._field_scope=_71722_c.get()._field_scope});
				} else {
					_1e4801431_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_def_not_last=(_71017_def_not_last || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1e6ee6e98:;
	}
	_iter_end_1e6ee6e98:;;
	if (_71017_def_not_last) {
		_1e4801431_push_err(&(*_self_), _70917_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1e334c7b9_MatchCase> _1e480859d_build_match_case(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _74139_tokens) {
	jule::Ptr<_1e334c7b9_MatchCase> _74217_m = jule::new_ptr<_1e334c7b9_MatchCase>(_1e334c7b9_MatchCase{._field_token=_74139_tokens[0LL], });;
	_74139_tokens=_74139_tokens.slice(1LL);
	if (((_74139_tokens.len() > 0LL) && (_74139_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_type_match=true;
		_74139_tokens=_74139_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _75217_expr_tokens = _1e480be64_get_block_expr(_74139_tokens);;
	if ((_75217_expr_tokens.len() > 0LL)) {
		_74217_m.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _75217_expr_tokens);
	} else if (_74217_m.get()._field_type_match) {
		_1e4801431_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _76017_block_toks = _1e4819757_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74139_tokens);;
	if ((_76017_block_toks == nullptr)) {
		_1e48008c5_stop(&(*_self_));
		_1e4801431_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("body is not exist", 17));
		_1e4801750_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74139_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _74139_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_end=_74139_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_cases,_74217_m.get()._field_default) = _1e4808290_build_cases(&(*_self_), _76017_block_toks,_74217_m.get()._field_type_match);
	return _74217_m;
}



inline jule::Ptr<_1e3345839_ScopeTree> _1e48088ab_build_scope_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;;
	jule::Bool _77617_is_deferred = false;;
	jule::Ptr<_1e1c31ee6_Token> _77717_token = _77437_tokens[0LL];;
	if ((_77717_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1e4801431_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77437_tokens[0LL];
		if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if ((_77437_tokens.len() == 0LL)) {
				_1e4801431_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1e4801431_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _80417_scope_tokens = _1e4819757_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);;
	if ((_80417_scope_tokens == nullptr)) {
		_1e4801431_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77437_tokens.len())) {
		_1e4801431_push_err(&(*_self_), _77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e3345839_ScopeTree> _81117_scope = _1e48020e1_build_scope(&(*_self_), _80417_scope_tokens,_77437_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_unsafety=_77517_is_unsafe;
	_81117_scope.get()._field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_1e3342ea7_LabelSt> _1e4808bb9_build_label_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _81738_tokens) {
	jule::Ptr<_1e3342ea7_LabelSt> _81817_lbl = jule::new_ptr<_1e3342ea7_LabelSt>(_1e3342ea7_LabelSt{._field_token=_81738_tokens[0LL], ._field_ident=_81738_tokens[0LL].get()._field_kind});;
	if ((_81738_tokens.len() > 2LL)) {
		_81738_tokens=_81738_tokens.slice(2LL);
		_1e48019c5_insert_as_next(&(*_self_), _81738_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1e4808ec7_build_id_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _83235_tokens) {
	jule::Bool _83265_ok = jule::Bool();
	if ((_83235_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83265_ok);
	};
	jule::Ptr<_1e1c31ee6_Token> _83717_token = _83235_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e700cc8e:;
			{
				_83265_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1e4808bb9_build_label_st(&(*_self_), _83235_tokens)),_83265_ok);
			}
		}
		_match_end_1e700d94e:;
	};
	return std::make_tuple(jule::Any(),_83265_ok);
}



inline jule::Ptr<_1e481802a_AssignInfo> _1e48092d5_build_assign_info(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _84641_tokens) {
	jule::Ptr<_1e481802a_AssignInfo> _84717_info = jule::new_ptr<_1e481802a_AssignInfo>(_1e481802a_AssignInfo{._field_ok=true});;
	jule::I64 _85017_brace_n = 0LL;;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_1e70107b9:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e70117ba:;
							{
								(_85017_brace_n)++;
							}
						}
						else {
							_case_begin_1e7011a95:;
							{
								(_85017_brace_n)--;
							}
						}
						_match_end_1e7011886:;
					};
				};
				{
					
					if ((_85017_brace_n > 0LL)) {
						_case_begin_1e701227c:;
						{
							goto _iter_next_1e70107b9;
						}
					}
					else if ((_85121_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e70122e3:;
						{
							goto _iter_next_1e70107b9;
						}
					}
					else if ((!(_1e1c36acd_is_assign_op(_85121_token.get()._field_kind)))) {
						_case_begin_1e701236a:;
						{
							goto _iter_next_1e70107b9;
						}
					}
					_match_end_1e701205c:;
				};
				_84717_info.get()._field_l=_84641_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84641_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1e1c36836_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1e70107b9;
				};
				_84717_info.get()._field_r=_84641_tokens.slice((_85114_i + 1LL));
				if (_1e1c36836_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1e4801431_push_err(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1e70107b9;
			}
			_iter_next_1e70107b9:;
			++it;
			_85114_i++;
			goto _iter_begin_1e70107b9;
		}
		_iter_end_1e70107b9:;
	};
	return _84717_info;
}



inline jule::Ptr<_1e3343c55_AssignLeft> _1e48095e3_build_assign_l(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _89438_tokens) {
	jule::Ptr<_1e3343c55_AssignLeft> _89517_l = jule::new_ptr<_1e3343c55_AssignLeft>(_1e3343c55_AssignLeft{._field_token=_89438_tokens[0LL], });;
	if ((_89438_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_ident=_89517_l.get()._field_token.get()._field_kind;
	};
	_89517_l.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _89438_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1e3343c55_AssignLeft>> _1e4809901_build_assign_ls(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>& _90739_parts) {
	jule::Slice<jule::Ptr<_1e3343c55_AssignLeft>> _90817_lefts = nullptr;;
	{
		auto &expr = _90739_parts;
		auto it = expr.begin();
		_iter_begin_1e7019064:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _90921_part = *it;
			{
				jule::Ptr<_1e3343c55_AssignLeft> _91021_l = _1e48095e3_build_assign_l(&(*_self_), _90921_part);;
				_90817_lefts = jule::alloc_for_append(_90817_lefts,1);_90817_lefts.__push(_91021_l);;
			}
			_iter_next_1e7019064:;
			++it;
			goto _iter_begin_1e7019064;
		}
		_iter_end_1e7019064:;
	};
	return _90817_lefts;
}



inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e4809c0e_build_plain_assign(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _91742_tokens) {
	jule::Ptr<_1e481802a_AssignInfo> _91817_info = _1e48092d5_build_assign_info(&(*_self_), _91742_tokens);;
	if ((!(_91817_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e3344294_AssignSt> _92317_assign = jule::new_ptr<_1e3344294_AssignSt>(_1e3344294_AssignSt{._field_setter=_91817_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _92718_parts;;
	jule::Slice<_1e1905060_Log> _92725_errs;;
	std::tie(_92718_parts,_92725_errs) = _1e4819e61_parts(_91817_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92725_errs);
		return std::make_tuple(nullptr,false);
	};
	_92317_assign.get()._field_left=_1e4809901_build_assign_ls(&(*_self_), _92718_parts);
	if ((_91817_info.get()._field_r != nullptr)) {
		_92317_assign.get()._field_right=_1e481c24e_build_expr((*_self_)._field_p, _91817_info.get()._field_r);
	};
	return std::make_tuple(_92317_assign,true);
}



inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e480a01c_build_decl_assign(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _94140_tokens) {
	if ((_94140_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94140_tokens=_94140_tokens.slice(1LL);
	jule::Ptr<_1e1c31ee6_Token> _94717_token = _94140_tokens[0LL];;
	if (((_94717_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94717_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e3344294_AssignSt> _95217_assign = jule::new_ptr<_1e3344294_AssignSt>(_1e3344294_AssignSt{._field_declarative=true, });;
	jule::I64 _95617_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _95717_rang = _1e4819757_range(_95617_i,jule::Str("(", 1),jule::Str(")", 1),_94140_tokens);;
	if ((_95717_rang == nullptr)) {
		_1e4801431_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95617_i + 1LL) < _94140_tokens.len())) {
		_95217_assign.get()._field_setter=_94140_tokens[_95617_i];
		(_95617_i)++;
		jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _96421_expr_tokens = _94140_tokens.slice(_95617_i);;
		_95217_assign.get()._field_right=_1e481c24e_build_expr((*_self_)._field_p, _96421_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _96918_parts;;
	jule::Slice<_1e1905060_Log> _96925_errs;;
	std::tie(_96918_parts,_96925_errs) = _1e4819e61_parts(_95717_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96925_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96925_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96918_parts;
		auto it = expr.begin();
		_iter_begin_1e7024e0a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _97521_part = *it;
			{
				jule::Bool _97621_is_mut = false;;
				jule::Bool _97721_is_ref = false;;
				_94717_token=_97521_part[0LL];
				if ((_94717_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97621_is_mut=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1e4801431_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1e7024e0a;
					};
				};
				if (((_97521_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97521_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97721_is_ref=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1e4801431_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1e7024e0a;
					};
				};
				if ((((_97521_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97521_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97521_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1e4801431_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1e7024e0a;
				};
				jule::Ptr<_1e3343c55_AssignLeft> _100521_l = _1e48095e3_build_assign_l(&(*_self_), _97521_part);;
				_100521_l.get()._field_mutable=_97621_is_mut;
				_100521_l.get()._field_reference=_97721_is_ref;
				_95217_assign.get()._field_left = jule::alloc_for_append(_95217_assign.get()._field_left,1);_95217_assign.get()._field_left.__push(_100521_l);;
			}
			_iter_next_1e7024e0a:;
			++it;
			goto _iter_begin_1e7024e0a;
		}
		_iter_end_1e7024e0a:;
	};
	return std::make_tuple(_95217_assign,true);
}



inline std::tuple<jule::Ptr<_1e3344294_AssignSt>,jule::Bool> _1e480a32a_build_assign_st(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _101439_tokens) {
	jule::Ptr<_1e3344294_AssignSt> _101459_st = jule::Ptr<_1e3344294_AssignSt>();
	jule::Bool _101474_ok = jule::Bool();
	if ((!(_1e48183c1_check_assign_tokens(_101439_tokens)))) {
		_101459_st = nullptr;
		_101474_ok = false;
		return std::make_tuple(_101459_st,_101474_ok);
	};
	{
		auto &_match_expr{ _101439_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e702dc16:;
			{
				std::tie(_101459_st,_101474_ok) = _1e480a01c_build_decl_assign(&(*_self_), _101439_tokens);
			}
		}
		else {
			_case_begin_1e702d809:;
			{
				std::tie(_101459_st,_101474_ok) = _1e4809c0e_build_plain_assign(&(*_self_), _101439_tokens);
			}
		}
		_match_end_1e702d7a4:;
	};
	return std::make_tuple(_101459_st,_101474_ok);
}



inline jule::Ptr<_1e333a6b9_UseExpr> _1e480a638_build_use_expr(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _102938_tokens) {
	if ((_102938_tokens.len() == 1LL)) {
		_1e4801431_push_err(&(*_self_), _102938_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1e333a6b9_UseExpr> _103517_ue = jule::new_ptr<_1e333a6b9_UseExpr>(_1e333a6b9_UseExpr{._field_token=_102938_tokens[0LL], });;
	_102938_tokens=_102938_tokens.slice(1LL);
	_103517_ue.get()._field_expr=_1e481c24e_build_expr((*_self_)._field_p, _102938_tokens);
	return _103517_ue;
}



inline jule::Any _1e480a946_build_st(_1e4800243_ScopeParser* _self_, jule::Ptr<_1e47ee918_stmt>& _104432_st) {
	jule::Ptr<_1e1c31ee6_Token> _104517_token = _104432_st.get()._field_tokens[0LL];;
	if ((_104517_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104722_s;;
		jule::Bool _104725_ok;;
		std::tie(_104722_s,_104725_ok) = _1e4808ec7_build_id_st(&(*_self_), _104432_st.get()._field_tokens);
		if (_104725_ok) {
			return _104722_s;
		};
	};
	jule::Ptr<_1e3344294_AssignSt> _105318_s;;
	jule::Bool _105321_ok;;
	std::tie(_105318_s,_105321_ok) = _1e480a32a_build_assign_st(&(*_self_), _104432_st.get()._field_tokens);
	if (_105321_ok) {
		return static_cast<jule::Any>(_105318_s);
	};
	{
		auto &_match_expr{ _104517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e7034238:;
			{
				return static_cast<jule::Any>(_1e480a638_build_use_expr(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1e7033ea2:;
			{
				return static_cast<jule::Any>(_1e48023ee_build_var_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1e7033be9:;
			{
				return static_cast<jule::Any>(_1e480270c_build_ret_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1e703429e:;
			{
				return static_cast<jule::Any>(_1e480517c_build_iter_st(&(*_self_), _104432_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1e7034315:;
			{
				return static_cast<jule::Any>(_1e480548a_build_break_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1e703437b:;
			{
				return static_cast<jule::Any>(_1e4805798_build_cont_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1e70343e2:;
			{
				return static_cast<jule::Any>(_1e48061c2_build_if_else_chain(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1e7034458:;
			{
				return static_cast<jule::Any>(_1e48064d0_build_co_call_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e70344d0:;
			{
				return static_cast<jule::Any>(_1e48067dd_build_goto_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e7034557:;
			{
				return static_cast<jule::Any>(_1e4806aeb_build_fall_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e70345ce:;
			{
				return static_cast<jule::Any>(_1e4806e09_build_type_alias_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e7034656:;
			{
				return static_cast<jule::Any>(_1e480859d_build_match_case(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1e70346cd:;
			{
				return static_cast<jule::Any>(_1e48088ab_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e7034755:;
			{
				if ((_104517_token.get()._field_kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1e48088ab_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
				};
			}
		}
		_match_end_1e7033d3c:;
	};
	jule::Ptr<_1e3339d28_Expr> _109417_expr = _1e481c24e_build_expr((*_self_)._field_p, _104432_st.get()._field_tokens);;
	if ((_109417_expr != nullptr)) {
		return static_cast<jule::Any>(_109417_expr);
	};
	_1e4801431_push_err(&(*_self_), _104517_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1e480ac65_build(_1e4800243_ScopeParser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _110229_tokens, jule::Ptr<_1e3345839_ScopeTree>& _110252_s) {
	if ((_110252_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1e47eecae_split_stmts(_110229_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110252_s;
	while (((!(_1e4801112_is_last_st(&(*_self_)))) && (!(_1e4800d9d_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1e47ee918_stmt> _111121_st = _1e4801c39_next(&(*_self_));;
			jule::Any _111221_data = _1e480a946_build_st(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1e334522e_Stmt{._field_token=_111121_st.get()._field_tokens[0LL], ._field_data=_111221_data});;
			};
			if (_1e4800b39_stopped(&(*_self_))) {
				goto _iter_end_1e703d352;
			};
		}
	_iter_next_1e703d352:;
	}
	_iter_end_1e703d352:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4800243_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e480b815_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1e480d55e_push_err(_1e480cc9a_ExprBuilder* _self_, jule::Ptr<_1e1c31ee6_Token> _21927_token, jule::Str _21942_fmt, jule::Slice<jule::Any> _21955_args) {
	_1e481bb22_push_err((*_self_)._field_p.ptr(), _21927_token,_21942_fmt,jule::Any(_21955_args));
}



inline void _1e480d87d_push_suggestion(_1e480cc9a_ExprBuilder* _self_, jule::Str _22434_fmt, jule::Slice<jule::Any> _22447_args) {
	_1e481be41_push_suggestion((*_self_)._field_p.ptr(), _22434_fmt,jule::Any(_22447_args));
}



inline jule::Ptr<_1e333a9a5_TupleExpr> _1e480db8b_build_tuple(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>& _22835_parts) {
	jule::Ptr<_1e333a9a5_TupleExpr> _22917_tuple = jule::new_ptr<_1e333a9a5_TupleExpr>(_1e333a9a5_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1e3339d28_Expr>>::alloc(0LL,_22835_parts.len())});;
	{
		auto &expr = _22835_parts;
		auto it = expr.begin();
		_iter_begin_1e705b095:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _23221_part = *it;
			{
				_22917_tuple.get()._field_expr = jule::alloc_for_append(_22917_tuple.get()._field_expr,1);_22917_tuple.get()._field_expr.__push(_1e4817645_build_from_tokens(&(*_self_), _23221_part));;
			}
			_iter_next_1e705b095:;
			++it;
			goto _iter_begin_1e705b095;
		}
		_iter_end_1e705b095:;
	};
	return _22917_tuple;
}



inline jule::Ptr<_1e333ad5c_LitExpr> _1e480de99_build_lit(_1e480cc9a_ExprBuilder* _self_, jule::Ptr<_1e1c31ee6_Token> _23828_token) {
	return jule::new_ptr<_1e333ad5c_LitExpr>(_1e333ad5c_LitExpr{._field_token=_23828_token, ._field_value=_23828_token.get()._field_kind});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e480e2a7_build_primitive_type(_1e480cc9a_ExprBuilder* _self_, jule::Ptr<_1e1c31ee6_Token>& _24540_token) {
	return _1e482bc42_build_prim_type(_24540_token);
}



inline jule::Any _1e480e5b5_build_single(_1e480cc9a_ExprBuilder* _self_, jule::Ptr<_1e1c31ee6_Token> _24935_token) {
	{
		auto &_match_expr{ _24935_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1e705cd22:;
			{
				return static_cast<jule::Any>(_1e480de99_build_lit(&(*_self_), _24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e705cd88:;
			{
				if ((_24935_token.get()._field_kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1e333c952_VariadicExpr>(_1e333c952_VariadicExpr{._field_token=_24935_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e705cdee:;
			{
				return static_cast<jule::Any>(_1e480c7c2_build_ident_expr(_24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e705ce65:;
			{
				return static_cast<jule::Any>(_1e480e2a7_build_primitive_type(&(*_self_), _24935_token));
			}
		}
		_match_end_1e705bcaa:;
	};
	_1e480d55e_push_err(&(*_self_), _24935_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e333bd91_IdentExpr> _1e480e8c3_build_cpp_linked_ident(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _27046_tokens) {
	if ((_27046_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_27046_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1e480d55e_push_err(&(*_self_), _27046_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e1c31ee6_Token> _27817_token = _27046_tokens[2LL];;
	if ((_27817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e480d55e_push_err(&(*_self_), _27046_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e333bd91_IdentExpr> _28417_expr = _1e480c7c2_build_ident_expr(_27817_token);;
	_28417_expr.get()._field_cpp_linked=true;
	return _28417_expr;
}



inline jule::Ptr<_1e333c59a_UnaryExpr> _1e480ebd1_build_unary(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _28934_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _29017_op = _28934_tokens[0LL];;
	if ((_28934_tokens.len() == 1LL)) {
		_1e480d55e_push_err(&(*_self_), _29017_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1e1c32700_is_unary_op(_29017_op.get()._field_kind)))) {
		_1e480d55e_push_err(&(*_self_), _29017_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_29017_op.get()._field_kind)}));
		return nullptr;
	};
	_28934_tokens=_28934_tokens.slice(1LL);
	return jule::new_ptr<_1e333c59a_UnaryExpr>(_1e333c59a_UnaryExpr{._field_op=_29017_op, ._field_expr=_1e4817645_build_from_tokens(&(*_self_), _28934_tokens)});
}



inline jule::Ptr<_1e333d634_SubIdentExpr> _1e480eede_build_obj_sub_ident(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _31042_tokens) {
	jule::I64 _31117_i = (_31042_tokens.len() - 1LL);;
	jule::Ptr<_1e1c31ee6_Token> _31217_ident_token = _31042_tokens[_31117_i];;
	(_31117_i)--;
	_31042_tokens=_31042_tokens.slice(0LL,_31117_i);
	if ((_31042_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _31217_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e333d634_SubIdentExpr>(_1e333d634_SubIdentExpr{._field_expr=_1e4817645_build_from_tokens(&(*_self_), _31042_tokens), ._field_ident=_31217_ident_token});
}



inline jule::Ptr<_1e333d1b1_NsSelectionExpr> _1e48102ec_build_ns_sub_ident(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _32542_tokens) {
	jule::Ptr<_1e333d1b1_NsSelectionExpr> _32617_ns = jule::new_ptr<_1e333d1b1_NsSelectionExpr>(_1e333d1b1_NsSelectionExpr{});;
	{
		auto &expr = _32542_tokens;
		auto it = expr.begin();
		_iter_begin_1e70696ad:;
		if (it != expr.end()) {
			jule::I64 _32714_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _32721_token = *it;
			{
				if (((_32714_i & 1LL) == 0LL)) {
					if ((_32721_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1e480d55e_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e480d87d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32617_ns.get()._field_ns = jule::alloc_for_append(_32617_ns.get()._field_ns,1);_32617_ns.get()._field_ns.__push(_32721_token);;
				} else if ((_32721_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1e480d55e_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e480d87d_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e70696ad:;
			++it;
			_32714_i++;
			goto _iter_begin_1e70696ad;
		}
		_iter_end_1e70696ad:;
	};
	_32617_ns.get()._field_ident=_32617_ns.get()._field_ns[(_32617_ns.get()._field_ns.len() - 1LL)];
	_32617_ns.get()._field_ns=_32617_ns.get()._field_ns.slice(0LL,(_32617_ns.get()._field_ns.len() - 1LL));
	return _32617_ns;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e481060a_build_type(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _34434_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Ptr<_1e3335807_TypeDecl> _34618_t;;
	jule::Bool _34621_ok;;
	std::tie(_34618_t,_34621_ok) = _1e481d53b_build_type((*_self_)._field_p, _34434_tokens,(&(_34517_i)),false);
	if ((!(_34621_ok))) {
		_1e480d55e_push_err(&(*_self_), _34434_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34517_i < _34434_tokens.len())) {
		_1e480d55e_push_err(&(*_self_), _34434_tokens[_34517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34618_t;
}



inline jule::Any _1e4810918_build_sub_ident(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _35839_tokens) {
	jule::I64 _35913_i = (_35839_tokens.len() - 2LL);;
	jule::Ptr<_1e1c31ee6_Token> _36013_token = _35839_tokens[_35913_i];;
	{
		auto &_match_expr{ _36013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1e7071ae4:;
			{
				return static_cast<jule::Any>(_1e480eede_build_obj_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e7072122:;
			{
				return static_cast<jule::Any>(_1e48102ec_build_ns_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e7072188:;
			{
				if ((_36013_token.get()._field_kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1e481060a_build_type(&(*_self_), _35839_tokens));
				};
			}
		}
		_match_end_1e7071e79:;
	};
	_1e480d55e_push_err(&(*_self_), _36013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e333c952_VariadicExpr> _1e4810c26_build_variadic(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _37637_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _37717_token = _37637_tokens[(_37637_tokens.len() - 1LL)];;
	_37637_tokens=_37637_tokens.slice(0LL,(_37637_tokens.len() - 1LL));
	return jule::new_ptr<_1e333c952_VariadicExpr>(_1e333c952_VariadicExpr{._field_token=_37717_token, ._field_expr=_1e4817645_build_from_tokens(&(*_self_), _37637_tokens)});
}



inline jule::Any _1e4811034_build_op_right(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _38538_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _38617_token = _38538_tokens[(_38538_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e7076379:;
			{
				_38538_tokens=_38538_tokens.slice(0LL,(_38538_tokens.len() - 1LL));
				jule::Any _39021_d = _1e4817029_build(&(*_self_), _38538_tokens);;
				if ((_39021_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _39021_d };
					
					if (_match_expr.type_is<jule::Ptr<_1e333e1b2_FnCallExpr>>()) {
						_case_begin_1e707780e:;
						{
							_39021_d.operator jule::Ptr<_1e333e1b2_FnCallExpr>().get()._field_exception=jule::new_ptr<_1e3345839_ScopeTree>(_1e3345839_ScopeTree{._field_deferred=true, });
							return _39021_d;
						}
					}
					_match_end_1e7077677:;
				};
			}
		}
		_match_end_1e70762d0:;
	};
	_1e480d55e_push_err(&(*_self_), _38617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e333a114_RangeExpr> _1e4811364_build_between_parentheses(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _40648_tokens) {
	if ((_40648_tokens.len() == 2LL)) {
		_1e480d55e_push_err(&(*_self_), _40648_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40648_tokens=_40648_tokens.slice(1LL,(_40648_tokens.len() - 1LL));
	return jule::new_ptr<_1e333a114_RangeExpr>(_1e333a114_RangeExpr{._field_expr=_1e4817645_build_from_tokens(&(*_self_), _40648_tokens)});
}



inline jule::Ptr<_1e333cd09_CastExpr> _1e4811683_try_build_cast(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _41838_tokens) {
	jule::I64 _41917_range_n = 0LL;;
	{
		auto &expr = _41838_tokens;
		auto it = expr.begin();
		_iter_begin_1e707ae61:;
		if (it != expr.end()) {
			jule::I64 _42013_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _42016_token = *it;
			{
				if ((_42016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _42016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e707bd74:;
							{
								(_41917_range_n)++;
								goto _iter_next_1e707ae61;
							}
						}
						else {
							_case_begin_1e707c14e:;
							{
								(_41917_range_n)--;
							}
						}
						_match_end_1e707be40:;
					};
				};
				if ((_41917_range_n > 0LL)) {
					goto _iter_next_1e707ae61;
				} else if (((_42013_i + 1LL) == _41838_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _43921_type_tokens = _41838_tokens.slice(0LL,(_42013_i + 1LL));;
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _44021_expr_tokens = _41838_tokens.slice((_42013_i + 1LL));;
				if ((_44021_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1e1c31ee6_Token> _44717_tok = _44021_expr_tokens[0LL];;
				if (((_44717_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44717_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1e333cd09_CastExpr> _45221_cast = jule::new_ptr<_1e333cd09_CastExpr>(_1e333cd09_CastExpr{});;
				if ((_44021_expr_tokens.len() == 2LL)) {
					_1e480d55e_push_err(&(*_self_), _44021_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1e480d87d_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43921_type_tokens.len() == 2LL)) {
					_1e480d55e_push_err(&(*_self_), _43921_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1e480d87d_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43921_type_tokens=_43921_type_tokens.slice(1LL,(_43921_type_tokens.len() - 1LL));
					jule::I64 _46625_type_index = 0LL;;
					jule::Ptr<_1e3335807_TypeDecl> _46726_t;;
					jule::Bool _46729_ok;;
					std::tie(_46726_t,_46729_ok) = _1e481d53b_build_type((*_self_)._field_p, _43921_type_tokens,(&(_46625_type_index)),true);
					if ((_46729_ok && (_46625_type_index < _43921_type_tokens.len()))) {
						_1e480d55e_push_err(&(*_self_), _43921_type_tokens[_46625_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46729_ok))) {
						return _45221_cast;
					};
					_45221_cast.get()._field_kind=_46726_t;
					if ((_44021_expr_tokens.len() > 2LL)) {
						jule::I64 _47729_j = 0LL;;
						_1e4819757_range(_47729_j,jule::Str("(", 1),jule::Str(")", 1),_44021_expr_tokens);
						if ((_47729_j < _44021_expr_tokens.len())) {
							return nullptr;
						};
						_44021_expr_tokens=_44021_expr_tokens.slice(0LL,_47729_j);
						_45221_cast.get()._field_expr=_1e4817645_build_from_tokens(&(*_self_), _44021_expr_tokens);
					};
				};
				return _45221_cast;
			}
			_iter_next_1e707ae61:;
			++it;
			_42013_i++;
			goto _iter_begin_1e707ae61;
		}
		_iter_end_1e707ae61:;
	};
	return nullptr;
}



inline void _1e4811a4b_push_arg(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e3339d28_Expr>>& _49232_args, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _49251_tokens, jule::Ptr<_1e1c31ee6_Token> _49269_err_token) {
	if ((_49251_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _49269_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49232_args = jule::alloc_for_append(_49232_args,1);_49232_args.__push(_1e4817645_build_from_tokens(&(*_self_), _49251_tokens));;
}



inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e4811d59_build_args(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _50133_tokens) {
	if ((_50133_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _50717_args = nullptr;;
	jule::I64 _50817_last = 0LL;;
	jule::I64 _50917_range_n = 0LL;;
	_50133_tokens=_50133_tokens.slice(1LL,(_50133_tokens.len() - 1LL));
	{
		auto &expr = _50133_tokens;
		auto it = expr.begin();
		_iter_begin_1e708a4c0:;
		if (it != expr.end()) {
			jule::I64 _51113_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _51116_token = *it;
			{
				if ((_51116_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51116_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e708b2b2:;
							{
								(_50917_range_n)++;
							}
						}
						else {
							_case_begin_1e708b58c:;
							{
								(_50917_range_n)--;
							}
						}
						_match_end_1e708b37d:;
					};
				};
				if (((_50917_range_n > 0LL) || (_51116_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e708a4c0;
				};
				_1e4811a4b_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last,_51113_i),_51116_token);
				_50817_last=static_cast<jule::I64>((_51113_i + 1LL));
			}
			_iter_next_1e708a4c0:;
			++it;
			_51113_i++;
			goto _iter_begin_1e708a4c0;
		}
		_iter_end_1e708a4c0:;
	};
	if ((_50817_last < _50133_tokens.len())) {
		if ((_50817_last == 0LL)) {
			if ((_50133_tokens.len() > 0LL)) {
				_1e4811a4b_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[_50817_last]);
			};
		} else {
			_1e4811a4b_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[(_50817_last - 1LL)]);
		};
	};
	return _50717_args;
}



inline jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _1e4812167_build_call_generics(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _54342_tokens) {
	if ((_54342_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54342_tokens=_54342_tokens.slice(1LL,(_54342_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _54918_parts;;
	jule::Slice<_1e1905060_Log> _54925_errs;;
	std::tie(_54918_parts,_54925_errs) = _1e4819e61_parts(_54342_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _55017_generics = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>::alloc(0LL,_54918_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54925_errs);
	{
		auto &expr = _54918_parts;
		auto it = expr.begin();
		_iter_begin_1e70915c5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _55221_part = *it;
			{
				if ((_55221_part.len() == 0LL)) {
					goto _iter_next_1e70915c5;
				};
				jule::I64 _55621_j = 0LL;;
				jule::Ptr<_1e3335807_TypeDecl> _55722_generic;;
				std::tie(_55722_generic,std::ignore) = _1e481d53b_build_type((*_self_)._field_p, _55221_part,(&(_55621_j)),true);
				if ((_55621_j < _55221_part.len())) {
					_1e480d55e_push_err(&(*_self_), _55221_part[_55621_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_55722_generic);;
			}
			_iter_next_1e70915c5:;
			++it;
			goto _iter_begin_1e70915c5;
		}
		_iter_end_1e70915c5:;
	};
	return _55017_generics;
}



inline jule::Ptr<_1e333e1b2_FnCallExpr> _1e481251e_build_fn_call(_1e480cc9a_ExprBuilder* _self_, jule::Ptr<_1e1c31ee6_Token>& _56737_token, jule::Ptr<_1e480b815_CallData>& _56757_data) {
	return jule::new_ptr<_1e333e1b2_FnCallExpr>(_1e333e1b2_FnCallExpr{._field_token=_56737_token, ._field_expr=_1e4817645_build_from_tokens(&(*_self_), _56757_data.get()._field_expr_tokens), ._field_generics=_1e4812167_build_call_generics(&(*_self_), _56757_data.get()._field_generics_tokens), ._field_args=_1e4811d59_build_args(&(*_self_), _56757_data.get()._field_args_tokens), });
}



inline jule::Any _1e481284e_build_parentheses_range(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _57647_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _57717_token = _57647_tokens[0LL];;
	{
		auto &_match_expr{ _57717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e7096135:;
			{
				{
					auto &_match_expr{ _57717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e70968c7:;
						{
							jule::Ptr<_1e333cd09_CastExpr> _58225_expr = _1e4811683_try_build_cast(&(*_self_), _57647_tokens);;
							if ((_58225_expr != nullptr)) {
								return static_cast<jule::Any>(_58225_expr);
							};
						}
					}
					_match_end_1e709670c:;
				};
			}
		}
		_match_end_1e709608b:;
	};
	jule::Ptr<_1e480b815_CallData> _58917_data = _1e480bb78_get_call_data(_57647_tokens);;
	if ((_58917_data.get()._field_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1e4811364_build_between_parentheses(&(*_self_), _58917_data.get()._field_args_tokens));
	};
	return static_cast<jule::Any>(_1e481251e_build_fn_call(&(*_self_), _57717_token,_58917_data));
}



inline jule::Ptr<_1e333b566_UnsafeExpr> _1e4812b6d_build_unsafe_expr(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _60040_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _60117_token = _60040_tokens[0LL];;
	_60040_tokens=_60040_tokens.slice(1LL);
	jule::I64 _60317_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _60417_range_tokens = _1e4819757_range(_60317_i,jule::Str("{", 1),jule::Str("}", 1),_60040_tokens);;
	if ((_60417_range_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _60040_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e333b566_UnsafeExpr>(_1e333b566_UnsafeExpr{._field_token=_60117_token, ._field_expr=_1e4817645_build_from_tokens(&(*_self_), _60417_range_tokens)});
}



inline jule::Ptr<_1e3347330_FnDecl> _1e4812e7b_build_anon_fn(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _61537_tokens) {
	jule::Ptr<_1e3347330_FnDecl> _61617_f = _1e482263e_build_fn((*_self_)._field_p, _61537_tokens,false,false);;
	if ((!(_1e3347682_is_anon(_61617_f.ptr())))) {
		_1e480d55e_push_err(&(*_self_), _61617_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61617_f;
}



inline jule::Any _1e4813289_build_unsafe(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _62436_tokens) {
	{
		auto &_match_expr{ _62436_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e709cd95:;
			{
				return static_cast<jule::Any>(_1e4812e7b_build_anon_fn(&(*_self_), _62436_tokens));
			}
		}
		else {
			_case_begin_1e709d390:;
			{
				return static_cast<jule::Any>(_1e4812b6d_build_unsafe_expr(&(*_self_), _62436_tokens));
			}
		}
		_match_end_1e709d2d5:;
	};
}



inline void _1e4813652_push_range_lit_part(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _63442_part, jule::Ptr<_1e1c31ee6_Token> _6359_error_token, jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>& _63535_parts) {
	if ((_63442_part.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _6359_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63535_parts = jule::alloc_for_append(_63535_parts,1);_63535_parts.__push(_63442_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4813982_get_brace_range_lit_expr_parts(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _64553_tokens) {
	if ((_64553_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _65117_parts = nullptr;;
	jule::I64 _65317_last = 0LL;;
	jule::I64 _65417_range_n = 0LL;;
	_64553_tokens=_64553_tokens.slice(1LL,(_64553_tokens.len() - 1LL));
	{
		auto &expr = _64553_tokens;
		auto it = expr.begin();
		_iter_begin_1e70a2a59:;
		if (it != expr.end()) {
			jule::I64 _65613_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _65616_token = *it;
			{
				if ((_65616_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65616_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e70a384b:;
							{
								(_65417_range_n)++;
							}
						}
						else {
							_case_begin_1e70a3b26:;
							{
								(_65417_range_n)--;
							}
						}
						_match_end_1e70a3917:;
					};
				};
				if (((_65417_range_n > 0LL) || (_65616_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e70a2a59;
				};
				_1e4813652_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last,_65613_i),_65616_token,_65117_parts);
				_65317_last=static_cast<jule::I64>((_65613_i + 1LL));
			}
			_iter_next_1e70a2a59:;
			++it;
			_65613_i++;
			goto _iter_begin_1e70a2a59;
		}
		_iter_end_1e70a2a59:;
	};
	if ((_65317_last < _64553_tokens.len())) {
		if ((_65317_last == 0LL)) {
			if ((_64553_tokens.len() > 0LL)) {
				_1e4813652_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[_65317_last],_65117_parts);
			};
		} else {
			_1e4813652_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[(_65317_last - 1LL)],_65117_parts);
		};
	};
	return _65117_parts;
}



inline jule::Ptr<_1e333eb41_FieldExprPair> _1e4813ca1_build_field_expr_pair(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _68744_tokens) {
	if (((_68744_tokens.len() - 2LL) == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _68744_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e333eb41_FieldExprPair> _69217_pair = jule::new_ptr<_1e333eb41_FieldExprPair>(_1e333eb41_FieldExprPair{._field_field=_68744_tokens[0LL], });;
	_68744_tokens=_68744_tokens.slice(2LL);
	_69217_pair.get()._field_expr=_1e4817645_build_from_tokens(&(*_self_), _68744_tokens);
	return _69217_pair;
}



inline jule::Ptr<_1e3339d28_Expr> _1e48140ae_build_struct_lit_expr(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _70045_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _70117_token = _70045_tokens[0LL];;
	if (((_70117_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_70045_tokens.len() > 1LL))) {
		_70117_token=_70045_tokens[1LL];
		if ((_70117_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1e3339d28_Expr>(_1e3339d28_Expr{._field_token=_70117_token, ._field_end=_70045_tokens[(_70045_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_1e4813ca1_build_field_expr_pair(&(*_self_), _70045_tokens))});
		};
	};
	return _1e4817645_build_from_tokens(&(*_self_), _70045_tokens);
}



inline jule::Slice<jule::Ptr<_1e3339d28_Expr>> _1e48143bc_build_struct_lit_exprs(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _71546_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _71617_parts = _1e4813982_get_brace_range_lit_expr_parts(&(*_self_), _71546_tokens);;
	if ((_71617_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e3339d28_Expr>> _72117_pairs = jule::Slice<jule::Ptr<_1e3339d28_Expr>>::alloc(0LL,_71617_parts.len());;
	{
		auto &expr = _71617_parts;
		auto it = expr.begin();
		_iter_begin_1e70ad3d3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _72221_part = *it;
			{
				_72117_pairs = jule::alloc_for_append(_72117_pairs,1);_72117_pairs.__push(_1e48140ae_build_struct_lit_expr(&(*_self_), _72221_part));;
			}
			_iter_next_1e70ad3d3:;
			++it;
			goto _iter_begin_1e70ad3d3;
		}
		_iter_end_1e70ad3d3:;
	};
	return _72117_pairs;
}



inline jule::Ptr<_1e334038e_StructLit> _1e48146ec_build_typed_struct_literal(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _72849_tokens) {
	jule::I64 _72917_i = 0LL;;
	jule::Ptr<_1e3335807_TypeDecl> _73018_t;;
	jule::Bool _73021_ok;;
	std::tie(_73018_t,_73021_ok) = _1e481d53b_build_type((*_self_)._field_p, _72849_tokens,(&(_72917_i)),true);
	if ((!(_73021_ok))) {
		return nullptr;
	} else if ((_72917_i >= _72849_tokens.len())) {
		_1e480d55e_push_err(&(*_self_), _72849_tokens[_72917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72849_tokens=_72849_tokens.slice(_72917_i);
	jule::Ptr<_1e1c31ee6_Token> _73913_token = _72849_tokens[0LL];;
	if (((_73913_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73913_token.get()._field_kind != jule::Str("{", 1)))) {
		_1e480d55e_push_err(&(*_self_), _73913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e334038e_StructLit>(_1e334038e_StructLit{._field_end=_72849_tokens[(_72849_tokens.len() - 1LL)], ._field_kind=_73018_t, ._field_exprs=_1e48143bc_build_struct_lit_exprs(&(*_self_), _72849_tokens)});
}



inline jule::Ptr<_1e3339d28_Expr> _1e4814a1b_build_brace_lit_part(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _75244_tokens) {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _75318_l;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _75325_r;;
	std::tie(_75318_l,_75325_r) = _1e480c20b_split_colon(_75244_tokens);
	if ((_75318_l != nullptr)) {
		return jule::new_ptr<_1e3339d28_Expr>(_1e3339d28_Expr{._field_token=_75244_tokens[0LL], ._field_end=_75244_tokens[(_75244_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3341329_KeyValPair>(_1e3341329_KeyValPair{._field_key=_1e4817645_build_from_tokens(&(*_self_), _75318_l), ._field_val=_1e4817645_build_from_tokens(&(*_self_), _75325_r), ._field_colon=_75244_tokens[_75318_l.len()]}))});
	};
	return _1e4817645_build_from_tokens(&(*_self_), _75244_tokens);
}



inline jule::Ptr<_1e3340812_BraceLit> _1e4814d29_build_brace_lit(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _76939_tokens) {
	jule::Ptr<_1e3340812_BraceLit> _77017_lit = jule::new_ptr<_1e3340812_BraceLit>(_1e3340812_BraceLit{._field_token=_76939_tokens[0LL], ._field_end=_76939_tokens[(_76939_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _77517_parts = _1e4813982_get_brace_range_lit_expr_parts(&(*_self_), _76939_tokens);;
	if ((_77517_parts == nullptr)) {
		return _77017_lit;
	};
	_77017_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1e3339d28_Expr>>::alloc(0LL,_77517_parts.len());
	{
		auto &expr = _77517_parts;
		auto it = expr.begin();
		_iter_begin_1e70b70e0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _78121_part = *it;
			{
				_77017_lit.get()._field_exprs = jule::alloc_for_append(_77017_lit.get()._field_exprs,1);_77017_lit.get()._field_exprs.__push(_1e4814a1b_build_brace_lit_part(&(*_self_), _78121_part));;
			}
			_iter_next_1e70b70e0:;
			++it;
			goto _iter_begin_1e70b70e0;
		}
		_iter_end_1e70b70e0:;
	};
	return _77017_lit;
}



inline jule::Any _1e4815137_build_brace_range(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _78841_tokens) {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _78918_expr_tokens;;
	jule::I64 _78931_range_n;;
	std::tie(_78918_expr_tokens,_78931_range_n) = _1e480ca69_get_range_expr_tokens(_78841_tokens);
	{
		
		if ((_78918_expr_tokens.len() == 0LL)) {
			_case_begin_1e70b8bb3:;
			{
				return static_cast<jule::Any>(_1e4814d29_build_brace_lit(&(*_self_), _78841_tokens));
			}
		}
		else if ((_78931_range_n > 0LL)) {
			_case_begin_1e70b8c3a:;
			{
				_1e480d55e_push_err(&(*_self_), _78841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e70b8b2a:;
	};
	jule::Ptr<_1e1c31ee6_Token> _80013_else_token = _78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)];;
	if ((_78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78918_expr_tokens=_78918_expr_tokens.slice(0LL,(_78918_expr_tokens.len() - 1LL));
		jule::Any _80321_d = _1e4817029_build(&(*_self_), _78918_expr_tokens);;
		if ((_80321_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80321_d };
			
			if (_match_expr.type_is<jule::Ptr<_1e333e1b2_FnCallExpr>>()) {
				_case_begin_1e70bc249:;
				{
					_78841_tokens=_78841_tokens.slice((_78918_expr_tokens.len() + 1LL));
					jule::I64 _81025_i = 0LL;;
					jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _81125_range_tokens = _1e4819757_range(_81025_i,jule::Str("{", 1),jule::Str("}", 1),_78841_tokens);;
					jule::Ptr<_1e333e1b2_FnCallExpr> _81225_model = _80321_d.operator jule::Ptr<_1e333e1b2_FnCallExpr>();;
					if (_1e333e789_ignored(_81225_model.ptr())) {
						_1e480d55e_push_err(&(*_self_), _80013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e480d87d_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81225_model.get()._field_exception=_1e481cb89_build_scope((*_self_)._field_p, _81125_range_tokens,_78841_tokens[(_81025_i - 1LL)]);
					return _80321_d;
				}
			}
			else {
				_case_begin_1e70bbc93:;
				{
					_1e480d55e_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1e70bbc2c:;
		};
	};
	{
		auto &_match_expr{ _78918_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e70c6011:;
			{
				return _1e4813289_build_unsafe(&(*_self_), _78841_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e70c6077:;
			{
				return static_cast<jule::Any>(_1e4812e7b_build_anon_fn(&(*_self_), _78841_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e70c60dd:;
			{
				return static_cast<jule::Any>(_1e48146ec_build_typed_struct_literal(&(*_self_), _78841_tokens));
			}
		}
		else {
			_case_begin_1e70bc2b0:;
			{
				_1e480d55e_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e70bac4d:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4815445_get_enumerable_parts(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _84043_tokens) {
	_84043_tokens=_84043_tokens.slice(1LL,(_84043_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _84218_parts;;
	jule::Slice<_1e1905060_Log> _84225_errors;;
	std::tie(_84218_parts,_84225_errors) = _1e4819e61_parts(_84043_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84225_errors);
	return _84218_parts;
}



inline jule::Ptr<_1e334179c_SliceExpr> _1e4815753_build_slice(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _84734_tokens) {
	jule::Ptr<_1e334179c_SliceExpr> _84817_slc = jule::new_ptr<_1e334179c_SliceExpr>(_1e334179c_SliceExpr{._field_token=_84734_tokens[0LL], ._field_end=_84734_tokens[(_84734_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _85317_parts = _1e4815445_get_enumerable_parts(&(*_self_), _84734_tokens);;
	if ((_85317_parts.len() == 0LL)) {
		return _84817_slc;
	};
	_84817_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1e3339d28_Expr>>::alloc(0LL,_85317_parts.len());
	{
		auto &expr = _85317_parts;
		auto it = expr.begin();
		_iter_begin_1e70cb401:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _85921_p = *it;
			{
				if ((_85921_p.len() == 0LL)) {
					goto _iter_next_1e70cb401;
				};
				_84817_slc.get()._field_exprs = jule::alloc_for_append(_84817_slc.get()._field_exprs,1);_84817_slc.get()._field_exprs.__push(_1e4817645_build_from_tokens(&(*_self_), _85921_p));;
			}
			_iter_next_1e70cb401:;
			++it;
			goto _iter_begin_1e70cb401;
		}
		_iter_end_1e70cb401:;
	};
	return _84817_slc;
}



inline jule::Ptr<_1e334213d_IndexingExpr> _1e4815ba4_build_indexing(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _86937_expr_tokens, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _87013_tokens, jule::Ptr<_1e1c31ee6_Token> _87035_error_token) {
	jule::Ptr<_1e1c31ee6_Token> _87117_end = _87013_tokens[(_87013_tokens.len() - 1LL)];;
	_87013_tokens=_87013_tokens.slice(1LL,(_87013_tokens.len() - 1LL));
	if ((_87013_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _87035_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3339d28_Expr> _87717_expr = _1e4817645_build_from_tokens(&(*_self_), _86937_expr_tokens);;
	if ((_87717_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e3339d28_Expr> _88117_index = _1e4817645_build_from_tokens(&(*_self_), _87013_tokens);;
	if ((_88117_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e334213d_IndexingExpr>(_1e334213d_IndexingExpr{._field_token=_87035_error_token, ._field_end=_87117_end, ._field_expr=_87717_expr, ._field_index=_88117_index});
}



inline jule::Ptr<_1e3342748_SlicingExpr> _1e4816248_build_slicing(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _89337_expr_tokens, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _89365_slicing_tokens, jule::I64& _89410_colon, jule::Ptr<_1e1c31ee6_Token>& _89427_error_token, jule::Ptr<_1e1c31ee6_Token> _89452_end) {
	jule::Ptr<_1e3342748_SlicingExpr> _89517_slc = jule::new_ptr<_1e3342748_SlicingExpr>(_1e3342748_SlicingExpr{._field_token=_89427_error_token, ._field_end=_89452_end, ._field_expr=_1e4817645_build_from_tokens(&(*_self_), _89337_expr_tokens), });;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _90117_start_expr_tokens = _89365_slicing_tokens.slice(0LL,_89410_colon);;
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_start=_1e4817645_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _90617_to_expr_tokens = _89365_slicing_tokens.slice((_89410_colon + 1LL));;
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_to=_1e4817645_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	};
	return _89517_slc;
}



inline jule::Any _1e4816556_build_bracket_range(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _91442_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _91517_error_token = _91442_tokens[0LL];;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _91618_expr_tokens;;
	jule::I64 _91631_range_n;;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1e480ca69_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1e70d584a:;
			{
				return static_cast<jule::Any>(_1e4815753_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if (((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL))) {
			_case_begin_1e70d58c2:;
			{
				_1e480d55e_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e70d5790:;
	};
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _93518_slicing_tokens;;
	jule::I64 _93534_colon;;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1e482c083_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return static_cast<jule::Any>(_1e4816248_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token,_91442_tokens[(_91442_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1e4815ba4_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1e4816864_build_data(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _94234_tokens) {
	{
		auto _match_expr{ _94234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e70d9541:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e70d95b8:;
			{
				return _1e480e5b5_build_single(&(*_self_), _94234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e70d9640:;
			{
				if ((_94234_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1e480e8c3_build_cpp_linked_ident(&(*_self_), _94234_tokens));
				};
			}
		}
		_match_end_1e70d9112:;
	};
	jule::Ptr<_1e1c31ee6_Token> _95417_token = _94234_tokens[(_94234_tokens.len() - 1LL)];;
	if (((_95417_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95417_token.get()._field_kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1e4810c26_build_variadic(&(*_self_), _94234_tokens));
	};
	_95417_token=_94234_tokens[0LL];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e70dc984:;
			{
				if (((_94234_tokens.len() > 1LL) && (_95417_token.get()._field_kind == jule::Str("*", 1)))) {
					_95417_token=_94234_tokens[1LL];
					if (((_95417_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95417_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1e481060a_build_type(&(*_self_), _94234_tokens));
					};
				};
				return static_cast<jule::Any>(_1e480ebd1_build_unary(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e70dca0b:;
			{
				if ((_94234_tokens.len() < 3LL)) {
					goto _match_end_1e70dc8a7;
				};
				if ((_94234_tokens.len() > 3LL)) {
					jule::Ptr<_1e1c31ee6_Token> _97621_t = _94234_tokens[(_94234_tokens.len() - 1LL)];;
					if (((_97621_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97621_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1e70dc8a7;
					};
				};
				jule::Ptr<_1e1c31ee6_Token> _98217_next = _94234_tokens[1LL];;
				if (((_98217_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98217_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1e70dc8a7;
				};
				return static_cast<jule::Any>(_1e481060a_build_type(&(*_self_), _94234_tokens));
			}
		}
		_match_end_1e70dc8a7:;
	};
	_95417_token=_94234_tokens[(_94234_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e70dcec3:;
			{
				return _1e4810918_build_sub_ident(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e70dd039:;
			{
				return static_cast<jule::Any>(_1e481060a_build_type(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e70e3638:;
			{
				return _1e4811034_build_op_right(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e70e369e:;
			{
				{
					auto &_match_expr{ _95417_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e70e4eec:;
						{
							return _1e481284e_build_parentheses_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e70e50b8:;
						{
							return _1e4815137_build_brace_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e70e5140:;
						{
							return _1e4816556_build_bracket_range(&(*_self_), _94234_tokens);
						}
					}
					_match_end_1e70e49e1:;
				};
			}
		}
		_match_end_1e70dce6d:;
	};
	_1e480d55e_push_err(&(*_self_), _95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e333daa7_BinopExpr> _1e4816c1b_build_binop(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _101335_tokens, jule::I64 _101353_i) {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _101417_left_tokens = _101335_tokens.slice(0LL,_101353_i);;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _101517_right_tokens = _101335_tokens.slice((_101353_i + 1LL));;
	if ((_101417_left_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101517_right_tokens.len() == 0LL)) {
		_1e480d55e_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e480d87d_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e333daa7_BinopExpr>(_1e333daa7_BinopExpr{._field_left=_1e4817645_build_from_tokens(&(*_self_), _101417_left_tokens), ._field_right=_1e4817645_build_from_tokens(&(*_self_), _101517_right_tokens), ._field_op=_101335_tokens[_101353_i]});
}



inline jule::Any _1e4817029_build(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _103329_tokens) {
	jule::I64 _103413_i = _1e480c52a_find_lowest_prec_op(_103329_tokens);;
	if ((_103413_i == -1LL)) {
		return _1e4816864_build_data(&(*_self_), _103329_tokens);
	};
	return static_cast<jule::Any>(_1e4816c1b_build_binop(&(*_self_), _103329_tokens,_103413_i));
}



inline jule::Any _1e4817337_build_kind(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _104134_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _104218_parts;;
	jule::Slice<_1e1905060_Log> _104225_errors;;
	std::tie(_104218_parts,_104225_errors) = _1e4819e61_parts(_104134_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104225_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104225_errors);
		return nullptr;
	} else if ((_104218_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1e480db8b_build_tuple(&(*_self_), _104218_parts));
	};
	return _1e4817029_build(&(*_self_), _104134_tokens);
}



inline jule::Ptr<_1e3339d28_Expr> _1e4817645_build_from_tokens(_1e480cc9a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _105240_tokens) {
	if ((_105240_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1e3339d28_Expr>(_1e3339d28_Expr{._field_token=_105240_tokens[0LL], ._field_end=_105240_tokens[(_105240_tokens.len() - 1LL)], ._field_kind=_1e4817337_build_kind(&(*_self_), _105240_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1e480cc9a_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e481802a_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e481b4e5_stop(_1e481b1b5_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1e481b759_stopped(_1e481b1b5_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1e481bb22_push_err(_1e481b1b5_Parser* _self_, jule::Ptr<_1e1c31ee6_Token> _23527_token, jule::Str _23542_fmt, jule::Slice<jule::Any> _23555_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e481a5e3_compiler_err(_23527_token,_23542_fmt,jule::Any(_23555_args)));;
}



inline void _1e481be41_push_suggestion(_1e481b1b5_Parser* _self_, jule::Str _24034_fmt, jule::Slice<jule::Any> _24047_args) {
	{
		_1e481a945_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_24034_fmt,jule::Any(_24047_args));
	};
}



inline jule::Ptr<_1e3339d28_Expr> _1e481c24e_build_expr(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _24435_tokens) {
	jule::Ptr<_1e480cc9a_ExprBuilder> _24517_ep = jule::new_ptr<_1e480cc9a_ExprBuilder>(_1e480cc9a_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1e3339d28_Expr> _24817_expr = _1e4817645_build_from_tokens(_24517_ep.ptr(), _24435_tokens);;
	return _24817_expr;
}



inline jule::Ptr<_1e330242d_Directive> _1e481c55c_build_directive(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _25238_tokens) {
	if ((_25238_tokens.len() == 1LL)) {
		_1e481bb22_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25238_tokens[1LL].get()._field_column != (_25238_tokens[0LL].get()._field_column + 1LL))) {
		_1e481bb22_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e330242d_Directive>(_1e330242d_Directive{._field_tag=_25238_tokens[1LL], ._field_args=_25238_tokens.slice(2LL)});
}



inline void _1e481c7d2_push_directive(_1e481b1b5_Parser* _self_, jule::Ptr<_1e330242d_Directive> _26937_d) {
	if ((_26937_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1e71210c2:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _27516_pd = *it;
			{
				if ((_26937_d.get()._field_tag.get()._field_kind == _27516_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1e71210c2:;
			++it;
			goto _iter_begin_1e71210c2;
		}
		_iter_end_1e71210c2:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26937_d);;
}



inline jule::Ptr<_1e3345839_ScopeTree> _1e481cb89_build_scope(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _28336_tokens, jule::Ptr<_1e1c31ee6_Token> _28358_end) {
	jule::Ptr<_1e3345839_ScopeTree> _28417_s = _1e47ed7b3_new_scope();;
	_28417_s.get()._field_end=_28358_end;
	_1e4800243_ScopeParser _28617_sp = _1e4800243_ScopeParser{._field_p=_self_, };;
	_1e480ac65_build(&_28617_sp, _28336_tokens,_28417_s);
	return _28417_s;
}



inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e481d0da___build_type(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _29344_tokens, jule::I64* _29413_i, jule::Bool _29422_err) {
	_1e482c58e_TypeBuilder _29517_tb = _1e482c58e_TypeBuilder{._field_p=_self_, ._field_tokens=_29344_tokens, ._field_i=_29413_i, ._field_err=_29422_err};;
	jule::Ptr<_1e3335807_TypeDecl> _30118_decl;;
	jule::Bool _30124_ok;;
	std::tie(_30118_decl,_30124_ok) = _1e4830949_build(&_29517_tb);
	return std::make_tuple(_30118_decl,_30124_ok);
}



inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e481d53b_build_type(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _30642_tokens, jule::I64* _30713_i, jule::Bool _30722_err) {
	jule::Ptr<_1e1c31ee6_Token> _30813_token = _30642_tokens[(*(_30713_i))];;
	jule::Ptr<_1e3335807_TypeDecl> _30918_t;;
	jule::Bool _30921_ok;;
	std::tie(_30918_t,_30921_ok) = _1e481d0da___build_type(_self_, _30642_tokens,_30713_i,_30722_err);
	if ((_30722_err && (!(_30921_ok)))) {
		_1e481bb22_push_err(_self_.ptr(), _30813_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30918_t,_30921_ok);
}



inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e481d849_build_type_alias_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _31646_tokens) {
	jule::I64 _31717_i = 1LL;;
	if ((_31717_i >= _31646_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e334bb70_TypeAliasDecl> _32217_tad = jule::new_ptr<_1e334bb70_TypeAliasDecl>(_1e334bb70_TypeAliasDecl{._field_token=_31646_tokens[1LL], ._field_ident=_31646_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_1e1c31ee6_Token> _32617_token = _31646_tokens[_31717_i];;
	if ((_32617_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _32617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	_32617_token=_31646_tokens[_31717_i];
	if ((_32617_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	jule::Ptr<_1e3335807_TypeDecl> _34718_t;;
	jule::Bool _34721_ok;;
	std::tie(_34718_t,_34721_ok) = _1e481d53b_build_type(_self_, _31646_tokens,(&(_31717_i)),true);
	_32217_tad.get()._field_kind=_34718_t;
	if ((_34721_ok && (_31717_i < _31646_tokens.len()))) {
		_1e481bb22_push_err(_self_.ptr(), _31646_tokens[_31717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32217_tad;
}



inline void _1e481db8a_build_var_type_and_expr(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e334830e_VarDecl>& _35548_v, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _35566_tokens) {
	jule::I64 _35617_i = 0LL;;
	jule::Ptr<_1e1c31ee6_Token> _35717_tok = _35566_tokens[_35617_i];;
	if ((_35717_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35617_i)++;
		if (((_35617_i >= _35566_tokens.len()) || ((_35566_tokens[_35617_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35566_tokens[_35617_i].get()._field_kind == jule::Str("=", 1))))) {
			_1e481bb22_push_err(_self_.ptr(), _35717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e3335807_TypeDecl> _36522_t;;
		jule::Bool _36525_ok;;
		std::tie(_36522_t,_36525_ok) = _1e481d53b_build_type(_self_, _35566_tokens,(&(_35617_i)),true);
		if (_36525_ok) {
			_35548_v.get()._field_kind=_36522_t;
			if ((_35617_i >= _35566_tokens.len())) {
				return;;
			};
			_35717_tok=_35566_tokens[_35617_i];
		};
	};
	if ((_35717_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35717_tok.get()._field_kind != jule::Str("=", 1))) {
			_1e481bb22_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _38021_expr_tokens = _35566_tokens.slice((_35617_i + 1LL));;
		if ((_38021_expr_tokens.len() == 0LL)) {
			_1e481bb22_push_err(_self_.ptr(), _35717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35548_v.get()._field_expr=_1e481c24e_build_expr(_self_, _38021_expr_tokens);
	} else {
		_1e481bb22_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e481de43_build_var_common(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e334830e_VarDecl>& _39141_v, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _39158_tokens) {
	_39141_v.get()._field_token=_39158_tokens[0LL];
	if ((_39141_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _39141_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_39141_v.get()._field_ident=_39141_v.get()._field_token.get()._field_kind;
	_39141_v.get()._field_kind=nullptr;
	if ((_39158_tokens.len() > 1LL)) {
		_39158_tokens=_39158_tokens.slice(1LL);
		_1e481db8a_build_var_type_and_expr(_self_, _39141_v,_39158_tokens);
	};
}



inline void _1e481e30b_build_var_begin(_1e481b1b5_Parser* _self_, jule::Ptr<_1e334830e_VarDecl>& _40639_v, jule::I64& _40657_i, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _40666_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _40713_tok = _40666_tokens[_40657_i];;
	{
		auto &_match_expr{ _40713_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1e713ab8b:;
			{
				_40639_v.get()._field_statically=true;
				goto _case_begin_1e713ac02;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e713ac02:;
			{
				(_40657_i)++;
				if ((_40657_i >= _40666_tokens.len())) {
					_1e481bb22_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40666_tokens[_40657_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40639_v.get()._field_mutable=true;
					(_40657_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1e713a394:;
			{
				(_40657_i)++;
				_40639_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1e713a2c8:;
			{
				_1e481bb22_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e713a130:;
	};
	if ((_40657_i >= _40666_tokens.len())) {
		_1e481bb22_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e334830e_VarDecl> _1e481e619_build_var(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _43633_tokens) {
	jule::I64 _43717_i = 0LL;;
	jule::Ptr<_1e334830e_VarDecl> _43817_v = jule::new_ptr<_1e334830e_VarDecl>(_1e334830e_VarDecl{._field_token=_43633_tokens[0LL], });;
	_1e481e30b_build_var_begin(_self_.ptr(), _43817_v,_43717_i,_43633_tokens);
	if ((_43717_i >= _43633_tokens.len())) {
		return nullptr;
	};
	_43633_tokens=_43633_tokens.slice(_43717_i);
	if (((_43633_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43633_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43817_v.get()._field_reference=true;
		if ((_43633_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43633_tokens=_43633_tokens.slice(1LL);
	};
	_1e481de43_build_var_common(_self_, _43817_v,_43633_tokens);
	return _43817_v;
}



inline jule::Ptr<_1e3342b00_GenericDecl> _1e481e927_build_generic(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _45837_tokens) {
	if ((_45837_tokens.len() > 1LL)) {
		_1e481bb22_push_err(&(*_self_), _45837_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e3342b00_GenericDecl> _46217_g = jule::new_ptr<_1e3342b00_GenericDecl>(_1e3342b00_GenericDecl{._field_token=_45837_tokens[0LL], });;
	if ((_46217_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(&(*_self_), _46217_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46217_g.get()._field_ident=_46217_g.get()._field_token.get()._field_kind;
	return _46217_g;
}



inline jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _1e481ecce_build_generics(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _47338_tokens, jule::Ptr<_1e1c31ee6_Token>& _47357_error_token) {
	if ((_47338_tokens.len() == 0LL)) {
		_1e481bb22_push_err(&(*_self_), _47357_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _47918_parts;;
	jule::Slice<_1e1905060_Log> _47925_errors;;
	std::tie(_47918_parts,_47925_errors) = _1e4819e61_parts(_47338_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47925_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47925_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>> _48517_generics = jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>::alloc(0LL,_47918_parts.len());;
	{
		auto &expr = _47918_parts;
		auto it = expr.begin();
		_iter_begin_1e714713c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _48621_part = *it;
			{
				_48517_generics = jule::alloc_for_append(_48517_generics,1);_48517_generics.__push(_1e481e927_build_generic(&(*_self_), _48621_part));;
			}
			_iter_next_1e714713c:;
			++it;
			goto _iter_begin_1e714713c;
		}
		_iter_end_1e714713c:;
	};
	return _48517_generics;
}



inline jule::Ptr<_1e3346010_ParamDecl> _1e48200dc_build_self_param(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _49339_tokens) {
	if ((_49339_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e3346010_ParamDecl> _49817_param = jule::new_ptr<_1e3346010_ParamDecl>();;
	jule::I64 _50117_i = 0LL;;
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49817_param.get()._field_mutable=true;
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1e481bb22_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_kind == jule::Str("&", 1))) {
		_49817_param.get()._field_ident=jule::Str("&", 1);
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1e481bb22_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49817_param.get()._field_ident+=jule::Str("self", 4);
		_49817_param.get()._field_token=_49339_tokens[_50117_i];
		(_50117_i)++;
		if ((_50117_i < _49339_tokens.len())) {
			_1e481bb22_push_err(&(*_self_), _49339_tokens[_50117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49817_param;
}



inline void _1e48204a5_param_type_begin(_1e481b1b5_Parser* _self_, jule::Ptr<_1e3346010_ParamDecl>& _53240_param, jule::I64& _53264_i, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _53273_tokens) {
	for (; (_53264_i < _53273_tokens.len()); (_53264_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _53417_token = _53273_tokens[_53264_i];;
			if ((_53417_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53417_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53240_param.get()._field_variadic) {
				_1e481bb22_push_err(&(*_self_), _53417_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1e714e199;
			};
			_53240_param.get()._field_variadic=true;
		}
	_iter_next_1e714e199:;
	}
	_iter_end_1e714e199:;;
}



inline void _1e48207c4_build_param_type(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e3346010_ParamDecl>& _54941_param, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _54965_tokens) {
	jule::I64 _55017_i = 0LL;;
	_1e48204a5_param_type_begin(_self_.ptr(), _54941_param,_55017_i,_54965_tokens);
	if ((_55017_i >= _54965_tokens.len())) {
		return;;
	};
	std::tie(_54941_param.get()._field_kind,std::ignore) = _1e481d53b_build_type(_self_, _54965_tokens,(&(_55017_i)),true);
	if ((_55017_i < _54965_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _54965_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e4820ae3_build_param_body(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e3346010_ParamDecl>& _56241_param, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _56264_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _56317_tok = _56264_tokens[0LL];;
	_56241_param.get()._field_ident=_56317_tok.get()._field_kind;
	if ((_56264_tokens.len() == 1LL)) {
		return;;
	} else if ((_56264_tokens.len() < 3LL)) {
		_1e481bb22_push_err(_self_.ptr(), _56317_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_56264_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1e48207c4_build_param_type(_self_, _56241_param,_56264_tokens);
		return;;
	};
	_56264_tokens=_56264_tokens.slice(2LL);
	_1e48207c4_build_param_type(_self_, _56241_param,_56264_tokens);
}



inline jule::Ptr<_1e3346010_ParamDecl> _1e4820e01_build_param(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _58035_tokens) {
	jule::Ptr<_1e3346010_ParamDecl> _58117_param = jule::new_ptr<_1e3346010_ParamDecl>(_1e3346010_ParamDecl{._field_token=_58035_tokens[0LL], });;
	if ((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58117_param.get()._field_mutable=true;
		if ((_58035_tokens.len() == 1LL)) {
			_1e481bb22_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58035_tokens=_58035_tokens.slice(1LL);
		_58117_param.get()._field_token=_58035_tokens[0LL];
	};
	if ((_58035_tokens.len() >= 3LL)) {
		if (((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58117_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58035_tokens.len() == 1LL)) {
				_1e481bb22_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58035_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58035_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58117_param.get()._field_reference=true;
				_58035_tokens=_58035_tokens.slice(1LL);
				_58117_param.get()._field_token=_58035_tokens[0LL];
			};
		};
	};
	if ((_58117_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58117_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1e48207c4_build_param_type(_self_, _58117_param,_58035_tokens);
	} else {
		_1e4820ae3_build_param_body(_self_, _58117_param,_58035_tokens);
	};
	return _58117_param;
}



inline void _1e4821176_check_params(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e3346010_ParamDecl>>& _62336_params) {
	{
		auto &expr = _62336_params;
		auto it = expr.begin();
		_iter_begin_1e715d719:;
		if (it != expr.end()) {
			jule::Ptr<_1e3346010_ParamDecl> _62421_param = *it;
			{
				if ((_1e3346373_is_self(_62421_param.ptr()) || (_62421_param.get()._field_kind != nullptr))) {
					goto _iter_next_1e715d719;
				};
				if ((_62421_param.get()._field_token == nullptr)) {
					_1e481bb22_push_err(&(*_self_), _62421_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62421_param.get()._field_kind=jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_62421_param.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_62421_param.get()._field_token, ._field_ident=_62421_param.get()._field_token.get()._field_kind, }))});
					_62421_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1e715d719:;
			++it;
			goto _iter_begin_1e715d719;
		}
		_iter_end_1e715d719:;
	};
}



inline jule::Slice<jule::Ptr<_1e3346010_ParamDecl>> _1e482152d_build_params(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _64337_tokens, jule::Bool _64355_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _64418_parts;;
	jule::Slice<_1e1905060_Log> _64425_errs;;
	std::tie(_64418_parts,_64425_errs) = _1e4819e61_parts(_64337_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64425_errs);
	if ((_64418_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e3346010_ParamDecl>> _65017_params = nullptr;;
	if ((_64355_method && (_64418_parts.len() > 0LL))) {
		jule::Ptr<_1e3346010_ParamDecl> _65221_param = _1e48200dc_build_self_param(_self_.ptr(), _64418_parts[0LL]);;
		if (((_65221_param != nullptr) && _1e3346373_is_self(_65221_param.ptr()))) {
			_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_65221_param);;
			_64418_parts=_64418_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64418_parts;
		auto it = expr.begin();
		_iter_begin_1e7162eb0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _65921_part = *it;
			{
				jule::Ptr<_1e3346010_ParamDecl> _66021_param = _1e4820e01_build_param(_self_, _65921_part);;
				if ((_66021_param != nullptr)) {
					_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_66021_param);;
				};
			}
			_iter_next_1e7162eb0:;
			++it;
			goto _iter_begin_1e7162eb0;
		}
		_iter_end_1e7162eb0:;
	};
	_1e4821176_check_params(_self_.ptr(), _65017_params);
	return _65017_params;
}



inline std::tuple<jule::Ptr<_1e333891a_RetTypeDecl>,jule::Bool> _1e48218d5_build_multi_ret_type(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _67045_tokens, jule::I64& _67068_i) {
	jule::Ptr<_1e333891a_RetTypeDecl> _67078_t = jule::Ptr<_1e333891a_RetTypeDecl>();
	jule::Bool _67095_ok = jule::Bool();
	_67078_t=jule::new_ptr<_1e333891a_RetTypeDecl>();
	(_67068_i)++;
	if ((_67068_i >= _67045_tokens.len())) {
		(_67068_i)--;
		std::tie(_67078_t.get()._field_kind,_67095_ok) = _1e481d53b_build_type(_self_, _67045_tokens,(&(_67068_i)),false);
		return std::make_tuple(_67078_t,_67095_ok);
	};
	(_67068_i)--;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _68017_range_tokens = _1e4819757_range(_67068_i,jule::Str("(", 1),jule::Str(")", 1),_67045_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _68218_parts;;
	jule::Slice<_1e1905060_Log> _68225_errs;;
	std::tie(_68218_parts,_68225_errs) = _1e4819e61_parts(_68017_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68225_errs);
	if ((_68218_parts.len() == 0LL)) {
		return std::make_tuple(_67078_t,_67095_ok);
	};
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _68817_types = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>::alloc(0LL,_68218_parts.len());;
	_67078_t.get()._field_idents=jule::Slice<jule::Ptr<_1e1c31ee6_Token>>::alloc(0LL,_68218_parts.len());
	{
		auto &expr = _68218_parts;
		auto it = expr.begin();
		_iter_begin_1e7169a22:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _69021_part = *it;
			{
				jule::Ptr<_1e1c31ee6_Token> _69121_token = _69021_part[0LL];;
				jule::I64 _69221_offset = 0LL;;
				if ((_69021_part.len() > 1LL)) {
					_69121_token=_69021_part[1LL];
					if ((_69121_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69221_offset=2LL;
						if ((_69021_part.len() < 3LL)) {
							_1e481bb22_push_err(_self_.ptr(), _69121_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1e7169a22;
						};
					};
				};
				_69121_token=_69021_part[0LL];
				if ((_69221_offset != 2LL)) {
					jule::Ptr<_1e1c31ee6_Token> _70825_new_token = jule::new_ptr<_1e1c31ee6_Token>((*(_69121_token)));;
					_70825_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_70825_new_token);;
				} else {
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_69121_token);;
				};
				jule::Ptr<_1e3335807_TypeDecl> _71522_tk;;
				std::tie(_71522_tk,std::ignore) = _1e481d53b_build_type(_self_, _69021_part,(&(_69221_offset)),true);
				if ((_69221_offset < _69021_part.len())) {
					_1e481bb22_push_err(_self_.ptr(), _69021_part[_69221_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_68817_types = jule::alloc_for_append(_68817_types,1);_68817_types.__push(_71522_tk);;
			}
			_iter_next_1e7169a22:;
			++it;
			goto _iter_begin_1e7169a22;
		}
		_iter_end_1e7169a22:;
	};
	if ((_68817_types.len() > 1LL)) {
		_67078_t.get()._field_kind=jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_67045_tokens[0LL], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3337397_TupleTypeDecl>(_1e3337397_TupleTypeDecl{._field_types=_68817_types}))});
	} else {
		_67078_t.get()._field_kind=_68817_types[0LL];
	};
	_67095_ok=true;
	return std::make_tuple(_67078_t,_67095_ok);
}



inline std::tuple<jule::Ptr<_1e333891a_RetTypeDecl>,jule::Bool> _1e4821c8c_build_ret_type(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _73839_tokens, jule::I64& _73862_i) {
	jule::Ptr<_1e333891a_RetTypeDecl> _73872_t = jule::Ptr<_1e333891a_RetTypeDecl>();
	jule::Bool _73889_ok = jule::Bool();
	_73872_t=jule::new_ptr<_1e333891a_RetTypeDecl>();
	if ((_73862_i >= _73839_tokens.len())) {
		return std::make_tuple(_73872_t,_73889_ok);
	};
	jule::Ptr<_1e1c31ee6_Token> _74417_token = _73839_tokens[_73862_i];;
	{
		auto &_match_expr{ _74417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e71731ac:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e7173223:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e7173289:;
			{
				if (((_73862_i + 1LL) >= _73839_tokens.len())) {
					_1e481bb22_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_73872_t,_73889_ok);
				};
				(_73862_i)++;
				_74417_token=_73839_tokens[_73862_i];
				if ((_74417_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74417_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1e7175cc5:;
							{
								std::tie(_73872_t,_73889_ok) = _1e48218d5_build_multi_ret_type(_self_, _73839_tokens,_73862_i);
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1e7175d3b:;
							{
								_1e481bb22_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						_match_end_1e7175ac7:;
					};
				};
				std::tie(_73872_t.get()._field_kind,_73889_ok) = _1e481d53b_build_type(_self_, _73839_tokens,(&(_73862_i)),true);
				return std::make_tuple(_73872_t,_73889_ok);
			}
		}
		_match_end_1e7173102:;
	};
	(_73862_i)++;
	_1e481bb22_push_err(_self_.ptr(), _74417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_73872_t,_73889_ok);
}



inline jule::Ptr<_1e3347330_FnDecl> _1e48221dd_build_fn_prototype(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _78343_tokens, jule::I64& _78366_i, jule::Bool _78374_method) {
	jule::Ptr<_1e3347330_FnDecl> _78417_f = jule::new_ptr<_1e3347330_FnDecl>(_1e3347330_FnDecl{._field_token=_78343_tokens[_78366_i], });;
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78417_f.get()._field_statically=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78417_f.get()._field_unsafety=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	(_78366_i)++;
	if ((_78366_i >= _78343_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e1c31ee6_Token> _81713_tok = _78343_tokens[_78366_i];;
	if ((_81713_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_ident=_81713_tok.get()._field_kind;
	} else {
		_78417_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1e1c31ee6_Token> _82913_error_token = _78343_tokens[_78366_i];;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _83017_generics_tokens = _1e4819757_range(_78366_i,jule::Str("[", 1),jule::Str("]", 1),_78343_tokens);;
	if ((_83017_generics_tokens != nullptr)) {
		_78417_f.get()._field_generics=_1e481ecce_build_generics(_self_.ptr(), _83017_generics_tokens,_82913_error_token);
	};
	if ((_78343_tokens[_78366_i].get()._field_kind != jule::Str("(", 1))) {
		_1e481bb22_push_err(_self_.ptr(), _78343_tokens[_78366_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _84017_params_toks = _1e4819757_range(_78366_i,jule::Str("(", 1),jule::Str(")", 1),_78343_tokens);;
	if ((_84017_params_toks.len() > 0LL)) {
		_78417_f.get()._field_params=_1e482152d_build_params(_self_, _84017_params_toks,_78374_method);
	};
	if ((_78366_i < _78343_tokens.len())) {
		jule::Ptr<_1e1c31ee6_Token> _84617_token = _78343_tokens[_78366_i];;
		if (((_84617_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84617_token.get()._field_kind == jule::Str("!", 1)))) {
			_78417_f.get()._field_exceptional=true;
			(_78366_i)++;
		};
	};
	std::tie(_78417_f.get()._field_result,std::ignore) = _1e4821c8c_build_ret_type(_self_, _78343_tokens,_78366_i);
	return _78417_f;
}



inline jule::Ptr<_1e3347330_FnDecl> _1e482263e_build_fn(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _85933_tokens, jule::Bool _85951_method, jule::Bool _85965_prototype) {
	jule::I64 _86017_i = 0LL;;
	jule::Ptr<_1e3347330_FnDecl> _86117_f = _1e48221dd_build_fn_prototype(_self_, _85933_tokens,_86017_i,_85951_method);;
	if (_85965_prototype) {
		if ((_86017_i < _85933_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _85933_tokens[(_86017_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86117_f;
	} else if ((_86117_f == nullptr)) {
		return _86117_f;
	};
	if ((_86017_i >= _85933_tokens.len())) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _87717_block_tokens = _1e4819757_range(_86017_i,jule::Str("{", 1),jule::Str("}", 1),_85933_tokens);;
	if ((_87717_block_tokens != nullptr)) {
		_86117_f.get()._field_scope=_1e481cb89_build_scope(_self_, _87717_block_tokens,_85933_tokens[(_86017_i - 1LL)]);
		_86117_f.get()._field_scope.get()._field_unsafety=_86117_f.get()._field_unsafety;
		if ((_86017_i < _85933_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _85933_tokens[_86017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86117_f;
}



inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e482294c_get_use_decl_selectors(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _89345_tokens) {
	jule::I64 _89417_i = 0LL;;
	_89345_tokens=_1e4819757_range(_89417_i,jule::Str("{", 1),jule::Str("}", 1),_89345_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _89618_parts;;
	jule::Slice<_1e1905060_Log> _89625_errs;;
	std::tie(_89618_parts,_89625_errs) = _1e4819e61_parts(_89345_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89625_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89625_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _90217_selectors = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>::alloc(0LL,_89618_parts.len());;
	{
		auto &expr = _89618_parts;
		auto it = expr.begin();
		_iter_begin_1e718bc53:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_1e481bb22_push_err(&(*_self_), _90321_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e1c31ee6_Token> _90721_tok = _90321_part[0LL];;
				if (((_90721_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_90721_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1e481bb22_push_err(&(*_self_), _90721_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e481be41_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1e718bc53;
				};
				_90217_selectors = jule::alloc_for_append(_90217_selectors,1);_90217_selectors.__push(_90721_tok);;
			}
			_iter_next_1e718bc53:;
			++it;
			goto _iter_begin_1e718bc53;
		}
		_iter_end_1e718bc53:;
	};
	return _90217_selectors;
}



inline void _1e4822c6b_build_cpp_use_decl(_1e481b1b5_Parser* _self_, jule::Ptr<_1e334d05b_UseDecl>& _91842_decl, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _91859_tokens) {
	if ((_91859_tokens.len() > 1LL)) {
		_1e481bb22_push_err(&(*_self_), _91859_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e1c31ee6_Token> _92213_token = _91859_tokens[0LL];;
	if (((_92213_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92213_token.get()._field_kind[0LL] != '`') && (_92213_token.get()._field_kind[0LL] != '\"')))) {
		_1e481bb22_push_err(&(*_self_), _92213_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_91842_decl.get()._field_cpp_linked=true;
	_91842_decl.get()._field_link_path=_92213_token.get()._field_kind.slice(1LL,(_92213_token.get()._field_kind.len() - 1LL));
}



inline void _1e482308a_build_std_use_decl(_1e481b1b5_Parser* _self_, jule::Ptr<_1e334d05b_UseDecl>& _93142_decl, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _93162_tokens) {
	_93142_decl.get()._field_std=true;
	jule::Ptr<_1e1c31ee6_Token> _93417_token = _93162_tokens[0LL];;
	if ((_93162_tokens.len() < 3LL)) {
		_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93162_tokens=_93162_tokens.slice(2LL);
	_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e7196059:;
			{
				_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e71960d1:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("}", 1))) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _95121_selectors = nullptr;;
				std::tie(_93162_tokens,_95121_selectors) = _1e48199ee_range_last(_93162_tokens);
				_93142_decl.get()._field_selected=_1e482294c_get_use_decl_selectors(&(*_self_), _95121_selectors);
				if ((_93162_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e7196158:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("*", 1))) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93142_decl.get()._field_full=true;
			}
		}
		_match_end_1e7195ed2:;
	};
	_93142_decl.get()._field_link_path=(jule::Str("std::", 5) + _1e481acec_tokstoa(_93162_tokens));
}



inline void _1e48233a9_build_ident_use_decl(_1e481b1b5_Parser* _self_, jule::Ptr<_1e334d05b_UseDecl>& _99344_decl, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _99364_tokens) {
	_99344_decl.get()._field_std=false;
	jule::Ptr<_1e1c31ee6_Token> _99617_token = _99364_tokens[(_99364_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e71a1130:;
			{
				_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e71a130b:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("}", 1))) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _100721_selectors = nullptr;;
				std::tie(_99364_tokens,_100721_selectors) = _1e48199ee_range_last(_99364_tokens);
				_99344_decl.get()._field_selected=_1e482294c_get_use_decl_selectors(&(*_self_), _100721_selectors);
				if ((_99364_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e71a1372:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("*", 1))) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1e481bb22_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99344_decl.get()._field_full=true;
			}
		}
		_match_end_1e71a10ca:;
	};
	_99344_decl.get()._field_link_path=_1e481acec_tokstoa(_99364_tokens);
}



inline void _1e48236c8_parse_use_decl(_1e481b1b5_Parser* _self_, jule::Ptr<_1e334d05b_UseDecl>& _105638_decl, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _105658_tokens) {
	if (_105638_decl.get()._field_cpp_linked) {
		_1e4822c6b_build_cpp_use_decl(&(*_self_), _105638_decl,_105658_tokens);
		return;;
	};
	jule::Ptr<_1e1c31ee6_Token> _106217_token = _105658_tokens[0LL];;
	if ((_106217_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105658_tokens.len() > 2LL) && (_105658_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105638_decl.get()._field_alias=_106217_token.get()._field_kind;
		if ((_105658_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1e481bb22_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1e481be41_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105658_tokens=_105658_tokens.slice(2LL);
		_106217_token=_105658_tokens[0LL];
	};
	;
	{
		
		if ((_106217_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1e71ac988:;
			{
				_1e482308a_build_std_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		else {
			_case_begin_1e71aea67:;
			{
				_1e48233a9_build_ident_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		_match_end_1e71aea01:;
	};
}



inline jule::Ptr<_1e334d05b_UseDecl> _1e4823a80_build_use_decl(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _109037_tokens, jule::Bool _109055_cpp_linked) {
	jule::Ptr<_1e334d05b_UseDecl> _109117_decl = jule::new_ptr<_1e334d05b_UseDecl>(_1e334d05b_UseDecl{._field_token=_109037_tokens[0LL], ._field_cpp_linked=_109055_cpp_linked, });;
	if ((_109037_tokens.len() < 2LL)) {
		_1e481bb22_push_err(&(*_self_), _109117_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109037_tokens=_109037_tokens.slice(1LL);
	_1e48236c8_parse_use_decl(&(*_self_), _109117_decl,_109037_tokens);
	return _109117_decl;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e4823e59_build_type_enum_item_kind(jule::Ptr<_1e481b1b5_Parser> _self_, jule::I64& _110450_i, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _110463_tokens) {
	jule::I64 _110517_brace_n = 0LL;;
	jule::I64 _110613_expr_start = _110450_i;;
	for (; (_110450_i < _110463_tokens.len()); (_110450_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _110817_t = _110463_tokens[_110450_i];;
			if ((_110817_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _110817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e71b40ee:;
						{
							(_110517_brace_n)++;
							goto _iter_next_1e71b3939;
						}
					}
					else {
						_case_begin_1e71b49b2:;
						{
							(_110517_brace_n)--;
						}
					}
					_match_end_1e71b47a3:;
				};
			};
			if ((_110517_brace_n > 0LL)) {
				goto _iter_next_1e71b3939;
			};
			if (((_110817_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_110450_i + 1LL) >= _110463_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _112425_kind_tokens = nullptr;;
				if ((_110817_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start,_110450_i);
				} else {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start);
				};
				jule::I64 _113025_j = 0LL;;
				jule::Ptr<_1e3335807_TypeDecl> _113126_kind;;
				std::tie(_113126_kind,std::ignore) = _1e481d53b_build_type(_self_, _112425_kind_tokens,(&(_113025_j)),true);
				if ((_113025_j < _112425_kind_tokens.len())) {
					_1e481bb22_push_err(_self_.ptr(), _112425_kind_tokens[_113025_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _113126_kind;
			};
		}
	_iter_next_1e71b3939:;
	}
	_iter_end_1e71b3939:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>> _1e4824278_build_type_enum_items(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _114146_tokens) {
	jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _114317_i = 0LL;;
	for (; (_114317_i < _114146_tokens.len()); (_114317_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _114521_t = _114146_tokens[_114317_i];;
			jule::Ptr<_1e334ea0d_TypeEnumItemDecl> _114621_item = jule::new_ptr<_1e334ea0d_TypeEnumItemDecl>();;
			_114621_item.get()._field_token=_114521_t;
			if (((_114621_item.get()._field_token.get()._field_id == static_cast<jule::U64>(2LLU)) && ((_114146_tokens.len() - _114317_i) > 2LL))) {
				_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
				_114521_t=_114146_tokens[(_114317_i + 1LL)];
				if ((_114521_t.get()._field_id == static_cast<jule::U64>(11LLU))) {
					_114317_i+=2LL;
					if (((_114317_i >= _114146_tokens.len()) || (_114146_tokens[_114317_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
						_1e481bb22_push_err(_self_.ptr(), _114521_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1e71b990c;
					};
				};
			};
			_114621_item.get()._field_kind=_1e4823e59_build_type_enum_item_kind(_self_, _114317_i,_114146_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1e71b990c:;
	}
	_iter_end_1e71b990c:;;
	return _114217_items;
}



inline jule::Ptr<_1e3350118_TypeEnumDecl> _1e4824586_build_type_enum_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _116545_tokens) {
	jule::I64 _116617_i = 1LL;;
	jule::Ptr<_1e3350118_TypeEnumDecl> _116717_e = jule::new_ptr<_1e3350118_TypeEnumDecl>(_1e3350118_TypeEnumDecl{._field_token=_116545_tokens[_116617_i], });;
	if ((_116717_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_ident=_116717_e.get()._field_token.get()._field_kind;
	_116617_i+=3LL;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _117617_item_tokens = _1e4819757_range(_116617_i,jule::Str("{", 1),jule::Str("}", 1),_116545_tokens);;
	if ((_117617_item_tokens == nullptr)) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _116717_e;
	} else if ((_116617_i < _116545_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _116545_tokens[_116617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_end=_116545_tokens[(_116617_i - 1LL)];
	_116717_e.get()._field_items=_1e4824278_build_type_enum_items(_self_, _117617_item_tokens);
	return _116717_e;
}



inline jule::Ptr<_1e3339d28_Expr> _1e482493d_build_enum_item_expr(jule::Ptr<_1e481b1b5_Parser> _self_, jule::I64& _119045_i, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _119058_tokens) {
	jule::I64 _119117_brace_n = 0LL;;
	jule::I64 _119213_expr_start = _119045_i;;
	for (; (_119045_i < _119058_tokens.len()); (_119045_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _119417_t = _119058_tokens[_119045_i];;
			if ((_119417_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _119417_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e71c530d:;
						{
							(_119117_brace_n)++;
							goto _iter_next_1e71c4b48;
						}
					}
					else {
						_case_begin_1e71c5bc1:;
						{
							(_119117_brace_n)--;
						}
					}
					_match_end_1e71c59b2:;
				};
			};
			if ((_119117_brace_n > 0LL)) {
				goto _iter_next_1e71c4b48;
			};
			if (((_119417_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_119045_i + 1LL) >= _119058_tokens.len()))) {
				jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _121025_expr_tokens = nullptr;;
				if ((_119417_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start,_119045_i);
				} else {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start);
				};
				return _1e481c24e_build_expr(_self_, _121025_expr_tokens);
			};
		}
	_iter_next_1e71c4b48:;
	}
	_iter_end_1e71c4b48:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>> _1e4824c4b_build_enum_items(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _122241_tokens) {
	jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>> _122317_items = jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _122417_i = 0LL;;
	for (; (_122417_i < _122241_tokens.len()); (_122417_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _122621_t = _122241_tokens[_122417_i];;
			jule::Ptr<_1e334d4ce_EnumItemDecl> _122721_item = jule::new_ptr<_1e334d4ce_EnumItemDecl>();;
			_122721_item.get()._field_token=_122621_t;
			if ((_122721_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1e481bb22_push_err(_self_.ptr(), _122721_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_122721_item.get()._field_ident=_122721_item.get()._field_token.get()._field_kind;
			if ((((_122417_i + 1LL) >= _122241_tokens.len()) || (_122241_tokens[(_122417_i + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if (((_122417_i + 1LL) < _122241_tokens.len())) {
					(_122417_i)++;
				};
				_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
				goto _iter_next_1e71c9675;
			};
			(_122417_i)++;
			_122621_t=_122241_tokens[_122417_i];
			(_122417_i)++;
			if ((_122621_t.get()._field_id != static_cast<jule::U64>(11LLU))) {
				_1e481bb22_push_err(_self_.ptr(), _122621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1e71c9675;
			};
			if (((_122417_i >= _122241_tokens.len()) || (_122241_tokens[_122417_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1e481bb22_push_err(_self_.ptr(), _122621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1e71c9675;
			};
			_122721_item.get()._field_expr=_1e482493d_build_enum_item_expr(_self_, _122417_i,_122241_tokens);
			_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
		}
	_iter_next_1e71c9675:;
	}
	_iter_end_1e71c9675:;;
	return _122317_items;
}



inline jule::Ptr<_1e334e007_EnumDecl> _1e4825059_build_enum_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _125940_tokens) {
	if ((_125940_tokens.len() < 3LL)) {
		_1e481bb22_push_err(_self_.ptr(), _125940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e334e007_EnumDecl> _126417_e = jule::new_ptr<_1e334e007_EnumDecl>(_1e334e007_EnumDecl{._field_token=_125940_tokens[1LL], });;
	if ((_126417_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_ident=_126417_e.get()._field_token.get()._field_kind;
	jule::I64 _127217_i = 2LL;;
	if ((_125940_tokens[_127217_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_127217_i)++;
		if ((_127217_i >= _125940_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _125940_tokens[(_127217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _126417_e;
		};
		std::tie(_126417_e.get()._field_kind,std::ignore) = _1e481d53b_build_type(_self_, _125940_tokens,(&(_127217_i)),true);
		if ((_127217_i >= _125940_tokens.len())) {
			_1e481b4e5_stop(_self_.ptr());
			_1e481bb22_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _126417_e;
		};
	} else {
		_126417_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _128917_item_tokens = _1e4819757_range(_127217_i,jule::Str("{", 1),jule::Str("}", 1),_125940_tokens);;
	if ((_128917_item_tokens == nullptr)) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _126417_e;
	} else if ((_127217_i < _125940_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _125940_tokens[_127217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_end=_125940_tokens[(_127217_i - 1LL)];
	_126417_e.get()._field_items=_1e4824c4b_build_enum_items(_self_, _128917_item_tokens);
	return _126417_e;
}



inline jule::Any _1e4825367_build_node_enum_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _130345_tokens) {
	if (((_130345_tokens.len() > 3LL) && (_130345_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
		if ((_130345_tokens[3LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1e4824586_build_type_enum_decl(_self_, _130345_tokens));
		};
	};
	return static_cast<jule::Any>(_1e4825059_build_enum_decl(_self_, _130345_tokens));
}



inline jule::Ptr<_1e3350316_FieldDecl> _1e4825675_build_field(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _131235_tokens) {
	jule::Ptr<_1e3350316_FieldDecl> _131317_f = jule::new_ptr<_1e3350316_FieldDecl>(_1e3350316_FieldDecl{});;
	_131317_f.get()._field_public=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_131317_f.get()._field_public) {
		if ((_131235_tokens.len() == 1LL)) {
			_1e481bb22_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_mutable=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_131317_f.get()._field_mutable) {
		if ((_131235_tokens.len() == 1LL)) {
			_1e481bb22_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_token=_131235_tokens[0LL];
	if ((_131317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _131317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131317_f.get()._field_ident=_131317_f.get()._field_token.get()._field_kind;
	if ((_131235_tokens.len() == 1LL)) {
		_1e481bb22_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_131235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _131235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131235_tokens=_131235_tokens.slice(2LL);
	jule::I64 _135017_i = 0LL;;
	std::tie(_131317_f.get()._field_kind,std::ignore) = _1e481d53b_build_type(_self_, _131235_tokens,(&(_135017_i)),true);
	if ((_135017_i < _131235_tokens.len())) {
		jule::Ptr<_1e1c31ee6_Token> _135317_token = _131235_tokens[_135017_i];;
		if (((_135317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_135317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1e481bb22_push_err(_self_.ptr(), _131235_tokens[_135017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_135017_i)++;
		if ((_135017_i >= _131235_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _135317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(_135017_i);
		_131317_f.get()._field_default=_1e481c24e_build_expr(_self_, _131235_tokens);
	};
	return _131317_f;
}



inline jule::Slice<jule::Ptr<_1e3350316_FieldDecl>> _1e48259a5_build_struct_decl_fields(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _137048_tokens) {
	jule::Slice<jule::Ptr<_1e3350316_FieldDecl>> _137117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _137217_stmts = _1e47eecae_split_stmts(_137048_tokens);;
	{
		auto &expr = _137217_stmts;
		auto it = expr.begin();
		_iter_begin_1e71e7792:;
		if (it != expr.end()) {
			jule::Ptr<_1e47ee918_stmt> _137321_stmt = *it;
			{
				_137048_tokens=_137321_stmt.get()._field_tokens;
				jule::Ptr<_1e3350316_FieldDecl> _137521_f = _1e4825675_build_field(_self_, _137048_tokens);;
				_137117_fields = jule::alloc_for_append(_137117_fields,1);_137117_fields.__push(_137521_f);;
			}
			_iter_next_1e71e7792:;
			++it;
			goto _iter_begin_1e71e7792;
		}
		_iter_end_1e71e7792:;
	};
	return _137117_fields;
}



inline jule::Ptr<_1e3350ab9_StructDecl> _1e4825cc4_build_struct_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _138142_tokens) {
	if ((_138142_tokens.len() < 3LL)) {
		_1e481bb22_push_err(_self_.ptr(), _138142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _138717_i = 1LL;;
	jule::Ptr<_1e3350ab9_StructDecl> _138817_s = jule::new_ptr<_1e3350ab9_StructDecl>(_1e3350ab9_StructDecl{._field_token=_138142_tokens[_138717_i], });;
	if ((_138817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_138717_i)++;
	if ((_138717_i >= _138142_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _138817_s;
	};
	_138817_s.get()._field_ident=_138817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1e1c31ee6_Token> _140213_error_token = _138142_tokens[_138717_i];;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _140317_generics_tokens = _1e4819757_range(_138717_i,jule::Str("[", 1),jule::Str("]", 1),_138142_tokens);;
	if ((_140317_generics_tokens != nullptr)) {
		_138817_s.get()._field_generics=_1e481ecce_build_generics(_self_.ptr(), _140317_generics_tokens,_140213_error_token);
	};
	if ((_138717_i >= _138142_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _138142_tokens[(_138717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _141317_body_tokens = _1e4819757_range(_138717_i,jule::Str("{", 1),jule::Str("}", 1),_138142_tokens);;
	if ((_141317_body_tokens == nullptr)) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	if ((_138717_i < _138142_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_138817_s.get()._field_fields=_1e48259a5_build_struct_decl_fields(_self_, _141317_body_tokens);
	_138817_s.get()._field_end=_138142_tokens[(_138717_i - 1LL)];
	return _138817_s;
}



inline void _1e4826049_check_method_receiver(_1e481b1b5_Parser* _self_, jule::Ptr<_1e3347330_FnDecl>& _142841_f) {
	if (_142841_f.get()._field_statically) {
		if (((_142841_f.get()._field_params.len() > 0LL) && _1e3346373_is_self(_142841_f.get()._field_params[0LL].ptr()))) {
			_1e481bb22_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_142841_f.get()._field_params.len() == 0LL)) {
		_1e481bb22_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3346010_ParamDecl> _144113_param = _142841_f.get()._field_params[0LL];;
	if ((!(_1e3346373_is_self(_144113_param.ptr())))) {
		_1e481bb22_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e3347330_FnDecl>> _1e4826357_build_trait_methods(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _144843_tokens) {
	jule::Slice<jule::Ptr<_1e3347330_FnDecl>> _144917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _145017_stmts = _1e47eecae_split_stmts(_144843_tokens);;
	{
		auto &expr = _145017_stmts;
		auto it = expr.begin();
		_iter_begin_1e7206bbe:;
		if (it != expr.end()) {
			jule::Ptr<_1e47ee918_stmt> _145121_stmt = *it;
			{
				_144843_tokens=_145121_stmt.get()._field_tokens;
				if ((_144843_tokens.len() == 0LL)) {
					goto _iter_next_1e7206bbe;
				};
				jule::Bool _145721_is_pub = false;;
				if ((_144843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_145721_is_pub=true;
					if ((_144843_tokens.len() == 1LL)) {
						_1e481bb22_push_err(_self_.ptr(), _144843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1e7206bbe;
					};
					_144843_tokens=_144843_tokens.slice(1LL);
				};
				jule::Ptr<_1e3347330_FnDecl> _146721_f = _1e482263e_build_fn(_self_, _144843_tokens,true,true);;
				if ((_146721_f != nullptr)) {
					if (_1e3347682_is_anon(_146721_f.ptr())) {
						_1e481bb22_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1e4826049_check_method_receiver(_self_.ptr(), _146721_f);
					if ((_146721_f.get()._field_generics.len() > 0LL)) {
						_1e481bb22_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_146721_f.get()._field_public=_145721_is_pub;
					_144917_methods = jule::alloc_for_append(_144917_methods,1);_144917_methods.__push(_146721_f);;
				};
			}
			_iter_next_1e7206bbe:;
			++it;
			goto _iter_begin_1e7206bbe;
		}
		_iter_end_1e7206bbe:;
	};
	return _144917_methods;
}



inline jule::Ptr<_1e33511c4_TraitDecl> _1e4826665_build_trait_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _148341_tokens) {
	if ((_148341_tokens.len() < 3LL)) {
		_1e481bb22_push_err(_self_.ptr(), _148341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e33511c4_TraitDecl> _148817_t = jule::new_ptr<_1e33511c4_TraitDecl>(_1e33511c4_TraitDecl{._field_token=_148341_tokens[1LL], });;
	if ((_148817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_ident=_148817_t.get()._field_token.get()._field_kind;
	jule::I64 _149617_i = 2LL;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _149717_body_tokens = _1e4819757_range(_149617_i,jule::Str("{", 1),jule::Str("}", 1),_148341_tokens);;
	if ((_149717_body_tokens == nullptr)) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_149617_i < _148341_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _148341_tokens[_149617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_methods=_1e4826357_build_trait_methods(_self_, _149717_body_tokens);
	_148817_t.get()._field_end=_148341_tokens[(_149617_i - 1LL)];
	return _148817_t;
}



inline jule::Ptr<_1e3347330_FnDecl> _1e4826973_build_cpp_link_fn(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _151241_tokens) {
	_151241_tokens=_151241_tokens.slice(1LL);
	jule::Ptr<_1e3347330_FnDecl> _151417_f = _1e482263e_build_fn(_self_, _151241_tokens,false,true);;
	if ((_151417_f != nullptr)) {
		if (_1e3347682_is_anon(_151417_f.ptr())) {
			_1e481bb22_push_err(_self_.ptr(), _151417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_151417_f.get()._field_cpp_linked=true;
	};
	return _151417_f;
}



inline jule::Ptr<_1e334830e_VarDecl> _1e4826c81_build_cpp_link_var(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _152442_tokens) {
	_152442_tokens=_152442_tokens.slice(1LL);
	jule::Ptr<_1e334830e_VarDecl> _152617_v = _1e481e619_build_var(_self_, _152442_tokens);;
	if ((_152617_v != nullptr)) {
		_152617_v.get()._field_cpp_linked=true;
		if ((_152617_v.get()._field_expr != nullptr)) {
			_1e481bb22_push_err(_self_.ptr(), _152617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _152617_v;
}



inline jule::Ptr<_1e3350ab9_StructDecl> _1e482708e_build_cpp_link_struct(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _153645_tokens) {
	_153645_tokens=_153645_tokens.slice(1LL);
	jule::Ptr<_1e3350ab9_StructDecl> _153817_s = _1e4825cc4_build_struct_decl(_self_, _153645_tokens);;
	if ((_153817_s != nullptr)) {
		_153817_s.get()._field_cpp_linked=true;
	};
	return _153817_s;
}



inline jule::Ptr<_1e334bb70_TypeAliasDecl> _1e48273be_build_cpp_link_type_alias(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _154549_tokens) {
	_154549_tokens=_154549_tokens.slice(1LL);
	jule::Ptr<_1e334bb70_TypeAliasDecl> _154717_t = _1e481d849_build_type_alias_decl(_self_, _154549_tokens);;
	if ((_154717_t != nullptr)) {
		_154717_t.get()._field_cpp_linked=true;
	};
	return _154717_t;
}



inline jule::Ptr<_1e334d05b_UseDecl> _1e48276dd_build_cpp_link_use(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _155442_tokens) {
	if ((_155442_tokens.len() == 1LL)) {
		_1e481bb22_push_err(_self_.ptr(), _155442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_155442_tokens=_155442_tokens.slice(1LL);
	;
	return _1e4823a80_build_use_decl(_self_.ptr(), _155442_tokens,true);
}



inline jule::Any _1e48279eb_build_cpp_link(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _156539_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _156617_token = _156539_tokens[0LL];;
	if ((_156539_tokens.len() == 1LL)) {
		_1e481bb22_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_156617_token=_156539_tokens[1LL];
	{
		auto &_match_expr{ _156617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e721bcd3:;
			{
				return static_cast<jule::Any>(_1e4826973_build_cpp_link_fn(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e721c9e8:;
			{
				return static_cast<jule::Any>(_1e4826c81_build_cpp_link_var(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e721ca5e:;
			{
				return static_cast<jule::Any>(_1e482708e_build_cpp_link_struct(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e721cac5:;
			{
				return static_cast<jule::Any>(_1e48273be_build_cpp_link_type_alias(_self_, _156539_tokens));
			}
		}
		else {
			_case_begin_1e721c90a:;
			{
				_1e481bb22_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e721c894:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3347330_FnDecl> _1e4827d09_get_method(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _158935_tokens) {
	jule::I64 _159017_i = 0LL;;
	jule::Ptr<_1e1c31ee6_Token> _159117_token = _158935_tokens[_159017_i];;
	if ((_159117_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_159017_i + 1LL) >= _158935_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159017_i)++;
		_159117_token=_158935_tokens[_159017_i];
	};
	if ((_159117_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_159017_i + 1LL) >= _158935_tokens.len())) {
			_1e481bb22_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159017_i)++;
		_159117_token=_158935_tokens[_159017_i];
	};
	if ((_159117_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1e481bb22_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3347330_FnDecl> _161517_f = _1e482263e_build_fn(_self_, _158935_tokens,true,false);;
	if (((_161517_f != nullptr) && _1e3347682_is_anon(_161517_f.ptr()))) {
		_1e481bb22_push_err(_self_.ptr(), _161517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _161517_f;
}



inline void _1e4828128_parse_impl_body(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e33517ce_Impl>& _162240_ipl, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _162257_tokens) {
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _162317_stmts = _1e47eecae_split_stmts(_162257_tokens);;
	{
		auto &expr = _162317_stmts;
		auto it = expr.begin();
		_iter_begin_1e7225e30:;
		if (it != expr.end()) {
			jule::Ptr<_1e47ee918_stmt> _162421_stmt = *it;
			{
				_162257_tokens=_162421_stmt.get()._field_tokens;
				jule::Ptr<_1e1c31ee6_Token> _162621_token = _162257_tokens[0LL];;
				jule::Bool _162721_is_pub = false;;
				{
					auto &_match_expr{ _162621_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1e72276e5:;
						{
							_1e481c7d2_push_directive(_self_.ptr(), _1e481c55c_build_directive(_self_.ptr(), _162257_tokens));
							goto _iter_next_1e7225e30;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1e722778e:;
						{
							_162721_is_pub=true;
							if ((_162257_tokens.len() == 1LL)) {
								_1e481bb22_push_err(_self_.ptr(), _162257_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1e7225e30;
							};
							_162257_tokens=_162257_tokens.slice(1LL);
							if ((_162257_tokens.len() > 0LL)) {
								_162621_token=_162257_tokens[0LL];
							};
						}
					}
					_match_end_1e722767e:;
				};
				{
					auto &_match_expr{ _162621_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1e722676b:;
						{
							jule::Ptr<_1e334830e_VarDecl> _164625_v = _1e481e619_build_var(_self_, _162257_tokens);;
							if ((_164625_v != nullptr)) {
								_164625_v.get()._field_public=_162721_is_pub;
								_162240_ipl.get()._field_statics = jule::alloc_for_append(_162240_ipl.get()._field_statics,1);_162240_ipl.get()._field_statics.__push(_164625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1e72284b5:;
						{
							jule::Ptr<_1e3347330_FnDecl> _165425_f = _1e4827d09_get_method(_self_, _162257_tokens);;
							if ((_165425_f != nullptr)) {
								_1e4826049_check_method_receiver(_self_.ptr(), _165425_f);
								_1e4828a63_apply_fn_meta(_self_.ptr(), _165425_f,_162721_is_pub);
								_162240_ipl.get()._field_methods = jule::alloc_for_append(_162240_ipl.get()._field_methods,1);_162240_ipl.get()._field_methods.__push(_165425_f);;
							};
						}
					}
					else {
						_case_begin_1e7227bce:;
						{
							_1e481bb22_push_err(_self_.ptr(), _162621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1e7225e30;
						}
					}
					_match_end_1e7229a16:;
				};
			}
			_iter_next_1e7225e30:;
			++it;
			goto _iter_begin_1e7225e30;
		}
		_iter_end_1e7225e30:;
	};
}



inline jule::Ptr<_1e33517ce_Impl> _1e4828436_build_impl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _166734_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _166817_token = _166734_tokens[0LL];;
	if ((_166734_tokens.len() < 2LL)) {
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _167417_i = 1LL;;
	jule::Ptr<_1e3335807_TypeDecl> _167618_base;;
	jule::Bool _167628_ok;;
	std::tie(_167618_base,_167628_ok) = _1e481d53b_build_type(_self_, _166734_tokens,(&(_167417_i)),true);
	if ((!(_167628_ok))) {
		return nullptr;
	};
	if ((_167417_i >= _166734_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e33517ce_Impl> _168517_ipl = jule::new_ptr<_1e33517ce_Impl>(_1e33517ce_Impl{._field_base=_167618_base, });;
	_166817_token=_166734_tokens[_167417_i];
	if ((_166817_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_166817_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_166817_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_168517_ipl.get()._field_base,_168517_ipl.get()._field_dest) = std::make_tuple(_168517_ipl.get()._field_dest,_168517_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_167417_i)++;
	if ((_167417_i >= _166734_tokens.len())) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_168517_ipl.get()._field_dest,_167628_ok) = _1e481d53b_build_type(_self_, _166734_tokens,(&(_167417_i)),true);
	if ((!(_167628_ok))) {
		return nullptr;
	};
	if ((_167417_i >= _166734_tokens.len())) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _172517_body_tokens = _1e4819757_range(_167417_i,jule::Str("{", 1),jule::Str("}", 1),_166734_tokens);;
	if ((_172517_body_tokens == nullptr)) {
		_1e481b4e5_stop(_self_.ptr());
		_1e481bb22_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_167417_i < _166734_tokens.len())) {
		_1e481bb22_push_err(_self_.ptr(), _166734_tokens[_167417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_168517_ipl.get()._field_end=_166734_tokens[(_167417_i - 1LL)];
	_1e4828128_parse_impl_body(_self_, _168517_ipl,_172517_body_tokens);
	return _168517_ipl;
}



inline jule::Any _1e4828744_build_node_data(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _174040_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _174117_token = _174040_tokens[0LL];;
	{
		auto &_match_expr{ _174117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e724082e:;
			{
				jule::Ptr<_1e3347330_FnDecl> _174521_f = _1e482263e_build_fn(_self_, _174040_tokens,false,false);;
				if ((_174521_f != nullptr)) {
					_174521_f.get()._field_global=true;
					if (_1e3347682_is_anon(_174521_f.ptr())) {
						_1e481bb22_push_err(_self_.ptr(), _174521_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_174521_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1e7240895:;
			{
				return static_cast<jule::Any>(_1e481e619_build_var(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e724109e:;
			{
				return static_cast<jule::Any>(_1e481d849_build_type_alias_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1e7241115:;
			{
				return _1e4825367_build_node_enum_decl(_self_, _174040_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e724117b:;
			{
				return static_cast<jule::Any>(_1e4825cc4_build_struct_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e72411e2:;
			{
				return static_cast<jule::Any>(_1e4826665_build_trait_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e7241258:;
			{
				return static_cast<jule::Any>(_1e4828436_build_impl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e72412d0:;
			{
				return _1e48279eb_build_cpp_link(_self_, _174040_tokens);
			}
		}
		else {
			_case_begin_1e724071e:;
			{
				_1e481bb22_push_err(_self_.ptr(), _174117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e7240675:;
	};
}



inline void _1e4828a63_apply_fn_meta(_1e481b1b5_Parser* _self_, jule::Ptr<_1e3347330_FnDecl>& _177637_f, jule::Bool _177649_is_pub) {
	_177637_f.get()._field_public=_177649_is_pub;
	_177637_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1e4828d82_apply_meta(_1e481b1b5_Parser* _self_, _1e3302032_Node& _178234_node, jule::Bool _178246_is_pub) {
	{
		auto &_match_expr{ _178234_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e334830e_VarDecl>>()) {
			_case_begin_1e7247d42:;
			{
				jule::Ptr<_1e334830e_VarDecl> _178521_v = _178234_node._field_data.operator jule::Ptr<_1e334830e_VarDecl>();;
				if ((_178521_v == nullptr)) {
					return;;
				};
				_178521_v.get()._field_public=_178246_is_pub;
				_178521_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3347330_FnDecl>>()) {
			_case_begin_1e72474a1:;
			{
				jule::Ptr<_1e3347330_FnDecl> _179321_f = _178234_node._field_data.operator jule::Ptr<_1e3347330_FnDecl>();;
				if ((_179321_f == nullptr)) {
					return;;
				};
				_1e4828a63_apply_fn_meta(&(*_self_), _179321_f,_178246_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334bb70_TypeAliasDecl>>()) {
			_case_begin_1e7247528:;
			{
				jule::Ptr<_1e334bb70_TypeAliasDecl> _179921_tad = _178234_node._field_data.operator jule::Ptr<_1e334bb70_TypeAliasDecl>();;
				if ((_179921_tad == nullptr)) {
					return;;
				};
				_179921_tad.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e334e007_EnumDecl>>()) {
			_case_begin_1e72475a0:;
			{
				jule::Ptr<_1e334e007_EnumDecl> _180521_ed = _178234_node._field_data.operator jule::Ptr<_1e334e007_EnumDecl>();;
				if ((_180521_ed == nullptr)) {
					return;;
				};
				_180521_ed.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3350118_TypeEnumDecl>>()) {
			_case_begin_1e724789c:;
			{
				jule::Ptr<_1e3350118_TypeEnumDecl> _181121_ted = _178234_node._field_data.operator jule::Ptr<_1e3350118_TypeEnumDecl>();;
				if ((_181121_ted == nullptr)) {
					return;;
				};
				_181121_ted.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3350ab9_StructDecl>>()) {
			_case_begin_1e7247913:;
			{
				jule::Ptr<_1e3350ab9_StructDecl> _181721_sd = _178234_node._field_data.operator jule::Ptr<_1e3350ab9_StructDecl>();;
				if ((_181721_sd == nullptr)) {
					return;;
				};
				_181721_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_181721_sd.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33511c4_TraitDecl>>()) {
			_case_begin_1e7247979:;
			{
				jule::Ptr<_1e33511c4_TraitDecl> _182521_td = _178234_node._field_data.operator jule::Ptr<_1e33511c4_TraitDecl>();;
				if ((_182521_td == nullptr)) {
					return;;
				};
				_182521_td.get()._field_public=_178246_is_pub;
			}
		}
		else {
			_case_begin_1e72473e6:;
			{
				if (_178246_is_pub) {
					_1e481bb22_push_err(&(*_self_), _178234_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e724724d:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1e48291b2_build_general_scope_node_data(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _183753_st) {
	jule::Bool _183769_is_pub = jule::Bool();
	jule::Any _183783_data = jule::Any();
	if ((_183753_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_183769_is_pub=true;
		_183753_st=_183753_st.slice(1LL);
		if ((_183753_st.len() == 0LL)) {
			_1e481bb22_push_err(_self_.ptr(), _183753_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_183769_is_pub,_183783_data);
		};
	};
	_183783_data=_1e4828744_build_node_data(_self_, _183753_st);
	return std::make_tuple(_183769_is_pub,_183783_data);
}



inline void _1e4829448_push_use_decl(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e334d05b_UseDecl>& _185238_decl) {
	_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_185238_decl);;
	if ((_self_.get()._field_ast.get()._field_nodes.len() > 0LL)) {
		_1e481bb22_push_err(_self_.ptr(), _185238_decl.get()._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1e481be41_push_suggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e4829756_push_meta_nodes(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _186040_tokens) {
	{
		auto &_match_expr{ _186040_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e72553c1:;
			{
				;
				jule::Ptr<_1e334d05b_UseDecl> _186421_decl = _1e4823a80_build_use_decl(_self_.ptr(), _186040_tokens,false);;
				_1e4829448_push_use_decl(_self_, _186421_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e7255437:;
			{
				if (((_186040_tokens.len() > 1LL) && (_186040_tokens[1LL].get()._field_id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1e334d05b_UseDecl> _186925_decl = _1e48276dd_build_cpp_link_use(_self_, _186040_tokens);;
					_1e4829448_push_use_decl(_self_, _186925_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1e72554ae:;
			{
				_1e481c7d2_push_directive(_self_.ptr(), _1e481c55c_build_directive(_self_.ptr(), _186040_tokens));
				return true;
			}
		}
		_match_end_1e72552c2:;
	};
	return false;
}



inline _1e3302032_Node _1e4829a64_parse_node(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _188035_st) {
	_1e3302032_Node _188117_node = _1e3302032_Node{._field_token=_188035_st[0LL], };;
	if (_1e4829756_push_meta_nodes(_self_, _188035_st)) {
		return _188117_node;
	};
	jule::Bool _188914_is_pub;;
	jule::Any _188926_data;;
	std::tie(_188914_is_pub,_188926_data) = _1e48291b2_build_general_scope_node_data(_self_, _188035_st);
	if ((_188926_data == nullptr)) {
		return _188117_node;
	};
	_188117_node._field_data=_188926_data;
	_1e4828d82_apply_meta(_self_.ptr(), _188117_node,_188914_is_pub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e481bb22_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188117_node;
}



inline void _1e4829cd9_append_node(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _190436_st) {
	if ((_190436_st.len() == 0LL)) {
		return;;
	};
	_1e3302032_Node _190917_node = _1e4829a64_parse_node(_self_, _190436_st);;
	if (((_190917_node._field_data == nullptr) || _1e481b759_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_190917_node);;
}



inline void _1e482a24b_remove_range(_1e481b1b5_Parser* _self_, jule::I64 _191631_i, jule::Str _191639_kind, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _191651_tokens, jule::Slice<jule::I64>& _191674_ranges) {
	jule::Str _191713_close = _1e481a22a_get_close_kind_of_brace(_191639_kind);;
	for (; (_191631_i >= 0LL); (_191631_i)--) {
		{
			jule::Ptr<_1e1c31ee6_Token> _191917_tok = _191651_tokens[_191674_ranges[_191631_i]];;
			if ((_191917_tok.get()._field_kind != _191713_close)) {
				goto _iter_next_1e72600e0;
			};
			_191674_ranges=jule::append(_191674_ranges.slice(0LL,_191631_i),_191674_ranges.slice((_191631_i + 1LL)));
			goto _iter_end_1e72600e0;
		}
	_iter_next_1e72600e0:;
	}
	_iter_end_1e72600e0:;;
}



inline void _1e482a636_push_wrong_order_close_err(_1e481b1b5_Parser* _self_, jule::Ptr<_1e1c31ee6_Token>& _192846_t, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _192858_tokens, jule::Slice<jule::I64>& _192877_ranges) {
	{
		auto &_match_expr{ _192858_tokens[_192877_ranges[(_192877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1e7262246:;
			{
				_1e481bb22_push_err(&(*_self_), _192846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1e72622bd:;
			{
				_1e481bb22_push_err(&(*_self_), _192846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1e7262345:;
			{
				_1e481bb22_push_err(&(*_self_), _192846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e7262114:;
	};
}



inline void _1e482aaa9_push_range_close(_1e481b1b5_Parser* _self_, jule::Ptr<_1e1c31ee6_Token> _193935_t, jule::Str _193946_left, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _193958_tokens, jule::Slice<jule::I64>& _193981_ranges) {
	jule::I64 _194013_n = _193981_ranges.len();;
	if ((_194013_n == 0LL)) {
		{
			auto &_match_expr{ _193935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1e7264dd6:;
				{
					_1e481bb22_push_err(&(*_self_), _193935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1e7264e4c:;
				{
					_1e481bb22_push_err(&(*_self_), _193935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1e7264ec4:;
				{
					_1e481bb22_push_err(&(*_self_), _193935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1e7264b83:;
		};
		return;;
	} else if ((_193958_tokens[_193981_ranges[(_194013_n - 1LL)]].get()._field_kind != _193946_left)) {
		_1e482a636_push_wrong_order_close_err(&(*_self_), _193935_t,_193958_tokens,_193981_ranges);
	};
	_1e482a24b_remove_range(&(*_self_), static_cast<jule::I64>((_194013_n - 1LL)),_193935_t.get()._field_kind,_193958_tokens,_193981_ranges);
}



inline void _1e482ad2e_check_ranges(_1e481b1b5_Parser* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _195732_tokens) {
	jule::Slice<jule::I64> _195817_ranges = nullptr;;
	{
		auto &expr = _195732_tokens;
		auto it = expr.begin();
		_iter_begin_1e726822a:;
		if (it != expr.end()) {
			jule::I64 _196013_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> &_196016_token = *it;
			{
				if ((_196016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1e726822a;
				};
				{
					auto &_match_expr{ _196016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1e72694b2:;
						{
							_195817_ranges = jule::alloc_for_append(_195817_ranges,1);_195817_ranges.__push(_196013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e726955b:;
						{
							_1e482aaa9_push_range_close(&(*_self_), _196016_token,jule::Str("(", 1),_195732_tokens,_195817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e72695c2:;
						{
							_1e482aaa9_push_range_close(&(*_self_), _196016_token,jule::Str("{", 1),_195732_tokens,_195817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e7269638:;
						{
							_1e482aaa9_push_range_close(&(*_self_), _196016_token,jule::Str("[", 1),_195732_tokens,_195817_ranges);
						}
					}
					_match_end_1e726903e:;
				};
			}
			_iter_next_1e726822a:;
			++it;
			_196013_i++;
			goto _iter_begin_1e726822a;
		}
		_iter_end_1e726822a:;
	};
	{
		auto &expr = _195817_ranges;
		auto it = expr.begin();
		_iter_begin_1e72681b4:;
		if (it != expr.end()) {
			jule::I64 _197816_i = *it;
			{
				jule::Ptr<_1e1c31ee6_Token> _197917_token = _195732_tokens[_197816_i];;
				{
					auto &_match_expr{ _197917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e726bd00:;
						{
							_1e481bb22_push_err(&(*_self_), _197917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1e726bd99:;
						{
							_1e481bb22_push_err(&(*_self_), _197917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e726be10:;
						{
							_1e481bb22_push_err(&(*_self_), _197917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1e726bc34:;
				};
			}
			_iter_next_1e72681b4:;
			++it;
			goto _iter_begin_1e72681b4;
		}
		_iter_end_1e72681b4:;
	};
}



inline void _1e482b0a4_parse(jule::Ptr<_1e481b1b5_Parser> _self_, jule::Ptr<_1e1c37381_File>& _199130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e3301383_Ast>(_1e3301383_Ast{._field_file=_199130_f, });
	_1e482ad2e_check_ranges(_self_.ptr(), _199130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _200117_stmts = _1e47eecae_split_stmts(_199130_f.get()._field_tokens);;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1e47ee918_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1e726eebd;
			};
			if ((!(_1e1906e85_is_top_directive(_200621_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_1e726eebd;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_1e481c55c_build_directive(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_1e726eebd:;
	}
	_iter_end_1e726eebd:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1e47ee918_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1e4829cd9_append_node(_self_, _202321_stmt.get()._field_tokens);
			if (_1e481b759_stopped(_self_.ptr())) {
				goto _iter_end_1e7273059;
			};
		}
	_iter_next_1e7273059:;
	}
	_iter_end_1e7273059:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e481bb22_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e481b1b5_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e482cb33_push_err(_1e482c58e_TypeBuilder* _self_, jule::Ptr<_1e1c31ee6_Token> _7827_token, jule::Str _7842_fmt) {
	if ((*_self_)._field_err) {
		_1e481bb22_push_err((*_self_)._field_p.ptr(), _7827_token,_7842_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1e482ce52_push_suggestion(_1e482c58e_TypeBuilder* _self_, jule::Str _8534_fmt, jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1e481be41_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,jule::Any(_8547_args));
	};
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482d1b6_build_prim(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e3335807_TypeDecl> _9217_t = _1e482bc42_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482d42a_build_namespace(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e3335807_TypeDecl> _9817_t = jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1e33368c4_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1e33368c4_NamespaceTypeDecl>();;
	jule::I64 _10317_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10317_n & 1LL) == 0LL)) {
				if ((_10521_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1e482cb33_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1e482ce52_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);;
			} else if ((_10521_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1e727d77e;
			};
			(_10317_n)++;
		}
	_iter_next_1e727d77e:;
	}
	_iter_end_1e727d77e:;;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1e482db67_build_ident(&(*_self_));
	_9817_t.get()._field_kind=static_cast<jule::Any>(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _1e482d68e_build_generics(_1e482c58e_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e1c31ee6_Token> _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13113_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _13617_parts = _1e482d903_ident_generics(&(*_self_));;
	if ((_13617_parts.len() == 0LL)) {
		_1e482cb33_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e3335807_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1e3335807_TypeDecl>>::alloc(0LL,_13617_parts.len());;
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1e728616b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _14321_part = *it;
			{
				jule::I64 _14421_j = 0LL;;
				jule::Ptr<_1e3335807_TypeDecl> _14522_t;;
				std::tie(_14522_t,std::ignore) = _1e481d53b_build_type((*_self_)._field_p, _14321_part,(&(_14421_j)),true);
				if ((_14421_j < _14321_part.len())) {
					_1e482cb33_push_err(&(*_self_), _14321_part[_14421_j],jule::Str("invalid syntax", 14));
				};
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);;
			}
			_iter_next_1e728616b:;
			++it;
			goto _iter_begin_1e728616b;
		}
		_iter_end_1e728616b:;
	};
	return _14217_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e482d903_ident_generics(_1e482c58e_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));;
	jule::I64 _15617_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e728a12b:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e728a1a3:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1e7289dea:;
				};
			};
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1e7288c95;
			};
		}
	_iter_next_1e7288c95:;
	}
	_iter_end_1e7288c95:;;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _17217_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _17318_parts;;
	jule::Slice<_1e1905060_Log> _17325_errors;;
	std::tie(_17318_parts,_17325_errors) = _1e4819e61_parts(_17217_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17325_errors);
	};
	return _17318_parts;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482db67_build_ident(_1e482c58e_TypeBuilder* _self_) {
	jule::Bool _18117_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_18117_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1e482d42a_build_namespace(&(*_self_));
	};
	jule::Ptr<_1e1c31ee6_Token> _18517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e3335dbd_IdentTypeDecl> _18617_it = jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_18517_token, ._field_ident=_18517_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e3335807_TypeDecl> _19217_itd = jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_18617_it)});;
	if (((!(_18117_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_18617_it.get()._field_generics=_1e482d68e_build_generics(&(*_self_));
		return _19217_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1e482cb33_push_err(&(*_self_), _18517_token,jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1e482cb33_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	jule::Ptr<_1e333651c_SubIdentTypeDecl> _20917_sit = jule::new_ptr<_1e333651c_SubIdentTypeDecl>();;
	_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_18617_it);;
	jule::Ptr<_1e3335807_TypeDecl> _21117_ident = _1e482db67_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _21117_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3335dbd_IdentTypeDecl>>()) {
			_case_begin_1e7295389:;
			{
				_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_21117_ident.get()._field_kind.operator jule::Ptr<_1e3335dbd_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333651c_SubIdentTypeDecl>>()) {
			_case_begin_1e7295455:;
			{
				_20917_sit.get()._field_idents=jule::append(_20917_sit.get()._field_idents,_21117_ident.get()._field_kind.operator jule::Ptr<_1e333651c_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_1e7295334:;
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_20917_sit)});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482ddcb_build_cpp_link(_1e482c58e_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1e482cb33_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1e3335807_TypeDecl> _23017_t = _1e482db67_build_ident(&(*_self_));;
	_23017_t.get()._field_kind.operator jule::Ptr<_1e3335dbd_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _23017_t;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482e140_build_fn(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _23617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e3347330_FnDecl> _23717_f = _1e48221dd_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23717_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1e3347682_is_anon(_23717_f.ptr())))) {
		_1e482cb33_push_err(&(*_self_), _23717_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_23617_token, ._field_kind=static_cast<jule::Any>(_23717_f)});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482e3a4_build_ptr(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _25117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e482cb33_push_err(&(*_self_), _25117_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3337683_PtrTypeDecl>(_1e3337683_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1e3335807_TypeDecl> _26817_elem = _1e48306d5_step(&(*_self_));;
	if ((_26817_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3337683_PtrTypeDecl>(_1e3337683_PtrTypeDecl{._field_elem=_26817_elem}))});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482e618_build_sptr(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _28217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e482cb33_push_err(&(*_self_), _28217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e3335807_TypeDecl> _28917_elem = _1e48306d5_step(&(*_self_));;
	if ((_28917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_28217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3336bb0_SptrTypeDecl>(_1e3336bb0_SptrTypeDecl{._field_elem=_28917_elem}))});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482e87c_build_op(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _30317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _30317_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e72a39b3:;
			{
				return _1e482e3a4_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e72a3a29:;
			{
				return _1e482e618_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e72a3a90:;
			{
				return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3336bb0_SptrTypeDecl>(_1e3336bb0_SptrTypeDecl{._field_elem=_1e482e618_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1e72a3908:;
			{
				_1e482cb33_push_err(&(*_self_), _30317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1e72a385e:;
	};
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482eae1_build_slc(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _32217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e3335807_TypeDecl> _32417_elem = _1e48306d5_step(&(*_self_));;
	if ((_32417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_32217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e33370ab_SlcTypeDecl>(_1e33370ab_SlcTypeDecl{._field_elem=_32417_elem}))});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482ed55_build_arr(_1e482c58e_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1e482cb33_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34513_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1e3335807_TypeDecl> _34717_elem = _1e48306d5_step(&(*_self_));;
	if ((_34717_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e3337d15_ArrTypeDecl> _35217_arrt = jule::new_ptr<_1e3337d15_ArrTypeDecl>(_1e3337d15_ArrTypeDecl{._field_elem=_34717_elem, });;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _35617_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34513_expr_delta);;
	std::tie(std::ignore,_35617_expr_tokens) = _1e48199ee_range_last(_35617_expr_tokens);
	_35617_expr_tokens=_35617_expr_tokens.slice(1LL,(_35617_expr_tokens.len() - 1LL));
	jule::Ptr<_1e1c31ee6_Token> _35917_token = _35617_expr_tokens[0LL];;
	if ((((_35617_expr_tokens.len() == 1LL) && (_35917_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_35917_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_35217_arrt.get()._field_size=_1e481c24e_build_expr((*_self_)._field_p, _35617_expr_tokens);
	};
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_35917_token, ._field_kind=static_cast<jule::Any>(_35217_arrt)});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e483020c_build_map(_1e482c58e_TypeBuilder* _self_, jule::I64 _37228_colon, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _37245_tokens) {
	jule::Ptr<_1e1c31ee6_Token> _37317_colon_token = (*_self_)._field_tokens[_37228_colon];;
	if (((_37228_colon == 0LL) || ((_37228_colon + 1LL) >= _37245_tokens.len()))) {
		_1e482cb33_push_err(&(*_self_), _37317_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _37817_key_tokens = _37245_tokens.slice(0LL,_37228_colon);;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _37917_val_tokens = _37245_tokens.slice((_37228_colon + 1LL));;
	jule::Ptr<_1e3338563_MapTypeDecl> _38017_mapt = jule::new_ptr<_1e3338563_MapTypeDecl>(_1e3338563_MapTypeDecl{});;
	jule::I64 _38217_j = 0LL;;
	jule::Ptr<_1e3335807_TypeDecl> _38318_keyt;;
	jule::Bool _38328_ok;;
	std::tie(_38318_keyt,_38328_ok) = _1e481d53b_build_type((*_self_)._field_p, _37817_key_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37817_key_tokens.len())) {
		_1e482cb33_push_err(&(*_self_), _37817_key_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_key=_38318_keyt;
	_38217_j=0LL;
	jule::Ptr<_1e3335807_TypeDecl> _39218_valt;;
	std::tie(_39218_valt,_38328_ok) = _1e481d53b_build_type((*_self_)._field_p, _37917_val_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37917_val_tokens.len())) {
		_1e482cb33_push_err(&(*_self_), _37917_val_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_val=_39218_valt;
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_37317_colon_token, ._field_kind=static_cast<jule::Any>(_38017_mapt)});
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e4830471_build_enumerable(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _40717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40717_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_40717_token.get()._field_kind != jule::Str("[", 1)))) {
		_1e482cb33_push_err(&(*_self_), _40717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40717_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40717_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_40717_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1e482eae1_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _42118_map_tokens;;
	jule::I64 _42130_colon;;
	std::tie(_42118_map_tokens,_42130_colon) = _1e482c083_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_42130_colon == -1LL)) {
		return _1e482ed55_build_arr(&(*_self_));
	};
	return _1e483020c_build_map(&(*_self_), _42130_colon,_42118_map_tokens);
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e48306d5_step(_1e482c58e_TypeBuilder* _self_) {
	jule::Ptr<_1e1c31ee6_Token> _43013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _43013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e72b8d91:;
			{
				return _1e482d1b6_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e72b8e07:;
			{
				return _1e482db67_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e72b8e6d:;
			{
				return _1e482ddcb_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e72b9842:;
			{
				return _1e482e140_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e72b98a8:;
			{
				return _1e482e87c_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e72b991e:;
			{
				return _1e4830471_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1e72b8ca3:;
			{
				((*((*_self_)._field_i)))++;
				_1e482cb33_push_err(&(*_self_), _43013_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1e72b8c09:;
	};
}



inline std::tuple<jule::Ptr<_1e3335807_TypeDecl>,jule::Bool> _1e4830949_build(_1e482c58e_TypeBuilder* _self_) {
	jule::Bool _45344_ok = jule::Bool();
	jule::Ptr<_1e3335807_TypeDecl> _45417_root = _1e48306d5_step(&(*_self_));;
	if ((_45417_root == nullptr)) {
		_45344_ok = false;
		return std::make_tuple(_1e482b9cd_build_void_type(),_45344_ok);
	};
	_45344_ok = true;
	return std::make_tuple(_45417_root,_45344_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1e482c58e_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4171114_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1e41729b7_push_err(_1e4172467_DirectiveEval* _self_, jule::Ptr<_1e1c31ee6_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_1e19054a0_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e4172d6e_split_operans(_1e4172467_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e72e111b:;
						{
							(_3717_range_n)++;
							goto _iter_next_1e72e001b;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e72e1182:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1e72e0e0c:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1e72e001b;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1e72e001b:;
	}
	_iter_end_1e72e001b:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1e41729b7_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1e417317c_eval_directive_ident(_1e4172467_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1e72e46b3:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1e72e46b3:;
			++it;
			goto _iter_begin_1e72e46b3;
		}
		_iter_end_1e72e46b3:;
	};
	return false;
}



inline jule::Bool _1e417348a_eval_directive_part(_1e4172467_DirectiveEval* _self_, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1e41729b7_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1e417317c_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1e41736ee_eval(_1e4172467_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1e41729b7_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _11317_logical_or_parts = _1e4172d6e_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1e72ea477:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _12021_logical_and_parts = _1e4172d6e_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1e72ebc70:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_1e1c31ee6_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_1e1c31ee6_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1e41729b7_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1e417348a_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1e72ebc70:;
						++it;
						goto _iter_begin_1e72ebc70;
					}
					_iter_end_1e72ebc70:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1e72ea477:;
			++it;
			goto _iter_begin_1e72ea477;
		}
		_iter_end_1e72ea477:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4172467_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e426a131_JuleImporter> static__1e427de58_new(_1e4171114_CompileInfo _5823_info) {
	jule::Ptr<_1e426a131_JuleImporter> _5917_imp = jule::new_ptr<_1e426a131_JuleImporter>(_1e426a131_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1e1927934_PATH_STDLIB}), });;
	_1e417192d_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _1e429182d_all_packages(_1e426a131_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e4295d4e_set_mod_path(_1e426a131_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1e42c49d7_get_mod_path(_1e426a131_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1e42d4e37_mod_by_id(_1e426a131_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e42de260_get_import(_1e426a131_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1e730432c:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1e730432c:;
			++it;
			goto _iter_begin_1e730432c;
		}
		_iter_end_1e730432c:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e3301383_Ast>>,jule::Slice<_1e1905060_Log>> _1e42e01ea_import_package(_1e426a131_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_2162e46d8_DirEntry>> _9717_dirents = ({
		auto except = static__1e18910d9_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1e1905060_Log>::make({_1e4264757_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1e41824aa_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1e1905060_Log> _10525_errs = _1e4182741_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1e3301383_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e3301383_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1e7307eac:;
		if (it != expr.end()) {
			jule::Ptr<_2162e46d8_DirEntry> _11316_dirent = *it;
			{
				if ((_22ebe5e06_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_1e188be1a_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1e7307eac;
				};
				jule::Str _11917__path = _1e189089c_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_1e1c37381_File> _12021_file = _1e1c388b0_new_file_set(_11917__path);;
				_1e1c37a13_fill(_12021_file.ptr(), _1e4247d89_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1e1905060_Log> _12221_errors = _1e1c44327_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1e479d235_FileInfo> _12721_finfo = _1e47a5eeb_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1e4156979_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1e7307eac;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1e1905060_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1e431a478_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1e7307eac;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1e7307eac:;
			++it;
			goto _iter_begin_1e7307eac;
		}
		_iter_end_1e7307eac:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1e4306376_imported(_1e426a131_JuleImporter* _self_, jule::Ptr<_1e3ee752e_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1e730e26b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1e730e26b:;
			++it;
			goto _iter_begin_1e730e26b;
		}
		_iter_end_1e730e26b:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1e7310b52:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1e7310b52:;
				++it;
				_16217_i++;
				goto _iter_begin_1e7310b52;
			}
			_iter_end_1e7310b52:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1e1905060_Log>> _1e431a478_is_pass_build_directives(_1e426a131_JuleImporter* _self_, jule::Ptr<_1e3301383_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1e7313dca:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1e7313dca;
				};
				_1e4172467_DirectiveEval _18421_de = _1e4172467_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1e41736ee_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1e7313dca:;
			++it;
			goto _iter_begin_1e7313dca;
		}
		_iter_end_1e7313dca:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e426a131_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4488151_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e733634d_is_common_ordered(jule::Slice<jule::Ptr<_1e3318840_Struct>>& _1837_s, jule::Ptr<_1e3318840_Struct> _1846_t) {
	jule::Ptr<_1e3318840_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e3318840_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1e7339285:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1e7339285;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1e7339285:;
			++it;
			goto _iter_begin_1e7339285;
		}
		_iter_end_1e7339285:;
	};
	return false;
}

inline jule::Bool _1e733e653_is_common_ordered(jule::Slice<jule::Ptr<_1e401a92b_Var>>& _1837_s, jule::Ptr<_1e401a92b_Var> _1846_t) {
	jule::Ptr<_1e401a92b_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e401a92b_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1e7342546:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1e7342546;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1e7342546:;
			++it;
			goto _iter_begin_1e7342546;
		}
		_iter_end_1e7342546:;
	};
	return false;
}



inline void _1e7332415_order_common(jule::Slice<jule::Ptr<_1e3318840_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1e73336e1:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e3318840_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1e73336e1:;
			++it;
			_4114_j++;
			goto _iter_begin_1e73336e1;
		}
		_iter_end_1e73336e1:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1e733634d_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1e7335c65:;
			}
			_iter_end_1e7335c65:;;
		}
	_iter_next_1e7333669:;
	}
	_iter_end_1e7333669:;;
}

inline void _1e7332ec6_order_common(jule::Slice<jule::Ptr<_1e401a92b_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1e733b9e6:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e401a92b_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1e733b9e6:;
			++it;
			_4114_j++;
			goto _iter_begin_1e733b9e6;
		}
		_iter_end_1e733b9e6:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1e733e653_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1e733e06a:;
			}
			_iter_end_1e733e06a:;;
		}
	_iter_next_1e733b96e:;
	}
	_iter_end_1e733b96e:;;
}



inline void static__1e445686c_order_structures(jule::Slice<jule::Ptr<_1e3318840_Struct>>& _6141_structs) {
	_1e7332415_order_common(_6141_structs);
}



inline void static__1e446d8a6_order_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>& _6735_vars) {
	_1e7332ec6_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e425c91a_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e48e2c92_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1e4925775_optimize_child(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3e547aa_Scope>& _3839_s) {
	jule::Ptr<_1e49252ad_ScopeDeadCode> _3917_sdc = jule::new_ptr<_1e49252ad_ScopeDeadCode>(_1e49252ad_ScopeDeadCode{._field_parent=_self_, ._field_s=_3839_s, ._field_stmts=(&(_3839_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1e4927b0c_optimize_stmts(_3917_sdc);
	};
}



inline void _1e49259ea_optimize_body_child(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3e547aa_Scope>& _4944_s) {
	jule::Ptr<_1e49252ad_ScopeDeadCode> _5017_sdc = jule::new_ptr<_1e49252ad_ScopeDeadCode>(_1e49252ad_ScopeDeadCode{._field_s=_4944_s, ._field_stmts=(&(_4944_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1e4927b0c_optimize_stmts(_5017_sdc);
	};
}



inline void _1e4925c70_optimize_expr_model(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Any& _5944_model) {
	_1e4928e82_ExprDeadCode _6013_edc = static__1e492957b_new(_self_);;
	_1e492ea26_optimize(&_6013_edc, _5944_model);
}



inline void _1e4925e4b_eliminate_followed(_1e49252ad_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1e49252ad_ScopeDeadCode> _7117_parent = (*_self_)._field_parent;;
	while ((_7117_parent != nullptr)) {
		{
			{
				(*(_7117_parent.get()._field_stmts))=(*(_7117_parent.get()._field_stmts)).slice(0LL,(_7117_parent.get()._field_i + 1LL));
			};
			_7117_parent=_7117_parent.get()._field_parent;
		}
	_iter_next_1e73b4d7c:;
	}
	_iter_end_1e73b4d7c:;;
}



inline void _1e49261c1_push_goto(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecd867_GotoSt> _8033_gt) {
	jule::I64 _8117_i = 0LL;;
	for (; (_8117_i < _self_.get()._field_labels.get().len()); (_8117_i)++) {
		{
			if ((_8033_gt.get()._field_ident == (*(_self_.get()._field_labels))[_8117_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1e73b77a8:;
	}
	_iter_end_1e73b77a8:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>>::make({_8033_gt}));
}



inline void _1e4926446_push_label(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecd67a_Label> _9034_l) {
	jule::I64 _9117_i = 0LL;;
	while ((_9117_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_9034_l.get()._field_ident == (*(_self_.get()._field_gotos))[_9117_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_9117_i)), ((*(_self_.get()._field_gotos)).slice((_9117_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1e73b9524;
			};
			(_9117_i)++;
		}
	_iter_next_1e73b9524:;
	}
	_iter_end_1e73b9524:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e3ecd67a_Label>>::make({_9034_l}));
}



inline void _1e49266bb_optimize_range_iter(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecd0b4_RangeIter> _10343_it) {
	_1e4925c70_optimize_expr_model(_self_, _10343_it.get()._field_expr.get()._field_model);
	_1e49259ea_optimize_body_child(_self_, _10343_it.get()._field_scope);
}



inline void _1e4926941_optimize_while_iter(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3eccdc7_WhileIter> _10843_it) {
	_1e4925c70_optimize_expr_model(_self_, _10843_it.get()._field_expr);
	if ((_10843_it.get()._field_next != nullptr)) {
		_1e4927931_optimize_stmt(_self_, _10843_it.get()._field_next);
	};
	_1e49259ea_optimize_body_child(_self_, _10843_it.get()._field_scope);
}



inline void _1e4926bb6_optimize_inf_iter(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3eccbda_InfIter> _11641_it) {
	_1e49259ea_optimize_body_child(_self_, _11641_it.get()._field_scope);
}



inline void _1e4926e3b_optimize_conditional(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecc9ed_Conditional> _12044_c) {
	{
		auto &expr = _12044_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e73c00da:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eb7ea0_If> _12121_case = *it;
			{
				if ((_12121_case != nullptr)) {
					_1e4925c70_optimize_expr_model(_self_, _12121_case.get()._field_expr);
					_1e49259ea_optimize_body_child(_self_, _12121_case.get()._field_scope);
				};
			}
			_iter_next_1e73c00da:;
			++it;
			goto _iter_begin_1e73c00da;
		}
		_iter_end_1e73c00da:;
	};
	if ((_12044_c.get()._field_default != nullptr)) {
		if ((_12044_c.get()._field_elifs.len() == 0LL)) {
			_1e4925775_optimize_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		} else {
			_1e49259ea_optimize_body_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1e49271b1_optimize_match(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ece11a_Match> _13838_m) {
	{
		auto &expr = _13838_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e73c2c69:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ece538_Case> _13921_case = *it;
			{
				{
					auto &expr = _13921_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1e73c35d8:;
					if (it != expr.end()) {
						jule::Ptr<_1e40662e5_Data> _14025_expr = *it;
						{
							_1e4925c70_optimize_expr_model(_self_, _14025_expr.get()._field_model);
						}
						_iter_next_1e73c35d8:;
						++it;
						goto _iter_begin_1e73c35d8;
					}
					_iter_end_1e73c35d8:;
				};
				_1e49259ea_optimize_body_child(_self_, _13921_case.get()._field_scope);
			}
			_iter_next_1e73c2c69:;
			++it;
			goto _iter_begin_1e73c2c69;
		}
		_iter_end_1e73c2c69:;
	};
	if ((_13838_m.get()._field_default != nullptr)) {
		if ((_13838_m.get()._field_cases.len() == 0LL)) {
			_1e4925775_optimize_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		} else {
			_1e49259ea_optimize_body_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1e4927436_optimize_assign(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecdc41_Assign> _15639_assign) {
	_1e4925c70_optimize_expr_model(_self_, _15639_assign.get()._field_l.get()._field_model);
	_1e4925c70_optimize_expr_model(_self_, _15639_assign.get()._field_r.get()._field_model);
}



inline void _1e49276ab_optimize_multi_assign(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Ptr<_1e3ecde2d_MultiAssign> _16145_assign) {
	{
		auto &expr = _16145_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1e73c6a81:;
		if (it != expr.end()) {
			jule::Any _16221_l = *it;
			{
				if ((_16221_l != nullptr)) {
					_1e4925c70_optimize_expr_model(_self_, _16221_l);
				};
			}
			_iter_next_1e73c6a81:;
			++it;
			goto _iter_begin_1e73c6a81;
		}
		_iter_end_1e73c6a81:;
	};
	_1e4925c70_optimize_expr_model(_self_, _16145_assign.get()._field_r);
}



inline void _1e4927931_optimize_stmt(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_, jule::Any _17037_st) {
	{
		auto &_match_expr{ _17037_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e3e547aa_Scope>>()) {
			_case_begin_1e73c81c0:;
			{
				jule::Ptr<_1e3e547aa_Scope> _17321_scope = _17037_st.operator jule::Ptr<_1e3e547aa_Scope>();;
				if (_17321_scope.get()._field_deferred) {
					_1e4927de8_eliminate_dead_code_of_scope(_17321_scope);
				} else {
					_1e4925775_optimize_child(_self_, _17321_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
			_case_begin_1e73c8346:;
			{
				_1e49266bb_optimize_range_iter(_self_, _17037_st.operator jule::Ptr<_1e3ecd0b4_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
			_case_begin_1e73c83ac:;
			{
				_1e4926941_optimize_while_iter(_self_, _17037_st.operator jule::Ptr<_1e3eccdc7_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
			_case_begin_1e73c8423:;
			{
				_1e4926bb6_optimize_inf_iter(_self_, _17037_st.operator jule::Ptr<_1e3eccbda_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecc9ed_Conditional>>()) {
			_case_begin_1e73c849a:;
			{
				_1e4926e3b_optimize_conditional(_self_, _17037_st.operator jule::Ptr<_1e3ecc9ed_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
			_case_begin_1e73c8522:;
			{
				_1e49271b1_optimize_match(_self_, _17037_st.operator jule::Ptr<_1e3ece11a_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecdc41_Assign>>()) {
			_case_begin_1e73c8599:;
			{
				_1e4927436_optimize_assign(_self_, _17037_st.operator jule::Ptr<_1e3ecdc41_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecde2d_MultiAssign>>()) {
			_case_begin_1e73c8621:;
			{
				_1e49276ab_optimize_multi_assign(_self_, _17037_st.operator jule::Ptr<_1e3ecde2d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e73c8698:;
			{
				jule::Ptr<_1e40662e5_Data> _19421_d = _17037_st.operator jule::Ptr<_1e40662e5_Data>();;
				{
					auto &_match_expr{ _19421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1e73ce2e7:;
						{
							_1e4925e4b_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1e73cdb98:;
						{
							_1e4925c70_optimize_expr_model(_self_, _19421_d.get()._field_model);
						}
					}
					_match_end_1e73cddb8:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece912_RetSt>>()) {
			_case_begin_1e73c8720:;
			{
				_1e4925e4b_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd867_GotoSt>>()) {
			_case_begin_1e73c8797:;
			{
				_1e49261c1_push_goto(_self_, _17037_st.operator jule::Ptr<_1e3ecd867_GotoSt>());
				_1e4925e4b_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd67a_Label>>()) {
			_case_begin_1e73c881e:;
			{
				_1e4926446_push_label(_self_, _17037_st.operator jule::Ptr<_1e3ecd67a_Label>());
			}
		}
		_match_end_1e73c82d0:;
	};
}



inline void _1e4927b0c_optimize_stmts(jule::Ptr<_1e49252ad_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1e4927931_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1e73d1063:;
	}
	_iter_end_1e73d1063:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e49252ad_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline _1e4928e82_ExprDeadCode static__1e492957b_new(jule::Ptr<_1e49252ad_ScopeDeadCode>& _4724_s) {
	return _1e4928e82_ExprDeadCode{._field_s=_4724_s};
}



inline void _1e4929801_binary(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33e9536_BinopExprModel> _5325_m) {
	_1e492ea26_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1e492ea26_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1e4929a76_unary(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33e9723_UnaryExprModel> _5824_m) {
	_1e492ea26_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1e4929ceb_structure_lit(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33e9aec_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1e73d4242:;
		if (it != expr.end()) {
			jule::Ptr<_1e33e9910_StructArgExprModel> _6321_arg = *it;
			{
				_1e492ea26_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1e73d4242:;
			++it;
			goto _iter_begin_1e73d4242;
		}
		_iter_end_1e73d4242:;
	};
}



inline void _1e492a071_alloc_structure(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel> _6834_m) {
	_1e4929ceb_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1e492a2e6_casting(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33e9ec6_CastingExprModel> _7226_m) {
	_1e492ea26_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1e492a56b_args(_1e4928e82_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1e73d64db:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1e492ea26_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1e73d64db:;
			++it;
			goto _iter_begin_1e73d64db;
		}
		_iter_end_1e73d64db:;
	};
}



inline void _1e492a7e1_func_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel> _8228_m) {
	_1e492ea26_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1e492a56b_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1e49259ea_optimize_body_child((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1e492aa66_slice(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ea3a0_SliceExprModel> _9024_m) {
	_1e492a56b_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1e492acdb_array(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eb824_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1e492ea26_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1e492a56b_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1e492b061_indexing(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ea58c_IndexingExprModel> _10127_m) {
	_1e492ea26_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1e492ea26_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1e492b2d6_anon_func(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ea779_AnonFnExprModel> _10628_m) {
	_1e4927de8_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1e492b55b_map(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eab53_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1e73dc448:;
		if (it != expr.end()) {
			jule::Ptr<_1e33ea966_KeyValPairExprModel> _11121_pair = *it;
			{
				_1e492ea26_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1e492ea26_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1e73dc448:;
			++it;
			goto _iter_begin_1e73dc448;
		}
		_iter_end_1e73dc448:;
	};
}



inline void _1e492b7d1_slicing(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ead40_SlicingExprModel> _11726_m) {
	_1e492ea26_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1e492ea26_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1e492ea26_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1e492ba56_trait_sub(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel> _12528_m) {
	_1e492ea26_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1e492bccb_structure_sub(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _12932_m) {
	_1e492ea26_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1e492c051_common_sub(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel> _13329_m) {
	_1e492ea26_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1e492c2c6_tuple(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ebdda_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1e73e1936:;
		if (it != expr.end()) {
			jule::Ptr<_1e40662e5_Data> _13821_d = *it;
			{
				_1e492ea26_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1e73e1936:;
			++it;
			goto _iter_begin_1e73e1936;
		}
		_iter_end_1e73e1936:;
	};
}



inline void _1e492c54b_new_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1e492ea26_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1e492c7c1_out_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel> _14927_m) {
	_1e492ea26_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1e492ca46_outln_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel> _15329_m) {
	_1e492ea26_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1e492ccbb_panic_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel> _15729_m) {
	_1e492ea26_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1e492d041_assert_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel> _16130_m) {
	_1e492ea26_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1e492d2b6_error_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel> _16529_m) {
	_1e492ea26_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1e492d53b_make_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1e492ea26_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1e492ea26_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1e492d7b1_append_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel> _17830_m) {
	_1e492ea26_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1e492ea26_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1e492da36_clone_call(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel> _18329_m) {
	_1e492ea26_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1e492dcab_sizeof(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33eb219_SizeofExprModel> _18725_m) {
	_1e492ea26_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1e492e031_alignof(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ed97a_AlignofExprModel> _19126_m) {
	_1e492ea26_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1e492e2a6_integrated_to_str(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33edd54_IntegratedToStrExprModel> _19536_m) {
	_1e492ea26_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1e492e52b_free(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ee22d_FreeExprModel> _19923_m) {
	_1e492ea26_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1e492e7a1_backend_emit(_1e4928e82_ExprDeadCode* _self_, jule::Ptr<_1e33ee041_BackendEmitExprModel> _20331_m) {
	_1e492a56b_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1e492ea26_optimize(_1e4928e82_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
			_case_begin_1e73ebb0b:;
			{
				_1e4929801_binary(&(*_self_), _20728_model.operator jule::Ptr<_1e33e9536_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
			_case_begin_1e73ebb83:;
			{
				_1e4929a76_unary(&(*_self_), _20728_model.operator jule::Ptr<_1e33e9723_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9aec_StructLitExprModel>>()) {
			_case_begin_1e73ebc0a:;
			{
				_1e4929ceb_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1e33e9aec_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>>()) {
			_case_begin_1e73ec0a1:;
			{
				_1e492a071_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9ec6_CastingExprModel>>()) {
			_case_begin_1e73ec117:;
			{
				_1e492a2e6_casting(&(*_self_), _20728_model.operator jule::Ptr<_1e33e9ec6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e73ec18e:;
			{
				_1e492a7e1_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
			_case_begin_1e73ec216:;
			{
				_1e492aa66_slice(&(*_self_), _20728_model.operator jule::Ptr<_1e33ea3a0_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb824_ArrayExprModel>>()) {
			_case_begin_1e73ec28d:;
			{
				_1e492acdb_array(&(*_self_), _20728_model.operator jule::Ptr<_1e33eb824_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea58c_IndexingExprModel>>()) {
			_case_begin_1e73ec315:;
			{
				_1e492b061_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1e33ea58c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea779_AnonFnExprModel>>()) {
			_case_begin_1e73ec38c:;
			{
				_1e492b2d6_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1e33ea779_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eab53_MapExprModel>>()) {
			_case_begin_1e73ec414:;
			{
				_1e492b55b_map(&(*_self_), _20728_model.operator jule::Ptr<_1e33eab53_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ead40_SlicingExprModel>>()) {
			_case_begin_1e73ec48b:;
			{
				_1e492b7d1_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1e33ead40_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
			_case_begin_1e73ec513:;
			{
				_1e492ba56_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e73ec58a:;
			{
				_1e492bccb_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>>()) {
			_case_begin_1e73ec612:;
			{
				_1e492c051_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebdda_TupleExprModel>>()) {
			_case_begin_1e73ec689:;
			{
				_1e492c2c6_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1e33ebdda_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>>()) {
			_case_begin_1e73ec711:;
			{
				_1e492c7c1_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e73ec788:;
			{
				_1e492ca46_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>>()) {
			_case_begin_1e73ec810:;
			{
				_1e492c54b_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e73ec887:;
			{
				_1e492ccbb_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e73ec90e:;
			{
				_1e492d041_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e73ec986:;
			{
				_1e492d2b6_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e73eca0d:;
			{
				_1e492d53b_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e73eca85:;
			{
				_1e492d7b1_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e73ecb0c:;
			{
				_1e492da36_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb219_SizeofExprModel>>()) {
			_case_begin_1e73ecb84:;
			{
				_1e492dcab_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1e33eb219_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed97a_AlignofExprModel>>()) {
			_case_begin_1e73ecc0b:;
			{
				_1e492e031_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1e33ed97a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33edd54_IntegratedToStrExprModel>>()) {
			_case_begin_1e73ecc83:;
			{
				_1e492e2a6_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1e33edd54_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee22d_FreeExprModel>>()) {
			_case_begin_1e73ecd0a:;
			{
				_1e492e52b_free(&(*_self_), _20728_model.operator jule::Ptr<_1e33ee22d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee041_BackendEmitExprModel>>()) {
			_case_begin_1e73ecd82:;
			{
				_1e492e7a1_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1e33ee041_BackendEmitExprModel>());
			}
		}
		_match_end_1e73ebd09:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4928e82_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c5d462_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e271c1d9_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e27a0ed7_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2ae7680_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c9a9ee_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1c9b978_ScopeOptimizer> static__1e1c56191_new(jule::Ptr<_1e3e547aa_Scope> _4527_scope) {
	return jule::new_ptr<_1e1c9b978_ScopeOptimizer>(_1e1c9b978_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1e1c6e2a8_set_current_stmt(_1e1c9b978_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5139_stmt))))));
}



inline void _1e1c98700_optimize_data(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e40662e5_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e7437a7b:;
			{
				jule::Ptr<_1e33ea1b3_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>();;
				if (_22eb5e27b_PRODUCTION) {
					if (((!(_1e3405399_is_builtin(_5821_m.get()._field_func.ptr()))) && _1e1da186e_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1e1c6e2a8_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1e743786c:;
	};
	static__1e1de552d_optimize(_5536_d.get()._field_model);
}



inline void _1e1c9c65a_optimize_var(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e401a92b_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1e1de552d_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1e1c9d183_optimize_conditional(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecc9ed_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e743ab39:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eb7ea0_If> _7721_elif = *it;
			{
				static__1e1de552d_optimize(_7721_elif.get()._field_expr);
				_1e1d8a1e8_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1e743ab39:;
			++it;
			goto _iter_begin_1e743ab39;
		}
		_iter_end_1e743ab39:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1e1d8a1e8_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1e1c99080_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e743cb91:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1e3eb7ea0_If> _9221_elif = *it;
			{
				if ((!(_1e1da2ad4_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1e743cb91;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1e3ebe45c_Else>(_1e3ebe45c_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1e743cb91;
			}
			_iter_next_1e743cb91:;
			++it;
			_9214_i++;
			goto _iter_begin_1e743cb91;
		}
		_iter_end_1e743cb91:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e3eb7ea0_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1e3eb7ea0_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1e1dd36d6_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1e7440ed5:;
	}
	_iter_end_1e7440ed5:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e7442767:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1e3eb7ea0_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1e7442767:;
			++it;
			_12913_j++;
			goto _iter_begin_1e7442767;
		}
		_iter_end_1e7442767:;
	};
	if ((_12817_only != -1LL)) {
		_1e1c6e2a8_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1e1ca0905_build_default_constat_true_case(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ece538_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1e3ece11a_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1e7444e62;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1e3ece725_FallSt>>()) {
					_case_begin_1e7445825:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1e7444e62;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=static_cast<jule::Any>(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1e7446d65:;
					{
						goto _iter_end_1e7444e62;
					}
				}
				_match_end_1e7446c77:;
			};
		}
	_iter_next_1e7444e62:;
	}
	_iter_end_1e7444e62:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1e1ca2352_optimize_match(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ece11a_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e7448e00:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ece538_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1e7449791:;
					if (it != expr.end()) {
						jule::Ptr<_1e40662e5_Data> _17325_expr = *it;
						{
							static__1e1de552d_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1e7449791:;
						++it;
						goto _iter_begin_1e7449791;
					}
					_iter_end_1e7449791:;
				};
				_1e1d8a1e8_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1e7448e00:;
			++it;
			goto _iter_begin_1e7448e00;
		}
		_iter_end_1e7448e00:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1e1d8a1e8_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1e1c99080_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e744b51d:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1e3ece538_Case> _18925_case = *it;
			{
				if ((!(_1e1dc771e_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1e744b51d;
				};
				_18617_const_case=true;
				_1e1ca0905_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1e744b51d;
			}
			_iter_next_1e744b51d:;
			++it;
			_18918_i++;
			goto _iter_begin_1e744b51d;
		}
		_iter_end_1e744b51d:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e3ece538_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1e3ece538_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1e1ddb28d_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1e744e411:;
	}
	_iter_end_1e744e411:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e74505cc:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1e3ece538_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1e74505cc:;
			++it;
			_21913_j++;
			goto _iter_begin_1e74505cc;
		}
		_iter_end_1e74505cc:;
	};
	if ((_21817_only != -1LL)) {
		_1e1c6e2a8_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1e1ca2bd2_optimize_range_iter(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecd0b4_RangeIter> _23542_it) {
	static__1e1de552d_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1e1d8a1e8_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1e1cd83dd_optimize_while_iter(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3eccdc7_WhileIter> _24042_it) {
	static__1e1de552d_optimize(_24042_it.get()._field_expr);
	_1e1d94895_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1e1d8a1e8_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1e1cd8c7e_substr(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecdc41_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ead40_SlicingExprModel>>()) {
			_case_begin_1e7454801:;
			{
				jule::Ptr<_1e33ead40_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e33ead40_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1e1c6e2a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1e2ae7680_MutSlicingExprModel>(_1e2ae7680_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=_24921_sem.get()._field_expr, ._field_left=_24921_sem.get()._field_left, ._field_right=_24921_sem.get()._field_right})));
					return true;
				};
			}
		}
		_match_end_1e745479b:;
	};
	return false;
}



inline jule::Bool _1e1d822ab_str_insert(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecdc41_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
			_case_begin_1e7456c10:;
			{
				jule::Ptr<_1e33e9536_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e33e9536_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1e1c6e2a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1e1c9a9ee_StrInsertBeginExprModel>(_1e1c9a9ee_StrInsertBeginExprModel{._field_dest=_26333_a.get()._field_l.get()._field_model, ._field_expr=_26621_m.get()._field_left.get()._field_model})));
					return true;
				};
			}
		}
		_match_end_1e7456baa:;
	};
	return false;
}



inline jule::Bool _1e1d85c3d_str_assign(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecdc41_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1e4096138_Prim> _28213_lp = _1e409372e_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1e40990e7_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1e1cd8c7e_substr(&(*_self_), _27833_a) || _1e1d822ab_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1e745a63c:;
			{
				return true;
			}
		}
		_match_end_1e745a5a4:;
	};
	return false;
}



inline void _1e1d8a506_optimize_assign(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecdc41_Assign> _29438_assign) {
	if ((_1e1c5d781_COPY && _1e1d85c3d_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1e1de552d_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1e1de552d_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e745c6a5:;
			{
				if ((_1e1c5789b_MATH && (_1e4094b81_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1e33e9536_BinopExprModel>(_1e33e9536_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1e1de552d_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
							_case_begin_1e745eb2a:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1e33cb073_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;;
							}
						}
						_match_end_1e745e982:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1e745c650:;
	};
	if (_1e1c6bcab_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>>()) {
				_case_begin_1e74616cb:;
				{
					jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
							_case_begin_1e7462798:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>() || _match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
										_case_begin_1e7463029:;
										{
											_1e1c6e2a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1e27a0ed7_PushToSliceExprModel>(_1e27a0ed7_PushToSliceExprModel{._field_dest=_32825_m.get()._field_dest, ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1e33ea3a0_SliceExprModel>()})));
										}
									}
									_match_end_1e7462d70:;
								};
							}
						}
						_match_end_1e7462589:;
					};
				}
			}
			_match_end_1e745d200:;
		};
	};
}



inline void _1e1d8d6b3_optimize_multi_assign(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ecde2d_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1e7461a83:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1e1de552d_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=_34521_l;
				};
			}
			_iter_next_1e7461a83:;
			++it;
			_34514_i++;
			goto _iter_begin_1e7461a83;
		}
		_iter_end_1e7461a83:;
	};
	static__1e1de552d_optimize(_34444_assign.get()._field_r);
}



inline void _1e1d8eede_optimize_ret(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3ece912_RetSt> _35435_r) {
	static__1e1de552d_optimize(_35435_r.get()._field_expr);
}



inline void _1e1d94895_optimize_stmt(_1e1c9b978_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e3e547aa_Scope>>()) {
			_case_begin_1e7465bec:;
			{
				_1e1d8a1e8_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3e547aa_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e7465c63:;
			{
				_1e1c98700_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1e40662e5_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e7465cc9:;
			{
				_1e1c9c65a_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1e401a92b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecc9ed_Conditional>>()) {
			_case_begin_1e7465d40:;
			{
				_1e1c9d183_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ecc9ed_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
			_case_begin_1e7465da6:;
			{
				_1e1ca2bd2_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ecd0b4_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
			_case_begin_1e7465e1c:;
			{
				_1e1cd83dd_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3eccdc7_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
			_case_begin_1e7465e83:;
			{
				_1e1d8a1e8_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3eccbda_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecdc41_Assign>>()) {
			_case_begin_1e7465ee9:;
			{
				_1e1d8a506_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ecdc41_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecde2d_MultiAssign>>()) {
			_case_begin_1e7466060:;
			{
				_1e1d8d6b3_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ecde2d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
			_case_begin_1e74660d7:;
			{
				_1e1ca2352_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ece11a_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece912_RetSt>>()) {
			_case_begin_1e746615e:;
			{
				_1e1d8eede_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1e3ece912_RetSt>());
			}
		}
		_match_end_1e7465a98:;
	};
}



inline void _1e1d8a1e8_optimize_child(_1e1c9b978_ScopeOptimizer* _self_, jule::Ptr<_1e3e547aa_Scope> _38537_child) {
	jule::Ptr<_1e1c9b978_ScopeOptimizer> _38617_so = static__1e1c56191_new(_38537_child);;
	_1e1d9c628_optimize(_38617_so.ptr());
}



inline void _1e1d9c628_optimize(_1e1c9b978_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1e746bd8a:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1e1d94895_optimize_stmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1e746bd8a:;
			++it;
			_39214_i++;
			goto _iter_begin_1e746bd8a;
		}
		_iter_end_1e746bd8a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e1c9b978_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1e1de552d_optimize(jule::Any& _5533_model) {
	if (_1e4832d58_expr_enabled) {
		jule::Ptr<_1e20883e6_ExprOptimizer> _5821_exop = jule::new_ptr<_1e20883e6_ExprOptimizer>(_1e20883e6_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1e226b420_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1e2074a75_str_cond(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9536_BinopExprModel> _6527_m) {
	jule::Ptr<_1e4096138_Prim> _6613_lp = _1e409372e_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1e40990e7_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e747689a:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1e7476845:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e747789b:;
			{
				goto _match_end_1e74777ad;
			}
		}
		else {
			_case_begin_1e7477824:;
			{
				return true;
			}
		}
		_match_end_1e74777ad:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e3388a47_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e3388a47_Const>();;
	if ((!(_1e33e28d6_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e7479161:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e74791c7:;
			{
				jule::Ptr<_1e1c31ee6_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e33e9723_UnaryExprModel>(_1e33e9723_UnaryExprModel{._field_expr=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ebbed_CommonSubIdentExprModel>(_1e33ebbed_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1e7479040:;
	};
	return true;
}



inline void _1e207db7d_binary(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9536_BinopExprModel> _11325_m) {
	static__1e1de552d_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1e1de552d_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e747d165:;
			{
				goto _match_end_1e747cb37;
			}
		}
		else {
			_case_begin_1e747cbd1:;
			{
				return;;
			}
		}
		_match_end_1e747cb37:;
	};
	if ((_1e1c99080_COND && _1e2074a75_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1e1c5789b_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e747dd58:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1e226c09c_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1e3388a47_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e3388a47_Const>();;
					_1e33e3882_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e747ddbe:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1e226c09c_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1e3388a47_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e3388a47_Const>();;
					_1e33e3882_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e747de46:;
			{
				jule::Ptr<_1e3388a47_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e3388a47_Const>();;
				jule::F64 _15017_d = _1e33e3387_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1e33e360c_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1e747dd03:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1e1c5d462_UnsafeBinopExprModel>(_1e1c5d462_UnsafeBinopExprModel{._field_node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1e2084c72_unary(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9723_UnaryExprModel> _16024_m) {
	static__1e1de552d_optimize(_16024_m.get()._field_expr.get()._field_model);
	if ((_1e1c91880_PTR && (_16024_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
				_case_begin_1e7486228:;
				{
					jule::Ptr<_1e33e9723_UnaryExprModel> _16525_um = _16024_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e33e9723_UnaryExprModel>();;
					if ((_16525_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_expr.get()._field_model;
					};
				}
			}
			_match_end_1e74861c3:;
		};
	};
}



inline void _1e2085cea_structure_lit(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9aec_StructLitExprModel> _17332_m) {
	{
		auto &expr = _17332_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1e7487c74:;
		if (it != expr.end()) {
			jule::Ptr<_1e33e9910_StructArgExprModel> _17421_arg = *it;
			{
				static__1e1de552d_optimize(_17421_arg.get()._field_expr);
			}
			_iter_next_1e7487c74:;
			++it;
			goto _iter_begin_1e7487c74;
		}
		_iter_end_1e7487c74:;
	};
}



inline void _1e2074459_alloc_structure(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel> _17934_m) {
	_1e2085cea_structure_lit(&(*_self_), _17934_m.get()._field_lit);
}



inline void _1e2089b9a_casting(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33e9ec6_CastingExprModel> _18326_m) {
	static__1e1de552d_optimize(_18326_m.get()._field_expr);
}



inline void _1e2093357_args(_1e20883e6_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1e7489825:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1e1de552d_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1e7489825:;
			++it;
			_18814_i++;
			goto _iter_begin_1e7489825;
		}
		_iter_end_1e7489825:;
	};
}



inline void _1e2093e3a_scope(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e3e547aa_Scope>& _19425_s) {
	jule::Ptr<_1e1c9b978_ScopeOptimizer> _19517_scopt = static__1e1c56191_new(_19425_s);;
	_1e1d9c628_optimize(_19517_scopt.ptr());
}



inline void _1e2097191_func_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel> _19928_m) {
	static__1e1de552d_optimize(_19928_m.get()._field_expr);
	_1e2093357_args(&(*_self_), _19928_m.get()._field_args);
	if ((_19928_m.get()._field_except != nullptr)) {
		_1e2093e3a_scope(&(*_self_), _19928_m.get()._field_except);
	};
}



inline void _1e209a00c_slice(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ea3a0_SliceExprModel> _20724_m) {
	_1e2093357_args(&(*_self_), _20724_m.get()._field_elems);
}



inline void _1e20a2597_array(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eb824_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_elems.len() == 2LL) && (_21124_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_elems[0LL];;
		static__1e1de552d_optimize(_21321_elem);
		_21124_m.get()._field_elems[0LL]=_21321_elem;
	};
	_1e2093357_args(&(*_self_), _21124_m.get()._field_elems);
}



inline void _1e20a39a5_indexing(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ea58c_IndexingExprModel> _22027_m) {
	static__1e1de552d_optimize(_22027_m.get()._field_expr.get()._field_model);
	static__1e1de552d_optimize(_22027_m.get()._field_index.get()._field_model);
	if ((!(_1e1c736b9_ACCESS))) {
		return;;
	};
	jule::Bool _22613_array = (_1e4094444_arr(_22027_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22613_array && _1e4066ba8_is_const(_22027_m.get()._field_index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1e271c1d9_UnsafeIndexingExprModel>(_1e271c1d9_UnsafeIndexingExprModel{._field_node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e7493455:;
			{
				jule::Ptr<_1e401a92b_Var> _23517_i = _22027_m.get()._field_index.get()._field_model.operator jule::Ptr<_1e401a92b_Var>();;
				if ((_23517_i.get()._field_mutable || (_23517_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1e74933cd;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
						_case_begin_1e7494be8:;
						{
							jule::Ptr<_1e401a92b_Var> _24121_r = _22027_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e401a92b_Var>();;
							if ((_23517_i.get()._field_iter_relation.get()._field_range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1e271c1d9_UnsafeIndexingExprModel>(_1e271c1d9_UnsafeIndexingExprModel{._field_node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1e7494b93:;
				};
			}
		}
		_match_end_1e74933cd:;
	};
}



inline void _1e20a4c5e_anon_func(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ea779_AnonFnExprModel> _25128_m) {
	_1e2093e3a_scope(&(*_self_), _25128_m.get()._field_func.get()._field_scope);
}



inline void _1e20a6502_map(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eab53_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1e749737c:;
		if (it != expr.end()) {
			jule::Ptr<_1e33ea966_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1e1de552d_optimize(_25621_pair.get()._field_key);
				static__1e1de552d_optimize(_25621_pair.get()._field_val);
			}
			_iter_next_1e749737c:;
			++it;
			goto _iter_begin_1e749737c;
		}
		_iter_end_1e749737c:;
	};
}



inline void _1e20cdb01_slicing(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ead40_SlicingExprModel> _26226_m) {
	static__1e1de552d_optimize(_26226_m.get()._field_expr);
	static__1e1de552d_optimize(_26226_m.get()._field_left);
	if ((_26226_m.get()._field_right != nullptr)) {
		static__1e1de552d_optimize(_26226_m.get()._field_right);
	};
}



inline void _1e20d3dd1_trait_sub(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel> _27028_m) {
	static__1e1de552d_optimize(_27028_m.get()._field_expr);
}



inline void _1e21003b4_structure_sub(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _27432_m) {
	static__1e1de552d_optimize(_27432_m.get()._field_expr.get()._field_model);
}



inline void _1e2102bad_common_sub(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel> _27829_m) {
	static__1e1de552d_optimize(_27829_m.get()._field_expr);
}



inline void _1e2107322_tuple(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ebdda_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1e749a836:;
		if (it != expr.end()) {
			jule::Ptr<_1e40662e5_Data> _28321_d = *it;
			{
				static__1e1de552d_optimize(_28321_d.get()._field_model);
			}
			_iter_next_1e749a836:;
			++it;
			goto _iter_begin_1e749a836;
		}
		_iter_end_1e749a836:;
	};
}



inline void _1e2115385_new_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel> _28827_m) {
	if ((_28827_m.get()._field_init != nullptr)) {
		static__1e1de552d_optimize(_28827_m.get()._field_init);
	};
}



inline void _1e211761d_out_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel> _29427_m) {
	static__1e1de552d_optimize(_29427_m.get()._field_expr);
}



inline void _1e2137044_outln_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel> _29829_m) {
	static__1e1de552d_optimize(_29829_m.get()._field_expr);
}



inline void _1e213ca50_panic_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel> _30229_m) {
	static__1e1de552d_optimize(_30229_m.get()._field_expr);
}



inline void _1e213cbd7_assert_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel> _30630_m) {
	static__1e1de552d_optimize(_30630_m.get()._field_expr);
}



inline void _1e2180554_error_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel> _31029_m) {
	static__1e1de552d_optimize(_31029_m.get()._field_err);
}



inline void _1e21b0be4_make_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel> _31428_m) {
	if ((_31428_m.get()._field_len != nullptr)) {
		static__1e1de552d_optimize(_31428_m.get()._field_len);
	};
	if ((_31428_m.get()._field_cap != nullptr)) {
		static__1e1de552d_optimize(_31428_m.get()._field_cap);
	};
}



inline void _1e21c25eb_append_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel> _32330_m) {
	static__1e1de552d_optimize(_32330_m.get()._field_dest);
	static__1e1de552d_optimize(_32330_m.get()._field_elements);
}



inline void _1e21c59d9_clone_call(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel> _32829_m) {
	static__1e1de552d_optimize(_32829_m.get()._field_expr);
}



inline void _1e225c048_sizeof(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33eb219_SizeofExprModel> _33225_m) {
	static__1e1de552d_optimize(_33225_m.get()._field_expr);
}



inline void _1e225d445_alignof(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ed97a_AlignofExprModel> _33626_m) {
	static__1e1de552d_optimize(_33626_m.get()._field_expr);
}



inline void _1e225e820_integrated_to_str(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33edd54_IntegratedToStrExprModel> _34036_m) {
	static__1e1de552d_optimize(_34036_m.get()._field_expr);
}



inline void _1e226533c_free(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ee22d_FreeExprModel> _34423_m) {
	static__1e1de552d_optimize(_34423_m.get()._field_expr);
}



inline void _1e22680ed_backend_emit(_1e20883e6_ExprOptimizer* _self_, jule::Ptr<_1e33ee041_BackendEmitExprModel> _34831_m) {
	_1e2093357_args(&(*_self_), _34831_m.get()._field_exprs);
}



inline void _1e226b420_do(_1e20883e6_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
			_case_begin_1e74a30e1:;
			{
				_1e207db7d_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33e9536_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
			_case_begin_1e74a33aa:;
			{
				_1e2084c72_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33e9723_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9aec_StructLitExprModel>>()) {
			_case_begin_1e74a3421:;
			{
				_1e2085cea_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33e9aec_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>>()) {
			_case_begin_1e74a3487:;
			{
				_1e2074459_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9ec6_CastingExprModel>>()) {
			_case_begin_1e74a34ed:;
			{
				_1e2089b9a_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33e9ec6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e74a3575:;
			{
				_1e2097191_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ea1b3_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
			_case_begin_1e74a35ec:;
			{
				_1e209a00c_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ea3a0_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb824_ArrayExprModel>>()) {
			_case_begin_1e74a3674:;
			{
				_1e20a2597_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eb824_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea58c_IndexingExprModel>>()) {
			_case_begin_1e74a36eb:;
			{
				_1e20a39a5_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ea58c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea779_AnonFnExprModel>>()) {
			_case_begin_1e74a3773:;
			{
				_1e20a4c5e_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ea779_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eab53_MapExprModel>>()) {
			_case_begin_1e74a37ea:;
			{
				_1e20a6502_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eab53_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ead40_SlicingExprModel>>()) {
			_case_begin_1e74a3872:;
			{
				_1e20cdb01_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ead40_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
			_case_begin_1e74a38e9:;
			{
				_1e20d3dd1_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e74a3971:;
			{
				_1e21003b4_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>>()) {
			_case_begin_1e74a39e8:;
			{
				_1e2102bad_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebdda_TupleExprModel>>()) {
			_case_begin_1e74a3a70:;
			{
				_1e2107322_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ebdda_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>>()) {
			_case_begin_1e74a3ae7:;
			{
				_1e211761d_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e74a3b6e:;
			{
				_1e2137044_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>>()) {
			_case_begin_1e74a3be6:;
			{
				_1e2115385_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e74a3c6d:;
			{
				_1e213ca50_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e74a3ce5:;
			{
				_1e213cbd7_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e74a3d6c:;
			{
				_1e2180554_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e74a3de4:;
			{
				_1e21b0be4_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e74a3e6b:;
			{
				_1e21c25eb_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e74a3ee3:;
			{
				_1e21c59d9_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb219_SizeofExprModel>>()) {
			_case_begin_1e74a406a:;
			{
				_1e225c048_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33eb219_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed97a_AlignofExprModel>>()) {
			_case_begin_1e74a40e2:;
			{
				_1e225d445_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ed97a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33edd54_IntegratedToStrExprModel>>()) {
			_case_begin_1e74a4169:;
			{
				_1e225e820_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33edd54_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee22d_FreeExprModel>>()) {
			_case_begin_1e74a41e1:;
			{
				_1e226533c_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ee22d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee041_BackendEmitExprModel>>()) {
			_case_begin_1e74a4268:;
			{
				_1e22680ed_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e33ee041_BackendEmitExprModel>());
			}
		}
		_match_end_1e74a308b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e20883e6_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4896817_Optimizer> static__1e4862b68_new(jule::Ptr<_1e4675e54_IR>& _2528_ir) {
	return jule::new_ptr<_1e4896817_Optimizer>(_1e4896817_Optimizer{._field_ir=_2528_ir});
}



inline void _1e48917ce_optimize_global(_1e4896817_Optimizer* _self_, jule::Ptr<_1e401a92b_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1e1de552d_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1e48a02d2_optimize_function(_1e4896817_Optimizer* _self_, jule::Ptr<_1e34019a0_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e74ba438:;
		if (it != expr.end()) {
			jule::Ptr<_1e3404651_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1e1c9b978_ScopeOptimizer> _4221_so = static__1e1c56191_new(_4121_ins.get()._field_scope);;
				_1e1d9c628_optimize(_4221_so.ptr());
			}
			_iter_next_1e74ba438:;
			++it;
			goto _iter_begin_1e74ba438;
		}
		_iter_end_1e74ba438:;
	};
}



inline void _1e48a78a0_optimize_struct(_1e4896817_Optimizer* _self_, jule::Ptr<_1e3318840_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e74bb879:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1e74bc01c:;
					if (it != expr.end()) {
						jule::Ptr<_1e332d657_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1e1de552d_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1e74bc01c:;
						++it;
						goto _iter_begin_1e74bc01c;
					}
					_iter_end_1e74bc01c:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e74bce52:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _5725_m = *it;
						{
							_1e48a02d2_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1e74bce52:;
						++it;
						goto _iter_begin_1e74bce52;
					}
					_iter_end_1e74bce52:;
				};
			}
			_iter_next_1e74bb879:;
			++it;
			goto _iter_begin_1e74bb879;
		}
		_iter_end_1e74bb879:;
	};
}



inline void _1e48a85d7_optimize_globals(_1e4896817_Optimizer* _self_, jule::Ptr<_1e3eea488_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e74bd4e6:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1e74be283:;
					if (it != expr.end()) {
						jule::Ptr<_1e401a92b_Var> _6525_v = *it;
						{
							_1e48917ce_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1e74be283:;
						++it;
						goto _iter_begin_1e74be283;
					}
					_iter_end_1e74be283:;
				};
			}
			_iter_next_1e74bd4e6:;
			++it;
			goto _iter_begin_1e74bd4e6;
		}
		_iter_end_1e74bd4e6:;
	};
}



inline void _1e48b8c68_optimize_functions(_1e4896817_Optimizer* _self_, jule::Ptr<_1e3eea488_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e74be85a:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1e74c063b:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _7325_func = *it;
						{
							_1e48a02d2_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1e74c063b:;
						++it;
						goto _iter_begin_1e74c063b;
					}
					_iter_end_1e74c063b:;
				};
			}
			_iter_next_1e74be85a:;
			++it;
			goto _iter_begin_1e74be85a;
		}
		_iter_end_1e74be85a:;
	};
}



inline void _1e48b9340_optimize_structs(_1e4896817_Optimizer* _self_, jule::Ptr<_1e3eea488_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e74c0be1:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1e74c19c2:;
					if (it != expr.end()) {
						jule::Ptr<_1e3318840_Struct> _8125_s = *it;
						{
							_1e48a78a0_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1e74c19c2:;
						++it;
						goto _iter_begin_1e74c19c2;
					}
					_iter_end_1e74c19c2:;
				};
			}
			_iter_next_1e74c0be1:;
			++it;
			goto _iter_begin_1e74c0be1;
		}
		_iter_end_1e74c0be1:;
	};
}



inline void _1e48e448b_optimize_package(_1e4896817_Optimizer* _self_, jule::Ptr<_1e3eea488_Package>& _8740_p) {
	_1e48a85d7_optimize_globals(&(*_self_), _8740_p);
	_1e48b8c68_optimize_functions(&(*_self_), _8740_p);
	_1e48b9340_optimize_structs(&(*_self_), _8740_p);
}



inline void _1e48ec4b6_optimize(_1e4896817_Optimizer* _self_) {
	_1e4901e8d_detect_enabled();
	if (_1e1c67779_DEADCODE) {
		_1e4923e5a_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1e4833ead_scope_enabled || _1e4832d58_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1e74c1890:;
			if (it != expr.end()) {
				jule::Ptr<_1e3ee752e_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1e48e448b_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1e74c1890:;
				++it;
				goto _iter_begin_1e74c1890;
			}
			_iter_end_1e74c1890:;
		};
		_1e48e448b_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_1e1c67779_DEADCODE) {
		_1e4928877_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e4896817_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1e4932c5a_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1e4934135_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1e4932c5a_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1e4933e48_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1e493571e_log_flat(_1e1905060_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1e493592d_log_error(_1e1905060_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1e4932c5a_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e3e4dbd3_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e3e4dbd3_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1e188e868_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_1e188e868_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e3e4dbd3_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1e17ddb08_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1e17ddb08_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1e17ddb08_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1e4934135_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1e4935b3c_log(_1e1905060_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1e74d3d69:;
			{
				static__1e493571e_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1e74d3dd0:;
			{
				static__1e493592d_log_error(_6524_l);
			}
		}
		_match_end_1e74d3c15:;
	};
}



inline void static__1e4935d4b_print_logs(jule::Slice<_1e1905060_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1e74d4870:;
		if (it != expr.end()) {
			_1e1905060_Log &_7616_l = *it;
			{
				static__1e4935b3c_log(_7616_l);
			}
			_iter_next_1e74d4870:;
			++it;
			goto _iter_begin_1e74d4870;
		}
		_iter_end_1e74d4870:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e3e4dbd3_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4935466_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1e501687c_unix(_1e50164c5_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1e501b992_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1e501bd27_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e50164c5_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1e5016b68_Time static__1e501700e_unix(jule::U64 _9124_sec) {
	return _1e5016b68_Time{._field_sec=_9124_sec};
}



inline _1e5016b68_Time static__1e501720c_now(void) {
	return static__1e501700e_unix(static_cast<jule::U64>(_1e501b651_unix()));
}



inline jule::U64 _1e501765d_unix(_1e5016b68_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1e50178c2_day(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_day;
}



inline jule::U64 _1e5017b36_month(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_month;
}



inline jule::U64 _1e5017d9a_year(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_year;
}



inline jule::U64 _1e501810e_second(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_second;
}



inline jule::U64 _1e5018373_minute(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1e50185d7_hour(_1e5016b68_Time* _self_) {
	return _1e501884b_abs(&(*_self_))._field_hour;
}



inline _1e50164c5_AbsTime _1e501884b_abs(_1e5016b68_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1e5015a68_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1e5015a68_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1e7515cad:;
	}
	_iter_end_1e7515cad:;;
	_1e50164c5_AbsTime _17417_t = _1e50164c5_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5016b68_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4e9055e_ScopeCoder> static__1e4e90b47_new(jule::Ptr<_1e501c366_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1e4e9055e_ScopeCoder>(_1e4e9055e_ScopeCoder{._field_oc=_5524_oc});
}



inline void _1e4e90dbc_range_index_iter(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd0b4_RangeIter>& _6141_it) {
	jule::Str _6213_begin = static__1e4eabcc8_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	jule::Str _6313_next = static__1e4eac317_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1e1c5d781_COPY && _1e4e95a81_is_copy_optimizable(_6141_it.get()._field_expr))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e4ea3473_model(_self_.get()._field_oc.get()._field_ec, _6141_it.get()._field_expr.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, _6213_begin);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1e501e005_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	if ((_6141_it.get()._field_key_b != nullptr)) {
		if (_1e1c5d781_COPY) {
			_6141_it.get()._field_key_b.get()._field_reference=_1e4e95e38_is_iter_copy_optimizable(_6141_it.get()._field_expr,_6141_it.get()._field_key_b);
		};
		_1e501e005_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	_1e4e954a9_scope(_self_, _6141_it.get()._field_scope);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, _6313_next);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e5002659_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, static__1e4eaba31_var(_6141_it.get()._field_key_a));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e5000679_write(_self_.get()._field_oc, _6213_begin);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac070_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4e91142_range_hashmap_iter(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd0b4_RangeIter>& _12943_it) {
	jule::Str _13013_begin = static__1e4eabcc8_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	jule::Str _13113_next = static__1e4eac317_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1e1c5d781_COPY && _1e4e95a81_is_copy_optimizable(_12943_it.get()._field_expr))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e4ea3473_model(_self_.get()._field_oc.get()._field_ec, _12943_it.get()._field_expr.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, _13013_begin);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	if ((_12943_it.get()._field_key_a != nullptr)) {
		if (_1e1c5d781_COPY) {
			_12943_it.get()._field_key_a.get()._field_reference=_1e4e95e38_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_a);
		};
		_1e501e005_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	if ((_12943_it.get()._field_key_b != nullptr)) {
		if (_1e1c5d781_COPY) {
			_12943_it.get()._field_key_b.get()._field_reference=_1e4e95e38_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_b);
		};
		_1e501e005_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	_1e4e954a9_scope(_self_, _12943_it.get()._field_scope);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, _13113_next);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e5000679_write(_self_.get()._field_oc, _13013_begin);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac070_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4e913b7_if_case(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3eb7ea0_If> _19531_i) {
	if ((_19531_i.get()._field_expr != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _19531_i.get()._field_expr);
		_1e5000679_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1e4e954a9_scope(_self_, _19531_i.get()._field_scope);
}



inline void _1e4e9163c_conditional(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecc9ed_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1e75a9cdb:;
		if (it != expr.end()) {
			jule::Ptr<_1e3eb7ea0_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1e75a9cdb;
				};
				if (_20517_writed) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1e4e913b7_if_case(_self_, _20621_elif);
			}
			_iter_next_1e75a9cdb:;
			++it;
			goto _iter_begin_1e75a9cdb;
		}
		_iter_end_1e75a9cdb:;
	};
	if ((_20435_c.get()._field_default != nullptr)) {
		if (_20517_writed) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1e4e954a9_scope(_self_, _20435_c.get()._field_default.get()._field_scope);
	};
}



inline void _1e4e918b2_inf_iter(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3eccbda_InfIter> _22432_it) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e4e954a9_scope(_self_, _22432_it.get()._field_scope);
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac317_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac070_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e4e91b37_while_iter(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3eccdc7_WhileIter> _24134_it) {
	if (((_24134_it.get()._field_expr != nullptr) && (_24134_it.get()._field_next == nullptr))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		_1e5000679_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24134_it.get()._field_expr != nullptr)) {
			_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		};
		_1e5000679_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24134_it.get()._field_next != nullptr)) {
			_1e4e94eae_st(_self_, _24134_it.get()._field_next);
		};
		_1e5000679_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e4e954a9_scope(_self_, _24134_it.get()._field_scope);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac317_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac070_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e4e91dac_range_iter(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd0b4_RangeIter> _27434_it) {
	{
		
		if ((_1e40946a8_slc(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e75ba2e6:;
			{
				_1e4e90dbc_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1e4094444_arr(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e75b9eb6:;
			{
				_1e4e90dbc_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1e4095159_map(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e75ba02c:;
			{
				_1e4e91142_range_hashmap_iter(_self_, _27434_it);
			}
		}
		else {
			_case_begin_1e75b9e50:;
			{
				_1e4e90dbc_range_index_iter(_self_, _27434_it);
			}
		}
		_match_end_1e75b9d73:;
	};
}



inline void _1e4e92132_cont(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd2a1_ContSt> _28724_c) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac317_iter_next(_28724_c.get()._field_it));
}



inline void _1e4e923a7_label(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd67a_Label> _29225_l) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac5ae_label(_29225_l.get()._field_ident));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1e4e9262c_goto_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd867_GotoSt> _29727_gt) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac5ae_label(_29727_gt.get()._field_ident));
}



inline void _1e4e928a2_postfix(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecda54_Postfix> _30231_p) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1e5000679_write(_self_.get()._field_oc, _30231_p.get()._field_op);
}



inline void _1e4e92b27_assign(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecdc41_Assign> _30930_a) {
	_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_l.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, _30930_a.get()._field_op.get()._field_kind);
	_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_r.get()._field_model);
}



inline void _1e4e92d9c_multi_assign(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecde2d_MultiAssign> _31536_a) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31536_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1e75c4564:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31536_a.get()._field_l.len() - _31714_i) > 1LL)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e75c4564:;
			++it;
			_31714_i++;
			goto _iter_begin_1e75c4564;
		}
		_iter_end_1e75c4564:;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _31536_a.get()._field_r);
}



inline jule::Fn<void(void)> _1e4e931aa_match_expr(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece11a_Match> _33134_m) {
	if ((!(_1e4066ba8_is_const(_33134_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1e33e4a1a_is_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1e33e2672_read_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e4ea3473_model(_self_.get()._field_oc.get()._field_ec, _33134_m.get()._field_expr.get()._field_model);
		});
	};
	return nullptr;
}



inline void _1e4e934c9_case(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece11a_Match> _34128_m, jule::Ptr<_1e3ece538_Case> _34143_c) {
	if (((_34143_c.get()._field_exprs.len() != 0LL) && (!(_1e3eaa7ab_is_generic_type_match(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_cases.len() > 0LL) && (_34128_m.get()._field_cases[0LL] == _34143_c))) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1e75cc6c1:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1e40662e5_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_type_match))) {
							_case_begin_1e75ce9ae:;
							{
								jule::Fn<void(void)> _35125_case_expr = _1e4e931aa_match_expr(_self_, _34128_m);;
								if (_1e4066eb6_good_operand(_34128_m.get()._field_expr.ptr(), _34825_expr)) {
									if ((_35125_case_expr != nullptr)) {
										_35125_case_expr();
										_1e5000679_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								} else {
									_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
									if ((_35125_case_expr != nullptr)) {
										_1e5000679_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1e75cd419:;
							{
								_1e5000679_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1e5000679_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								_1e5000679_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1e75cd33c:;
					};
					if (((_34143_c.get()._field_exprs.len() - _34818_i) > 1LL)) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1e75cc6c1:;
				++it;
				_34818_i++;
				goto _iter_begin_1e75cc6c1;
			}
			_iter_end_1e75cc6c1:;
		};
		_1e5000679_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_default == _34143_c) && (_34128_m.get()._field_cases.len() != 0LL))) {
		_1e5002659_indent(_self_.get()._field_oc);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eacaed_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1e5002659_indent(_self_.get()._field_oc);
		_1e4e954a9_scope(_self_, _34143_c.get()._field_scope);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4e9374e_match_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece11a_Match> _40032_m) {
	if (((_40032_m.get()._field_cases.len() == 0LL) && (_40032_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _40513_generic_type_match = _1e3eaa7ab_is_generic_type_match(_40032_m.ptr());;
	if ((_40513_generic_type_match && ((_40032_m.get()._field_default == nullptr) || (_40032_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	if (((!(_40513_generic_type_match)) && (!(_1e4066ba8_is_const(_40032_m.get()._field_expr.ptr()))))) {
		if ((_1e1c5d781_COPY && _1e4e95a81_is_copy_optimizable(_40032_m.get()._field_expr))) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _40032_m.get()._field_expr.get()._field_model);
		_1e5000679_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1e5002659_indent(_self_.get()._field_oc);
	};
	if ((_40032_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _40032_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1e75de480:;
			if (it != expr.end()) {
				jule::Ptr<_1e3ece538_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1e75de480;
					};
					_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e5002659_indent(_self_.get()._field_oc);
					_1e4e934c9_case(_self_, _40032_m,_42925_c);
				}
				_iter_next_1e75de480:;
				++it;
				goto _iter_begin_1e75de480;
			}
			_iter_end_1e75de480:;
		};
	};
	if ((_40032_m.get()._field_default != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e4e934c9_case(_self_, _40032_m,_40032_m.get()._field_default);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eac856_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40032_m))));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4e939c4_fall_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece725_FallSt> _45627_f) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e5000679_write(_self_.get()._field_oc, static__1e4eacaed_case_begin(_45627_f.get()._field_dest_case));
}



inline void _1e4e93c49_break_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ecd48d_BreakSt> _46128_b) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46128_b.get()._field_it != 0LLU)) {
		_1e5000679_write(_self_.get()._field_oc, static__1e4eac070_iter_end(_46128_b.get()._field_it));
	} else {
		_1e5000679_write(_self_.get()._field_oc, static__1e4eac856_match_end(_46128_b.get()._field_mtch));
	};
}



inline void _1e4e93ebe_ret_with_vars(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece912_RetSt> _47037_r) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_47037_r.get()._field_func.get()._field_result));
		_1e5000679_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47037_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1e75e9b3e:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1e401a92b_Var> _48021_v = *it;
			{
				if (_1e1c3478a_is_ignore_ident(_48021_v.get()._field_ident)) {
					_1e4ea3be3_init_expr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_kind.get()._field_kind);
				} else {
					_1e5000679_write(_self_.get()._field_oc, static__1e4eaba31_var(_48021_v));
				};
				if (((_47037_r.get()._field_vars.len() - _48014_i) > 1LL)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e75e9b3e:;
			++it;
			_48014_i++;
			goto _iter_begin_1e75e9b3e;
		}
		_iter_end_1e75e9b3e:;
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e4e94244_ret_tuple(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece912_RetSt> _50033_r) {
	jule::Slice<jule::Ptr<_1e40662e5_Data>> _50117_datas = _50033_r.get()._field_expr.operator jule::Ptr<_1e33ebdda_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _50033_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1e75ee14e:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1e401a92b_Var> _50221_v = *it;
			{
				if (_1e1c3478a_is_ignore_ident(_50221_v.get()._field_ident)) {
					goto _iter_next_1e75ee14e;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1e75ee14e;
				};
				_1e5000679_write(_self_.get()._field_oc, static__1e4eaba31_var(_50221_v));
				_1e5000679_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1e5002659_indent(_self_.get()._field_oc);
			}
			_iter_next_1e75ee14e:;
			++it;
			_50214_i++;
			goto _iter_begin_1e75ee14e;
		}
		_iter_end_1e75ee14e:;
	};
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_50033_r.get()._field_func.get()._field_result));
		_1e5000679_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1e76041a9:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1e40662e5_Data> _52721_d = *it;
			{
				jule::Ptr<_1e401a92b_Var> _52821_v = _50033_r.get()._field_vars[_52714_i];;
				if (_1e1c3478a_is_ignore_ident(_52821_v.get()._field_ident)) {
					_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_model);
				} else {
					_1e5000679_write(_self_.get()._field_oc, static__1e4eaba31_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e76041a9:;
			++it;
			_52714_i++;
			goto _iter_begin_1e76041a9;
		}
		_iter_end_1e76041a9:;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e4e944b9_ret_with_exprs(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece912_RetSt> _54538_r) {
	if ((_54538_r.get()._field_vars.len() > 1LL)) {
		_1e4e94244_ret_tuple(_self_, _54538_r);
		return;;
	};
	if ((_54538_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1e401a92b_Var> _55321_v = _54538_r.get()._field_vars[0LL];;
		if (((!(_1e1c3478a_is_ignore_ident(_55321_v.get()._field_ident))) && (_54538_r.get()._field_expr != _55321_v))) {
			jule::Str _55521_ident = static__1e4eaba31_var(_55321_v);;
			_1e5000679_write(_self_.get()._field_oc, _55521_ident);
			_1e5000679_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
			_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1e5002659_indent(_self_.get()._field_oc);
			if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1e5000679_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_54538_r.get()._field_func.get()._field_result));
				_1e5000679_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1e5000679_write(_self_.get()._field_oc, _55521_ident);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1e5000679_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1e5000679_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_54538_r.get()._field_func.get()._field_result));
		_1e5000679_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
	return;;
}



inline void _1e4e9473e_ret_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3ece912_RetSt> _58930_r) {
	if (((_58930_r.get()._field_expr == nullptr) && (_58930_r.get()._field_vars.len() == 0LL))) {
		if (_58930_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1e5000679_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58930_r.get()._field_expr == nullptr)) {
		_1e4e93ebe_ret_with_vars(_self_, _58930_r);
		return;;
	};
	_1e4e944b9_ret_with_exprs(_self_, _58930_r);
}



inline void _1e4e94c39_var(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e401a92b_Var> _62427_v) {
	if ((!(_62427_v.get()._field_constant))) {
		_1e501e27a_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1e4e94eae_st(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e3e547aa_Scope>>()) {
			_case_begin_1e761a5ee:;
			{
				_1e4e954a9_scope(_self_, _63126_st.operator jule::Ptr<_1e3e547aa_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e761a2ad:;
			{
				_1e4e94c39_var(_self_, _63126_st.operator jule::Ptr<_1e401a92b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e761ac1a:;
			{
				_1e4ea36e8_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e40662e5_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecc9ed_Conditional>>()) {
			_case_begin_1e761ac81:;
			{
				_1e4e9163c_conditional(_self_, _63126_st.operator jule::Ptr<_1e3ecc9ed_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
			_case_begin_1e761ace7:;
			{
				_1e4e918b2_inf_iter(_self_, _63126_st.operator jule::Ptr<_1e3eccbda_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
			_case_begin_1e761ad5d:;
			{
				_1e4e91b37_while_iter(_self_, _63126_st.operator jule::Ptr<_1e3eccdc7_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
			_case_begin_1e761adc4:;
			{
				_1e4e91dac_range_iter(_self_, _63126_st.operator jule::Ptr<_1e3ecd0b4_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd2a1_ContSt>>()) {
			_case_begin_1e761ae3a:;
			{
				_1e4e92132_cont(_self_, _63126_st.operator jule::Ptr<_1e3ecd2a1_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd67a_Label>>()) {
			_case_begin_1e761aea1:;
			{
				_1e4e923a7_label(_self_, _63126_st.operator jule::Ptr<_1e3ecd67a_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd867_GotoSt>>()) {
			_case_begin_1e761b017:;
			{
				_1e4e9262c_goto_st(_self_, _63126_st.operator jule::Ptr<_1e3ecd867_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecda54_Postfix>>()) {
			_case_begin_1e761b07d:;
			{
				_1e4e928a2_postfix(_self_, _63126_st.operator jule::Ptr<_1e3ecda54_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecdc41_Assign>>()) {
			_case_begin_1e761b0e4:;
			{
				_1e4e92b27_assign(_self_, _63126_st.operator jule::Ptr<_1e3ecdc41_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecde2d_MultiAssign>>()) {
			_case_begin_1e761b16b:;
			{
				_1e4e92d9c_multi_assign(_self_, _63126_st.operator jule::Ptr<_1e3ecde2d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
			_case_begin_1e761b1e3:;
			{
				_1e4e9374e_match_st(_self_, _63126_st.operator jule::Ptr<_1e3ece11a_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece725_FallSt>>()) {
			_case_begin_1e761b26a:;
			{
				_1e4e939c4_fall_st(_self_, _63126_st.operator jule::Ptr<_1e3ece725_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd48d_BreakSt>>()) {
			_case_begin_1e761b2e2:;
			{
				_1e4e93c49_break_st(_self_, _63126_st.operator jule::Ptr<_1e3ecd48d_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece912_RetSt>>()) {
			_case_begin_1e761b369:;
			{
				_1e4e9473e_ret_st(_self_, _63126_st.operator jule::Ptr<_1e3ece912_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e27a0ed7_PushToSliceExprModel>>()) {
			_case_begin_1e761b3e1:;
			{
				_1e4ea140a_push_to_slice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e27a0ed7_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2ae7680_MutSlicingExprModel>>()) {
			_case_begin_1e761b468:;
			{
				_1e4ea2e78_mut_slicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e2ae7680_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel>>()) {
			_case_begin_1e761b4e0:;
			{
				_1e4ea31ed_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1e761a005:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1e7619ea0:;
	};
}



inline void _1e4e95234_scope_stmts(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3e547aa_Scope>& _68136_s) {
	{
		auto &expr = _68136_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1e76266c6:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1e5002659_indent(_self_.get()._field_oc);
				_1e4e94eae_st(_self_, _68221_st);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1e76266c6:;
			++it;
			goto _iter_begin_1e76266c6;
		}
		_iter_end_1e76266c6:;
	};
}



inline void _1e4e954a9_scope(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3e547aa_Scope> _69029_s) {
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	if (_69029_s.get()._field_deferred) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e4e95234_scope_stmts(_self_, _69029_s);
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_deferred) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1e4e9572e_func_scope(jule::Ptr<_1e4e9055e_ScopeCoder> _self_, jule::Ptr<_1e3404651_FnIns> _70634_f) {
	if ((_70634_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	if ((!(_1e3401e12_is_void(_70634_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _71321_types = _1e3405135_types(_70634_f.ptr());;
		{
			auto &expr = _70634_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1e762c4ac:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1e1c31ee6_Token> _71420_ident = *it;
				{
					if ((_1e1c3478a_is_ignore_ident(_71420_ident.get()._field_kind) || _1e1c34a32_is_anon_ident(_71420_ident.get()._field_kind))) {
						goto _iter_next_1e762c4ac;
					};
					_1e5002659_indent(_self_.get()._field_oc);
					_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_71321_types[_71417_i]));
					_1e5000679_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1e5000679_write(_self_.get()._field_oc, static__1e4eaa425_to_local(_71420_ident.get()._field_row,_71420_ident.get()._field_column,_71420_ident.get()._field_kind));
					_1e5000679_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1e4ea3be3_init_expr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1e762c4ac:;
				++it;
				_71417_i++;
				goto _iter_begin_1e762c4ac;
			}
			_iter_end_1e762c4ac:;
		};
	};
	_1e4e95234_scope_stmts(_self_, _70634_f.get()._field_scope);
	if ((_70634_f.get()._field_decl.get()._field_exceptional && _1e3401e12_is_void(_70634_f.get()._field_decl.ptr()))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4e9055e_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4e980a0_ExprCoder> static__1e4e9849b_new(jule::Ptr<_1e501c366_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1e4e980a0_ExprCoder>(_1e4e980a0_ExprCoder{._field_oc=_9724_oc});
}



inline void _1e4e98721_string(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3388a47_Const>& _10327_c) {
	jule::Str _10413_content = _1e33e28d6_read_str(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1e3e4daa1_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1e4ea48e7_cstr_lit(_10913_bytes);;
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e5000679_write(_self_.get()._field_oc, _11113_lit);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1e5000679_write(_self_.get()._field_oc, _11013_len);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e98996_boolean(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3388a47_Const>& _12028_c) {
	if (_1e33e2672_read_bool(_12028_c.ptr())) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1e4e98b72_nil_lit(jule::Ptr<_1e4e980a0_ExprCoder> _self_) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1e4e98e80_ftoa_special_cases(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::F64& _13239_x) {
	{
		
		if (_1e3db3395_is_nan(_13239_x)) {
			_case_begin_1e764be7c:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e3dbe02c_is_inf(_13239_x,1LL)) {
			_case_begin_1e764b740:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e3dbe02c_is_inf(_13239_x,-1LL)) {
			_case_begin_1e764b7a6:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1e764b6c9:;
			{
				return false;
			}
		}
		_match_end_1e764b5ec:;
	};
	return true;
}



inline void _1e4e99205_float32(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3388a47_Const>& _14628_c) {
	jule::F64 _14713_x = _1e33e3387_as_f64(_14628_c.ptr());;
	if (_1e4e98e80_ftoa_special_cases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1e7654803:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1e7654506:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1e7653e73:;
			{
				_1e5000679_write(_self_.get()._field_oc, _1e4ea4c05_ftoa(_14713_x,32LL));
				_1e5000679_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1e76541e8:;
	};
}



inline void _1e4e9947a_float64(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3388a47_Const>& _16528_c) {
	jule::F64 _16613_x = _1e33e3387_as_f64(_16528_c.ptr());;
	if (_1e4e98e80_ftoa_special_cases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1e765788e:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1e7657ebb:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1e765700e:;
			{
				_1e5000679_write(_self_.get()._field_oc, _1e4ea4c05_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1e7657284:;
	};
}



inline void _1e4e99799_constant(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3388a47_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1e33e4c7e_is_str(_18432_c.ptr())) {
			_case_begin_1e76597b4:;
			{
				_1e4e98721_string(_self_, _18432_c);
			}
		}
		else if (_1e33e4a1a_is_bool(_18432_c.ptr())) {
			_case_begin_1e765982a:;
			{
				_1e4e98996_boolean(_self_, _18432_c);
			}
		}
		else if (_1e33e4ee3_is_f64(_18432_c.ptr())) {
			_case_begin_1e7659891:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1e765bac4:;
						{
							_1e4e99205_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1e765b72d:;
						{
							_1e4e9947a_float64(_self_, _18432_c);
						}
					}
					_match_end_1e765b651:;
				};
			}
		}
		else if (_1e33e4542_is_i64(_18432_c.ptr())) {
			_case_begin_1e7659907:;
			{
				_1e5000679_write(_self_.get()._field_oc, _1e4ea4e9c_itoa(static_cast<jule::I64>(_1e33e2199_read_i64(_18432_c.ptr()))));
			}
		}
		else if (_1e33e47a6_is_u64(_18432_c.ptr())) {
			_case_begin_1e765a254:;
			{
				_1e5000679_write(_self_.get()._field_oc, _1e4ea5244_utoa(static_cast<jule::U64>(_1e33e240d_read_u64(_18432_c.ptr()))));
			}
		}
		else if (_1e33e5257_is_nil(_18432_c.ptr())) {
			_case_begin_1e765a2ba:;
			{
				_1e4e98b72_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1e765974d:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1e7659671:;
	};
}



inline void _1e4e99b62_div_by_zero_binary(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e1c31ee6_Token>& _20839_op, jule::Ptr<_1e33cb073_OperandExprModel>& _20856_l, jule::Ptr<_1e33cb073_OperandExprModel>& _20883_r) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20839_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1e765eb71:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e765ec3c:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1e765ead8:;
	};
	if ((!(_22eb5e27b_PRODUCTION))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4ed562b_loc_info(_self_.get()._field_oc, _20839_op);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e4ea36e8_expr(_self_, _20856_l.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e4ea36e8_expr(_self_, _20883_r.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e99dd7_unsafe_binary(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9536_BinopExprModel> _23037_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4ea3473_model(_self_, _23037_m.get()._field_left.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e5000679_write(_self_.get()._field_oc, _23037_m.get()._field_op.get()._field_kind);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e4ea3473_model(_self_, _23037_m.get()._field_right.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9a15c_binary(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9536_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1e76663a3:;
			{
				if ((_1e4094b81_strct(_24030_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1e4e99b62_div_by_zero_binary(_self_, _24030_m.get()._field_op,_24030_m.get()._field_left,_24030_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1e76662e8:;
	};
	_1e4e99dd7_unsafe_binary(_self_, _24030_m);
}



inline void _1e4e9a3d2_var(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e401a92b_Var> _25227_m) {
	if (_25227_m.get()._field_cpp_linked) {
		jule::Ptr<_1e330242d_Directive> _25417_d = _1e502a5e9_find_directive(_25227_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1e5000679_write(_self_.get()._field_oc, _1e50221c3_concat_all_parts(_25417_d.get()._field_args));
			_1e5000679_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaba31_var(_25227_m));
}



inline void _1e4e9a657_structure_ins(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3352093_StructIns> _26337_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e502667d_structure_ins(_26337_m));
}



inline void _1e4e9a8cc_unary(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9723_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e766aee0:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1e4ea36e8_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e766b056:;
			{
				if ((_22eb5e27b_PRODUCTION || (_1e4093993_sptr(_26729_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1e766ae35;
				};
				_1e4ea36e8_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1e4ed562b_loc_info(_self_.get()._field_oc, _26729_m.get()._field_op);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1e766ae35:;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e5000679_write(_self_.get()._field_oc, _26729_m.get()._field_op.get()._field_kind);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4ea36e8_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1e4e9ab52_structure_lit(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9aec_StructLitExprModel> _29137_m) {
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e4eab4e2_structure_ins(_29137_m.get()._field_strct));
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29137_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29137_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1e7673668:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1e332d657_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29137_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1e767423a:;
						if (it != expr.end()) {
							jule::Ptr<_1e33e9910_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_field == _30420_f)) {
									_1e5000679_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1e5000679_write(_self_.get()._field_oc, static__1e4eab789_field(_30529_arg.get()._field_field.get()._field_decl));
									_1e5000679_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1e4ea36e8_expr(_self_, _30529_arg.get()._field_expr);
									if (((_29137_m.get()._field_strct.get()._field_fields.len() - _30417_i) > 1LL)) {
										_1e5000679_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1e7673668;
								};
							}
							_iter_next_1e767423a:;
							++it;
							goto _iter_begin_1e767423a;
						}
						_iter_end_1e767423a:;
					};
				}
				_iter_next_1e7673668:;
				++it;
				_30417_i++;
				goto _iter_begin_1e7673668;
			}
			_iter_end_1e7673668:;
		};
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4e9adc7_alloc_structure(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9cd9_AllocStructLitExprModel> _32239_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e5000679_write(_self_.get()._field_oc, static__1e4eab4e2_structure_ins(_32239_m.get()._field_lit.get()._field_strct));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1e4e9ab52_structure_lit(_self_, _32239_m.get()._field_lit);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9b14c_casting(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33e9ec6_CastingExprModel> _33031_m) {
	{
		
		if (((_1e409372e_prim(_33031_m.get()._field_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim(_33031_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e767a131:;
			{
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
				_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e4ea3473_model(_self_, _33031_m.get()._field_expr);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e4093c07_ptr(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || (_1e4093c07_ptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e7679d01:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1e4ea36e8_expr(_self_, _33031_m.get()._field_expr);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1e4094de5_trt(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1e409372e_prim(_33031_m.get()._field_expr_kind.ptr()) != nullptr) && _1e409935b_is_any(_1e409372e_prim(_33031_m.get()._field_expr_kind.ptr()).ptr())) || (_1e40941d0_tenm(_33031_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1e7679d67:;
			{
				_1e4ea3473_model(_self_, _33031_m.get()._field_expr);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_22eb5e27b_PRODUCTION) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
					_1e5000679_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1e4093993_sptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_1e4093993_sptr(_33031_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1e5000679_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
					};
					_1e5000679_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1e4ed562b_loc_info(_self_.get()._field_oc, _33031_m.get()._field_token);
					_1e5000679_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1e4094de5_trt(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e7679dcd:;
			{
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
				_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e4ea36e8_expr(_self_, _33031_m.get()._field_expr);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1e5000679_write(_self_.get()._field_oc, _1e3e4dbd3_itoa(static_cast<jule::I64>(_1e5003a89_find_type_offset(_self_.get()._field_oc.ptr(), _1e4094de5_trt(_33031_m.get()._field_kind.ptr()),_33031_m.get()._field_expr_kind))));
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1e7679c8a:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_33031_m.get()._field_kind));
				_1e5000679_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1e4ea36e8_expr(_self_, _33031_m.get()._field_expr);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e7679bad:;
	};
}



inline void _1e4e9b3c2_args(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1e768a729:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1e4ea36e8_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e768a729:;
			++it;
			_38514_i++;
			goto _iter_begin_1e768a729;
		}
		_iter_end_1e768a729:;
	};
}



inline void _1e4e9b647_model_for_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Any _39338_expr) {
	{
		auto &_match_expr{ _39338_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
			_case_begin_1e768c6e8:;
			{
				_1e4e9e42a_func_ins(_self_, _39338_expr.operator jule::Ptr<_1e3404651_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e768c770:;
			{
				jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _39921_ssie = _39338_expr.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_method != nullptr)) {
					_1e4e9e42a_func_ins(_self_, _39921_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1e768c5d8:;
	};
	_1e4ea3473_model(_self_, _39338_expr);
}



inline void _1e4e9b8bc_push_call_inf(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel>& _40834_m) {
	if ((_22eb5e27b_PRODUCTION || ((!(_40834_m.get()._field_func.get()._field_anon)) && (!(_1e4ea58b5_is_builtin_call_has_debuginf(_40834_m)))))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40834_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40834_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
				_case_begin_1e7690b19:;
				{
					if (_40834_m.get()._field_expr.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1e7690ce5;
				}
			}
			else {
				_case_begin_1e7690ce5:;
				{
					_1e5000679_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1e7690bc4:;
		};
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1e4ed562b_loc_info(_self_.get()._field_oc, _40834_m.get()._field_token);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40834_m.get()._field_args.len() != 0LL)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1e4e9bbca_is_wrapped(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel>& _43335_m) {
	if ((((!(_1e3405399_is_builtin(_43335_m.get()._field_func.ptr()))) && (_43335_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e3400790_is_self(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43335_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
				_case_begin_1e7694854:;
				{
					jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _43725_ssie = _43335_m.get()._field_expr.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>();;
					{
						
						if (_1e3400a04_is_ref(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1e4093993_sptr(_43725_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1e769517e:;
							{
								goto _match_end_1e7695712;
							}
						}
						else {
							_case_begin_1e7695778:;
							{
								if ((_1e4094b81_strct(_43725_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_expr.get()._field_lvalue))) {
										_1e5000679_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1e4ea3473_model(_self_, _43725_ssie.get()._field_expr.get()._field_model);
										_1e5000679_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1e7695712:;
					};
				}
			}
			_match_end_1e7694645:;
		};
	};
	return false;
}



inline void _1e4e9be50_pure_func_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel>& _45739_m) {
	jule::Bool _45813_wrapped = _1e4e9bbca_is_wrapped(_self_, _45739_m);;
	if (_45739_m.get()._field_is_co) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1e4e9b647_model_for_call(_self_, _45739_m.get()._field_expr);
	if ((!(_1e3405399_is_builtin(_45739_m.get()._field_func.ptr())))) {
		if ((_45739_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45739_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1e502a97e_has_directive(_45739_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1e5000679_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45739_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1e769bae2:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1e4091661_TypeKind> _46733_g = *it;
						{
							_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_46733_g));
							if (((_45739_m.get()._field_func.get()._field_generics.len() - _46726_i) > 1LL)) {
								_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1e769bae2:;
						++it;
						_46726_i++;
						goto _iter_begin_1e769bae2;
					}
					_iter_end_1e769bae2:;
				};
				_1e5000679_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1e4e9b8bc_push_call_inf(_self_, _45739_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1e3405399_is_builtin(_45739_m.get()._field_func.ptr()))) && (_45739_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e3400790_is_self(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45739_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
				_case_begin_1e769a7e4:;
				{
					jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _48225_ssie = _45739_m.get()._field_expr.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>();;
					{
						
						if (_1e3400a04_is_ref(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1e76a2730:;
							{
								_1e4ea3473_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
							}
						}
						else if ((_1e4093993_sptr(_48225_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1e76a2c91:;
							{
								_1e4ea3473_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								_1e5000679_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22eb5e27b_PRODUCTION))) {
									_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1e4ed562b_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
									_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1e76a1388:;
							{
								if ((_1e4094b81_strct(_48225_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1e5000679_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1e5000679_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1e4ea3473_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								};
							}
						}
						_match_end_1e76a1322:;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
				_case_begin_1e76a040e:;
				{
					_1e4ea3473_model(_self_, _45739_m.get()._field_expr.operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_22eb5e27b_PRODUCTION))) {
						_47817_locinfo=true;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1e76a0299:;
		};
	};
	_1e4e9b3c2_args(_self_, _45739_m.get()._field_args);
	if (_47817_locinfo) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1e4ed562b_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45739_m.get()._field_is_co) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e4e9c1c5_func_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea1b3_FnCallExprModel> _53633_m) {
	if (((_1e3405399_is_builtin(_53633_m.get()._field_func.ptr()) || (!(_53633_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53633_m.get()._field_except != nullptr) && (_53633_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1e4e9be50_pure_func_call(_self_, _53633_m);
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1e4e9be50_pure_func_call(_self_, _53633_m);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	if ((_53633_m.get()._field_except != nullptr)) {
		if (((_53633_m.get()._field_func.get()._field_result == nullptr) || (!(_53633_m.get()._field_assigned)))) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1e4e954a9_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			_1e5000679_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1e4ea55eb_is_forwarded(_53633_m.get()._field_except);;
			_1e5000679_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1e5000679_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1e4e954a9_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			if (_55821_forwarded) {
				_1e5000679_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1e4ea3be3_init_expr(_self_, _53633_m.get()._field_func.get()._field_result);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1e5000679_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1e5001e0b_done_indent(_self_.get()._field_oc);
	} else {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1e4ed562b_loc_info(_self_.get()._field_oc, _53633_m.get()._field_token);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e3401e12_is_void(_53633_m.get()._field_func.get()._field_decl.ptr())))) {
			_1e5002659_indent(_self_.get()._field_oc);
			_1e5000679_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1e5001e0b_done_indent(_self_.get()._field_oc);
	};
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e4e9c44a_slice(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea3a0_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_elems.len() == 0LL)) {
		_1e5000679_write(_self_.get()._field_oc, static__1e50255b1_as_slice(_58729_m.get()._field_elem_kind));
		_1e5000679_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e50255b1_as_slice(_58729_m.get()._field_elem_kind));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1e4e9b3c2_args(_self_, _58729_m.get()._field_elems);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e4e9c6c0_indexing(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea58c_IndexingExprModel> _59932_m) {
	_1e4ea3473_model(_self_, _59932_m.get()._field_expr.get()._field_model);
	{
		
		if (_22eb5e27b_PRODUCTION || (_1e4093c07_ptr(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1e4095159_map(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e76bb0d9:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e4ea36e8_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e76bb87b:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1e4ed562b_loc_info(_self_.get()._field_oc, _59932_m.get()._field_token);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1e4ea36e8_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e76bb815:;
	};
}



inline void _1e4e9c945_unsafe_indexing(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e271c1d9_UnsafeIndexingExprModel> _61839_m) {
	_1e4ea3473_model(_self_, _61839_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_22eb5e27b_PRODUCTION || (_1e4093c07_ptr(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1e4095159_map(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e76be483:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e4ea36e8_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e76c0d69:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1e4ea36e8_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e76c0d03:;
	};
}



inline void _1e4e9cbba_anon_func(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ea779_AnonFnExprModel> _63533_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e50279e2_func(_63533_m.get()._field_func));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1e501dbd6_params_ins(_self_.get()._field_oc, _63533_m.get()._field_func.get()._field_params);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1e5000679_write(_self_.get()._field_oc, static__1e50274a3_func_ins_result(_63533_m.get()._field_func));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e4e9572e_func_scope(_self_.get()._field_oc.get()._field_sc, _63533_m.get()._field_func);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9ce40_map(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eab53_MapExprModel> _64627_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_64627_m.get()._field_key_kind));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_64627_m.get()._field_val_kind));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1e76c98bc:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1e33ea966_KeyValPairExprModel> _65325_pair = *it;
				{
					_1e5000679_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1e4ea36e8_expr(_self_, _65325_pair.get()._field_key);
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1e4ea36e8_expr(_self_, _65325_pair.get()._field_val);
					_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_entries.len() - _65318_i) > 1LL)) {
						_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1e76c98bc:;
				++it;
				_65318_i++;
				goto _iter_begin_1e76c98bc;
			}
			_iter_end_1e76c98bc:;
		};
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e4e9d1b5_slicing(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ead40_SlicingExprModel> _66731_m) {
	_1e4ea3473_model(_self_, _66731_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22eb5e27b_PRODUCTION))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4ed562b_loc_info(_self_.get()._field_oc, _66731_m.get()._field_token);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e4ea36e8_expr(_self_, _66731_m.get()._field_left);
	if ((_66731_m.get()._field_right != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e4ea36e8_expr(_self_, _66731_m.get()._field_right);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9d43a_trait_sub(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eb02c_TraitSubIdentExprModel> _68333_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaac0b_trait_decl(_68333_m.get()._field_trt));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1e4ea3473_model(_self_, _68333_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa6bc_func(_68333_m.get()._field_method));
}



inline void _1e4e9d6b0_structure_sub(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _69237_m) {
	_1e4ea3473_model(_self_, _69237_m.get()._field_expr.get()._field_model);
	if ((_69237_m.get()._field_field != nullptr)) {
		if ((_1e4093c07_ptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1e4093993_sptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_22eb5e27b_PRODUCTION))) {
				_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1e4ed562b_loc_info(_self_.get()._field_oc, _69237_m.get()._field_token);
				_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1e5000679_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1e5000679_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1e5000679_write(_self_.get()._field_oc, static__1e4eab789_field(_69237_m.get()._field_field.get()._field_decl));
	};
}



inline void _1e4e9d935_common_ident(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eba11_CommonIdentExprModel> _71232_m) {
	_1e5000679_write(_self_.get()._field_oc, _71232_m.get()._field_ident);
}



inline void _1e4e9dbaa_common_sub(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ebbed_CommonSubIdentExprModel> _71634_m) {
	_1e4ea3473_model(_self_, _71634_m.get()._field_expr);
	{
		
		if ((_1e4093c07_ptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1e76d8cb6:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1e4093993_sptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1e76d94e2:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22eb5e27b_PRODUCTION))) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e4ed562b_loc_info(_self_.get()._field_oc, _71634_m.get()._field_token);
					_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1e5000679_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1e76d947b:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1e76d9415:;
	};
	_1e5000679_write(_self_.get()._field_oc, _71634_m.get()._field_ident);
}



inline void _1e4e9de30_array(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eb824_ArrayExprModel> _73529_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e5026925_array(_73529_m.get()._field_kind));
	if ((_73529_m.get()._field_elems.len() == 0LL)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_elems.len() == 2LL) && (_73529_m.get()._field_elems[1LL] == nullptr))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e4ea36e8_expr(_self_, _73529_m.get()._field_elems[0LL]);
		_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1e4e9b3c2_args(_self_, _73529_m.get()._field_elems);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1e4e9e1a5_func_ins_common(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3404651_FnIns> _75839_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e50279e2_func(_75839_m));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4e9e42a_func_ins(_self_, _75839_m);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9e42a_func_ins(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e3404651_FnIns> _76532_m) {
	if (((_76532_m.get()._field_decl != nullptr) && _76532_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1e330242d_Directive> _76717_d = _1e502a5e9_find_directive(_76532_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1e5000679_write(_self_.get()._field_oc, _1e50221c3_concat_all_parts(_76717_d.get()._field_args));
			_1e5000679_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa964_func_ins(_76532_m));
}



inline void _1e4e9e6a0_tuple(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ebdda_TupleExprModel> _77629_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1e76e6b81:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1e40662e5_Data> _77821_d = *it;
			{
				_1e4ea36e8_expr(_self_, _77821_d.get()._field_model);
				if (((_77629_m.get()._field_datas.len() - _77814_i) > 1LL)) {
					_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e76e6b81:;
			++it;
			_77814_i++;
			goto _iter_begin_1e76e6b81;
		}
		_iter_end_1e76e6b81:;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9e925_new_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel> _78732_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_78732_m.get()._field_kind));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78732_m.get()._field_init != nullptr)) {
		_1e4ea36e8_expr(_self_, _78732_m.get()._field_init);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9eb9a_out_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel> _79732_m) {
	if ((_79732_m.get()._field_debug && _22eb5e27b_PRODUCTION)) {
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1e4ea36e8_expr(_self_, _79732_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4e9ee20_outln_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel> _80634_m) {
	if ((_80634_m.get()._field_debug && _22eb5e27b_PRODUCTION)) {
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e4ea36e8_expr(_self_, _80634_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea0195_panic_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel> _81534_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1e4ea36e8_expr(_self_, _81534_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1e4ed562b_loc_info(_self_.get()._field_oc, _81534_m.get()._field_token);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e4ea041a_assert_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel> _82335_m) {
	if (_22eb5e27b_PRODUCTION) {
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1e4ea36e8_expr(_self_, _82335_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1e5000679_write(_self_.get()._field_oc, _1e4ea48e7_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82335_m.get()._field_log)));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1e4ed562b_loc_info(_self_.get()._field_oc, _82335_m.get()._field_token);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e4ea0690_error_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel> _83634_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e3401e12_is_void(_83634_m.get()._field_func.get()._field_decl.ptr())) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_83634_m.get()._field_func.get()._field_result));
		_1e5000679_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1e4ea36e8_expr(_self_, _83634_m.get()._field_err);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea0915_copy_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ed12d_BuiltinCopyCallExprModel> _84933_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1e4ea3473_model(_self_, _84933_m.get()._field_dest.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e409372e_prim(_84933_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1e4ea3473_model(_self_, _84933_m.get()._field_src.get()._field_model);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e409372e_prim(_84933_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea0b8a_make_call_slice(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>& _86540_m) {
	jule::Ptr<_1e409a0a4_Slc> _86617_slice = _1e40946a8_slc(_86540_m.get()._field_kind.ptr());;
	_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_86540_m.get()._field_kind));
	if ((_1e4093e6b_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86540_m.get()._field_cap != nullptr)) {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1e5000679_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1e4ea36e8_expr(_self_, _86540_m.get()._field_len);
	if ((_86540_m.get()._field_cap != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e4ea36e8_expr(_self_, _86540_m.get()._field_cap);
	};
	if ((_1e4093e6b_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e4ea3be3_init_expr(_self_, _86617_slice.get()._field_elem);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea0e10_make_call_str(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>& _89138_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e4ea36e8_expr(_self_, _89138_m.get()._field_len);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea1185_make_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel> _89833_m) {
	if ((_1e40946a8_slc(_89833_m.get()._field_kind.ptr()) != nullptr)) {
		_1e4ea0b8a_make_call_slice(_self_, _89833_m);
		return;;
	};
	_1e4ea0e10_make_call_str(_self_, _89833_m);
}



inline void _1e4ea140a_push_to_slice(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e27a0ed7_PushToSliceExprModel> _90637_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1e4ea3473_model(_self_, _90637_m.get()._field_dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_obj.slice(_90713_n);;
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1e5000679_write(_self_.get()._field_oc, _90913_dest);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e5000679_write(_self_.get()._field_oc, _1e3e4dbd3_itoa(static_cast<jule::I64>(_90637_m.get()._field_elems.get()._field_elems.len())));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90637_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1e7716882:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1e5000679_write(_self_.get()._field_oc, _90913_dest);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1e4ea3473_model(_self_, _91621_e);
				_1e5000679_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1e7716882:;
			++it;
			goto _iter_begin_1e7716882;
		}
		_iter_end_1e7716882:;
	};
}



inline void _1e4ea1680_append_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel> _92535_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1e4ea3473_model(_self_, _92535_m.get()._field_dest);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e4ea3473_model(_self_, _92535_m.get()._field_elements);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea1905_clone_call(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel> _93334_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1e4ea3473_model(_self_, _93334_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea1b7a_sizeof(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eb219_SizeofExprModel> _93930_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1e4ea3473_model(_self_, _93930_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea1e00_alignof(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ed97a_AlignofExprModel> _94531_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1e4ea3473_model(_self_, _94531_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1e4ea220d_rune_lit(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33edb67_RuneExprModel> _95128_m) {
	if ((_95128_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _1e4ea4331_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95128_m.get()._field_code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1e4ea4e9c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95128_m.get()._field_code)));
}



inline void _1e4ea2483_structure_static(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33eb637_StructStaticIdentExprModel> _96240_m) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa964_func_ins(_96240_m.get()._field_method));
}



inline void _1e4ea2708_integrated_to_str(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33edd54_IntegratedToStrExprModel> _96641_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1e4ea3473_model(_self_, _96641_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4ea297d_backend_emit(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ee041_BackendEmitExprModel> _97236_m) {
	if ((_97236_m.get()._field_exprs.len() == 0LL)) {
		_1e5000679_write(_self_.get()._field_oc, _97236_m.get()._field_code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97236_m.get()._field_exprs.len());;
	{
		auto &expr = _97236_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e77245b5:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1e4ea36e8_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97713_n);
			}
			_iter_next_1e77245b5:;
			++it;
			_97914_i++;
			goto _iter_begin_1e77245b5;
		}
		_iter_end_1e77245b5:;
	};
	_1e5000679_write(_self_.get()._field_oc, _1e413b909_format(_97236_m.get()._field_code,jule::Any(_97817_args)));
}



inline void _1e4ea2c03_free(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e33ee22d_FreeExprModel> _98728_m) {
	_1e4ea36e8_expr(_self_, _98728_m.get()._field_expr);
	if (_22eb5da50_RC) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1e4ea2e78_mut_slicing(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e2ae7680_MutSlicingExprModel> _99635_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4ea3473_model(_self_, _99635_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22eb5e27b_PRODUCTION))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4ed562b_loc_info(_self_.get()._field_oc, _99635_m.get()._field_token);
		_1e5000679_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e4ea36e8_expr(_self_, _99635_m.get()._field_left);
	if ((_99635_m.get()._field_right != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e4ea36e8_expr(_self_, _99635_m.get()._field_right);
	};
	_1e5000679_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1e4ea31ed_str_insert_begin(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel> _101340_m) {
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e4ea3473_model(_self_, _101340_m.get()._field_dest);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1e4ea3473_model(_self_, _101340_m.get()._field_expr);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1e4ea3473_model(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e4091661_TypeKind>>()) {
			_case_begin_1e772d679:;
			{
				_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_102129_m.operator jule::Ptr<_1e4091661_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e772d954:;
			{
				_1e4e99799_constant(_self_, _102129_m.operator jule::Ptr<_1e3388a47_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e772d9ba:;
			{
				_1e4e9a3d2_var(_self_, _102129_m.operator jule::Ptr<_1e401a92b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3352093_StructIns>>()) {
			_case_begin_1e772da31:;
			{
				_1e4e9a657_structure_ins(_self_, _102129_m.operator jule::Ptr<_1e3352093_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
			_case_begin_1e772da97:;
			{
				_1e4e9e1a5_func_ins_common(_self_, _102129_m.operator jule::Ptr<_1e3404651_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e1c5d462_UnsafeBinopExprModel>>()) {
			_case_begin_1e772e5ae:;
			{
				_1e4e99dd7_unsafe_binary(_self_, _102129_m.operator jule::Ptr<_1e1c5d462_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
			_case_begin_1e772e625:;
			{
				_1e4e9a15c_binary(_self_, _102129_m.operator jule::Ptr<_1e33e9536_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
			_case_begin_1e772e68b:;
			{
				_1e4e9a8cc_unary(_self_, _102129_m.operator jule::Ptr<_1e33e9723_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9aec_StructLitExprModel>>()) {
			_case_begin_1e772e702:;
			{
				_1e4e9ab52_structure_lit(_self_, _102129_m.operator jule::Ptr<_1e33e9aec_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>>()) {
			_case_begin_1e772e768:;
			{
				_1e4e9adc7_alloc_structure(_self_, _102129_m.operator jule::Ptr<_1e33e9cd9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9ec6_CastingExprModel>>()) {
			_case_begin_1e772e7ce:;
			{
				_1e4e9b14c_casting(_self_, _102129_m.operator jule::Ptr<_1e33e9ec6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e772e845:;
			{
				_1e4e9c1c5_func_call(_self_, _102129_m.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea3a0_SliceExprModel>>()) {
			_case_begin_1e772e8ab:;
			{
				_1e4e9c44a_slice(_self_, _102129_m.operator jule::Ptr<_1e33ea3a0_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb824_ArrayExprModel>>()) {
			_case_begin_1e772e922:;
			{
				_1e4e9de30_array(_self_, _102129_m.operator jule::Ptr<_1e33eb824_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e271c1d9_UnsafeIndexingExprModel>>()) {
			_case_begin_1e772e988:;
			{
				_1e4e9c945_unsafe_indexing(_self_, _102129_m.operator jule::Ptr<_1e271c1d9_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea58c_IndexingExprModel>>()) {
			_case_begin_1e772e9ee:;
			{
				_1e4e9c6c0_indexing(_self_, _102129_m.operator jule::Ptr<_1e33ea58c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ea779_AnonFnExprModel>>()) {
			_case_begin_1e772ea65:;
			{
				_1e4e9cbba_anon_func(_self_, _102129_m.operator jule::Ptr<_1e33ea779_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eab53_MapExprModel>>()) {
			_case_begin_1e772eacb:;
			{
				_1e4e9ce40_map(_self_, _102129_m.operator jule::Ptr<_1e33eab53_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ead40_SlicingExprModel>>()) {
			_case_begin_1e772eb42:;
			{
				_1e4e9d1b5_slicing(_self_, _102129_m.operator jule::Ptr<_1e33ead40_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
			_case_begin_1e772eba8:;
			{
				_1e4e9d43a_trait_sub(_self_, _102129_m.operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e772ec30:;
			{
				_1e4e9d6b0_structure_sub(_self_, _102129_m.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eba11_CommonIdentExprModel>>()) {
			_case_begin_1e772eca7:;
			{
				_1e4e9d935_common_ident(_self_, _102129_m.operator jule::Ptr<_1e33eba11_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>>()) {
			_case_begin_1e772ed2e:;
			{
				_1e4e9dbaa_common_sub(_self_, _102129_m.operator jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ebdda_TupleExprModel>>()) {
			_case_begin_1e772eda6:;
			{
				_1e4e9e6a0_tuple(_self_, _102129_m.operator jule::Ptr<_1e33ebdda_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>>()) {
			_case_begin_1e772ee2d:;
			{
				_1e4e9eb9a_out_call(_self_, _102129_m.operator jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e772eea5:;
			{
				_1e4e9ee20_outln_call(_self_, _102129_m.operator jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>>()) {
			_case_begin_1e773002c:;
			{
				_1e4e9e925_new_call(_self_, _102129_m.operator jule::Ptr<_1e33ec68d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e77300a4:;
			{
				_1e4ea0195_panic_call(_self_, _102129_m.operator jule::Ptr<_1e33ec87a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e773012b:;
			{
				_1e4ea041a_assert_call(_self_, _102129_m.operator jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e77301a3:;
			{
				_1e4ea0690_error_call(_self_, _102129_m.operator jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e773022a:;
			{
				_1e4ea1185_make_call(_self_, _102129_m.operator jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e77302a2:;
			{
				_1e4ea1680_append_call(_self_, _102129_m.operator jule::Ptr<_1e33ece41_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e7730329:;
			{
				_1e4ea1905_clone_call(_self_, _102129_m.operator jule::Ptr<_1e33ec4a1_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed12d_BuiltinCopyCallExprModel>>()) {
			_case_begin_1e77303a1:;
			{
				_1e4ea0915_copy_call(_self_, _102129_m.operator jule::Ptr<_1e33ed12d_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb219_SizeofExprModel>>()) {
			_case_begin_1e7730428:;
			{
				_1e4ea1b7a_sizeof(_self_, _102129_m.operator jule::Ptr<_1e33eb219_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ed97a_AlignofExprModel>>()) {
			_case_begin_1e77304a0:;
			{
				_1e4ea1e00_alignof(_self_, _102129_m.operator jule::Ptr<_1e33ed97a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33edb67_RuneExprModel>>()) {
			_case_begin_1e7730527:;
			{
				_1e5000679_write(_self_.get()._field_oc, _1e4ea220d_rune_lit(_self_, _102129_m.operator jule::Ptr<_1e33edb67_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb637_StructStaticIdentExprModel>>()) {
			_case_begin_1e773059e:;
			{
				_1e4ea2483_structure_static(_self_, _102129_m.operator jule::Ptr<_1e33eb637_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33edd54_IntegratedToStrExprModel>>()) {
			_case_begin_1e7730626:;
			{
				_1e4ea2708_integrated_to_str(_self_, _102129_m.operator jule::Ptr<_1e33edd54_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee041_BackendEmitExprModel>>()) {
			_case_begin_1e773069d:;
			{
				_1e4ea297d_backend_emit(_self_, _102129_m.operator jule::Ptr<_1e33ee041_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33ee22d_FreeExprModel>>()) {
			_case_begin_1e7730725:;
			{
				_1e4ea2c03_free(_self_, _102129_m.operator jule::Ptr<_1e33ee22d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2ae7680_MutSlicingExprModel>>()) {
			_case_begin_1e773079c:;
			{
				_1e4ea2e78_mut_slicing(_self_, _102129_m.operator jule::Ptr<_1e2ae7680_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel>>()) {
			_case_begin_1e7730824:;
			{
				_1e4ea31ed_str_insert_begin(_self_, _102129_m.operator jule::Ptr<_1e1c9a9ee_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1e772d800:;
			{
				_1e5000679_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1e772d723:;
	};
}



inline void _1e4ea36e8_expr(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Any _111428_e) {
	_1e4ea3473_model(_self_, _111428_e);
}



inline void _1e4ea396d_val(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e406736d_Value> _111827_v) {
	if (_1e4066ba8_is_const(_111827_v.get()._field_data.ptr())) {
		_1e4e99799_constant(_self_, _111827_v.get()._field_data.get()._field_constant,((_111827_v.get()._field_data.get()._field_kind != nullptr) && _1e409816d_is_f32(_1e409372e_prim(_111827_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1e4ea36e8_expr(_self_, _111827_v.get()._field_data.get()._field_model);
}



inline void _1e4ea3be3_init_expr(jule::Ptr<_1e4e980a0_ExprCoder> _self_, jule::Ptr<_1e4091661_TypeKind> _112633_t) {
	if ((_1e4093c07_ptr(_112633_t.ptr()) != nullptr)) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1e34189c8_Enum> _113117_enm = _1e4093e6b_enm(_112633_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1e4ea396d_val(_self_, _113117_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e5027c89_kind(_112633_t));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4e980a0_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e4ea6256_clone_func_decl(jule::Ptr<_1e3318840_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1e50263d6_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1e4ea64ed_clone_func_def(jule::Ptr<_1e3318840_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1e50263d6_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4ea5e9d_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4ea73cd_TestCoder> static__1e4ea7851_new(jule::Ptr<_1e501c366_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1e4ea73cd_TestCoder>(_1e4ea73cd_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1e3ee752e_ImportInfo> _1e4ea7ab5_find_testing_package(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e774d15a:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1e774d15a:;
			++it;
			goto _iter_begin_1e774d15a;
		}
		_iter_end_1e774d15a:;
	};
	return nullptr;
}



inline void _1e4ea7d3a_append_test(jule::Ptr<_1e4ea73cd_TestCoder> _self_, jule::Ptr<_1e3404651_FnIns> _4335_f) {
	_1e5002659_indent(_self_.get()._field_oc);
	_1e4ea8500_call_tm_reset(_self_);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e5000679_write(_self_.get()._field_oc, _1e4ea48e7_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa964_func_ins(_4335_f));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1e4ea80b0_append_package_tests(jule::Ptr<_1e4ea73cd_TestCoder> _self_, jule::Ptr<_1e3eea488_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e7753e1e:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1e77547b0:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _6225_f = *it;
						{
							if (_1e502a97e_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1e4ea7d3a_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1e77547b0:;
						++it;
						goto _iter_begin_1e77547b0;
					}
					_iter_end_1e77547b0:;
				};
			}
			_iter_next_1e7753e1e:;
			++it;
			goto _iter_begin_1e7753e1e;
		}
		_iter_end_1e7753e1e:;
	};
}



inline jule::Bool _1e4ea8324_ready_testing_package(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	jule::Ptr<_1e3ee752e_ImportInfo> _7117_p = _1e4ea7ab5_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1e3ee8970_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1e3328d39_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1e3328d39_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1e3328d39_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1e4ea8500_call_tm_reset(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa6bc_func(_self_.get()._field_tm_reset));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e4ea86cb_call_tm_failed(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa6bc_func(_self_.get()._field_tm_failed));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e4ea88a7_call_tm_skipped(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	_1e5000679_write(_self_.get()._field_oc, static__1e4eaa6bc_func(_self_.get()._field_tm_skipped));
	_1e5000679_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e4ea8a83_serialize(jule::Ptr<_1e4ea73cd_TestCoder> _self_) {
	_1e5021689_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1e50214ad_end(_self_.get()._field_oc);
	});;
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	if ((!(_1e4ea8324_ready_testing_package(_self_)))) {
		_1e5000679_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1e5001e0b_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1e5000679_write(_self_.get()._field_oc, static__1e50244e4_as_sptr(static__1e502667d_structure_ins(_self_.get()._field_t)));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1e5000679_write(_self_.get()._field_oc, static__1e502667d_structure_ins(_self_.get()._field_t));
	_1e5000679_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1e5000e1b_add_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1e4ea86cb_call_tm_failed(_self_);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1e4ea88a7_call_tm_skipped(_self_);
	_1e5000679_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1e4ea80b0_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1e5001e0b_done_indent(_self_.get()._field_oc);
	_1e5002659_indent(_self_.get()._field_oc);
	_1e5000679_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4ea73cd_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e4eaa03a_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1e4eaa425_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e3e4dbd3_itoa(_5424_row);
	_5517_obj+=_1e3e4dbd3_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1e4eaa6bc_func(jule::Ptr<_1e34019a0_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1e776c09c:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1e776c135:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1e3402176_is_method(_6521_f.ptr())) {
			_case_begin_1e776b5a7:;
			{
				jule::Str _7221_obj = static__1e4eaa03a_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1e776b50d:;
			{
				return static__1e4eaa03a_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1e776b453:;
	};
}



inline jule::Str static__1e4eaa964_func_ins(jule::Ptr<_1e3404651_FnIns>& _8425_f) {
	if (_1e3405399_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1e4eaa6bc_func(_8425_f.get()._field_decl);
	};
	return static__1e4eaa03a_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1e4eaac0b_trait_decl(jule::Ptr<_1e374ee30_Trait> _9526_t) {
	if (_1e3487e76_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1e4eaa03a_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1e4eaaea3_param(jule::Ptr<_1e3400163_Param>& _10322_p) {
	if ((_1e1c34a32_is_anon_ident(_10322_p.get()._field_ident) || _1e1c3478a_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1e3400790_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1e4eaa425_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1e4eaa425_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1e4eab24a_structure(jule::Ptr<_1e3318840_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1e502a97e_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1e4eaa03a_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1e4eab4e2_structure_ins(jule::Ptr<_1e3352093_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1e4eab24a_structure(_12830_s.get()._field_decl);
	};
	return static__1e4eaa03a_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1e4eab789_field(jule::Ptr<_1e3325ee0_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1e4eaba31_var(jule::Ptr<_1e401a92b_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1e777752a:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1e7777591:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1e77768ae:;
			{
				if ((_1e4093993_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1e7776925:;
			{
				return static__1e4eaa425_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1e7776848:;
			{
				return static__1e4eaa03a_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1e777678d:;
	};
}



inline jule::Str static__1e4eabcc8_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1e4eac070_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1e4eac317_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1e4eac5ae_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1e4eac856_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1e4eacaed_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4ea9a2e_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e501be8c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e501c179_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e50231a2_to_str(_1e5022dd8_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1e50234b0_equals(jule::Ptr<_1e5022dd8_CustomType> _self_, jule::Ptr<_1e4091661_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e5022dd8_CustomType _Src) {
	_Stream << _1e50231a2_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1e5023c0d_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_1e3ec0370_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__1e5023ea5_prim(jule::Ptr<_1e4096138_Prim> _7120_p) {
	return static__1e5023c0d_to_type(_1e409649b_to_str(_7120_p.ptr()));
}



inline jule::Str static__1e502424c_tuple(jule::Ptr<_1e409aa99_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1e78585b7:;
		if (it != expr.end()) {
			jule::Ptr<_1e4091661_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1e5027c89_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1e78585b7:;
			++it;
			goto _iter_begin_1e78585b7;
		}
		_iter_end_1e78585b7:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1e50244e4_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1e502478b_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__1e5024a33_sptr(jule::Ptr<_1e4099647_Sptr> _10124_sptr) {
	return static__1e50244e4_as_sptr(static__1e5027c89_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__1e5024cca_ptr(jule::Ptr<_1e409cbab_Ptr> _10623_p) {
	;
	if (_1e409d67e_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1e5027c89_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1e5025072_enum_decl(jule::Ptr<_1e34189c8_Enum> _11729_e) {
	return static__1e5027c89_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1e5025319_type_enum_decl(jule::Ptr<_1e37eea6d_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1e50255b1_as_slice(jule::Ptr<_1e4091661_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1e5027c89_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1e5025858_slice(jule::Ptr<_1e409a0a4_Slc> _13425_s) {
	return static__1e50255b1_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__1e5025b00_map(jule::Ptr<_1e409b65a_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1e5027c89_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1e5027c89_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1e5025d97_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1e502613e_trait_decl(jule::Ptr<_1e374ee30_Trait> _15626_t) {
	return static__1e5025d97_trait_ident(static__1e4eaac0b_trait_decl(_15626_t));
}



inline jule::Str static__1e50263d6_structure(jule::Ptr<_1e3318840_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_1e502a97e_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1e4eab24a_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1e502667d_structure_ins(jule::Ptr<_1e3352093_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__1e4eab4e2_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1e7863957:;
				if (it != expr.end()) {
					jule::Ptr<_1e4091661_TypeKind> _17629_g = *it;
					{
						_17321_ident+=static__1e5027c89_kind(_17629_g);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1e7863957:;
					++it;
					goto _iter_begin_1e7863957;
				}
				_iter_end_1e7863957:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e330242d_Directive> _18317_d = _1e502a5e9_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1e50221c3_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1e4eab4e2_structure_ins(_17133_s);
}



inline jule::Str static__1e5026925_array(jule::Ptr<_1e409c24e_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1e5027c89_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1e3e4dbd3_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1e5026e64_param_ins(jule::Ptr<_1e3403782_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1e5027c89_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1e5027c89_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1e50274a3_func_ins_result(jule::Ptr<_1e3404651_FnIns>& _24936_f) {
	if (_1e3401e12_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1e5027c89_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1e5027c89_kind(_24936_f.get()._field_result);
}



inline jule::Str static__1e502774a_anon_func(jule::Ptr<_1e3404651_FnIns> _26229_f) {
	jule::Str _26317_decl = static__1e50274a3_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1e787018e:;
			if (it != expr.end()) {
				jule::Ptr<_1e3403782_ParamIns> _26625_param = *it;
				{
					if (_1e3400790_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_1e787018e;
					};
					_26317_decl+=static__1e5026e64_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1e787018e:;
				++it;
				goto _iter_begin_1e787018e;
			}
			_iter_end_1e787018e:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1e50279e2_func(jule::Ptr<_1e3404651_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1e502774a_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1e5027c89_kind(jule::Ptr<_1e4091661_TypeKind> _29024_k) {
	{
		
		if (_1e40922cc_cpp_linked(_29024_k.ptr())) {
			_case_begin_1e7872c30:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_1e409372e_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e7872db7:;
			{
				return static__1e5023ea5_prim(_1e409372e_prim(_29024_k.ptr()));
			}
		}
		else if ((_1e40953bd_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e7872e2d:;
			{
				return static__1e502424c_tuple(_1e40953bd_tup(_29024_k.ptr()));
			}
		}
		else if ((_1e4093993_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e7872ea5:;
			{
				return static__1e5024a33_sptr(_1e4093993_sptr(_29024_k.ptr()));
			}
		}
		else if ((_1e4093c07_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e787302c:;
			{
				return static__1e5024cca_ptr(_1e4093c07_ptr(_29024_k.ptr()));
			}
		}
		else if ((_1e4093e6b_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e78730a4:;
			{
				return static__1e5025072_enum_decl(_1e4093e6b_enm(_29024_k.ptr()));
			}
		}
		else if ((_1e40941d0_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e787312b:;
			{
				return static__1e5025319_type_enum_decl(_1e40941d0_tenm(_29024_k.ptr()));
			}
		}
		else if ((_1e40946a8_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e78731a3:;
			{
				return static__1e5025858_slice(_1e40946a8_slc(_29024_k.ptr()));
			}
		}
		else if ((_1e4095159_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e787322a:;
			{
				return static__1e5025b00_map(_1e4095159_map(_29024_k.ptr()));
			}
		}
		else if ((_1e4094de5_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e78732a2:;
			{
				return static__1e502613e_trait_decl(_1e4094de5_trt(_29024_k.ptr()));
			}
		}
		else if ((_1e4094b81_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e7873329:;
			{
				return static__1e502667d_structure_ins(_1e4094b81_strct(_29024_k.ptr()));
			}
		}
		else if ((_1e4094444_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e78733a1:;
			{
				return static__1e5026925_array(_1e4094444_arr(_29024_k.ptr()));
			}
		}
		else if ((_1e409491c_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e7873428:;
			{
				return static__1e50279e2_func(_1e409491c_fnc(_29024_k.ptr()));
			}
		}
		_match_end_1e7872b42:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e5022dd8_CustomType>>()) {
			_case_begin_1e78734d3:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_1e5022dd8_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1e7876717:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1e78766b2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e50236d0_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e76773e7_name(_1e787ba91_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e7677529_what(_1e787ba91_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e787be7b_reset(_1e787ba91_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e787c0ad_short(_1e787ba91_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e787ba91_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e7880248_name(_1e78806ee_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e78809b8_what(_1e78806ee_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e7880aea_reset(_1e78806ee_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e7880c2c_short(_1e78806ee_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e78806ee_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e7883bca_name(_1e7884181_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e788444a_what(_1e7884181_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e788457c_reset(_1e7884181_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e78846ae_short(_1e7884181_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7884181_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e78876a1_name(_1e7887b57_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e7887e21_what(_1e7887b57_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e7888053_reset(_1e7887b57_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e7888185_short(_1e7887b57_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7887b57_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e788b133_name(_1e788b5d9_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e788b8a3_what(_1e788b5d9_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e788b9d5_reset(_1e788b5d9_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e788bb17_short(_1e788b5d9_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e788b5d9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e50595d4_FlagSet> static__1e50598c0_new(void) {
	return jule::new_ptr<_1e50595d4_FlagSet>(_1e50595d4_FlagSet{._field__flags=jule::Slice<jule::Trait<_1e505733a_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1e505733a_CommonFlag> _1e5059d54_find_flag(_1e50595d4_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e789722c:;
		if (it != expr.end()) {
			jule::Trait<_1e505733a_CommonFlag> _7221_flag = *it;
			{
				if ((_1e505733a_CommonFlag_mptr_data[(_7221_flag).type_offset]._1e503b1cb_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1e789722c:;
			++it;
			goto _iter_begin_1e789722c;
		}
		_iter_end_1e789722c:;
	};
	return nullptr;
}



inline jule::Trait<_1e505733a_CommonFlag> _1e505a162_find_flag_short(_1e50595d4_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e7897705:;
		if (it != expr.end()) {
			jule::Trait<_1e505733a_CommonFlag> _8221_flag = *it;
			{
				if ((_1e505733a_CommonFlag_mptr_data[(_8221_flag).type_offset]._1e5057b98_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1e7897705:;
			++it;
			goto _iter_begin_1e7897705;
		}
		_iter_end_1e7897705:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1e505733a_CommonFlag>> _1e505a3c6_flags(_1e50595d4_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1e505a6d4_parse(_1e50595d4_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1e505bcac_ArgParser _11617_ap = _1e505bcac_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1e505d198_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1e505a8b0_reset(_1e50595d4_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e789ab37:;
		if (it != expr.end()) {
			jule::Trait<_1e505733a_CommonFlag> _12616_f = *it;
			{
				_1e505733a_CommonFlag_mptr_data[(_12616_f).type_offset]._1e5057e0c_reset(_12616_f);
			}
			_iter_next_1e789ab37:;
			++it;
			goto _iter_begin_1e789ab37;
		}
		_iter_end_1e789ab37:;
	};
}



inline jule::Ptr<_1e788b5d9_Flag> _1e791330e_add_flag_common(_1e50595d4_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1e79199ca:;
			{
				goto _match_end_1e7919964;
			}
		}
		_match_end_1e7919964:;
	};
	if ((_1e5059d54_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1e505a162_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e788b5d9_Flag> _14817_flag = jule::new_ptr<_1e788b5d9_Flag>(_1e788b5d9_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1e505733a_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1e7887b57_Flag> _1e7921b25_add_flag_common(_1e50595d4_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1e7923440:;
			{
				goto _match_end_1e7923121;
			}
		}
		_match_end_1e7923121:;
	};
	if ((_1e5059d54_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1e505a162_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e7887b57_Flag> _14817_flag = jule::new_ptr<_1e7887b57_Flag>(_1e7887b57_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1e505733a_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1e7910d12_add_var(_1e50595d4_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1e788b5d9_Flag> _17617_flag = _1e791330e_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1e791e617_add_var(_1e50595d4_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1e7887b57_Flag> _17617_flag = _1e7921b25_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1e50595d4_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e4675e54_IR>,jule::Slice<_1e1905060_Log>> static__1e1c9dd43_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1e426a131_JuleImporter> _2917_importer = static__1e427de58_new(_1e43dd75a_build_compile_info());;
	jule::Slice<jule::Ptr<_1e3301383_Ast>> _3018_files;;
	jule::Slice<_1e1905060_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1e42e01ea_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e3eea488_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1e40ad309_analyze_package(_3018_files,jule::Trait<_1e3ee4c35_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1e4675e54_IR> _4517_ir = jule::new_ptr<_1e4675e54_IR>(_1e4675e54_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1e429182d_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1e43c6941_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1e208d0cc_append_structs(_1e4675e54_IR* _self_, jule::Ptr<_1e3eea488_Package>& _5734_p, jule::Slice<jule::Ptr<_1e3318840_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e7329572:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1e7329e13:;
					if (it != expr.end()) {
						jule::Ptr<_1e3318840_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1e7329e13:;
						++it;
						goto _iter_begin_1e7329e13;
					}
					_iter_end_1e7329e13:;
				};
			}
			_iter_next_1e7329572:;
			++it;
			goto _iter_begin_1e7329572;
		}
		_iter_end_1e7329572:;
	};
}



inline jule::Slice<jule::Ptr<_1e3318840_Struct>> _1e2aea034_get_all_structures(_1e4675e54_IR* _self_) {
	jule::Slice<jule::Ptr<_1e3318840_Struct>> _7017_buffer = nullptr;;
	_1e208d0cc_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1e732a870:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1e208d0cc_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1e732a870:;
			++it;
			goto _iter_begin_1e732a870;
		}
		_iter_end_1e732a870:;
	};
	return _7017_buffer;
}



inline void _1e2b02129_append_globals(_1e4675e54_IR* _self_, jule::Ptr<_1e3eea488_Package>& _8034_p, jule::Slice<jule::Ptr<_1e401a92b_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e732c6eb:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1e732d07b:;
					if (it != expr.end()) {
						jule::Ptr<_1e401a92b_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1e732d07b:;
						++it;
						goto _iter_begin_1e732d07b;
					}
					_iter_end_1e732d07b:;
				};
			}
			_iter_next_1e732c6eb:;
			++it;
			goto _iter_begin_1e732c6eb;
		}
		_iter_end_1e732c6eb:;
	};
}



inline jule::Slice<jule::Ptr<_1e401a92b_Var>> _1e415722c_get_all_globals(_1e4675e54_IR* _self_) {
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _9317_buffer = nullptr;;
	_1e2b02129_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1e732ea94:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1e2b02129_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1e732ea94:;
			++it;
			goto _iter_begin_1e732ea94;
		}
		_iter_end_1e732ea94:;
	};
	return _9317_buffer;
}



inline void _1e41638cb_order(_1e4675e54_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1e2aea034_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1e415722c_get_all_globals(&(*_self_));
	static__1e445686c_order_structures((*_self_)._field_ordered._field_structs);
	static__1e446d8a6_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1e4675e54_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e331ace8_to_str(_1e3352093_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1e63845ab:;
			if (it != expr.end()) {
				jule::Ptr<_1e4091661_TypeKind> &_24720_g = *it;
				{
					_24317_kind+=_1e4091a18_to_str(_24720_g.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1e63845ab:;
				++it;
				goto _iter_begin_1e63845ab;
			}
			_iter_end_1e63845ab:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1e331b4ad_equals(jule::Ptr<_1e3352093_StructIns> _self_, jule::Ptr<_1e4091661_TypeKind> _25826_other) {
	jule::Ptr<_1e3352093_StructIns> _25913_s = _1e4094b81_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1e4091d26_equals(_self_.get()._field_generics[_27217_i], _25913_s.get()._field_generics[_27217_i])))) {
				return false;
			};
		}
	_iter_next_1e6387c52:;
	}
	_iter_end_1e6387c52:;;
	return true;
}



inline jule::Bool _1e3327bc3_same(_1e3352093_StructIns* _self_, jule::Ptr<_1e3352093_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1e638a040:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1e4091661_TypeKind> &_29116_g = *it;
			{
				if ((!(_1e4091d26_equals(_29116_g, _28623_s.get()._field_generics[_29113_i])))) {
					return false;
				};
			}
			_iter_next_1e638a040:;
			++it;
			_29113_i++;
			goto _iter_begin_1e638a040;
		}
		_iter_end_1e638a040:;
	};
	return true;
}



inline jule::Ptr<_1e34019a0_Fn> _1e3328d39_find_method(_1e3352093_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1e638b86b:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1e638b86b:;
			++it;
			goto _iter_begin_1e638b86b;
		}
		_iter_end_1e638b86b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e332d657_FieldIns> _1e332b18d_find_field(_1e3352093_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1e638cae2:;
		if (it != expr.end()) {
			jule::Ptr<_1e332d657_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1e638cae2:;
			++it;
			goto _iter_begin_1e638cae2;
		}
		_iter_end_1e638cae2:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3352093_StructIns _Src) {
	_Stream << _1e331ace8_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e48e305b_ObjectDeadCode> static__1e48e3457_new(jule::Ptr<_1e4675e54_IR>& _3424_ir) {
	return jule::new_ptr<_1e48e305b_ObjectDeadCode>(_1e48e305b_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1e7368d0e_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e374ee30_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_1e374ee30_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e736acde:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1e736aa03:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e736bcbd:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1e736bcbd:;
			++it;
			_5213_i++;
			goto _iter_begin_1e736bcbd;
		}
		_iter_end_1e736bcbd:;
	};
	return false;
}

inline jule::Bool _1e736e8a3_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3404651_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1e3404651_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e73712ab:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1e7371201:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e737207b:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1e737207b:;
			++it;
			_5213_i++;
			goto _iter_begin_1e737207b;
		}
		_iter_end_1e737207b:;
	};
	return false;
}

inline jule::Bool _1e7375cd8_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3352093_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1e3352093_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e737a0d9:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1e7379d64:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e737aa57:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1e737aa57:;
			++it;
			_5213_i++;
			goto _iter_begin_1e737aa57;
		}
		_iter_end_1e737aa57:;
	};
	return false;
}

inline jule::Bool _1e737c8c2_is_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e401a92b_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e737e693:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1e737e572:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e737e62c:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1e737e62c:;
			++it;
			_5213_i++;
			goto _iter_begin_1e737e62c;
		}
		_iter_end_1e737e62c:;
	};
	return false;
}



inline void _1e736bd45_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e374ee30_Trait> _6036_t) {
	{
		
{
			_case_begin_1e736d044:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_1e736cbe2:;
	};
}

inline void _1e73730b0_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3404651_FnIns> _6036_t) {
	{
		
{
			_case_begin_1e7373c81:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_1e7373a0b:;
	};
}

inline void _1e737625b_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3352093_StructIns> _6036_t) {
	{
		
{
			_case_begin_1e73779dd:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_1e7377702:;
	};
}

inline void _1e7381211_push_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e401a92b_Var> _6036_t) {
	{
		
{
			_case_begin_1e7381c39:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_1e7381b5c:;
	};
}



inline void _1e4922123_set_references_as_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3406e17_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1e3407588_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1e3407896_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1e374ee30_Trait>>()) {
					_case_begin_1e7367cec:;
					{
						jule::Ptr<_1e374ee30_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1e374ee30_Trait>();;
						if (_1e7368d0e_is_live(_self_, _8225_t)) {
							goto _iter_next_1e736713c;
						};
						_1e736bd45_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1e736c7d5:;
							if (it != expr.end()) {
								jule::Ptr<_1e34019a0_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1e736dad3:;
										if (it != expr.end()) {
											jule::Ptr<_1e3404651_FnIns> _8833_mins = *it;
											{
												if (_1e736e8a3_is_live(_self_, _8833_mins)) {
													goto _iter_next_1e736dad3;
												};
												_1e73730b0_push_live(_self_, _8833_mins);
												_1e4922123_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_1e736dad3:;
											++it;
											goto _iter_begin_1e736dad3;
										}
										_iter_end_1e736dad3:;
									};
								}
								_iter_next_1e736c7d5:;
								++it;
								goto _iter_begin_1e736c7d5;
							}
							_iter_end_1e736c7d5:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
					_case_begin_1e7367d63:;
					{
						jule::Ptr<_1e3404651_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1e3404651_FnIns>();;
						if (_1e736e8a3_is_live(_self_, _9725_f)) {
							goto _match_end_1e7367e2e;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1e7375cd8_is_live(_self_, _9725_f.get()._field_owner)))) {
								_1e737625b_push_live(_self_, _9725_f.get()._field_owner);
								_1e4922123_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1e73730b0_push_live(_self_, _9725_f);
						_1e4922123_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
					_case_begin_1e7367ea6:;
					{
						jule::Ptr<_1e401a92b_Var> _11025_v = _7921_ref.operator jule::Ptr<_1e401a92b_Var>();;
						if (_1e737c8c2_is_live(_self_, _11025_v)) {
							goto _match_end_1e7367e2e;
						};
						_1e7381211_push_live(_self_, _11025_v);
						_1e4922123_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e3352093_StructIns>>()) {
					_case_begin_1e736801c:;
					{
						jule::Ptr<_1e3352093_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1e3352093_StructIns>();;
						if (_1e7375cd8_is_live(_self_, _11725_s)) {
							goto _match_end_1e7367e2e;
						};
						_1e737625b_push_live(_self_, _11725_s);
						_1e4922123_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1e7384e7e:;
							if (it != expr.end()) {
								jule::Ptr<_1e34019a0_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1e73857ed:;
										if (it != expr.end()) {
											jule::Ptr<_1e3404651_FnIns> _12433_mins = *it;
											{
												if (_1e736e8a3_is_live(_self_, _12433_mins)) {
													goto _iter_next_1e73857ed;
												};
												_1e73730b0_push_live(_self_, _12433_mins);
												_1e4922123_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_1e73857ed:;
											++it;
											goto _iter_begin_1e73857ed;
										}
										_iter_end_1e73857ed:;
									};
								}
								_iter_next_1e7384e7e:;
								++it;
								goto _iter_begin_1e7384e7e;
							}
							_iter_end_1e7384e7e:;
						};
					}
				}
				_match_end_1e7367e2e:;
			};
		}
	_iter_next_1e736713c:;
	}
	_iter_end_1e736713c:;;
}



inline void _1e4922398_inits(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3eea488_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e7367549:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1e738cd55:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1e3404651_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1e4922123_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_1e738cd55:;
						++it;
						goto _iter_begin_1e738cd55;
					}
					_iter_end_1e738cd55:;
				};
			}
			_iter_next_1e7367549:;
			++it;
			goto _iter_begin_1e7367549;
		}
		_iter_end_1e7367549:;
	};
}



inline void _1e492261d_collect_live_package(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3eea488_Package>& _14845_pkg) {
	_1e4922398_inits(_self_, _14845_pkg);
	if (_22eb5d753_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_1e7390352:;
			if (it != expr.end()) {
				jule::Ptr<_1e4061466_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_1e7390be3:;
						if (it != expr.end()) {
							jule::Ptr<_1e34019a0_Fn> _15529_f = *it;
							{
								if (_1e4924631_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_1e3404651_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1e4922123_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_1e7390be3:;
							++it;
							goto _iter_begin_1e7390be3;
						}
						_iter_end_1e7390be3:;
					};
				}
				_iter_next_1e7390352:;
				++it;
				goto _iter_begin_1e7390352;
			}
			_iter_end_1e7390352:;
		};
	};
}



inline void _1e49227e9_collect_live(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e738dd78:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_1e492261d_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_1e738dd78:;
			++it;
			goto _iter_begin_1e738dd78;
		}
		_iter_end_1e738dd78:;
	};
	_1e492261d_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1e34019a0_Fn> _17517_main = _1e3eebc3c_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1e3404651_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1e4922123_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _1e4922a6e_remove_dead_globals(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e401a92b_Var>>& _18144_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_1e401a92b_Var> _18417_v = _18144_vars[_18217_i];;
			if (_1e737c8c2_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1e7395ab6;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1e7395ab6:;
	}
	_iter_end_1e7395ab6:;;
}



inline void _1e4922ce4_remove_dead_fns(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e34019a0_Fn>>& _19340_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_1e34019a0_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1e3404651_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_1e736e8a3_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1e7399191;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1e7399191:;
			}
			_iter_end_1e7399191:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1e73960b1;
			};
			(_19417_i)++;
		}
	_iter_next_1e73960b1:;
	}
	_iter_end_1e73960b1:;;
}



inline void _1e4923069_remove_dead_structs(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e3318840_Struct>>& _21444_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_1e3318840_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1e3352093_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_1e4922ce4_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _1e7375cd8_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1e739d360;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1e739d360:;
			}
			_iter_end_1e739d360:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1e739c1a5;
			};
			(_21517_i)++;
		}
	_iter_next_1e739c1a5:;
	}
	_iter_end_1e739c1a5:;;
}



inline void _1e49232de_remove_dead_traits(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e374ee30_Trait>>& _23643_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_1e374ee30_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_1e7368d0e_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1e73a0c36;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_1e3318840_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1e73a293b;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1e73a293b:;
			}
			_iter_end_1e73a293b:;;
			(_23717_i)++;
		}
	_iter_next_1e73a0c36:;
	}
	_iter_end_1e73a0c36:;;
}



inline void _1e4923564_remove_deads_file(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e4061466_SymbolTable>& _25742_file) {
	_1e4922ce4_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_1e4923069_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_1e49232de_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_1e4922a6e_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _1e49237d9_remove_deads_package(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_, jule::Ptr<_1e3eea488_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e73a74ac:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _26521_file = *it;
			{
				_1e4923564_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_1e73a74ac:;
			++it;
			goto _iter_begin_1e73a74ac;
		}
		_iter_end_1e73a74ac:;
	};
}



inline void _1e49239b5_remove_deads(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e73a7c93:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_1e49237d9_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_1e73a7c93:;
			++it;
			goto _iter_begin_1e73a7c93;
		}
		_iter_end_1e73a7c93:;
	};
	_1e49237d9_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1e4923b91_elimanate(jule::Ptr<_1e48e305b_ObjectDeadCode> _self_) {
	_1e49227e9_collect_live(_self_);
	_1e49239b5_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e48e305b_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e501c366_ObjectCoder> static__1e5000349_new(jule::Ptr<_1e4675e54_IR>& _7228_ir, _1e501be8c_SerializationInfo _7237_info) {
	jule::Ptr<_1e501c366_ObjectCoder> _7317_oc = jule::new_ptr<_1e501c366_ObjectCoder>(_1e501c366_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1e4e9849b_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1e4e90b47_new(_7317_oc);
	return _7317_oc;
}



inline void _1e5000679_write(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1e5000e1b_add_indent(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1e5001e0b_done_indent(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1e5002659_indent(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1e5003a89_find_type_offset(_1e501c366_ObjectCoder* _self_, jule::Ptr<_1e374ee30_Trait> _10231_t, jule::Ptr<_1e4091661_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1e3352093_StructIns> _10617_s = nullptr;;
	if ((_1e4093993_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1e4093993_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1e4094b81_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1e4094b81_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e778ae23:;
		if (it != expr.end()) {
			jule::Ptr<_1e501c179_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1e778ae23:;
			++it;
			goto _iter_begin_1e778ae23;
		}
		_iter_end_1e778ae23:;
	};
	return -1LL;
}



inline void _1e4ed562b_loc_info(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e1c31ee6_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_22eb5e27b_PRODUCTION) {
		{
			
			if (_1e17de125_has_prefix(_12414_loc,_1e1927934_PATH_STDLIB)) {
				_case_begin_1e778d376:;
				{
					_1e5000679_write(_self_, _1e4ea45c8_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e1890d75_dir(_1e1927934_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_1e17de125_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1e778d046:;
				{
					_1e5000679_write(_self_, _1e4ea45c8_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1e1890d75_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1e778ced0:;
				{
					_1e5000679_write(_self_, _1e4ea45c8_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1e778ce03:;
		};
	} else {
		_1e5000679_write(_self_, _1e4ea45c8_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1e5000679_write(_self_, jule::Str(":", 1));
	_1e5000679_write(_self_, _1e3e4dbd3_itoa(_12329_t.get()._field_row));
	_1e5000679_write(_self_, jule::Str(":", 1));
	_1e5000679_write(_self_, _1e3e4dbd3_itoa(_12329_t.get()._field_column));
}



inline void _1e4ed2edb_head(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e5016b68_Time _15013_time = static__1e501720c_now();;
	_1e50164c5_AbsTime _15113_abs = _1e501884b_abs(&_15013_time);;
	_1e5000679_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1e5000679_write(_self_, jule::Str("// JuleC version: ", 18));
	_1e5000679_write(_self_, jule::Str("jule0.0.11", 10));
	_1e5000679_write(_self_, jule::Str("\n", 1));
	_1e5000679_write(_self_, jule::Str("// Date: ", 9));
	_1e5000679_write(_self_, _1e3e4d96e_fmt_uint(_15113_abs._field_day,10LL));
	_1e5000679_write(_self_, jule::Str("/", 1));
	_1e5000679_write(_self_, _1e3e4d96e_fmt_uint(_15113_abs._field_month,10LL));
	_1e5000679_write(_self_, jule::Str("/", 1));
	_1e5000679_write(_self_, _1e3e4d96e_fmt_uint(_15113_abs._field_year,10LL));
	_1e5000679_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1e5000679_write(_self_, _self_.get()._field_info._field_compiler);
	_1e5000679_write(_self_, jule::Str(" ", 1));
	_1e5000679_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	if (_22eb5e27b_PRODUCTION) {
		_1e5000679_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22eb5da50_RC))) {
		_1e5000679_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22eb5de6d_SAFETY))) {
		_1e5000679_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1e5000679_write(_self_, jule::Str("\n\n#include \"", 12));
	_1e5000679_write(_self_, _1e1943389_PATH_API);
	_1e5000679_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1e5001669_links(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e77992d8:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1e779a1a7:;
						{
							goto _iter_next_1e77992d8;
						}
					}
					else if (_1e18e866e_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1e7799d77:;
						{
							_1e5000679_write(_self_, jule::Str("#include ", 9));
							_1e5000679_write(_self_, _18316_used.get()._field_path);
							_1e5000679_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1e7799d11:;
						{
							_1e5000679_write(_self_, jule::Str("#include \"", 10));
							_1e5000679_write(_self_, _18316_used.get()._field_path);
							_1e5000679_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1e7799c34:;
				};
			}
			_iter_next_1e77992d8:;
			++it;
			goto _iter_begin_1e77992d8;
		}
		_iter_end_1e77992d8:;
	};
}



inline void _1e4eddc72_prepare_structures(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1e77999e2:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1e5021e2b_prepare_structure(_20021_s);
				};
			}
			_iter_next_1e77999e2:;
			++it;
			goto _iter_begin_1e77999e2;
		}
		_iter_end_1e77999e2:;
	};
}



inline void _1e4edeb85_iter_packages(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e779c9a1:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1e779c9a1:;
			++it;
			goto _iter_begin_1e779c9a1;
		}
		_iter_end_1e779c9a1:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1e4ee036c_build_trait_map(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _21736_pkg) mutable -> void {
		_1e5021bc8_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1e77a1895:;
				if (it != expr.end()) {
					jule::Ptr<_1e374ee30_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e501c179_TraitHash>(_1e501c179_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1e77a1895;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1e77a2b82:;
							if (it != expr.end()) {
								jule::Ptr<_1e3318840_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1e77a2456:;
										if (it != expr.end()) {
											jule::Ptr<_1e3352093_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e501c179_TraitHash>(_1e501c179_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1e77a2456:;
											++it;
											goto _iter_begin_1e77a2456;
										}
										_iter_end_1e77a2456:;
									};
								}
								_iter_next_1e77a2b82:;
								++it;
								goto _iter_begin_1e77a2b82;
							}
							_iter_end_1e77a2b82:;
						};
					}
					_iter_next_1e77a1895:;
					++it;
					goto _iter_begin_1e77a1895;
				}
				_iter_end_1e77a1895:;
			};
		}));
	}));
}



inline void _1e4ee0a54_trait_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _24836_pkg) mutable -> void {
		_1e5021bc8_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1e77a645a:;
				if (it != expr.end()) {
					jule::Ptr<_1e374ee30_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1e5002659_indent(_self_);
						_1e5000679_write(_self_, jule::Str("struct ", 7));
						_1e5000679_write(_self_, static__1e4eaac0b_trait_decl(_25029_t));
						_1e5000679_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1e77a645a:;
					++it;
					goto _iter_begin_1e77a645a;
				}
				_iter_end_1e77a645a:;
			};
		}));
	}));
}



inline void _1e4edcaa6_structure_plain_decl(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3318840_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e77a5cd9:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _26421_ins = *it;
			{
				_1e5000679_write(_self_, jule::Str("struct ", 7));
				_1e5000679_write(_self_, static__1e4eab4e2_structure_ins(_26421_ins));
				_1e5000679_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e77a5cd9:;
			++it;
			goto _iter_begin_1e77a5cd9;
		}
		_iter_end_1e77a5cd9:;
	};
}



inline void _1e4ed6819_structure_plain_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1e77ae4a7:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1e4edcaa6_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1e77ae4a7:;
			++it;
			goto _iter_begin_1e77ae4a7;
		}
		_iter_end_1e77ae4a7:;
	};
}



inline void _1e4edd6de_field_decl(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e332d657_FieldIns>& _27935_f) {
	_1e5000679_write(_self_, static__1e5027c89_kind(_27935_f.get()._field_kind));
	_1e5000679_write(_self_, jule::Str(" ", 1));
	_1e5000679_write(_self_, static__1e4eab789_field(_27935_f.get()._field_decl));
	_1e5000679_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1e4ea3be3_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1e4ea36e8_expr(_self_.get()._field_ec, _27935_f.get()._field_default.get()._field_model);
	};
	_1e5000679_write(_self_, jule::Str(";", 1));
}



inline void _1e4ed7bd3_structure_destructor(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _29445_s) {
	;
	jule::Ptr<_1e34019a0_Fn> _29613_dispose_method = _1e3328d39_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1e401bac5_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1e5000679_write(_self_, jule::Str("~", 1));
	_1e5000679_write(_self_, static__1e4eab4e2_structure_ins(_29445_s));
	_1e5000679_write(_self_, jule::Str("(void) { ", 9));
	_1e5000679_write(_self_, static__1e4eaa6bc_func(_29613_dispose_method));
	_1e5000679_write(_self_, jule::Str("(this); }", 9));
}



inline void _1e4ee123b_structure_derive_defs_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _30948_s) {
	if (_1e3318169_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, static__1e4ea6256_clone_func_decl(_30948_s.get()._field_decl));
		_1e5000679_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1e501c90a_structure_operator_eq(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1e3352093_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1e501cb6e_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1e5002659_indent(_self_);
	if (_1e1c789aa_INLINE) {
		_1e5000679_write(_self_, jule::Str("inline ", 7));
	};
	_1e5000679_write(_self_, jule::Str("bool operator==(", 16));
	_1e5000679_write(_self_, _31742_ident);
	_1e5000679_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1e5000e1b_add_indent(_self_);
		_1e5000679_write(_self_, jule::Str("\n", 1));
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, jule::Str("return ", 7));
		_1e5000e1b_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1e77bba69:;
			if (it != expr.end()) {
				jule::Ptr<_1e332d657_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1e3352093_StructIns> _34021_strct = _1e4094b81_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1e77bba69;
					};
					if (_33721_writed) {
						_1e5000679_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1e5000679_write(_self_, jule::Str("\n", 1));
					_1e5002659_indent(_self_);
					_1e5000679_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1e4eab789_field(_33825_f.get()._field_decl);;
					_1e5000679_write(_self_, _35221_f_ident);
					_1e5000679_write(_self_, jule::Str(" == _other.", 11));
					_1e5000679_write(_self_, _35221_f_ident);
				}
				_iter_next_1e77bba69:;
				++it;
				goto _iter_begin_1e77bba69;
			}
			_iter_end_1e77bba69:;
		};
		_1e5001e0b_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1e5000679_write(_self_, jule::Str("true", 4));
		};
		_1e5000679_write(_self_, jule::Str(";\n", 2));
		_1e5001e0b_done_indent(_self_);
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, jule::Str("}", 1));
	} else {
		_1e5000679_write(_self_, jule::Str(" return true; }", 15));
	};
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e501ca3c_structure_operator_not_eq(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1e3352093_StructIns>& _37163_s) {
	_1e5002659_indent(_self_);
	if (_1e1c789aa_INLINE) {
		_1e5000679_write(_self_, jule::Str("inline ", 7));
	};
	_1e5000679_write(_self_, jule::Str("bool operator!=(", 16));
	_1e5000679_write(_self_, _37146_ident);
	_1e5000679_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1e501cb6e_structure_operator(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1e3404651_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1e3401e12_is_void(_38256_f.get()._field_decl.ptr());;
	_1e5002659_indent(_self_);
	if (_1e1c789aa_INLINE) {
		_1e5000679_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1e5000679_write(_self_, _38239_ident);
		_1e5000679_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1e409372e_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1e5000679_write(_self_, _38239_ident);
		} else {
			_1e5000679_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1e5000679_write(_self_, jule::Str(" operator", 9));
	_1e5000679_write(_self_, _38267_op);
	_1e5000679_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1e3403782_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1e5000679_write(_self_, static__1e5026e64_param_ins(_41021_p));
		_1e5000679_write(_self_, jule::Str(" _other", 7));
	};
	_1e5000679_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1e5000679_write(_self_, jule::Str("return ", 7));
	};
	_1e5000679_write(_self_, static__1e4eaa964_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1e5000679_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1e5000679_write(_self_, jule::Str("return *this; ", 14));
		};
		_1e5000679_write(_self_, jule::Str("}", 1));
	} else {
		_1e5000679_write(_self_, jule::Str("(this); }", 9));
	};
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e501cca1_structure_operators(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1e4eab4e2_structure_ins(_43144_s);;
	_1e501c90a_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1e501ca3c_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1e501cb6e_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1e501cdd3_structure_ins_decl(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1e77d99bb:;
			if (it != expr.end()) {
				jule::Ptr<_1e34019a0_Fn> _47225_m = *it;
				{
					_1e501d4dd_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1e77d99bb:;
				++it;
				goto _iter_begin_1e77d99bb;
			}
			_iter_end_1e77d99bb:;
		};
	};
	_1e5000679_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1e4eab4e2_structure_ins(_47043_s);;
	_1e5000679_write(_self_, _47813_out_ident);
	_1e5000679_write(_self_, jule::Str(" {\n", 3));
	_1e5000e1b_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1e77db9ce:;
		if (it != expr.end()) {
			jule::Ptr<_1e332d657_FieldIns> _48421_f = *it;
			{
				_1e5002659_indent(_self_);
				_1e4edd6de_field_decl(_self_, _48421_f);
				_1e5000679_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1e77db9ce:;
			++it;
			goto _iter_begin_1e77db9ce;
		}
		_iter_end_1e77db9ce:;
	};
	_1e5002659_indent(_self_);
	_1e4ed7bd3_structure_destructor(_self_, _47043_s);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e5002659_indent(_self_);
	_1e5000679_write(_self_, _47813_out_ident);
	_1e5000679_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1e4ee123b_structure_derive_defs_decls(_self_, _47043_s);
	_1e501cca1_structure_operators(_self_, _47043_s);
	_1e5000679_write(_self_, jule::Str("\n", 1));
	_1e5001e0b_done_indent(_self_);
	_1e5002659_indent(_self_);
	_1e5000679_write(_self_, jule::Str("};", 2));
}



inline void _1e501d015_structure_decl(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3318840_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e77e0b04:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _51021_ins = *it;
			{
				_1e501cdd3_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1e77e0b04:;
			++it;
			goto _iter_begin_1e77e0b04;
		}
		_iter_end_1e77e0b04:;
	};
}



inline void _1e501d147_structure_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1e77e13da:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1e501d015_structure_decl(_self_, _51621_s);
					_1e5000679_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1e77e13da:;
			++it;
			goto _iter_begin_1e77e13da;
		}
		_iter_end_1e77e13da:;
	};
}



inline void _1e501d279_params_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1e5000679_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e5000679_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1e77e3b3a:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1e3403782_ParamIns> _53121_p = *it;
			{
				_1e5000679_write(_self_, static__1e5026e64_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1e5000679_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e77e3b3a:;
			++it;
			_53114_i++;
			goto _iter_begin_1e77e3b3a;
		}
		_iter_end_1e77e3b3a:;
	};
	_1e5000679_write(_self_, jule::Str(")", 1));
}



inline void _1e501d3ab_func_head(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3404651_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _1e1c789aa_INLINE) && (!(_1e34023da_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1e5000679_write(_self_, jule::Str("inline ", 7));
	};
	_1e5000679_write(_self_, static__1e50274a3_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1e5000679_write(_self_, jule::Str("(*", 2));
		_1e5000679_write(_self_, static__1e4eaa964_func_ins(_54134_f));
		_1e5000679_write(_self_, jule::Str(")", 1));
	} else {
		_1e5000679_write(_self_, jule::Str(" ", 1));
		_1e5000679_write(_self_, static__1e4eaa964_func_ins(_54134_f));
	};
}



inline void _1e501d4dd_func_decl(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e34019a0_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e77e90a2:;
		if (it != expr.end()) {
			jule::Ptr<_1e3404651_FnIns> _55721_c = *it;
			{
				_1e5002659_indent(_self_);
				_1e501d3ab_func_head(_self_, _55721_c,_55642_ptr);
				_1e501d279_params_decls(_self_, _55721_c.get()._field_params);
				_1e5000679_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e77e90a2:;
			++it;
			goto _iter_begin_1e77e90a2;
		}
		_iter_end_1e77e90a2:;
	};
}



inline void _1e501d620_func_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _56636_pkg) mutable -> void {
		_1e5021bc8_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1e77ec6c1:;
				if (it != expr.end()) {
					jule::Ptr<_1e34019a0_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1e501d4dd_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1e77ec6c1:;
					++it;
					goto _iter_begin_1e77ec6c1;
				}
				_iter_end_1e77ec6c1:;
			};
		}));
	}));
}



inline void _1e501d752_trait_data_types(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _57836_pkg) mutable -> void {
		_1e5021bc8_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1e78004a4:;
				if (it != expr.end()) {
					jule::Ptr<_1e374ee30_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1e5000679_write(_self_, jule::Str("struct ", 7));
						_1e5000679_write(_self_, static__1e4eaac0b_trait_decl(_58029_t));
						_1e5000679_write(_self_, jule::Str("MptrData", 8));
						_1e5000679_write(_self_, jule::Str(" {\n", 3));
						_1e5000e1b_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1e780273c:;
							if (it != expr.end()) {
								jule::Ptr<_1e34019a0_Fn> _58933_m = *it;
								{
									jule::Ptr<_1e3404651_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1e3403782_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1e7804321:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1e3403782_ParamIns> _59537_ip = *it;
											{
												if (_1e1c34a32_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1e3e4dbd3_itoa(_59530_i));
												};
											}
											_iter_next_1e7804321:;
											++it;
											_59530_i++;
											goto _iter_begin_1e7804321;
										}
										_iter_end_1e7804321:;
									};
									if ((!(_22eb5e27b_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e5022dd8_CustomType>(_1e5022dd8_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1e501d4dd_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1e780273c:;
								++it;
								goto _iter_begin_1e780273c;
							}
							_iter_end_1e780273c:;
						};
						_1e5001e0b_done_indent(_self_);
						_1e5002659_indent(_self_);
						_1e5000679_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1e78004a4:;
					++it;
					goto _iter_begin_1e78004a4;
				}
				_iter_end_1e78004a4:;
			};
		}));
	}));
}



inline void _1e501d961_param_ins(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3403782_ParamIns>& _62234_p) {
	_1e5000679_write(_self_, static__1e5026e64_param_ins(_62234_p));
	_1e5000679_write(_self_, jule::Str(" ", 1));
	_1e5000679_write(_self_, static__1e4eaaea3_param(_62234_p.get()._field_decl));
}



inline void _1e501dbd6_params_ins(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e3403782_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1e5000679_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e5000679_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1e7808e08:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1e3403782_ParamIns> _63421_p = *it;
			{
				_1e501d961_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1e5000679_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e7808e08:;
			++it;
			_63414_i++;
			goto _iter_begin_1e7808e08;
		}
		_iter_end_1e7808e08:;
	};
	_1e5000679_write(_self_, jule::Str(")", 1));
}



inline void _1e501e005_var_init_expr(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e401a92b_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1e5000679_write(_self_, jule::Str("static ", 7));
	};
	_1e5000679_write(_self_, static__1e5027c89_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1e5000679_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1e5000679_write(_self_, jule::Str("&", 1));
	};
	_1e5000679_write(_self_, static__1e4eaba31_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1e5000679_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1e5000679_write(_self_, jule::Str(";", 1));
}



inline void _1e501e27a_var(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e401a92b_Var> _66127_v) {
	if (_1e1c3478a_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1e501e005_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1e4ea396d_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1e501e005_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1e501e005_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1e4ea3be3_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1e501e500_func(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e34019a0_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e7812dce:;
		if (it != expr.end()) {
			jule::Ptr<_1e3404651_FnIns> _67721_ins = *it;
			{
				_1e501d3ab_func_head(_self_, _67721_ins,false);
				_1e501dbd6_params_ins(_self_, _67721_ins.get()._field_params);
				_1e5000679_write(_self_, jule::Str(" ", 1));
				_1e4e9572e_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1e5000679_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e7812dce:;
			++it;
			goto _iter_begin_1e7812dce;
		}
		_iter_end_1e7812dce:;
	};
}



inline void _1e501e6cb_trait_wrappers(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e781361b:;
		if (it != expr.end()) {
			jule::Ptr<_1e501c179_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e7815970:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1e3e4dbd3_itoa(_68921_hash.get()._field_i));
							_1e501e500_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_22eb5e27b_PRODUCTION) {
									_1e5000679_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1e5000679_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1e7815970;
							};
							jule::Bool _70721_ptr = (!(_1e3400a04_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1e34019a0_Fn> _70925_sm = _1e3328d39_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1e7815970;
							};
							_1e5000e1b_add_indent(_self_);
							_1e5000679_write(_self_, jule::Str("{\n", 2));
							_1e5002659_indent(_self_);
							if ((!(_1e3401e12_is_void(_70925_sm.ptr())))) {
								_1e5000679_write(_self_, jule::Str("return ", 7));
							};
							_1e5000679_write(_self_, static__1e4eaa6bc_func(_70925_sm));
							_1e5000679_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1e5000679_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1e5000679_write(_self_, static__1e502667d_structure_ins(_68921_hash.get()._field_s));
								_1e5000679_write(_self_, jule::Str(">(", 2));
								if ((!(_22eb5e27b_PRODUCTION))) {
									_1e5000679_write(_self_, jule::Str("_00___file", 10));
								};
								_1e5000679_write(_self_, jule::Str(")", 1));
							} else {
								_1e5000679_write(_self_, jule::Str("_self_.data.as<", 15));
								_1e5000679_write(_self_, static__1e50263d6_structure(_70925_sm.get()._field_owner));
								_1e5000679_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1e781ecdc:;
								if (it != expr.end()) {
									jule::Ptr<_1e3400163_Param> _73524_mp = *it;
									{
										_1e5000679_write(_self_, jule::Str(", ", 2));
										_1e5000679_write(_self_, static__1e4eaaea3_param(_73524_mp));
									}
									_iter_next_1e781ecdc:;
									++it;
									goto _iter_begin_1e781ecdc;
								}
								_iter_end_1e781ecdc:;
							};
							_1e5000679_write(_self_, jule::Str(");\n}\n", 5));
							_1e5001e0b_done_indent(_self_);
						}
						_iter_next_1e7815970:;
						++it;
						goto _iter_begin_1e7815970;
					}
					_iter_end_1e7815970:;
				};
			}
			_iter_next_1e781361b:;
			++it;
			goto _iter_begin_1e781361b;
		}
		_iter_end_1e781361b:;
	};
}



inline void _1e501e8a7_trait_datas(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	jule::Ptr<_1e374ee30_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e7821591:;
		if (it != expr.end()) {
			jule::Ptr<_1e501c179_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1e4eaac0b_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1e5001e0b_done_indent(_self_);
						_1e5002659_indent(_self_);
						_1e5000679_write(_self_, jule::Str("};\n", 3));
					};
					_1e5000679_write(_self_, jule::Str("static ", 7));
					_1e5000679_write(_self_, _74817_ident);
					_1e5000679_write(_self_, jule::Str("MptrData ", 9));
					_1e5000679_write(_self_, _74817_ident);
					_1e5000679_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1e5000e1b_add_indent(_self_);
				};
				_1e5002659_indent(_self_);
				_1e5000679_write(_self_, jule::Str("{\n", 2));
				_1e5000e1b_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e78258d6:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1e4eaa6bc_func(_76625_m);;
							_1e5002659_indent(_self_);
							_1e5000679_write(_self_, jule::Str(".", 1));
							_1e5000679_write(_self_, _76721_m_ident);
							_1e5000679_write(_self_, jule::Str("=", 1));
							_1e5000679_write(_self_, _76721_m_ident);
							_1e5000679_write(_self_, jule::Str("_", 1));
							_1e5000679_write(_self_, _1e3e4dbd3_itoa(_74721_hash.get()._field_i));
							_1e5000679_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1e78258d6:;
						++it;
						goto _iter_begin_1e78258d6;
					}
					_iter_end_1e78258d6:;
				};
				_1e5001e0b_done_indent(_self_);
				_1e5002659_indent(_self_);
				_1e5000679_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1e7821591:;
			++it;
			goto _iter_begin_1e7821591;
		}
		_iter_end_1e7821591:;
	};
	if ((_74617_old != nullptr)) {
		_1e5001e0b_done_indent(_self_);
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1e501ea83_globals(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1e7829c3c:;
		if (it != expr.end()) {
			jule::Ptr<_1e401a92b_Var> _78921_v = *it;
			{
				_1e5000679_write(_self_, static__1e5027c89_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1e5000679_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1e5000679_write(_self_, jule::Str("&", 1));
				};
				_1e5000679_write(_self_, static__1e4eaba31_var(_78921_v));
				_1e5000679_write(_self_, jule::Str(" = ", 3));
				_1e4ea396d_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1e5000679_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e7829c3c:;
			++it;
			goto _iter_begin_1e7829c3c;
		}
		_iter_end_1e7829c3c:;
	};
}



inline void _1e501ec5e_decls(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4ee0a54_trait_decls(_self_);
	_1e4ed6819_structure_plain_decls(_self_);
	_1e501d147_structure_decls(_self_);
	_1e501d620_func_decls(_self_);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e501d752_trait_data_types(_self_);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e501e6cb_trait_wrappers(_self_);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e501e8a7_trait_datas(_self_);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e501ea83_globals(_self_);
}



inline void _1e501eed4_structure_methods(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e783089c:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _81821_f = *it;
			{
				_1e501e500_func(_self_, _81821_f);
				_1e5000679_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e783089c:;
			++it;
			goto _iter_begin_1e783089c;
		}
		_iter_end_1e783089c:;
	};
}



inline void _1e5020259_structure_derive_defs(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _82446_s) {
	if (_1e3318169_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1e5000679_write(_self_, static__1e4ea64ed_clone_func_def(_82446_s.get()._field_decl));
		_1e5000679_write(_self_, jule::Str("{\n", 2));
		_1e5000e1b_add_indent(_self_);
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, static__1e502667d_structure_ins(_82446_s));
		_1e5000679_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1e7833619:;
			if (it != expr.end()) {
				jule::Ptr<_1e332d657_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1e4eab789_field(_83220_f.get()._field_decl);;
					_1e5002659_indent(_self_);
					_1e5000679_write(_self_, jule::Str("clone.", 6));
					_1e5000679_write(_self_, _83321_ident);
					_1e5000679_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1e5000679_write(_self_, _83321_ident);
					_1e5000679_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1e7833619:;
				++it;
				goto _iter_begin_1e7833619;
			}
			_iter_end_1e7833619:;
		};
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, jule::Str("return clone;\n", 14));
		_1e5001e0b_done_indent(_self_);
		_1e5000679_write(_self_, jule::Str("}", 1));
	};
}



inline void _1e50204ce_structure_ostream(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _84842_s) {
	_1e5002659_indent(_self_);
	_1e5000679_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1e5000679_write(_self_, static__1e4eab4e2_structure_ins(_84842_s));
	_1e5000679_write(_self_, jule::Str(" _Src) {\n", 9));
	_1e5000e1b_add_indent(_self_);
	_1e5002659_indent(_self_);
	jule::Ptr<_1e34019a0_Fn> _85617_fts = _1e3328d39_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1e401bd6c_to_str(_85617_fts)) {
		_1e5000679_write(_self_, jule::Str("_Stream << ", 11));
		_1e5000679_write(_self_, static__1e4eaa6bc_func(_85617_fts));
		_1e5000679_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1e5000679_write(_self_, jule::Str("_Stream << \"", 12));
		_1e5000679_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1e5000679_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1e783b028:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1e332d657_FieldIns> _86625_f = *it;
				{
					_1e5002659_indent(_self_);
					_1e5000679_write(_self_, jule::Str("_Stream << \"", 12));
					_1e5000679_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1e5000679_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e3352093_StructIns> _87321_strct = _1e4094b81_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1e5000679_write(_self_, jule::Str(" cpp.", 5));
						_1e5000679_write(_self_, static__1e4eab789_field(_86625_f.get()._field_decl));
						_1e5000679_write(_self_, jule::Str("\"", 1));
					} else {
						_1e5000679_write(_self_, jule::Str("\" << _Src.", 10));
						_1e5000679_write(_self_, static__1e4eab789_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1e5000679_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1e5000679_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1e783b028:;
				++it;
				_86618_i++;
				goto _iter_begin_1e783b028;
			}
			_iter_end_1e783b028:;
		};
		_1e5002659_indent(_self_);
		_1e5000679_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1e5002659_indent(_self_);
	_1e5000679_write(_self_, jule::Str("return _Stream;\n", 16));
	_1e5001e0b_done_indent(_self_);
	_1e5000679_write(_self_, jule::Str("}", 1));
}



inline void _1e5020754_structure_ins(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3352093_StructIns>& _89938_s) {
	_1e501eed4_structure_methods(_self_, _89938_s);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e5020259_structure_derive_defs(_self_, _89938_s);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
	_1e50204ce_structure_ostream(_self_, _89938_s);
}



inline void _1e50209c9_structure(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3318840_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e7844086:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _90821_ins = *it;
			{
				_1e5020754_structure_ins(_self_, _90821_ins);
				_1e5000679_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e7844086:;
			++it;
			goto _iter_begin_1e7844086;
		}
		_iter_end_1e7844086:;
	};
}



inline void _1e5020ba5_structures(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1e784520d:;
		if (it != expr.end()) {
			jule::Ptr<_1e3318840_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1e50209c9_structure(_self_, _91521_s);
					_1e5000679_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e784520d:;
			++it;
			goto _iter_begin_1e784520d;
		}
		_iter_end_1e784520d:;
	};
}



inline void _1e5020d81_funcs(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _92436_pkg) mutable -> void {
		_1e5021bc8_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1e78485eb:;
				if (it != expr.end()) {
					jule::Ptr<_1e34019a0_Fn> _92629_f = *it;
					{
						if (((!(_22eb5d753_TEST)) && _1e502a97e_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1e78485eb;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1e501e500_func(_self_, _92629_f);
							_1e5000679_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1e78485eb:;
					++it;
					goto _iter_begin_1e78485eb;
				}
				_iter_end_1e78485eb:;
			};
		}));
	}));
}



inline void _1e5021106_push_init(jule::Ptr<_1e501c366_ObjectCoder> _self_, jule::Ptr<_1e3eea488_Package>& _93934_pkg) {
	_1e5021bc8_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)>([=](jule::Ptr<_1e4061466_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1e784aea0:;
			if (it != expr.end()) {
				jule::Ptr<_1e34019a0_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1e5002659_indent(_self_);
						_1e5000679_write(_self_, static__1e4eaa6bc_func(_94120_f));
						_1e5000679_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1e784aea0:;
				++it;
				goto _iter_begin_1e784aea0;
			}
			_iter_end_1e784aea0:;
		};
	}));
}



inline void _1e50212d2_init_caller(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e5000679_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1e5000e1b_add_indent(_self_);
	_1e4edeb85_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e3eea488_Package>&)>([=](jule::Ptr<_1e3eea488_Package>& _95436_pkg) mutable -> void {
		_1e5021106_push_init(_self_, _95436_pkg);
	}));
	_1e5001e0b_done_indent(_self_);
	_1e5000679_write(_self_, jule::Str("\n}", 2));
}



inline void _1e50214ad_end(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e5000679_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22eb5d753_TEST) {
		_1e5000679_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1e5000679_write(_self_, jule::Str("entry_point();", 14));
	};
	_1e5000679_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1e5021689_serialize_head(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e4eddc72_prepare_structures(_self_);
	_1e4ee036c_build_trait_map(_self_);
	_1e4ed2edb_head(_self_);
	_1e5001669_links(_self_);
	_1e5000679_write(_self_, jule::Str("\n", 1));
	_1e501ec5e_decls(_self_);
	_1e5000679_write(_self_, jule::Str("\n", 1));
	_1e5020ba5_structures(_self_);
	_1e5020d81_funcs(_self_);
	_1e50212d2_init_caller(_self_);
	_1e5000679_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e5021865_serialize(jule::Ptr<_1e501c366_ObjectCoder> _self_) {
	_1e5021689_serialize_head(_self_);
	_1e50214ad_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e501c366_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1e78a07a7_parse_integer(_1e505bcac_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1e78a4cd9:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1e78a4eb5:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1e78a546b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1e78a54d2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1e78a5317:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1e78a4943:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1e78a4866:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1e78a8617_parse_integer(_1e505bcac_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1e78acd25:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1e78ad001:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1e78ad4a7:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1e17de125_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1e78ad51d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1e78ad353:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1e78ac97e:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1e78ac8a2:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1e505c5a4_get_data(_1e505bcac_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1e505c7e6_process_flag(_1e505bcac_ArgParser* _self_, jule::Trait<_1e505733a_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1e7887b57_Flag>>()) {
			_case_begin_1e789c782:;
			{
				jule::Ptr<_1e7887b57_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1e7887b57_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1e789c71b:;
	};
	jule::Str _22513_data = _1e505c5a4_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1e505733a_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e503b1cb_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1e787ba91_Flag>>()) {
			_case_begin_1e789deae:;
			{
				jule::Ptr<_1e787ba91_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1e787ba91_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1e78a07a7_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1e3b7493c_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1e505733a_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e503b1cb_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e78806ee_Flag>>()) {
			_case_begin_1e789e894:;
			{
				jule::Ptr<_1e78806ee_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1e78806ee_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1e78a8617_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1e3b5319b_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1e505733a_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e503b1cb_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e7884181_Flag>>()) {
			_case_begin_1e789e90a:;
			{
				jule::Ptr<_1e7884181_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1e7884181_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1e3b9eb98_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1e505733a_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e503b1cb_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e788b5d9_Flag>>()) {
			_case_begin_1e789e971:;
			{
				(*(_21736_flag.operator jule::Ptr<_1e788b5d9_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1e789e82d:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e505ca6b_single_dash(_1e505bcac_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1e78b36ee:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1e505733a_CommonFlag> _26321_flag = _1e505a162_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1e505c7e6_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1e78b36ee:;
			++it;
			goto _iter_begin_1e78b36ee;
		}
		_iter_end_1e78b36ee:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e505cce1_double_dash(_1e505bcac_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1e505733a_CommonFlag> _27617_flag = _1e5059d54_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1e505c7e6_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e505cebc_try_arg(_1e505bcac_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1e505cce1_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1e505ca6b_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e505d198_parse(_1e505bcac_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1e505cebc_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1e78bb87d:;
	}
	_iter_end_1e78bb87d:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e505bcac_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2163acd45_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _2163ad0dc_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _2163ad6a3_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1e5072d28:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1e5073895:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2163acd45_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1e5073312:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1e507329b:;
			};
			(_12113_n)++;
		}
	_iter_next_1e5070683:;
	}
	_iter_end_1e5070683:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _2163ad9b1_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1e50768ed:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1e5076975:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _2163ad0dc_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1e5075a51:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _21639833b_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1e50835a8:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1e50835a8;
				};
				_2113_buff=_2163ad9b1_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1e50835a8:;
			++it;
			goto _iter_begin_1e50835a8;
		}
		_iter_end_1e50835a8:;
	};
	return _2163ad9b1_append_rune(_2113_buff,0LL);
}



inline jule::Str _216398e74_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1e5084c91:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1e5084c91;
				};
			}
			_iter_next_1e5084c91:;
			++it;
			_399_i++;
			goto _iter_begin_1e5084c91;
		}
		_iter_end_1e5084c91:;
	};
	return static_cast<jule::Str>(_2163ad6a3_decode(_3813_code_page));
}



inline jule::Str _2163990a6_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_2163ad6a3_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1e50858c9:;
	}
	_iter_end_1e50858c9:;;
	return jule::Str();
}



inline jule::I64 _22ebde350_get_last_errno(void) {
	return errno;
}



inline jule::Uintptr _2163b00cd_get_std_handle(jule::Uintptr _5423_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _2163b052e_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _2163b0919__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _2163b0b17_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _2163b0e58_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _2163b1497_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _2163b173e_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _2163b19d6_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _2163b1c7d__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _2163b2025__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _2163b22bc__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _2163b2993_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _2163b2cd4_get_console_mode(jule::Uintptr _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _2163b3125_set_console_mode(jule::Uintptr _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _2163b3653_write_console(jule::Uintptr _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _2163b3b81_read_console(jule::Uintptr _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _2163b6018_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _2163b6403_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _2163b6777_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _2163b6b62_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _2163b6d71_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _216495b75_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _216494a20_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_216495092_accept_range _1969_accept = _216495405_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _21649623b_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_216497b11_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1e5109b4b;
			};
		}
	_iter_next_1e5109b4b:;
	}
	_iter_end_1e5109b4b:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _216495b75_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _21649677a_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1e5111d84:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1e51115c0:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1e5111647:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1e51116be:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1e5111746:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1e51119dd:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1e5111559:;
			{
				return -1LL;
			}
		}
		_match_end_1e511149e:;
	};
}



inline jule::I64 _216496b98_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1e51171ec:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1e5117263:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1e5116eaa:;
			{
				_37439_r=65533LL;
				goto _case_begin_1e5117021;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1e5117021:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1e5114716:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1e51146b1:;
	};
}



inline jule::Slice<jule::U8> _216496ed9_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _21649732a_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _21649732a_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1e5120403:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1e511da94:;
			{
				_41245_r=65533LL;
				goto _case_begin_1e511db0a;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1e511db0a:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1e511d07c:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1e511d027:;
	};
}



inline jule::I64 _216497869_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1e512784a;
			};
			jule::U8 _48213_x = _216494a20_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1e512784a;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1e512784a;
			};
			_216495092_accept_range _49213_accept = _216495405_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1e512784a:;
	}
	_iter_end_1e512784a:;;
	return _47333_n;
}



inline jule::Bool _216497b11_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _223380cc8_get_last_os_error_windows(void) {
	jule::U32 _169_err = _2163b0b17_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1e514d442:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e5150488:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e51504ee:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1e5150565:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1e514c573:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1e514c51d:;
	};
}



inline jule::Slice<jule::Str> _223384b45_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2233850b8_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _223385eba___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _223385eba___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _2163b0e58_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_223380cc8_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_2163990a6_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _22341b88b_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _1e181878c_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1e1882ce0__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _1e188b799_is_excluding_latin(_1e182370e_LETTER,_7618_r);
}



inline jule::Bool _1e188abb6_is16(jule::Slice<_1e1889104_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1e5744e89:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_1e1889104_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1e5744e89:;
				++it;
				_19313_i++;
				goto _iter_begin_1e5744e89;
			}
			_iter_end_1e5744e89:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1e1889104_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1e5743806:;
	}
	_iter_end_1e5743806:;;
	return false;
}



inline jule::Bool _1e188b007_is32(jule::Slice<_1e1889577_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1e574b622:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_1e1889577_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1e574b622:;
				++it;
				_23013_i++;
				goto _iter_begin_1e574b622;
			}
			_iter_end_1e574b622:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1e1889577_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1e57482ab:;
	}
	_iter_end_1e57482ab:;;
	return false;
}



inline jule::Bool _1e188b799_is_excluding_latin(jule::Ptr<_1e18899ea_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_1e1889104_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _1e188abb6_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_1e1889577_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _1e188b007_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _1e17ddb08_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1e5773dec:;
	}
	_iter_end_1e5773dec:;;
	return _2213_ss;
}



inline jule::Bool _1e16bd136__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1e5776ebb:;
	}
	_iter_end_1e5776ebb:;;
	return true;
}



inline jule::Bool _1e17de125_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _1e16bd136__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _1e17de642__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1e5779001:;
	}
	_iter_end_1e5779001:;;
	return true;
}



inline jule::Bool _1e188be1a_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _1e17de642__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _1e188c04c_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_1e16bd136__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1e577c9b6:;
	}
	_iter_end_1e577c9b6:;;
	return -1LL;
}



inline jule::I64 _1e188c2b1_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1e57801a0;
					};
				}
			_iter_next_1e5782180:;
			}
			_iter_end_1e5782180:;;
			return _9613_j;
		}
	_iter_next_1e57801a0:;
	}
	_iter_end_1e57801a0:;;
	return -1LL;
}



inline jule::I64 _1e188c3e3_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_1e188c2b1_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _1e188c9ed__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _216495b75_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1e5789c26:;
	}
	_iter_end_1e5789c26:;;
	return -1LL;
}



inline jule::I64 _1e188ce93_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1e578cc7e:;
	}
	_iter_end_1e578cc7e:;;
	return -1LL;
}



inline jule::I64 _1e188d46b_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _22341b88b_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _22341b88b_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _216495b75_decode_rune(_2429_sb.slice(_24413_i));
			if ((_1e188c9ed__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1e57926e0:;
	}
	_iter_end_1e57926e0:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1e188d6d0_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _1e188c04c_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1e57993c8;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1e57993c8:;
	}
	_iter_end_1e57993c8:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _1e188d812_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_1e188c04c_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _1e188dba8_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_1e188d46b_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::Str _1e188de1c_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	if ((_34548_n < 0LL)) {
		_34548_n=static_cast<jule::I64>(_34516_s.len());
	};
	jule::Str _35413_ss = jule::Str::alloc(_34516_s.len());;
	jule::I64 _35513_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _35713_j = _1e188c04c_find_at(_34516_s,_34524_sub,_35513_i);;
			if ((_35713_j == -1LL)) {
				goto _iter_end_1e57a2e09;
			};
			_35413_ss+=_34516_s.slice(_35513_i,_35713_j);
			_35413_ss+=_34534_new;
			_35513_i=static_cast<jule::I64>((_35713_j + _34524_sub.len()));
		}
	_iter_next_1e57a2e09:;
	}
	_iter_end_1e57a2e09:;;
	_35413_ss+=_34516_s.slice(_35513_i);
	return _35413_ss;
}



inline void _1e188cc62__trim_left(jule::Slice<jule::U8>& _39720_s, jule::Slice<jule::U8>& _39732_cutset) {
	jule::I64 _39813_i = 0LL;;
	while ((_39813_i < _39720_s.len())) {
		{
			jule::I32 _40014_r;;
			jule::I64 _40017_n;;
			std::tie(_40014_r,_40017_n) = _216495b75_decode_rune(_39720_s.slice(_39813_i));
			if ((_1e188c9ed__find_rune(_39732_cutset,_40014_r) == -1LL)) {
				_39720_s=_39720_s.slice(_39813_i);
				return;;
			};
			_39813_i+=_40017_n;
		}
	_iter_next_1e57a7d10:;
	}
	_iter_end_1e57a7d10:;;
	_39720_s=nullptr;
}



inline jule::Str _1e188e868_trim_left(jule::Str _41218_s, jule::Str _41226_cutset) {
	jule::Slice<jule::U8> _41313_bytes = _22341b88b_stobs(_41218_s);;
	jule::Slice<jule::U8> _4149_bcutset = _22341b88b_stobs(_41226_cutset);;
	_1e188cc62__trim_left(_41313_bytes,_4149_bcutset);
	return static_cast<jule::Str>(_41313_bytes);
}



inline void _1e188e99a__trim_right(jule::Slice<jule::U8>& _41921_s, jule::Slice<jule::U8>& _41933_cutset) {
	jule::I64 _42013_i = _41921_s.len();;
	while ((_42013_i > 0LL)) {
		{
			jule::I32 _42214_r;;
			jule::I64 _42217_n;;
			std::tie(_42214_r,_42217_n) = _21649623b_decode_last_rune(_41921_s.slice(0LL,_42013_i));
			if ((_1e188c9ed__find_rune(_41933_cutset,_42214_r) == -1LL)) {
				_41921_s=_41921_s.slice(0LL,_42013_i);
				return;;
			};
			_42013_i-=_42217_n;
		}
	_iter_next_1e57ab297:;
	}
	_iter_end_1e57ab297:;;
	_41921_s=nullptr;
}



inline jule::Str _1e188ec0e_trim(jule::Str _44313_s, jule::Str _44321_cutset) {
	jule::Slice<jule::U8> _44413_bytes = _22341b88b_stobs(_44313_s);;
	jule::Slice<jule::U8> _4459_bcutset = _22341b88b_stobs(_44321_cutset);;
	_1e188cc62__trim_left(_44413_bytes,_4459_bcutset);
	_1e188e99a__trim_right(_44413_bytes,_4459_bcutset);
	return static_cast<jule::Str>(_44413_bytes);
}



inline jule::Bool _223362073_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _22335aad8_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _22335ad5d_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _22335b424_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_22335aad8_is_slash(_8220_path[0LL]))) || (!(_22335aad8_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _22335b6bb_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _22335b6bb_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_22335ad5d_to_upper(_9613_p2[0LL]) == 'U')) && (_22335ad5d_to_upper(_9613_p2[1LL]) == 'N')) && (_22335ad5d_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _22335b6bb_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _22335b6bb_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _22335b6bb_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1e57c8407:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_22335aad8_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1e57c8407:;
			++it;
			_1209_i++;
			goto _iter_begin_1e57c8407;
		}
		_iter_end_1e57c8407:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _22335b963_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _21639833b_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_2163b2993_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _216398e74_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1e57ca2d8:;
	}
	_iter_end_1e57ca2d8:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _22335bcd7___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _22335b963_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_1e1890506_clean(_14514_path),_14532_ok);
}



inline jule::Str _22335c07e___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1e57d0ae6:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1e57d2587:;
					}
					else if (_22335aad8_is_slash(_16113_last_char)) {
						_case_begin_1e57d2730:;
						{
							while (((_16217_e.len() > 0LL) && _22335aad8_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1e57d2e06:;
							}
							_iter_end_1e57d2e06:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1e57d2796:;
					}
					else {
						_case_begin_1e57d21d0:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1e57d2103:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1e57d0ae6:;
			++it;
			goto _iter_begin_1e57d0ae6;
		}
		_iter_end_1e57d0ae6:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _1e1890506_clean(_16013_s);
}



inline jule::Str _1e1890506_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _22335b424_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _223362073_is_path_sep(_1099_original_path[0LL])) && _223362073_is_path_sep(_1099_original_path[1LL]))) {
			return _1e189076a_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _223362073_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_1e188ee73_LazyBuff _12713_out = _1e188ee73_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1e1890292_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_223362073_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1e57db9c0:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _223362073_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1e57de6b5:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _223362073_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1e57de72b:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1e57e2674:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_223362073_is_path_sep(static_cast<jule::U8>(_1e1890160_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1e57e2971:;
									}
									_iter_end_1e57e2971:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1e57e26da:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1e1890292_append(&_12713_out, 92LLU);
									};
									_1e1890292_append(&_12713_out, '.');
									_1e1890292_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1e57e22bc:;
						};
					}
				}
				else {
					_case_begin_1e57d9d42:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1e1890292_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_223362073_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_1e1890292_append(&_12713_out, '.');
										_1e1890292_append(&_12713_out, 92LLU);
										goto _iter_end_1e57dba69;
									};
								}
							_iter_next_1e57dba69:;
							}
							_iter_end_1e57dba69:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_223362073_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_1e1890292_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1e57db481:;
						}
						_iter_end_1e57db481:;;
					}
				}
				_match_end_1e57d9c65:;
			};
		}
	_iter_next_1e57d93a2:;
	}
	_iter_end_1e57d93a2:;;
	if ((_12713_out._field_w == 0LL)) {
		_1e1890292_append(&_12713_out, '.');
	};
	return _1e189076a_from_slash(_1e18903c4_string(&_12713_out));
}



inline jule::Str _1e189076a_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _1e188de1c_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1e189089c_join(jule::Slice<jule::Str> _22513_elem) {
	return _22335c07e___join(_22513_elem);
}



inline jule::Str _1e18909ce_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_223362073_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1e57e768a:;
	}
	_iter_end_1e57e768a:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1e1890b11_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _22335bcd7___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1e1890c43_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _223362073_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1e57e948e:;
	}
	_iter_end_1e57e948e:;;
	(_25417_path).mut_slice(_1e1890ea7_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_223362073_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1e57ea1a4:;
	}
	_iter_end_1e57ea1a4:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _1e1890d75_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1e1890ea7_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_223362073_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1e57ed691:;
	}
	_iter_end_1e57ed691:;;
	jule::Str _2919_dir = _1e1890506_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1e1890ea7_volume_name(jule::Str _30320_path) {
	return _1e189076a_from_slash(_30320_path.slice(0LL,_22335b424_volume_name_len(_30320_path)));
}



inline jule::I64 _2162d05d6_get_last_fs_error(void) {
	jule::I64 _729_err = _22ebde350_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e5812ad4:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e58120bc:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1e581252e:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1e5812595:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e581260b:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e5812672:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1e5812ce3:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e5812d59:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1e5812dc0:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1e5812e36:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e5812e9c:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1e5813013:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e5813079:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e5813101:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e5813178:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1e5813200:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1e5813277:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e58132ee:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1e5813376:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1e58133ed:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1e5813475:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1e58134ec:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e5813574:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1e58135eb:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1e5813673:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1e58136ea:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1e5813772:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1e58137e9:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1e58123b9:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1e5812364:;
	};
}



inline jule::Bool _21642b0d3_is_console_handle(jule::Uintptr _11622_handle) {
	return (((_11622_handle == _21637b583_STDIN) || (_11622_handle == _21639b10d_STDOUT)) || (_11622_handle == _216397824_STDERR));
}



inline jule::I64 _1e19447ec_get_last_process_error(void) {
	jule::I64 _429_err = _22ebde350_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e5842c24:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1e5843186:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1e58431ec:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e5843263:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e58432c9:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e584352c:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e5843593:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1e5843609:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1e5843670:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1e58436d6:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1e584374c:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1e5843021:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1e5842ebb:;
	};
}



inline jule::Slice<wchar_t*> _1e1959515_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1e584b38c:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1e584b38c:;
			++it;
			_199_i++;
			goto _iter_begin_1e584b38c;
		}
		_iter_end_1e584b38c:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1e19597ac_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1e584d15d:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_21639833b_utf16_from_str(_2812_p));;
			}
			_iter_next_1e584d15d:;
			++it;
			goto _iter_begin_1e584d15d;
		}
		_iter_end_1e584d15d:;
	};
	return _2713_us;
}



inline jule::I64 _1e1959b0e_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _21639833b_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1e19597ac_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _1e1959515_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _1e1959ee9_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1e19597ac_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _1e1959515_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1e19597ac_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _1e1959515_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _21639833b_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1e195ac20_exit(jule::I64 _1213_code) {
	_2163b6d71_exit(_1213_code);
}



inline jule::Str _1e195ae1d_executable(void) {
	return jule::executable();
}



inline jule::Bool _1e18e866e_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1e18e87a1_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _22eb67c57_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1e5883c98:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1e5883c98:;
			++it;
			goto _iter_begin_1e5883c98;
		}
		_iter_end_1e5883c98:;
	};
	return false;
}



inline jule::Bool _1e18e89e3_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1e18e701e_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1e5885c89:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1e5885c89:;
			++it;
			goto _iter_begin_1e5885c89;
		}
		_iter_end_1e5885c89:;
	};
	{
		auto &expr = _1e18e8581_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1e58869d2:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1e58869d2:;
			++it;
			goto _iter_begin_1e58869d2;
		}
		_iter_end_1e58869d2:;
	};
	return false;
}



inline jule::Str _1e19054a0_logf(jule::Str _29213_fmt, jule::Slice<jule::Any> _29226_args) {
	return _1e1905db8_apply_fmt(_29213_fmt,jule::Any(_29226_args));
}



inline jule::Str _1e190578b_arg_to_str(jule::Any _29615_arg) {
	{
		auto &_match_expr{ _29615_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e5887b9d:;
			{
				return _29615_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1e5887c14:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1e5887c7a:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1e5886e44:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1e5887ae3:;
	};
}



inline jule::I64 _1e1905a33_find_next_fmt(jule::Str _30918_fmt) {
	{
		auto &expr = _30918_fmt;
		auto it = expr.begin();
		_iter_begin_1e58887b4:;
		if (it != expr.end()) {
			jule::I64 _3109_i = it - expr.begin();
			jule::U8 &_31012_b = *it;
			{
				if ((_31012_b == '@')) {
					return _3109_i;
				};
			}
			_iter_next_1e58887b4:;
			++it;
			_3109_i++;
			goto _iter_begin_1e58887b4;
		}
		_iter_end_1e58887b4:;
	};
	return -1LL;
}



inline jule::Str _1e1905db8_apply_fmt(jule::Str _31818_fmt, jule::Slice<jule::Any> _31828_args) {
	jule::Str _31913_s = jule::Str();;
	{
		auto &expr = _31828_args;
		auto it = expr.begin();
		_iter_begin_1e588a83d:;
		if (it != expr.end()) {
			jule::Any &_32112_arg = *it;
			{
				jule::I64 _32213_i = _1e1905a33_find_next_fmt(_31818_fmt);;
				if ((_32213_i == -1LL)) {
					goto _iter_end_1e588a83d;
				};
				_31913_s+=_31818_fmt.slice(0LL,_32213_i);
				_31913_s+=_1e190578b_arg_to_str(jule::Any(_32112_arg));
				(_31818_fmt).mut_slice((_32213_i + 1LL));;
			}
			_iter_next_1e588a83d:;
			++it;
			goto _iter_begin_1e588a83d;
		}
		_iter_end_1e588a83d:;
	};
	_31913_s+=_31818_fmt;
	return _31913_s;
}



inline jule::Bool _1e1906e85_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _1e1908a58_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1e1908d44_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _1e19090db_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _1e190940a_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _1e19096a2_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1e1909949_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1e1909be1_is_unix(jule::Str _6916_os) {
	return (_1e1908d44_is_darwin(_6916_os) || _1e19090db_is_linux(_6916_os));
}



inline jule::Bool _1e190a065_is_32bit(jule::Str _7217_arch) {
	return _1e190940a_is_i386(_7217_arch);
}



inline jule::Bool _1e190a30c_is_64bit(jule::Str _7517_arch) {
	return (_1e19096a2_is_amd64(_7517_arch) || _1e1909949_is_arm64(_7517_arch));
}



inline void _1e19176e3_init(void) {
	jule::Str _2513_path = _1e195ae1d_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _2233850b8_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _1e1890d75_dir(_2513_path);;
	_2513_path=_1e189089c_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_1e19294c4_PATH_WD=_309_pwd;
		_1e192858e_PATH_EXEC=_359_path_exec;
		_1e1927934_PATH_STDLIB=_1e189089c_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_1e1943389_PATH_API=_1e189089c_join(jule::Slice<jule::Str>::make({_1e192858e_PATH_EXEC,jule::Str("..", 2)}));
		_1e1943389_PATH_API=_1e189089c_join(jule::Slice<jule::Str>::make({_1e1943389_PATH_API,jule::Str("api", 3)}));
		_1e1943389_PATH_API=_1e189089c_join(jule::Slice<jule::Str>::make({_1e1943389_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1e1c32700_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1e1b819b2_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1e58dabac:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1e58dabac:;
			++it;
			goto _iter_begin_1e58dabac;
		}
		_iter_end_1e58dabac:;
	};
	return false;
}



inline jule::Bool _1e1c329db_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1e1b81d03_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1e58db5b4:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1e58db5b4:;
			++it;
			goto _iter_begin_1e58db5b4;
		}
		_iter_end_1e58db5b4:;
	};
	return false;
}



inline jule::Bool _1e1c330a2_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1e1c33349_is_raw_str(_34615_k)));
}



inline jule::Bool _1e1c33349_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _1e1c335e1_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _1e1c33c0c_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _1e1c33ea4_is_float(jule::Str _36217_k) {
	if (_1e17de125_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _1e188dba8_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _1e188dba8_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1e1c3424b_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _1e1c3478a_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1e1c34a32_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1e1c35071_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1e1b8174d_SPACES;
		auto it = expr.begin();
		_iter_begin_1e58e55ac:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1e58e55ac:;
			++it;
			goto _iter_begin_1e58e55ac;
		}
		_iter_end_1e58e55ac:;
	};
	return false;
}



inline jule::Bool _1e1c354c2_is_letter(jule::I32 _41318_r) {
	return _1e181878c_is_letter(_41318_r);
}



inline jule::Bool _1e1c35a11_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _1e1c35ca8_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _1e1c36050_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _1e1c362e7_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1e58ea45d:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1e58e9c43:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1e58e9ca9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e58e9bcc:;
			{
				return false;
			}
		}
		_match_end_1e58e9b22:;
	};
}



inline jule::Bool _1e1c3658e_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1e1c36836_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1e1c2b4b8_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1e58ebd77:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1e58ebd77:;
			++it;
			goto _iter_begin_1e58ebd77;
		}
		_iter_end_1e58ebd77:;
	};
	return false;
}



inline jule::Bool _1e1c36acd_is_assign_op(jule::Str _48121_kind) {
	if (_1e1c36836_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _1e1c2b809_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1e58ee808:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1e58ee808:;
			++it;
			goto _iter_begin_1e58ee808;
		}
		_iter_end_1e58ee808:;
	};
	return false;
}



inline jule::Ptr<_1e1c37381_File> _1e1c388b0_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1e1c37381_File>(_1e1c37381_File{._field_path=_6321_path, });
}



inline _1e1905060_Log _1e1c3a1db_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_1e1c37381_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_1e19054a0_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _1e1c3a571_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1e5909846:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1e5909846:;
			++it;
			_1259_i++;
			goto _iter_begin_1e5909846;
		}
		_iter_end_1e5909846:;
	};
	return true;
}



inline jule::Str _1e1c3a8b2_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_1e1c35a11_is_decimal(_13913_b))))) {
				goto _iter_end_1e590d7a1;
			};
		}
	_iter_next_1e590d7a1:;
	}
	_iter_end_1e590d7a1:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1e1c3ac47_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _1e1c3a8b2_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1e1c3b088_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _1e1c35a11_is_decimal(_17913_b)) {
					_case_begin_1e5911ab2:;
					{
						goto _iter_next_1e5910693;
					}
				}
				else if (_1e1c3c83c_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1e5911b28:;
					{
						return _1e1c3ac47_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1e5911a4b:;
					{
						goto _iter_end_1e5910693;
					}
				}
				_match_end_1e59119d5:;
			};
		}
	_iter_next_1e5910693:;
	}
	_iter_end_1e5910693:;;
	return jule::Str();
}



inline jule::Str _1e1c3b3c9_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _1e1c3a8b2_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1e1c3b71a_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _1e1c3a8b2_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1e1c3bb6b_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _1e1c3a8b2_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_1e1c35a11_is_decimal(_21213_b))))) {
				goto _iter_end_1e5914422;
			};
		}
	_iter_next_1e5914422:;
	}
	_iter_end_1e5914422:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1e1c3be13_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1e5918b63:;
					{
						_22731_lit = _1e1c3bb6b_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1e5918bda:;
					{
						goto _iter_next_1e5917de8;
					}
				}
				else if (_1e1c3c4eb_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1e5918c62:;
					{
						_22731_lit = _1e1c3a8b2_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1e1c35a11_is_decimal(_23113_b)))) {
					_case_begin_1e5918cd9:;
					{
						goto _iter_end_1e5917de8;
					}
				}
				_match_end_1e5918a86:;
			};
		}
	_iter_next_1e5917de8:;
	}
	_iter_end_1e5917de8:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1e1c3c1aa_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1e1c3a571_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_1e1c35ca8_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1e591c46e;
			};
		}
	_iter_next_1e591c46e:;
	}
	_iter_end_1e591c46e:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1e1c3c4eb_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _1e1c3c83c_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _1e1c3cb7d_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _1e1c35a11_is_decimal(_28713_b)) {
					_case_begin_1e5921d58:;
					{
						goto _iter_next_1e591ed78;
					}
				}
				else if (_1e1c3c83c_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1e5921dbe:;
					{
						return true;
					}
				}
				else {
					_case_begin_1e5921ce2:;
					{
						goto _iter_end_1e591ed78;
					}
				}
				_match_end_1e5921c7b:;
			};
		}
	_iter_next_1e591ed78:;
	}
	_iter_end_1e591ed78:;;
	return false;
}



inline jule::Bool _1e1c3cebe_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1e5923b5c:;
			{
				goto _case_begin_1e5923420;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1e5923420:;
			{
				goto _case_begin_1e5923486;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1e5923486:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e59233a9:;
			{
				return true;
			}
		}
		_match_end_1e59232cc:;
	};
}



inline jule::Bool _1e1c3d310_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1e5925e6c:;
			{
				goto _case_begin_1e59257a7;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1e59257a7:;
			{
				goto _case_begin_1e592581d;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1e592581d:;
			{
				goto _case_begin_1e5925884;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1e5925884:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e5925268:;
			{
				return true;
			}
		}
		_match_end_1e592518b:;
	};
}



inline jule::Str _1e1c3d761_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _1e1c3bb6b_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_1e1c3c4eb_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1e1c3a8b2_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_1e1c36050_is_octal(_35013_b))))) {
				goto _iter_end_1e592ac96;
			};
		}
	_iter_next_1e592ac96:;
	}
	_iter_end_1e592ac96:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1e1c3da08_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_1e1c3cebe_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1e5931917:;
					{
						_37128_lit = _1e1c3b71a_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1e1c3d310_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1e593198e:;
					{
						_37128_lit = _1e1c3b3c9_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1e1c3c83c_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1e5931a16:;
					{
						_37128_lit = _1e1c3ac47_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1e1c3cb7d_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1e5931a8d:;
					{
						_37128_lit = _1e1c3b088_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1e1c362e7_is_hex(_38313_b))))) {
					_case_begin_1e5931b15:;
					{
						goto _iter_end_1e5930cac;
					}
				}
				_match_end_1e5931829:;
			};
		}
	_iter_next_1e5930cac:;
	}
	_iter_end_1e5930cac:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1e1c3dd49_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_1e1c362e7_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1e593482c:;
	}
	_iter_end_1e593482c:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1e1c3e113_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1e1c3dd49_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1e1c3e2cd_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1e1c3dd49_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1e1c3e586_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1e1c3dd49_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1e1c3e82d_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_1e1c36050_is_octal(_43717_txt[1LL]))) || (!(_1e1c36050_is_octal(_43717_txt[2LL])))) || (!(_1e1c36050_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_1e1905060_Log> _1e1c44327_lex(jule::Ptr<_1e1c37381_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_1e1c40015_Lex _83713_lex = _1e1c40015_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1e1c42aa6_new_line(&_83713_lex);
	_1e1c40aa4_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline void _1e33e90c4_lshift_unsig(_1e3388a47_Const& _58722_c, _1e3388a47_Const& _58733_x) {
	jule::U64 _5889_l = _1e33e3123_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1e33e3123_as_u64(&_58733_x);;
	_1e33e3882_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1e33e93c1_rshift_unsig(_1e3388a47_Const& _59322_c, _1e3388a47_Const& _59333_x) {
	jule::U64 _5949_l = _1e33e3123_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1e33e3123_as_u64(&_59333_x);;
	_1e33e3882_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1e3e0b960_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1e3e14171_len64(_6124_x)));
}



inline jule::I64 _1e3e0c9b6_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1e3e0d654_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1e3e0d3ac_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e3e0c114_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1e3e0d654_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e3e0c763_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1e3e13dc9_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1e3e14171_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1e3e14d31_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e3e164b4_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1e3d305a9_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1e3d30895_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1e3d30b3c_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1e3d30e5b_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1e3d33568_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1e5b2a14e:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1e3dbe02c_is_inf(_4718_f,0LL) || _1e3db3395_is_nan(_4718_f)) {
			_case_begin_1e5b2a1c6:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1e5b2a061:;
	};
	std::tie(_4718_f,_4739_exp) = _1e3dd50a9_normalize(_4718_f);
	jule::U64 _5613_x = _1e3d30b3c_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1e3dacca7_nan(void) {
	return static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1e3db3395_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1e3db53db_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1e3dbe02c_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1e3dd50a9_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1e3dae913_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1e3dc6b17_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e3db3395_is_nan(_11112_x) || _1e3dbe02c_is_inf(_11112_x,1LL)) {
			_case_begin_1e5b6d516:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1e5b6d58d:;
			{
				return static_cast<jule::F64>(_1e3dacca7_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1e5b6d615:;
			{
				return static_cast<jule::F64>(_1e3db53db_inf(-1LL));
			}
		}
		_match_end_1e5b6d44a:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1e3d33568_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1e3dae913_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(static_cast<jule::U64>((_1e3d30b3c_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1e3e1ed5d_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1e3dae913_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1e5be0940:;
		}
		_iter_end_1e5be0940:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1e3e20622_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1e3d33568_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1e3dc6b17_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1e3874cbe_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1e387583b_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1e3a7d390_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1e387583b_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e3a1a607_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1e5e0444a:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e3d305a9_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1e3a1a607_FloatInfo>)((&(_1e386551d_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5e044c2:;
			{
				_8313_bits=static_cast<jule::U64>(_1e3d30b3c_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1e3a1a607_FloatInfo>)((&(_1e386aa0c_F64_INFO))));
			}
		}
		else {
			_case_begin_1e5e03a10:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1e5e03d40:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1e5e07ae1:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1e5e0a0cc:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1e5e0a264:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1e5e090cb:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1e5e08eee:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e5e0863b:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1e5e040a4:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1e5e07a8b:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1e39e7d76_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1e3a1b65d_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1e391b23e_DecimalSlice _13213_digs = _1e391b23e_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1e38d0a50_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5e0e312:;
				{
					_8259_prec=static_cast<jule::I64>(_1e3a7d390_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5e0e389:;
				{
					_8259_prec=static_cast<jule::I64>(_1e3a7d390_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5e0e433:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1e5e0d5db:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5e11996:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5e11303:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1e5e114ce:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1e5e1138b:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e3cb374b_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e3d1a7c5_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e388a09d_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1e38e37cc_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1e388a09d_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e3a1a607_FloatInfo& _18327_flt) {
	_1e3e4bdac_Decimal _18413_d = _1e3e4bdac_Decimal{};;
	_1e3e4c099_assign(&_18413_d, _1835_mant);
	_1e3e4c1cb_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1e391b23e_DecimalSlice _18713_digs = _1e391b23e_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1e391a8c0_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1e391b23e_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5e1677b:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5e1911e:;
				{
					_18234_prec=static_cast<jule::I64>(_1e3a7d390_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5e19185:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1e5e18d77:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e5e181a6:;
				{
					_1e3e4c572_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e5e1821c:;
				{
					_1e3e4c572_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e5e18294:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1e3e4c572_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1e5e180eb:;
		};
		_18713_digs=_1e391b23e_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e38e37cc_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1e38e37cc_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1e391b23e_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1e5e1e1e0:;
			{
				return _1e392be86_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e5e1e256:;
			{
				return _1e392d619_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1e5e1e2bc:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e392be86_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e392d619_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1e3a7d390_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1e5e1e09c:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1e391a8c0_round_shortest(_1e3e4bdac_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1e3a1a607_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1e3e4bdac_Decimal _28713_upper = _1e3e4bdac_Decimal{};;
	_1e3e4c099_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1e3e4c1cb_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1e3e4bdac_Decimal _30613_lower = _1e3e4bdac_Decimal{};;
	_1e3e4c099_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e3e4c1cb_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1e5e2c30d;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1e5e32654:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1e5e326cb:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1e5e32753:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1e5e32588:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1e5e358ee:;
					{
						_1e3e4c572_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1e5e35965:;
					{
						_1e3e4c30d_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1e5e359dc:;
					{
						_1e3e4c440_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1e5e35855:;
			};
		}
	_iter_next_1e5e2c30d:;
	}
	_iter_end_1e5e2c30d:;;
}



inline jule::Slice<jule::U8> _1e392be86_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1e391b23e_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e3a21a3c_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1e5e40233:;
		}
		_iter_end_1e5e40233:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1e5e4293e:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1e5e44556:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e5e428c8:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e5e42b1a:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1e392d619_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1e391b23e_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e3a21a3c_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1e5e470a3:;
		}
		_iter_end_1e5e470a3:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1e5e48912:;
		}
		_iter_end_1e5e48912:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1e39e7d76_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1e3a1a607_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1e3e4e079_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1e3e4e079_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1e3a1b65d_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e3a1a607_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1e5e4dbd1:;
	}
	_iter_end_1e5e4dbd1:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e5e53ab5:;
		}
		_iter_end_1e5e53ab5:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e5e563d1:;
		}
		_iter_end_1e5e563d1:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1e3a9d679_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1e5e58b20:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1e5e58812:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e5e58aa9:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e5e56a0d:;
	};
	return _50614_dst;
}



inline jule::I64 _1e3a21a3c_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1e3a7d390_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1e3a9d679_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1e3ac0e3d___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1e5e60ce2:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1e5e60b8d:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1e3a9d679_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1e5e62a5d:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e3a9d679_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1e5e62871:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e3a9d679_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1e5e628e8:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1e5e624ca:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1e5e623ed:;
					};
				};
			}
		}
		else {
			_case_begin_1e5e5ede0:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1e5e5ed8a:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1e5e67733:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e5e66d70:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1e5e67139:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1e5e66eb3:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1e5e67227:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5e688cc:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1e5e68877:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1e5e698de:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1e5e6b03e:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e3a9d679_lower(_10912_c)) && (_1e3a9d679_lower(_10912_c) <= 'z'))) {
						_case_begin_1e5e6ae0c:;
						{
							_11017_d=static_cast<jule::U8>(((_1e3a9d679_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1e5e6ae73:;
						{
							goto _iter_next_1e5e698de;
						}
					}
					else {
						_case_begin_1e5e6a978:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1e5e6a912:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1e5e698de:;
			++it;
			goto _iter_begin_1e5e698de;
		}
		_iter_end_1e5e698de:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1e3b5319b_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1e3ac0e3d___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1e3b7493c_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1e3ac0e3d___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1e38665eb_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1e3e0b960_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1e3e164b4_mul64(_4123_man,_1e3917b31_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1e3e164b4_mul64(_4123_man,_1e3917b31_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e3bdd456_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1e3d30895_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1e3e0b960_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e3e164b4_mul64(_11023_man,_1e3917b31_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e3e164b4_mul64(_11023_man,_1e3917b31_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1e3d30895_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1e3b0d3cb_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1e5e9350b:;
	}
	_iter_end_1e5e9350b:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e392adca_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1e5e97e17:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1e5e97e8e;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1e5e97e8e:;
			{
				jule::I64 _8317_case_n = _1e3b0d3cb_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1e3db53db_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1e5e98016:;
			{
				if ((_1e3b0d3cb_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1e3dacca7_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1e5e97d4b:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e3be3ec8_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1e5e9e182:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1e5e9e1e8:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1e5e9dea6:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1e3a9d679_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1e5ea560b:;
					{
						goto _iter_next_1e5ea4a06;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1e5ea5683:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1e5ea4a06;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1e5ea570a:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1e5ea4a06;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1e5ea4a06;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e3a9d679_lower(_13313_c))) && (_1e3a9d679_lower(_13313_c) <= 'f'))) {
					_case_begin_1e5ea5782:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1e3a9d679_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1e5ea4a06;
					}
				}
				_match_end_1e5ea552e:;
			};
			goto _iter_end_1e5ea4a06;
		}
	_iter_next_1e5ea4a06:;
	}
	_iter_end_1e5ea4a06:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1e3a9d679_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1e5eb022b;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1e5eb022b:;
		}
		_iter_end_1e5eb022b:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e388ab3c_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1e386aa0c_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1e5eba8b8:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1e5eba940:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1e3972938_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1e3972938_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1e5eba9b7:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1e3972938_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1e5eba80d:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e38ac521_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1e386551d_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1e5ec09de:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1e5ec0a66:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1e39d96b4_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1e39d96b4_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1e5ec0add:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1e39d96b4_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1e5ec0934:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1e3901b3c_atof_hex(jule::Str _55113_s, _1e3a1a607_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1e5ec653e:;
	}
	_iter_end_1e5ec653e:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1e5ec6a06:;
	}
	_iter_end_1e5ec6a06:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1e5ec8640:;
	}
	_iter_end_1e5ec8640:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1e386551d_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1e3d30895_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1e3952396_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1e392adca_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1e3be3ec8_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1e3901b3c_atof_hex(_61611_s.slice(0LL,_61629_n),_1e386551d_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1e38ac521_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1e3bdd456_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1e3bdd456_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1e3e4bdac_Decimal _66213_d = _1e3e4bdac_Decimal{};;
	if ((!(_1e3c1e5a8_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1e3c5cc01_float_bits(&_66213_d, _1e386551d_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1e3d30895_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e3ac7708_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1e392adca_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1e3be3ec8_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1e3901b3c_atof_hex(_67411_s.slice(0LL,_67429_n),_1e386aa0c_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1e388ab3c_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1e38665eb_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1e38665eb_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1e3e4bdac_Decimal _71913_d = _1e3e4bdac_Decimal{};;
	if ((!(_1e3c1e5a8_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1e3c5cc01_float_bits(&_71913_d, _1e386aa0c_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1e3d30e5b_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e3b537b7_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1e3952396_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1e3ac7708_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1e3b9eb98_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1e3b537b7_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1e3cb374b_ryu_ftoa_fixed32(_1e391b23e_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1e3e13dc9_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e391cb25_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e3e4b098_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e3e4b30c_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e3d2225a_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1e3d1a7c5_ryu_ftoa_fixed64(_1e391b23e_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1e3e14171_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e391cb25_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1e3e4b1ca_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e3e4b30c_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e3d2225a_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1e3d2225a_format_decimal(_1e391b23e_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1e3a1c780_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1e601149c:;
	}
	_iter_end_1e601149c:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1e6014e95:;
	}
	_iter_end_1e6014e95:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1e601a5d8:;
	}
	_iter_end_1e601a5d8:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1e38d0a50_ryu_ftoa_shortest(_1e391b23e_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1e3a1a607_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1e3e0d654_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1e3cb1a35_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1e392c63a_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1e3cb1a35_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1e391cb25_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1e386551d_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1e3e4b098_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1e3e4b098_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1e3e4b098_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1e3e4b1ca_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1e3e4b1ca_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1e3e4b1ca_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e3e4b30c_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e3e4b30c_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e3e4b30c_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e3cb1a35_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1e391cb25_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1e392b749_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e392c63a_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1e3a1a607_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1e3cb1a35_ryu_digits(_1e391b23e_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1e3e4b43e_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1e3e4b43e_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1e3e4b43e_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1e3e4ae66_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1e3e4ae66_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1e603ae11:;
		}
		_iter_end_1e603ae11:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e3e4ae66_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1e603d1ee:;
	}
	_iter_end_1e603d1ee:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1e603ab8b:;
	}
	_iter_end_1e603ab8b:;;
}



inline void _1e3e4ae66_ryu_digits32(_1e391b23e_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1e6041ac6;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1e6041ac6:;
	}
	_iter_end_1e6041ac6:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1e6048704:;
	}
	_iter_end_1e6048704:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e3e4b098_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e3917b31_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1e3e164b4_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1e392b749_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e3e4b1ca_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e3917b31_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1e392b749_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1e3e164b4_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1e3e164b4_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1e3e14d31_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1e3e4b30c_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1e60581b4:;
	}
	_iter_end_1e60581b4:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e3e4b43e_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1e3e4c918_trim(_1e3e4bdac_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1e605c707:;
	}
	_iter_end_1e605c707:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1e3e4ca4a_right_shift(_1e3e4bdac_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1e6060aa1:;
				}
				_iter_end_1e6060aa1:;;
				goto _iter_end_1e605e52d;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1e605e52d:;
	}
	_iter_end_1e605e52d:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1e6063378:;
	}
	_iter_end_1e6063378:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1e6063ed3:;
	}
	_iter_end_1e6063ed3:;;
	_34321_a._field_nd=_34513_w;
	_1e3e4c918_trim(_34321_a);
}



inline jule::Bool _1e3e4cb7c_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1e6067d2d:;
	}
	_iter_end_1e6067d2d:;;
	return false;
}



inline void _1e3e4ccae_left_shift(_1e3e4bdac_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1e3a43c3a_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1e3e4cb7c_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1e3a43c3a_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1e606b705:;
	}
	_iter_end_1e606b705:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1e606dd23:;
	}
	_iter_end_1e606dd23:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1e3e4c918_trim(_41120_a);
}



inline jule::Bool _1e3e4cde1_should_round_up(_1e3e4bdac_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1e3e4d96e_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1e3e4dd15_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1e3e4e079_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1e3e4daa1_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1e3e4dd15_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1e3e4e079_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1e3e4dbd3_itoa(jule::I64 _8013_i) {
	return _1e3e4daa1_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1e3e4dd15_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1e3e4de47_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e3e4e079_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1e60b3142:;
		}
		_iter_end_1e60b3142:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e3e4de47_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e3e0c9b6_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1e60bbc61:;
		}
		_iter_end_1e60bbc61:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1e60bea44:;
		}
		_iter_end_1e60bea44:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline jule::Str _1e3ec0370_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e60da17a:;
			{
				return _1e3ebe9ce_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e60da1e1:;
			{
				return _1e3ebec43_SYS_UINT;
			}
		}
		else {
			_case_begin_1e60da60e:;
			{
				return _4521_kind;
			}
		}
		_match_end_1e60da554:;
	};
}



inline jule::I64 _1e3ec0617_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1e60dbbe8:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1e60dbc5e:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1e60db753:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1e60db7b9:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1e60db830:;
			{
				return _1e3ebe76a_BIT_SIZE;
			}
		}
		else {
			_case_begin_1e60db544:;
			{
				return -1LL;
			}
		}
		_match_end_1e60db489:;
	};
}



inline jule::Str _1e3ec0936_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1e60dd810:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e60dd876:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e60dd8dc:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e60dd9ec:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1e60dcb94:;
			{
				return jule::Str();
			}
		}
		_match_end_1e60dd6de:;
	};
}



inline jule::Str _1e3ec0bcd_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1e60deb85:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e60debeb:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e60dec62:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e60e005e:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1e60de206:;
			{
				return jule::Str();
			}
		}
		_match_end_1e60de0b3:;
	};
}



inline jule::Str _1e3ec0e75_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1e60e1170:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e60e11d6:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1e60e0746:;
			{
				return jule::Str();
			}
		}
		_match_end_1e60e0603:;
	};
}



inline jule::Bool _1e3ec1a25_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1e3b9eb98_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1e3ec1cbc_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1e60e4c78:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e60e5bd0:;
			{
				return 64LL;
			}
		}
		_match_end_1e60e5b25:;
	};
}



inline jule::I64 _1e3ec2064_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1e60e71cb:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1e60e7242:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1e60e72b9:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e60e6e9a:;
			{
				return 64LL;
			}
		}
		_match_end_1e60e6dbd:;
	};
}



inline jule::I64 _1e3ec230b_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1e60e9046:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1e60e90ac:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1e60e9134:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e60e8e8b:;
			{
				return 64LL;
			}
		}
		_match_end_1e60e95b8:;
	};
}



inline void _1e3ec2471_update_target(void) {
	{
		{
			auto &_match_expr{ _1e1926d40_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1e60e9eae:;
				{
					_1e3ebe76a_BIT_SIZE=64LL;
					_1e3ebe9ce_SYS_INT=jule::Str("i64", 3);
					_1e3ebec43_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1e60ea7c8:;
				{
					_1e3ebe76a_BIT_SIZE=32LL;
					_1e3ebe9ce_SYS_INT=jule::Str("i32", 3);
					_1e3ebec43_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1e60e9dd2:;
		};
	};
}



inline void _1e3ec25d6_init(void) {
	_1e3ec2471_update_target();
}



inline jule::F64 _1e3ec6893_min(jule::Str _6116_k) {
	_6116_k=_1e3ec0370_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e60ed666:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e60ed6cc:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e60ed0d3:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e60ed149:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e60ed1c1:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e60ed248:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1e60ece6d:;
			{
				return 0LL;
			}
		}
		_match_end_1e60eaed2:;
	};
}



inline jule::F64 _1e3ec6b7e_max(jule::Str _8316_k) {
	_8316_k=_1e3ec0370_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e60ed413:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e60eed60:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e60eedc6:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e60eee3c:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e60eeea3:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e6100217:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e610027d:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e61002e4:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e610036b:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e61003e3:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1e60eebb7:;
			{
				return 0LL;
			}
		}
		_match_end_1e60edb2d:;
	};
}



inline jule::Bool _1e3ec7003_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1e3ec72de_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e3ec7586_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1e3ec78a5_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1e3ec7b4c_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1e3ec7de4_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e3ec818b_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e3ec8510_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1e3ec87a7_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1e3ec8a4e_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1e3ec8d90_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e61088d5:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e6108b49:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e6108bb0:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e6108c26:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e6108c8c:;
			{
				return _1e3ec7003_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e6108d03:;
			{
				return _1e3ec72de_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e6108d69:;
			{
				return _1e3ec7586_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e6108dd0:;
			{
				return _1e3ec78a5_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e6108e57:;
			{
				return _1e3ec7b4c_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e6108ebd:;
			{
				return _1e3ec7de4_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e6109045:;
			{
				return _1e3ec818b_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e61090bc:;
			{
				return _1e3ec8510_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e6109144:;
			{
				return _1e3ec87a7_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e61091bb:;
			{
				return _1e3ec8a4e_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1e6109243:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1e61092ba:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1e6108693:;
			{
				return false;
			}
		}
		_match_end_1e61085c7:;
	};
}



inline jule::Bool _1e3ec9137_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1e3ec93ce_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e3ec9676_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1e3ec991d_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1e3ec9d6e_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e3eca116_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e3eca3ad_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1e3eca655_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1e3eca996_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e611234a:;
			{
				return _1e3ecb9ca_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e61123b1:;
			{
				return _1e3ecbcb6_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e61125ae:;
			{
				return _1e3ecbcb6_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e6112625:;
			{
				return _1e3ec9137_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e611268b:;
			{
				return _1e3ec93ce_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e6112713:;
			{
				return _1e3ec9676_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e611278a:;
			{
				return _1e3ec991d_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e6112812:;
			{
				return _1e3ec9d6e_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e61128de:;
			{
				return _1e3eca116_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e6112955:;
			{
				return _1e3eca3ad_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e61129bb:;
			{
				return _1e3eca655_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e6112a32:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e6112108:;
			{
				return false;
			}
		}
		_match_end_1e61119dc:;
	};
}



inline jule::Bool _1e3ecb9ca_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1e3ecbcb6_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1e3ecc05d_is_int(jule::Str _4615_k) {
	return (_1e3ecb9ca_is_sig_int(_4615_k) || _1e3ecbcb6_is_unsig_int(_4615_k));
}



inline jule::Bool _1e3ecc37c_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1e3ecc624_is_num(jule::Str _5615_k) {
	return (_1e3ecc05d_is_int(_5615_k) || _1e3ecc37c_is_float(_5615_k));
}



inline jule::Bool _1e403c662_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1e404e3dd_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1e4051632_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _216495b75_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1e4033e0b_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1e405107c_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1e4051973_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _216495b75_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_216496ed9_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1e6120765:;
	}
	_iter_end_1e6120765:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1e4051324_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1e61253a2:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e6125418:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e612547e:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1e61254e5:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1e612556c:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e61255e4:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1e612566b:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1e61256e3:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1e612576a:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1e61257e2:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1e6125281:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1e4051632_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1e4051324_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1e612ae9b:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1e3b5319b_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e612b61c:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1e3b5319b_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e612b74e:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e3b5319b_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1e6129e78:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e3b5319b_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1e6129e23:;
	};
}



inline jule::Slice<jule::U8> _1e4051973_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1e4051632_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1e413ac49_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _216495b75_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1e6167438:;
	}
	_iter_end_1e6167438:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1e410a301_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _216495b75_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1e616a22c:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1e616a2a4:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1e6169d20:;
			};
		}
	_iter_next_1e616936e:;
	}
	_iter_end_1e616936e:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1e4109ad6_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1e616c273:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3874cbe_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e616be21:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3874cbe_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1e616a639:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4daa1_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1e616a6a0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4daa1_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1e616bb13:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4daa1_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e616bb79:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4daa1_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1e616bbe0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4d96e_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1e616bc56:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4d96e_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1e616bcbc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4d96e_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e616c2ea:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e3e4d96e_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e616c361:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1e616c3c7:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1e6169528:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1e61694c3:;
	};
}



inline jule::Slice<jule::U8> _1e41196ea_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1e4109ad6_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1e4123380_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1e41196ea_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1e413c652_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1e413ac49_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1e413ac49_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1e410a301_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1e6177e93;
			};
			_11213_bytes=jule::append(_11213_bytes,_1e4123380_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1e6177e93;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1e6177e93:;
	}
	_iter_end_1e6177e93:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1e413b909_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1e413c652_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1e3406147_parameter_uses_generics(jule::Ptr<_1e3400163_Param>& _39329_p, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>& _39341_generics) {
	if (_1e3400790_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1e40a7bd8_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1e4095775_TypeSymbol> _1e3408633_build_type(jule::Ptr<_1e3335807_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_1e406736d_Value> _1e340891e_build_expr(jule::Ptr<_1e3339d28_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e3408bb6_build_type_alias(jule::Ptr<_1e334bb70_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_1e3408633_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_1e3325ee0_Field> _1e3408ed5_build_field(jule::Ptr<_1e3350316_FieldDecl> _12320_decl) {
	return jule::new_ptr<_1e3325ee0_Field>(_1e3325ee0_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_1e3408633_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1e3325ee0_Field>> _1e340927c_build_fields(jule::Slice<jule::Ptr<_1e3350316_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_1e3325ee0_Field>> _13513_fields = jule::Slice<jule::Ptr<_1e3325ee0_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_1e63bc803:;
		if (it != expr.end()) {
			jule::Ptr<_1e3350316_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1e3408ed5_build_field(_13617_decl));;
			}
			_iter_next_1e63bc803:;
			++it;
			goto _iter_begin_1e63bc803;
		}
		_iter_end_1e63bc803:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1e3318840_Struct> _1e3409524_build_struct(jule::Ptr<_1e3350ab9_StructDecl> _14221_decl) {
	return jule::new_ptr<_1e3318840_Struct>(_1e3318840_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_1e340927c_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_1e3400163_Param> _1e34097bb_build_param(jule::Ptr<_1e3346010_ParamDecl> _15420_decl) {
	return jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_1e3408633_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1e3400163_Param>> _1e3409b40_build_params(jule::Slice<jule::Ptr<_1e3346010_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_1e3400163_Param>> _16613_params = jule::Slice<jule::Ptr<_1e3400163_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_1e63c053c:;
		if (it != expr.end()) {
			jule::Ptr<_1e3346010_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1e34097bb_build_param(_16717_decl));;
			}
			_iter_next_1e63c053c:;
			++it;
			goto _iter_begin_1e63c053c;
		}
		_iter_end_1e63c053c:;
	};
	return _16613_params;
}



inline jule::Ptr<_1e33ee9c0_RetType> _1e3409dd7_build_ret_type(jule::Ptr<_1e333891a_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1e33ee9c0_RetType>(_1e33ee9c0_RetType{._field_kind=_1e3408633_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_1e34019a0_Fn> _1e340a17e_build_fn(jule::Ptr<_1e3347330_FnDecl> _18317_decl) {
	return jule::new_ptr<_1e34019a0_Fn>(_1e34019a0_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_1e3409dd7_build_ret_type(_18317_decl.get()._field_result), ._field_params=_1e3409b40_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1e34019a0_Fn>> _1e340a426_build_methods(jule::Slice<jule::Ptr<_1e3347330_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_1e34019a0_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1e34019a0_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_1e63c40e0:;
		if (it != expr.end()) {
			jule::Ptr<_1e3347330_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1e340a17e_build_fn(_20317_decl));;
			}
			_iter_next_1e63c40e0:;
			++it;
			goto _iter_begin_1e63c40e0;
		}
		_iter_end_1e63c40e0:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1e374ee30_Trait> _1e340a6bd_build_trait(jule::Ptr<_1e33511c4_TraitDecl> _20920_decl) {
	return jule::new_ptr<_1e374ee30_Trait>(_1e374ee30_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_1e340a426_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_1e35972d8_EnumItem> _1e340a965_build_enum_item(jule::Ptr<_1e334d4ce_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_1e35972d8_EnumItem>(_1e35972d8_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_1e340891e_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1e35972d8_EnumItem>> _1e340ac0c_build_enum_items(jule::Slice<jule::Ptr<_1e334d4ce_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_1e35972d8_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1e35972d8_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_1e63c66db:;
		if (it != expr.end()) {
			jule::Ptr<_1e334d4ce_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1e340a965_build_enum_item(_22817_decl));;
			}
			_iter_next_1e63c66db:;
			++it;
			goto _iter_begin_1e63c66db;
		}
		_iter_end_1e63c66db:;
	};
	return _22713_items;
}



inline jule::Ptr<_1e34189c8_Enum> _1e340aea4_build_enum(jule::Ptr<_1e334e007_EnumDecl> _23419_decl) {
	return jule::new_ptr<_1e34189c8_Enum>(_1e34189c8_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_1e3408633_build_type(_23419_decl.get()._field_kind), ._field_items=_1e340ac0c_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_1e3584902_TypeEnumItem> _1e340b405_build_type_enum_item(jule::Ptr<_1e334ea0d_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_1e3584902_TypeEnumItem>(_1e3584902_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_1e3408633_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>> _1e340b69c_build_type_enum_items(jule::Slice<jule::Ptr<_1e334ea0d_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1e3584902_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_1e63c9007:;
		if (it != expr.end()) {
			jule::Ptr<_1e334ea0d_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1e340b405_build_type_enum_item(_25417_decl));;
			}
			_iter_next_1e63c9007:;
			++it;
			goto _iter_begin_1e63c9007;
		}
		_iter_end_1e63c9007:;
	};
	return _25313_items;
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e340b944_build_type_enum(jule::Ptr<_1e3350118_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_1e37eea6d_TypeEnum>(_1e37eea6d_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_1e340b69c_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_1e401a92b_Var> _1e340bbdb_build_var(jule::Ptr<_1e334830e_VarDecl> _26918_decl) {
	return jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_1e3408633_build_type(_26918_decl.get()._field_kind), ._field_value=_1e340891e_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__1e3407203_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1e401a92b_Var>> _1e340be83_build_vars(jule::Slice<jule::Ptr<_1e334830e_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_1e401a92b_Var>> _28713_vars = jule::Slice<jule::Ptr<_1e401a92b_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_1e63cc307:;
		if (it != expr.end()) {
			jule::Ptr<_1e334830e_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1e340bbdb_build_var(_28817_decl));;
			}
			_iter_next_1e63cc307:;
			++it;
			goto _iter_begin_1e63cc307;
		}
		_iter_end_1e63cc307:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1e35092a0_Impl> _1e340c22a_build_impl(jule::Ptr<_1e33517ce_Impl> _29419_decl) {
	return jule::new_ptr<_1e35092a0_Impl>(_1e35092a0_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_1e340a426_build_methods(_29419_decl.get()._field_methods), ._field_statics=_1e340be83_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3e66723_new_scope_checker_base(jule::Ptr<_1e400067a_Sema>& _5932_s, jule::Ptr<_1e3404651_FnIns> _5946_owner) {
	return jule::new_ptr<_1e3ed06d2_ScopeChecker>(_1e3ed06d2_ScopeChecker{._field_s=_5932_s, ._field_owner=_5946_owner, ._field_table=jule::new_ptr<_1e4061466_SymbolTable>(), });
}



inline jule::Ptr<_1e3ed06d2_ScopeChecker> _1e3e682d5_new_scope_checker(jule::Ptr<_1e400067a_Sema>& _6727_s, jule::Ptr<_1e3404651_FnIns> _6741_owner) {
	jule::Ptr<_1e3ed06d2_ScopeChecker> _6813_base = _1e3e66723_new_scope_checker_base(_6727_s,_6741_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e3eceaee_ScopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e3ececdb_ScopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1e3eceaee_ScopeLabel> _1e3e7c629_find_label_parent(jule::Str _7722_ident, jule::Ptr<_1e3ed06d2_ScopeChecker> _7738_scope) {
	jule::Ptr<_1e3eceaee_ScopeLabel> _7813_label = _1e3ed4175_find_label_scope(_7738_scope, _7722_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7738_scope.get()._field_parent == nullptr) || (_7738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7738_scope=_7738_scope.get()._field_parent;
			_7813_label=_1e3ed4175_find_label_scope(_7738_scope, _7722_ident);
		}
	_iter_next_1e643ac5b:;
	}
	_iter_end_1e643ac5b:;;
	return _7813_label;
}



inline jule::Bool _1e3e97732_model_is_goto_scope(jule::Any _9124_model, jule::Ptr<_1e3e547aa_Scope>& _9137_sc) {
	{
		auto &_match_expr{ _9124_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
			_case_begin_1e643cb5e:;
			{
				jule::Ptr<_1e33ea1b3_FnCallExprModel> _9413_fcem = _9124_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_except == _9137_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e643cbd6:;
			{
				jule::Ptr<_1e40662e5_Data> _9913_d = _9124_model.operator jule::Ptr<_1e40662e5_Data>();;
				return _1e3e97732_model_is_goto_scope(jule::Any(_9913_d.get()._field_model),_9137_sc);
			}
		}
		_match_end_1e643ca4e:;
	};
	return false;
}



inline jule::Bool _1e3e9957a_stmt_is_goto_scope(jule::Any& _10524_stmt, jule::Ptr<_1e3e547aa_Scope>& _10537_sc) {
	{
		auto &_match_expr{ _10524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e3e547aa_Scope>>()) {
			_case_begin_1e643d08d:;
			{
				return (_10524_stmt.operator jule::Ptr<_1e3e547aa_Scope>() == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccbda_InfIter>>()) {
			_case_begin_1e643d104:;
			{
				return (_10524_stmt.operator jule::Ptr<_1e3eccbda_InfIter>().get()._field_scope == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecd0b4_RangeIter>>()) {
			_case_begin_1e643d16a:;
			{
				jule::Ptr<_1e3ecd0b4_RangeIter> _11213_it = _10524_stmt.operator jule::Ptr<_1e3ecd0b4_RangeIter>();;
				return ((_11213_it.get()._field_scope == _10537_sc) || _1e3e97732_model_is_goto_scope(jule::Any(_11213_it.get()._field_expr.get()._field_model),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3eccdc7_WhileIter>>()) {
			_case_begin_1e6440018:;
			{
				jule::Ptr<_1e3eccdc7_WhileIter> _11513_it = _10524_stmt.operator jule::Ptr<_1e3eccdc7_WhileIter>();;
				return (((_11513_it.get()._field_scope == _10537_sc) || _1e3e97732_model_is_goto_scope(jule::Any(_11513_it.get()._field_expr),_10537_sc)) || _1e3e97732_model_is_goto_scope(jule::Any(_11513_it.get()._field_next),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ece11a_Match>>()) {
			_case_begin_1e6440090:;
			{
				jule::Ptr<_1e3ece11a_Match> _12013_m = _10524_stmt.operator jule::Ptr<_1e3ece11a_Match>();;
				{
					auto &expr = _12013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1e6443aee:;
					if (it != expr.end()) {
						jule::Ptr<_1e3ece538_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_scope == _10537_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1e6444b33:;
								if (it != expr.end()) {
									jule::Ptr<_1e40662e5_Data> &_12520_expr = *it;
									{
										if (_1e3e97732_model_is_goto_scope(jule::Any(_12520_expr.get()._field_model),_10537_sc)) {
											return true;
										};
									}
									_iter_next_1e6444b33:;
									++it;
									goto _iter_begin_1e6444b33;
								}
								_iter_end_1e6444b33:;
							};
						}
						_iter_next_1e6443aee:;
						++it;
						goto _iter_begin_1e6443aee;
					}
					_iter_end_1e6443aee:;
				};
				return ((_12013_m.get()._field_default != nullptr) && (_12013_m.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3ecc9ed_Conditional>>()) {
			_case_begin_1e6440117:;
			{
				jule::Ptr<_1e3ecc9ed_Conditional> _13313_c = _10524_stmt.operator jule::Ptr<_1e3ecc9ed_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1e64461a6:;
					if (it != expr.end()) {
						jule::Ptr<_1e3eb7ea0_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_scope == _10537_sc) || _1e3e97732_model_is_goto_scope(jule::Any(_13416_elif.get()._field_expr),_10537_sc))) {
								return true;
							};
						}
						_iter_next_1e64461a6:;
						++it;
						goto _iter_begin_1e64461a6;
					}
					_iter_end_1e64461a6:;
				};
				return ((_13313_c.get()._field_default != nullptr) && (_13313_c.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e644018e:;
			{
				jule::Ptr<_1e40662e5_Data> _14113_d = _10524_stmt.operator jule::Ptr<_1e40662e5_Data>();;
				return _1e3e97732_model_is_goto_scope(jule::Any(_14113_d.get()._field_model),_10537_sc);
			}
		}
		else {
			_case_begin_1e643ce8e:;
			{
				return false;
			}
		}
		_match_end_1e643e798:;
	};
}



inline jule::I64 _1e3e9a768_count_match_type(jule::Ptr<_1e3ece11a_Match>& _14822_m, jule::Ptr<_1e4091661_TypeKind>& _14834_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1e4091a18_to_str(_14834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1e6449242:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ece538_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1e6449242;
				};
				{
					auto &expr = _15212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1e6449ad3:;
					if (it != expr.end()) {
						jule::Ptr<_1e40662e5_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1e6449242;
							};
							if ((_1509_kind == _1e4091a18_to_str(_15716_expr.get()._field_model.operator jule::Ptr<_1e4091661_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1e6449ad3:;
						++it;
						goto _iter_begin_1e6449ad3;
					}
					_iter_end_1e6449ad3:;
				};
			}
			_iter_next_1e6449242:;
			++it;
			goto _iter_begin_1e6449242;
		}
		_iter_end_1e6449242:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1e40662e5_Data>> _1e3e9aeb6_get_datas_from_tuple_data(jule::Ptr<_1e40662e5_Data>& _17235_d) {
	if ((_1e40953bd_tup(_17235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e33ebdda_TupleExprModel>>()) {
				_case_begin_1e644db09:;
				{
					return _17235_d.get()._field_model.operator jule::Ptr<_1e33ebdda_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1e644b72d:;
				{
					jule::Ptr<_1e409aa99_Tuple> _17821_t = _1e40953bd_tup(_17235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1e40662e5_Data>> _17921_r = jule::Slice<jule::Ptr<_1e40662e5_Data>>::alloc(0LL,_17821_t.get()._field_types.len());;
					{
						auto &expr = _17821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1e644c9e8:;
						if (it != expr.end()) {
							jule::Ptr<_1e4091661_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=_18025_kind, ._field_mutable=true, }));;
							}
							_iter_next_1e644c9e8:;
							++it;
							goto _iter_begin_1e644c9e8;
						}
						_iter_end_1e644c9e8:;
					};
					return _17921_r;
				}
			}
			_match_end_1e644b5a7:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e40662e5_Data>>::make({_17235_d});
	};
}



inline jule::Slice<jule::Any> _1e3e9dc99_get_expr_models(jule::Any& _19325_m) {
	{
		auto &_match_expr{ _19325_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e333a9a5_TupleExpr>>()) {
			_case_begin_1e644d5ed:;
			{
				jule::Ptr<_1e333a9a5_TupleExpr> _19617_tup = _19325_m.operator jule::Ptr<_1e333a9a5_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_expr.len());;
				{
					auto &expr = _19617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1e64507dc:;
					if (it != expr.end()) {
						jule::Ptr<_1e3339d28_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_kind);;
						}
						_iter_next_1e64507dc:;
						++it;
						goto _iter_begin_1e64507dc;
					}
					_iter_end_1e64507dc:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1e644e346:;
			{
				return jule::Slice<jule::Any>::make({_19325_m});
			}
		}
		_match_end_1e644e258:;
	};
}



inline jule::Bool _1e3e9e4e7_check_mut(jule::Ptr<_1e400067a_Sema>& _20719_s, jule::Ptr<_1e40662e5_Data>& _20730_left, jule::Ptr<_1e40662e5_Data> _20747_right, jule::Ptr<_1e1c31ee6_Token> _20761_op) {
	jule::Bool _20775_ok = jule::Bool();
	{
		
		if ((!(_20730_left.get()._field_mutable))) {
			_case_begin_1e645206e:;
			{
				_1e400333c_push_err(_20719_s.ptr(), _20761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else if ((((_20747_right != nullptr) && (!(_20747_right.get()._field_mutable))) && _1e4092a19_mutable(_20747_right.get()._field_kind.ptr()))) {
			_case_begin_1e645217e:;
			{
				if (((_20761_op.get()._field_kind != jule::Str("=", 1)) && (_1e4094b81_strct(_20747_right.get()._field_kind.ptr()) != nullptr))) {
					_20775_ok = true;
					return _20775_ok;
				};
				_1e400333c_push_err(_20719_s.ptr(), _20761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_20747_right.get()._field_kind.ptr()))}));
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else {
			_case_begin_1e6451942:;
			{
				_20775_ok = true;
				return _20775_ok;
			}
		}
		_match_end_1e6451007:;
	};
}



inline jule::Bool _1e3ea6ee4_check_assign(jule::Ptr<_1e400067a_Sema>& _22622_s, jule::Ptr<_1e40662e5_Data>& _22637_left, jule::Ptr<_1e40662e5_Data> _22654_right, jule::Ptr<_1e1c31ee6_Token> _22668_op) {
	jule::Bool _22682_ok = jule::Bool();
	jule::Ptr<_1e3404651_FnIns> _2279_f = _1e409491c_fnc(_22637_left.get()._field_kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_decl != nullptr)) && _2279_f.get()._field_decl.get()._field_global)) {
		_1e400333c_push_err(_22622_s.ptr(), _22668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22682_ok = false;
		return _22682_ok;
	};
	{
		
		if (_1e4066ba8_is_const(_22637_left.ptr())) {
			_case_begin_1e64570a7:;
			{
				_1e400333c_push_err(_22622_s.ptr(), _22668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1e400365b_push_suggestion(_22622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_22637_left.get()._field_lvalue))) {
			_case_begin_1e6457184:;
			{
				_1e400333c_push_err(_22622_s.ptr(), _22668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_1e3e9e4e7_check_mut(_22622_s,_22637_left,_22654_right,_22668_op)))) {
			_case_begin_1e645720b:;
			{
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else {
			_case_begin_1e6456958:;
			{
				_22682_ok = true;
				return _22682_ok;
			}
		}
		_match_end_1e6456804:;
	};
}



inline jule::Bool _1e3ea7a72_is_valid_ast_st_for_next_st(jule::Any& _24837_n) {
	{
		auto &_match_expr{ _24837_n };
		
		if (_match_expr.type_is<jule::Ptr<_1e3344294_AssignSt>>()) {
			_case_begin_1e64572b6:;
			{
				return (!(_24837_n.operator jule::Ptr<_1e3344294_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e3339d28_Expr>>()) {
			_case_begin_1e645732c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e6458c24:;
			{
				return false;
			}
		}
		_match_end_1e6459076:;
	};
}



inline jule::Bool _1e3ea8930_is_valid_st_for_next_st(jule::Any& _25929_st) {
	{
		auto &_match_expr{ _25929_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e3ecda54_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e3ecdc41_Assign>>() || _match_expr.type_is<jule::Ptr<_1e3ecde2d_MultiAssign>>()) {
			_case_begin_1e6459c69:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e6459cd0:;
			{
				{
					auto &_match_expr{ _25929_st.operator jule::Ptr<_1e40662e5_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ea1b3_FnCallExprModel>>()) {
						_case_begin_1e645b1bb:;
						{
							return true;
						}
					}
					else {
						_case_begin_1e645b155:;
						{
							return false;
						}
					}
					_match_end_1e645b0ab:;
				};
			}
		}
		else {
			_case_begin_1e645975d:;
			{
				return false;
			}
		}
		_match_end_1e6459670:;
	};
}



inline jule::Bool _1e3e9c913_stmt_is_def(jule::Any& _27717_st) {
	{
		auto &_match_expr{ _27717_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e645b71b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e645a62c:;
			{
				return false;
			}
		}
		_match_end_1e645bab2:;
	};
}



inline jule::Ptr<_1e401a92b_Var> _1e3ee50ba_find_var_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1e65bd42c:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e401a92b_Var> _4817_v = _1e4062148_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1e65bd42c:;
			++it;
			goto _iter_begin_1e65bd42c;
		}
		_iter_end_1e65bd42c:;
	};
	return nullptr;
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e3ee551b_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1e65bea05:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1e4090929_TypeAlias> _6017_ta = _1e4062500_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1e65bea05:;
			++it;
			goto _iter_begin_1e65bea05;
		}
		_iter_end_1e65bea05:;
	};
	return nullptr;
}



inline jule::Ptr<_1e3318840_Struct> _1e3ee5917_find_struct_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1e65c10bc:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e3318840_Struct> _7217_s = _1e40628a7_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1e65c10bc:;
			++it;
			goto _iter_begin_1e65c10bc;
		}
		_iter_end_1e65c10bc:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34019a0_Fn> _1e3ee5d79_find_fn_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1e65c2684:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e34019a0_Fn> _8417_f = _1e4062c5e_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1e65c2684:;
			++it;
			goto _iter_begin_1e65c2684;
		}
		_iter_end_1e65c2684:;
	};
	return nullptr;
}



inline jule::Ptr<_1e374ee30_Trait> _1e3ee6187_find_trait_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1e65c2c7d:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e374ee30_Trait> _9617_t = _1e406306c_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1e65c2c7d:;
			++it;
			goto _iter_begin_1e65c2c7d;
		}
		_iter_end_1e65c2c7d:;
	};
	return nullptr;
}



inline jule::Ptr<_1e34189c8_Enum> _1e3ee64c8_find_enum_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1e65c4158:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e34189c8_Enum> _10817_e = _1e406337a_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1e65c4158:;
			++it;
			goto _iter_begin_1e65c4158;
		}
		_iter_end_1e65c4158:;
	};
	return nullptr;
}



inline jule::Ptr<_1e37eea6d_TypeEnum> _1e3ee683b_find_type_enum_in_package(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_1e65c5544:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e37eea6d_TypeEnum> _12017_e = _1e4063688_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1e65c5544:;
			++it;
			goto _iter_begin_1e65c5544;
		}
		_iter_end_1e65c5544:;
	};
	return nullptr;
}



inline jule::Bool _1e3eeca62_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _1e17de125_has_prefix(_35019_f,_1e189089c_join(jule::Slice<jule::Str>::make({_1e1927934_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _1e3eed7bb_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e401a92b_Var>>()) {
			_case_begin_1e65d790d:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e65d7974:;
			{
				jule::Ptr<_1e33eb44a_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>();;
				return _1e3eed7bb_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>>()) {
			_case_begin_1e65d79da:;
			{
				jule::Ptr<_1e33eb02c_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1e33eb02c_TraitSubIdentExprModel>();;
				return _1e3eed7bb_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9723_UnaryExprModel>>()) {
			_case_begin_1e65d7b72:;
			{
				jule::Ptr<_1e33e9723_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1e33e9723_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1e4093c07_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1e4093993_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1e3eed7bb_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1e65d7204:;
			{
				return false;
			}
		}
		_match_end_1e65d719e:;
	};
}



inline _1e1905060_Log _1e3eedc61_compiler_err(jule::Ptr<_1e1c31ee6_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_1e1905060_Log _4213_log = _1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_1e19054a0_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_1e1c3855d_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1e3eee0a2_imp_is_lookupable(jule::Ptr<_1e3ee752e_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1e3ee9e05_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1e3eee39e_append_ret_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>& _6825_dest, jule::Ptr<_1e3404651_FnIns>& _6844_f) {
	if ((_1e3401e12_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e4091661_TypeKind>> _7313_types = _1e3405135_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1e65e10dc:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _7417_ident = *it;
			{
				if ((_1e1c3478a_is_ignore_ident(_7417_ident.get()._field_kind) || _1e1c34a32_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1e65e10dc;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_data=jule::new_ptr<_1e40662e5_Data>()}), }));;
			}
			_iter_next_1e65e10dc:;
			++it;
			_7410_i++;
			goto _iter_begin_1e65e10dc;
		}
		_iter_end_1e65e10dc:;
	};
}



inline void _1e3eee657_append_param_vars(jule::Slice<jule::Ptr<_1e401a92b_Var>>& _9427_dest, jule::Ptr<_1e3404651_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1e65e2a5b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3403782_ParamIns> _9917_p = *it;
			{
				if ((_1e1c3478a_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _1e1c34a32_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1e65e2a5b;
				};
				jule::Ptr<_1e401a92b_Var> _10417_v = jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(), ._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_data=jule::new_ptr<_1e40662e5_Data>()}), });;
				{
					
					if (_1e3400790_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1e65e67c9:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1e4091232_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1e3400a04_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1e3400a04_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e4099647_Sptr>(_1e4099647_Sptr{._field_elem=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1e65e64bb:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e409a0a4_Slc>(_1e409a0a4_Slc{._field_elem=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_1e65e4486:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1e65e6367:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1e65e2a5b:;
			++it;
			goto _iter_begin_1e65e2a5b;
		}
		_iter_end_1e65e2a5b:;
	};
}



inline void _1e3eee932_append_generic_type_aliases(jule::Slice<jule::Ptr<_1e4090929_TypeAlias>>& _15437_dest, jule::Ptr<_1e3404651_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e65ebb64:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1e4091661_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_1e3342b00_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_16417_g}), }));;
			}
			_iter_next_1e65ebb64:;
			++it;
			_16410_i++;
			goto _iter_begin_1e65ebb64;
		}
		_iter_end_1e65ebb64:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1e3352093_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1e65ed319:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1e4091661_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_1e3342b00_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_18121_decl.get()._field_token, ._field_ident=_18121_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=_18021_g}), }));;
				}
				_iter_next_1e65ed319:;
				++it;
				_18014_i++;
				goto _iter_begin_1e65ed319;
			}
			_iter_end_1e65ed319:;
		};
	};
}



inline jule::Ptr<_1e4061466_SymbolTable> _1e3eeec84_find_file(jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>& _19619_files, jule::Ptr<_1e1c37381_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1e65ec307:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1e65ec307:;
			++it;
			goto _iter_begin_1e65ec307;
		}
		_iter_end_1e65ec307:;
	};
	return nullptr;
}



inline void _1e40001e6_push_suggestion(_1e1905060_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1e19054a0_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1e404688b_trait_has_reference_receiver(jule::Ptr<_1e374ee30_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1e67e10bc:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1e67e10bc;
				};
				jule::Ptr<_1e3400163_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1e3400a04_is_ref(_3313_p.ptr()) && _1e3400790_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1e67e10bc:;
			++it;
			goto _iter_begin_1e67e10bc;
		}
		_iter_end_1e67e10bc:;
	};
	return false;
}



inline jule::Bool _1e4034060_float_assignable(jule::Str _4121_kind, jule::Ptr<_1e40662e5_Data>& _4133_d) {
	jule::Str _429_value = _1e3874cbe_fmt_float(static_cast<jule::F64>(_1e33e3387_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1e3ec1a25_check_bit_float(_429_value,static_cast<jule::I64>(_1e3ec0617_bitsize_of(_4121_kind)));
}



inline jule::Bool _1e4034192_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1e40662e5_Data>& _4631_d) {
	jule::F64 _479_min = _1e3ec6893_min(_4619_kind);;
	jule::F64 _489_max = _1e3ec6b7e_max(_4619_kind);;
	{
		
		if (_1e33e4ee3_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1e67e7854:;
			{
				jule::F64 _5113_x = _1e33e2b4a_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1e3e1ed5d_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1e33e47a6_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1e67e78ba:;
			{
				jule::F64 _5813_x = _1e33e3387_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1e33e4542_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1e67e7931:;
			{
				jule::F64 _6313_x = _1e33e3387_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1e67e7711:;
	};
	return false;
}



inline jule::Bool _1e4050aa4_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1e40662e5_Data>& _6933_d) {
	jule::F64 _709_max = _1e3ec6b7e_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1e403c662_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1e33e2199_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1e33e4ee3_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1e67eca79:;
			{
				jule::F64 _7713_x = _1e33e2b4a_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1e3e1ed5d_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1e33e47a6_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1e67ecae0:;
			{
				jule::F64 _8713_x = _1e33e3387_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1e33e4542_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1e67ecb56:;
			{
				jule::F64 _9213_x = _1e33e3387_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1e67ebe74:;
	};
	return false;
}



inline jule::Bool _1e4050bd6_int_assignable(jule::Str _9819_kind, jule::Ptr<_1e40662e5_Data>& _9831_d) {
	{
		
		if (_1e3ecb9ca_is_sig_int(_9819_kind)) {
			_case_begin_1e68025d9:;
			{
				return _1e4034192_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1e3ecbcb6_is_unsig_int(_9819_kind)) {
			_case_begin_1e6801e57:;
			{
				return _1e4050aa4_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1e67ed294:;
			{
				return false;
			}
		}
		_match_end_1e67ed1b7:;
	};
}



inline jule::Ptr<_1e330242d_Directive> _1e408b1e9_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _421124_directives, jule::Str _421155_d) {
	{
		auto &expr = _421124_directives;
		auto it = expr.begin();
		_iter_begin_1e68e3301:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _421217_dr = *it;
			{
				if ((_421217_dr.get()._field_tag.get()._field_kind == _421155_d)) {
					return _421217_dr;
				};
			}
			_iter_next_1e68e3301:;
			++it;
			goto _iter_begin_1e68e3301;
		}
		_iter_end_1e68e3301:;
	};
	return nullptr;
}



inline jule::Any _1e408b57e_find_builtins_import(jule::Str _422025_ident, jule::Ptr<_1e3ee752e_ImportInfo> _422037_imp) {
	return jule::Any(_1e4119ca0_find_package_builtin_def(_422037_imp.get()._field_link_path,_422025_ident));
}



inline void _1e408b78d_fit_bitsize(jule::Ptr<_1e40662e5_Data>& _422721_d) {
	jule::Ptr<_1e4096138_Prim> _422813_prim = _1e409372e_prim(_422721_d.get()._field_kind.ptr());;
	jule::I64 _42299_z = _1e3ec0617_bitsize_of(_1e409649b_to_str(_422813_prim.ptr()));;
	if ((_42299_z == 64LL)) {
		return;;
	};
	jule::I64 _423413_k = 0LL;;
	{
		
		if (_1e33e4542_is_i64(_422721_d.get()._field_constant.ptr())) {
			_case_begin_1e68e61b1:;
			{
				_423413_k=static_cast<jule::I64>(_1e3ec2064_bitsize_of_int(static_cast<jule::I64>(_1e33e2199_read_i64(_422721_d.get()._field_constant.ptr()))));
				if ((_423413_k > _42299_z)) {
					_422813_prim.get()._field_kind=_1e3ec0936_int_from_bits(_423413_k);
				};
			}
		}
		else if (_1e33e47a6_is_u64(_422721_d.get()._field_constant.ptr())) {
			_case_begin_1e68e6238:;
			{
				_423413_k=static_cast<jule::I64>(_1e3ec230b_bitsize_of_uint(static_cast<jule::U64>(_1e33e240d_read_u64(_422721_d.get()._field_constant.ptr()))));
				if ((_423413_k > _42299_z)) {
					_422813_prim.get()._field_kind=_1e3ec0bcd_uint_from_bits(_423413_k);
				};
			}
		}
		else if (_1e33e4ee3_is_f64(_422721_d.get()._field_constant.ptr())) {
			_case_begin_1e68e62b0:;
			{
				_423413_k=static_cast<jule::I64>(_1e3ec1cbc_bitsize_of_float(static_cast<jule::F64>(_1e33e2b4a_read_f64(_422721_d.get()._field_constant.ptr()))));
				if ((_423413_k > _42299_z)) {
					_422813_prim.get()._field_kind=_1e3ec0e75_float_from_bits(_423413_k);
				};
			}
		}
		_match_end_1e68e60e5:;
	};
}



inline void _1e408ba8a_make_struct_lit_alloc(jule::Ptr<_1e40662e5_Data>& _425431_d, jule::Ptr<_1e33e9aec_StructLitExprModel>& _425446_lit) {
	_425431_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e4099647_Sptr>(_1e4099647_Sptr{._field_elem=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_425446_lit.get()._field_strct, 0)})}), 7)});
	_425431_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9cd9_AllocStructLitExprModel>(_1e33e9cd9_AllocStructLitExprModel{._field_lit=_425446_lit}));
}



inline jule::Ptr<_1e401a92b_Var> _1e408bdcb_build_error_var(jule::Ptr<_1e3e547aa_Scope>& _426525_s, jule::Ptr<_1e333e1b2_FnCallExpr>& _426541_fc) {
	return jule::new_ptr<_1e401a92b_Var>(_1e401a92b_Var{._field_scope=_426525_s, ._field_token=_426541_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_1e406736d_Value>(_1e406736d_Value{._field_data=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{})}), });
}



inline jule::Any _1e408c21c_find_builtins_sema(jule::Str _428423_ident, jule::Ptr<_1e400067a_Sema> _428439_s) {
	{
		auto &expr = _428439_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1e68ebb12:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _428517_imp = *it;
			{
				if ((_428517_imp.get()._field_import_all || _1e3ee9e05_exist_ident(_428517_imp.ptr(), _428423_ident))) {
					jule::Any _428721_def = _1e408b57e_find_builtins_import(_428423_ident,_428517_imp);;
					if ((_428721_def != nullptr)) {
						return jule::Any(_428721_def);
					};
				};
			}
			_iter_next_1e68ebb12:;
			++it;
			goto _iter_begin_1e68ebb12;
		}
		_iter_end_1e68ebb12:;
	};
	jule::Str _429513_ppath = _1e1c37c77_dir(_428439_s.get()._field_file.get()._field_file.ptr());;
	if (_1e17de125_has_prefix(_429513_ppath,_1e1927934_PATH_STDLIB)) {
		(_429513_ppath).mut_slice(_1e1927934_PATH_STDLIB.len());;
		_429513_ppath=(jule::Str("std", 3) + _1e188de1c_replace(_429513_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1e4119ca0_find_package_builtin_def(_429513_ppath,_428423_ident));
	};
	return nullptr;
}



inline jule::Bool _1e408c4b4_is_ok_for_shifting(jule::Ptr<_1e40662e5_Data>& _430928_d) {
	if (_1e4066ba8_is_const(_430928_d.ptr())) {
		{
			
			if (_1e33e4542_is_i64(_430928_d.get()._field_constant.ptr())) {
				_case_begin_1e690096d:;
				{
					return (_1e33e2199_read_i64(_430928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1e33e47a6_is_u64(_430928_d.get()._field_constant.ptr())) {
				_case_begin_1e6900231:;
				{
					return true;
				}
			}
			else if (_1e33e4ee3_is_f64(_430928_d.get()._field_constant.ptr())) {
				_case_begin_1e6900297:;
				{
					return (_1e33e2b4a_read_f64(_430928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1e69001ba:;
				{
					return false;
				}
			}
			_match_end_1e69000dd:;
		};
	};
	jule::Ptr<_1e4096138_Prim> _43229_prim = _1e409372e_prim(_430928_d.get()._field_kind.ptr());;
	return ((_43229_prim != nullptr) && _1e3ecc05d_is_int(_1e409649b_to_str(_43229_prim.ptr())));
}



inline jule::Bool _1e408c86b_is_instanced_struct(jule::Ptr<_1e3352093_StructIns> _432624_s) {
	return (_432624_s.get()._field_decl.get()._field_generics.len() == _432624_s.get()._field_generics.len());
}



inline jule::Bool _1e408cb46_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e40662e5_Data>& _433042_d) {
	if (_1e4066ba8_is_const(_433042_d.ptr())) {
		return _1e4050bd6_int_assignable(jule::Str("int", 3),_433042_d);
	};
	_1e4051d2a_TypeCompatibilityChecker _433413_tcc = _1e4051d2a_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_433042_d.get()._field_kind, };;
	return _1e4053414_check(&_433413_tcc);
}



inline void _1e408cd77_apply_cast_kind_model(jule::Ptr<_1e40662e5_Data>& _434331_d, jule::Ptr<_1e4091661_TypeKind>& _434346_t) {
	_434331_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33e9ec6_CastingExprModel>(_1e33e9ec6_CastingExprModel{._field_expr=_434331_d.get()._field_model, ._field_kind=_434346_t, ._field_expr_kind=_434331_d.get()._field_kind}));
}



inline void _1e408d130_apply_cast_kind(jule::Ptr<_1e40662e5_Data>& _435125_d, jule::Ptr<_1e4091661_TypeKind>& _435140_t) {
	_1e408cd77_apply_cast_kind_model(_435125_d,_435140_t);
	_435125_d.get()._field_kind=_435140_t;
}



inline jule::Ptr<_1e40662e5_Data> _1e408d32d_build_void_data(void) {
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1e408d5e7_check_data_for_integer_indexing(jule::Ptr<_1e40662e5_Data>& _436741_d) {
	jule::Str _436753_err_fmt = jule::Str();
	if ((_436741_d == nullptr)) {
		_436753_err_fmt = jule::Str();
		return _436753_err_fmt;
	};
	{
		
		if ((_1e409372e_prim(_436741_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1e6906820:;
			{
				_436753_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436753_err_fmt;
			}
		}
		else if ((!(_1e3ecc05d_is_int(_1e409649b_to_str(_1e409372e_prim(_436741_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1e6906886:;
			{
				_436753_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _436753_err_fmt;
			}
		}
		else if (_1e4066ba8_is_const(_436741_d.ptr())) {
			_case_begin_1e69068ec:;
			{
				if ((_1e33e3387_as_f64(_436741_d.get()._field_constant.ptr()) < 0LL)) {
					_436753_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _436753_err_fmt;
				};
			}
		}
		else if ((_1e409372e_prim(_436741_d.get()._field_kind.ptr()) == nullptr) || _1e4066ba8_is_const(_436741_d.ptr()) || (_1e3ec0370_real_kind_of(_1e409649b_to_str(_1e409372e_prim(_436741_d.get()._field_kind.ptr()).ptr())) != _1e3ec0370_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1e6906963:;
			{
				jule::Ptr<_1e4091661_TypeKind> _438417_t = jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)});;
				_1e408d130_apply_cast_kind(_436741_d,_438417_t);
			}
		}
		_match_end_1e6906ba5:;
	};
	_436753_err_fmt = jule::Str();
	return _436753_err_fmt;
}



inline void _1e408d8d3_apply_cast_model_by_enum(jule::Ptr<_1e40662e5_Data>& _439334_d, jule::Ptr<_1e34189c8_Enum> _439348_e) {
	if ((_439348_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1e4096138_Prim> _43979_p = _1e409372e_prim(_439348_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1e40990e7_is_str(_43979_p.ptr())) {
		return;;
	};
	_1e408cd77_apply_cast_kind_model(_439334_d,_439348_e.get()._field_kind.get()._field_kind);
}



inline void _1e408db9c_cast_const_by_type(jule::Str& _440424_t, jule::Ptr<_1e40662e5_Data>& _440437_d) {
	{
		
		if (_1e3ecb9ca_is_sig_int(_440424_t)) {
			_case_begin_1e690c705:;
			{
				{
					auto _match_expr{ _1e3ec0617_bitsize_of(_1e3ec0370_real_kind_of(_440424_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e690d42b:;
						{
							_1e33e360c_set_i64(_440437_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e33e2dae_as_i64(_440437_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e690d492:;
						{
							_1e33e360c_set_i64(_440437_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e33e2dae_as_i64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1e690d508:;
						{
							_1e33e360c_set_i64(_440437_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e33e2dae_as_i64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1e690d56e:;
						{
							_1e33e360c_set_i64(_440437_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e33e2dae_as_i64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1e690c98b:;
				};
			}
		}
		else if (_1e3ecbcb6_is_unsig_int(_440424_t)) {
			_case_begin_1e690c77c:;
			{
				{
					auto _match_expr{ _1e3ec0617_bitsize_of(_1e3ec0370_real_kind_of(_440424_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e6911a5b:;
						{
							_1e33e3882_set_u64(_440437_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e33e3123_as_u64(_440437_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e6911ac2:;
						{
							_1e33e3882_set_u64(_440437_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e33e3123_as_u64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1e6911b38:;
						{
							_1e33e3882_set_u64(_440437_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e33e3123_as_u64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1e6911b9e:;
						{
							_1e33e3882_set_u64(_440437_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e33e3123_as_u64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1e6911099:;
				};
			}
		}
		else if (_1e3ecc37c_is_float(_440424_t)) {
			_case_begin_1e690c804:;
			{
				{
					auto _match_expr{ _1e3ec0617_bitsize_of(_1e3ec0370_real_kind_of(_440424_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e6914e05:;
						{
							_1e33e4102_set_f64(_440437_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e33e3387_as_f64(_440437_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e69151d0:;
						{
							_1e33e4102_set_f64(_440437_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e33e3387_as_f64(_440437_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1e6912b6c:;
				};
			}
		}
		_match_end_1e690c5c3:;
	};
}



inline void _1e408e1a8_update_model_to_generic_ins(jule::Ptr<_1e33ea1b3_FnCallExprModel>& _443837_m, jule::Ptr<_1e3404651_FnIns>& _443863_f) {
	{
		auto &_match_expr{ _443837_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e3404651_FnIns>>()) {
			_case_begin_1e6915631:;
			{
				_443837_m.get()._field_expr=static_cast<jule::Any>(_443863_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb44a_StructSubIdentExprModel>>()) {
			_case_begin_1e6915697:;
			{
				_443837_m.get()._field_expr.operator jule::Ptr<_1e33eb44a_StructSubIdentExprModel>().get()._field_method=_443863_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33eb637_StructStaticIdentExprModel>>()) {
			_case_begin_1e691570d:;
			{
				_443837_m.get()._field_expr.operator jule::Ptr<_1e33eb637_StructStaticIdentExprModel>().get()._field_method=_443863_f;
			}
		}
		_match_end_1e69161d1:;
	};
}



inline jule::Bool _1e408e41c_push_sub_ident_from_expr(jule::Any _444933_expr, jule::Ptr<_1e333651c_SubIdentTypeDecl>& _444954_t) {
	{
		auto &_match_expr{ _444933_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e333bd91_IdentExpr>>()) {
			_case_begin_1e6918711:;
			{
				jule::Ptr<_1e333bd91_IdentExpr> _445217_e = _444933_expr.operator jule::Ptr<_1e333bd91_IdentExpr>();;
				_444954_t.get()._field_idents = jule::alloc_for_append(_444954_t.get()._field_idents,1);_444954_t.get()._field_idents.__push(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_445217_e.get()._field_token, ._field_ident=_445217_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e333d634_SubIdentExpr>>()) {
			_case_begin_1e6918777:;
			{
				jule::Ptr<_1e333d634_SubIdentExpr> _445817_e = _444933_expr.operator jule::Ptr<_1e333d634_SubIdentExpr>();;
				if ((!(_1e408e41c_push_sub_ident_from_expr(_445817_e.get()._field_expr.get()._field_kind,_444954_t)))) {
					return false;
				};
				_444954_t.get()._field_idents = jule::alloc_for_append(_444954_t.get()._field_idents,1);_444954_t.get()._field_idents.__push(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_445817_e.get()._field_ident, ._field_ident=_445817_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_1e69177ed:;
			{
				return false;
			}
		}
		_match_end_1e6917798:;
	};
	return true;
}



inline jule::Bool _1e40a7bd8_kind_uses_generics(jule::Any& _153724_k, jule::Slice<jule::Ptr<_1e3342b00_GenericDecl>>& _153742_generics) {
	{
		auto &expr = _153742_generics;
		auto it = expr.begin();
		_iter_begin_1e6c2c371:;
		if (it != expr.end()) {
			jule::Ptr<_1e3342b00_GenericDecl> &_153812_g = *it;
			{
				if (static__1e40a77dc_exist(_153812_g.get()._field_ident,_153724_k)) {
					return true;
				};
			}
			_iter_next_1e6c2c371:;
			++it;
			goto _iter_begin_1e6c2c371;
		}
		_iter_end_1e6c2c371:;
	};
	return false;
}



inline jule::Bool _1e40a806d_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _154723_directives, jule::Str _154754_tag) {
	{
		auto &expr = _154723_directives;
		auto it = expr.begin();
		_iter_begin_1e6c2d4b5:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _154817_dr = *it;
			{
				if ((_154817_dr.get()._field_tag.get()._field_kind == _154754_tag)) {
					return true;
				};
			}
			_iter_next_1e6c2d4b5:;
			++it;
			goto _iter_begin_1e6c2d4b5;
		}
		_iter_end_1e6c2d4b5:;
	};
	return false;
}



inline jule::Bool _1e40a8315_can_get_ptr(jule::Ptr<_1e40662e5_Data>& _155621_d) {
	if (((!(_155621_d.get()._field_lvalue)) || _1e4066ba8_is_const(_155621_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1e409491c_fnc(_155621_d.get()._field_kind.ptr()) != nullptr) || (_1e4093e6b_enm(_155621_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1e6c30143:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e6c2e906:;
			{
				return true;
			}
		}
		_match_end_1e6c2e7e6:;
	};
}



inline jule::Bool _1e40a8634_is_valid_for_sptr_type(jule::Ptr<_1e4091661_TypeKind>& _157032_t) {
	jule::Ptr<_1e3352093_StructIns> _157113_s = _1e4094b81_strct(_157032_t.ptr());;
	if ((((_157113_s != nullptr) && (_157113_s.get()._field_decl != nullptr)) && _157113_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1e40a88cb_is_valid_for_ref(jule::Ptr<_1e4091661_TypeKind>& _157926_t) {
	return (_1e409491c_fnc(_157926_t.ptr()) == nullptr);
}



inline jule::Bool _1e40a8b95_is_builtin_str_convertable(jule::Ptr<_1e4091661_TypeKind>& _158236_t) {
	return (((!(_1e40927a5_void(_158236_t.ptr()))) && (_1e409491c_fnc(_158236_t.ptr()) == nullptr)) && (_1e40953bd_tup(_158236_t.ptr()) == nullptr));
}



inline jule::Str _1e40a8e3c_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _158631_tokens) {
	jule::Str _158713_s = _158631_tokens[0LL].get()._field_kind;;
	{
		auto expr = _158631_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1e6c33da0:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> &_158812_token = *it;
			{
				_158713_s+=jule::Str("::", 2);
				_158713_s+=_158812_token.get()._field_kind;
			}
			_iter_next_1e6c33da0:;
			++it;
			goto _iter_begin_1e6c33da0;
		}
		_iter_end_1e6c33da0:;
	};
	return _158713_s;
}



inline jule::Ptr<_1e4096138_Prim> _1e40a9305_build_prim_type(jule::Str _159520_kind) {
	return jule::new_ptr<_1e4096138_Prim>(_1e4096138_Prim{._field_kind=_159520_kind});
}



inline jule::Ptr<_1e3318840_Struct> _1e40a959c_get_struct_from_kind(jule::Ptr<_1e4091661_TypeKind> _160129_k) {
	{
		
		if ((_160129_k == nullptr)) {
			_case_begin_1e6c3518c:;
			{
				return nullptr;
			}
		}
		else if ((_1e4094b81_strct(_160129_k.ptr()) != nullptr)) {
			_case_begin_1e6c35203:;
			{
				return _1e4094b81_strct(_160129_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1e4093993_sptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1e6c35269:;
			{
				return _1e40a959c_get_struct_from_kind(_1e4093993_sptr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1e40946a8_slc(_160129_k.ptr()) != nullptr)) {
			_case_begin_1e6c352d0:;
			{
				return _1e40a959c_get_struct_from_kind(_1e40946a8_slc(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1e4094444_arr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1e6c35588:;
			{
				return _1e40a959c_get_struct_from_kind(_1e4094444_arr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1e4093c07_ptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1e6c355ee:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1e6c35126:;
			{
				return nullptr;
			}
		}
		_match_end_1e6c34598:;
	};
}



inline jule::Bool _1e40a9844_is_prim(jule::Str _162412_kind) {
	return ((((((((((((((((_162412_kind == jule::Str("i8", 2)) || (_162412_kind == jule::Str("i16", 3))) || (_162412_kind == jule::Str("i32", 3))) || (_162412_kind == jule::Str("i64", 3))) || (_162412_kind == jule::Str("u8", 2))) || (_162412_kind == jule::Str("u16", 3))) || (_162412_kind == jule::Str("u32", 3))) || (_162412_kind == jule::Str("u64", 3))) || (_162412_kind == jule::Str("f32", 3))) || (_162412_kind == jule::Str("f64", 3))) || (_162412_kind == jule::Str("int", 3))) || (_162412_kind == jule::Str("uint", 4))) || (_162412_kind == jule::Str("uintptr", 7))) || (_162412_kind == jule::Str("bool", 4))) || (_162412_kind == jule::Str("str", 3))) || (_162412_kind == jule::Str("any", 3)));
}



inline void _1e40a9aec_apply_implicit_cast(jule::Ptr<_1e4091661_TypeKind>& _164329_dest, jule::Ptr<_1e40662e5_Data>& _164351_d) {
	if (_1e4092541_is_nil(_164351_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e4096138_Prim> _16489_dest_prim = _1e409372e_prim(_164329_dest.ptr());;
	jule::Ptr<_1e4096138_Prim> _16499_prim = _1e409372e_prim(_164351_d.get()._field_kind.ptr());;
	if ((_16489_dest_prim != nullptr)) {
		if (_1e409935b_is_any(_16489_dest_prim.ptr())) {
			_1e408d130_apply_cast_kind(_164351_d,_164329_dest);
			return;;
		};
		if (((((((!(_1e40922cc_cpp_linked(_164351_d.get()._field_kind.ptr()))) && (!(_164351_d.get()._field_kind.get()._field_variadic))) && (!(_164351_d.get()._field_lvalue))) && (!(_1e4066ba8_is_const(_164351_d.ptr())))) && (_16499_prim != nullptr)) && _1e3ecc624_is_num(_16499_prim.get()._field_kind))) {
			_1e408d130_apply_cast_kind(_164351_d,_164329_dest);
		};
		return;;
	};
	if (((_1e4094de5_trt(_164329_dest.ptr()) != nullptr) && (_1e4094de5_trt(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1e408cd77_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
	if (((_1e40941d0_tenm(_164329_dest.ptr()) != nullptr) && (_1e40941d0_tenm(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1e408cd77_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1e4061466_SymbolTable>,jule::Slice<_1e1905060_Log>> _1e40ac9e0_build_symbols(jule::Ptr<_1e3301383_Ast>& _1523_ast, jule::Trait<_1e3ee4c35_Importer>& _1539_importer, jule::Ptr<_1e340c77a_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1e340c77a_SymbolBuilder> _1613_sb = jule::new_ptr<_1e340c77a_SymbolBuilder>(_1e340c77a_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1e34127c4_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1e3eea488_Package>,jule::Slice<_1e1905060_Log>> _1e40ace1e___analyze_package(jule::Slice<jule::Ptr<_1e3301383_Ast>>& _2927_files, jule::Trait<_1e3ee4c35_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1e4061466_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1e4061466_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1e6d365e0:;
		if (it != expr.end()) {
			jule::Ptr<_1e3301383_Ast> _3217_f = *it;
			{
				jule::Ptr<_1e4061466_SymbolTable> _3318_table;;
				jule::Slice<_1e1905060_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1e40ac9e0_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1e6d365e0:;
			++it;
			goto _iter_begin_1e6d365e0;
		}
		_iter_end_1e6d365e0:;
	};
	jule::Ptr<_1e400067a_Sema> _4013_sema = jule::new_ptr<_1e400067a_Sema>(_1e400067a_Sema{._field_flags=_2968_flags});;
	_1e401794a_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1e3eea488_Package> _4813_pkg = jule::new_ptr<_1e3eea488_Package>(_1e3eea488_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e3eea488_Package>,jule::Slice<_1e1905060_Log>> _1e40ad309_analyze_package(jule::Slice<jule::Ptr<_1e3301383_Ast>> _7228_files, jule::Trait<_1e3ee4c35_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e3eea488_Package> _7714_package;;
	jule::Slice<_1e1905060_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1e40ace1e___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1e3404651_FnIns> _1e40ba019_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1e6d3de22:;
			{
				static jule::Ptr<_1e3404651_FnIns> _2420_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e41187e8_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1e6d3de88:;
			{
				static jule::Ptr<_1e3404651_FnIns> _2720_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e40b59d7_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1e6d3e197:;
			{
				static jule::Ptr<_1e3404651_FnIns> _3020_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e412e26a_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1e6d3e20d:;
			{
				static jule::Ptr<_1e3404651_FnIns> _3320_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e40d22c8_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1e6d3e274:;
			{
				static jule::Ptr<_1e3404651_FnIns> _3620_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e40d240a_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1e6d3e2da:;
			{
				static jule::Ptr<_1e3404651_FnIns> _3920_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e40bce2e_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1e6d3e351:;
			{
				static jule::Ptr<_1e3404651_FnIns> _4220_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e40edec6_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1e6d3e3b7:;
			{
				static jule::Ptr<_1e3404651_FnIns> _4520_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414953d_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1e6d3e483:;
			{
				static jule::Ptr<_1e3404651_FnIns> _4820_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4149670_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1e6d3dc13:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d3d66e:;
	};
}



inline jule::Ptr<_1e4090929_TypeAlias> _1e40baa97_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1e6d44c2a:;
			{
				static jule::Ptr<_1e4090929_TypeAlias> _5820_t = jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1e6d44c91:;
			{
				static jule::Ptr<_1e4090929_TypeAlias> _6820_t = jule::new_ptr<_1e4090929_TypeAlias>(_1e4090929_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1e4095775_TypeSymbol>(_1e4095775_TypeSymbol{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1e6d44bb4:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d44664:;
	};
}



inline jule::Ptr<_1e374ee30_Trait> _1e40e5055_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1e40b827b_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1e3404651_FnIns> _8713_f = _1e40ba019_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1e4090929_TypeAlias> _9213_ta = _1e40baa97_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1e374ee30_Trait> _9713_t = _1e40e5055_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1e40d2a04_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1e6d493e4:;
			{
				static jule::Ptr<_1e3404651_FnIns> _10820_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414ad14_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1e6d4945a:;
			{
				static jule::Ptr<_1e3404651_FnIns> _11120_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414b1ee_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1e6d48987:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d48d94:;
	};
}



inline jule::Any _1e4119101_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1e6d49735:;
			{
				static jule::Ptr<_1e3404651_FnIns> _12120_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414984b_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1e6d4979b:;
			{
				static jule::Ptr<_1e3404651_FnIns> _12420_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e4149b59_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1e6d49812:;
			{
				static jule::Ptr<_1e3404651_FnIns> _12720_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414a077_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1e6d4a307:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d4a79c:;
	};
}



inline jule::Any _1e4123a56_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1e6d4b22b:;
			{
				static jule::Ptr<_1e3404651_FnIns> _13720_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414a4a6_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1e6d4b292:;
			{
				static jule::Ptr<_1e3404651_FnIns> _14020_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e414a8c4_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1e6d4d41a:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d4cc22:;
	};
}



inline jule::Any _1e4119ca0_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1e6d50065:;
			{
				return jule::Any(_1e40d2a04_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1e6d500cb:;
			{
				return jule::Any(_1e4119101_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1e6d50142:;
			{
				return jule::Any(_1e4123a56_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1e6d4d618:;
			{
				return nullptr;
			}
		}
		_match_end_1e6d4e1da:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e410960d_builtin_caller_common_plain(jule::Ptr<_1e4067d63_Eval>& _16037_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _16052_fc, jule::Ptr<_1e40662e5_Data>& _16074_d) {
	jule::Ptr<_1e3404651_FnIns> _16113_f = _1e409491c_fnc(_16074_d.get()._field_kind.ptr());;
	_1e4058062_FnCallArgChecker _16313_fcac = _1e4058062_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1e405a42c_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1e33ea1b3_FnCallExprModel> _17413_model = jule::new_ptr<_1e33ea1b3_FnCallExprModel>(_1e33ea1b3_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=_16074_d.get()._field_model, ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1e408d32d_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=static_cast<jule::Any>(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e41394c8_builtin_caller_common(jule::Ptr<_1e4067d63_Eval>& _19331_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _19346_fc, jule::Ptr<_1e40662e5_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1e410960d_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1e40662e5_Data> _1e4121e0b_builtin_caller_common_mut(jule::Ptr<_1e4067d63_Eval>& _20135_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _20150_fc, jule::Ptr<_1e40662e5_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1e406836e_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1e41394c8_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1e40662e5_Data> _1e411a0be_builtin_caller_error(jule::Ptr<_1e4067d63_Eval>& _20830_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _21913_expr = _1e40831d0_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1e40666d0_is_nil(_21913_expr.ptr())) {
		_1e406836e_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _22813_d = _1e408d32d_build_void_data();;
	_22813_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ed31a_BuiltinErrorCallExprModel>(_1e33ed31a_BuiltinErrorCallExprModel{._field_err=_21913_expr.get()._field_model}));
	return _22813_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e41187e8_builtin_caller_out(jule::Ptr<_1e4067d63_Eval>& _23628_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _23643_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _24813_expr = _1e40831d0_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1e40a8b95_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1e406836e_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _25813_d = _1e408d32d_build_void_data();;
	_25813_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec0c7_BuiltinOutCallExprModel>(_1e33ec0c7_BuiltinOutCallExprModel{._field_expr=_24813_expr.get()._field_model, }));
	return _25813_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40b59d7_builtin_caller_outln(jule::Ptr<_1e4067d63_Eval>& _26330_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _26345_fc, jule::Ptr<_1e40662e5_Data>& _26367_d) {
	_26367_d=_1e41187e8_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>(_1e33ec2b4_BuiltinOutlnCallExprModel{._field_expr=_26367_d.get()._field_model.operator jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>().get()._field_expr, }));
	return _26367_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e412e26a_builtin_caller_new(jule::Ptr<_1e4067d63_Eval>& _27528_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _27543_fc, jule::Ptr<_1e40662e5_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1e406836e_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _28713_t = _1e4082ab4_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1e406836e_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1e40a8634_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1e3352093_StructIns> _29817_s = _1e4094b81_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1e406836e_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e4099647_Sptr>(_1e4099647_Sptr{._field_elem=_28713_t.get()._field_kind}), 7)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1e4091661_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1e40662e5_Data> _31517_init = _1e40831d0_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1e1c31ee6_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1e400a443_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1e400863e_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec68d_BuiltinNewCallExprModel>(_1e33ec68d_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=_31517_init.get()._field_model}));
		};
	} else {
		_27565_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec68d_BuiltinNewCallExprModel>(_1e33ec68d_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40d22c8_builtin_caller_panic(jule::Ptr<_1e4067d63_Eval>& _34030_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _34045_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _35213_expr = _1e40831d0_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e409372e_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1e40990e7_is_str(_1e409372e_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1e406836e_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _36113_d = _1e408d32d_build_void_data();;
	_36113_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec87a_BuiltinPanicCallExprModel>(_1e33ec87a_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=_35213_expr.get()._field_model}));
	return _36113_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40d240a_builtin_caller_make(jule::Ptr<_1e4067d63_Eval>& _36929_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _36944_fc, jule::Ptr<_1e40662e5_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _38213_t = _1e4082ab4_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1e6d78e6d:;
			{
				goto _match_end_1e6d79402;
			}
		}
		else if ((_1e40946a8_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6d78ed4:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1e409372e_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1e40990e7_is_str(_1e409372e_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e6d7904a:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1e6d79402:;
	};
	_1e406836e_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1e40662e5_Data> _40613_len = _1e40831d0_eval_expr(_1e4007d36_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1e4071993_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1e33ecc54_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1e33ecc54_BuiltinMakeCallExprModel>(_1e33ecc54_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=_40613_len.get()._field_model, });;
	_36966_d.get()._field_model=static_cast<jule::Any>(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1e40662e5_Data> _41917_cap = _1e40831d0_eval_expr(_1e4007d36_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1e4071993_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=_41917_cap.get()._field_model;
	};
	return _36966_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40bce2e_builtin_caller_append(jule::Ptr<_1e4067d63_Eval>& _42931_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _42946_fc, jule::Ptr<_1e40662e5_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1e406836e_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e406836e_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _44213_t = _1e40831d0_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1e40946a8_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1e406836e_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3404651_FnIns> _45213_f = jule::new_ptr<_1e3404651_FnIns>(_1e3404651_FnIns{._field_params=jule::Slice<jule::Ptr<_1e3403782_ParamIns>>::make({jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1e3403782_ParamIns>(_1e3403782_ParamIns{._field_decl=jule::new_ptr<_1e3400163_Param>(_1e3400163_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1e40946a8_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1e40662e5_Data>(jule::Ptr<_1e4067d63_Eval>&,jule::Ptr<_1e333e1b2_FnCallExpr>&,jule::Ptr<_1e40662e5_Data>&)>(_1e410960d_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33eba11_CommonIdentExprModel>(_1e33eba11_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1e410960d_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1e33ea1b3_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1e33ea1b3_FnCallExprModel>();;
		_42968_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ece41_BuiltinAppendCallExprModel>(_1e33ece41_BuiltinAppendCallExprModel{._field_dest=_48017_model.get()._field_args[0LL], ._field_elements=_48017_model.get()._field_args[1LL]}));
	};
	return _42968_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40bd061_caller_copy_slice(jule::Ptr<_1e40662e5_Data>& _48927_dest, jule::Ptr<_1e4067d63_Eval>& _48945_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _48960_fc, jule::Ptr<_1e40662e5_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1e406836e_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _49413_src = _1e40831d0_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e409a0a4_Slc> _49813_slc = _1e40946a8_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1e4092a19_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1e406836e_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1e4091d26_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1e406836e_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1e4096138_Prim> _50813_dest_prim = _1e409372e_prim(_1e40946a8_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1e4096138_Prim> _50913_prim = _1e409372e_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1e40990e7_is_str(_50913_prim.ptr())))) || (!(_1e40976bc_is_u8(_50813_dest_prim.ptr()))))) {
			_1e406836e_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)});
	_48982_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ed12d_BuiltinCopyCallExprModel>(_1e33ed12d_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40edd94_caller_copy_str(jule::Ptr<_1e40662e5_Data>& _52325_dest, jule::Ptr<_1e4067d63_Eval>& _52343_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _52358_fc, jule::Ptr<_1e40662e5_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1e406836e_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _52813_src = _1e40831d0_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1e409372e_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6d97bb2:;
			{
				if (_1e40990e7_is_str(_1e409372e_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1e40946a8_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6d97c28:;
			{
				jule::Ptr<_1e409a0a4_Slc> _53817_slc = _1e40946a8_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1e409372e_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1e40976bc_is_u8(_1e409372e_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1e6d98146:;
	};
	_1e406836e_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1e4091a18_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("int", 3)), 6)});
	_52380_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ed12d_BuiltinCopyCallExprModel>(_1e33ed12d_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e40edec6_builtin_caller_copy(jule::Ptr<_1e4067d63_Eval>& _55329_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _55344_fc, jule::Ptr<_1e40662e5_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1e406836e_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e406836e_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1e406836e_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _56913_dest = _1e40831d0_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1e6da2e31:;
			{
				return nullptr;
			}
		}
		else if ((_1e40946a8_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1e6da2e97:;
			{
				return _1e40bd061_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1e409372e_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1e40990e7_is_str(_1e409372e_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1e6da300d:;
			{
				return _1e40edd94_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1e6da2dba:;
			{
				_1e406836e_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6da2d54:;
	};
}



inline jule::Ptr<_1e40662e5_Data> _1e414953d_builtin_caller_clone(jule::Ptr<_1e4067d63_Eval>& _58330_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _58345_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _59613_d = _1e4082ab4_eval_expr_kind(_58330_e, _58345_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e4093256_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1e40946a8_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1e4095159_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1e4094444_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1e4093993_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1e6da96da:;
				{
					{
						_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1e4094b81_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1e6da9751:;
				{
					{
						_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1e6da9674:;
				{
					{
						_1e406836e_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1e4091a18_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1e6da8ee2:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ec4a1_BuiltinCloneCallExprModel>(_1e33ec4a1_BuiltinCloneCallExprModel{._field_expr=_59613_d.get()._field_model}));
	return _59613_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e4149670_builtin_caller_assert(jule::Ptr<_1e4067d63_Eval>& _62931_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _62946_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1e406836e_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _64113_expr = _1e40831d0_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e409372e_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1e4098d83_is_bool(_1e409372e_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1e406836e_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e33eca67_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1e33eca67_BuiltinAssertCallExprModel>(_1e33eca67_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=_64113_expr.get()._field_model, ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1e40662e5_Data> _65817_log = _1e40831d0_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1e4066ba8_is_const(_65817_log.ptr()))) || (_1e409372e_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1e40990e7_is_str(_1e409372e_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1e406836e_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1e4091a18_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1e33e28d6_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1e40662e5_Data> _67113_d = _1e408d32d_build_void_data();;
	_67113_d.get()._field_model=static_cast<jule::Any>(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e414984b_builtin_caller_std_mem_size_of(jule::Ptr<_1e4067d63_Eval>& _67640_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _67655_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _68013_result = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _69213_d = _1e4082ab4_eval_expr_kind(_67640_e, _67655_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33eb219_SizeofExprModel>(_1e33eb219_SizeofExprModel{._field_expr=_69213_d.get()._field_model}));
	return _68013_result;
}



inline jule::Ptr<_1e40662e5_Data> _1e4149b59_builtin_caller_std_mem_align_of(jule::Ptr<_1e4067d63_Eval>& _70141_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _70156_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _70513_result = jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _71713_d = _1e4082ab4_eval_expr_kind(_70141_e, _70156_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ed97a_AlignofExprModel>(_1e33ed97a_AlignofExprModel{._field_expr=_71713_d.get()._field_model}));
	return _70513_result;
}



inline jule::Ptr<_1e40662e5_Data> _1e414a077_builtin_caller_std_mem_free(jule::Ptr<_1e4067d63_Eval>& _72637_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _72652_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _73913_d = _1e4082ab4_eval_expr_kind(_72637_e, _72652_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e4092ee2_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1e406836e_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _74813_result = _1e408d32d_build_void_data();;
	_74813_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33ee22d_FreeExprModel>(_1e33ee22d_FreeExprModel{._field_expr=_73913_d.get()._field_model}));
	return _74813_result;
}



inline jule::Ptr<_1e40662e5_Data> _1e414a4a6_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e4067d63_Eval>& _75351_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _75366_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1e406836e_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1e406836e_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e40662e5_Data> _76613_d = _1e4082ab4_eval_expr_kind(_75351_e, _75366_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e40a8b95_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1e406836e_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e40662e5_Data>(_1e40662e5_Data{._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(_1e40a9305_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1e33edd54_IntegratedToStrExprModel>(_1e33edd54_IntegratedToStrExprModel{._field_expr=_76613_d.get()._field_model})), });
}



inline jule::Ptr<_1e40662e5_Data> _1e414a8c4_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1e4067d63_Eval>& _78449_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _78464_fc, jule::Ptr<_1e40662e5_Data>& ) {
	if ((!(_1e4068ca9_is_unsafe(_78449_e.ptr())))) {
		_1e406836e_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1e406836e_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _79413_d = _1e40831d0_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1e409372e_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1e40990e7_is_str(_1e409372e_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1e406836e_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e4091a18_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1e4066ba8_is_const(_79413_d.ptr()))) || (!(_1e33e4c7e_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1e406836e_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e40662e5_Data> _80913_r = _1e408d32d_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1e40046d4_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1e4095775_TypeSymbol> _81517_k = _1e3408633_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1e400697d_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1e33ee041_BackendEmitExprModel> _82213_model = jule::new_ptr<_1e33ee041_BackendEmitExprModel>(_1e33ee041_BackendEmitExprModel{._field_code=_1e33e28d6_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1e6dd7d12:;
			if (it != expr.end()) {
				jule::Ptr<_1e3339d28_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1e40662e5_Data> _82921_argd = _1e4082ab4_eval_expr_kind(_78449_e, _82821_arg.get()._field_kind);;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(_82921_argd.get()._field_model);;
				}
				_iter_next_1e6dd7d12:;
				++it;
				goto _iter_begin_1e6dd7d12;
			}
			_iter_end_1e6dd7d12:;
		};
	};
	_80913_r.get()._field_model=static_cast<jule::Any>(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1e40662e5_Data> _1e414ad14_builtin_caller_std_debug_out(jule::Ptr<_1e4067d63_Eval>& _84138_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _84153_fc, jule::Ptr<_1e40662e5_Data>& _84175_d) {
	_84175_d=_1e41187e8_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1e33ec0c7_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1e40662e5_Data> _1e414b1ee_builtin_caller_std_debug_outln(jule::Ptr<_1e4067d63_Eval>& _85140_e, jule::Ptr<_1e333e1b2_FnCallExpr>& _85155_fc, jule::Ptr<_1e40662e5_Data>& _85177_d) {
	_85177_d=_1e40b59d7_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1e33ec2b4_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _1e4182378_find_module_file(jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1e6dddab5:;
		if (it != expr.end()) {
			jule::Ptr<_2162e46d8_DirEntry> &_1312_d = *it;
			{
				if (((!(_22ebe5e06_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1e6dddab5:;
			++it;
			goto _iter_begin_1e6dddab5;
		}
		_iter_end_1e6dddab5:;
	};
	return false;
}



inline jule::Str _1e41824aa_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2162e46d8_DirEntry>> _2617_dirents = ({
				auto except = static__1e18910d9_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1e6ddd3de;
				} jule::Slice<jule::Ptr<_2162e46d8_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1e4182378_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_1e1890d75_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1e6ddd3de;
			};
		}
	_iter_next_1e6ddd3de:;
	}
	_iter_end_1e6ddd3de:;;
	return jule::Str();
}



inline jule::Slice<_1e1905060_Log> _1e4182741_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2162e5233_read(_1e189089c_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1e1905060_Log>::make({_1e1905060_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _1e188ec0e_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1e1905060_Log>::make({_1e1905060_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1e479d235_FileInfo> _1e47a5eeb_parse_file(jule::Ptr<_1e1c37381_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e479d235_FileInfo> _2813_finf = jule::new_ptr<_1e479d235_FileInfo>(_1e479d235_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1e47ecdab_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1e3301383_Ast>,jule::Slice<_1e1905060_Log>> _1e47ecdab_parse_fileset(jule::Ptr<_1e1c37381_File> _6022_f) {
	jule::Ptr<_1e481b1b5_Parser> _6113_p = jule::new_ptr<_1e481b1b5_Parser>(_1e481b1b5_Parser{});;
	_1e482b0a4_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1e3345839_ScopeTree> _1e47ed7b3_new_scope(void) {
	return jule::new_ptr<_1e3345839_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1e47edac1_is_st(jule::Ptr<_1e1c31ee6_Token> _5010_current, jule::Ptr<_1e1c31ee6_Token> _5027_prev) {
	jule::Bool _5043_ok = jule::Bool();
	jule::Bool _5053_terminated = jule::Bool();
	_5043_ok=((_5010_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_5027_prev.get()._field_row < _5010_current.get()._field_row));
	_5053_terminated=(_5010_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5043_ok,_5053_terminated);
}



inline jule::Bool _1e47ede34_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _5629_tokens, jule::I64& _5648_i) {
	if (((_5648_i > 1LL) && (_5629_tokens[(_5648_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1e1c31ee6_Token> _6213_prev = _5629_tokens[(_5648_i - 1LL)];;
		return ((_6213_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _1e1c329db_is_bin_op(_6213_prev.get()._field_kind)) && (_6213_prev.get()._field_row < _5629_tokens[_5648_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1e47ee2ca_next_st_pos(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _7117_tokens, jule::I64 _7135_start) {
	jule::I64 _7213_brace_n = 0LL;;
	jule::I64 _7313_i = _7135_start;;
	for (; (_7313_i < _7117_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1e1c31ee6_Token> _7713_tok = _7117_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1e6e796bc:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1e6e7b38e:;
								{
									if (((_7213_brace_n == 0LL) && (_7313_i > _7135_start))) {
										if ((!(_1e47ede34_prev_is_incomplete_expr(_7117_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1e47edac1_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_brace_n)++;
								}
							}
							else {
								_case_begin_1e6e79ee7:;
								{
									(_7213_brace_n)--;
									if (((_7213_brace_n == 0LL) && ((_7313_i + 1LL) < _7117_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1e47edac1_is_st(_7117_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1e6e79d2c:;
						};
						goto _iter_next_1e6e77d08;
					}
				}
				_match_end_1e6e79667:;
			};
			if ((_7213_brace_n != 0LL)) {
				goto _iter_next_1e6e77d08;
			};
			if ((_7313_i > _7135_start)) {
				if (_1e47ede34_prev_is_incomplete_expr(_7117_tokens,_7313_i)) {
					goto _iter_next_1e6e77d08;
				};
				std::tie(_7517_ok,_7617_terminated) = _1e47edac1_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1e47edac1_is_st(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1e6e77d08;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1e6e77d08:;
	}
	_iter_end_1e6e77d08:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Bool> _1e47ee61b_skip_st(jule::I64& _13317_i, jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _13329_tokens) {
	jule::I64 _1349_start = _13317_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13317_i,_13513_terminated) = _1e47ee2ca_next_st_pos(_13329_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _13713_st_tokens = _13329_tokens.slice(_1349_start,_13317_i);;
	if (_13513_terminated) {
		if ((_13713_st_tokens.len() == 1LL)) {
			std::tie(_13713_st_tokens,_13513_terminated) = _1e47ee61b_skip_st(_13317_i,_13329_tokens);
			return std::make_tuple(_13713_st_tokens,_13513_terminated);
		};
		_13713_st_tokens=_13713_st_tokens.slice(0LL,(_13713_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13713_st_tokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1e47ee918_stmt>> _1e47eecae_split_stmts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _15521_tokens) {
	jule::Slice<jule::Ptr<_1e47ee918_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1e47ee918_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15521_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1e47ee61b_skip_st(_15713_pos,_15521_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1e47ee918_stmt>(_1e47ee918_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1e6e847c6:;
	}
	_iter_end_1e6e847c6:;;
	return _15613_stmts;
}



inline jule::Ptr<_1e480b815_CallData> _1e480bb78_get_call_data(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _4523_tokens) {
	jule::Ptr<_1e480b815_CallData> _4613_data = jule::new_ptr<_1e480b815_CallData>();;
	std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_args_tokens) = _1e48199ee_range_last(_4523_tokens);
	if ((_4613_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4613_data;
	};
	jule::Ptr<_1e1c31ee6_Token> _539_token = _4613_data.get()._field_expr_tokens[(_4613_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_539_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_539_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_generics_tokens) = _1e48199ee_range_last(_4613_data.get()._field_expr_tokens);
	};
	return _4613_data;
}



inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e480be64_get_block_expr(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _6124_tokens) {
	jule::I64 _6213_brace_n = 0LL;;
	jule::I64 _6313_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_1e70443ad:;
		if (it != expr.end()) {
			jule::I64 _649_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _6412_tok = *it;
			{
				{
					auto &_match_expr{ _6412_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1e7045249:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e70452c1:;
						{
							{
								auto &_match_expr{ _6412_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e704602a:;
									{
										if (((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL))) {
											if ((_6313_skip_to_next_brace_close > 0LL)) {
												(_6313_skip_to_next_brace_close)--;
											};
											(_6213_brace_n)++;
											goto _match_end_1e704615c;
										};
										return _6124_tokens.slice(0LL,_649_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e70466ce:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_1e704626c:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_1e704615c:;
							};
						}
					}
					_match_end_1e704506d:;
				};
			}
			_iter_next_1e70443ad:;
			++it;
			_649_i++;
			goto _iter_begin_1e70443ad;
		}
		_iter_end_1e70443ad:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e480c20b_split_colon(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _9221_tokens) {
	jule::I64 _9313_range_n = 0LL;;
	{
		auto &expr = _9221_tokens;
		auto it = expr.begin();
		_iter_begin_1e7046833:;
		if (it != expr.end()) {
			jule::I64 _949_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _9412_token = *it;
			{
				{
					auto &_match_expr{ _9412_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e7048802:;
						{
							{
								auto &_match_expr{ _9412_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e7048e51:;
									{
										(_9313_range_n)++;
										goto _iter_next_1e7046833;
									}
								}
								else {
									_case_begin_1e70491d7:;
									{
										(_9313_range_n)--;
									}
								}
								_match_end_1e704901c:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1e7048879:;
						{
							if ((_9313_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _10825_l = _9221_tokens.slice(0LL,_949_i);;
								jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _10925_r = _9221_tokens.slice((_949_i + 1LL));;
								return std::make_tuple(_10825_l,_10925_r);
							};
						}
					}
					_match_end_1e70485c1:;
				};
			}
			_iter_next_1e7046833:;
			++it;
			_949_i++;
			goto _iter_begin_1e7046833;
		}
		_iter_end_1e7046833:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1e480c52a_find_lowest_prec_op(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _11925_tokens) {
	jule::U8 _12413_prec = 255LLU;;
	jule::I64 _12513_prec_pos = -1LL;;
	jule::I64 _12713_brace_n = 0LL;;
	jule::Bool _12813_skip_to_next_brace_open = false;;
	{
		auto &expr = _11925_tokens;
		auto it = expr.begin();
		_iter_begin_1e704c22e:;
		if (it != expr.end()) {
			jule::I64 _1299_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> &_12912_token = *it;
			{
				{
					
					if ((_12912_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1e704d087:;
						{
							{
								auto &_match_expr{ _12912_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e704dbc0:;
									{
										_12813_skip_to_next_brace_open=false;
										goto _case_begin_1e704e40c;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1e704e40c:;
									{
										(_12713_brace_n)++;
									}
								}
								else {
									_case_begin_1e704de56:;
									{
										(_12713_brace_n)--;
									}
								}
								_match_end_1e704dc8b:;
							};
							goto _iter_next_1e704c22e;
						}
					}
					else if (_12813_skip_to_next_brace_open) {
						_case_begin_1e704d10e:;
						{
							goto _iter_next_1e704c22e;
						}
					}
					else if ((_12912_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1e704d186:;
						{
							_12813_skip_to_next_brace_open=true;
							goto _iter_next_1e704c22e;
						}
					}
					else if ((_1299_i == 0LL)) {
						_case_begin_1e704d20d:;
						{
							goto _iter_next_1e704c22e;
						}
					}
					else if ((_12912_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e704d285:;
						{
							goto _iter_next_1e704c22e;
						}
					}
					else if ((_12713_brace_n > 0LL)) {
						_case_begin_1e704d30c:;
						{
							goto _iter_next_1e704c22e;
						}
					}
					_match_end_1e704ce22:;
				};
				jule::Ptr<_1e1c31ee6_Token> _15613_left = _11925_tokens[(_1299_i - 1LL)];;
				if (((_15613_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15613_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1e704c22e;
				};
				if ((((_1299_i > 1LL) && (_15613_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15613_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_1e1c31ee6_Token> _16417_lleft = _11925_tokens[(_1299_i - 2LL)];;
					if (((_16417_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16417_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12912_token.get()._field_kind == jule::Str("&", 1)) || (_12912_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1e704c22e;
						};
					};
				};
				jule::U8 _17313_p = _1e1c3239d_prec(_12912_token.ptr());;
				if (((_17313_p != 0LLU) && (_17313_p <= _12413_prec))) {
					_12413_prec=_17313_p;
					_12513_prec_pos=_1299_i;
				};
			}
			_iter_next_1e704c22e:;
			++it;
			_1299_i++;
			goto _iter_begin_1e704c22e;
		}
		_iter_end_1e704c22e:;
	};
	return _12513_prec_pos;
}



inline jule::Ptr<_1e333bd91_IdentExpr> _1e480c7c2_build_ident_expr(jule::Ptr<_1e1c31ee6_Token>& _18326_token) {
	return jule::new_ptr<_1e333bd91_IdentExpr>(_1e333bd91_IdentExpr{._field_token=_18326_token, ._field_ident=_18326_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::I64> _1e480ca69_get_range_expr_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _19131_tokens) {
	jule::I64 _19213_range_n = 0LL;;
	jule::I64 _19313_i = (_19131_tokens.len() - 1LL);;
	for (; (_19313_i >= 0LL); (_19313_i)--) {
		{
			jule::Ptr<_1e1c31ee6_Token> _19513_tok = _19131_tokens[_19313_i];;
			if ((_19513_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19513_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e7056bea:;
						{
							(_19213_range_n)++;
						}
					}
					else {
						_case_begin_1e70575ad:;
						{
							(_19213_range_n)--;
						}
					}
					_match_end_1e705739e:;
				};
			};
			if ((_19213_range_n == 0LL)) {
				return std::make_tuple(_19131_tokens.slice(0LL,_19313_i),_19213_range_n);
			};
		}
	_iter_next_1e7056502:;
	}
	_iter_end_1e7056502:;;
	return std::make_tuple(nullptr,_19213_range_n);
}



inline jule::Bool _1e48183c1_check_assign_tokens(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_1e1c3658e_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1e7100c0b:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e7101833:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1e7101b0d:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1e71018ee:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1e7100c0b;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _1e1c36acd_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1e7100c0b:;
			++it;
			goto _iter_begin_1e7100c0b;
		}
		_iter_end_1e7100c0b:;
	};
	return false;
}



inline _1e1905060_Log _1e48192b2_make_err(jule::I64 _5113_row, jule::I64 _5123_col, jule::Ptr<_1e1c37381_File>& _5134_f, jule::Str _5144_fmt, jule::Slice<jule::Any> _5157_args) {
	return _1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_5113_row, ._field_column=_5123_col, ._field_path=_5134_f.get()._field_path, ._field_text=_1e19054a0_logf(_5144_fmt,jule::Any(_5157_args)), };
}



inline jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _1e4819757_range(jule::I64& _7015_i, jule::Str _7023_open, jule::Str _7040_close, jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _7063_tokens) {
	if ((_7015_i >= _7063_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1e1c31ee6_Token> _759_tok = _7063_tokens[_7015_i];;
	if (((_759_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_kind != _7023_open))) {
		return nullptr;
	};
	(_7015_i)++;
	jule::I64 _8113_range_n = 1LL;;
	jule::I64 _829_start = _7015_i;;
	for (; ((_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len())); (_7015_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _8413_token = _7063_tokens[_7015_i];;
			if ((_8413_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8413_token.get()._field_kind };
					
					if (_match_expr == _7023_open) {
						_case_begin_1e7107b36:;
						{
							(_8113_range_n)++;
						}
					}
					else if (_match_expr == _7040_close) {
						_case_begin_1e7107bad:;
						{
							(_8113_range_n)--;
						}
					}
					_match_end_1e7107905:;
				};
			};
		}
	_iter_next_1e71063e8:;
	}
	_iter_end_1e71063e8:;;
	return _7063_tokens.slice(_829_start,(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _1e48199ee_range_last(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _10520_tokens) {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _10540_cutted = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _10558_cut = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	if ((_10520_tokens.len() == 0LL)) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	} else if ((_10520_tokens[(_10520_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	};
	jule::I64 _11213_brace_n = 0LL;;
	jule::I64 _11313_i = (_10520_tokens.len() - 1LL);;
	for (; (_11313_i >= 0LL); (_11313_i)--) {
		{
			jule::Ptr<_1e1c31ee6_Token> _11513_token = _10520_tokens[_11313_i];;
			if ((_11513_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11513_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e710b2dd:;
						{
							(_11213_brace_n)++;
							goto _iter_next_1e7108b8c;
						}
					}
					else {
						_case_begin_1e710bbe5:;
						{
							(_11213_brace_n)--;
						}
					}
					_match_end_1e710b9d6:;
				};
			};
			if ((_11213_brace_n == 0LL)) {
				_10540_cutted = _10520_tokens.slice(0LL,_11313_i);
				_10558_cut = _10520_tokens.slice(_11313_i);
				return std::make_tuple(_10540_cutted,_10558_cut);
			};
		}
	_iter_next_1e7108b8c:;
	}
	_iter_end_1e7108b8c:;;
	_10540_cutted = _10520_tokens;
	_10558_cut = nullptr;
	return std::make_tuple(_10540_cutted,_10558_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>>,jule::Slice<_1e1905060_Log>> _1e4819e61_parts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _14215_tokens, jule::U64 _14233_id, jule::Bool _14246_expr_must) {
	if ((_14215_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>> _14713_parts = nullptr;;
	jule::Slice<_1e1905060_Log> _14813_errors = nullptr;;
	jule::I64 _15013_range_n = 0LL;;
	jule::I64 _15113_last = 0LL;;
	{
		auto &expr = _14215_tokens;
		auto it = expr.begin();
		_iter_begin_1e71103d0:;
		if (it != expr.end()) {
			jule::I64 _1529_i = it - expr.begin();
			jule::Ptr<_1e1c31ee6_Token> _15212_token = *it;
			{
				if ((_15212_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15212_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e7111425:;
							{
								(_15013_range_n)++;
								goto _iter_next_1e71103d0;
							}
						}
						else {
							_case_begin_1e7111700:;
							{
								(_15013_range_n)--;
							}
						}
						_match_end_1e71114e1:;
					};
				};
				if ((_15013_range_n > 0LL)) {
					goto _iter_next_1e71103d0;
				};
				if ((_15212_token.get()._field_id == _14233_id)) {
					if ((_14246_expr_must && ((_1529_i - _15113_last) <= 0LL))) {
						_1e1905060_Log _17121_err = _1e48192b2_make_err(_15212_token.get()._field_row,_15212_token.get()._field_column,_15212_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14813_errors = jule::alloc_for_append(_14813_errors,1);_14813_errors.__push(_17121_err);;
					};
					_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last,_1529_i));;
					_15113_last=static_cast<jule::I64>((_1529_i + 1LL));
				};
			}
			_iter_next_1e71103d0:;
			++it;
			_1529_i++;
			goto _iter_begin_1e71103d0;
		}
		_iter_end_1e71103d0:;
	};
	if ((_15113_last < _14215_tokens.len())) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last));;
	} else if ((!(_14246_expr_must))) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>());;
	};
	return std::make_tuple(_14713_parts,_14813_errors);
}



inline jule::Str _1e481a22a_get_close_kind_of_brace(jule::Str _18828_left) {
	{
		auto &_match_expr{ _18828_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1e7110d09:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1e7110d70:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1e7110dd6:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1e7110c4e:;
			{
				return jule::Str();
			}
		}
		_match_end_1e71149ab:;
	};
}



inline _1e1905060_Log _1e481a5e3_compiler_err(jule::Ptr<_1e1c31ee6_Token>& _20118_token, jule::Str& _20134_fmt, jule::Slice<jule::Any> _20147_args) {
	return _1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_20118_token.get()._field_row, ._field_column=_20118_token.get()._field_column, ._field_path=_20118_token.get()._field_file.get()._field_path, ._field_text=_1e19054a0_logf(_20134_fmt,jule::Any(_20147_args)), ._field_line=_1e1c3855d_get_row(_20118_token.get()._field_file.ptr(), _20118_token.get()._field_row), };
}



inline void _1e481a945_push_suggestion(_1e1905060_Log* _21231_log, jule::Str _21242_fmt, jule::Slice<jule::Any> _21255_args) {
	_21231_log->_field_suggestion=_1e19054a0_logf(_21242_fmt,jule::Any(_21255_args));
}



inline jule::Str _1e481acec_tokstoa(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _21613_tokens) {
	jule::Str _21713_s = jule::Str();;
	{
		auto &expr = _21613_tokens;
		auto it = expr.begin();
		_iter_begin_1e71181eb:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> &_21812_token = *it;
			{
				_21713_s+=_21812_token.get()._field_kind;
			}
			_iter_next_1e71181eb:;
			++it;
			goto _iter_begin_1e71181eb;
		}
		_iter_end_1e71181eb:;
	};
	return _21713_s;
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482b9cd_build_void_type(void) {
	return jule::new_ptr<_1e3335807_TypeDecl>();
}



inline jule::Ptr<_1e3335807_TypeDecl> _1e482bc42_build_prim_type(jule::Ptr<_1e1c31ee6_Token> _2324_t) {
	return jule::new_ptr<_1e3335807_TypeDecl>(_1e3335807_TypeDecl{._field_token=_2324_t, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1e3335dbd_IdentTypeDecl>(_1e3335dbd_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_1e1c31ee6_Token>>,jule::I64> _1e482c083_split_map_range(jule::Slice<jule::Ptr<_1e1c31ee6_Token>>& _3625_tokens, jule::I64& _3648_i) {
	jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _3658_range_tokens = jule::Slice<jule::Ptr<_1e1c31ee6_Token>>();
	jule::I64 _3682_colon = jule::I64();
	_3682_colon=-1LL;
	jule::I64 _3813_range_n = 0LL;;
	jule::I64 _399_start = _3648_i;;
	for (; (_3648_i < _3625_tokens.len()); (_3648_i)++) {
		{
			jule::Ptr<_1e1c31ee6_Token> _4113_token = _3625_tokens[_3648_i];;
			if ((_4113_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4113_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e7276ee7:;
						{
							(_3813_range_n)++;
							goto _iter_next_1e727603a;
						}
					}
					else {
						_case_begin_1e72778ee:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_1e72776e0:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_399_start + 1LL) > _3648_i)) {
					return std::make_tuple(_3658_range_tokens,_3682_colon);
				};
				_3658_range_tokens=_3625_tokens.slice((_399_start + 1LL),_3648_i);
				goto _iter_end_1e727603a;
			} else if ((_3813_range_n != 1LL)) {
				goto _iter_next_1e727603a;
			};
			if (((_3682_colon == -1LL) && (_4113_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3682_colon=static_cast<jule::I64>(((_3648_i - _399_start) - 1LL));
			};
		}
	_iter_next_1e727603a:;
	}
	_iter_end_1e727603a:;;
	return std::make_tuple(_3658_range_tokens,_3682_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1e415b8b3_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1e72cb29e:;
			{
				_925_ok=_1e1908a58_is_windows(_1e1943b70_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1e72cada3:;
			{
				_925_ok=_1e1908d44_is_darwin(_1e1943b70_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1e72cab83:;
			{
				_925_ok=_1e19090db_is_linux(_1e1943b70_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1e72cabe9:;
			{
				_925_ok=_1e1909be1_is_unix(_1e1943b70_OS);
			}
		}
		else {
			_case_begin_1e72ca457:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1e72ca864:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1e4156847_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1e72cd46b:;
			{
				_3027_ok=_1e190940a_is_i386(_1e1926d40_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1e72cd24b:;
			{
				_3027_ok=_1e19096a2_is_amd64(_1e1926d40_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1e72cd2b2:;
			{
				_3027_ok=_1e1909949_is_arm64(_1e1926d40_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1e72cd328:;
			{
				_3027_ok=_1e190a30c_is_64bit(_1e1926d40_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1e72cd38e:;
			{
				_3027_ok=_1e190a065_is_32bit(_1e1926d40_ARCH);
			}
		}
		else {
			_case_begin_1e72cca20:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1e72cce2c:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1e4156979_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1e1890c43_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _1e18909ce_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _1e188ce93_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1e415b8b3_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1e4156847_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_1e188ce93_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1e415b8b3_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1e4156847_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1e4156847_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1e415b8b3_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1e415b8b3_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1e4171422_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1e1943b70_OS);;
	if (_1e1909be1_is_unix(_1e1943b70_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1e4171675_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_1e1926d40_ARCH);;
	if (_1e190a30c_is_64bit(_1e1926d40_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_1e190a065_is_32bit(_1e1926d40_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1e417192d_init_vars(jule::Slice<jule::Str>& _5519_vars, _1e4171114_CompileInfo& _5533_info) {
	_1e4171422_set_os_vars(_5519_vars);
	_1e4171675_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e72d9d07:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e72d9d6d:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1e72da0e3:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e72daee5:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e72dac3c:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e72daca3:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1e72dae90:;
	};
}



inline jule::Slice<jule::U8> _1e4247d89_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__2162e5233_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1e195ac20_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1e1905060_Log _1e4264757_flat_compiler_err(jule::Str _4122_text) {
	return _1e1905060_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1e43c7b73_push_passes(jule::Ptr<_1e3eea488_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e731d6ba:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1e731e19e:;
					if (it != expr.end()) {
						_1e34082d1_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1e731e19e;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1e731eee6:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1e731e19e;
										};
									}
									_iter_next_1e731eee6:;
									++it;
									goto _iter_begin_1e731eee6;
								}
								_iter_end_1e731eee6:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1e731e19e:;
						++it;
						goto _iter_begin_1e731e19e;
					}
					_iter_end_1e731e19e:;
				};
			}
			_iter_next_1e731d6ba:;
			++it;
			goto _iter_begin_1e731d6ba;
		}
		_iter_end_1e731d6ba:;
	};
}



inline jule::Slice<jule::Str> _1e43c6941_get_all_unique_passes(jule::Ptr<_1e3eea488_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1e3ee752e_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1e43c7b73_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1e7321448:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1e43c7b73_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1e7321448:;
			++it;
			goto _iter_begin_1e7321448;
		}
		_iter_end_1e7321448:;
	};
	return _13013_passes;
}



inline _1e4171114_CompileInfo _1e43dd75a_build_compile_info(void) {
	_1e4171114_CompileInfo _14313_info = _1e4171114_CompileInfo{._field_prod=_22eb5e27b_PRODUCTION, ._field_test=_22eb5d753_TEST, };;
	{
		auto &_match_expr{ _22eb5ca0a_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e7322c74:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e7322ceb:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1e7322bec:;
	};
	{
		auto &_match_expr{ _22eb5ced3_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e7321646:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e73231c5:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e732323b:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1e7323093:;
	};
	return _14313_info;
}



inline void _1e4923e5a_eliminate_defines(jule::Ptr<_1e4675e54_IR>& _28531_ir) {
	jule::Ptr<_1e48e305b_ObjectDeadCode> _28613_ocd = static__1e48e3457_new(_28531_ir);;
	_1e4923b91_elimanate(_28613_ocd);
}



inline jule::Ptr<_1e330242d_Directive> _1e49242e0_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_1e7364b51:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1e7364b51:;
			++it;
			goto _iter_begin_1e7364b51;
		}
		_iter_end_1e7364b51:;
	};
	return nullptr;
}



inline jule::Bool _1e4924631_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_1e49242e0_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _1e4927de8_eliminate_dead_code_of_scope(jule::Ptr<_1e3e547aa_Scope> _22637_s) {
	jule::Slice<jule::Ptr<_1e3ecd67a_Label>> _2279_labels = jule::Slice<jule::Ptr<_1e3ecd67a_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>> _2289_gotos = jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1e49252ad_ScopeDeadCode> _22913_sdc = jule::new_ptr<_1e49252ad_ScopeDeadCode>(_1e49252ad_ScopeDeadCode{._field_s=_22637_s, ._field_stmts=(&(_22637_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd67a_Label>>>)((&(_2279_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e3ecd867_GotoSt>>>)((&(_2289_gotos))))});;
	{
		_1e4927b0c_optimize_stmts(_22913_sdc);
	};
}



inline void _1e492817e_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e34019a0_Fn>>& _23935_funcs) {
	{
		auto &expr = _23935_funcs;
		auto it = expr.begin();
		_iter_begin_1e73ac847:;
		if (it != expr.end()) {
			jule::Ptr<_1e34019a0_Fn> _24017_func = *it;
			{
				{
					auto &expr = _24017_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1e73ace74:;
					if (it != expr.end()) {
						jule::Ptr<_1e3404651_FnIns> _24121_ins = *it;
						{
							_1e4927de8_eliminate_dead_code_of_scope(_24121_ins.get()._field_scope);
						}
						_iter_next_1e73ace74:;
						++it;
						goto _iter_begin_1e73ace74;
					}
					_iter_end_1e73ace74:;
				};
			}
			_iter_next_1e73ac847:;
			++it;
			goto _iter_begin_1e73ac847;
		}
		_iter_end_1e73ac847:;
	};
}



inline void _1e49283d2_eliminate_functions_scope_package(jule::Ptr<_1e3eea488_Package>& _24743_pkg) {
	{
		auto &expr = _24743_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e73ad43b:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _24817_f = *it;
			{
				_1e492817e_eliminate_scope_functions(_24817_f.get()._field_funcs);
			}
			_iter_next_1e73ad43b:;
			++it;
			goto _iter_begin_1e73ad43b;
		}
		_iter_end_1e73ad43b:;
	};
}



inline void _1e492868a_eliminate_scope_package(jule::Ptr<_1e3eea488_Package>& _25333_pkg) {
	_1e49283d2_eliminate_functions_scope_package(_25333_pkg);
}



inline void _1e4928877_eliminate_scopes(jule::Ptr<_1e4675e54_IR>& _25830_ir) {
	jule::I64 _25913_i = (_25830_ir.get()._field_used.len() - 1LL);;
	for (; (_25913_i >= 0LL); (_25913_i)--) {
		{
			jule::Ptr<_1e3ee752e_ImportInfo> _26117_u = _25830_ir.get()._field_used[_25913_i];;
			if ((!(_26117_u.get()._field_cpp_linked))) {
				_1e492868a_eliminate_scope_package(_26117_u.get()._field_package);
			};
		}
	_iter_next_1e73b0075:;
	}
	_iter_end_1e73b0075:;;
	_1e492868a_eliminate_scope_package(_25830_ir.get()._field_main);
}



inline jule::Bool _1e1da186e_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _1e17de125_has_prefix(_39919_f,_1e189089c_join(jule::Slice<jule::Str>::make({_1e1927934_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1e1da2ad4_is_constant_valid_conditional_case(jule::Ptr<_1e3eb7ea0_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e742ec82:;
			{
				jule::Ptr<_1e3388a47_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1e3388a47_Const>();;
				return (_1e33e4a1a_is_bool(_40613_c.ptr()) && _1e33e2672_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1e742eac8:;
	};
	return false;
}



inline jule::Bool _1e1dabcdb_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e74305bd:;
			{
				jule::Ptr<_1e3388a47_Const> _41513_c = _41225_expr.operator jule::Ptr<_1e3388a47_Const>();;
				return (_1e33e4a1a_is_bool(_41513_c.ptr()) && (!(_1e33e2672_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e33e9536_BinopExprModel>>()) {
			_case_begin_1e7430634:;
			{
				jule::Ptr<_1e33e9536_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1e33e9536_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1e1dabcdb_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1e1dabcdb_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1e7430568:;
	};
	return false;
}



inline jule::Bool _1e1dc771e_is_constant_valid_match_case(jule::Ptr<_1e3ece538_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e74336c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e40662e5_Data> &_42712_expr = *it;
			{
				if (((_1e4066ba8_is_const(_42712_expr.ptr()) && _1e33e4a1a_is_bool(_42712_expr.get()._field_constant.ptr())) && _1e33e2672_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1e74336c0:;
			++it;
			goto _iter_begin_1e74336c0;
		}
		_iter_end_1e74336c0:;
	};
	return false;
}



inline jule::Bool _1e1dd36d6_is_unreachable_conditional_case(jule::Ptr<_1e3eb7ea0_If>& _43537_i) {
	return _1e1dabcdb_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1e1ddb28d_is_unreachable_match_case(jule::Ptr<_1e3ece538_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e74352c6:;
		if (it != expr.end()) {
			jule::Ptr<_1e40662e5_Data> &_44012_expr = *it;
			{
				if ((!(_1e1dabcdb_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1e74352c6:;
			++it;
			goto _iter_begin_1e74352c6;
		}
		_iter_end_1e74352c6:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1e226c09c_check_for_bit_shift_opt(jule::Ptr<_1e33cb073_OperandExprModel>& _42729_l, jule::Ptr<_1e33cb073_OperandExprModel>& _42752_r) {
	jule::Bool _42776_ok = jule::Bool();
	jule::U64 _42786_x = jule::U64();
	if (((!(_1e3ecc05d_is_int(_1e4091a18_to_str(_42729_l.get()._field_kind.ptr())))) || (!(_1e3ecc05d_is_int(_1e4091a18_to_str(_42752_r.get()._field_kind.ptr())))))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	{
		auto &_match_expr{ _42752_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e3388a47_Const>>()) {
			_case_begin_1e746e3a9:;
			{
				goto _match_end_1e746ed6b;
			}
		}
		else {
			_case_begin_1e746eeae:;
			{
				_42776_ok = false;
				_42786_x = 0LLU;
				return std::make_tuple(_42776_ok,_42786_x);
			}
		}
		_match_end_1e746ed6b:;
	};
	_42786_x=static_cast<jule::U64>(_1e33e3123_as_u64(_42752_r.get()._field_model.operator jule::Ptr<_1e3388a47_Const>().ptr()));
	if (((_42786_x == 0LLU) || ((_42786_x & 1LL) != 0LLU))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	jule::F64 _4419_j = _1e3e20622_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42786_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	_42776_ok = true;
	_42786_x = _4429_z;
	return std::make_tuple(_42776_ok,_42786_x);
}



inline void _1e226cc90_push_opt_level(jule::I64 _3223_level) {
	_1e1c5d781_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c67779_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c6bcab_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c5789b_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c736b9_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c789aa_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c91880_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_1e1c99080_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1e4901e8d_detect_enabled(void) {
	_1e4832d58_expr_enabled=(((_1e1c91880_PTR || _1e1c5789b_MATH) || _1e1c736b9_ACCESS) || _1e1c99080_COND);
	_1e4833ead_scope_enabled=((_1e1c99080_COND || _1e1c6bcab_APPEND) || _1e1c5d781_COPY);
}



inline void _1e49367b9_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1e195ac20_exit(1LL);
}



inline jule::U64 _1e501b651_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1e501b992_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1e501bd27_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1e750220b:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e7502360:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e75023c6:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e750243c:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e75024a3:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e7502519:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1e7502580:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1e75025e6:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e750265c:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1e75026c3:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1e750274a:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1e75021a6:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1e4e95a81_is_copy_optimizable(jule::Ptr<_1e40662e5_Data>& _74125_expr) {
	if ((!(_74125_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74125_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ead40_SlicingExprModel>>()) {
			_case_begin_1e7581d5c:;
			{
				return false;
			}
		}
		_match_end_1e7582379:;
	};
	return true;
}



inline jule::Bool _1e4e95e38_is_iter_copy_optimizable(jule::Ptr<_1e40662e5_Data>& _75230_expr, jule::Ptr<_1e401a92b_Var>& _75244_v) {
	if (((!(_75230_expr.get()._field_lvalue)) && (!(_1e4092a19_mutable(_75230_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_75244_v.get()._field_mutable)) && (!(_75230_expr.get()._field_mutable)));
}



inline jule::Str _1e4ea4045_decompose_common_esq(jule::U8 _114125_b) {
	{
		auto &_match_expr{ _114125_b };
		
		if (_match_expr == '\\') {
			_case_begin_1e7633590:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e7633606:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e7633859:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1e76338c0:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1e7633936:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1e763399c:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1e7633a24:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1e7633a9b:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1e7633b23:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1e7633b9a:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1e763342a:;
			{
				return jule::Str();
			}
		}
		_match_end_1e7633370:;
	};
}



inline jule::Str _1e4ea4331_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1e4ea4045_decompose_common_esq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1e3e4d96e_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1e4ea45c8_cstr_bytes(jule::Slice<jule::U8> _118815_bytes) {
	jule::Str _118913_lit = jule::Str();;
	{
		auto &expr = _118815_bytes;
		auto it = expr.begin();
		_iter_begin_1e7639871:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1e4ea4331_sbtoa(_119012_b);
			}
			_iter_next_1e7639871:;
			++it;
			goto _iter_begin_1e7639871;
		}
		_iter_end_1e7639871:;
	};
	return _118913_lit;
}



inline jule::Str _1e4ea48e7_cstr_lit(jule::Slice<jule::U8> _119613_bytes) {
	return ((jule::Str("\"", 1) + _1e4ea45c8_cstr_bytes(_119613_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1e4ea4c05_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1e4ea4e9c_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1e4ea5244_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1e3874cbe_fmt_float(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_1e188d812_contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1e4ea4e9c_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1e763d3d0:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1e763d468:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1e763d2ae:;
	};
	jule::Str _12249_fmt = _1e3e4daa1_fmt_int(_12169_x,10LL);;
	if (_1e190a30c_is_64bit(jule::Str("amd64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1e4ea5244_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1e7640206:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1e76400e6:;
	};
	jule::Str _12379_fmt = _1e3e4d96e_fmt_uint(_12319_x,10LL);;
	if (_1e190a30c_is_64bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1e4ea55eb_is_forwarded(jule::Ptr<_1e3e547aa_Scope>& _124418_s) {
	jule::Any _12459_last = _124418_s.get()._field_stmts[(_124418_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1e40662e5_Data>>()) {
			_case_begin_1e76424d3:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1e40662e5_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e33ed31a_BuiltinErrorCallExprModel>>()) {
						_case_begin_1e76430e9:;
						{
							return true;
						}
					}
					else {
						_case_begin_1e7643083:;
						{
							return false;
						}
					}
					_match_end_1e7642ed9:;
				};
			}
		}
		else {
			_case_begin_1e7642428:;
			{
				return true;
			}
		}
		_match_end_1e76423c3:;
	};
}



inline jule::Bool _1e4ea58b5_is_builtin_call_has_debuginf(jule::Ptr<_1e33ea1b3_FnCallExprModel>& _125934_m) {
	if ((!(_1e3405399_is_builtin(_125934_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125934_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>>()) {
			_case_begin_1e7643e0d:;
			{
				jule::Ptr<_1e33ebbed_CommonSubIdentExprModel> _126513_csie = _125934_m.get()._field_expr.operator jule::Ptr<_1e33ebbed_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1e7643d97:;
			{
				return false;
			}
		}
		_match_end_1e7642a00:;
	};
}



inline void _1e5021bc8_iter_files(jule::Ptr<_1e3eea488_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1e4061466_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e77800e3:;
		if (it != expr.end()) {
			jule::Ptr<_1e4061466_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1e77800e3:;
			++it;
			goto _iter_begin_1e77800e3;
		}
		_iter_end_1e77800e3:;
	};
}



inline void _1e5021e2b_prepare_structure(jule::Ptr<_1e3318840_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1e7780c2b:;
		if (it != expr.end()) {
			jule::Ptr<_1e3352093_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1e77814e0:;
					if (it != expr.end()) {
						jule::Ptr<_1e34019a0_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1e77814e0;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1e77822c1:;
								if (it != expr.end()) {
									jule::Ptr<_1e3404651_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1e3403782_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1e3400a04_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e5022dd8_CustomType>(_1e5022dd8_CustomType{._field_kind=static__1e502478b_as_ptr(static__1e5027c89_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1e4091661_TypeKind>(_1e4091661_TypeKind{._field_kind=jule::Trait<_1e4091232_Kind>(jule::new_ptr<_1e5022dd8_CustomType>(_1e5022dd8_CustomType{._field_kind=static__1e5027c89_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_1e77822c1:;
									++it;
									goto _iter_begin_1e77822c1;
								}
								_iter_end_1e77822c1:;
							};
						}
						_iter_next_1e77814e0:;
						++it;
						goto _iter_begin_1e77814e0;
					}
					_iter_end_1e77814e0:;
				};
			}
			_iter_next_1e7780c2b:;
			++it;
			goto _iter_begin_1e7780c2b;
		}
		_iter_end_1e7780c2b:;
	};
}



inline jule::Str _1e50221c3_concat_all_parts(jule::Slice<jule::Ptr<_1e1c31ee6_Token>> _103421_parts) {
	jule::Str _103513_s = jule::Str();;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1e7781314:;
		if (it != expr.end()) {
			jule::Ptr<_1e1c31ee6_Token> &_103612_p = *it;
			{
				_103513_s+=_103612_p.get()._field_kind;
			}
			_iter_next_1e7781314:;
			++it;
			goto _iter_begin_1e7781314;
		}
		_iter_end_1e7781314:;
	};
	return _103513_s;
}



inline jule::Ptr<_1e330242d_Directive> _1e502a5e9_find_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_1e785401e:;
		if (it != expr.end()) {
			jule::Ptr<_1e330242d_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1e785401e:;
			++it;
			goto _iter_begin_1e785401e;
		}
		_iter_end_1e785401e:;
	};
	return nullptr;
}



inline jule::Bool _1e502a97e_has_directive(jule::Slice<jule::Ptr<_1e330242d_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_1e502a5e9_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _1e18be568_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1e18c046a_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1e18c87b4_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _1e18c87b4_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1e78cb717:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1e78cb717:;
			++it;
			goto _iter_begin_1e78cb717;
		}
		_iter_end_1e78cb717:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1e18c87b4_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1e78cd384:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1e17ddb08_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1e78cd384:;
			++it;
			_519_i++;
			goto _iter_begin_1e78cd384;
		}
		_iter_end_1e78cd384:;
	};
	jule::outln(_4913_s);
}



inline void _1e18d4bdd_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11", 10));
}



inline void _1e18d65a2_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1e1908470_DISTOS;
		auto it = expr.begin();
		_iter_begin_1e78d180a:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1e78d180a:;
			++it;
			goto _iter_begin_1e78d180a;
		}
		_iter_end_1e78d180a:;
	};
	jule::outln(jule::Str());
}



inline void _1e18d6d00_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1e1908805_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1e78d2047:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1e78d2047:;
			++it;
			goto _iter_begin_1e78d2047;
		}
		_iter_end_1e78d2047:;
	};
	jule::outln(jule::Str());
}



inline void _1e18d754d_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1e78d5237:;
			{
				_1e18d65a2_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1e78d4e29:;
			{
				_1e18d6d00_tool_distarch();
			}
		}
		else {
			_case_begin_1e78d36ec:;
			{
				_1e18be568_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1e78d4c5e:;
	};
}



inline void _1e18d7c9b_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11", 25));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _22eb5ca0a_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _22eb5ced3_CPP_STD));
}



inline void _1e18d84e9_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1e78d97e1:;
			{
				({
					auto except = static__2162e540e_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1e18be568_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1e78d8119:;
			{
				_1e18be568_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1e78d937e:;
	};
}



inline jule::Bool _1e18d9077_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1e78daa67:;
			{
				_1e18c046a_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1e78daacd:;
			{
				_1e18d4bdd_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1e78dab44:;
			{
				_1e18d754d_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1e78db32b:;
			{
				_1e18d7c9b_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1e78db392:;
			{
				_1e18d84e9_mod(_15121_args);
			}
		}
		else {
			_case_begin_1e78da98a:;
			{
				return false;
			}
		}
		_match_end_1e78da8be:;
	};
	return true;
}



inline void _1e18e7508_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _223384b45_args();;
	if ((_18713_args.len() < 2LL)) {
		_1e18e7508_show_info();
		return;;
	};
	if (_1e18d9077_process_command(_18713_args)) {
		return;;
	};
	_1e505e09a_compile_command(_18713_args);
}



inline void _1e18c66c4_enable_vtp(void) {
	jule::Uintptr _199_h_out = _2163b00cd_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_2163b2cd4_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_2163b3125_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _1e18de6a9_init(void) {
	_1e18c66c4_enable_vtp();
}



inline void _1e4a28504_init(void) {
	_22eb5ca0a_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_2163c3355_File> _1e4dcebb8_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _1e1890d75_dir(_4817_path);;
	({
		auto except = static__1e189165b_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__1e189121b_create(_499_dir);
				if (!except.ok()) {
					_1e49367b9_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2162d3dae_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1e49367b9_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1e502e5cb_clear_objects(void) {
	({
		auto except = static__21645774c_remove(_1e4d73e59_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e189134d_remove(_1e502bd9d_OUT_DIR);
}



inline void _1e50311c1_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1e194507d_Cmd> _7813_cmd = static__1e19454ac_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_1e188d6d0_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _1e1945721_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1e78e5357:;
					{
						static__1e4934135_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1e78e55bb:;
					{
						static__1e4934135_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1e78e5632:;
					{
						static__1e4934135_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1e78e5698:;
					{
						static__1e4934135_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1e78e549a:;
					{
						static__1e4934135_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1e78e53e0:;
			};
			_1e49367b9_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _22eb5ca0a_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1e4934135_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1e49367b9_throw(jule::Str());
	};
	_1e502e5cb_clear_objects();
}



inline jule::Bool _1e4e5d5e8_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _1e188ce93_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _1e18e89e3_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1e502c92b_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb5ced3_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e78ea4b1:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e78ea527:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e78ea67b:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e78ea36d:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_22eb5e27b_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1e4e304bb_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb5ced3_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e78ecc00:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e78ecc66:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e78ecdba:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e78ecaac:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_22eb5e27b_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1e4e70099_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1e4675e54_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _22eb5cc6e_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str();;
	{
		auto &_match_expr{ _22eb5ca0a_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e79005e8:;
			{
				_1e4e304bb_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e7900a5a:;
			{
				_1e502c92b_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1e79008d4:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1e7900d68:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1e7900d68:;
			++it;
			goto _iter_begin_1e7900d68;
		}
		_iter_end_1e7900d68:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1e7902364:;
		if (it != expr.end()) {
			jule::Ptr<_1e3ee752e_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1e4e5d5e8_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1e7902364:;
			++it;
			goto _iter_begin_1e7902364;
		}
		_iter_end_1e7902364:;
	};
	if ((!(_1e50333c1_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1e50333c1_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1e4d73e59_get_compile_path(void) {
	return _1e189089c_join(jule::Slice<jule::Str>::make({_1e502bd9d_OUT_DIR,_1e5031886_OUT_NAME}));
}



inline void _1e50382a5_apply_target_independent_optimizations(jule::Ptr<_1e4675e54_IR>& _21448_ir) {
	jule::Ptr<_1e4896817_Optimizer> _21613_opt = static__1e4862b68_new(_21448_ir);;
	_1e48ec4b6_optimize(_21613_opt.ptr());
}



inline void _1e4cbc7ed_check_compiler_flag(void) {
	{
		auto &_match_expr{ _22eb5ca0a_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e7904355:;
			{
				_1e49367b9_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e7904ad6:;
			{
				if (_22eb5cc6e_COMPILER_PATH.empty()) {
					_22eb5cc6e_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e7904b4c:;
			{
				if (_22eb5cc6e_COMPILER_PATH.empty()) {
					_22eb5cc6e_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1e7904a70:;
			{
				_1e49367b9_throw((jule::Str("invalid option value for --compiler: ", 37) + _22eb5ca0a_COMPILER));
			}
		}
		_match_end_1e7904553:;
	};
}



inline void _1e505d3b8_check_target_arch(jule::Str _23722_arch) {
	{
		auto &expr = _1e1908805_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1e7906852:;
		if (it != expr.end()) {
			jule::Str &_23812_distarch = *it;
			{
				if ((_23722_arch == _23812_distarch)) {
					return;;
				};
			}
			_iter_next_1e7906852:;
			++it;
			goto _iter_begin_1e7906852;
		}
		_iter_end_1e7906852:;
	};
	_1e49367b9_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23722_arch));
}



inline void _1e505d4ea_check_target_os(jule::Str _24620_os) {
	{
		auto &expr = _1e1908470_DISTOS;
		auto it = expr.begin();
		_iter_begin_1e7907aa6:;
		if (it != expr.end()) {
			jule::Str &_24712_distos = *it;
			{
				if ((_24620_os == _24712_distos)) {
					return;;
				};
			}
			_iter_next_1e7907aa6:;
			++it;
			goto _iter_begin_1e7907aa6;
		}
		_iter_end_1e7907aa6:;
	};
	_1e49367b9_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24620_os));
}



inline void _1e505d62c_check_target_flag(jule::Str& _25523_target) {
	if (_25523_target.empty()) {
		_1e49367b9_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2609_parts = _1e188d6d0_split(_25523_target,jule::Str("-", 1),-1LL);;
	if ((_2609_parts.len() != 2LL)) {
		_1e49367b9_throw((jule::Str("--target: undefined platform target format: ", 44) + _25523_target));
	};
	jule::Str _26510_os = _2609_parts[0LL];;
	jule::Str _26514_arch = _2609_parts[1LL];;
	std::tie(_26510_os,_26514_arch) = std::make_tuple(_2609_parts[0LL],_2609_parts[1LL]);
	if ((_26510_os != jule::Str("native", 6))) {
		_1e505d4ea_check_target_os(_26510_os);
		_1e1943b70_OS=_26510_os;
	};
	if ((_26514_arch != jule::Str("native", 6))) {
		_1e505d3b8_check_target_arch(_26514_arch);
		_1e1926d40_ARCH=_26514_arch;
	};
	_1e3ec2471_update_target();
}



inline void _1e505d75e_check_opt_flag(jule::Str& _27820_opt) {
	if (_27820_opt.empty()) {
		_1e49367b9_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27820_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1e790c308:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1e790c858:;
			{
				_1e226cc90_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1e790c0e9:;
			{
				_1e49367b9_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27820_opt));
			}
		}
		_match_end_1e790c094:;
	};
}



inline void _1e505dac2_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _22eb5ced3_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e790c8be:;
			{
				goto _match_end_1e790d6c2;
			}
		}
		else {
			_case_begin_1e790d2d7:;
			{
				_1e49367b9_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _22eb5ced3_CPP_STD));
			}
		}
		_match_end_1e790d6c2:;
	};
}



inline jule::Slice<jule::Str> _1e505dc04_check_flags(jule::Slice<jule::Str>& _30317_args) {
	jule::Str _30413_opt = jule::Str("L0", 2);;
	jule::Str _30513_target = jule::Str("native-native", 13);;
	jule::Ptr<_1e50595d4_FlagSet> _30713_fs = static__1e50598c0_new();;
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30413_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30513_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e50333c1_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb5d247_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb5d4ab_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb5ca0a_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb5cc6e_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb5e27b_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb5da50_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb5de6d_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1e7910d12_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb5ced3_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c5d781_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c67779_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c6bcab_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c5789b_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c736b9_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c789aa_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c91880_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1e791e617_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1c99080_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32913_content = ({
		auto except = _1e505a6d4_parse(_30713_fs.ptr(), _30317_args);
		(except.ok()) ? (except.result) : ({
			_1e49367b9_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1e4cbc7ed_check_compiler_flag();
	_1e505dac2_check_cpp_std_flag();
	_1e505d62c_check_target_flag(_30513_target);
	_1e505d75e_check_opt_flag(_30413_opt);
	return _32913_content;
}



inline void _1e505dd36_setup_sema_flags(jule::I64& _34226_flags) {
	if (_22eb5d247_SHADOWING) {
		_34226_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e4675e54_IR> _1e505de68_build_ir(jule::Slice<jule::Str>& _34814_args) {
	jule::Slice<jule::Str> _3499_content = _1e505dc04_check_flags(_34814_args);;
	jule::I64 _35113_sema_flags = static_cast<jule::I64>(0LL);;
	_1e505dd36_setup_sema_flags(_35113_sema_flags);
	if ((_3499_content.len() == 0LL)) {
		_1e49367b9_throw(_1e19054a0_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3499_content.len() > 1LL)) {
		_1e49367b9_throw((jule::Str("undefined content: ", 19) + _3499_content[1LL]));
	};
	jule::Str _35914_path;;
	jule::Bool _35920_ok;;
	std::tie(_35914_path,_35920_ok) = _1e1890b11_abs(_3499_content[0LL]);
	if ((!(_35920_ok))) {
		_1e49367b9_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2163c371d_Status> _3659_inf = ({
		auto except = static__1e189165b_of(_1e1927934_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1e49367b9_throw(_1e19054a0_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2163c371d_Status>();});
	});;
	if ((!(_22ebe5e06_is_dir(_3659_inf.ptr())))) {
		_1e49367b9_throw(_1e19054a0_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e4675e54_IR> _37314_ir;;
	jule::Slice<_1e1905060_Log> _37318_logs;;
	std::tie(_37314_ir,_37318_logs) = static__1e1c9dd43_build(_35914_path,_35113_sema_flags);
	if (((_37314_ir == nullptr) && (_37318_logs == nullptr))) {
		_1e49367b9_throw(_1e19054a0_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35914_path)})));
	};
	if ((_37318_logs != nullptr)) {
		static__1e4935d4b_print_logs(_37318_logs);
		_1e49367b9_throw(jule::Str());
	};
	return _37314_ir;
}



inline void _1e505e09a_compile_command(jule::Slice<jule::Str>& _38825_args) {
	_38825_args=_38825_args.slice(1LL);
	if ((_38825_args[0LL] == jule::Str("test", 4))) {
		_22eb5d753_TEST=true;
		_38825_args=_38825_args.slice(1LL);
	};
	jule::Ptr<_1e4675e54_IR> _39413_ir = _1e505de68_build_ir(_38825_args);;
	;
	if ((!(_22eb5d753_TEST))) {
		jule::Ptr<_1e34019a0_Fn> _39917_main = _1e3eebc3c_find_fn(_39413_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39917_main == nullptr)) {
			_1e49367b9_throw(_1e19054a0_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1e50382a5_apply_target_independent_optimizations(_39413_ir);
	_1e41638cb_order(_39413_ir.ptr());
	jule::Str _41010_compiler;;
	jule::Str _41020_compiler_cmd;;
	std::tie(_41010_compiler,_41020_compiler_cmd) = _1e4e70099_gen_compile_cmd(_1e4d73e59_get_compile_path(),_39413_ir);
	jule::Ptr<_1e501c366_ObjectCoder> _41213_oc = static__1e5000349_new(_39413_ir,_1e501be8c_SerializationInfo{._field_compiler=_41010_compiler, ._field_compiler_command=_41020_compiler_cmd});;
	if (_22eb5d753_TEST) {
		jule::Ptr<_1e4ea73cd_TestCoder> _41717_tc = static__1e4ea7851_new(_41213_oc);;
		_1e4ea8a83_serialize(_41717_tc);
	} else {
		_1e5021865_serialize(_41213_oc);
	};
	jule::Str _4239_path = _1e4d73e59_get_compile_path();;
	jule::Ptr<_2163c3355_File> _42413_file = _1e4dcebb8_open_output(_4239_path);;
	({
		auto except = _2164685e8_write(_42413_file.ptr(), static_cast<jule::Slice<jule::U8>>(_41213_oc.get()._field_obj));
		if (!except.ok()) {
			_1e49367b9_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2162e660d_close(_42413_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:428:5"));
	});
	if ((!(_22eb5d4ab_TRANSPILATION))) {
		_1e50311c1_compile_ir(_41010_compiler,_41020_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_1e19176e3_init();
	_1e3ec25d6_init();
	_1e18de6a9_init();
	_1e4a28504_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}